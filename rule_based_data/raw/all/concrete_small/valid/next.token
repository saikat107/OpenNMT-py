@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { validatePage () ; }
@ com.android.annotations.NonNull public java.util.Map < java.lang.String , com.android.build.gradle.internal.ProductFlavorData < com.android.build.gradle.internal.dsl.GroupableProductFlavorDsl > > getProductFlavors () { return productFlavors ; }
@ com.android.annotations.NonNull public java.util.Set < com.android.manifmerger.XmlNode.NodeKey > getNodeKeys () { return mRecords . keySet () ; }
public void testOpenSocketAddress_Null ( ) throws java.io.IOException { try { java.nio.channels.SocketChannel . open ( null ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException e ) {} }
public int getProgress () { return ( mIncCoef ) > NUMBER_CONSTANT ? ( ( int ) ( ( mUi . getProgress () ) / ( mIncCoef ) ) ) : NUMBER_CONSTANT ; }
public int dexopt ( java.lang.String apkPath , int uid , boolean isPublic , java.lang.String instructionSet ) { return dexopt ( apkPath , uid , isPublic , STRING_CONSTANT , instructionSet , false , false ) ; }
public synchronized java.lang.String getBucketLabel ( int index ) { return libcore.icu.AlphabeticIndex . getBucketLabel ( peer , index ) ; }
private java.lang.String toZoneIdStr ( java.lang.String expected ) { return expected ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.OutputStream openWrite ( @ javax.annotation.Nonnull com.android.sched.vfs.CaseInsensitiveFS.CaseInsensitiveVFile file ) throws com.android.sched.util.file.WrongPermissionException { return openWrite ( file , false ) ; }
@ org.junit.Test public void testInitialize_remoteExceptionFailure ( ) throws java.lang.Exception { executeAndValidateInitializationSequence ( true , false , false , false ) ; }
private java.io.File getAppDataDir () { return new java.io.File ( org.chromium.base.PathUtils . getDataDirectory ( mContext ) ) ; }
public native java.lang.Object get ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
int getPriority ( android.bluetooth.BluetoothDevice device ) { return Settings.Global . getInt ( getContentResolver () , Settings.Global . getBluetoothMapPriorityKey ( device . getAddress () ) , BluetoothProfile.PRIORITY_UNDEFINED ) ; }
final void attach ( android.content.Context context ) { attachBaseContext ( context ) ; mLoadedApk = android.app.ContextImpl . getImpl ( context ) . mLoadedApk ; }
public native void clear ( ) ;
public void run () { synchronized ( this ) { loadImage () ; crosshairLocation = model . getCrosshairLocation () ; zoom = model . getZoom () ; } }
public static long LongAddition () { long a ; long b ; long c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a + b ; return c ; }
@ java.lang.Override protected final T compute () { try { return realCompute () ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; return null ; } }
static void closeGuardOpen ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.lang.Object guardObj , @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.lang.String message ) {}
@ java.lang.Override protected void implConfigureBlocking ( boolean blocking ) throws java.io.IOException { libcore.io.IoUtils . setBlocking ( fd , blocking ) ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( getFrequency () , getProgramNumber () , getName () , getFilepath () ) ; }
synchronized void nTypeGetNativeData ( long id , long [] typeData ) { validate () ; rsnTypeGetNativeData ( mContext , id , typeData ) ; }
public static void end ( java.lang.String name ) { org.chromium.base.TraceEvent . end ( name , null ) ; }
@ java.lang.Override public boolean isOpened ( int slotId , int featureType ) throws android.os.RemoteException { return false ; }
@ java.lang.Override @ com.android.annotations.Nullable public java.lang.Integer getVersionCode () { return mVersionCode ; }
@ java.lang.Override public java.lang.Object expected () { return false ; }
@ java.lang.Override public void widgetDisposed ( org.eclipse.swt.events.DisposeEvent e ) { com.android.sdkuilib.internal.repository.sdkman2.ShellSizeAndPos . saveSizeAndPos ( mShell , com.android.sdkuilib.internal.repository.sdkman2.AvdManagerWindowImpl1.SIZE_POS_PREFIX ) ; onAndroidSdkUpdaterDispose () ; }
@ com.android.annotations.NonNull @ java.lang.Override public com.android.tools.lint.TypeDescriptor getType () { com.android.tools.lint.TypeDescriptor typeDescriptor = getTypeDescriptor ( mBinding.type ) ; assert typeDescriptor != null ; return typeDescriptor ; }
private libcore.util.ZoneInfo createZoneInfo ( int [] [] transitionTimes , int [] [] transitionTypes ) throws java.lang.Exception { return createZoneInfo ( transitionTimes , transitionTypes , java.lang.System . currentTimeMillis () ) ; }
public static void clearMarkers ( @ com.android.annotations.NonNull org.eclipse.core.resources.IResource resource ) { com.android.ide.eclipse.adt.internal.lint.EclipseLintClient . clearMarkers ( java.util.Collections . singletonList ( resource ) ) ; }
@ org.junit.Before public void before ( ) throws android.os.RemoteException { mContext = mActivityRule . getActivity () . getApplication () . getApplicationContext () ; }
@ java.lang.Override public long getSupportedProfiles () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return NUMBER_CONSTANT ; } return service . getSupportedProfiles () ; }
public static com.android.jack.dx.rop.code.RegisterSpec make ( int reg , com.android.jack.dx.rop.type.TypeBearer type , com.android.jack.dx.rop.code.LocalItem local ) { assert local != null ; return com.android.jack.dx.rop.code.RegisterSpec . intern ( reg , type , local ) ; }
public void addNewOutgoingCall () { java.lang.String callerId = STRING_CONSTANT ; connectionTag = com.android.dialer.simulator.impl.SimulatorSimCallManager . addNewOutgoingCall ( context , callerId , SimulatorSimCallManager.CALL_TYPE_RTT ) ; }
private void errorAndExit ( java.lang.String format , java.lang.Object . . . args ) { mSdkLog . error ( null , format , args ) ; exit ( NUMBER_CONSTANT ) ; }
synchronized void nProgramBindTexture ( long vpf , int slot , long a ) { validate () ; rsnProgramBindTexture ( mContext , vpf , slot , a ) ; }
public void callSessionRttMessageReceived ( java.lang.String rttMessage ) { try { mListener . callSessionRttMessageReceived ( rttMessage ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
@ com.android.compatibility.common.util.CddTest ( requirement = STRING_CONSTANT ) public void testNetdDomain ( ) throws com.android.tradefed.device.DeviceNotAvailableException { assertDomainN ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
public void removePeriodicSync ( android.accounts.Account account , int userId , java.lang.String providerName , android.os.Bundle extras ) { updateOrRemovePeriodicSync ( account , userId , providerName , extras , NUMBER_CONSTANT , false ) ; }
private final native void writeInt16Vector ( short [] val ) ;
protected boolean isMarked ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode node ) { return node . containsMarker ( markerClass ) ; }
@ java.lang.Override protected void onDetachedFromWindow () { super . onDetachedFromWindow () ; final android.view.ViewTreeObserver treeObserver = getViewTreeObserver () ; treeObserver . removeOnTouchModeChangeListener ( this ) ; }
@ javax.annotation.Nonnull public final com.android.jack.test.runner.AbstractRuntimeRunner setErrorStream ( @ javax.annotation.Nonnull java.io.OutputStream errorStream ) { errRedirectStream = errorStream ; return this ; }
private native boolean handleCallActionNative ( byte [] address , int action , int index ) ;
public void onAppStatusChanged ( android.bluetooth.BluetoothDevice pluggedDevice , android.bluetooth.BluetoothHidDeviceAppConfiguration config , boolean registered ) { android.util.Log . d ( android.bluetooth.BluetoothHidDeviceCallback.TAG , ( ( ( STRING_CONSTANT + pluggedDevice ) + STRING_CONSTANT ) + registered ) ) ; }
private void processOne ( java.lang.String pathname , com.android.dx.cf.direct.ClassPathOpener.FileNameFilter filter ) { com.android.dx.cf.direct.ClassPathOpener opener ; opener = new com.android.dx.cf.direct.ClassPathOpener ( pathname , true , filter , new com.android.dx.command.dexer.Main.FileBytesConsumer () ) ; if ( opener . process () ) { updateStatus ( true ) ; } }
public synchronized com.ibm.icu.text.DecimalFormatSymbols getDecimalFormatSymbols () { return ( ( com.ibm.icu.text.DecimalFormatSymbols ) ( symbols . clone () ) ) ; }
@ org.junit.Before public void setUp ( ) throws com.android.sched.util.config.ConfigurationException { com.android.sched.util.config.ThreadConfig . setConfig ( new com.android.sched.util.config.AsapConfigBuilder ( false ) . build () ) ; }
@ java.lang.Override public boolean isLabelProperty ( java.lang.Object element , java.lang.String property ) { return super . isLabelProperty ( element , property ) ; }
@ java.lang.Override public void onSessionDestroyed () { android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , STRING_CONSTANT ) ; if ( ( mMediaController ) != null ) { removeMediaController ( mMediaController . getWrappedInstance () ) ; } }
private void notifyVolumeChanged ( int volume ) { mAudioManager . setStreamVolume ( AudioManager.STREAM_MUSIC , volume , ( ( android.media.AudioManager.FLAG_SHOW_UI ) | ( android.media.AudioManager.FLAG_BLUETOOTH_ABS_VOLUME ) ) ) ; }
@ java.lang.Override public void close () { synchronized ( channelImpl ) { super . close () ; if ( channelImpl . isOpen () ) { try { channelImpl . close () ; } catch ( java.io.IOException e ) {} } } }
@ java.lang.Override public void callSessionConferenceStateUpdated ( com.android.ims.ImsConferenceState state ) { if ( ( mListener ) != null ) { mListener . callSessionConferenceStateUpdated ( this , state ) ; } }
synchronized long nAllocationIoReceive ( long alloc ) { validate () ; return rsnAllocationIoReceive ( mContext , alloc ) ; }
@ org.junit.Test public void testCompareFiboDexFileWithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.FibonacciThreeAddressTest.JAVA_FILEPATH , false ) ; }
@ java.lang.Override public boolean isOffloadedScanBatchingSupported () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return false ; } int val = service . getOffloadedScanResultStorage () ; return val >= ( com.android.bluetooth.btservice.AdapterService.MIN_OFFLOADED_SCAN_STORAGE_BYTES ) ; }
private static com.android.server.timezone.RulesManagerService create ( android.content.Context context ) { com.android.server.timezone.RulesManagerServiceHelperImpl helper = new com.android.server.timezone.RulesManagerServiceHelperImpl ( context ) ; return new com.android.server.timezone.RulesManagerService ( helper , helper , com.android.server.timezone.PackageTracker . create ( context ) , new libcore.tzdata.update2.TimeZoneDistroInstaller ( com.android.server.timezone.RulesManagerService.TAG , com.android.server.timezone.RulesManagerService.SYSTEM_TZ_DATA_FILE , com.android.server.timezone.RulesManagerService.TZ_DATA_DIR ) ) ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { fFormat = com.ibm.icu.text.DateFormat . getInstance () ; }
public void sendSetDialing ( java.lang.String id ) throws java.lang.Exception { mConnectionById . get ( id ) . state = android.telecom.Connection.STATE_DIALING ; for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . setDialing ( id , null ) ; } }
public static org.hamcrest.org.hamcrest.Matcher < java.lang.Object > nullValue () { return org.hamcrest.core.IsNull . nullValue () ; }
@ org.junit.Test public void testStaticWithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.JillTestTools . getJackTestsWithJackFolder ( STRING_CONSTANT ) , false ) ; }
@ com.android.annotations.NonNull public java.lang.String getApplicationId () { return variantConfiguration . getApplicationId () ; }
public static void run () { art.Test984 . doTest () ; }
public void update ( byte [] input , int inOff , int len ) { md5 . update ( input , inOff , len ) ; sha1 . update ( input , inOff , len ) ; }
public void setDescription ( java.lang.String format , java.lang.Object . . . args ) ;
public java.lang.String getDescriptor () { return descriptor ; }
com.android.ims.internal.IImsConfig getConfigInterface ( ) throws android.os.RemoteException ;
void println ( com.android.ahat.DocString string ) ;
public com.android.layoutlib.api.SceneResult moveChild ( java.lang.Object parentView , java.lang.Object childView , int index , com.android.layoutlib.api.LayoutScene.IAnimationListener listener ) { return SceneStatus.NOT_IMPLEMENTED . getResult () ; }
@ java.lang.Override public java.lang.String toString () { return java.lang.String . format ( STRING_CONSTANT , getClassName () , getTestName () ) ; }
public native boolean isAssignableFrom ( java.lang.Class < > c ) ;
public static void computeLog2 ( android.renderscript.cts.TestLog2.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . log2 ( args.inV , t ) ; }
private void refreshUI () { int nFrames = NUMBER_CONSTANT ; nFrames = ( ( mTrace ) == null ) ? NUMBER_CONSTANT : mTrace . getFrames () . size () ; setFrameCount ( nFrames ) ; selectFrame ( NUMBER_CONSTANT ) ; }
public void testSameConfigurationSplitFullSplitNoRelaunch ( ) throws java.lang.Exception { moveActivitySplitFullSplit ( android.server.cts.ActivityManagerAppConfigurationTests.RESIZEABLE_ACTIVITY_NAME ) ; }
@ com.android.annotations.NonNull com.android.build.gradle.internal.variant.BaseVariantData createVariantData ( @ com.android.annotations.NonNull com.android.build.gradle.internal.core.GradleVariantConfiguration variantConfiguration , @ com.android.annotations.NonNull com.android.build.gradle.internal.TaskManager taskManager ) ;
@ org.junit.Test public void testMethodRef002 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( METHODREF002 ) . setSourceLevel ( SourceLevel.JAVA_8 ) . compileAndRunTest () ; }
@ java.lang.Override public boolean dispatchKeyEvent ( android.view.KeyEvent event ) { return event . dispatch ( this , null , null ) ; }
final void appDiedLocked ( com.android.server.am.ProcessRecord app ) { appDiedLocked ( app , app.pid , app.thread , false ) ; }
public static void assertEqualSessions ( long expected , long actual ) { org.apache.harmony.xnet.provider.jsse.NativeCryptoTest . assertEqualByteArrays ( org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_SESSION_session_id ( expected ) , org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_SESSION_session_id ( actual ) ) ; }
@ java.lang.Override public void setUiTTYMode ( int slotId , int featureType , int uiTtyMode , android.os.Message onComplete ) throws android.os.RemoteException {}
@ java.lang.Override public UResource.ArraySink getOrCreateArraySink ( com.ibm.icu.impl.UResource.Key key ) { if ( key . contentEquals ( STRING_CONSTANT ) ) { return allowedFormatListSink ; } return null ; }
@ java.lang.Override public void run () { assert ( mRunLoopID ) != NUMBER_CONSTANT : STRING_CONSTANT ; nativeRun () ; }
@ java.lang.Override public void onAudioStateChanged ( android.telecom.CallAudioState audioState ) { updateNotification () ; }
private void saveNitzTime ( long time ) { mSavedTime = time ; mSavedAtTime = mDeviceState . elapsedRealtime () ; mNitzUpdatedTime = true ; }
public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { try { org.conscrypt.NativeCrypto . SSL_do_handshake ( org.conscrypt.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT , false , null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public static int ShrIntLong () { int lhs = NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs > > rhs ; }
private void handleRadioProxyExceptionForRR ( com.android.internal.telephony.RILRequest rr , java.lang.String caller , java.lang.Exception e ) { riljLoge ( caller , e ) ; resetProxyAndRequestList () ; }
public double timeScalbD ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . scalb ( d , NUMBER_CONSTANT ) ; } return result ; }
@ android.support.annotation.VisibleForTesting public void dispatchCallStateChanged ( int newState ) { for ( com.android.incallui.videotech.VideoTech videoTech : videoTechs ) { videoTech . onCallStateChanged ( context , newState ) ; } }
@ com.android.annotations.NonNull static com.android.build.gradle.tasks.annotations.Extractor.ClassItem create ( @ com.android.annotations.NonNull java.lang.String classFqn ) { classFqn = com.android.build.gradle.tasks.annotations.ApiDatabase . getRawClass ( classFqn ) ; return new com.android.build.gradle.tasks.annotations.Extractor.ClassItem ( classFqn ) ; }
public static java.lang.String map2OID ( java.lang.String algName ) { return org.apache.harmony.security.utils.AlgNameMapper.alg2OidMap . get ( algName . toUpperCase ( java.util.Locale.US ) ) ; }
private org.eclipse.wst.xml.core.internal.provisional.document.IDOMDocument getDOMDocument () { org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel xmlModel = ( ( org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel ) ( mModel ) ) ; org.eclipse.wst.xml.core.internal.provisional.document.IDOMDocument xmlDoc = xmlModel . getDocument () ; return xmlDoc ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { Main . doTest () ; Main . doFollowReferencesTest () ; }
@ android.annotation.SystemApi public abstract java.lang.String getCookie ( java.lang.String url , boolean privateBrowsing ) ;
public static com.ibm.icu.impl.number.Properties parseToProperties ( java.lang.String pattern , int ignoreRounding ) { com.ibm.icu.impl.number.Properties properties = new com.ibm.icu.impl.number.Properties () ; com.ibm.icu.impl.number.PatternString.LdmlDecimalPatternParser . parse ( pattern , properties , ignoreRounding ) ; return properties ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( new Transform () , new Main.TestWatcher () ) ; }
private static synchronized native int followingImpl ( int address , java.lang.String text , int offset ) ;
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . arg ) { if ( ! ( mLogErrorsOnly ) ) { logMessages . add ( java.lang.String . format ( msgFormat , arg ) ) ; } }
@ java.lang.Deprecated public abstract void setPluginState ( android.webkit.WebSettings.PluginState state ) ;
private void updateButtonState () { mOkButton . setEnabled ( ( ( ( com.android.uiautomator.OpenDialog.sXmlDumpFile ) != null ) && ( com.android.uiautomator.OpenDialog.sXmlDumpFile . isFile () ) ) ) ; }
public void test_getSession ( ) throws java.lang.Exception { javax.net.ssl.SSLEngine sse = getEngine () ; assertNotNull ( sse . getSession () ) ; }
@ java.lang.Override public void runUntilIdle () { assert ( mRunLoopID ) != NUMBER_CONSTANT : STRING_CONSTANT ; nativeRunUntilIdle () ; }
@ java.lang.Override protected void engineInit ( int opmode , java.security.Key key , java.security.SecureRandom random ) throws java.security.InvalidKeyException { try { engineInitInternal ( opmode , key , null , random ) ; } catch ( java.security.InvalidAlgorithmParameterException e ) { throw new java.lang.RuntimeException ( e ) ; } }
private void addKeyPending ( android.view.KeyEvent event ) { mPassthroughPending . add ( new com.android.bluetooth.avrcp.Avrcp.MediaKeyLog ( java.lang.System . currentTimeMillis () , event ) ) ; }
@ android.support.annotation.WorkerThread public static void markAllNewVoicemailsAsRead ( @ android.support.annotation.NonNull final android.content.Context context ) { com.android.dialer.common.concurrent.ThreadUtil . postOnUiThread ( ( ) - > { new com.android.dialer.app.calllog.VoicemailQueryHandler ( context . getContentResolver () ) . markNewVoicemailsAsOld ( context , null ) ; } ) ; }
private void maybeDisconnectAdapter () { if ( ( mConnectionById . isEmpty () ) && ( mConferenceById . isEmpty () ) ) { try { mOutgoingConnectionServiceRpc . removeConnectionServiceAdapter ( mServant . getStub () , null ) ; } catch ( android.os.RemoteException e ) {} } }
public final T call () { try { return realCall () ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; return null ; } }
@ java.lang.Override public void startDtmf ( char c ) { this . startDtmf ( c ) ; }
void initRttCallScreenDelegate ( com.android.incallui.rtt.protocol.RttCallScreen rttCallScreen ) ;
@ java.lang.Override protected void ensureSorted () { if ( ! ( isSorted ) ) { java.util.Arrays . sort ( samples , NUMBER_CONSTANT , count ) ; isSorted = true ; } }
@ java.lang.Override protected void tearDown ( ) throws java.lang.Exception { if ( ( videoView ) != null ) { getHelper () . cleanUpView ( videoView ) ; } if ( ( videoViewFactory ) != null ) { videoViewFactory . release () ; } super . tearDown () ; }
private boolean isLowDataExpected () { return ( ( ! ( mIsCharging ) ) && ( ! ( mIsTetheringOn ) ) ) && ( ! ( mIsScreenOn ) ) ; }
private boolean isNetworkAvailable () { if ( ( mConnMgr ) == null ) { return false ; } else { android.net.NetworkInfo ni = mConnMgr . getNetworkInfo ( ConnectivityManager.TYPE_MOBILE_MMS ) ; return ni == null ? false : ni . isAvailable () ; } }
private static void waitFor ( android.os.ConditionVariable conditionVariable ) { assertTrue ( conditionVariable . block ( com.android.server.ConnectivityServiceTest.TIMEOUT_MS ) ) ; }
@ java.lang.Deprecated public abstract void setAppCacheMaxSize ( long appCacheMaxSize ) ;
private void cleanup () { if ( ( mAdapterProperties ) != null ) mAdapterProperties = null ; if ( ( mAdapterService ) != null ) mAdapterService = null ; }
@ java.lang.Override public void endVisit ( org.eclipse.jdt.internal.compiler.ast.LongLiteral x , org.eclipse.jdt.internal.compiler.lookup.BlockScope scope ) { try { push ( new com.android.jack.ir.ast.JLongLiteral ( makeSourceInfo ( x ) , x.constant . longValue () ) ) ; } catch ( java.lang.RuntimeException e ) { throw translateException ( x , e ) ; } }
public static int UShrIntLong () { int lhs = - NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs > > > rhs ; }
android.service.voice.VoiceInteractionSession.Request removeRequest ( android.os.IBinder reqInterface ) { synchronized ( this ) { return mActiveRequests . remove ( reqInterface ) ; } }
@ org.junit.Test @ android.test.suitebuilder.annotation.SmallTest public void testCreateNullPdu () { android.telephony.SmsCbMessage msg = createFromPdu ( null ) ; assertNull ( STRING_CONSTANT , msg ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String packageName = intent . getStringExtra ( Intent.EXTRA_PACKAGE_NAME ) ; com.android.voicemail.impl.VvmLog . i ( STRING_CONSTANT , ( STRING_CONSTANT + packageName ) ) ; com.android.voicemail.impl.VvmPackageInstallHandler . handlePackageInstalled ( context ) ; }
@ org.junit.Test public void classObjNotABitmap ( ) throws java.io.IOException { com.android.ahat.TestDump dump = com.android.ahat.TestDump . getTestDump () ; com.android.ahat.heapdump.AhatInstance obj = dump . findClass ( STRING_CONSTANT ) ; org.junit.Assert . assertNull ( obj . asBitmap () ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void finalizer ( long native_instance ) { android.graphics.Rasterizer_Delegate.sManager . removeJavaReferenceFor ( native_instance ) ; }
@ java.lang.Override public void createPartControl ( org.eclipse.swt.widgets.Composite parent ) { mPanel = new com.android.ddmuilib.EmulatorControlPanel () ; mPanel . createPanel ( parent ) ; setSelectionDependentPanel ( mPanel ) ; }
public static org.chromium.base.ResourceExtractor get () { if ( ( org.chromium.base.ResourceExtractor.sInstance ) == null ) { org.chromium.base.ResourceExtractor.sInstance = new org.chromium.base.ResourceExtractor () ; } return org.chromium.base.ResourceExtractor.sInstance ; }
public synchronized void setNegativeSuffix ( java.lang.String suffix ) { if ( suffix == null ) { throw new java.lang.NullPointerException () ; } properties . setNegativeSuffix ( suffix ) ; refreshFormatter () ; }
@ java.lang.Override public java.lang.Class < > [] getParameterTypes () { return java.lang.Class . findOverriddenMethodIfProxy ( artMethod ) . getParameterTypes () ; }
public android.icu.impl.UResource.TableSink getOrCreateTableSink ( android.icu.impl.UResource.Key key ) { return null ; }
public org.eclipse.core.resources.IFile getOutput () { if ( ( mOutputFiles . size () ) > NUMBER_CONSTANT ) { return mOutputFiles . get ( NUMBER_CONSTANT ) ; } return null ; }
public void testCompareTo_Null () { tests.api.java.nio.charset.CharsetTest.MockCharset c1 = new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , null ) ; try { c1 . compareTo ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public void ping ( java.lang.String app , java.lang.String version ) { doPing ( app , version , null ) ; }
public void testReplaceValue3_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . replace ( STRING_CONSTANT , one , null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public void disableOptionalCodecs ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.a2dp.A2dpService service = getService () ; if ( service == null ) { return; } service . disableOptionalCodecs ( device ) ; }
java.util.Set < java.lang.String > getAllMethods ( com.android.tools.lint.checks.Api info ) { java.util.Set < java.lang.String > members = new java.util.HashSet < java.lang.String > ( NUMBER_CONSTANT ) ; addAllMethods ( info , members , true ) ; return members ; }
@ java.lang.Override public com.google.common.base.Joiner useForNull ( java.lang.String nullText ) { throw new java.lang.UnsupportedOperationException ( STRING_CONSTANT ) ; }
public void testLogger1 ( ) throws java.lang.Exception { com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderLogger l = new com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderLogger ( STRING_CONSTANT , null ) ; assertFalse ( l . hasProblems () ) ; }
public static boolean isInCall ( android.content.Context context ) { return com.android.dialer.telecom.TelecomUtil.instance . isInCall ( context ) ; }
@ java.lang.Override protected void onResume () { super . onResume () ; if ( null == ( mRS ) ) { init () ; } }
@ javax.annotation.CheckForNull private T getLoadedProgram () { return loadedProgram . get () ; }
@ java.lang.Override public javax.net.ssl.SSLParameters getSSLParameters () { javax.net.ssl.SSLParameters params = super . getSSLParameters () ; org.conscrypt.Platform . getSSLParameters ( params , sslParameters , this ) ; return params ; }
public void testConstructor2 () { try { new java.util.PriorityQueue ( NUMBER_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.IllegalArgumentException success ) {} }
private void setInsertPos ( int insertPos ) { mInsertPos = insertPos ; }
synchronized void nFileA3DGetIndexEntries ( long fileA3D , int numEntries , int [] IDs , java.lang.String [] names ) { validate () ; rsnFileA3DGetIndexEntries ( mContext , fileA3D , numEntries , IDs , names ) ; }
public void testUtilityFunctions () { android.renderscript.cts.ScriptC_primitives t = new android.renderscript.cts.ScriptC_primitives ( mRS , mRes , R.raw.utils ) ; t . invoke_test () ; waitForMessage () ; assertEquals ( android.renderscript.cts.RS_MSG_TEST_PASSED , result ) ; }
@ java.lang.Override public final java.math.BigInteger getPrivateExponent () { ensureReadParams () ; return privateExponent ; }
void addDc ( com.android.internal.telephony.dataconnection.DataConnection dc ) { synchronized ( mDcListAll ) { mDcListAll . add ( dc ) ; } }
public static java.lang.String getenv ( java.lang.String name ) { if ( name == null ) { throw new java.lang.NullPointerException ( STRING_CONSTANT ) ; } return Libcore.os . getenv ( name ) ; }
public void flush () { try { delegate . flush () ; } catch ( java.io.IOException ignored ) {} }
java.lang.String getName ( ) ;
private static java.lang.String encodeClassLoaderChain ( java.lang.String cl1 , java.lang.String cl2 ) { if ( cl1 . isEmpty () ) return cl2 ; if ( cl2 . isEmpty () ) return cl1 ; return ( cl1 + STRING_CONSTANT ) + cl2 ; }
@ java.lang.Override public void addressUpdated ( java.lang.String iface , android.net.LinkAddress address ) {}
private void assertIsActive ( int index ) { if ( ( index < ( mActiveStart ) ) || ( index >= ( mActiveEnd ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( STRING_CONSTANT , index , mActiveStart , mActiveEnd ) ) ; } }
synchronized void nElementGetSubElements ( long id , long [] IDs , java.lang.String [] names , int [] arraySizes ) { validate () ; rsnElementGetSubElements ( mContext , id , IDs , names , arraySizes ) ; }
native long rsnScriptIntrinsicCreate ( long con , int id , long eid ) ;
@ java.lang.Override public final boolean isCapable ( @ android.telephony.ims.internal.feature.MmTelFeature.MmTelCapabilities.MmTelCapability int capabilities ) { return super . isCapable ( capabilities ) ; }
@ java.lang.Override public void ignore ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { if ( location != null ) { ignore ( issue , location . getFile () ) ; } }
@ com.android.annotations.Nullable @ java.lang.Override public java.io.File getOutputFile () { return ( packageLibTask ) == null ? null : packageLibTask . getArchivePath () ; }
protected synchronized native int peekData ( java.net.DatagramPacket p ) throws java.io.IOException ;
public void resetAvrcpBlacklist ( android.bluetooth.BluetoothDevice device ) { if ( ( mAvrcp ) != null ) { mAvrcp . resetBlackList ( device . getAddress () ) ; } }
@ java.lang.Override void test () { if ( ( mNm . getEffectsSuppressor () ) == null ) { status = PASS ; } else { status = FAIL ; } }
public void finishDrawing ( android.view.IWindow window ) { if ( com.android.server.WindowManagerService.localLOGV ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + window ) ) ; finishDrawingWindow ( this , window ) ; }
public static int min ( int i1 , int i2 ) { return i1 < i2 ? i1 : i2 ; }
@ java.lang.Override public boolean onCreate () { checkDatabases () ; com.android.email.Email . setServicesEnabledAsync ( getContext () ) ; return false ; }
@ java.lang.Override public void startTimer ( java.lang.String timerEventName ) {}
public void test_setOOBInlineZ ( ) throws java.lang.Exception { try ( java.net.Socket theSocket = new java.net.Socket () ) { theSocket . setOOBInline ( true ) ; assertTrue ( STRING_CONSTANT , theSocket . getOOBInline () ) ; } }
public long getDelayUntilTime ( android.accounts.Account account , int userId , java.lang.String providerName ) { synchronized ( mAuthorities ) { android.content.SyncStorageEngine.AuthorityInfo authority = getAuthorityLocked ( account , userId , providerName , STRING_CONSTANT ) ; if ( authority == null ) { return NUMBER_CONSTANT ; } return authority.delayUntil ; } }
public static native java.lang.ClassLoader getClosestUserClassLoader ( ) ;
public void testVersion12 () { android.renderscript.cts.ScriptC_set_target_api_12 test12 = new android.renderscript.cts.ScriptC_set_target_api_12 ( mRS ) ; test12 . invoke_check ( NUMBER_CONSTANT ) ; waitForMessage () ; checkForErrors () ; }
private static boolean needsToSignIn () { java.util.Map < java.lang.String , com.google.gct.login.CredentialedUser > users = com.google.gct.login.GoogleLogin . getInstance () . getAllUsers () ; return users . isEmpty () ; }
public void answer ( int videoState ) { try { if ( mConnected ) { mConnectionService . answerVideo ( mConnectionId , videoState , null ) ; } } catch ( android.os.RemoteException ignored ) {} }
private void _testOneLine ( java.lang.String line ) throws java.lang.Exception { java.lang.String [] fields = new java.lang.String [ NUMBER_CONSTANT ] ; java.lang.StringBuffer buf = new java.lang.StringBuffer () ; android.icu.dev.test.normalizer.UnicodeNormalizerConformanceTest . hexsplit ( line , CHAR_CONS , fields , buf ) ; checkConformance ( fields , line ) ; }
public static int consistentHash ( com.google.common.hash.HashCode hashCode , int buckets ) { return com.google.common.hash.Hashing . consistentHash ( hashCode . padToLong () , buckets ) ; }
private static native java.lang.ClassLoader getClassLoader ( java.lang.Class < > c ) ;
public boolean isImsRegistered ( int subId ) { com.android.internal.telephony.Phone phone = getPhone ( subId ) ; if ( phone != null ) { return phone . isImsRegistered () ; } else { return false ; } }
@ java.lang.Override public native void doAbort ( java.lang.String msg ) ;
@ java.lang.Override public void setUiTtyMode ( int uiTtyMode , android.os.Message onCompleteMessage ) throws android.os.RemoteException { synchronized ( mLock ) { try { this . setUiTtyMode ( uiTtyMode , onCompleteMessage ) ; } catch ( java.lang.Exception e ) { throw new android.os.RemoteException ( e . getMessage () ) ; } } }
@ java.lang.Override public byte [] call ( ) throws java.io.IOException { return writeDex ( dexFile ) ; }
public static boolean isSniEnabledByDefault () { return true ; }
abstract double getDoubleUnchecked ( int index ) ;
public void setSkins ( @ com.android.annotations.NonNull java.io.File [] skins ) { mSkins = skins ; }
public int hashCode () { return java.lang.Double . hashCode ( value ) ; }
@ java.lang.Override public java.util.List < android.bluetooth.BluetoothDevice > getDevicesMatchingConnectionStates ( int [] states ) { com.android.bluetooth.hearingaid.HearingAidService service = getService () ; if ( service == null ) { return new java.util.ArrayList <> () ; } return service . getDevicesMatchingConnectionStates ( states ) ; }
public static com.android.resources.LayoutDirection getByIndex ( int index ) { com.android.resources.LayoutDirection [] values = com.android.resources.LayoutDirection . values () ; if ( ( index >= NUMBER_CONSTANT ) && ( index < ( values.length ) ) ) { return values [ index ] ; } return null ; }
static final java.lang.Object unmaskNull ( java.lang.Object key ) { return key == ( java.util.IdentityHashMap.NULL_KEY ) ? null : key ; }
public void visitProgramClass ( proguard.shrink.ProgramClass programClass ) { if ( usageMarker . isUsed ( programClass ) ) { attributeUsed = true ; } }
public static java.lang.String escape ( java.lang.CharSequence input ) { if ( input == null ) return null ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; com.ibm.icu.impl.number.AffixUtils . escape ( input , sb ) ; return sb . toString () ; }
@ java.lang.Override public void f ( java.lang.String s ) { c . substring ( NUMBER_CONSTANT ) . toString () ; }
@ java.lang.Override public void setSimCardPower ( int state , android.os.Message result ) {}
public static void main ( java.lang.String [] args ) { Main.TestWatcher w = new Main.TestWatcher () ; Main . doTest ( new Transform ( w ) , w ) ; }
native long rsnScriptCCreate ( long con , java.lang.String resName , java.lang.String cacheDir , byte [] script , int length ) ;
@ java.lang.Override public void setDescription ( final java.lang.String description ) { if ( acceptLog ( description ) ) { mSdkLog . info ( STRING_CONSTANT , description ) ; } }
public java.lang.String getLayoutResourceName () { com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart graphicalEditor = getGraphicalEditor () ; return graphicalEditor . getLayoutResourceName () ; }
@ java.lang.Override public void run () { if ( ( mChannelScanTask ) != null ) { mChannelScanTask . showFinishingProgressDialog () ; } }
@ java.lang.Override public byte [] getEncoded ( java.lang.String encoding ) throws java.security.cert.CertificateEncodingException { org.apache.harmony.xnet.provider.jsse.OpenSSLX509CertPath.Encoding enc = org.apache.harmony.xnet.provider.jsse.OpenSSLX509CertPath.Encoding . findByApiName ( encoding ) ; if ( enc == null ) { throw new java.security.cert.CertificateEncodingException ( ( STRING_CONSTANT + encoding ) ) ; } return getEncoded ( enc ) ; }
public void checkGuard ( java.lang.Object object ) throws java.lang.SecurityException {}
@ java.lang.Override public void openContentEntriesSettings ( final com.intellij.openapi.module.Module module ) { com.intellij.openapi.roots.ui.configuration.ModulesConfigurator . showDialog ( myProject , module . getName () , ContentEntriesEditor.NAME ) ; }
@ java.lang.Override public void onChange ( boolean selfChange ) { super . onChange ( selfChange ) ; mNotificationEnabled = getValue () ; resetNotification () ; }
@ java.lang.Override public void run () { mKeyguardDelegate . dismiss () ; }
private java.lang.CharSequence getVvmDialerTos () { return context . getString ( R.string.dialer_terms_and_conditions_for_verizon_1_0 ) ; }
public static android.renderscript.ScriptIntrinsicLUT create ( android.renderscript.RenderScript rs , android.renderscript.Element e ) { long id = rs . nScriptIntrinsicCreate ( NUMBER_CONSTANT , e . getID ( rs ) ) ; return new android.renderscript.ScriptIntrinsicLUT ( id , rs ) ; }
public boolean connectAudio () { return mBluetoothHeadset . connectAudio () ; }
public static int getModCount () { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . lock () ; try { return com.intellij.openapi.vfs.newvfs.persistent.FSRecords . getRecords () . getInt ( com.intellij.openapi.vfs.newvfs.persistent.FSRecords.HEADER_GLOBAL_MOD_COUNT_OFFSET ) ; } finally { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . unlock () ; } }
protected native void join ( java.net.InetAddress inetaddr , java.net.NetworkInterface netIf ) throws java.io.IOException ;
public static double DoubleRemainder () { double a ; double b ; double c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a % b ; return c ; }
synchronized long nFileA3DCreateFromAssetStream ( long assetStream ) { validate () ; return rsnFileA3DCreateFromAssetStream ( mContext , assetStream ) ; }
public static com.android.ide.common.resources.ResourceUrl create ( @ com.android.annotations.NonNull com.android.resources.ResourceType type , @ com.android.annotations.NonNull java.lang.String name , boolean framework , boolean create ) { return new com.android.ide.common.resources.ResourceUrl ( type , name , framework , create , false ) ; }
@ java.lang.Override public void onIntrData ( android.bluetooth.BluetoothDevice device , byte reportId , byte [] data ) { mCallback . onIntrData ( device , reportId , data ) ; }
synchronized void nElementGetSubElements ( long id , long [] IDs , java.lang.String [] names , int [] arraySizes ) { validate () ; rsnElementGetSubElements ( mContext , id , IDs , names , arraySizes ) ; }
private boolean isMarked ( @ javax.annotation.Nonnull com.android.sched.marker.MarkerManager node ) { return node . containsMarker ( com.android.jack.shrob.obfuscation.KeepNameMarker . class ) ; }
private void waitForIdle () { waitForIdle ( com.android.server.ConnectivityServiceTest.TIMEOUT_MS ) ; }
@ java.lang.Override public abstract void srcToExe ( @ javax.annotation.Nonnull java.io.File out , boolean zipFile , @ javax.annotation.Nonnull java.io.File . . . sources ) throws java.lang.Exception ;
@ java.lang.Override protected void onLayout ( boolean changed , int left , int top , int right , int bottom ) { super . onLayout ( changed , left , top , right , bottom ) ; loadImageIfNecessary ( true ) ; }
public void await ( java.util.concurrent.Semaphore semaphore ) { try { assertTrue ( semaphore . tryAcquire ( jsr166.JSR166TestCase.LONG_DELAY_MS , java.util.concurrent.TimeUnit.MILLISECONDS ) ) ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; } }
@ java.lang.Override protected void tearDown () { mNm . setInterruptionFilter ( NotificationManager.INTERRUPTION_FILTER_ALL ) ; mNm . cancelAll () ; deleteChannels () ; com.android.cts.verifier.notifications.MockListener . getInstance () . resetData () ; }
public native java.lang.Object invoke ( java.lang.Object receiver , java.lang.Object . . . args ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.reflect.InvocationTargetException ;
public static java.lang.String [] getProjection () { return ( android.os.Build.VERSION.SDK_INT ) >= ( android.os.Build.VERSION_CODES.N_MR1 ) ? com.android.dialer.voicemailstatus.VoicemailStatusQuery.PROJECTION_NMR1 : com.android.dialer.voicemailstatus.VoicemailStatusQuery.PROJECTION_N ; }
void setNdkSoFolder ( @ com.android.annotations.NonNull java.util.Collection < java.io.File > ndkSoFolder ) ;
@ com.android.annotations.NonNull public static java.lang.String prettyPrint ( @ com.android.annotations.NonNull org.w3c.dom.Node node ) { return com.android.ide.eclipse.adt.internal.editors.formatting.EclipseXmlPrettyPrinter . prettyPrint ( node , com.android.ide.eclipse.adt.internal.editors.formatting.EclipseXmlFormatPreferences . create () , com.android.ide.common.xml.XmlFormatStyle . get ( node ) , null ) ; }
@ java.lang.Override public void onConference ( android.telecom.Connection connection1 , android.telecom.Connection connection2 ) { synchronized ( android.telecom.cts.CtsConnectionService.sLock ) { if ( ( android.telecom.cts.CtsConnectionService.sConnectionService ) != null ) { android.telecom.cts.CtsConnectionService.sConnectionService . onConference ( connection1 , connection2 ) ; } } }
public void transform ( android.graphics.Matrix matrix , android.graphics.Path dst ) { long dstNative = NUMBER_CONSTANT ; if ( dst != null ) { dst.isSimplePath = false ; dstNative = dst.mNativePath ; } android.graphics.Path . native_transform ( mNativePath , matrix.native_instance , dstNative ) ; }
@ java.lang.Override protected void engineNextBytes ( byte [] bytes ) { org.conscrypt.NativeCrypto . RAND_bytes ( bytes ) ; }
synchronized long nScriptGroup2Create ( java.lang.String name , java.lang.String cachePath , long [] closures ) { validate () ; return rsnScriptGroup2Create ( mContext , name , cachePath , closures ) ; }
@ org.junit.Test public void testParseARPReply () { final java.lang.String packet = STRING_CONSTANT + ( ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) ; final java.lang.String expected = STRING_CONSTANT + STRING_CONSTANT ; org.junit.Assert . assertEquals ( expected , getSummary ( packet ) ) ; }
public void onCancel ( android.content.DialogInterface dialog ) { finish () ; }
@ java.lang.Override public void endVisit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JFieldRef fr ) { trace ( fr . getFieldId () , fr . getReceiverType () ) ; }
public void testVersion13 () { android.renderscript.cts.ScriptC_set_target_api_13 test13 = new android.renderscript.cts.ScriptC_set_target_api_13 ( mRS ) ; test13 . invoke_check ( NUMBER_CONSTANT ) ; waitForMessage () ; checkForErrors () ; }
public static void reportValue ( java.lang.Object val ) { java.lang.System.out . println ( ( ( ( ( STRING_CONSTANT + val ) + STRING_CONSTANT ) + ( val != null ? val . getClass () : STRING_CONSTANT ) ) + STRING_CONSTANT ) ) ; }
public static android.security.KeymasterException getExceptionForKeymasterError ( int keymasterErrorCode ) { switch ( keymasterErrorCode ) { case android.security.keymaster.KeymasterDefs.KM_ERROR_INVALID_AUTHORIZATION_TIMEOUT : return new android.security.KeymasterException ( keymasterErrorCode , STRING_CONSTANT ) ; default: return new android.security.KeymasterException ( keymasterErrorCode , android.security.keymaster.KeymasterDefs . getErrorMessage ( keymasterErrorCode ) ) ; } }
@ java.lang.Override public void setTTYMode ( int ttyMode , android.os.Message onComplete ) { mCT . setTtyMode ( ttyMode ) ; }
protected void finalize ( ) throws java.lang.Throwable { try { if ( ( guard ) != null ) { guard . warnIfOpen () ; } if ( ( fd ) != null ) close () ; } finally { super . finalize () ; } }
public void preInstallHook () { if ( sdk != null ) { com.android.ide.eclipse.adt.internal.build.DexWrapper dx = sdk . getDexWrapper () ; dx . unload () ; } }
public void testStageInstallWithErrorCode_unsuccessfulFirstUpdate_olderVersionThanSystem ( ) throws java.lang.Exception { com.android.timezone.distro.TimeZoneDistro distro = libcore.tzdata.update2.TimeZoneDistroInstallerTest . createValidTimeZoneDistro ( libcore.tzdata.update2.TimeZoneDistroInstallerTest.OLDER_RULES_VERSION , NUMBER_CONSTANT ) ; assertEquals ( TimeZoneDistroInstaller.INSTALL_FAIL_RULES_TOO_OLD , installer . stageInstallWithErrorCode ( distro ) ) ; assertNoDistroOperationStaged () ; assertNoInstalledDistro () ; }
@ android.support.annotation.RequiresPermission ( value = Manifest.permission.READ_PHONE_STATE ) public void updateNotification () { updateInCallNotification () ; }
@ java.lang.Override public void reset () { super . reset () ; if ( resetJack ) { session . reset () ; astBuilder = new com.android.jack.ir.impl.JackIrBuilder ( lookupEnvironment , session ) ; resetJack = false ; } }
@ org.junit.Test public void testSetupConnectedState () { setUpConnectedState () ; org.junit.Assert . assertEquals ( BluetoothProfile.STATE_CONNECTED , mHeadsetStateMachine . getConnectionState () ) ; org.junit.Assert . assertThat ( mHeadsetStateMachine . getCurrentState () , org.hamcrest.core.IsInstanceOf . instanceOf ( HeadsetStateMachine.Connected . class ) ) ; }
private void cleanup () { mAdapterService = null ; mRemoteDevices = null ; mAdapterProperties = null ; }
void send404 ( java.io.PrintStream ps ) throws java.io.IOException { ps . println ( ( STRING_CONSTANT + STRING_CONSTANT ) ) ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.InputStream openRead ( @ javax.annotation.Nonnull com.android.sched.vfs.DeflateFS.DeflateVFile file ) throws com.android.sched.util.file.WrongPermissionException { return new java.util.zip.InflaterInputStream ( vfs . openRead ( file . getWrappedFile () ) ) ; }
@ java.lang.Override public void afterCheckProject ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context ) { checkResourceFolder ( context , context . getProject () ) ; }
public void verify ( java.security.PublicKey key , java.security.Provider sigProvider ) throws java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.SignatureException , java.security.cert.CertificateException { super . verify ( key , sigProvider ) ; }
@ java.lang.Deprecated public java.lang.String [] getDigitStringsLocal () { return digitStrings ; }
@ org.junit.Test public void testInitialize_zeroInterfacesFailure ( ) throws java.lang.Exception { executeAndValidateInitializationSequence ( false , true , false , false ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) static java.lang.String getEndpointIdentificationAlgorithm ( javax.net.ssl.SSLParameters params ) { return params . getEndpointIdentificationAlgorithm () ; }
@ android.test.suitebuilder.annotation.MediumTest public void testJavaStrings () { assertEquals ( STRING_CONSTANT , mAppTextView2 . getText () . toString () ) ; assertEquals ( STRING_CONSTANT , mLibTextView2 . getText () . toString () ) ; }
@ java.lang.Override public void free () { array = null ; super . free () ; }
@ java.lang.Override public void onStreamMethodUpdated ( int method ) { this . onStreamMethodUpdated ( method ) ; }
public static boolean isBoundKeyAlgorithm ( java.lang.String algorithm ) { if ( ! ( android.security.KeyChain . isKeyAlgorithmSupported ( algorithm ) ) ) { return false ; } return android.security.KeyStore . getInstance () . isHardwareBacked ( algorithm ) ; }
static void constantIndexing4 ( int [] array ) { array [ NUMBER_CONSTANT ] = - NUMBER_CONSTANT ; }
@ java.lang.Override public void onAnimationUpdate ( android.animation.ValueAnimator animator ) { float fraction = animator . getAnimatedFraction () ; mLastAnimatedTvViewFrame = new android.view.ViewGroup.MarginLayoutParams ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; com.android.tv.ui.TvViewUiManager . interpolateMarginsRelative ( mLastAnimatedTvViewFrame , mOldTvViewFrame , mTvViewFrame , fraction ) ; }
private android.bluetooth.BluetoothGattCharacteristic getCharacteristic ( java.util.UUID uuid ) { android.bluetooth.BluetoothGattCharacteristic characteristic = mService . getCharacteristic ( uuid ) ; if ( characteristic == null ) { showMessage ( STRING_CONSTANT ) ; } return characteristic ; }
@ java.lang.Override public com.google.common.collect.Range < C > range ( com.google.common.collect.BoundType lowerBoundType , com.google.common.collect.BoundType upperBoundType ) { return com.google.common.collect.Range . create ( range.lowerBound . withLowerBoundType ( lowerBoundType , domain ) , range.upperBound . withUpperBoundType ( upperBoundType , domain ) ) ; }
private java.lang.String prefix ( java.lang.String typeName ) { if ( com.google.devtools.build.android.desugar.CoreLibraryRewriter . shouldPrefix ( typeName ) ) { return ( prefix ) + typeName ; } return typeName ; }
@ java.lang.Override public void run () { myContainer . removeAll () ; com.intellij.openapi.util.Disposer . dispose ( myLogManager ) ; initContentInternal () ; }
static java.math.BigInt addition ( java.math.BigInt a , java.math.BigInt b ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_add ( r.bignum , a.bignum , b.bignum ) ; return r ; }
@ java.lang.Override public java.lang.String toString () { if ( ( count ) == NUMBER_CONSTANT ) { return STRING_CONSTANT ; } return new java.lang.String ( value , NUMBER_CONSTANT , count ) ; }
@ java.lang.Override public void accept ( int result ) { if ( ( result & ( com.android.cts.verifier.notifications.MockListener.MockListener.HINT_HOST_DISABLE_CALL_EFFECTS ) ) == ( com.android.cts.verifier.notifications.MockListener.MockListener.HINT_HOST_DISABLE_CALL_EFFECTS ) ) { status = PASS ; } else { logFail () ; status = FAIL ; } next () ; }
public com.ibm.icu.text.SpoofChecker.Builder setData ( java.io.Reader confusables ) throws java.io.IOException , java.text.ParseException { fSpoofData = new com.ibm.icu.text.SpoofChecker.SpoofData () ; com.ibm.icu.text.SpoofChecker.Builder.ConfusabledataBuilder . buildConfusableData ( confusables , fSpoofData ) ; return this ; }
@ java.lang.Deprecated public abstract void setRenderPriority ( android.webkit.WebSettings.RenderPriority priority ) ;
private void checkGraphic ( java.lang.String baseName ) throws java.io.IOException { checkGraphic ( baseName , NUMBER_CONSTANT , STRING_CONSTANT , NUMBER_CONSTANT ) ; }
@ javax.annotation.Nonnull public java.util.List < com.android.jack.ir.ast.JStatement > getStatements () { return statements ; }
public boolean mayThrowExceptions ( proguard.optimize.info.Clazz clazz , proguard.optimize.info.Method method , proguard.classfile.attribute.CodeAttribute codeAttribute , int offset , proguard.optimize.info.Instruction instruction ) { return instruction . mayThrowExceptions () ; }
synchronized int nMeshGetIndexCount ( long id ) { validate () ; return rsnMeshGetIndexCount ( mContext , id ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.vfs.OutputVDir getRootDir () { return new com.android.sched.vfs.GenericOutputVDir ( vfs . getRootDir () ) ; }
public void test_unblockWithJoinWithSource ( ) throws java.lang.Exception { setup ( true ) ; try { key . unblock ( java.net.Inet4Address . getByName ( STRING_CONSTANT ) ) ; fail () ; } catch ( java.lang.IllegalStateException expected ) {} }
@ java.lang.Override public void error ( java.lang.String tag , java.lang.String message , java.lang.Object data ) { com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.ERROR , message ) ; }
@ java.lang.Override @ javax.annotation.CheckForNull public java.lang.String getDigest () { synchronized ( this ) { return digests . get ( this . getPath () ) ; } }
@ java.lang.Override public void inviteParticipants ( java.lang.String [] participants ) { this . inviteParticipants ( participants ) ; }
@ org.junit.Test public void test002a ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( false , null , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
boolean isAvailable ( @ org.jetbrains.annotations.NotNull com.intellij.compiler.options.CompilerOptionsManager.Setting setting , @ org.jetbrains.annotations.NotNull com.intellij.openapi.project.Project project ) ;
@ java.lang.Override public void placeVoiceCall ( java.lang.String phoneNumber , int ranking ) { placeCall ( phoneNumber , ranking , false , true ) ; }
public static < K > org.hamcrest.Matcher < java.util.Map < ? extends K , > > hasKey ( org.hamcrest.Matcher < ? super K > keyMatcher ) { return new org.hamcrest.collection.IsMapContaining < K , java.lang.Object > ( keyMatcher , org.hamcrest.collection.IsMapContaining . anything () ) ; }
public boolean answer ( com.android.server.wifi.WifiNative.ScanCapabilities capabilities ) { capabilities.max_scan_cache_size = java.lang.Integer.MAX_VALUE ; capabilities.max_scan_buckets = max_scan_buckets ; capabilities.max_ap_cache_per_scan = com.android.server.wifi.scanner.WifiScanningServiceTest.MAX_AP_PER_SCAN ; capabilities.max_rssi_sample_size = NUMBER_CONSTANT ; capabilities.max_scan_reporting_threshold = NUMBER_CONSTANT ; return true ; }
public static long computeClassID ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.security.NoSuchAlgorithmException { byte [] digest = com.android.jack.coverage.CodeCoverageSelector . computeClassDigest ( type ) ; java.math.BigInteger bigInteger = new java.math.BigInteger ( digest ) ; return bigInteger . longValue () ; }
public void run () { synchronized ( this ) { selectedNode = model . getSelected () ; } }
@ java.lang.Override @ java.lang.Deprecated public boolean isPermissionEnforced ( java.lang.String permission ) { return true ; }
private void handleConnectionServiceDeath ( com.android.server.telecom.ConnectionServiceFocusManager.ConnectionServiceFocus connectionServiceFocus ) { if ( java.util.Objects . equals ( connectionServiceFocus , mCurrentFocus ) ) { updateConnectionServiceFocus ( null ) ; updateCurrentFocusCall () ; } }
public void testConstructor_IllegalAliases_Initial () { try { new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , new java.lang.String [] { STRING_CONSTANT , STRING_CONSTANT } ) ; fail () ; } catch ( java.nio.charset.IllegalCharsetNameException e ) {} }
@ java.lang.Override public android.os.Bundle autoDiscover ( java.lang.String userName , java.lang.String password ) throws android.os.RemoteException { com.android.exchange.EasSyncService service = new com.android.exchange.EasSyncService () ; service.mContext = this ; return service . tryAutodiscover ( userName , password ) ; }
public boolean isCdmaFormat ( java.lang.String format ) { return mCdmaDispatcher . getFormat () . equals ( format ) ; }
public void testDescendingAddAll1 () { java.util.NavigableSet q = jsr166.ConcurrentSkipListSubSetTest . dset0 () ; try { q . addAll ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void execute ( java.lang.String . . . tasks ) { execute ( java.util.Collections . < java.lang.String > emptyList () , null , tasks ) ; }
private void runTestNewInstanceString ( java.lang.String constructorSignature , org.apache.harmony.jpda.tests.jdwp.ClassType.ConstructorArgumentsProvider provider ) { checkNewInstanceTag ( STRING_CONSTANT , constructorSignature , provider , JDWPConstants.Tag.STRING_TAG ) ; }
void libToExe ( @ javax.annotation.Nonnull java.io.File [] in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception ;
@ java.lang.Override public com.google.common.base.CharMatcher and ( com.google.common.base.CharMatcher other ) { com.google.common.base.Preconditions . checkNotNull ( other ) ; return this ; }
public void cleanup () { mSingleScanListeners . removeAllForClient ( this ) ; mSingleScanStateMachine . removeSingleScanRequests ( this ) ; mBackgroundScanStateMachine . removeBackgroundScanSettings ( this ) ; unregister () ; localLog ( ( STRING_CONSTANT + ( this ) ) ) ; }
public void onBind ( java.net.InetAddress localAddress , int localPort ) { isBound = true ; this . localAddress = localAddress ; impl . onBind ( localAddress , localPort ) ; }
public static long ReturnLong34 () { float imm = NUMBER_CONSTANT ; return ( ( long ) ( imm ) ) ; }
public void testEncode_CharBuffer_NullEncoder () { tests.api.java.nio.charset.CharsetTest.MockCharset2 c = new tests.api.java.nio.charset.CharsetTest.MockCharset2 ( STRING_CONSTANT , null ) ; try { c . encode ( java.nio.CharBuffer . wrap ( STRING_CONSTANT ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ java.lang.Override protected synchronized void cleanup () { android.util.Log . i ( com.android.bluetooth.hfp.HeadsetService.TAG , STRING_CONSTANT ) ; if ( ! ( mCreated ) ) { android.util.Log . w ( com.android.bluetooth.hfp.HeadsetService.TAG , STRING_CONSTANT ) ; } mCreated = false ; }
private static int aggregateStamp ( int stamp_a , int stamp_b ) { if ( ( stamp_a == ( java.util.Calendar.UNSET ) ) || ( stamp_b == ( java.util.Calendar.UNSET ) ) ) { return java.util.Calendar.UNSET ; } return stamp_a > stamp_b ? stamp_a : stamp_b ; }
public synchronized libcore.icu.AlphabeticIndex addLabels ( java.util.Locale locale ) { libcore.icu.AlphabeticIndex . addLabels ( peer , locale . toString () ) ; return this ; }
@ java.lang.Override public java.lang.String toGenericString () { return sharedToGenericString ( java.lang.reflect.Modifier . constructorModifiers () , false ) ; }
void putULongInt ( long val , boolean neg ) { this . makeValid () ; java.math.NativeBN . putULongInt ( this . bignum , val , neg ) ; }
public void expectMessage ( org.hamcrest.Matcher < java.lang.String > matcher ) { expect ( hasMessage ( matcher ) ) ; }
private void assertVerified ( java.lang.String apkFilenameInResources , java.lang.Integer minSdkVersionOverride , java.lang.Integer maxSdkVersionOverride ) throws java.lang.Exception { com.android.apksig.ApkVerifierTest . assertVerified ( verify ( apkFilenameInResources , minSdkVersionOverride , maxSdkVersionOverride ) , apkFilenameInResources ) ; }
@ android.test.suitebuilder.annotation.MediumTest @ org.junit.Test public void testProcessChldAddHeldToConfHolding ( ) throws java.lang.Exception { com.android.server.telecom.Call activeCall = createActiveCall () ; addCallCapability ( activeCall , Connection.CAPABILITY_MERGE_CONFERENCE ) ; boolean didProcess = mBluetoothPhoneService.mBinder . processChld ( com.android.server.telecom.tests.BluetoothPhoneServiceTest.CHLD_TYPE_ADDHELDTOCONF ) ; org.mockito.Mockito . verify ( activeCall ) . mergeConference () ; org.junit.Assert . assertEquals ( didProcess , true ) ; }
void assertNoCallback () { waitForIdle () ; com.android.server.ConnectivityServiceTest.CallbackInfo c = mCallbacks . peek () ; assertNull ( ( STRING_CONSTANT + c ) , c ) ; }
private void writeObject ( java.io.ObjectOutputStream stream ) throws java.io.IOException { ensureReadParams () ; stream . defaultWriteObject () ; }
@ com.android.annotations.NonNull public < K , V > java.util.Map < K , V > getAllModels ( @ com.android.annotations.NonNull org.gradle.tooling.BuildAction < java.util.Map < K , V > > action ) { return getAllModels ( action , false , null , null ) ; }
private static boolean isValidDevice ( android.bluetooth.BluetoothDevice device ) { return ( device != null ) && ( android.bluetooth.BluetoothAdapter . checkBluetoothAddress ( device . getAddress () ) ) ; }
private static boolean hasFilter ( byte [] filter ) { return ( filter != null ) && ( ( filter.length ) > NUMBER_CONSTANT ) ; }
@ java.lang.Override public void removeImsFeature ( int slotId , int feature ) throws android.os.RemoteException { this . removeImsFeature ( slotId , feature ) ; }
@ java.lang.Override public void execute ( com.android.build.gradle.managed.BuildType buildType ) { buildType . setIsDebuggable ( true ) ; buildType . setIsEmbedMicroApp ( false ) ; }
public void setCropRect ( android.graphics.Rect cropRect ) { if ( cropRect != null ) { cropRect = new android.graphics.Rect ( cropRect ) ; cropRect . intersect ( NUMBER_CONSTANT , NUMBER_CONSTANT , getWidth () , getHeight () ) ; } mCropRect = cropRect ; }
@ java.lang.Override protected boolean isRetained ( char c ) { return c == CHAR_CONS ; }
@ java.lang.Override public void wake () { try { manager . wake () ; } catch ( java.io.IOException e ) { com.android.monkeyrunner.adb.AdbMonkeyDevice.LOG . log ( java.util.logging.Level.SEVERE , STRING_CONSTANT , e ) ; } }
private static native void nativeDestroyGLFunctor ( long functor ) ;
@ org.chromium.base.annotations.CalledByNative private static org.chromium.base.SystemMessageHandler create ( long messagePumpDelegateNative ) { return new org.chromium.base.SystemMessageHandler ( messagePumpDelegateNative ) ; }
@ java.lang.Override public int initialize ( android.telephony.mbms.IMbmsStreamingManagerCallback listener , int subscriptionId ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
private static void assertReturnCodesEqual ( int expected , int got ) { org.junit.Assert . assertEquals ( android.net.apf.ApfTest . label ( expected ) , android.net.apf.ApfTest . label ( got ) ) ; }
native void rsnContextSendMessage ( long con , int id , int [] data ) ;
public void assertParcelingIsLossless ( android.net.IpPrefix p ) { android.net.IpPrefix p2 = passThroughParcel ( p ) ; org.junit.Assert . assertEquals ( p , p2 ) ; }
public int getSize () { return mSize ; }
public boolean matches ( final java.lang.String s ) { return pattern . matcher ( s ) . matches () ; }
@ org.jetbrains.annotations.Nullable @ java.lang.Override public git4idea.push.GitPushTarget getValue () { return myCurrentTarget ; }
public boolean isUserDataEnabled () { if ( mDataEnabledSettings . isProvisioning () ) { return mDataEnabledSettings . isProvisioningDataEnabled () ; } else { return mDataEnabledSettings . isUserDataEnabled () ; } }
@ java.lang.Override public void merge ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws com.android.jack.backend.dex.DexWritingException { try { mergeDex ( merger , type ) ; } catch ( com.android.jack.tools.merger.MergingOverflowException e ) { throw new com.android.jack.backend.dex.DexWritingException ( new com.android.jack.backend.dex.SingleDexOverflowException ( e ) ) ; } }
private native boolean setVolumeNative ( byte [] address , int volumeType , int volume ) ;
void updateConnectivity () { setWimaxStatus () ; setWifiStatus () ; setBtStatus () ; setIpAddressStatus () ; }
@ java.lang.Override public java.util.List < java.lang.String > targetProcessPrefix () { return java.util.Arrays . asList ( STRING_CONSTANT , STRING_CONSTANT , java.lang.Integer . toString ( port ) , host , STRING_CONSTANT ) ; }
public static com.android.server.wifi.ScanResults create ( int id , int . . . freqs ) { return com.android.server.wifi.ScanResults . create ( id , com.android.server.wifi.ScanResults . generateNativeResults ( id , freqs ) ) ; }
public void endVisit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JType type ) { endVisit ( ( ( com.android.jack.ir.ast.JNode ) ( type ) ) ) ; }
@ org.junit.Test public void testInstallOlderRulesVersion ( ) throws java.lang.Exception { java.io.File appFile = getTimeZoneDataApkFile ( STRING_CONSTANT ) ; getDevice () . installPackage ( appFile , true ) ; java.lang.Thread . sleep ( NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( com.android.timezone.xts.TimeZoneUpdateHostTest.STAGED_OPERATION_NONE , getStagedOperationType () ) ; }
public void simStatusChanged ( int indicationType ) { mRil . processIndication ( indicationType ) ; if ( RIL.RILJ_LOGD ) mRil . unsljLog ( com.android.internal.telephony.RILConstants.RIL_UNSOL_RESPONSE_SIM_STATUS_CHANGED ) ; mRil.mIccStatusChangedRegistrants . notifyRegistrants () ; }
@ com.android.annotations.Nullable @ java.lang.Override public com.android.tools.lint.TypeDescriptor getReturnType () { return isConstructor () ? null : getTypeDescriptor ( mBinding.returnType ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.vfs.BaseVDir getVDir ( @ javax.annotation.Nonnull com.android.sched.vfs.VPath path ) throws com.android.sched.util.file.NoSuchFileException , com.android.sched.util.file.NotDirectoryException { com.android.sched.vfs.BaseVDir dir = this ; for ( java.lang.String name : path . split () ) { dir = dir . getVDir ( name ) ; } return dir ; }
public static void sendWifiStateChanged ( android.content.BroadcastReceiver broadcastReceiver , android.content.Context context ) { android.content.Intent intent = new android.content.Intent ( android.net.wifi.WifiManager.WIFI_STATE_CHANGED_ACTION ) ; broadcastReceiver . onReceive ( context , intent ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testDataPathInitiatorDirectNoMacNoTokenFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( true , false , false , true , false ) ; }
public void testRemove1_NullPointerException () { java.util.NavigableMap c = jsr166.TreeSubMapTest . map5 () ; try { c . remove ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public boolean startTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField field ) { return markIfNecessary ( field ) ; }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { t . removeMarker ( SwitchEnumSupport.UsedEnumField . class ) ; }
public static com.android.ahat.DocString render ( java.lang.Object val ) { if ( val instanceof com.android.tools.perflib.heap.Instance ) { return com.android.ahat.Value . renderInstance ( ( ( com.android.tools.perflib.heap.Instance ) ( val ) ) ) ; } else { return com.android.ahat.DocString . format ( STRING_CONSTANT , val ) ; } }
@ java.lang.Override public java.lang.String getFolderSegment () { return com.android.ide.eclipse.adt.internal.resources.configurations.NetworkCodeQualifier . getFolderSegment ( mCode ) ; }
private org.eclipse.core.resources.IFile getDependencyFileFor ( org.eclipse.core.resources.IFile sourceFile ) { org.eclipse.core.resources.IFolder depFolder = getDependencyFolder ( sourceFile ) ; return depFolder . getFile ( sourceFile . getName () . replaceAll ( AndroidConstants.RE_RS_EXT , AndroidConstants.DOT_DEP ) ) ; }
private void resetForInput () { synchronized ( this ) { java.util.regex.Matcher . setInputImpl ( address , input , regionStart , regionEnd ) ; java.util.regex.Matcher . useAnchoringBoundsImpl ( address , anchoringBounds ) ; java.util.regex.Matcher . useTransparentBoundsImpl ( address , transparentBounds ) ; } }
private com.android.bluetooth.avrcp.MediaPlayerInfo getAddressedPlayerInfo () { synchronized ( mMediaPlayerInfoList ) { return mMediaPlayerInfoList . getOrDefault ( mCurrAddrPlayerID , null ) ; } }
@ android.view.RemotableViewMethod public void setEnabled ( boolean enabled ) { if ( enabled == ( isEnabled () ) ) return; setFlags ( ( enabled ? android.view.View.ENABLED : android.view.View.DISABLED ) , android.view.View.ENABLED_MASK ) ; refreshDrawableState () ; invalidate ( true ) ; }
abstract void putLongUnchecked ( int index , long value ) ;
public void testConstructor_NullContext_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( null , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , android.security.AndroidKeyPairGeneratorSpecTest.NOW , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
public void addNewIncomingCall ( boolean isSpam ) { java.lang.String callerId = ( isSpam ) ? STRING_CONSTANT : STRING_CONSTANT ; connectionTag = com.android.dialer.simulator.impl.SimulatorSimCallManager . addNewIncomingCall ( context , callerId , SimulatorSimCallManager.CALL_TYPE_RTT ) ; }
public void test_setPerformancePreference_Int_Int_Int ( ) throws java.io.IOException { try ( java.net.Socket theSocket = new java.net.Socket () ) { theSocket . setPerformancePreferences ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
private static boolean isAggressiveRecovery ( int value ) { return ( ( value == ( com.android.internal.telephony.dataconnection.DcTracker.RecoveryAction.CLEANUP ) ) || ( value == ( com.android.internal.telephony.dataconnection.DcTracker.RecoveryAction.REREGISTER ) ) ) || ( value == ( com.android.internal.telephony.dataconnection.DcTracker.RecoveryAction.RADIO_RESTART ) ) ; }
@ java.lang.Override public com.android.ahat.heapdump.Value getField ( java.lang.String fieldName ) { for ( com.android.ahat.heapdump.FieldValue field : mFieldValues ) { if ( fieldName . equals ( field.name ) ) { return field.value ; } } return null ; }
public void testExtractDecodeEditEncodeMux720p ( ) throws java.lang.Throwable { if ( ! ( setSize ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) ) return; setSource ( R.raw.video_480x360_mp4_h264_500kbps_30fps_aac_stereo_128kbps_44100hz ) ; setCopyVideo () ; android.media.cts.ExtractDecodeEditEncodeMuxTest.TestWrapper . runTest ( this ) ; }
@ java.lang.Override public java.lang.Class < > [] getParameterTypes () { return super . getParameterTypes () ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.io.File getDefaultSkin () { return mDefaultSkin ; }
public static double DoubleMultiplication () { double a ; double b ; double c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a * b ; return c ; }
public static void run ( ) throws java.lang.Exception { java.util.ArrayList < java.lang.Object > l = new java.util.ArrayList <> ( NUMBER_CONSTANT ) ; art.Test904 . prefetchClassNames () ; art.Test904 . doTest ( l ) ; }
public java.io.File getFolderPath () { return new java.io.File ( mGenFolder , mBuildConfigPackageName . replace ( CHAR_CONS , java.io.File.separatorChar ) ) ; }
@ com.android.tradefed.testtype.HostTestTest.MyAnnotation @ junit.framework.Test public void testPass6 () { metrics . addTestMetric ( STRING_CONSTANT , STRING_CONSTANT ) ; if ( mOption ) { metrics . addTestMetric ( STRING_CONSTANT , STRING_CONSTANT ) ; } }
@ org.junit.Test public void test002b ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( false , STRING_CONSTANT ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
public static com.android.ddmlib.IDevice [] getDevices () { if ( ( com.android.hierarchyviewerlib.device.DeviceBridge.bridge ) == null ) { return new com.android.ddmlib.IDevice [ NUMBER_CONSTANT ] ; } return com.android.hierarchyviewerlib.device.DeviceBridge.bridge . getDevices () ; }
private static native boolean findImpl ( long addr , int startIndex , int [] offsets ) ;
@ java.lang.Override void setUp () { createChannels () ; sendNotifications ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.MODE_NONE , false , false ) ; status = READY ; }
private void assertTombstone ( java.lang.String alias ) { assertTrue ( org.conscrypt.TrustedCertificateStore . isUser ( alias ) ) ; java.io.File file = file ( alias ) ; assertTrue ( file . exists () ) ; assertEquals ( NUMBER_CONSTANT , file . length () ) ; }
private void recordClosingOfWindow ( long window ) { synchronized ( android.database.CursorWindow.sWindowToPidMap ) { if ( ( android.database.CursorWindow.sWindowToPidMap . size () ) == NUMBER_CONSTANT ) { return; } android.database.CursorWindow.sWindowToPidMap . delete ( window ) ; } }
public static void run () { art.Test903 . doTest () ; art.Test903 . testGetTaggedObjects () ; art.Test903 . testTags () ; }
public void testMinimalSizeDocked ( ) throws java.lang.Exception { if ( ! ( supportsSplitScreenMultiWindow () ) ) { com.android.tradefed.log.LogUtil.CLog . logAndDisplay ( com.android.ddmlib.Log.LogLevel.INFO , STRING_CONSTANT ) ; return; } testMinimalSize ( android.server.cts.DOCKED_STACK_ID ) ; }
public com.android.dialer.callintent.CallIntentBuilder setAllowAssistedDial ( boolean allowAssistedDial ) { this . allowAssistedDial = allowAssistedDial ; return this ; }
private void writeCharacteristic ( android.bluetooth.BluetoothGattCharacteristic characteristic , java.lang.String writeValue ) { if ( characteristic != null ) { characteristic . setValue ( writeValue ) ; mBluetoothGatt . writeCharacteristic ( characteristic ) ; } }
private boolean checkBundleFilesExist ( java.io.File unpackedContentDir ) throws java.io.IOException { android.util.Slog . i ( logTag , STRING_CONSTANT ) ; return libcore.tzdata.update2.FileUtils . filesExist ( unpackedContentDir , ConfigBundle.TZ_DATA_VERSION_FILE_NAME , ConfigBundle.ZONEINFO_FILE_NAME , ConfigBundle.ICU_DATA_FILE_NAME ) ; }
boolean runTests ( @ com.android.annotations.NonNull java.lang.String projectName , @ com.android.annotations.NonNull java.lang.String variantName , @ com.android.annotations.NonNull java.io.File testApk , @ com.android.annotations.NonNull com.android.builder.testing.TestData testData , @ com.android.annotations.NonNull java.util.List < ? extends com.android.builder.testing.api.DeviceConnector > deviceList , int maxThreads , int timeout , @ com.android.annotations.NonNull java.io.File resultsDir , @ com.android.annotations.NonNull java.io.File coverageDir , @ com.android.annotations.NonNull com.android.utils.ILogger logger ) throws com.android.builder.testing.TestRunner.NoAuthorizedDeviceFoundException , com.android.builder.testing.api.TestException , java.lang.InterruptedException ;
@ java.lang.Override public int updateCOLR ( int presentation ) throws android.os.RemoteException { return this . updateCOLR ( presentation ) ; }
private static native int apfSimulate ( byte [] program , byte [] packet , byte [] data , int filter_age ) ;
public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile , com.android.ims.internal.IImsCallSessionListener listener ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . createCallSession ( sessionId , profile , listener ) ; } }
public void testDeserializeWasObject ( ) throws java.lang.Exception { final java.lang.String s = STRING_CONSTANT + STRING_CONSTANT ; assertFalse ( libcore.java.io.SerializationTest.wasObjectInitializedFlag ) ; try { libcore.util.SerializationTester . deserializeHex ( s ) ; fail () ; } catch ( java.io.InvalidClassException expected ) {} assertFalse ( libcore.java.io.SerializationTest.wasObjectInitializedFlag ) ; }
public abstract proguard.evaluation.value.ReferenceValue generalizeMayBeNull ( boolean mayBeNull ) ;
public static void sort ( int [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void run () { assertTrue ( mTextView . moveCursorToVisibleOffset () ) ; }
native long rsnScriptGroup2Create ( long con , java.lang.String name , java.lang.String cachePath , long [] closures ) ;
private void stopAdvertise () { if ( com.android.cts.verifier.bluetooth.BleServerService.DEBUG ) { android.util.Log . d ( com.android.cts.verifier.bluetooth.BleServerService.TAG , STRING_CONSTANT ) ; } if ( ( mAdvertiser ) != null ) { mAdvertiser . stopAdvertising ( mAdvertiseCallback ) ; } }
@ java.lang.Override @ org.gradle.api.tasks.InputFile @ org.gradle.api.tasks.Optional public java.io.File getStoreFile () { return super . getStoreFile () ; }
private void run ( @ javax.annotation.Nonnull com.android.jack.test.runtime.RuntimeTestInfo rti ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( rti ) . setSourceLevel ( SourceLevel.JAVA_8 ) . addProperty ( Options.ANDROID_MIN_API_LEVEL . getName () , java.lang.String . valueOf ( AndroidCompatibilityChecker.N_API_LEVEL ) ) . compileAndRunTest () ; }
public java.lang.String getMobileNetworkOperator () { return ( ( mMccStr ) == null ) || ( ( mMncStr ) == null ) ? null : ( mMccStr ) + ( mMncStr ) ; }
@ java.lang.Override public boolean sameItemAs ( java.lang.Package pkg ) { return sameItemAs ( pkg , false ) ; }
@ java.lang.Override public void onSessionDestroyed () { android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , STRING_CONSTANT ) ; synchronized ( this ) { if ( ( mMediaController ) != null ) removeMediaController ( mMediaController . getWrappedInstance () ) ; } }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.jack.ir.ast.JClass getType () { return type ; }
@ java.lang.Override public long beforeHandshake ( long context ) throws javax.net.ssl.SSLException { long s = super . beforeHandshake ( context ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_clear_mode ( s , org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSL_MODE_HANDSHAKE_CUTTHROUGH ) ; return s ; }
protected void setResult ( com.android.jack.dx.rop.code.RegisterSpec result ) { assert result != null ; this . result = result ; }
private void testUrlToUriMappingAuthority ( java.lang.String urlString , java.lang.String expectedUriString ) throws java.lang.Exception { java.net.URI authorityUri = backdoorUrlToUri ( new java.net.URL ( urlString ) ) ; org.junit.Assert . assertEquals ( expectedUriString , authorityUri . toString () ) ; }
public com.android.apksig.internal.util.Pair < java.lang.String , ? extends java.security.spec.AlgorithmParameterSpec > getJcaSignatureAlgorithmAndParams () { return mJcaSignatureAlgAndParams ; }
boolean isOpened ( ) throws android.os.RemoteException ;
public void copy2DRangeFrom ( int xoff , int yoff , int w , int h , float [] data ) { validateIsFloat32 () ; copy2DRangeFromUnchecked ( xoff , yoff , w , h , data , Element.DataType.FLOAT_32 , data.length ) ; }
@ java.lang.Override public void onScrollChanged ( int l , int t , int oldl , int oldt ) {}
public com.android.jack.dx.io.EncodedValue readEncodedValue () { int start = position ; new com.android.jack.dx.io.EncodedValueReader ( this , this ) . readValue () ; int end = position ; return new com.android.jack.dx.io.EncodedValue ( java.util.Arrays . copyOfRange ( data , start , end ) ) ; }
public static libcore.icu.CollationElementIteratorICU getInstance ( long collatorAddress , java.lang.String source ) { long iteratorAddress = libcore.icu.NativeCollation . getCollationElementIterator ( collatorAddress , source ) ; return new libcore.icu.CollationElementIteratorICU ( iteratorAddress ) ; }
void notifyRegistrantsRilConnectionChanged ( int rilVer ) { mRilVersion = rilVer ; if ( ( mRilConnectedRegistrants ) != null ) { mRilConnectedRegistrants . notifyRegistrants ( new android.os.AsyncResult ( null , new java.lang.Integer ( rilVer ) , null ) ) ; } }
@ java.lang.Override public com.android.tools.lint.client.api.Configuration getConfiguration ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Project project ) { return new com.android.tools.lint.LintCliClient.CliConfiguration ( getConfiguration () , project ) ; }
public static void parseToExistingProperties ( java.lang.String pattern , com.ibm.icu.impl.number.Properties properties , int ignoreRounding ) { com.ibm.icu.impl.number.PatternString.LdmlDecimalPatternParser . parse ( pattern , properties , ignoreRounding ) ; }
android.widget.LayoutParams createOrReuseLayoutParams ( android.view.View v ) { final android.widget.LayoutParams currentLp = v . getLayoutParams () ; if ( currentLp != null ) { return currentLp ; } return new android.widget.LayoutParams ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
static java.math.BigInt modExp ( java.math.BigInt a , java.math.BigInt p , java.math.BigInt m ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_mod_exp ( r.bignum , a.bignum , p.bignum , m.bignum ) ; return r ; }
private static void run () { Main . clearStats () ; Main . forceGarbageCollection () ; Main . printStats () ; }
private void refresh () { refresh ( false ) ; }
public void testRandomization ( ) throws java.lang.Exception { testMappingEntropy ( STRING_CONSTANT ) ; }
private java.util.List < android.bluetooth.BluetoothDevice > getConnectedDevices () { enforceCallingOrSelfPermission ( com.android.bluetooth.pbapclient.BLUETOOTH_PERM , STRING_CONSTANT ) ; int [] desiredStates = new int [] { android.bluetooth.BluetoothProfile.STATE_CONNECTED } ; return getDevicesMatchingConnectionStates ( desiredStates ) ; }
@ java.lang.Override public void finish () { allowAppsControl () ; super . finish () ; }
@ java.lang.Override public void setToolBar ( org.eclipse.jface.action.IToolBarManager toolBarManager ) {}
com.android.bluetooth.gatt.ScanFilterQueue.Entry pop () { if ( mEntries . isEmpty () ) { return null ; } java.util.Iterator < com.android.bluetooth.gatt.ScanFilterQueue.Entry > iterator = mEntries . iterator () ; com.android.bluetooth.gatt.ScanFilterQueue.Entry entry = iterator . next () ; iterator . remove () ; return entry ; }
public static void fail ( java.lang.String message ) { java.lang.System.out . println ( ( STRING_CONSTANT + message ) ) ; java.lang.Thread . dumpStack () ; }
@ java.lang.SafeVarargs public static < T > org.hamcrest.core.AnyOf < T > anyOf ( org.hamcrest.Matcher < ? super T > . . . matchers ) { return org.hamcrest.core.AnyOf . anyOf ( java.util.Arrays . asList ( matchers ) ) ; }
private void closeOutput ( java.io.OutputStream stream ) throws java.io.IOException { if ( stream == null ) { return; } stream . flush () ; if ( stream != ( context.out ) ) { stream . close () ; } }
@ java.lang.Override android.car.diagnostic.CarDiagnosticEvent update ( @ android.annotation.NonNull android.car.diagnostic.CarDiagnosticEvent newEvent ) { java.util.Objects . requireNonNull ( newEvent ) ; if ( ( null == ( mLastEvent ) ) || ( mLastEvent . isEarlierThan ( newEvent ) ) ) mLastEvent = newEvent ; return mLastEvent ; }
public void testExtractDecodeEditEncodeMuxAudio ( ) throws java.lang.Throwable { if ( ! ( setSize ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) ) return; setSource ( R.raw.video_480x360_mp4_h264_500kbps_30fps_aac_stereo_128kbps_44100hz ) ; setCopyAudio () ; setVerifyAudioFormat () ; android.media.cts.ExtractDecodeEditEncodeMuxTest.TestWrapper . runTest ( this ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void finalizer ( long nativeCanvas ) { android.graphics.Canvas_Delegate canvasDelegate = android.graphics.Canvas_Delegate.sManager . getDelegate ( nativeCanvas ) ; if ( canvasDelegate == null ) { return; } canvasDelegate . dispose () ; android.graphics.Canvas_Delegate.sManager . removeJavaReferenceFor ( nativeCanvas ) ; }
public abstract void flushNow ( ) ;
public static < T > org.hamcrest.org.hamcrest.Matcher < T > sameInstance ( T target ) { return org.hamcrest.core.IsSame . sameInstance ( target ) ; }
@ java.lang.Override public java.lang.String getMetaZoneDisplayName ( java.lang.String mzID , com.ibm.icu.impl.NameType type ) { if ( ( mzID == null ) || ( ( mzID . length () ) == NUMBER_CONSTANT ) ) { return null ; } return loadMetaZoneNames ( null , mzID ) . getName ( type ) ; }
@ java.lang.Override protected void engineSetSeed ( byte [] seed ) { if ( seed == null ) { throw new java.lang.NullPointerException ( STRING_CONSTANT ) ; } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_drawColor ( long nativeCanvas , int color ) { android.graphics.Canvas_Delegate . native_drawColor ( nativeCanvas , color , PorterDuff.Mode.SRC_OVER.nativeInt ) ; }
protected com.google.gerrit.server.change.ChangeInserter newChange ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo ) throws java.lang.Exception { return newChange ( repo , null , null , null , null ) ; }
private void initSite ( ) throws java.lang.Exception { com.google.gerrit.acceptance.pgm.RebuildNoteDbIT . runGerrit ( STRING_CONSTANT , STRING_CONSTANT , sitePath , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
protected void assertBadQuery ( java.lang.Object query ) throws java.lang.Exception { assertBadQuery ( newQuery ( query ) ) ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( patchSetId ) ) ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( ) throws java.lang.Exception { return getConfig ( STRING_CONSTANT , true , true , true , true ) ; }
@ org.junit.Test ( expected = java.io.IOException . class ) public void shouldThrowAnExceptionIfAnErrorOccurCreatingSharedDirectory ( ) throws java.lang.Exception { java.io.File configuredDirectory = tempFolder . newFile () ; org.mockito.Mockito . when ( configMock . main () . sharedDirectory () ) . thenReturn ( configuredDirectory . getAbsolutePath () ) ; module . getSharedDirectory () ; }
@ java.lang.Override protected void configure () { factory ( ChangeResource.Factory . class ) ; }
@ java.lang.Override public com.google.gerrit.server.permissions.PermissionBackend.ForChange user ( com.google.gerrit.server.CurrentUser user ) { return user () . equals ( user ) ? this : forUser ( user ) . asForChange ( cd , db ) ; }
java.lang.String diff ( ) ;
private void assertBadRequest ( com.google.gerrit.extensions.api.projects.ProjectApi.ListRefsRequest < com.google.gerrit.extensions.api.projects.TagInfo > req ) throws java.lang.Exception { try { req . get () ; fail ( STRING_CONSTANT ) ; } catch ( com.google.gerrit.extensions.restapi.BadRequestException e ) {} }
protected final void logWarn ( java.lang.String msg , java.lang.Throwable t ) { if ( com.google.gerrit.server.git.strategy.SubmitStrategyOp.log . isWarnEnabled () ) { com.google.gerrit.server.git.strategy.SubmitStrategyOp.log . warn ( ( ( args.submissionId ) + msg ) , t ) ; } }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { gotoSibling ( ( - NUMBER_CONSTANT ) ) ; }
@ java.lang.Override protected void onExit ( int rc ) { removeEventListenerRegistration () ; synchronized ( taskLock ) { done = true ; } super . onExit ( rc ) ; }
private static java.lang.String shortenSubject ( java.lang.String subject ) { if ( ( subject . length () ) < NUMBER_CONSTANT ) { return subject ; } return ( subject . substring ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) + STRING_CONSTANT ; }
@ org.junit.Test public void testParentHashCode () { final int id = NUMBER_CONSTANT ; final com.google.gwtorm.client.IntKeyTestCase.Parent p = new com.google.gwtorm.client.IntKeyTestCase.Parent ( id ) ; org.junit.Assert . assertEquals ( id , p . hashCode () ) ; }
void removeFileCommentBox ( com.google.gerrit.client.diff.DraftBox box ) { diffTable . onRemoveDraftBox ( box ) ; }
@ java.lang.Override public int get () { return start ; }
@ java.lang.Override protected void preDisplay ( java.lang.String content ) { initEditor ( content ) ; }
public void setFileHistory ( final java.lang.String pattern ) { fileHistory = pattern ; }
void removeAll () { if ( ( skipBars ) != null ) { for ( com.google.gerrit.client.diff.SkipBar bar : skipBars ) { bar . expandSideAll () ; } skipBars = null ; line0 = null ; } }
private void tearDown ( ) throws java.lang.Exception { stat . execute ( ( STRING_CONSTANT + ( com.ericsson.gerrit.plugins.eventslog.sql.SQLTable.TABLE_NAME ) ) ) ; store . stop () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { admins = groupCache . get ( new com.google.gerrit.reviewdb.client.AccountGroup.NameKey ( STRING_CONSTANT ) ) . getGroupUUID () ; setUpPermissions () ; setUpChanges () ; }
private com.google.gerrit.server.git.ProjectConfig read ( org.eclipse.jgit.revwalk.RevCommit rev ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { com.google.gerrit.server.git.ProjectConfig cfg = new com.google.gerrit.server.git.ProjectConfig ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ) ; cfg . load ( db , rev ) ; return cfg ; }
private void detach () { if ( ( lineWidget ) != null ) { lineWidget . clear () ; lineWidget = null ; updateSelection () ; } manager . clearLine ( cm . side () , line , this ) ; removeFromParent () ; }
public static com.google.common.base.Function < com.google.gerrit.reviewdb.client.Change , com.google.gerrit.reviewdb.client.Change.Id > changeIdFunction () { return Change : : getId ; }
private com.google.gerrit.extensions.common.ProblemInfo problem ( java.lang.String msg ) { com.google.gerrit.extensions.common.ProblemInfo p = new com.google.gerrit.extensions.common.ProblemInfo () ; p.message = msg ; problems . add ( p ) ; return p ; }
@ java.lang.Override protected java.lang.String getNextSequenceValueSql ( final java.lang.String seqname ) { return STRING_CONSTANT + seqname ; }
@ java.lang.Override public void applySuccess () { com.google.gwt.user.client.rpc.AsyncCallback < T > cb = delegate ; if ( cb != null ) { delegate = null ; cb . onSuccess ( result ) ; result = null ; } }
@ java.lang.Override public void options ( com.google.gerrit.extensions.common.GroupOptionsInfo options ) throws com.google.gerrit.extensions.restapi.RestApiException { try { putOptions . apply ( rsrc , options ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
private org.eclipse.jgit.errors.ConfigInvalidException parseException ( java.lang.String fmt , java.lang.Object . . . args ) { return com.google.gerrit.server.notedb.ChangeNotes . parseException ( id , fmt , args ) ; }
protected void rcptToAuthors ( final com.google.gerrit.server.mail.RecipientType rt ) { for ( final com.google.gerrit.reviewdb.client.Account.Id id : authors ) { add ( rt , id ) ; } }
private static long round ( long n , long unit ) { return ( n + ( unit / NUMBER_CONSTANT ) ) / unit ; }
@ java.lang.Override public com.google.gerrit.server.plugins.PluginResource parse ( com.google.gerrit.extensions.restapi.TopLevelResource parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { return parse ( id . get () ) ; }
public com.google.gerrit.server.notedb.ChangeNotes createFromIndexedChange ( com.google.gerrit.reviewdb.client.Change change ) { return new com.google.gerrit.server.notedb.ChangeNotes ( args , change ) ; }
void delete ( org.apache.lucene.index.Term term ) throws java.io.IOException { writer . deleteDocuments ( term ) ; }
public boolean canSee ( com.google.gerrit.reviewdb.client.Account otherUser ) { return canSee ( otherUser . getId () ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; db = createBareRepository () ; util = new org.eclipse.jgit.junit.TestRepository ( db ) ; }
void init ( com.google.gerrit.client.change.ChangeScreen2.Style style ) { this . style = style ; }
public static void display ( final com.google.gerrit.client.Screen view ) { if ( ( com.google.gerrit.client.Gerrit.currentScreen ) != null ) { com.google.gerrit.client.Gerrit.body . remove ( com.google.gerrit.client.Gerrit.currentScreen ) ; } com.google.gerrit.client.Gerrit.currentScreen = view ; com.google.gerrit.client.Gerrit.body . add ( com.google.gerrit.client.Gerrit.currentScreen ) ; }
@ org.junit.Test public void basePathWhenNotConfigured () { com.google.common.truth.Truth . assertThat ( repoCfg . getBasePath ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ) ) . isNull () ; }
private static void validateDiffMode ( com.googlesource.gerrit.plugins.xdocs.XDocServlet.ResourceKey key ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { if ( ( ( key.diffMode ) != ( DiffMode.NO_DIFF ) ) && ( ( key.revisionB ) == null ) ) { throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException () ; } }
@ java.lang.Override protected void preDisplay ( java.lang.Void result ) { initEditor ( content ) ; content = null ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.index.change.IndexRewriter . class ) ; bind ( com.google.gerrit.server.index.change.ChangeIndexCollection . class ) ; listener () . to ( com.google.gerrit.server.index.change.ChangeIndexCollection . class ) ; factory ( ChangeIndexer.Factory . class ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.pgm.util.ConsoleUI . class ) . toInstance ( init.ui ) ; bind ( com.google.gerrit.pgm.init.InitFlags . class ) . toInstance ( init.flags ) ; }
@ org.junit.Test public void testCreateGroupWithoutCapability_Forbidden ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = new com.google.gerrit.acceptance.RestSession ( server , user ) . put ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_FORBIDDEN ) ; }
private boolean isCurrentIndexVersionLatest () { return ( ( reindexer ) == null ) || ( ( reindexer . getVersion () ) == ( indexes . getSearchIndex () . getSchema () . getVersion () ) ) ; }
@ com.google.common.annotations.VisibleForTesting public static com.google.gerrit.server.account.externalids.ExternalId create ( com.google.gerrit.server.account.externalids.ExternalId.Key key , com.google.gerrit.reviewdb.client.Account.Id accountId , @ com.google.gerrit.common.Nullable java.lang.String email , @ com.google.gerrit.common.Nullable java.lang.String hashedPassword , @ com.google.gerrit.common.Nullable org.eclipse.jgit.lib.ObjectId blobId ) { return new com.google.gerrit.server.account.externalids.AutoValue_ExternalId ( key , accountId , com.google.common.base.Strings . emptyToNull ( email ) , com.google.common.base.Strings . emptyToNull ( hashedPassword ) , blobId ) ; }
java.lang.String patchPageTitle ( java.lang.String changeId , java.lang.String path ) ;
@ org.junit.Test public void listEmptyGroupMembers ( ) throws java.lang.Exception { group ( STRING_CONSTANT , STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( GET ( STRING_CONSTANT ) ) . isEmpty () ; }
@ java.lang.Override public void setHashtags ( com.google.gerrit.extensions.api.changes.HashtagsInput input ) throws com.google.gerrit.extensions.restapi.RestApiException { try { postHashtags . apply ( change , input ) ; } catch ( com.google.gerrit.server.update.UpdateException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( openSchemas ) != null ) { for ( com.google.gwtorm.data.PhoneBookDb schema : openSchemas ) { schema . close () ; } openSchemas = null ; } }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( java.lang.String ignore ) throws java.lang.Exception { return getConfig ( ignore , true , true , true , true ) ; }
public static com.google.gerrit.elasticsearch.ElasticIndexModule singleVersionWithExplicitVersions ( java.util.Map < java.lang.String , java.lang.Integer > versions , int threads ) { return new com.google.gerrit.elasticsearch.ElasticIndexModule ( versions , threads , false ) ; }
@ org.junit.Test public void testCreateDatabaseHandle ( ) throws java.lang.Exception { org.junit.Assert . assertNotNull ( db ) ; }
private static com.google.gerrit.client.rpc.RestApi revision ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String type ) { return com.google.gerrit.client.changes.ChangeApi . revision ( project , id ) . view ( type ) ; }
public static long replyError ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res , int statusCode , java.lang.String msg , @ com.google.gerrit.common.Nullable java.lang.Throwable err ) throws java.io.IOException { return com.google.gerrit.httpd.restapi.RestApiServlet . replyError ( req , res , statusCode , msg , CacheControl.NONE , err ) ; }
@ java.lang.Override protected void configure () { bind ( java.io.File . class ) . annotatedWith ( com.google.gerrit.server.config.SitePath . class ) . toInstance ( sitePath ) ; }
@ org.junit.Test public void testWithoutSubmodule ( ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit c = makeCommitWithoutSubmodule () ; java.util.List < com.google.gerrit.server.git.validators.CommitValidationMessage > m = com.googlesource.gerrit.plugins.uploadvalidator.SubmoduleValidator . performValidation ( repo , c ) ; com.google.common.truth.Truth . assertThat ( m ) . isEmpty () ; }
public static com.google.gerrit.extensions.client.Side fromShort ( short s ) { if ( s <= NUMBER_CONSTANT ) { return com.google.gerrit.extensions.client.Side.PARENT ; } else if ( s == NUMBER_CONSTANT ) { return com.google.gerrit.extensions.client.Side.REVISION ; } return null ; }
public static void deleteRevision ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String commit , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gerrit.client.changes.ChangeApi . revision ( project , id , commit ) . delete ( cb ) ; }
@ java.lang.Override public java.lang.String toString () { return ( STRING_CONSTANT + ( getName () ) ) + STRING_CONSTANT ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > indexAsync ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) { return submit ( new com.google.gerrit.server.index.change.ChangeIndexer.IndexTask ( project , id ) ) ; }
public static < T > com.google.gerrit.server.query.Predicate < T > and ( final com.google.gerrit.server.query.Predicate < T > . . . that ) { if ( ( that.length ) == NUMBER_CONSTANT ) { return that [ NUMBER_CONSTANT ] ; } return new com.google.gerrit.server.query.AndPredicate < T > ( that ) ; }
public static java.lang.String refsStarredChangesPrefix ( com.google.gerrit.reviewdb.client.Change.Id changeId ) { return com.google.gerrit.reviewdb.client.RefNames . buildRefsPrefix ( com.google.gerrit.reviewdb.client.RefNames.REFS_STARRED_CHANGES , changeId . get () ) . toString () ; }
boolean canSubmit ( boolean isChangeOwner ) { if ( RefNames.REFS_CONFIG . equals ( refName ) ) { return projectControl . isOwner () ; } return canPerform ( Permission.SUBMIT , isChangeOwner , false ) ; }
@ java.lang.Override public java.lang.String getServletPath () { return getRequestURI () . substring ( contextPath . length () ) ; }
@ org.junit.Test ( expected = java.lang.IllegalStateException . class ) public void testThatNullBasePathThrowsAnException () { new com.google.gerrit.server.git.LocalDiskRepositoryManager ( site , new org.eclipse.jgit.lib.Config () ) ; }
boolean canRebase () { return canPerform ( Permission.REBASE ) ; }
public com.google.gwtjsonrpc.client.VoidResult run ( com.google.gerrit.client.reviewdb.ReviewDb db , com.google.gwtorm.client.Transaction txn , boolean retry ) throws com.google.gwtorm.client.OrmException { return doAddReviewers ( reviewerIds , change . currentPatchSetId () , db , txn ) ; }
@ java.lang.Override protected com.google.gerrit.sshd.SshScope.Context continuingContext ( com.google.gerrit.sshd.SshScope.Context ctx ) { return new com.google.gerrit.sshd.SshScope.Context ( ctx , ctx . getSession () , ctx . getCommandLine () ) ; }
@ java.lang.Override public java.lang.String getAuthorizationUrl () { return oauth . getAuthorizationUrl ( oauth . getScope ( com.google.common.collect.Sets . newHashSet ( config . getDefaultScopes () ) ) , null , null ) ; }
@ java.lang.Override public java.lang.Iterable < com.google.gerrit.sshd.SshKeyCacheEntry > missing ( java.lang.String username ) { return java.util.Collections . emptyList () ; }
protected com.google.gerrit.server.change.ChangeInserter newChange ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo ) throws java.lang.Exception { return newChange ( repo , null , null , null , null ) ; }
public boolean canPerform ( java.lang.String permissionName ) { if ( GlobalCapability.ADMINISTRATE_SERVER . equals ( permissionName ) ) { return canAdministrateServer () ; } return ! ( access ( permissionName ) . isEmpty () ) ; }
public abstract void setList ( java.lang.String section , java.lang.String subsection , java.lang.String name , java.util.List < java.lang.String > values ) ;
public void checkCustom ( org.bouncycastle.openpgp.PGPPublicKey key , long expectedKeyId , java.util.List < java.lang.String > problems ) {}
@ java.lang.Override public com.google.gerrit.pgm.init.VersionedAuthorizedKeysOnInit load ( ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { super . load () ; return this ; }
private java.lang.String encode ( java.lang.String segment ) { if ( type () . urlEncode () ) { return com.google.gwt.http.client.URL . encodeQueryString ( type () . replacePathSeparator ( segment ) ) ; } return segment ; }
public void put ( com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid , com.google.gerrit.common.data.GroupReference reference ) { if ( ( uuid == null ) || ( ( uuid . get () ) == null ) ) { return; } byUUID . put ( uuid , reference ) ; }
private com.google.gerrit.client.change.RelatedChangesTab getTab () { if ( ( relatedChangesTab ) == null ) { relatedChangesTab = createTab ( Resources.C . relatedChanges () , Resources.C . relatedChangesTooltip () , NUMBER_CONSTANT ) ; } return relatedChangesTab ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { setUpChanges () ; setUpPermissions () ; }
@ java.lang.Override public com.google.gerrit.extensions.api.changes.FileApi file ( java.lang.String path ) { return fileApi . create ( files . parse ( revision , com.google.gerrit.extensions.restapi.IdString . fromDecoded ( path ) ) ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ReadViewBinder < R > get ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType , java.lang.String name ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ReadViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.GET , name ) ) ; }
protected < K extends java.io.Serializable , V extends java.io.Serializable > com.google.gerrit.server.cache.UnnamedCacheBinding < K , V > disk ( final com.google.inject.TypeLiteral < com.google.gerrit.server.cache.Cache < K , V > > type ) { return disk ( com.google.inject.Key . get ( type ) , type ) ; }
private org.eclipse.jgit.lib.PersonIdent getSubmitterIdent () { return args.caller . newCommitterIdent ( args.serverIdent . getWhen () , args.serverIdent . getTimeZone () ) ; }
protected static void assertNotUsed ( java.sql.PreparedStatement insert ) { org.mockito.Mockito . verifyZeroInteractions ( insert ) ; }
@ java.lang.Override public int getCardinality () { return NUMBER_CONSTANT ; }
@ java.lang.Override public Project.NameKey getProjectName () { return getChange () . getProject () ; }
protected static com.google.gerrit.server.query.change.ChangeData newChangeData ( com.google.gerrit.server.mail.EmailArguments ea , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) { return ea.changeDataFactory . create ( ea.db . get () , project , id ) ; }
long read () { return generation . get () ; }
public final native void setCh ( int ch ) ;
private boolean canCreateCommit ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.revwalk.RevCommit commit ) { if ( canUpdate () ) { return true ; } else if ( isMergedIntoBranchOrTag ( repo , commit ) ) { return true ; } return false ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onLineNumbers ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . showLineNumbers ( e . getValue () ) ; if ( ( view ) != null ) { view . setShowLineNumbers ( prefs . showLineNumbers () ) ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { block ( Permission.PUSH , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS , STRING_CONSTANT ) ; }
private void allowPushOnRefsTags ( ) throws java.lang.Exception { removePushFromRefsTags () ; grant ( project , STRING_CONSTANT , Permission.PUSH , false , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS ) ; }
com.google.gerrit.server.query.change.ChangeData create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change c ) ;
@ java.lang.Override protected void preDisplay ( com.google.gerrit.client.projects.ConfigInfoCache.Entry result ) { loaded = true ; commentLinkProcessor = result . getCommentLinkProcessor () ; setTheme ( result . getTheme () ) ; renderChangeInfo ( info ) ; }
public java.util.Set < java.lang.String > getNames () { return cfg . getNames ( com.google.gerrit.server.config.PluginConfig.PLUGIN , pluginName , true ) ; }
private static com.google.gerrit.client.rpc.RestApi project ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { return new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . id ( name . get () ) ; }
@ org.junit.Test public void testToString () { org.junit.Assert . assertEquals ( STRING_CONSTANT , com.google.gerrit.server.query.Predicate . not ( f ( STRING_CONSTANT , STRING_CONSTANT ) ) . toString () ) ; }
public static com.google.gerrit.server.index.IndexConfig createDefault () { return com.google.gerrit.server.index.IndexConfig . create ( java.lang.Integer.MAX_VALUE ) ; }
@ java.lang.Override public synchronized com.google.gerrit.metrics.Timer0 newTimer ( java.lang.String name , com.google.gerrit.metrics.Description desc ) { com.google.gerrit.metrics.dropwizard.DropWizardMetricMaker . checkTimerDescription ( name , desc ) ; define ( name , desc ) ; return newTimerImpl ( name ) ; }
@ org.junit.Test public void testCreateProjectWithoutCapability_Forbidden ( ) throws java.lang.Exception { setApiUser ( user ) ; com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = name ( STRING_CONSTANT ) ; assertCreateFails ( in , com.google.gerrit.extensions.restapi.AuthException . class ) ; }
@ java.lang.Override void onRefReplicatedToAllNodes ( java.lang.String project , java.lang.String ref , int nodesCount ) { com.googlesource.gerrit.plugins.replication.RefReplicationDoneEvent event = new com.googlesource.gerrit.plugins.replication.RefReplicationDoneEvent ( project , ref , nodesCount ) ; postEvent ( project , ref , event ) ; }
java.lang.String getRemoteDisplayname ( javax.servlet.http.HttpServletRequest req ) { if ( ( displaynameHeader ) != null ) { return com.google.common.base.Strings . emptyToNull ( req . getHeader ( displaynameHeader ) ) ; } return null ; }
private com.google.gerrit.server.change.ChangeJson newChangeJson () { return jsonFactory . create ( ListChangesOption.CHECK ) ; }
@ java.lang.Override protected void configure () { install ( copyConfigModule ) ; install ( db ) ; install ( cm ) ; install ( sm ) ; }
private com.google.gerrit.server.patch.PatchList listFor ( com.google.gerrit.server.patch.PatchListKey key ) throws com.google.gerrit.server.patch.PatchListNotAvailableException { return patchListCache . get ( key , project ) ; }
public java.lang.String getName () { return ( name ) != null ? name . get () : null ; }
@ java.lang.Override public java.lang.String getRefName () { return com.google.gerrit.reviewdb.client.RefNames . robotCommentsRef ( getChangeId () ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onMatchBrackets ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . matchBrackets ( e . getValue () ) ; if ( ( view ) != null ) { view . setOption ( STRING_CONSTANT , prefs . matchBrackets () ) ; } }
public final native void line ( int n ) ;
public void init ( final javax.servlet.FilterConfig config ) {}
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , revision . getParentKey () , revision . getId () ) ) ; }
@ java.lang.Override public void onFailure ( java.lang.Exception reason ) { callback . onFailure ( reason ) ; }
public void onSuccess ( final java.util.List < com.google.gerrit.client.reviewdb.Branch > result ) { enableForm ( true ) ; branches . display ( result ) ; }
private boolean isRefVisible () { return getRefControl () . isVisible () ; }
com.ericsson.gerrit.plugins.highavailability.forwarder.rest.HttpResponseHandler.HttpResult delete ( java.lang.String endpoint ) throws java.io.IOException { return httpClient . execute ( new org.apache.http.client.methods.HttpDelete ( ( ( peerInfo . get () . getDirectUrl () ) + endpoint ) ) , new com.ericsson.gerrit.plugins.highavailability.forwarder.rest.HttpResponseHandler () ) ; }
@ java.lang.Override java.lang.Iterable < com.google.gwtorm.jdbc.AbstractTestJdbcAccess.Data > createIterable ( com.google.gwtorm.jdbc.AbstractTestJdbcAccess.Data . . . data ) { java.util.List < com.google.gwtorm.jdbc.AbstractTestJdbcAccess.Data > list = java.util.Arrays . asList ( data ) ; return new com.google.gwtorm.server.ListResultSet ( list ) ; }
public AccountGroup.UUID getGroupUUID () { return getGroup () . getGroupUUID () ; }
public com.google.gerrit.reviewdb.AccountGroup get ( final com.google.gerrit.reviewdb.AccountGroup.NameKey name ) { return byName . get ( name ) ; }
@ java.lang.Override void apply ( com.google.gerrit.server.notedb.ChangeUpdate update ) throws com.google.gwtorm.server.OrmException { checkUpdate ( update ) ; update . setChangeMessage ( message . getMessage () ) ; setTopic ( update ) ; }
public com.google.gerrit.acceptance.RestResponse execute ( org.apache.http.client.fluent.Request request ) throws java.io.IOException { return new com.google.gerrit.acceptance.RestResponse ( executor . execute ( request ) . returnResponse () ) ; }
public java.lang.String toProject ( final com.google.gerrit.client.reviewdb.Project.NameKey project ) { final java.lang.StringBuilder r = new java.lang.StringBuilder () ; com.google.gerrit.client.data.GitwebLink . p ( r , project ) ; com.google.gerrit.client.data.GitwebLink . a ( r , STRING_CONSTANT ) ; return ( baseUrl ) + r ; }
private static java.lang.String describe ( com.google.gerrit.server.CurrentUser user ) { if ( user . isIdentifiedUser () ) { return user . getAccountId () . toString () ; } return user . toString () ; }
@ java.lang.Override public java.lang.Boolean apply ( com.googlesource.gerrit.plugins.lfs.locks.LfsLock input ) { return input.owner.name . equals ( user . getUserName () . get () ) ; }
@ java.lang.Override public void run () { this . handleEmails ( true ) ; }
protected abstract org.eclipse.jgit.lib.CommitBuilder applyImpl ( org.eclipse.jgit.lib.ObjectInserter ins ) throws com.google.gwtorm.server.OrmException , java.io.IOException ;
public java.util.List < com.google.gerrit.common.data.GroupReference > run ( final com.google.gerrit.reviewdb.server.ReviewDb db ) { return suggestAccountGroup ( query , limit ) ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > indexAsync ( com.google.gerrit.reviewdb.client.Change.Id id ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( id , false ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
@ java.lang.Override public void onPluginLoad () { com.google.gerrit.plugin.client.Plugin . get () . panel ( GerritUiExtensionPoint.CHANGE_SCREEN_BELOW_COMMIT_INFO_BLOCK , new com.googlesource.gerrit.plugins.zuul.client.LabelPanel.Factory () , null ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwtjsonrpc.client.VoidResult result ) { com.google.gerrit.client.Gerrit . setAccountDiffPreference ( value ) ; setEnabled ( true ) ; }
@ java.lang.Override public com.googlecode.prolog_cafe.lang.NumberTerm toFloat () { return new com.googlecode.prolog_cafe.lang.DoubleTerm ( this . val ) ; }
private static java.lang.String url ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id ps , com.google.gerrit.client.changes.CommentInfo info ) { return com.google.gerrit.client.Dispatcher . toPatch ( project , null , ps , info . path () ) ; }
@ org.junit.Test public void testCreateProjectWithNameMismatch_BadRequest ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = STRING_CONSTANT ; com.google.gerrit.acceptance.RestResponse r = adminSession . put ( STRING_CONSTANT , in ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_BAD_REQUEST ) ; }
@ java.lang.Override public void postEvent ( com.google.gerrit.server.events.Event event ) throws com.google.gwtorm.server.OrmException { fireEvent ( event ) ; }
public void clear () { setCat ( null ) ; setName ( STRING_CONSTANT ) ; setReference ( STRING_CONSTANT ) ; }
private static com.google.gerrit.plugin.client.rpc.RestApi change ( java.lang.String id ) { return new com.google.gerrit.plugin.client.rpc.RestApi ( STRING_CONSTANT ) . id ( id ) ; }
private java.util.List < com.google.gerrit.common.data.SubmitRecord > ruleError ( java.lang.String err ) { return ruleError ( err , null ) ; }
static com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > create () { return com.google.gerrit.server.query.Predicate . not ( new com.google.gerrit.server.query.change.IsReviewedPredicate ( com.google.gerrit.server.query.change.IsReviewedPredicate.NOT_REVIEWED ) ) ; }
@ java.lang.Override public void updateChange ( com.google.gerrit.server.git.BatchUpdate.ChangeContext ctx ) throws java.lang.Exception { ctx . getUpdate ( ps . getId () ) . setTopic ( magicBranch.topic ) ; }
protected com.google.gerrit.reviewdb.client.Change newChange () { return com.google.gerrit.testutil.TestChanges . newChange ( project , changeOwner . getAccountId () ) ; }
public static org.commonmark.node.Node parse ( java.lang.String md ) { return com.google.gitiles.doc.GitilesMarkdown.PARSER . parse ( md ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > post ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType , java.lang.String name ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.POST , name ) ) ; }
public T get ( I input ) throws com.google.gwtorm.server.OrmException { try { return getter . get ( input ) ; } catch ( java.io.IOException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.common.data.ChangeDetail info ) { com.google.gerrit.client.changes.ChangeDetailCache . setChangeDetail ( info ) ; }
public void setPatchSet ( final com.google.gerrit.reviewdb.client.PatchSet ps ) { patchSet = ps ; }
@ org.junit.After public void tearDown () { if ( ( plugin ) != null ) { plugin . stop ( env ) ; env . onStopPlugin ( plugin ) ; } }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; setPageTitle ( Util.C . groupListTitle () ) ; initPageHeader () ; groups = new com.google.gerrit.client.admin.GroupTable ( com.google.gerrit.common.PageLinks.ADMIN_GROUPS ) ; add ( groups ) ; }
@ org.junit.Test public void dashboardDoesNotExist ( ) throws java.lang.Exception { exception . expect ( com.google.gerrit.extensions.restapi.ResourceNotFoundException . class ) ; project () . dashboard ( STRING_CONSTANT ) . get () ; }
private com.google.gerrit.server.git.SubmitStrategy createStrategy ( final com.google.gerrit.reviewdb.client.Project.SubmitType submitType ) throws com.google.gerrit.server.git.MergeException , com.google.gerrit.server.project.NoSuchProjectException { return submitStrategyFactory . create ( submitType , db , repo , rw , inserter , canMergeFlag , getAlreadyAccepted ( branchTip ) , destBranch ) ; }
@ java.lang.Override void clearLine ( com.google.gerrit.client.diff.DisplaySide side , int line , com.google.gerrit.client.diff.CommentGroup group ) { super . clearLine ( side , line , group ) ; }
@ java.lang.Override public void remove () { filter . destroy () ; }
private org.eclipse.jgit.errors.ConfigInvalidException parseException ( java.lang.String fmt , java.lang.Object . . . args ) { return new org.eclipse.jgit.errors.ConfigInvalidException ( ( ( ( STRING_CONSTANT + ( changeId ) ) + STRING_CONSTANT ) + ( java.lang.String . format ( fmt , args ) ) ) ) ; }
public final boolean submittable () { init () ; return _submittable () ; }
public static void invalidate ( final com.google.gerrit.client.reviewdb.Account acct ) { if ( acct != null ) { synchronized ( com.google.gerrit.server.ssh.SshUtil.keys ) { com.google.gerrit.server.ssh.SshUtil.keys . remove ( acct . getPreferredEmail () ) ; } } }
com.google.gerrit.server.git.CreateCodeReviewNotes create ( com.google.gerrit.reviewdb.server.ReviewDb reviewDb , com.google.gerrit.reviewdb.client.Project.NameKey project , org.eclipse.jgit.lib.Repository db ) ;
@ java.lang.Override public void onDoubleClick ( com.google.gwt.event.dom.client.DoubleClickEvent arg0 ) { setEdit ( true ) ; }
private static void execute ( org.eclipse.jgit.lib.BatchRefUpdate bru , org.eclipse.jgit.lib.Repository repo ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { bru . execute ( rw , NullProgressMonitor.INSTANCE ) ; } }
@ java.lang.Override public void submit ( com.google.gerrit.extensions.api.changes.SubmitInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { submit . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public java.lang.String toString () { return body . get () ; }
public java.util.List < com.google.gerrit.server.patch.PatchListEntry > getPatches () { return java.util.Collections . unmodifiableList ( patches ) ; }
@ java.lang.Override public java.util.Optional < com.google.gerrit.reviewdb.client.Account.Id > load ( java.lang.String username ) throws java.lang.Exception { return externalIds . get ( ExternalId.Key . create ( com.google.gerrit.server.account.externalids.ExternalId.SCHEME_GERRIT , username ) ) . map ( ExternalId : : accountId ) ; }
public com.google.gerrit.server.mail.CreateChangeSender create ( com.google.gerrit.reviewdb.client.Change.Id id ) ;
com.google.gerrit.server.project.ProjectState get ( com.google.gerrit.reviewdb.client.Project.NameKey projectName ) ;
public com.google.gerrit.reviewdb.client.SystemConfig getSystemConfig ( ) throws com.google.gwtorm.server.OrmException { try ( com.google.gerrit.reviewdb.server.ReviewDb c = open () ) { return c . systemConfig () . get ( new com.google.gerrit.reviewdb.client.SystemConfig.Key () ) ; } }
@ java.lang.Override public synchronized void sendRedirect ( java.lang.String msg ) { status = SC_FOUND ; committed = true ; }
public static void commitWithLinks ( @ com.google.gerrit.common.Nullable java.lang.String project , int changeId , java.lang.String revision , com.google.gerrit.client.rpc.CallbackGroup.Callback < com.google.gerrit.client.info.ChangeInfo.CommitInfo > callback ) { com.google.gerrit.client.changes.ChangeApi . revision ( project , changeId , revision ) . view ( STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . get ( callback ) ; }
public void login ( com.google.gerrit.server.account.AuthResult res , boolean rememberMe ) ;
private com.google.gerrit.client.diff.DraftBox addNewDraft ( net.codemirror.lib.CodeMirror cm , int line ) { return addDraftBox ( com.google.gerrit.client.changes.CommentInfo . create ( path , getSideFromCm ( cm ) , ( line + NUMBER_CONSTANT ) , null , null ) ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return com.google.gerrit.reviewdb.client.RefNames . refsDraftComments ( accountId , ctl . getId () ) ; }
public void onSuccess ( com.google.gerrit.common.data.AgreementInfo result ) { if ( isAttached () ) { mySigned = new java.util.HashSet ( result.accepted ) ; postRPC () ; } }
java.lang.String patchWindowTitle ( java.lang.String changeId , java.lang.String file ) ;
@ java.lang.Override public synchronized void evict ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Account.Id accountId ) { if ( ( byId ) != null ) { byId . remove ( accountId ) ; } }
public com.google.gerrit.server.IdentifiedUser create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return create ( ( ( java.net.SocketAddress ) ( null ) ) , id ) ; }
private void newChangeFooter () { if ( ( changeUrl () ) != null ) { openFooter () ; body . append ( STRING_CONSTANT ) ; body . append ( changeUrl () ) ; body . append ( STRING_CONSTANT ) ; } }
com.google.gerrit.httpd.rpc.project.ChangeProjectAccess create ( @ com.google.inject.assistedinject.Assisted com.google.gerrit.reviewdb.client.Project.NameKey projectName , @ javax.annotation.Nullable @ com.google.inject.assistedinject.Assisted org.eclipse.jgit.lib.ObjectId base , @ com.google.inject.assistedinject.Assisted java.util.List < com.google.gerrit.common.data.AccessSection > sectionList , @ javax.annotation.Nullable @ com.google.inject.assistedinject.Assisted java.lang.String message ) ;
com.google.gerrit.gpg.GerritPushCertificateChecker create ( com.google.gerrit.server.IdentifiedUser expectedUser ) ;
public com.google.common.util.concurrent.CheckedFuture < java.lang.Boolean , java.io.IOException > updateAsync ( com.google.gerrit.reviewdb.client.Change change ) { return updateAsync ( change , false ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.rpc.NativeString b64 ) { if ( b64 != null ) { wrapped . onSuccess ( com.google.gerrit.client.changes.ChangeFileApi . b64decode ( b64 . asString () ) ) ; } }
public static com.google.gerrit.common.data.SubmitTypeRecord defaultTypeError () { return com.google.gerrit.common.data.SubmitTypeRecord . error ( com.google.gerrit.server.project.SubmitRuleEvaluator.DEFAULT_MSG ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.query.change.ChangeQueryRewriter . class ) . to ( com.google.gerrit.server.index.IndexRewriteImpl . class ) ; bind ( com.google.gerrit.server.index.IndexCollection . class ) ; listener () . to ( com.google.gerrit.server.index.IndexCollection . class ) ; factory ( ChangeIndexer.Factory . class ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; servlet = com.google.gitiles.TestGitilesServlet . create ( repo ) ; }
private int getInt ( java.lang.String n , java.lang.String s , int d ) { return config . getInt ( STRING_CONSTANT , n , s , d ) ; }
@ java.lang.Override protected void preDisplay ( final java.util.List < com.google.gerrit.client.reviewdb.AccountGroup > result ) { groups . display ( result ) ; groups . finishDisplay () ; }
protected < T > T buildJson ( java.lang.String path , java.lang.Class < T > classOfT ) throws java.lang.Exception { return buildJson ( path , classOfT , STRING_CONSTANT ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwtjsonrpc.client.VoidResult result ) { setEnabled ( true ) ; }
private static native java.lang.String go ( com.google.gwt.core.client.JavaScriptObject ctx , java.lang.String srcText , java.lang.String srcType ) ;
void postEvent ( com.google.gerrit.server.events.Event event ) throws com.google.gwtorm.server.OrmException ;
private static com.google.gerrit.extensions.common.AccountInfo fromAcountInfo ( com.google.gerrit.extensions.common.AccountInfo i ) { if ( i == null ) { return null ; } com.google.gerrit.extensions.common.AccountInfo ai = new com.google.gerrit.extensions.common.AccountInfo () ; com.google.gerrit.server.api.changes.ChangeInfoMapper . fromAccount ( i , ai ) ; return ai ; }
private void assertNoProblems ( com.google.gerrit.server.notedb.ChangeNotes notes , @ com.google.gerrit.common.Nullable com.google.gerrit.extensions.api.changes.FixInput fix ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( checker . check ( notes , fix ) . problems () ) . isEmpty () ; }
@ org.junit.Test public void testEntityNbsp () { final com.google.gwtexpui.safehtml.client.SafeHtmlBuilder b = new com.google.gwtexpui.safehtml.client.SafeHtmlBuilder () ; org.junit.Assert . assertSame ( b , b . nbsp () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , b . asString () ) ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; refresh ( true ) ; }
@ java.lang.Override public void run () { try { java.nio.file.Files . walkFileTree ( gitDir . toPath () , new com.googlesource.gerrit.plugins.deleteproject.fs.DeleteTrashFolders.TrashFolderRemover () ) ; } catch ( java.io.IOException e ) { com.googlesource.gerrit.plugins.deleteproject.fs.DeleteTrashFolders.log . warn ( STRING_CONSTANT , e ) ; } }
com.google.gerrit.git.PatchSetImporter create ( com.google.gerrit.client.reviewdb.ReviewDb dstDb , org.spearce.jgit.revwalk.RevCommit srcCommit , com.google.gerrit.client.reviewdb.PatchSet dstPatchSet , boolean isNewPatchSet ) ;
protected org.eclipse.jgit.revwalk.RevWalk getRevWalk ( ) throws java.io.IOException { initRepository () ; return revWalk ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { gotoSibling ( NUMBER_CONSTANT ) ; }
@ java.lang.Override protected java.lang.Object createServiceHandle ( ) throws java.lang.Exception { return new com.google.gerrit.server.ProjectAdminServiceImpl ( server ) ; }
private com.google.gerrit.server.git.VersionedMetaDataTest.MyMetaData load ( java.lang.String ref , int expectedValue ) throws java.lang.Exception { com.google.gerrit.server.git.VersionedMetaDataTest.MyMetaData d = new com.google.gerrit.server.git.VersionedMetaDataTest.MyMetaData ( ref ) ; d . load ( repo ) ; com.google.common.truth.Truth . assertThat ( d . getValue () ) . isEqualTo ( expectedValue ) ; return d ; }
@ java.lang.Override public V apply ( com.google.gerrit.ehcache.SerializableProtobuf < V > val ) { return val != null ? val . toObject ( valueCodec , valueProvider ) : null ; }
com.google.gitiles.CommitData.Builder setArchiveFormat ( @ javax.annotation.Nullable com.google.gitiles.ArchiveFormat archiveFormat ) { this . archiveFormat = archiveFormat ; return this ; }
private boolean canRead ( org.eclipse.jgit.lib.ObjectId revId ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( revId ) ; return projectControl . canReadCommit ( db , rw , commit ) ; } }
@ java.lang.Override protected com.google.gerrit.server.index.QueryOptions createOptions ( com.google.gerrit.server.index.IndexConfig indexConfig , int start , int limit , java.util.Set < java.lang.String > requestedFields ) { return com.google.gerrit.server.index.change.IndexedChangeQuery . createOptions ( indexConfig , start , limit , requestedFields ) ; }
@ java.lang.Override com.google.gerrit.server.query.change.ChangeData convert ( com.google.gerrit.reviewdb.client.PatchSet t ) { return factory . create ( db . get () , t . getId () . getParentKey () ) ; }
public com.google.gerrit.common.data.PermissionRange getRange ( java.lang.String permission ) { return getRange ( permission , false ) ; }
public void setLoggedIn ( boolean b ) { loggedIn = b ; }
private boolean checkAndUpdateArrows () { if ( ( numSkipLines ) <= ( com.google.gerrit.client.diff.SkipBar.UP_DOWN_THRESHOLD ) ) { addStyleName ( style . noExpand () ) ; return false ; } return true ; }
@ java.lang.Override public java.lang.Object apply ( com.google.gerrit.server.group.GroupResource resource ) { return new com.google.gerrit.server.group.GroupInfo ( resource . getGroup () ) ; }
public static void setBackground ( android.view.View view , android.graphics.drawable.Drawable drawable ) { view . setBackground ( drawable ) ; }
public final native void setCh ( int ch ) ;
@ org.junit.Test public void testDefaultBehaviour () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.google.gerrit.common.data.GitWebType () . replacePathSeparator ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public com.google.gerrit.server.account.GroupMembership membershipsOf ( com.google.gerrit.server.IdentifiedUser user ) { java.lang.String username = user . getUserName () ; if ( com.google.common.base.Strings . isNullOrEmpty ( username ) ) { return com.google.gerrit.server.account.GroupMembership.EMPTY ; } return ghMembershipProvider . get ( username ) ; }
public static void createGroup ( java.lang.String groupName , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.groups.GroupInfo > cb ) { com.google.gwt.core.client.JavaScriptObject in = com.google.gwt.core.client.JavaScriptObject . createObject () ; new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . id ( groupName ) . ifNoneMatch () . put ( in , cb ) ; }
protected com.google.gerrit.server.IdentifiedUser user ( com.google.gerrit.acceptance.TestAccount testAccount ) { return identifiedUserFactory . create ( testAccount . getId () ) ; }
private boolean isRelevantRef ( com.google.gerrit.server.events.RefUpdatedEvent event ) { return ! ( isNewRef ( event ) ) ; }
public static java.lang.String toPatch ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String type , com.google.gerrit.client.DiffObject diffBase , com.google.gerrit.reviewdb.client.Patch.Key id ) { return com.google.gerrit.client.Dispatcher . toPatch ( type , project , diffBase , id . getParentKey () , id . get () , null , NUMBER_CONSTANT ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.NetworkStatus getRawValue ( org.ovirt.engine.core.common.businessentities.Network object ) { return object . getStatus () ; }
public void appendBody ( java.lang.String newBody ) { if ( newBody != null ) { body . append ( newBody ) ; } }
private void propagateLabeledNetworksChanges () { runInternalAction ( VdcActionType.PropagateLabeledNetworksToClusterHosts , getParameters () ) ; }
public org.ovirt.engine.ui.uicommonweb.models.ListModel flush () { return driver . flush () ; }
@ org.junit.Before public void testSetup () { mockQuotaDAO () ; }
@ javax.ws.rs.GET public org.ovirt.engine.api.v3.types.V3VM get () { org.ovirt.engine.api.v3.types.V3VM vm = adaptGet ( getDelegate () : : get ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . addDisksLink ( vm ) ; return vm ; }
private void assertVmGuestAgentInterfaceForVm ( java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > interfaces ) { org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.VmGuestAgentInterfaceDaoTest.VM_GUEST_AGENT_INTERFACES_SIZE , interfaces . size () ) ; for ( org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface vmGuestAgentInterface : interfaces ) { org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.VmGuestAgentInterfaceDaoTest.EXISTING_VM_ID , vmGuestAgentInterface . getVmId () ) ; } }
public void setQuotaName ( java.lang.String quotaName ) { this . quotaName = quotaName ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.DbUser > getAllForVm ( org.ovirt.engine.core.compat.Guid id ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance , parameterSource ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { model . setSelectedItem ( bookmark ) ; model . executeCommand ( model . getEditCommand () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool returnValue ) { context.dataCenterFoundById = returnValue ; rollback2 () ; }
@ java.lang.Override public org.ovirt.engine.core.searchbackend.IAutoCompleter getFieldRelationshipAutoCompleter ( java.lang.String fieldName ) { return StringConditionRelationAutoCompleter.INSTANCE ; }
public void logAndFailTaskOfCommandWithEmptyVdsmId ( org.ovirt.engine.core.compat.Guid asyncTaskId , java.lang.String message ) { org.ovirt.engine.core.common.businessentities.AsyncTasks task = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getAsyncTaskDao () . get ( asyncTaskId ) ; logAndFailTaskOfCommandWithEmptyVdsmId ( task , message ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Quota get () { org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ; org.ovirt.engine.api.model.Quota quota = performGet ( VdcQueryType.GetQuotaByQuotaId , params ) ; return quota ; }
void vdsNotResponding ( org.ovirt.engine.core.common.businessentities.VDS vds ) ;
@ org.junit.Test public void validateSucceeds () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.RemoveAuditLogByIdCommand ( new org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_3 ) , null ) ) ; prepareMocks ( command ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
protected org.ovirt.engine.core.common.businessentities.Network getNetwork () { return org.ovirt.engine.core.bll.network.dc.NetworkCommon . getParameters () . getNetwork () ; }
private static org.ovirt.engine.core.common.businessentities.StoragePool createNewStoragePool () { org.ovirt.engine.core.common.businessentities.StoragePool pool = org.ovirt.engine.core.bll.storage.UpdateStoragePoolCommandTest . createBasicPool () ; pool . setstorage_pool_type ( StorageType.NFS ) ; pool . setcompatibility_version ( org.ovirt.engine.core.bll.storage.UpdateStoragePoolCommandTest.VERSION_1_1 ) ; return pool ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( new org.ovirt.engine.ui.frontend.INewAsyncCallback () { @ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { doInit () ; } } , externalVms ) ; }
public void setPendingVcpusCount ( java.lang.Integer value ) { mVdsDynamic . setPendingVcpusCount ( value ) ; }
@ org.junit.Test public void testIsUp () { mockHostForActivation ( VDSStatus.Up ) ; org.junit.Assert . assertTrue ( validator . isUp () . isValid () ) ; }
@ org.junit.Test public void hasNoStorageDomains () { org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( cmd ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.RoleGroupMap mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { return new org.ovirt.engine.core.common.businessentities.RoleGroupMap ( org.ovirt.engine.core.common.businessentities.ActionGroup . forValue ( rs . getInt ( STRING_CONSTANT ) ) , getGuidDefaultEmpty ( rs , STRING_CONSTANT ) ) ; }
protected java.lang.Object getSessionUser ( java.lang.String sessionID ) { return org.ovirt.engine.core.bll.session.SessionDataContainer . getInstance () . getUser ( sessionID , false ) ; }
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.StorageDomain value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity () ) ) ) ) { super . setEntity ( value ) ; updateActionAvailability () ; } }
@ org.junit.Test public void testGetInnerJoin () { org.junit.Assert . assertNotNull ( STRING_CONSTANT , comp . getInnerJoin ( STRING_CONSTANT , STRING_CONSTANT , true ) ) ; }
private static boolean map ( org.ovirt.engine.api.model.VnicPassThroughMode vnicPassThroughMode ) { return ( org.ovirt.engine.api.model.VnicPassThroughMode.ENABLED ) == vnicPassThroughMode ; }
@ java.lang.Override public void updateNotified ( org.ovirt.engine.core.compat.Guid id ) { getCallsHandler () . executeModification ( STRING_CONSTANT , createIdParameterMapper ( id ) . addValue ( STRING_CONSTANT , true ) ) ; }
@ java.lang.Override public javax.ws.rs.core.Response remove () { get () ; org.ovirt.engine.core.common.action.WatchdogParameters parameters = new org.ovirt.engine.core.common.action.WatchdogParameters () ; parameters . setId ( templateId ) ; parameters . setVm ( false ) ; return performAction ( VdcActionType.RemoveWatchdog , parameters ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm , vm . getStatus () ) ; org.ovirt.engine.core.bll.VmHandler . LockVm ( vm . getId () ) ; compensationContext . stateChanged () ; return null ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { getConnectivityTimeout () . setEntity ( returnValue ) ; postOnSetupNetworks () ; }
@ org.junit.Test public void testEvalNegative () { org.mockito.Mockito . doReturn ( true ) . when ( mockExternalNetworkPredicate ) . test ( mockNetwork ) ; org.junit.Assert . assertFalse ( underTest . test ( mockNetwork ) ) ; }
public java.util.Collection < org.ovirt.engine.core.compat.Guid > getGroupIds () { if ( ( groupIds ) == null ) { groupIds = java.util.Collections . emptyList () ; } return new java.util.ArrayList ( groupIds ) ; }
void storagePoolUpEvent ( org.ovirt.engine.core.common.businessentities.StoragePool storagePool ) ;
public void setstatus ( org.ovirt.engine.core.common.businessentities.VDSStatus value ) { this . mVdsDynamic . setstatus ( value ) ; }
@ java.lang.Override public void setUp () { super . setUp () ; generateStorageToDisksMap () ; initDestSDs () ; }
public void persistCommand ( org.ovirt.engine.core.common.action.VdcActionType parentCommand , boolean enableCallBack ) { persistCommand ( parentCommand , getContext () , enableCallBack ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > getLuns () { if ( luns . isEmpty () ) { luns = org.ovirt.engine.core.bll.storage.connection.UpdateStorageServerConnectionCommand . getLunDao () . getAllForStorageServerConnection ( org.ovirt.engine.core.bll.storage.connection.UpdateStorageServerConnectionCommand . getConnection () . getId () ) ; } return luns ; }
private void initAddRemoveWidget () { addRemoveVmWidget = new org.ovirt.engine.ui.common.widget.form.key_value.KeyValueWidget ( STRING_CONSTANT ) ; }
@ org.junit.Test public void testGetAllForStoragePoolWithPermissionsDisabledUnprivilegedUser () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStoragePool ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , false ) ; org.ovirt.engine.core.dao.StorageDomainDAOTest . assertGetAllForStoragePoolResult ( result , org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _messages . post ( InstallerMessages.Severity.INFO , java.lang.String . format ( STRING_CONSTANT , _parser . cliEnvironmentGet ( CoreEnv.LOG_FILE_NAME ) ) ) ; return true ; }
public java.lang.String getVmPoolName () { return ( getVmPool () ) != null ? getVmPool () . getName () : null ; }
@ java.lang.Override protected boolean canPerformRollbackUsingCommand ( org.ovirt.engine.core.common.action.VdcActionType commandType , org.ovirt.engine.core.common.action.VdcActionParametersBase params ) { return ( org.ovirt.engine.core.bll.MoveOrCopyImageGroupCommand . getDiskImageDAO () . get ( org.ovirt.engine.core.bll.MoveOrCopyImageGroupCommand . getParameters () . getDestinationImageId () ) ) != null ; }
private void initTabAvailabilityListeners ( final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel vm ) { highAvailabilityTab . setVisible ( true ) ; isStatelessEditor . setVisible ( false ) ; numOfMonitorsEditor . setVisible ( false ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid eval ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomainStatic ) { return storageDomainStatic . getId () ; }
protected org.ovirt.engine.core.common.action.VdcActionParametersBase getRemoveVmInterfaceParams ( org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface vnic ) { return new org.ovirt.engine.core.common.action.RemoveVmInterfaceParameters ( vnic . getVmId () , vnic . getId () ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.VDS o1 , org.ovirt.engine.core.common.businessentities.VDS o2 ) { return java.lang.Integer . valueOf ( calculateCpuUsage ( o1 ) ) . compareTo ( calculateCpuUsage ( o2 ) ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createBond ( java.lang.String name , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , name , true , null , null , networkName , true , null ) ; }
@ java.lang.Override public final org.ovirt.engine.core.compat.TimeSpan getTimeSpanValue ( java.lang.String name , java.lang.String defaultValue ) { return ( ( org.ovirt.engine.core.compat.TimeSpan ) ( getValue ( DataType.TimeSpan , name , defaultValue ) ) ) ; }
private org.ovirt.engine.core.common.businessentities.storage.LunDisk createLunDisk ( org.ovirt.engine.core.common.businessentities.storage.ScsiGenericIO sgio ) { org.ovirt.engine.core.common.businessentities.storage.LunDisk lunDisk = org.ovirt.engine.core.bll.validator.storage.DiskValidatorTest . createLunDisk () ; lunDisk . setSgio ( sgio ) ; return lunDisk ; }
@ java.lang.Override public java.lang.String getCandidateDisplayName () { return getVmData () . getName () ; }
@ java.lang.Override public java.lang.String getStorageDomainName () { if ( ( org.apache.commons.lang.StringUtils . isEmpty ( storageDomainName ) ) && ( ( getStorageDomain () ) != null ) ) { storageDomainName = getStorageDomain () . getStorageName () ; } return org.apache.commons.lang.StringUtils . defaultString ( storageDomainName ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.pm.FenceAgent > getFenceAgents () { return getBackendCollection ( VdcQueryType.GetFenceAgentsByVdsId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( hostId ) ) ) ; }
@ org.junit.Test public void addWithExistingMacAddressSucceed () { org.ovirt.engine.core.common.businessentities.network.VmNic iface = org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () ; runAddAndVerify ( iface , true , org.mockito.Mockito . times ( NUMBER_CONSTANT ) , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.OS_ID ) ; }
public void reorder ( java.lang.String server , java.util.List < java.lang.String > servers ) { if ( servers . remove ( server ) ) { reorderImpl ( server , servers ) ; } }
@ org.junit.Test public void testEmpty () { org.ovirt.engine.api.types.V4Vm object = objectFromJson ( STRING_CONSTANT ) ; org.junit.Assert . assertNotNull ( object ) ; org.junit.Assert . assertNull ( object . id () ) ; org.junit.Assert . assertNull ( object . name () ) ; }
public void setEntity ( org.ovirt.engine.core.common.businessentities.StoragePool value ) { super . setEntity ( value ) ; }
public boolean hasSpiceSupport ( int osId , org.ovirt.engine.core.compat.Version version ) { return getDisplayTypes ( osId , version ) . contains ( DisplayType.qxl ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.Iterator < org.ovirt.engine.ui.uicommonweb.models.vms.InstanceImageLineModel > lineModelIterator = orderedDisksIterator ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.Disk > ) ( returnValue ) ) , vm ) ; storeNextDisk ( lineModelIterator , vm ) ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( command == ( runOnceCommand ) ) { if ( validate () ) { onRunOnce () ; } } else if ( command == ( cancelCommand ) ) { commandTarget . executeCommand ( command ) ; } }
@ org.junit.Before public void setUp () { parameters = new org.ovirt.engine.core.common.action.StorageDomainParametersBase ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; parameters . setVdsId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.storage.SyncLunsInfoForBlockStorageDomainCommand ( parameters , null ) ) ; }
@ org.junit.Test public void sufficientDiskSpace () { final org.ovirt.engine.core.bll.ImportVmTemplateCommand c = setupDiskSpaceTest ( NUMBER_CONSTANT ) ; org.junit.Assert . assertTrue ( c . canDoAction () ) ; }
@ java.lang.Override protected java.util.List < java.lang.Class < > > getValidationGroups () { if ( org.ovirt.engine.core.bll.ImportVmCommand . getParameters () . isImportAsNewEntity () ) { return org.ovirt.engine.core.bll.ImportVmCommand . addValidationGroup ( org.ovirt.engine.core.common.validation.group.ImportClonedEntity . class ) ; } return org.ovirt.engine.core.bll.ImportVmCommand . addValidationGroup ( org.ovirt.engine.core.common.validation.group.ImportEntity . class ) ; }
@ java.lang.Override public void onSucceeded ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { super . onSucceeded ( cmdId , childCmdIds ) ; getCommand () . endAction () ; }
public boolean isSpiceFileTransferToggleSupported ( java.lang.String version ) { return ( ( java.lang.Boolean ) ( getConfigValuePreConverted ( ConfigurationValues.SpiceFileTransferToggleSupported , version ) ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return i . getName () . equals ( getParameters () . getBondName () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageDomain getEntity () { return super . getEntity () ; }
private java.util.List < org.ovirt.engine.core.common.action.LiveMigrateDiskParameters > createLiveMigrateVmDisksParameters () { return java.util.Arrays . asList ( new org.ovirt.engine.core.common.action.LiveMigrateDiskParameters ( diskImageId , srcStorageId , dstStorageId , vmId , quotaId , diskImageId ) ) ; }
private void prepareMocks () { org.mockito.Mockito . doReturn ( getUpServers () ) . when ( glusterUtils ) . getAllUpServers ( org.mockito.ArgumentMatchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ; }
@ org.junit.Before public void setup () { map = new org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap () ; cmd . init () ; }
public void overrideEngineManagedAttributes ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface sourceNic ) { setLabels ( sourceNic . getLabels () ) ; setCustomProperties ( sourceNic . getCustomProperties () ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Quota > searchQuota () { java.util.List < org.ovirt.engine.core.common.businessentities.Quota > quotaList = genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getQuotaDao () , true ) ; org.ovirt.engine.core.bll.quota.QuotaManager . getInstance () . updateUsage ( quotaList ) ; return quotaList ; }
@ org.junit.Test public void serializeNetwork () { org.ovirt.engine.core.common.businessentities.Network net = new org.ovirt.engine.core.common.businessentities.Network () ; org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer serialezer = new org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer () ; junit.framework.Assert . assertTrue ( ( ( serialezer . serialize ( net ) . length () ) > NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public void onSessionExpired () { Window.Location . reload () ; }
private boolean hasFreeSpace ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { if ( ( getDiskImageInfo () . getvolume_type () ) == ( org.ovirt.engine.core.common.businessentities.VolumeType.Preallocated ) ) { return doesStorageDomainhaveSpaceForRequest ( storageDomain ) ; } return isStorageDomainWithinThresholds ( storageDomain ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . getName () ; }
@ java.lang.Override public java.lang.String toString () { return org.ovirt.engine.core.common.utils.ToStringBuilder . forInstance ( this ) . append ( STRING_CONSTANT , ( isRequestCompleted () ? getStatus () : STRING_CONSTANT ) ) . build () ; }
protected boolean checkIfCpusSameManufacture ( org.ovirt.engine.core.common.businessentities.VDSGroup group ) { return org.ovirt.engine.core.bll.CpuFlagsManagerHandler . checkIfCpusSameManufacture ( group . getcpu_name () , org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getVdsGroup () . getcpu_name () , org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getVdsGroup () . getcompatibility_version () ) ; }
@ org.junit.Test ( expected = java.lang.RuntimeException . class ) public void testInvalidToken2 ( ) throws java.lang.Exception { java.lang.String incoming = STRING_CONSTANT ; org.ovirt.otopi.dialog.MachineDialogParser parser = getParser ( incoming , new java.io.ByteArrayOutputStream () ) ; parser . nextEvent () ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . getvm_name () ; }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , org.ovirt.engine.core.bll.job.ExecutionContext executionContext ) { return runMultipleActionsImpl ( actionType , parameters , true , false , false , executionContext ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Permissions > getTreeForEntity ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.common.VdcObjectType type , org.ovirt.engine.core.compat.Guid userID , boolean isFiltered ) { int appMode = org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.ApplicationMode ) ; return getTreeForEntity ( id , type , userID , isFiltered , appMode ) ; }
@ java.lang.Override public void hideSuggestions () { if ( ( suggestionPopup ) != null ) { suggestionPopup . hide ( false ) ; } }
protected boolean setAndValidateDiskProfiles () { return validate ( org.ovirt.engine.core.bll.profiles.DiskProfileHelper . setAndValidateDiskProfiles ( java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.storage.disk.image.RegisterDiskCommand . getDiskImage () , org.ovirt.engine.core.bll.storage.disk.image.RegisterDiskCommand . getStorageDomainId () ) , org.ovirt.engine.core.bll.storage.disk.image.RegisterDiskCommand . getCurrentUser () ) ) ; }
@ org.junit.Test public void useDefaultMTU () { java.util.Set < javax.validation.ConstraintViolation < org.ovirt.engine.core.common.utils.MTUValidatorTest.MtuContainer > > validate = validate ( new org.ovirt.engine.core.common.utils.MTUValidatorTest.MtuContainer ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertTrue ( validate . isEmpty () ) ; }
public void setImageId ( org.ovirt.engine.core.compat.Guid imageId ) { this . imageId = imageId ; }
@ java.lang.Override protected void executeCommand () { addVmToDb () ; processImages () ; setSucceeded ( true ) ; }
private void mockBackend ( org.ovirt.engine.core.bll.AddVmCommand < > cmd ) { org.mockito.Mockito . doReturn ( backend ) . when ( cmd ) . getBackend () ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.scheduling.ClusterPolicy object ) { return object . getName () ; }
public final java.lang.Object getData ( java.lang.String key , boolean refresh ) { return getData ( org.ovirt.engine.core.utils.ThreadLocalParamsContainer . getHttpSessionId () , key , refresh ) ; }
@ java.lang.Override protected void ExecuteVdsBrokerCommand () { super . ExecuteVdsBrokerCommand () ; updateNetConfigDirtyFlag () ; org.ovirt.engine.core.vdsbroker.vdsbroker.CollectVdsNetworkDataVDSCommand . persistAndEnforceNetworkCompliance ( org.ovirt.engine.core.vdsbroker.vdsbroker.CollectVdsNetworkDataVDSCommand . getVds () , false ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.CollectVdsNetworkDataVDSCommand . ProceedProxyReturnValue () ; }
public java.lang.Integer getMaxVmNameLengthWin () { java.lang.Integer maxVmNameLengthWindows = ( ( java.lang.Integer ) ( getConfigValuePreConverted ( ConfigurationValues.MaxVmNameLengthWindows ) ) ) ; if ( maxVmNameLengthWindows == null ) { return NUMBER_CONSTANT ; } return maxVmNameLengthWindows ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.ovirt.engine.core.compat.StringHelper . isNullOrEmpty ( i . getBondName () ) ; }
@ java.lang.Override protected boolean validate () { return ( checkRemoveEditValidations () ) && ( checkAddEditValidations () ) ; }
public void setDedicatedVmForVds ( org.ovirt.engine.core.compat.Guid value ) { vmStatic . setDedicatedVmForVds ( value ) ; }
@ org.junit.Before public void setup () { executor = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.pm.HostFenceActionExecutor ( fencedHost , new org.ovirt.engine.core.common.businessentities.FencingPolicy () ) ) ; org.mockito.Mockito . doReturn ( agentExecutor1 ) . doReturn ( agentExecutor2 ) . when ( executor ) . createFenceActionExecutor ( org.mockito.ArgumentMatchers . any () ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.VmDiskResource getDiskResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendVmDiskResource ( id , vmId ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { populateDomains ( ( ( java.util.List < java.lang.String > ) ( result ) ) ) ; }
@ java.lang.Override public void resizeColumn ( com.google.gwt.user.cellview.client.Column < T , > column , int newWidth ) { setColumnWidth ( column , ( newWidth + STRING_CONSTANT ) , true ) ; }
private static void getIrsImageList ( org.ovirt.engine.ui.frontend.AsyncQuery < java.util.List < java.lang.String > > aQuery , org.ovirt.engine.core.compat.Guid storagePoolId , boolean forceRefresh , org.ovirt.engine.core.common.businessentities.storage.ImageFileType imageFileType ) { org.ovirt.engine.ui.uicommonweb.dataprovider.ImagesDataProvider . getIrsImageList ( aQuery , storagePoolId , forceRefresh , imageFileType , new org.ovirt.engine.ui.uicommonweb.dataprovider.ImagesDataProvider.RepoImageToImageFileNameAsyncConverter () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Permissions > getAllForEntity ( org.ovirt.engine.core.compat.Guid id ) { return getAllForEntity ( id , ( - NUMBER_CONSTANT ) , false ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { getView () . setAgentTabVisibility ( model . getNeutronAgentModel () . isPluginConfigurationAvailable () . getEntity () ) ; }
protected void noPaddingNoFixes () { org.ovirt.engine.ui.common.widget.editor.BaseEntityModelCheckboxEditor . getValidatedWidgetStyle () . clearPadding () ; getCheckboxWidgetLabel () . removeClassName ( org.ovirt.engine.ui.common.widget.editor.BaseEntityModelCheckboxEditor.CBE_LABEL_PFLY_FIX ) ; getContentWidgetElement () . removeClassName ( Styles.FORM_CONTROL ) ; removeContentWidgetStyleName ( Styles.FORM_CONTROL ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.network.Network o1 , org.ovirt.engine.core.common.businessentities.network.Network o2 ) { return HostInterfaceListModel.ENGINE_NETWORK_NAME . equals ( o1 . getName () ) ? - NUMBER_CONSTANT : o1 . getName () . compareTo ( o2 . getName () ) ; }
private static org.ovirt.engine.core.compat.Guid getDeviceId ( java.util.Map device ) { java.lang.String deviceId = ( ( java.lang.String ) ( device . get ( VdsProperties.DeviceId ) ) ) ; return deviceId == null ? null : new org.ovirt.engine.core.compat.Guid ( deviceId ) ; }
public java.lang.Integer calcMaxVCpu () { return org.ovirt.engine.core.common.utils.VmCpuCountHelper . calcMaxVCpu ( vm , vm . getClusterCompatibilityVersion () ) ; }
@ org.junit.Before public void setup () { org.mockito.Mockito . doReturn ( proxyLocator ) . when ( validator ) . getProxyLocator ( org.mockito.Mockito . any () ) ; org.mockito.Mockito . doReturn ( backend ) . when ( validator ) . getBackend () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { allNetworks = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; initNetworkModels () ; initDcNetworkParams () ; queryInterfaces () ; }
@ org.junit.Test public void discardIsTrueWhenDiscardAfterDeleteIsTrueAndDomainSupportsDiscard () { assertDiscardValue ( true , true , true , false ) ; }
public static org.ovirt.engine.core.compat.Guid getGuidValue ( org.ovirt.engine.core.compat.Guid id ) { return id == null ? null : id . getValue () ; }
private void updateAlerts () { final org.ovirt.engine.core.common.businessentities.VDS host = org.ovirt.engine.ui.uicommonweb.models.hosts.HostListModel . getSelectedItem () ; if ( host == null ) { return; } generalModel . setHasUpgradeAlert ( host . isUpdateAvailable () ) ; generalModel . setHasAnyAlert () ; }
@ org.junit.Test public void testNonValidNonPatternName () { junit.framework.Assert . assertFalse ( new org.ovirt.engine.ui.uicommonweb.validation.PoolNameValidationTest.TestablePoolNameValidation () . validate ( STRING_CONSTANT ) . getSuccess () ) ; }
@ org.junit.Test public void testCanDoActionCommand ( ) throws java.lang.Exception { org.ovirt.engine.core.bll.RemoveQuotaCommand < org.ovirt.engine.core.common.action.QuotaCRUDParameters > removeQuotaCommand = createCommand () ; junit.framework.Assert . assertTrue ( removeQuotaCommand . canDoAction () ) ; }
@ org.junit.Before public void setup () { network = new org.ovirt.engine.core.common.businessentities.network.Network () ; validator = new org.ovirt.engine.core.bll.network.dc.UpdateNetworkCommand.UpdateNetworkValidator ( network , vmDao , interfaceDao ) ; }
public static boolean shouldRemoveNetworkFromHostUponNetworkRemoval ( org.ovirt.engine.core.common.businessentities.network.Network persistedNetwork ) { return ( ! ( persistedNetwork . isExternal () ) ) && ( org.ovirt.engine.core.utils.NetworkUtils . isLabeled ( persistedNetwork ) ) ; }
@ org.junit.Test public void testGetClusterByClusterPolicyIdNegative () { java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > result = dao . getClustersByClusterPolicyId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , result . size () ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Nic postPopulate ( org.ovirt.engine.api.model.Nic model ) { model . setInterface ( org.ovirt.engine.api.restapi.types.MappingTestHelper . shuffle ( org.ovirt.engine.api.model.NicInterface . class ) ) ; return model ; }
public boolean contains ( org.ovirt.engine.core.searchbackend.SyntaxContainer res , java.lang.String item ) { return java.util.Arrays . asList ( res . getCompletionArray () ) . contains ( item ) ; }
public java.nio.channels.SelectionKey getSelectionKey () { return this . key ; }
@ org.junit.Test public void getNonexistentVariable () { org.junit.Assert . assertNull ( dao . get ( DwhHistoryTimekeepingVariable.UNDEFINED ) ) ; }
private void mockDiskDaoGetAllForVm ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.Disk > disks ) { org.mockito.Mockito . doReturn ( disks ) . when ( diskDao ) . getAllForVm ( vm . getId () , true ) ; }
private org.ovirt.engine.core.compat.Guid createTaskImpl ( org.ovirt.engine.core.compat.Guid taskId , org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo asyncTaskCreationInfo , org.ovirt.engine.core.common.action.VdcActionType parentCommand , java.lang.String description , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.VdcObjectType > entitiesMap ) { return org.ovirt.engine.core.bll.tasks.CommandCoordinatorUtil . createTask ( taskId , this , asyncTaskCreationInfo , parentCommand , description , entitiesMap ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.VDSGroup vdsGroup = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVdsGroupDao () . get ( _vds . getVdsGroupId () ) ; _parser . cliEnvironmentSet ( VirtEnv.ENABLE , vdsGroup . supportsVirtService () ) ; return true ; }
@ org.junit.Test public void testValidateSuccess () { org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( cmd ) ; }
public static org.ovirt.engine.core.compat.Version getCompatibilityVersion ( org.ovirt.engine.core.common.businessentities.VmBase vmBase ) { return ( vmBase . getVdsGroupId () ) != null ? org.ovirt.engine.core.bll.utils.ClusterUtils . getInstance () . getVdsGroupDao () . get ( vmBase . getVdsGroupId () ) . getCompatibilityVersion () : org.ovirt.engine.core.compat.Version.v3_0 ; }
@ java.lang.Override protected void executeCommand () { getProviderDao () . remove ( org.ovirt.engine.core.bll.provider.RemoveProviderCommand . getParameters () . getProvider () . getId () ) ; org.ovirt.engine.core.bll.provider.RemoveProviderCommand . setSucceeded ( true ) ; }
public static void ClearConfigCache () { if ( ( org.ovirt.engine.ui.uicommonweb.DataProvider.CachedConfigValues ) != null ) { org.ovirt.engine.ui.uicommonweb.DataProvider.CachedConfigValues . clear () ; } org.ovirt.engine.ui.uicommonweb.DataProvider.windowsOsTypes = null ; org.ovirt.engine.ui.uicommonweb.DataProvider.linuxOsTypes = null ; org.ovirt.engine.ui.uicommonweb.DataProvider.x64OsTypes = null ; org.ovirt.engine.ui.uicommonweb.DataProvider.hasAdminSystemPermission = null ; }
private org.ovirt.engine.core.common.businessentities.vm_pools mockVmPools () { org.ovirt.engine.core.common.businessentities.vm_pools pool = new org.ovirt.engine.core.common.businessentities.vm_pools () ; pool . setvm_pool_name ( STRING_CONSTANT ) ; pool . setvds_group_id ( vdsGroupId ) ; pool . setvm_pool_id ( vmPoolId ) ; return pool ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.storage.DiskImage object ) { if ( object . isBoot () ) { return org.ovirt.engine.ui.webadmin.section.main.view.popup.storage.backup.ImportVmFromExportDomainPopupView.constants . bootableDisk () ; } return null ; }
public boolean isWanOptionsAvailableForMyVm () { boolean isWindowsVm = org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isWindowsOsType ( getEntity () . getOs () ) ; boolean spiceGuestAgentInstalled = ( getEntity () . getSpiceDriverVersion () ) != null ; return isWindowsVm && spiceGuestAgentInstalled ; }
@ java.lang.Override @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > getAllWithQuery ( java.lang.String query ) { return getJdbcTemplate () . query ( query , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoImpl.glusterHookRowMapper ) ; }
@ org.junit.Before public void setup () { org.mockito.Mockito . doReturn ( connExtDaoMock ) . when ( helper ) . getConnectionExtensionDao () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.NetworkView object ) { return ( object . getvlan_id () ) == null ? STRING_CONSTANT : object . getvlan_id () . toString () ; }
private org.ovirt.engine.core.common.businessentities.storage_domains mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId , org.ovirt.engine.core.common.businessentities.StorageType storageType ) { return mockStorageDomain ( storageId , NUMBER_CONSTANT , NUMBER_CONSTANT , storageType , new org.ovirt.engine.core.compat.Version () ) ; }
public void updateFormItem ( org.ovirt.engine.ui.common.widget.form.FormItem item ) { updateFormItem ( item , null ) ; }
@ org.junit.Before public void testSetup () { mockQuotaDao () ; mockVmDao () ; mockStoragePoolDao () ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.Network o1 , org.ovirt.engine.core.common.businessentities.Network o2 ) { return HostInterfaceListModel.ENGINE_NETWORK_NAME . equals ( o1 . getname () ) ? - NUMBER_CONSTANT : o1 . getname () . compareTo ( o2 . getname () ) ; }
@ com.gwtplatform.mvp.client.annotations.ProxyEvent public void onHostSelectionChange ( org.ovirt.engine.ui.webadmin.section.main.presenter.tab.HostSelectionChangeEvent event ) { updateMainTabSelection ( event . getSelectedItems () ) ; currentSelectedHost = ( event . getSelectedItems () . isEmpty () ) ? null : event . getSelectedItems () . get ( NUMBER_CONSTANT ) ; updateModel ( currentErrataCountModel ) ; }
@ org.junit.Test public void diskSnapshotsExist () { org.junit.Assert . assertEquals ( ValidationResult.VALID , validator . diskSnapshotsNotExist ( java.util.Arrays . asList ( disk1 . getImageId () , disk2 . getImageId () ) ) ) ; }
public org.ovirt.engine.core.common.action.MaintenanceNumberOfVdssParameters createMaintenanceParams () { org.ovirt.engine.core.common.action.MaintenanceNumberOfVdssParameters params = new org.ovirt.engine.core.common.action.MaintenanceNumberOfVdssParameters ( java.util.Collections . singletonList ( org.ovirt.engine.core.bll.hostdeploy.UpgradeHostCommand . getVdsId () ) , true ) ; return withRootCommandInfo ( params ) ; }
protected T getOldQos () { if ( ( ( oldQos ) == null ) && ( ( qos ) != null ) ) { oldQos = getQosDao () . get ( qos . getId () ) ; } return oldQos ; }
public void addLinks ( java.util.List < org.ovirt.api.metamodel.concepts.Link > newLinks ) { links . addAll ( newLinks ) ; }
private void mockDiskImageDao () { org.mockito.Mockito . when ( diskImageDao . getSnapshotById ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( org.ovirt.engine.core.bll.CommonVmPoolCommandTestAbstract . getDiskImageList () . get ( NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Template get () { switch ( parent . getStorageDomainType () ) { case Data : case Master : return getFromDataDomain () ; case ImportExport : return getFromExportDomain () ; default: return null ; } }
public void enableSinglePCI ( boolean enabled ) { getModel () . getIsSingleQxlEnabled () . setIsChangable ( enabled ) ; if ( ! enabled ) { getModel () . getIsSingleQxlEnabled () . setEntity ( false ) ; } }
@ org.junit.Test public void parseLunFromXmlRpcReturnsUnknownForNoField ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.lang.Object > xlun = new java.util.HashMap < java.lang.String , java.lang.Object > () ; org.ovirt.engine.core.common.businessentities.LUNs lun = org.ovirt.engine.core.vdsbroker.vdsbroker.GetDeviceListVDSCommand . ParseLunFromXmlRpc ( xlun ) ; org.junit.Assert . assertEquals ( StorageType.UNKNOWN , lun . getLunType () ) ; }
public static < R extends org.ovirt.engine.api.model.BaseResource > R addLinks ( R model ) { return org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( model , null ) ; }
private static org.ovirt.engine.api.rsdl.ServiceTreeNode buildTree () { return org.ovirt.engine.api.rsdl.ServiceTree . buildNode ( org.ovirt.engine.api.resource.SystemResource . class ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageServerConnections getEntity ( int index ) { org.ovirt.engine.core.common.businessentities.StorageServerConnections cnx = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; cnx . setId ( GUIDS [ index ] . toString () ) ; cnx . setconnection ( ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) ) ; return cnx ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) {}
public void InternalSetVmStatus ( org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VMStatus status , org.ovirt.engine.core.common.businessentities.VmExitStatus exitStatus ) { InternalSetVmStatus ( vm , status , exitStatus , StringUtils.EMPTY , VmExitReason.Unknown ) ; }
protected void mockStoragePoolDao ( org.ovirt.engine.core.common.businessentities.StoragePool storagePool ) { org.mockito.Mockito . when ( storagePoolDaoMock . get ( org.ovirt.engine.core.bll.storage.domain.AbstractGetStorageDomainsWithAttachedStoragePoolGuidQueryTestCase . any () ) ) . thenReturn ( storagePool ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public org.ovirt.vdsm.jsonrpc.client.RequestBuilder withOptionalParameterAsMap ( java.lang.String name , java.util.Map value ) { if ( ( value != null ) && ( ! ( value . isEmpty () ) ) ) { return withParameter ( name , value ) ; } return this ; }
static java.lang.String getResourceBundleName () { return STRING_CONSTANT ; }
private void domainsInMaintenanceCheck ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain domainInDb : storageDomains ) { if ( ( domainInDb . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.PreparingForMaintenance ) ) { queueDomainMaintenanceCheck ( domainInDb ) ; } } }
@ org.junit.Test public void updateWithLowerVersionThanHosts () { createSimpleCommand () ; cpuExists () ; cpuManufacturersMatch () ; VdsExistWithHigherVersion () ; canDoActionFailedWithReason ( VdcBllMessages.VDS_GROUP_CANNOT_UPDATE_COMPATIBILITY_VERSION_WITH_LOWER_HOSTS ) ; }
@ org.junit.Test public void updateStoragePool () { createCommandWithDifferentPool () ; cpuExists () ; cpuManufacturersMatch () ; clusterHasVds () ; cpuFlagsNotMissing () ; canDoActionFailedWithReason ( VdcBllMessages.VDS_GROUP_CANNOT_CHANGE_STORAGE_POOL ) ; }
public static org.ovirt.engine.core.bll.ValidationResult.ValidationResultBuilder failWith ( org.ovirt.engine.core.common.errors.EngineMessage expectedError , java.lang.String . . . replacements ) { return new org.ovirt.engine.core.bll.ValidationResult.ValidationResultBuilder ( expectedError , replacements ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetHostsForStorageOperationQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.bll.GetHostsForStorageOperationQuery . getDbFacade () . getVdsDao () . getHostsForStorageOperation ( org.ovirt.engine.core.bll.GetHostsForStorageOperationQuery . getParameters () . getId () , org.ovirt.engine.core.bll.GetHostsForStorageOperationQuery . getParameters () . isLocalFsOnly () ) ) ; }
@ org.junit.Before public void testSetup () { org.mockito.Mockito . when ( quotaDao . getById ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( mockGeneralStorageQuota () ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { sanStorageModel . postLogin ( result . getReturnValue () , sanStorageModel ) ; }
@ java.lang.Override public void render ( org.ovirt.engine.ui.webadmin.widget.bookmark.Context context , org.ovirt.engine.core.common.businessentities.Bookmark value , com.google.gwt.safehtml.shared.SafeHtmlBuilder sb ) { sb . append ( org.ovirt.engine.ui.webadmin.widget.bookmark.BookmarkListItemCell.templates . bookmarkItem ( org.ovirt.engine.ui.common.utils.ElementIdUtils . createElementId ( elementId , value . getName () ) , value . getName () ) ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { getNetworkClusterDAO () . remove ( getParameters () . getVdsGroupId () , getNetwork () . getId () ) ; return null ; }
@ java.lang.Override public void edit ( final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel object ) { super . edit ( object ) ; if ( object . getIsNew () ) { object . getNumOfDesktops () . setEntity ( NUMBER_CONSTANT ) ; } }
@ org.junit.Before public void setUp () { parameters = new org.ovirt.engine.core.common.action.StorageDomainParametersBase ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; parameters . setVdsId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.storage.SyncLunsInfoForBlockStorageDomainCommand < org.ovirt.engine.core.common.action.StorageDomainParametersBase > ( parameters , null ) ) ; }
private void createCommand () { cmd . init () ; }
@ org.junit.Test public void testGetMessagesBundle () { java.util.List < java.util.ResourceBundle > bundle = testTheme . getMessagesBundle () ; org.junit.Assert . assertNotNull ( STRING_CONSTANT , bundle ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , bundle . get ( NUMBER_CONSTANT ) . getString ( STRING_CONSTANT ) ) ; }
@ org.junit.Test public void validateOkSucceeds ( ) throws java.lang.Exception { command . getParameters () . setJobId ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.jobId ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
public static org.ovirt.engine.core.common.queries.ValueObjectMap instantiate ( com.google.gwt.user.client.rpc.SerializationStreamReader streamReader ) throws com.google.gwt.user.client.rpc.SerializationException { return new org.ovirt.engine.core.common.queries.ValueObjectMap () ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData model , java.lang.Boolean value ) { model . getClone () . setEntity ( value ) ; table . asEditor () . edit ( importModel ) ; }
void logout ( org.ovirt.engine.ui.frontend.communication.UserCallback < > callback ) ;
@ java.lang.Override public java.lang.String render ( org.ovirt.engine.core.compat.RpmVersion version ) { java.lang.String formattedVersion ; formattedVersion = version . getRpmName () ; return new org.ovirt.engine.ui.common.widget.renderer.EmptyValueRenderer < java.lang.String > ( org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getApplicationConstants () . unAvailablePropertyLabel () ) . render ( formattedVersion ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.VdsGroupDAODbFacadeImpl.VdsGroupRowMapper.instance ) ; }
public org.ovirt.engine.core.compat.Guid getSourceStorageDomainId () { return getSourceDomainId () ; }
@ java.lang.Override protected java.util.Date getRawValue ( org.ovirt.engine.core.common.businessentities.Erratum erratum ) { return erratum . getIssued () ; }
public void clear () { factoriesByType . clear () ; objectsByName . clear () ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { if ( ( ( java.lang.Boolean ) ( _parser . cliEnvironmentGet ( VdsmEnv.OVIRT_NODE ) ) ) ) { _messages . post ( InstallerMessages.Severity.INFO , STRING_CONSTANT ) ; _setNode () ; } return true ; }
@ java.lang.Override public void run () { runInternalAction ( VdcActionType.InstallVdsInternal , installVdsParameters , new org.ovirt.engine.core.bll.context.CommandContext ( installCtx ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.VDS getEntityObject ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object ; }
@ java.lang.Override public java.util.Set < java.lang.String > getConsumedEvents () { java.util.Set < java.lang.String > set = new java.util.HashSet ( super . getConsumedEvents () ) ; set . addAll ( ElementTooltipUtils.HANDLED_CELL_EVENTS ) ; return set ; }
protected org.ovirt.engine.core.utils.ovf.xml.XmlNode selectSingleNode ( org.ovirt.engine.core.utils.ovf.xml.XmlNode node , java.lang.String pattern , org.ovirt.engine.core.utils.ovf.xml.XmlNamespaceManager ns ) { this . lastReadEntry = pattern ; if ( ns == null ) { return node . selectSingleNode ( pattern ) ; } return node . selectSingleNode ( pattern , ns ) ; }
org.ovirt.engine.ui.uicommonweb.validation.ValidationResult validate ( java.lang.Object value ) ;
protected org.ovirt.engine.core.common.businessentities.VmStatic getUpdatable ( java.lang.String isoPath ) { org.ovirt.engine.core.common.businessentities.VmStatic updatable = getEntity ( org.ovirt.engine.core.common.businessentities.VM . class , VdcQueryType.GetVmByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( parentId ) , parentId . toString () ) . getStaticData () ; updatable . setIsoPath ( isoPath ) ; return updatable ; }
protected java.lang.String cdPathWindowsToLinux ( java.lang.String url ) { return cdPathWindowsToLinux ( url , org.ovirt.engine.core.bll.RunVmCommand . getVm () . getStoragePoolId () , org.ovirt.engine.core.bll.RunVmCommand . getVdsId () ) ; }
@ java.lang.Override public boolean Match ( org.ovirt.engine.core.common.businessentities.StorageDomain source ) { return name . equals ( source . getstorage_name () ) ; }
@ org.junit.Test public void bondWithNoSlaves () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface bond = createBond ( org.ovirt.engine.core.bll.network.host.SetupNetworksHelperTest.BOND_NAME , null ) ; mockExistingIfaces ( bond ) ; org.ovirt.engine.core.bll.network.host.SetupNetworksHelper helper = createHelper ( createParametersForNics ( bond ) ) ; validateAndExpectViolation ( helper , VdcBllMessages.NETWORK_BONDS_INVALID_SLAVE_COUNT , bond . getName () ) ; }
public void setStaticData ( final org.ovirt.engine.core.common.businessentities.VmStatic value ) { if ( value == null ) { vmStatic = new org.ovirt.engine.core.common.businessentities.VmStatic () ; } else { vmStatic = value ; } }
public void setExpectedEngineErrors ( java.util.Set < org.ovirt.engine.core.common.errors.EngineError > errors ) { expectedEngineErrors = errors ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.BaseDisk generateNewEntity () { return new org.ovirt.engine.core.common.businessentities.BaseDisk ( org.ovirt.engine.core.compat.Guid . NewGuid () , org.ovirt.engine.core.common.businessentities.DiskInterface.SCSI , true , org.ovirt.engine.core.common.businessentities.PropagateErrors.Off , STRING_CONSTANT , STRING_CONSTANT , false , false ) ; }
@ org.junit.Test public void testExistsExisting () { org.junit.Assert . assertTrue ( dao . exists ( org.ovirt.engine.core.dao.VmIconDaoTest.UNUSED_ICON_ID ) ) ; }
@ org.junit.Test public void poolHasDefaultCluster () { org.ovirt.engine.core.bll.storage.UpdateStoragePoolCommandTest.mcr . mockConfigValue ( ConfigValues.AutoRegistrationDefaultVdsGroupID , org.ovirt.engine.core.bll.storage.UpdateStoragePoolCommandTest.DEFAULT_VDS_GROUP_ID ) ; addDefaultClusterToPool () ; storagePoolWithLocalFS () ; canDoActionFailed ( VdcBllMessages.ACTION_TYPE_FAILED_STORAGE_POOL_WITH_DEFAULT_VDS_GROUP_CANNOT_BE_LOCALFS ) ; }
public < T > void bind ( java.lang.Class < T > pureClsType , T instance ) { org.ovirt.engine.core.di.InjectorRule.beansCache . put ( pureClsType , instance ) ; }
@ java.lang.Override public void removeTabWidget ( com.google.gwt.user.client.ui.IsWidget tabWidget ) { mainTabContainer . removeChild ( tabWidget . asWidget () . getElement () ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.storage.GetStoragePoolByDatacenterNameQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.bll.storage.GetStoragePoolByDatacenterNameQuery . getDbFacade () . getStoragePoolDao () . getByName ( org.ovirt.engine.core.bll.storage.GetStoragePoolByDatacenterNameQuery . getParameters () . getName () , true ) ) ; }
@ org.junit.Test public void canDoActionSucceedsOnDiskDomainCheckWhenNoDisks ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid storageId = org.ovirt.engine.core.compat.Guid . NewGuid () ; initializeCommand ( storageId ) ; mockVm () ; mockStorageDomain ( storageId ) ; mockStoragePoolIsoMap () ; runAndAssertCanDoActionSuccess () ; }
public static boolean isUpdateValid ( org.ovirt.engine.core.common.businessentities.VdsStatic source , org.ovirt.engine.core.common.businessentities.VdsStatic distination , org.ovirt.engine.core.common.businessentities.VDSStatus status ) { return org.ovirt.engine.core.bll.VdsHandler.updateVdsStatic . isUpdateValid ( source , distination , status ) ; }
protected org.ovirt.engine.core.bll.validator.storage.DiskValidator getDiskValidator ( org.ovirt.engine.core.common.businessentities.storage.Disk disk ) { return new org.ovirt.engine.core.bll.validator.storage.DiskValidator ( disk ) ; }
private void onNicsChanged () { operationFactory = new org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkOperationFactory ( getNetworks () , getNics () ) ; validate () ; }
@ org.junit.Test public void testGetAllForStoragePoolWithPermissions () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePool ( existingVds . getStoragePoolId () , org.ovirt.engine.core.dao.PRIVILEGED_USER_ID , true ) ; assertGetAllForStoragePoolCorrectResult ( result ) ; }
@ java.lang.Override public java.lang.String toString () { return getString () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterModel dataCenterModel = ( ( org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterModel ) ( model ) ) ; dataCenterModel . setMaxNameLength ( ( ( java.lang.Integer ) ( result ) ) ) ; }
@ java.lang.Override public void search () { if ( ( getEntity () ) != null ) { super . search () ; } }
protected org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel createNetworkClusterModel ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel networkClusterModel = new org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel ( cluster ) ; networkClusterModel . setAttached ( true ) ; return networkClusterModel ; }
@ java.lang.Override public java.lang.String getName () { return this . name ; }
@ org.junit.Before public void initializeCommand () { org.ovirt.engine.core.common.action.AdElementParametersBase parameters = createParameters () ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.RemoveAdGroupCommand < org.ovirt.engine.core.common.action.AdElementParametersBase > ( parameters ) ) ; }
private void newMacPool () { org.ovirt.engine.ui.uicommonweb.models.macpool.SharedMacPoolModel model = new org.ovirt.engine.ui.uicommonweb.models.macpool.NewSharedMacPoolModel ( this ) ; model . setEntity ( new org.ovirt.engine.core.common.businessentities.MacPool () ) ; setWindow ( model ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
public org.ovirt.engine.core.compat.Guid getNetworkId () { return id . getNetworkId () ; }
@ org.junit.Test public void testGetAllForDc () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , dao . getAllForStoragePoolId ( FixturesTool.STORAGE_POOL_MIXED_TYPES ) . size () ) ; org.junit.Assert . assertTrue ( dao . getAllForStoragePoolId ( FixturesTool.STORAGE_POOL_NFS ) . isEmpty () ) ; }
protected void refreshEntityTable () { entityTable . asEditor () . edit ( entityTable . asEditor () . flush () ) ; entityTable . redraw () ; }
@ java.lang.Override public org.ovirt.engine.api.model.StorageConnection update ( org.ovirt.engine.api.model.StorageConnection connection ) { return performUpdate ( connection , new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetStorageServerConnectionById , org.ovirt.engine.core.common.queries.StorageServerConnectionQueryParametersBase . class ) , VdcActionType.UpdateStorageServerConnection , new org.ovirt.engine.api.restapi.resource.BackendStorageServerConnectionResource.UpdateParametersProvider () ) ; }
public java.lang.Object call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( java.lang.String . format ( STRING_CONSTANT , VdsmEnv.CONFIG_PREFIX ) , org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.EncryptHostCommunication ) . toString () ) ; return null ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getAllImageSnapshots () { return org.ovirt.engine.core.bll.ImagesHandler . getAllImageSnapshots ( org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getImage () . getImageId () ) ; }
protected boolean checkImageConfiguration () { return org.ovirt.engine.core.bll.ImagesHandler . checkImageConfiguration ( org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getStorageDomain () . getStorageStaticData () , org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getImage () , org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getReturnValue () . getCanDoActionMessages () ) ; }
public void mockCluster ( org.ovirt.engine.core.compat.Version version ) { org.ovirt.engine.core.common.businessentities.Cluster cluster = new org.ovirt.engine.core.common.businessentities.Cluster () ; cluster . setCompatibilityVersion ( version ) ; org.mockito.Mockito . when ( clusterDao . get ( org.mockito.Matchers . any () ) ) . thenReturn ( cluster ) ; }
private org.ovirt.engine.core.common.businessentities.storage.LunDisk createISCSILunDisk ( org.ovirt.engine.core.common.businessentities.storage.ScsiGenericIO sgio , boolean isUsingScsiReservation , org.ovirt.engine.core.common.businessentities.storage.DiskInterface diskInterface ) { org.ovirt.engine.core.common.businessentities.storage.LunDisk disk = org.ovirt.engine.core.bll.storage.disk.AddDiskCommandTest . createISCSILunDisk () ; disk . setSgio ( sgio ) ; disk . setUsingScsiReservation ( isUsingScsiReservation ) ; return disk ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getStoragePoolIdFromSourceImageContainer () { return sourceVmFromDb . getStoragePoolId () . getValue () ; }
public java.lang.String getNfsVersion () { return nfsVersion ; }
@ org.junit.Test public void testGetFilteredWithPermissionsNoPermissions () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.junit.Assert . assertNull ( result ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.storage.RepoImage > repoImages = returnValue . getReturnValue () ; invokeClient ( repoImages ) ; }
public void setVmCount ( int value ) { this . mVdsDynamic . setVmCount ( value ) ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.Provider provider ) { return ( network . isExternal () ) && ( provider . getId () . equals ( network . getProvidedBy () . getProviderId () ) ) ; }
private static void AddEmptyDataCenterToList ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > dataCenters ) { org.ovirt.engine.core.common.businessentities.StoragePool tempVar = new org.ovirt.engine.core.common.businessentities.StoragePool () ; tempVar . setId ( org.ovirt.engine.ui.uicommonweb.models.storage.StorageModel.UnassignedDataCenterId ) ; tempVar . setname ( STRING_CONSTANT ) ; dataCenters . add ( tempVar ) ; }
public java.lang.Integer getWarningLowSpaceIndicator () { return ( staticData ) == null ? null : staticData . getWarningLowSpaceIndicator () ; }
@ java.lang.Override public void updateQuotaForImageAndSnapshots ( org.ovirt.engine.core.compat.Guid imageGroupId , org.ovirt.engine.core.compat.Guid quotaId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , imageGroupId ) . addValue ( STRING_CONSTANT , quotaId ) ; getCallsHandler () . executeModification ( STRING_CONSTANT , parameterSource ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getname () . equals ( getNetworkName () ) ; }
@ java.lang.Override public void configure ( org.ovirt.engine.ui.uicommonweb.models.vms.ISpice spice ) { super . configure ( spice ) ; spice . setWANDisableEffects ( new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.vms.WANDisableEffects > () ) ; spice . setWanOptionsEnabled ( false ) ; }
protected javax.ws.rs.core.UriInfo setUpUriInfoExpectations () { javax.ws.rs.core.UriInfo uriInfo = setUpBasicUriExpectations () ; org.mockito.Mockito . when ( uriInfo . getPath () ) . thenReturn ( STRING_CONSTANT ) ; return uriInfo ; }
@ java.lang.Override protected void buildVmVideoCards () { createInfo . put ( VdsProperties.num_of_monitors , java.lang.String . valueOf ( vm . getNumOfMonitors () ) ) ; }
private org.ovirt.engine.core.common.action.SetupNetworksParameters createParametersForSync ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { return createParametersForSync ( nic . getNetworkName () , nic ) ; }
@ java.lang.Override public org.ovirt.engine.core.dal.dbbroker.DbFacade getDbFacade () { return facade ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDS get ( org.ovirt.engine.core.compat.Guid id ) { return get ( id , null , false ) ; }
private org.ovirt.engine.core.vdsbroker.monitoring.VmStatsRefresher getRefresherForVds ( org.ovirt.engine.core.vdsbroker.VdsManager vdsManager ) { return new org.ovirt.engine.core.vdsbroker.monitoring.EventVmStatsRefresher ( vdsManager ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.VdcActionParametersBase getRemoveProfileParams ( org.ovirt.engine.core.common.businessentities.profiles.DiskProfile profile ) { return new org.ovirt.engine.core.common.action.DiskProfileParameters ( profile ) ; }
@ java.lang.Override public void setTooltipFallback ( com.google.gwt.safehtml.shared.SafeHtml tooltipFallback ) { this . tooltipFallback = tooltipFallback ; }
protected org.ovirt.engine.api.model.VM getVmConfiguration ( java.lang.String snapshotId ) { org.ovirt.engine.api.model.VM vmConfiguration = getEntity ( org.ovirt.engine.api.model.VM . class , VdcQueryType.GetVmConfigurationBySnapshot , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( snapshotId ) ) , STRING_CONSTANT ) ; return vmConfiguration ; }
@ java.lang.Override public boolean connectStorageToDomainByVdsId ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId ) { return true ; }
@ org.junit.Test public void testNonExistingStorageDomain () { org.mockito.Mockito . doReturn ( null ) . when ( command ) . executeHSMGetStorageDomainInfo ( org.mockito.ArgumentMatchers . any () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_DOMAIN_NOT_EXIST ) ; }
private org.ovirt.engine.core.common.businessentities.VM setUpVmEntityExpectations ( org.ovirt.engine.core.common.businessentities.VM entity , int index ) { org.mockito.Mockito . when ( entity . getId () ) . thenReturn ( GUIDS [ index ] ) ; return entity ; }
boolean isSetParentName ( org.ovirt.engine.api.model.Tag tag ) { return ( tag . isSetParent () ) && ( tag . getParent () . isSetName () ) ; }
@ org.junit.Test public void testValidateStoragePoolNoStoragePoolId () { org.junit.Assert . assertFalse ( command . validate () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . assertValidationMessages ( STRING_CONSTANT , command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_POOL_NOT_EXIST ) ; }
@ org.springframework.context.annotation.Bean public javax.enterprise.inject.Instance < org.ovirt.engine.core.dao.Dao > daos () { java.util.Map < java.lang.String , org.ovirt.engine.core.dao.Dao > daoMap = beanFactory . getBeansOfType ( org.ovirt.engine.core.dao.Dao . class ) ; return new org.ovirt.engine.core.dal.CdiIntegration.InstanceImpl ( daoMap . values () ) ; }
protected org.ovirt.engine.core.common.vdscommands.CreateVmVDSCommandParameters buildCreateVmParameters () { org.ovirt.engine.core.common.vdscommands.CreateVmVDSCommandParameters parameters = new org.ovirt.engine.core.common.vdscommands.CreateVmVDSCommandParameters ( org.ovirt.engine.core.bll.RunVmCommand . getVdsId () , org.ovirt.engine.core.bll.RunVmCommand . getVm () ) ; return parameters ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { if ( org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getParameters () . getIsInternalCommand () ) { return org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getSucceeded () ? org.ovirt.engine.core.common.AuditLogType.SYSTEM_UPDATE_VDS_GROUP : org.ovirt.engine.core.common.AuditLogType.SYSTEM_UPDATE_VDS_GROUP_FAILED ; } return org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getSucceeded () ? org.ovirt.engine.core.common.AuditLogType.USER_UPDATE_VDS_GROUP : org.ovirt.engine.core.common.AuditLogType.USER_UPDATE_VDS_GROUP_FAILED ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VM > object ) { return object . getSecond () . getName () ; }
@ java.lang.Override public boolean disconnectStorageFromLunByVdsId ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.businessentities.LUNs lun ) { return runConnectionStorageToDomain ( storageDomain , vdsId , VDSCommandType.DisconnectStorageServer . getValue () , lun , Guid.Empty ) ; }
protected M getParentModel () { return parentModelProvider . get () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StoragePool getStoragePool () { return new org.ovirt.engine.core.common.businessentities.StoragePool () ; }
@ org.junit.Test public void testAddWithClonePermissionsClone ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Template model = org.ovirt.engine.api.restapi.resource.BackendTemplatesResourceTest . getModel ( NUMBER_CONSTANT ) ; doTestAddWithClonePermissions ( model , true ) ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) org.ovirt.engine.api.resource.PermitsResource getPermitsResource ( ) ;
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { postPrepareSanStorageForEdit ( model , true ) ; }
private void startGeoRepSession () { performGeoRepAction ( STRING_CONSTANT , org.ovirt.engine.ui.uicommonweb.models.gluster.VolumeGeoRepListModel.constants . geoReplicationStartTitle () , HelpTag.volume_geo_rep_start_confirmation , STRING_CONSTANT , org.ovirt.engine.ui.uicommonweb.models.gluster.VolumeGeoRepListModel.constants . startGeoRep () , VdcActionType.StartGlusterVolumeGeoRep ) ; }
public boolean isSetFile () { return ( ( this . file ) != null ) && ( ! ( this . file . isEmpty () ) ) ; }
public static boolean isNonVmNonVlanNetwork ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return ( ! ( network . isVmNetwork () ) ) && ( ( network . getvlan_id () ) == null ) ; }
public org.ovirt.engine.core.common.businessentities.BusinessEntityMap < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getBackendNics () { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > backendNics = getBackendCollection ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface . class , VdcQueryType.GetVdsInterfacesByVdsId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; return new org.ovirt.engine.core.common.businessentities.BusinessEntityMap ( backendNics ) ; }
@ org.junit.Test public void testCleanNotExpiredUsersSessionsNoUsers () { org.ovirt.engine.core.dao.DbUserDAO dbUserDAOMcok = initDataForClearTest ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY ) ; container . cleanExpiredUsersSessions () ; org.junit.Assert . assertNotNull ( STRING_CONSTANT , container . GetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; org.mockito.Mockito . verifyZeroInteractions ( dbUserDAOMcok ) ; }
public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return storagePoolId ; }
private static < T > void mockConfigValue ( org.ovirt.engine.core.common.config.ConfigValues value , java.lang.String version , T returnValue ) { org.mockito.Mockito . when ( org.ovirt.engine.core.common.config.Config . getConfigUtils () . getValue ( value , version ) ) . thenReturn ( returnValue ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.Permission user ) { if ( ( user . getRoleType () ) == ( org.ovirt.engine.core.common.businessentities.RoleType.ADMIN ) ) { return org.ovirt.engine.ui.common.widget.table.column.PermissionTypeColumn.constants . admin () ; } return org.ovirt.engine.ui.common.widget.table.column.PermissionTypeColumn.constants . user () ; }
public static java.lang.String toUpperCase ( java.lang.String candidate ) { if ( ( candidate . length () ) >= NUMBER_CONSTANT ) return ( java.lang.Character . toUpperCase ( candidate . charAt ( NUMBER_CONSTANT ) ) ) + ( candidate . substring ( NUMBER_CONSTANT ) ) ; return candidate ; }
public void setSELinuxEnforceMode ( java.lang.Integer value ) { selinuxEnforceMode = org.ovirt.engine.core.common.businessentities.SELinuxMode . fromValue ( value ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { uniqueOsNames = returnValue . getReturnValue () ; org.ovirt.engine.core.common.utils.SimpleDependencyInjector . getInstance () . bind ( new org.ovirt.engine.core.searchbackend.OsValueAutoCompleter ( uniqueOsNames ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageDomainStatus getStatus () { return getStoragePoolIsoMapData () . getStatus () ; }
@ org.junit.Test public void serializeVdsNetworkInterface () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = new org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface () ; org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer serialezer = new org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer () ; junit.framework.Assert . assertTrue ( ( ( serialezer . serialize ( nic ) . length () ) > NUMBER_CONSTANT ) ) ; }
@ org.junit.Test public void testDefaultConfigurationValues () { org.junit.Assert . assertEquals ( ConfigurationValues.DefaultWindowsTimeZone , org.ovirt.engine.core.common.TimeZoneTypeTest.windows . getDefaultTimeZoneConfigurationKey () ) ; org.junit.Assert . assertEquals ( ConfigurationValues.DefaultGeneralTimeZone , org.ovirt.engine.core.common.TimeZoneTypeTest.general . getDefaultTimeZoneConfigurationKey () ) ; }
private static java.lang.String buildUrl ( java.lang.String service , java.lang.String params ) { return ( ( STRING_CONSTANT + ( org.ovirt.engine.ui.frontend.utils.BaseContextPathData . getRelativePath () ) ) + service ) + ( params != null ? params : STRING_CONSTANT ) ; }
private org.ovirt.engine.api.model.StorageDomain getStorageDomain ( int idx ) { org.ovirt.engine.api.model.StorageDomain dom = new org.ovirt.engine.api.model.StorageDomain () ; dom . setId ( GUIDS [ idx ] ) ; return dom ; }
@ org.junit.Test public void isISCSIConnectionAndDomain () { connection . setStorageType ( StorageType.ISCSI ) ; domain . setStorageType ( StorageType.ISCSI ) ; org.junit.Assert . assertTrue ( validator . isISCSIConnectionAndDomain ( domain ) . isValid () ) ; }
public void setmethod_id ( int value ) { this . id . methodId = value ; }
public static java.security.KeyStore getKeyStore () { return org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils . getKeyStore ( org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils.keystoreType , org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils.keystoreFile , org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils.keystorePassword . getPassword () ) ; }
@ org.junit.Test public void testGetAllForStoragePoolWithNoPermissionsFilteringDisabled () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePool ( existingVds . getStoragePoolId () , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , false ) ; assertGetAllForStoragePoolCorrectResult ( result ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ; java.util.List < java.lang.String > images = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; setImagesToModel ( model , images ) ; }
public void handleVmsFinishedInitOnVds ( org.ovirt.engine.core.compat.Guid vdsId ) { java.util.HashSet < org.ovirt.engine.core.compat.Guid > vms = vdsAndVmsList . get ( vdsId ) ; if ( vms != null ) { getEventListener () . processOnVmStop ( vms , vdsId ) ; vdsAndVmsList . remove ( vdsId ) ; } }
public boolean canNetworkCompatabilityBeDecreased () { return mtuValid () . isValid () ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return java.lang.Integer . valueOf ( NUMBER_CONSTANT ) ; } return source ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getStoragePoolIdFromSourceImageContainer () { return sourceVmFromDb . getStoragePoolId () ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getVmDisksFromDB () { org.ovirt.engine.core.bll.VmHandler . updateDisksFromDb ( org.ovirt.engine.core.bll.AddVmTemplateCommand . getVm () ) ; org.ovirt.engine.core.bll.VmHandler . filterImageDisksForVM ( org.ovirt.engine.core.bll.AddVmTemplateCommand . getVm () ) ; return org.ovirt.engine.core.bll.AddVmTemplateCommand . getVm () . getDiskList () ; }
@ java.lang.Override protected void UpdateCdImage () { updateUserCdImage ( getVm () . getStoragePoolId () ) ; }
@ org.junit.Test public void passthroughProfileValidProperties () { passthroughProfileContainsSupportedPropertiesTest ( true , false , null , null ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
private org.ovirt.engine.core.common.businessentities.StorageServerConnections createStorageConnection () { org.ovirt.engine.core.common.businessentities.StorageServerConnections conn = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; conn . setId ( org.ovirt.engine.core.compat.Guid . newGuid () . toString () ) ; return conn ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getJobSubjectEntityDao () ; }
private void setAllValidationsValid () { org.mockito.Mockito . doReturn ( true ) . when ( command ) . wasNumOfVfsChanged () ; nicExists ( true ) ; nicSriovEnabled ( true ) ; allVfsAreFree ( true ) ; numOfVfsInValidRange ( true ) ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . executeCommand ( command ) ; if ( STRING_CONSTANT . equalsIgnoreCase ( command . getName () ) ) { onSave () ; } }
public void setSelectedStorageDomainString ( java.lang.String value ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain : getStorageDomains () ) { if ( storageDomain . getstorage_name () . equals ( value ) ) { setSelectedStorageDomain ( storageDomain ) ; break; } } }
@ java.lang.Override public org.ovirt.engine.api.model.NIC update ( org.ovirt.engine.api.model.NIC device ) { validateEnums ( org.ovirt.engine.api.model.NIC . class , device ) ; return super . update ( device ) ; }
@ org.junit.Test public void testExecuteQueryWithFilteringLUNsEnabled () { org.ovirt.engine.core.bll.storage.GetDeviceListQueryTest.mcr . mockConfigValue ( ConfigValues.FilteringLUNsEnabled , Version.v3_1 , true ) ; lunsExpected = java.util.Collections . emptyList () ; internalExecuteQuery () ; }
@ java.lang.Override public void vnicCreated ( org.ovirt.engine.core.compat.Guid vmId ) {}
public void osTypeChanged ( java.lang.Integer selectedItem ) { isWindowsOS = org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . isWindowsOsType ( selectedItem ) ; }
@ java.lang.Override protected void initLinked () { getLinked () . setEntity ( true ) ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query ) throws java.lang.Exception { assertEquals ( STRING_CONSTANT , query ) ; setUpGetEntityExpectations ( true ) ; control . replay () ; }
public org.ovirt.engine.ui.common.widget.uicommon.popup.vm.PopupWidgetConfigMap getAll () { return filter ( ( config ) - > true ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateBootSequenceItems () ; bootSequenceBox . setSelectedIndex ( bootSequenceModel . getSelectedItemIndex () ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getId () { return id ; }
private boolean isVmMigratingToThisVds () { return isVmMigratingToThisVds ( dbVm . getStatus () , dbVm . getMigratingToVds () ) ; }
protected boolean isVmDuringInitiating ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( ( java.lang.Boolean ) ( getBackend () . getResourceManager () . RunVdsCommand ( VDSCommandType.IsVmDuringInitiating , new org.ovirt.engine.core.common.vdscommands.IsVmDuringInitiatingVDSCommandParameters ( vm . getId () ) ) . getReturnValue () ) ) ; }
public void setIsVmNetwork ( org.ovirt.engine.ui.uicommonweb.models.EntityModel value ) { privateIsVmNetwork = value ; }
public org.ovirt.engine.ui.uicompat.Constants getConstants () { return org.ovirt.engine.ui.uicompat.ConstantsManager.constants ; }
protected org.ovirt.engine.core.common.businessentities.VdsStatic getAndSetVdsStatic () { if ( ( vdsStatic ) == null ) { vdsStatic = getDbFacade () . getVdsStaticDao () . get ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerCommand . getParameters () . getVdsId () ) ; } return vdsStatic ; }
protected int getPort () { return urlobj . getPort () ; }
private boolean supportsGlusterSnapshotFeature ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { return cluster . supportsGlusterService () ; }
public static void getAllVmTemplates ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , final boolean refresh ) { aQuery.converterCallback = new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.TemplateConverter () ; org.ovirt.engine.core.common.queries.VdcQueryParametersBase params = new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () ; params . setRefresh ( refresh ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetAllVmTemplates , params , aQuery ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.FilterResource getSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendFilterResource ( id , this ) ) ; }
public static void getTemplateListByDataCenter ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid dataCenterId ) { aQuery.converterCallback = new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.TemplateConverter () ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetVmTemplatesByStoragePoolId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) , aQuery ) ; }
public void setReportBaseUrl ( java.lang.String reportBaseUrl ) { if ( reportBaseUrl != null ) { this . reportBaseUrl = reportBaseUrl ; } checkIfInitFinished () ; }
public static < K , V > org.ovirt.engine.core.bll.tasks.CacheWrapper < K , V > getCacheWrapper () { return new org.ovirt.engine.core.bll.tasks.MapWrapperImpl < K , V > () ; }
public void setUri ( java.lang.String uri ) { this . uri = uri ; if ( org.ovirt.engine.ui.uicommonweb.ReportInit . getInstance () . isCommunityEdition () ) { htmlParams . setParameter ( STRING_CONSTANT , uri ) ; } else { htmlParams . setParameter ( STRING_CONSTANT , uri ) ; } }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageType getRawValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getstorage_pool_type () ; }
public org.ovirt.engine.core.common.job.Step addStep ( org.ovirt.engine.core.bll.job.ExecutionContext context , org.ovirt.engine.core.common.job.StepEnum stepName , java.lang.String description ) { return addStep ( context , stepName , description , false ) ; }
private org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updateEntityPhase ( org.ovirt.engine.core.common.businessentities.storage.ImageTransferPhase phase ) { org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates = new org.ovirt.engine.core.common.businessentities.storage.ImageTransfer ( org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand . getCommandId () ) ; updates . setPhase ( phase ) ; return updateEntity ( updates ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel createModel ( org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase behavior ) { return new org.ovirt.engine.ui.uicommonweb.models.pools.PoolModel ( behavior ) ; }
@ java.lang.Override @ org.junit.Test public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; collection . setUriInfo ( uriInfo ) ; setupGetStorageDomainExpectations ( StorageDomainType.ISO ) ; setUpQueryExpectations ( STRING_CONSTANT , null ) ; verifyCollection ( getCollection () ) ; }
@ org.junit.Test public void timeoutObject () { final org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase t = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase () ; final java.lang.String s = STRING_CONSTANT ; t . setTimeoutObjectId ( s ) ; org.junit.Assert . assertEquals ( s , t . getTimeoutObjectId () ) ; }
@ java.lang.Override protected boolean validate () { return ( validate ( getVfsConfigValidator () . nicExists () ) ) && ( validate ( getVfsConfigValidator () . nicSriovEnabled () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Qos postPopulate ( org.ovirt.engine.api.model.Qos model ) { model = super . postPopulate ( model ) ; model . setType ( QosType.NETWORK ) ; return model ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase behavior = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase ) ( target ) ) ; cachedDefaultTimeZoneKey = ( ( java.lang.String ) ( returnValue ) ) ; behavior . PostUpdateDefaultTimeZone () ; }
private boolean validateAttachment () { final org.ovirt.engine.core.bll.network.cluster.UpdateNetworkClusterValidator networkClusterValidator = createNetworkClusterValidator () ; return ( validate ( networkClusterValidator . managementNetworkUnset () ) ) && ( validateAttachment ( networkClusterValidator ) ) ; }
@ org.junit.Test public void validateFailsOnVolumeWithoutAsyncTask () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( volumeWithoutAsyncTask , getBricks ( volumeWithoutAsyncTask ) ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public void setEntity ( org.ovirt.engine.core.common.businessentities.StoragePool value ) { privateEntity = value ; }
protected java.lang.String getNetworkNameReplacement () { return java.lang.String . format ( STRING_CONSTANT , network . getName () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getId () . equals ( getNetwork () . getId () ) ; }
protected void mockVds () { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS () ; vds . setClusterCompatibilityVersion ( org.ovirt.engine.core.compat.Version . getLast () ) ; org.mockito.Mockito . when ( vdsDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( vds ) ; }
@ org.junit.Test public void compareWhenSizesAreNotEqual () { attachVmDisksToStorageDomain ( storageDomain1 , vmDisk1 ) ; attachVmDisksToStorageDomain ( storageDomain2 , vmDisk2 , vmDisk3 ) ; initComparator ( vmDisk1 , vmDisk2 , vmDisk3 ) ; assertBiggerThan ( storageDomain1 , storageDomain2 ) ; assertSmallerThan ( storageDomain2 , storageDomain1 ) ; }
private void cancel () { sourceListModel . setWindow ( null ) ; }
@ java.lang.Override public boolean isInInit () { return ( ( this . nioEngine ) == null ) || ( this . nioEngine . handshakeInProgress () ) ; }
private java.lang.Throwable extractException ( java.lang.Object . . . args ) { for ( java.lang.Object arg : args ) { if ( arg instanceof java.lang.Throwable ) return ( ( java.lang.Throwable ) ( arg ) ) ; } return null ; }
private static java.util.ResourceBundle readMessagesFromBundle () { try { return java.util.ResourceBundle . getBundle ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogDirector.APP_ERRORS_MESSAGES_FILE_NAME ) ; } catch ( java.util.MissingResourceException e ) { org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogDirector.log . error ( ( STRING_CONSTANT + ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogDirector.APP_ERRORS_MESSAGES_FILE_NAME ) ) ) ; throw e ; } }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > newItems = returnValue . getReturnValue () ; java.util.Collections . sort ( newItems , new org.ovirt.engine.core.common.businessentities.comparators.NameableComparator () ) ; setItems ( newItems ) ; }
private void initInfoIcon () { raidParamsInfoIcon = new org.ovirt.engine.ui.common.widget.dialog.InfoIcon ( org.ovirt.engine.ui.webadmin.section.main.view.popup.gluster.CreateBrickPopupView.constants . raidConfigurationWarning () ) ; }
private void mockDAOForQuery ( ) throws java.lang.Exception { org.mockito.Mockito . when ( getDbFacadeMockInstance () . getVmDao () ) . thenReturn ( vmDAO ) ; org.mockito.Mockito . when ( getQueryParameters () . getId () ) . thenReturn ( vmId ) ; }
@ org.junit.Before public void testSetup () { org.mockito.Mockito . when ( quotaDao . getById ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( mockGeneralStorageQuota () ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > returnValue ) { context.dataCenterFoundByName = org.ovirt.engine.ui.uicommonweb.Linq . firstOrNull ( returnValue ) ; prepare2 () ; }
@ org.junit.Test public void poolUpdateOvfStoreOnAnyDomainSupported ( ) throws java.lang.Exception { ovfDataUpdater . ovfUpdateTimer () ; verify () ; }
public static boolean checkImagesLocked ( java.util.List < java.lang.String > messages , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > images ) { return org.ovirt.engine.core.bll.ImagesHandler . checkImagesNotInStatus ( messages , images , ImageStatus.LOCKED , VdcBllMessages.ACTION_TYPE_FAILED_DISKS_LOCKED ) ; }
public org.ovirt.engine.core.common.businessentities.IVdsEventListener getEventListener () { return org.ovirt.engine.core.utils.ejb.EjbUtils . findBean ( BeanType.VDS_EVENT_LISTENER , BeanProxyType.LOCAL ) ; }
@ org.junit.Before public void setupMock ( ) throws java.lang.Exception { org.mockito.Mockito . doReturn ( jobDaoMock ) . when ( commandMock ) . getJobDao () ; }
@ org.codehaus.jackson.annotate.JsonIgnore @ java.lang.Override @ javax.validation.constraints.Size ( min = NUMBER_CONSTANT , max = BusinessEntitiesDefinitions.VM_TEMPLATE_NAME_SIZE , message = STRING_CONSTANT , groups = { javax.validation.groups.Default . class , org.ovirt.engine.core.common.validation.group.ImportClonedEntity . class } ) @ org.ovirt.engine.core.common.validation.annotation.ValidI18NName ( message = STRING_CONSTANT , groups = { org.ovirt.engine.core.common.validation.group.CreateEntity . class , org.ovirt.engine.core.common.validation.group.UpdateEntity . class , org.ovirt.engine.core.common.validation.group.ImportClonedEntity . class } ) public java.lang.String getName () { return super . getName () ; }
public void setIsDisksAvailable ( boolean value ) { isDisksAvailable = value ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; }
@ org.junit.Test public void testGetAllForStoragePool () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePool ( existingVds . getStoragePoolId () ) ; assertGetAllForStoragePoolCorrectResult ( result ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , true , null ) ; }
@ java.lang.Override protected void processImages () { processImages ( ( ! ( org.ovirt.engine.core.bll.ImportVmCommand . isImagesAlreadyOnTarget () ) ) ) ; if ( org.ovirt.engine.core.bll.ImportVmCommand . getReturnValue () . getVdsmTaskIdList () . isEmpty () ) { endVmRelatedOps () ; } }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid eval ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return diskImage . getId () ; }
@ org.junit.Test public void testGetForStoragePoolWithInvalidPool () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getForStoragePool ( existingDomain . getId () , org.ovirt.engine.core.compat.Guid . NewGuid () ) ; org.junit.Assert . assertNull ( result ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.AddVmCommand < org.ovirt.engine.core.common.action.AddVmParameters > createCommand () { return new org.ovirt.engine.core.bll.AddVmCommand ( new org.ovirt.engine.core.common.action.AddVmParameters ( vm ) , null ) ; }
@ java.lang.Override public void setTitle ( java.lang.String title ) { org.ovirt.engine.ui.common.view.popup.AbstractModelBoundPopupView . asWidget () . setHeader ( title ) ; }
protected org.ovirt.engine.core.compat.Guid getQuotaId () { return getParameters () . getQuotaId () ; }
public void newNetwork () { if ( ( getWindow () ) != null ) { return; } final org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkModel networkModel = new org.ovirt.engine.ui.uicommonweb.models.datacenters.NewNetworkModel ( this ) ; setWindow ( networkModel ) ; initDcList ( networkModel ) ; }
public org.ovirt.engine.core.common.businessentities.VolumeType getSelectedVolumeType () { if ( ! ( ( java.lang.Boolean ) ( collapseSnapshots . getEntity () ) ) ) { return getVolumeType () ; } return selectedVolumeType ; }
public java.lang.String getSearchString () { if ( ( searchString ) == null ) { return null ; } return ( searchString ) + ( ( pagingSearchString ) == null ? STRING_CONSTANT : pagingSearchString ) ; }
private boolean logicalNetworkExists () { if ( ( org.ovirt.engine.core.bll.AttachNetworkToVdsGroupCommand . getNetworkDAO () . get ( getNetworkCluster () . getnetwork_id () ) ) != null ) { return true ; } addCanDoActionMessage ( VdcBllMessages.NETWORK_NOT_EXISTS ) ; return false ; }
public static boolean IsActiveStorageDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean isActive = ( ( storageDomain . getStatus () ) != null ) && ( ( storageDomain . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ; return isActive ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.GuestContainer row ) { return java.lang.String . join ( STRING_CONSTANT , row . getNames () ) ; }
private void mockDaos () { mockVmDao () ; mockDiskImageDao () ; mockStoragePoolDao () ; mockValidators () ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
public void registerProfile ( org.ovirt.engine.core.aaa.AuthenticationProfile profile ) { registerProfile ( profiles , profile ) ; }
void updateColumnsAvailability ( org.ovirt.engine.ui.uicommonweb.models.storage.DisksAllocationModel model ) { setShowVolumeType ( model . getIsVolumeFormatAvailable () ) ; setShowQuota ( ( ( model . getQuotaEnforcementType () ) != ( org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum.DISABLED ) ) ) ; }
@ java.lang.Override protected void executeCommand () { getReturnValue () . setActionReturnValue ( getParameters () . getLibvirtSecret () . getId () ) ; }
@ java.lang.Override public com.google.gwt.resources.client.ImageResource getValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData object ) { return new org.ovirt.engine.ui.webadmin.widget.table.column.VmTypeColumn () . getValue ( object . getVm () ) ; }
@ org.ovirt.engine.ui.common.widget.table.cell.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml input ( java.lang.String id ) ;
@ org.junit.Before public void setup ( ) throws org.ovirt.engine.core.common.utils.exceptions.InitializationException { mockVmPropertiesUtils () ; mockOsRepository () ; }
@ java.lang.Override public void onFailed ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { org.ovirt.engine.core.bll.CommandBase < > commandBase = getCommand ( cmdId ) ; commandBase . getParameters () . setTaskGroupSuccess ( false ) ; endAction ( commandBase , childCmdIds , false ) ; }
@ org.junit.Test public void canExecute () { org.junit.Assert . assertEquals ( result , org.ovirt.engine.core.common.VdcActionUtils . canExecute ( java.util.Collections . singletonList ( toTest ) , toTest . getClass () , action ) ) ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain initStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; return storageDomain ; }
protected java.lang.String clusterVersion () { return java.lang.String . format ( STRING_CONSTANT , version . getValue () ) ; }
@ java.lang.Override public void updateCommandData ( final org.ovirt.engine.core.compat.Guid commandId , final java.util.Map < java.lang.String , java.io.Serializable > data ) { commandsRepository . updateCommandData ( commandId , data ) ; }
private void isAutoAssign_EntityChanged ( java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { if ( ! ( getIsAutoAssign () . getEntity () ) ) { getDefaultHost () . setIsChangeable ( true ) ; } }
@ org.junit.Test public void testBeanValidations () { org.junit.Assert . assertTrue ( cmd . validateInputs () ) ; }
public boolean isEnhancements () { return enhancements ; }
public org.ovirt.engine.core.dal.dbbroker.DbFacade getDbFacade () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase getParameters ( org.ovirt.engine.api.model.Qos model , org.ovirt.engine.core.common.businessentities.qos.QosBase entity ) { org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.QosBase > parameters = new org.ovirt.engine.core.common.action.QosParametersBase () ; parameters . setQosId ( guid ) ; parameters . setQos ( map ( incoming , entity ) ) ; return parameters ; }
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.String > getDomainMap () { return domainMap ; }
private static void setHookId ( org.ovirt.engine.api.model.Hook hook , java.lang.String hookName , java.lang.String eventName , java.lang.String md5 ) { org.ovirt.engine.core.compat.Guid guid = org.ovirt.engine.api.restapi.types.HostMapper . generateHookId ( eventName , hookName , md5 ) ; hook . setId ( guid . toString () ) ; }
public static boolean checkImagesLocked ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < java.lang.String > messages ) { return org.ovirt.engine.core.bll.ImagesHandler . checkImagesLocked ( messages , org.ovirt.engine.core.bll.ImagesHandler . getImages ( vmId , null ) ) ; }
private static org.ovirt.engine.core.common.businessentities.StoragePool createStoragePool () { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; pool . setname ( STRING_CONSTANT ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . NewGuid () ) ; return pool ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateReportsAvailability () ; }
@ org.junit.Test public void testVmFailNoDisks () { org.ovirt.engine.core.bll.validator.RunVmValidatorTest . validateResult ( runVmValidator . validateBootSequence ( new org.ovirt.engine.core.common.businessentities.VM () , new java.util.ArrayList <> () ) , false , EngineMessage.VM_CANNOT_RUN_FROM_DISK_WITHOUT_DISK ) ; }
protected void failedToMigrate () { try { determineMigrationFailureForAuditLog () ; _isRerun = false ; org.ovirt.engine.core.bll.MigrateVmCommand . setSucceeded ( false ) ; org.ovirt.engine.core.bll.MigrateVmCommand . failedToRunVm () ; } finally { org.ovirt.engine.core.bll.MigrateVmCommand . freeLock () ; } }
public void log ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase auditLogable ) { org.ovirt.engine.core.common.AuditLogType logType = auditLogable . getAuditLogTypeValue () ; log ( auditLogable , logType ) ; }
@ org.junit.Test public void testStopFence ( ) throws java.lang.Exception { doTestFence ( FenceType.STOP , VdcActionType.StopVds ) ; }
@ org.junit.Test public void testValidateUniqueTemplateNameInDC () { setupVolumeFormatAndTypeTest ( VolumeFormat.RAW , VolumeType.Preallocated , StorageType.NFS ) ; org.mockito.Mockito . doReturn ( true ) . when ( command ) . isVmTemplateWithSameNameExist () ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.VM_CANNOT_IMPORT_TEMPLATE_NAME_EXISTS ) ; }
@ java.lang.Override protected java.lang.String getDriveHostResource ( org.ovirt.engine.core.common.businessentities.storage.DiskImage image ) { return java.lang.String . format ( STRING_CONSTANT , image . getId () ) ; }
@ java.lang.Override protected void OnEntityChanged () { super . OnEntityChanged () ; if ( ( getEntity () ) != null ) { updateServiceList () ; updateHostList () ; } }
private void hideLabels () { passwordEditor . hideLabel () ; publicKeyEditor . hideLabel () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) {}
public boolean equalValues ( org.ovirt.engine.core.common.businessentities.qos.QosBase other ) { return false ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { editedVm = result ; vmInitLoaded ( editedVm ) ; }
private void assertGetAllRelevantQuoatsForVdsGroup ( org.ovirt.engine.core.compat.Guid vdsGroupId , int expectedQuotas ) { java.util.List < org.ovirt.engine.core.common.businessentities.Quota > quotas = dao . getAllRelevantQuotasForVdsGroup ( vdsGroupId , null , false ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , expectedQuotas , quotas . size () ) ; }
private void mockProxySourcesForFencedHost ( java.util.List < org.ovirt.engine.core.common.businessentities.pm.FenceProxySourceType > fenceProxySources ) { org.mockito.Mockito . when ( fencedHost . getFenceProxySources () ) . thenReturn ( fenceProxySources ) ; }
public void importVms ( org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback ) { startProgress () ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runMultipleAction ( VdcActionType.ImportVm , buildImportVmParameters () , callback , this ) ; }
private long getHeartbeatTime () { return ( java.lang.System . currentTimeMillis () ) - ( this . lastIncomingHeartbeat ) ; }
@ java.lang.Override public void update ( T entity ) { update ( entity , getProcedureNameForUpdate () ) ; }
private void prepareInterfaceMocks () { org.mockito.Mockito . doReturn ( getNetworks () ) . when ( networkDao ) . getAllForCluster ( org.mockito.ArgumentMatchers . any () ) ; org.mockito.Mockito . doReturn ( getNetworkInterfaces () ) . when ( interfaceDao ) . getAllInterfacesForVds ( serverId ) ; }
public static < T > org.ovirt.engine.ui.common.widget.editor.TakesValueWithChangeHandlersEditor < T > of ( com.google.gwt.user.client.TakesValue < T > peer , com.google.gwt.event.logical.shared.HasValueChangeHandlers < T > peerWithValueChangeHandlers ) { return new org.ovirt.engine.ui.common.widget.editor.TakesValueWithChangeHandlersEditor ( peer , peerWithValueChangeHandlers ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.DbGroup getByExternalId ( java.lang.String domain , java.lang.String externalId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbGroupDAODbFacadeImpl.DbGroupRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , domain ) . addValue ( STRING_CONSTANT , externalId ) ) ; }
public void setSuperItems ( java.lang.Iterable value ) { super . setItems ( value ) ; }
@ org.junit.Test public void validate () { mockVMPoolDao () ; setupForStorageTests () ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.Override public void hideAndUnbind () { super . hideAndUnbind () ; org.ovirt.engine.ui.common.presenter.AbstractModelBoundPopupPresenterWidget . getView () . cleanup () ; if ( ( this . model ) != null ) { this . model . cleanup () ; this . model = null ; } }
public void updateGlusterHookStatus ( org.ovirt.engine.core.compat.Guid hookId , org.ovirt.engine.core.common.businessentities.gluster.GlusterHookStatus status ) ;
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmSnapshotListModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.VmSnapshotListModel ) ( target ) ) ; model . setIsCloneVmSupported ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( NUMBER_CONSTANT , true ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public void setstorage_name ( java.lang.String value ) { getStorageStaticData () . setstorage_name ( value ) ; }
private org.ovirt.engine.core.common.businessentities.IscsiBond getIscsiBondContainingNetwork () { org.ovirt.engine.core.common.businessentities.IscsiBond iscsiBond = new org.ovirt.engine.core.common.businessentities.IscsiBond () ; iscsiBond . setId ( org.ovirt.engine.api.restapi.resource.BackendIscsiBondNetworkResourceTest.ISCSI_BOND_ID ) ; iscsiBond . getNetworkIds () . add ( org.ovirt.engine.api.restapi.resource.BackendIscsiBondNetworkResourceTest.NETWORK_ID ) ; return iscsiBond ; }
public static boolean isHotUnpluggable ( org.ovirt.engine.core.common.businessentities.VmDevice vmDevice ) { return ( vmDevice . getType () ) == ( org.ovirt.engine.core.common.businessentities.VmDeviceGeneralType.MEMORY ) ; }
@ org.junit.Test public void vdsIdRef () { b . setVdsIdRef ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.compat.Guid g = b . getVdsIdRef () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , g ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.gluster.GlusterClusterService swiftService ) { if ( swiftService != null ) { setGlusterSwiftStatus ( swiftService . getStatus () ) ; } else { setGlusterSwiftStatus ( GlusterServiceStatus.UNKNOWN ) ; } }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateWindowsWarningMessage () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VmPool object ) { return object . getName () ; }
@ org.junit.Test public void shouldElectActiveSharedDataDomain () { final org.ovirt.engine.core.common.businessentities.StorageDomain domain = prepareSharedStorageDomainForElection ( StorageDomainStatus.Active ) ; org.junit.Assert . assertEquals ( domain , cmd . electNewMaster () ) ; }
public void setvds_group_compatibility_version ( org.ovirt.engine.core.compat.Version value ) { if ( org.ovirt.engine.core.compat.Version . OpInequality ( vds_group_compatibility_versionField , value ) ) { this . vds_group_compatibility_versionField = value ; } }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { return org.ovirt.engine.core.bll.RemoveVmTemplateFromImportExportCommand . getSucceeded () ? org.ovirt.engine.core.common.AuditLogType.IMPORTEXPORT_REMOVE_TEMPLATE : org.ovirt.engine.core.common.AuditLogType.IMPORTEXPORT_REMOVE_TEMPLATE_FAILED ; }
public void setRetryPolicy ( org.ovirt.vdsm.jsonrpc.client.utils.retry.RetryPolicy policy ) { this . client . setRetryPolicy ( policy ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.common.businessentities.VDS , org.ovirt.engine.core.common.vdscommands.VDSReturnValue > call ( ) throws java.lang.Exception { org.ovirt.engine.core.common.vdscommands.VDSReturnValue returnValue = runVdsCommand ( VDSCommandType.GlusterHooksList , new org.ovirt.engine.core.common.vdscommands.VdsIdVDSCommandParametersBase ( upServer . getId () ) ) ; return new org.ovirt.engine.core.common.utils.Pair ( upServer , returnValue ) ; }
@ org.junit.Test public void canRunVmFailStatelessWhenVmHAwithNullStatelessParam () { canRunStatelessVmTest ( true , true , null , false ) ; }
public boolean isTaskOfType ( org.ovirt.engine.core.common.businessentities.gluster.GlusterTaskSupport supportObj , org.ovirt.engine.core.common.asynctasks.gluster.GlusterTaskType type ) { return ( ( supportObj . getAsyncTask () ) != null ) && ( ( supportObj . getAsyncTask () . getType () ) == type ) ; }
public java.lang.String generateDefaultQuotaName ( org.ovirt.engine.core.common.businessentities.storage_pool storagePool ) { java.lang.String quotaName = getDefaultQuotaName ( storagePool . getname () ) ; return getQuotaDAO () . getDefaultQuotaName ( quotaName ) ; }
@ java.lang.Override public boolean match ( java.lang.String s ) { return ( ( vm . getCurrentCd () ) != null ) && ( vm . getCurrentCd () . equals ( s ) ) ; }
@ java.lang.Override public boolean matches ( java.lang.Object argument ) { return ( argument instanceof org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ) && ( ( ( ( org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ) ( argument ) ) . getConfigValue () ) == configValue ) ; }
public org.ovirt.engine.core.searchbackend.IAutoCompleter getObjectRelationshipAutoCompleter () { return StringConditionRelationAutoCompleter.INSTANCE ; }
@ java.lang.Override public com.google.gwt.safehtml.shared.SafeHtml getTooltip ( T object ) { return null ; }
private void updateProperties () { org.ovirt.engine.core.common.businessentities.aaa.DbUser user = ( ( org.ovirt.engine.core.common.businessentities.aaa.DbUser ) ( getEntity () ) ) ; setDomain ( user . getDomain () ) ; setEmail ( user . getEmail () ) ; }
protected java.lang.String cdPathWindowsToLinux ( java.lang.String url ) { return org.ovirt.engine.core.bll.ImagesHandler . cdPathWindowsToLinux ( url , org.ovirt.engine.core.bll.RunVmCommand . getVm () . getStoragePoolId () ) ; }
@ java.lang.Override public org.ovirt.engine.ui.common.widget.table.SimpleActionTable < T > getTable () { return table ; }
@ java.lang.Override public void initTable () { getTable () . enableColumnResizing () ; addGeneralTypeColumn () ; addDeviceTypeColumn () ; addAddressColumn () ; addReadOnlyColumn () ; addPluggedColumn () ; addManagedColumn () ; addSpecParamsColumn () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . getName () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Role > result ) { populateRoles ( result ) ; }
public void setWidget ( com.google.gwt.user.client.ui.Widget widget ) { panel . add ( widget ) ; }
private void setNetworks ( java.util.Map < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.hosts.network.LogicalNetworkModel > networks ) { networkMap = networks ; }
protected boolean checkStoragePoolNameLengthValid () { boolean result = true ; if ( ( org.ovirt.engine.core.bll.storage.StorageHandlingCommandBase . getStoragePool () . getName () . length () ) > ( getStoragePoolNameSizeLimit () ) ) { result = false ; addCanDoActionMessage ( VdcBllMessages.ACTION_TYPE_FAILED_NAME_LENGTH_IS_TOO_LONG ) ; } return result ; }
@ java.lang.Override public java.util.Set < java.lang.String > getConsumedEvents () { java.util.Set < java.lang.String > set = new java.util.HashSet ( super . getConsumedEvents () ) ; set . add ( BrowserEvents.CLICK ) ; return set ; }
@ org.junit.Test public void testGetAllForStoragePool () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStoragePool ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; org.ovirt.engine.core.dao.StorageDomainDAOTest . assertGetAllForStoragePoolResult ( result , org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getname () . equals ( getInterface () . getNetworkName () ) ; }
@ java.lang.Override public void storagePoolUpEvent ( org.ovirt.engine.core.common.businessentities.storage_pool storagePool , boolean isNewSpm ) { if ( isNewSpm ) { org.ovirt.engine.core.bll.AsyncTaskManager . getInstance () . StopStoragePoolTasks ( storagePool ) ; } else { org.ovirt.engine.core.bll.AsyncTaskManager . getInstance () . AddStoragePoolExistingTasks ( storagePool ) ; } }
@ java.lang.Override protected void ActiveDetailModelChanged () { super . ActiveDetailModelChanged () ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { mappings . setExplanation ( org.ovirt.engine.ui.webadmin.widget.provider.NeutronAgentWidget.templates . italicText ( model . getInterfaceMappingsExplanation () . getEntity () ) ) ; }
@ java.lang.Override public java.lang.String getTooltip () { return org.ovirt.engine.ui.webadmin.section.main.view.popup.host.VfsConfigPopupView.constants . attachAll () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.ExternalSubnet object ) { return java.lang.String . join ( STRING_CONSTANT , object . getDnsServers () ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateSysprepVisibility ( object ) ; }
protected java.util.Map [] getVmInfo ( java.util.List < java.lang.String > vmsToUpdate ) { return ( ( java.util.Map [] ) ( new org.ovirt.engine.core.vdsbroker.vdsbroker.FullListVdsCommand < org.ovirt.engine.core.common.vdscommands.FullListVDSCommandParameters > ( new org.ovirt.engine.core.common.vdscommands.FullListVDSCommandParameters ( _vds , vmsToUpdate ) ) . executeWithReturnValue () ) ) ; }
@ org.junit.Test public void testAlreadyExistStorageDomain () { org.mockito.Mockito . when ( storageDomainStaticDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( parameters . getStorageDomain () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_DOMAIN_ALREADY_EXIST ) ; }
@ java.lang.Override public java.lang.String getTooltip () { return org.ovirt.engine.ui.webadmin.section.main.view.tab.host.SubTabHostVmView.constants . shutDownVm () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getVmImageDisks () { if ( ( cachedVmImageDisks ) == null ) { cachedVmImageDisks = org.ovirt.engine.core.bll.ImagesHandler . filterImageDisks ( getVmDisks () , true , false , false ) ; } return cachedVmImageDisks ; }
public static void setEngineSessionId ( javax.servlet.http.HttpSession session , java.lang.String sessionId ) { if ( session != null ) { org.ovirt.engine.api.common.security.auth.SessionUtils.log . debug ( ( STRING_CONSTANT + sessionId ) ) ; session . setAttribute ( org.ovirt.engine.api.common.security.auth.SessionUtils.ENGINE_SESSION_ID_KEY , sessionId ) ; } }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . executeCommand ( command ) ; if ( STRING_CONSTANT . equals ( command . getName () ) ) { cancel () ; } }
