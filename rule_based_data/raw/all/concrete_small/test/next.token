private static void doTestPrimitiveFieldsFloat () { art.Test906.FloatObject floatObject = new art.Test906.FloatObject () ; art.Test906 . setTag ( floatObject , NUMBER_CONSTANT ) ; java.lang.System.out . println ( art.Test906 . iterateThroughHeapPrimitiveFields ( NUMBER_CONSTANT ) ) ; java.lang.System.out . println ( art.Test906 . getTag ( floatObject ) ) ; }
@ java.lang.Override public int getConnectionState ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.map.BluetoothMapService.VERBOSE ) { android.util.Log . v ( com.android.bluetooth.map.BluetoothMapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.map.BluetoothMapService service = getService () ; if ( service == null ) { return android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ; } return service . getConnectionState ( device ) ; }
public static void noteStackedIface ( java.lang.String stackedIface , java.lang.String baseIface ) { if ( ( stackedIface != null ) && ( baseIface != null ) ) { com.android.internal.net.NetworkStatsFactory.sStackedIfaces . put ( stackedIface , baseIface ) ; } }
@ java.lang.Override public final long getLong ( int i ) { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getLong ( ix ( checkIndex ( i , SizeOf.LONG ) ) ) ; }
public void installPackages ( java.util.List < java.lang.String > apkFilePaths , int timeOutInMs , boolean reinstall , java.lang.String . . . extraArgs ) throws com.android.ddmlib.InstallException ;
private int getField ( java.util.Date d , int f ) { getFieldCal . setTime ( d ) ; int ret = getFieldCal . get ( f ) ; return ret ; }
public static boolean equalMethodParameters ( java.lang.reflect.ArtMethod artMethod , java.lang.Class < > [] params ) { return java.lang.reflect.ArtMethod . equalConstructorParameters ( artMethod , params ) ; }
private static java.lang.ThreadGroup [] allGroups ( java.lang.ThreadGroup parent ) { int count = parent . activeGroupCount () ; java.lang.ThreadGroup [] all = new java.lang.ThreadGroup [ count ] ; parent . enumerate ( all , true ) ; return all ; }
@ java.lang.Override public java.lang.String getProperty ( java.lang.String name ) { return this . getProperty ( name ) ; }
public synchronized void setOnInfoListener ( android.drm.DrmManagerClient.OnInfoListener infoListener ) { if ( null != infoListener ) { mOnInfoListener = infoListener ; } }
private long getContentLengthLong () { try { if ( ! ( connected ) ) { connect () ; } } catch ( java.io.IOException e ) {} return length ; }
public synchronized void setPushLevel ( java.util.logging.Level newLevel ) throws java.lang.SecurityException { if ( newLevel == null ) { throw new java.lang.NullPointerException () ; } checkPermission () ; pushLevel = newLevel ; }
@ java.lang.Override public java.lang.Object clone () { try { return super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { throw new android.icu.util.ICUCloneNotSupportedException ( e ) ; } }
@ java.lang.Override public void run () { mIconDb = android.webkit.WebIconDatabase . getInstance () ; java.lang.String dbPath = ( getActivity () . getFilesDir () . toString () ) + STRING_CONSTANT ; mIconDb . open ( dbPath ) ; }
private boolean isSet ( int position ) { return ( position < ( bitString.length ) ) && ( bitString [ position ] ) ; }
@ java.lang.Override public java.io.File call ( ) throws java.lang.Exception { final com.android.builder.sdk.SdkInfo info = scope . getGlobalScope () . getSdkHandler () . getSdkInfo () ; return info == null ? null : info . getAdb () ; }
synchronized android.view.Surface nAllocationGetSurface ( long alloc ) { validate () ; return rsnAllocationGetSurface ( mContext , alloc ) ; }
@ java.lang.Override public void changePathRsp ( byte [] address , int rspStatus , int numItems ) { if ( ! ( changePathRspNative ( address , rspStatus , numItems ) ) ) { android.util.Log . e ( com.android.bluetooth.avrcp.Avrcp.AvrcpMediaRsp.TAG , STRING_CONSTANT ) ; } }
abstract float getFloatUnchecked ( int index ) ;
@ java.lang.Override public void setSSLParameters ( javax.net.ssl.SSLParameters p ) { super . setSSLParameters ( p ) ; org.conscrypt.Platform . setSSLParameters ( p , sslParameters , this ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.util.List < android.bluetooth.BluetoothDevice > bluetoothA2dpSinkGetConnectedDevices () { if ( ( com.googlecode.android_scripting.facade.bluetooth.BluetoothA2dpSinkFacade.sA2dpSinkProfile ) == null ) return new java.util.ArrayList < android.bluetooth.BluetoothDevice > () ; return com.googlecode.android_scripting.facade.bluetooth.BluetoothA2dpSinkFacade.sA2dpSinkProfile . getConnectedDevices () ; }
void onDropped ( com.android.ide.eclipse.adt.editors.layout.gscripts.INode targetNode , com.android.ide.eclipse.adt.editors.layout.gscripts.IDragElement [] elements , com.android.ide.eclipse.adt.editors.layout.gscripts.DropFeedback feedback , com.android.ide.eclipse.adt.editors.layout.gscripts.Point where ) ;
protected void forEach ( int slot , android.renderscript.Allocation [] ains , android.renderscript.Allocation aout , android.renderscript.FieldPacker v ) { forEach ( slot , ains , aout , v , null ) ; }
@ javax.annotation.Nonnull public static java.io.File [] getDefaultBootclasspath () { return new java.io.File [] { com.android.jack.TestTools . getFromAndroidTree ( STRING_CONSTANT ) } ; }
@ java.lang.Override protected boolean isRetained ( char c ) { return c == CHAR_CONS ; }
@ java.lang.Override public void cleanup () { setState ( BluetoothSap.STATE_DISCONNECTED , BluetoothSap.RESULT_CANCELED ) ; closeService () ; if ( ( mSessionStatusHandler ) != null ) { mSessionStatusHandler . removeCallbacksAndMessages ( null ) ; } }
@ android.security.KeyStoreKeyConstraints.PaddingEnum public static int fromKeymaster ( int padding ) { switch ( padding ) { case android.security.keymaster.KeymasterDefs.KM_PAD_NONE : return android.security.KeyStoreKeyConstraints.Padding.NONE ; case android.security.keymaster.KeymasterDefs.KM_PAD_PKCS7 : return android.security.KeyStoreKeyConstraints.Padding.PKCS7 ; default: throw new java.lang.IllegalArgumentException ( ( STRING_CONSTANT + padding ) ) ; } }
@ java.lang.Override public void addOutput ( @ javax.annotation.Nonnull byte [] data , int offset , int length ) { out . println ( new java.lang.String ( java.util.Arrays . copyOfRange ( data , offset , ( offset + length ) ) ) ) ; }
@ org.junit.Test public void testUpdate_emptyScanList () { mRecommendedNetworkEvaluator . update ( new java.util.ArrayList < com.android.server.wifi.ScanDetail > () ) ; verifyZeroInteractions ( mNetworkScoreManager ) ; verify ( mWifiConfigManager ) . updateNetworkNotRecommended ( mTrustedWifiConfiguration.networkId , false ) ; }
@ java.lang.Override public boolean showWarning ( java.lang.String message ) { java.lang.System.out . println ( ( STRING_CONSTANT + message ) ) ; return false ; }
public static synchronized java.security.Provider.Service getService ( java.lang.String key ) { return org.apache.harmony.security.fortress.Services.services . get ( key ) ; }
native void rsnAllocationData2D ( long con , long id , int xoff , int yoff , int mip , int face , android.graphics.Bitmap b ) ;
public void run () {}
@ java.lang.Override protected void beforeDebuggeeStart () { debuggeeWrapper . setExpectedExitCode ( org.apache.harmony.jpda.tests.jdwp.VirtualMachine.ExitTest.EXIT_CODE ) ; super . beforeDebuggeeStart () ; }
@ android.test.suitebuilder.annotation.MediumTest public void testPreconditions () { assertNotNull ( mTextView ) ; }
public static native int SSL_do_handshake ( long sslNativePointer , java.io.FileDescriptor fd , org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSLHandshakeCallbacks shc , int timeoutMillis , boolean client_mode , byte [] npnProtocols ) throws java.net.SocketTimeoutException , java.security.cert.CertificateException , javax.net.ssl.SSLException ;
private static java.lang.String presentableFileName ( @ org.jetbrains.annotations.NotNull java.io.File file ) { return ( STRING_CONSTANT + ( com.intellij.openapi.util.io.FileUtil . toSystemDependentName ( file . getPath () ) ) ) + STRING_CONSTANT ; }
@ java.lang.Override public void endTraceSeed ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) { composedStatus . pop () ; }
public void setView ( int type , int i ) { float [] f = new float [] {} ; setView ( type , i , f ) ; }
public void testWifi ( ) throws java.lang.Exception { if ( ! ( hasDeviceFeature ( STRING_CONSTANT ) ) ) { return; } executeDeviceOwnerTest ( STRING_CONSTANT ) ; }
private void addChild ( com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo child ) { mChildren . add ( child ) ; }
public static native byte [] SSL_get_npn_negotiated_protocol ( long sslNativePointer ) ;
@ java.lang.Override public com.android.sdklib.repository.FullRevision convert ( java.lang.String input ) throws com.google.devtools.common.options.OptionsParsingException { try { return com.android.sdklib.repository.FullRevision . parseRevision ( input ) ; } catch ( java.lang.NumberFormatException e ) { throw new com.google.devtools.common.options.OptionsParsingException ( e . getMessage () ) ; } }
static com.android.bluetooth.a2dp.A2dpStateMachine make ( com.android.bluetooth.a2dp.A2dpService svc , android.content.Context context ) { android.util.Log . d ( com.android.bluetooth.a2dp.A2dpStateMachine.TAG , STRING_CONSTANT ) ; com.android.bluetooth.a2dp.A2dpStateMachine a2dpSm = new com.android.bluetooth.a2dp.A2dpStateMachine ( svc , context ) ; a2dpSm . start () ; return a2dpSm ; }
public void copyFrom ( java.lang.Object array ) { try { android.os.Trace . traceBegin ( RenderScript.TRACE_TAG , STRING_CONSTANT ) ; copyFromUnchecked ( array , validateObjectIsPrimitiveArray ( array , true ) , java.lang.reflect.Array . getLength ( array ) ) ; } finally { android.os.Trace . traceEnd ( RenderScript.TRACE_TAG ) ; } }
void addConditionalBasicBlock ( @ javax.annotation.Nonnull com.android.jack.cfg.ConditionalBasicBlock block , @ javax.annotation.Nonnull com.android.jack.ir.ast.JStatement thenStatement , @ javax.annotation.CheckForNull com.android.jack.ir.ast.JStatement elseStatement ) { assert block != null ; assert thenStatement != null ; blocksToResolve . add ( new com.android.jack.cfg.ForwardBranchResolver.ConditionalBasicBlockToResolve ( block , thenStatement , elseStatement ) ) ; }
@ java.lang.Override public void onMediaDescriptionUpdated () { try { callback . onMediaDescriptionUpdated () ; } catch ( android.os.RemoteException e ) { onAppCallbackDied ( uid , subscriptionId ) ; } }
protected native byte getTTL ( ) throws java.io.IOException ;
public int run () { return NUMBER_CONSTANT ; }
@ java.lang.Override protected void engineInitSign ( java.security.PrivateKey privateKey ) throws java.security.InvalidKeyException { initInternal ( org.conscrypt.OpenSSLKey . fromPrivateKey ( privateKey ) , true ) ; }
public void sendMessage ( int peerId , int messageId , @ android.annotation.Nullable byte [] message ) { sendMessage ( peerId , messageId , message , NUMBER_CONSTANT ) ; }
public boolean matches () { synchronized ( this ) { matchFound = java.util.regex.Matcher . matchesImpl ( address , input , matchOffsets ) ; } return matchFound ; }
synchronized long nProgramFragmentCreate ( java.lang.String shader , java.lang.String [] texNames , long [] params ) { validate () ; return rsnProgramFragmentCreate ( mContext , shader , texNames , params ) ; }
void getChars ( char [] dst , int dstBegin ) { getCharsNoCheck ( NUMBER_CONSTANT , length () , dst , dstBegin ) ; }
@ java.lang.Override public void clearBlacklist () {}
@ java.lang.Override public org.objectweb.asm.AnnotationVisitor visitAnnotation ( java.lang.String desc , boolean visible ) { org.objectweb.asm.AnnotationVisitor av = super . visitAnnotation ( remapper . mapDesc ( desc ) , visible ) ; return av == null ? null : createRemappingAnnotationAdapter ( av ) ; }
public void stop () { com.google.gct.login.CancellableServerReceiver localreceiver = receiver ; if ( localreceiver != null ) { try { localreceiver . stop () ; } catch ( java.io.IOException e ) { logErrorAndDisplayDialog ( STRING_CONSTANT , e ) ; } } }
protected javax.net.ssl.SSLSocket configureSocket ( javax.net.ssl.SSLSocket socket ) throws java.io.IOException { return socket ; }
private void updateDefaultChannel () {}
@ java.lang.Override public java.lang.String insnArgString ( com.android.dx.dex.code.DalvInsn insn ) { com.android.dx.rop.code.RegisterSpecList regs = insn . getRegisters () ; return ( ( regs . get ( NUMBER_CONSTANT ) . regString () ) + STRING_CONSTANT ) + ( insn . cstString () ) ; }
public int length () { final boolean STRING_COMPRESSION_ENABLED = true ; if ( STRING_COMPRESSION_ENABLED ) { return ( count ) > > > NUMBER_CONSTANT ; } else { return count ; } }
@ com.android.annotations.NonNull public static com.android.sdklib.repository.MajorRevision parseRevision ( @ com.android.annotations.NonNull java.lang.String revision ) throws java.lang.NumberFormatException { com.android.sdklib.repository.FullRevision r = parseRevisionImpl ( revision , false , false , false ) ; return new com.android.sdklib.repository.MajorRevision ( r . getMajor () ) ; }
@ java.lang.Override public android.net.INetd getNetdInstance ( ) throws android.os.RemoteException { final android.net.INetd netd = android.net.util.NetdService . getInstance () ; if ( netd == null ) { throw new android.os.RemoteException ( STRING_CONSTANT ) ; } return netd ; }
@ java.lang.Override protected void handleRPCConnection ( java.net.Socket sock , java.lang.Integer uid , java.io.BufferedReader reader , java.io.PrintWriter writer ) throws java.lang.Exception {}
public static com.android.builder.internal.compiler.PreProcessCache.Key of ( @ com.android.annotations.NonNull java.io.File sourceFile , @ com.android.annotations.NonNull com.android.sdklib.repository.FullRevision buildToolsRevision ) { return new com.android.builder.internal.compiler.PreProcessCache.Key ( sourceFile , buildToolsRevision ) ; }
private synchronized void notifyAuthCancelled () { mObexAuth . setCancelled ( true ) ; }
@ com.android.annotations.NonNull public static java.io.File getAapt () { return com.android.build.gradle.integration.common.utils.SdkHelper . getAapt ( com.android.sdklib.repository.FullRevision . parseRevision ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public void openModuleSettings ( final com.intellij.openapi.module.Module module ) { com.intellij.openapi.roots.ui.configuration.ModulesConfigurator . showDialog ( myProject , module . getName () , null ) ; }
private static void writeInt ( @ com.android.annotations.NonNull java.io.FileOutputStream fos , int value ) throws java.io.IOException { java.nio.ByteBuffer b = java.nio.ByteBuffer . allocate ( NUMBER_CONSTANT ) ; b . putInt ( value ) ; fos . write ( b . array () ) ; }
@ java.lang.Override public void endVisit ( org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference x , org.eclipse.jdt.internal.compiler.lookup.BlockScope scope ) { try { endVisit ( ( ( org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference ) ( x ) ) , scope ) ; } catch ( java.lang.RuntimeException e ) { throw translateException ( x , e ) ; } }
public java.util.List < java.security.cert.X509Certificate > checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType , javax.net.ssl.SSLSession session ) throws java.security.cert.CertificateException { return checkTrusted ( chain , authType , session , null , false ) ; }
private void removeListener ( int key ) { synchronized ( mMapLock ) { mListenerMap . remove ( key ) ; mServiceMap . remove ( key ) ; } }
public boolean simIdentityResponse ( int id , java.lang.String response ) { return mSupplicantStaIfaceHal . sendCurrentNetworkEapIdentityResponse ( response ) ; }
public vogar.commands.VmCommandBuilder env ( java.lang.String key , java.lang.String value ) { env . put ( key , value ) ; return this ; }
public android.icu.util.ULocale getBestMatch ( android.icu.util.ULocale ulocale ) { return getBestMatchInternal ( ulocale , null ) ; }
@ com.android.annotations.Nullable public com.android.sdklib.devices.Camera getCamera ( @ com.android.annotations.NonNull com.android.sdklib.devices.CameraLocation location ) { for ( com.android.sdklib.devices.Camera c : mCameras ) { if ( location == ( c . getLocation () ) ) { return c ; } } return null ; }
public static boolean LessThan ( int x , int y ) { return x < y ? true : false ; }
@ java.lang.Override protected synchronized void onPostExecute ( android.os.Bundle bundle ) { if ( bundle != null ) { com.android.tv.tuner.TunerPreferences.sPreferenceValues . putAll ( bundle ) ; } }
public void test_getOrDefault () { libcore.java.util.MapDefaultMethodTester . test_getOrDefault ( new java.util.HashMap <> () , true , true , true ) ; }
@ java.lang.Override public void dispose () { super . dispose () ; if ( ( image ) != null ) { image . dispose () ; } crosshairColor . dispose () ; borderColor . dispose () ; paddingColor . dispose () ; }
@ org.junit.Test public void testDefaultDisconnectedState () { org.junit.Assert . assertEquals ( BluetoothProfile.STATE_DISCONNECTED , mHeadsetStateMachine . getConnectionState () ) ; org.junit.Assert . assertThat ( mHeadsetStateMachine . getCurrentState () , org.hamcrest.core.IsInstanceOf . instanceOf ( HeadsetStateMachine.Disconnected . class ) ) ; }
@ java.lang.Override public void report ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { if ( mDriver . isSuppressed ( this , issue , mCompilationUnit ) ) { return; } super . report ( issue , location , message ) ; }
public void delete ( ) throws java.io.IOException { if ( ( java.net.ResponseCache . getDefault () ) == ( this ) ) { java.net.ResponseCache . setDefault ( null ) ; } delegate . delete () ; }
@ java.lang.Override public void disconnect () { if ( com.android.bluetooth.pbap.BluetoothPbapService.DEBUG ) { android.util.Log . d ( com.android.bluetooth.pbap.BluetoothPbapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.pbap.BluetoothPbapService service = getService ( com.android.bluetooth.pbap.BluetoothPbapService.BLUETOOTH_ADMIN_PERM ) ; if ( service == null ) { return; } service . disconnect () ; }
@ java.lang.Override public void cleanUp ( com.android.tradefed.build.IBuildInfo info ) { info . cleanUp () ; }
@ java.lang.Override public void testRunFailed ( java.lang.String errorMessage ) { mRunResult . testRunFailed ( errorMessage ) ; }
public void testIsEmpty () { assertTrue ( jsr166.CopyOnWriteArraySetTest . populatedSet ( NUMBER_CONSTANT ) . isEmpty () ) ; assertFalse ( jsr166.CopyOnWriteArraySetTest . populatedSet ( NUMBER_CONSTANT ) . isEmpty () ) ; }
public void testExtractDecodeEditEncodeMuxAudioVideo ( ) throws java.lang.Throwable { if ( ! ( setSize ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) ) return; setSource ( R.raw.video_480x360_mp4_h264_500kbps_30fps_aac_stereo_128kbps_44100hz ) ; setCopyAudio () ; setCopyVideo () ; setVerifyAudioFormat () ; android.media.cts.ExtractDecodeEditEncodeMuxTest.TestWrapper . runTest ( this ) ; }
public static android.support.v8.renderscript.RenderScript create ( android.content.Context ctx , android.support.v8.renderscript.RenderScript.ContextType ct , int flags ) { int v = ctx . getApplicationInfo () . targetSdkVersion ; return android.support.v8.renderscript.RenderScript . create ( ctx , v , ct , flags ) ; }
@ java.lang.Override public java.net.ServerSocket createServerSocket ( ) throws java.io.IOException { return throwException () ; }
@ java.lang.Override public java.lang.Boolean getPackageBuildConfig () { return true ; }
java.net.InetAddress [] lookupAllHostAddr ( java.lang.String hostname , int netId ) throws java.net.UnknownHostException ;
@ com.android.annotations.NonNull @ java.lang.Override public com.android.tools.lint.TypeDescriptor getArgumentType ( int index ) { org.eclipse.jdt.internal.compiler.lookup.TypeBinding parameterType = mBinding.parameters [ index ] ; com.android.tools.lint.TypeDescriptor typeDescriptor = getTypeDescriptor ( parameterType ) ; assert typeDescriptor != null ; return typeDescriptor ; }
@ java.lang.Override public void err ( @ com.android.annotations.Nullable java.lang.String line ) { filterStdErr ( line ) ; }
public void visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session , @ javax.annotation.Nonnull com.android.sched.transform.TransformRequest transformRequest ) throws java.lang.Exception { visit ( ( ( com.android.jack.ir.ast.JNode ) ( session ) ) , transformRequest ) ; }
@ java.lang.Override @ com.android.annotations.Nullable public java.util.List < java.lang.String > getApplicableCallNames () { return java.util.Arrays . asList ( com.android.tools.lint.checks.CleanupDetector.RECYCLE , com.android.tools.lint.checks.CleanupDetector.OBTAIN_STYLED_ATTRIBUTES , com.android.tools.lint.checks.CleanupDetector.OBTAIN , com.android.tools.lint.checks.CleanupDetector.OBTAIN_ATTRIBUTES , com.android.tools.lint.checks.CleanupDetector.OBTAIN_TYPED_ARRAY , com.android.tools.lint.checks.CleanupDetector.OBTAIN_NO_HISTORY , com.android.tools.lint.checks.CleanupDetector.BEGIN_TRANSACTION , com.android.tools.lint.checks.CleanupDetector.COMMIT , com.android.tools.lint.checks.CleanupDetector.COMMIT_ALLOWING_LOSS ) ; }
@ org.junit.Test public void testDataPathInitiatorMacTokenSuccess ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( false , true , true , true , false ) ; }
public static java.io.File getIniFile ( java.lang.String name ) throws com.android.prefs.AndroidLocation.AndroidLocationException { java.lang.String avdRoot = com.android.sdklib.internal.avd.AvdManager . getBaseAvdFolder () ; return new java.io.File ( avdRoot , ( name + ( com.android.sdklib.internal.avd.AvdManager.INI_EXTENSION ) ) ) ; }
public void testPutIfAbsent2_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . putIfAbsent ( STRING_CONSTANT , null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public java.lang.String toUpperCase ( java.util.Locale locale ) { return java.lang.CaseMapper . toUpperCase ( locale , this , length () ) ; }
void openRead ( com.android.tv.tuner.exoplayer.buffer.SampleChunk chunk , long offset ) throws java.io.IOException { if ( ( mChunk ) != null ) { mChunk . closeRead () ; } chunk . openRead () ; reset ( chunk , offset ) ; }
public int createSapsRecord ( java.lang.String serviceName , int rfcommChannel , int version ) { if ( ! ( com.android.bluetooth.sdp.SdpManager.sNativeAvailable ) ) { throw new java.lang.RuntimeException ( ( ( com.android.bluetooth.sdp.SdpManager.TAG ) + STRING_CONSTANT ) ) ; } return sdpCreateSapsRecordNative ( serviceName , rfcommChannel , version ) ; }
public static float FloatSubtraction () { float a ; float b ; float c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a - b ; return c ; }
protected static void applyTransformBidirectionally ( android.net.IpSecManager ism , android.net.IpSecTransform transform , android.net.cts.IpSecBaseTest.GenericSocket socket ) throws java.lang.Exception { for ( int direction : android.net.cts.IpSecBaseTest.DIRECTIONS ) { socket . applyTransportModeTransform ( ism , direction , transform ) ; } }
private com.google.devtools.common.options.OptionsParser.OptionUsageRestrictions optionUsageRestrictions () { return field . getAnnotation ( com.google.devtools.common.options.Option . class ) . optionUsageRestrictions () ; }
@ org.junit.Test public void testDataPathInitiatorDirectMacTokenSuccess ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( true , true , true , true , false ) ; }
public void setNpnProtocols ( byte [] npnProtocols ) {}
@ java.lang.Override public void error ( java.lang.String tag , java.lang.String message , java.lang.Throwable throwable , java.lang.Object data ) { com.android.ide.eclipse.adt.AdtPlugin . log ( throwable , message ) ; }
public void put ( com.android.jack.dx.rop.annotation.NameValuePair pair ) { assert pair != null ; throwIfImmutable () ; elements . put ( pair . getName () , pair ) ; }
@ com.android.annotations.NonNull com.android.ddmlib.Device [] getDevices () { return mDevices . toArray ( new com.android.ddmlib.Device [ NUMBER_CONSTANT ] ) ; }
@ java.lang.Override public void ignore ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { throw new java.lang.UnsupportedOperationException ( STRING_CONSTANT ) ; }
public void testConstructor2NPE () { try { int [] a = null ; new java.util.concurrent.atomic.AtomicIntegerArray ( a ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void visitStackMapAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.CodeAttribute codeAttribute , proguard.classfile.attribute.visitor.StackMapAttribute stackMapAttribute ) { if ( ( stackMapAttribute.u2stackMapFramesCount ) > NUMBER_CONSTANT ) { attributeVisitor . visitStackMapAttribute ( clazz , method , codeAttribute , stackMapAttribute ) ; } }
public void setPreamble ( java.lang.String preamble ) throws com.android.voicemail.impl.mail.MessagingException { this . preamble = preamble ; }
public boolean getRecordsLoaded () { return ( ( mRecordsToLoad ) == NUMBER_CONSTANT ) && ( mRecordsRequested ) ; }
@ java.lang.Override public void end ( ) throws com.android.ide.common.res2.ConsumerException { try { postWriteAction () ; getExecutor () . waitForTasksWithQuickFail ( true ) ; } catch ( com.android.ide.common.res2.ConsumerException e ) { throw e ; } catch ( java.lang.Exception e ) { throw new com.android.ide.common.res2.ConsumerException ( e ) ; } }
public void removeAuthority ( android.accounts.Account account , int userId , java.lang.String authority ) { synchronized ( mAuthorities ) { removeAuthorityLocked ( account , userId , authority , true ) ; } }
public boolean inConference () { return ( ( mAdded ) && ( mCurrentCall . isMultiParty () ) ) && ( ( getState () ) != ( android.telecom.Connection.STATE_DISCONNECTED ) ) ; }
private void trace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JFieldId fid , @ javax.annotation.Nonnull com.android.jack.ir.ast.JClassOrInterface receiverType ) { trace ( receiverType ) ; com.android.jack.ir.ast.JField field = fid . getField () ; if ( field != null ) { trace ( field ) ; } }
@ java.lang.Override public void onSetProtocol ( android.bluetooth.BluetoothDevice device , byte protocol ) { mCallback . onSetProtocol ( device , protocol ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JPhantomClassOrInterface node ) { if ( ( node . getMarker ( com.android.jack.frontend.VirtualMethodsMarker . class ) ) == null ) { ensureHierarchyVisited ( node ) ; } return false ; }
public static com.android.cts.verifier.TestListAdapter.TestListItem newCategory ( java.lang.String title ) { return new com.android.cts.verifier.TestListAdapter.TestListItem ( title , null , null ) ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.lang.Object getValue () { return getConstantValue ( mBinding . constant () ) ; }
private static java.util.List < java.io.File > splitLibraryPath ( java.lang.String path ) { return dalvik.system.DexPathList . splitPaths ( path , java.lang.System . getProperty ( STRING_CONSTANT ) , true ) ; }
@ java.lang.Override public java.lang.String toString () { synchronized ( mDcListAll ) { return ( ( STRING_CONSTANT + ( mDcListAll ) ) + STRING_CONSTANT ) + ( mDcListActiveByCid ) ; } }
public void run () { vibrate () ; android.os.SystemClock . sleep ( NUMBER_CONSTANT ) ; android.util.Log . d ( com.android.systemui.statusbar.phone.PhoneStatusBar.TAG , STRING_CONSTANT ) ; android.os.Debug . startMethodTracing ( STRING_CONSTANT ) ; mHandler . postDelayed ( mStopTracing , NUMBER_CONSTANT ) ; }
public abstract void removeSessionCookies ( android.webkit.ValueCallback < java.lang.Boolean > callback ) ;
public android.content.pm.ResolveInfo resolveInfoForPosition ( int position ) { return mList . get ( position ) . ri ; }
public com.google.common.base.Objects.ToStringHelper add ( java.lang.String name , @ javax.annotation.Nullable java.lang.Object value ) { return addHolder ( name , value ) ; }
synchronized void nScriptInvokeV ( long id , int slot , byte [] params ) { validate () ; rsnScriptInvokeV ( mContext , id , slot , params ) ; }
public void setCleartextTrafficPermitted ( boolean permitted ) { mCleartextTrafficPermitted = permitted ; }
public static final javax.crypto.Cipher getInstance ( java.lang.String transformation , java.security.Provider provider ) throws java.security.NoSuchAlgorithmException , javax.crypto.NoSuchPaddingException { if ( provider == null ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } return javax.crypto.Cipher . getCipher ( transformation , provider ) ; }
@ java.lang.Override public int hashCode () { return mDir . hashCode () ; }
public void test_getInstance_provider1 ( ) throws java.lang.Exception { test_getInstance ( NUMBER_CONSTANT ) ; }
public void setAdvertisePreferred ( boolean advertisePreferred ) { mAdvertisePreferred = advertisePreferred ; }
@ java.lang.Override public boolean canBeForceHidden ( com.android.internal.policy.impl.WindowState win , android.view.WindowManager.LayoutParams attrs ) { switch ( attrs.type ) { case TYPE_STATUS_BAR : case TYPE_NAVIGATION_BAR : case TYPE_WALLPAPER : case TYPE_DREAM : case TYPE_UNIVERSE_BACKGROUND : case TYPE_KEYGUARD_SCRIM : return false ; default: return true ; } }
@ org.junit.After public void cleanup () { validateMockitoUsage () ; }
public long timeMinL ( int reps ) { long result = l ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . min ( l , l ) ; } return result ; }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { android.graphics.Typeface . nativeUnref ( native_instance ) ; native_instance = NUMBER_CONSTANT ; } finally { super . finalize () ; } }
public static < T > org.hamcrest.core.AnyOf < T > anyOf ( java.lang.Iterable < org.hamcrest.Matcher < ? super T > > matchers ) { return new org.hamcrest.core.AnyOf ( matchers ) ; }
@ java.lang.Override public void sendUssd ( java.lang.String ussdMessage ) { this . sendUssd ( ussdMessage ) ; }
private java.io.OutputStream createOutputStream ( java.io.ByteArrayOutputStream bytes , javax.crypto.Cipher cipher , boolean useBc ) { return useBc ? ( ( java.io.OutputStream ) ( new javax.crypto.CipherOutputStream ( bytes , cipher ) ) ) : ( ( java.io.OutputStream ) ( new javax.crypto.CipherOutputStream ( bytes , cipher ) ) ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void removePasspointConfig ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) java.lang.String fqdn ) { mWifi . removePasspointConfiguration ( fqdn ) ; }
@ java.lang.Override public android.bluetooth.BluetoothCodecStatus getCodecStatus ( android.bluetooth.BluetoothDevice device ) { return mService . getCodecStatus ( device ) ; }
public long getSize ( com.android.ahat.heapdump.Site element , com.android.ahat.heapdump.AhatHeap heap ) { return element . getSize ( heap ) . getSize () ; }
public abstract java.lang.String getUrl ( ) ;
@ java.lang.Override public void free () { if ( ( address ) != NUMBER_CONSTANT ) { try { Libcore.os . munmap ( address , size ) ; } catch ( android.system.ErrnoException errnoException ) { throw new java.lang.AssertionError ( errnoException ) ; } } super . free () ; }
private native java.lang.String getInnerClassName ( ) ;
@ java.lang.Override public void onSSLStateChange ( int type , int val ) { throw new java.lang.AssertionError ( STRING_CONSTANT ) ; }
public void info ( java.lang.String msg ) { log ( java.util.logging.Level.INFO , msg ) ; }
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . args ) { java.lang.System.out . println ( java.lang.String . format ( msgFormat , args ) ) ; }
void putBigEndianTwosComplement ( byte [] a ) { this . makeValid () ; java.math.NativeBN . twosComp2bn ( a , a.length , this . bignum ) ; }
private void setupSources () { mUpdaterData . setupDefaultSources () ; }
public java.lang.Object deleteChild ( java.lang.Object t , int i ) { return adaptor . deleteChild ( t , i ) ; }
native boolean convolveTest ( java.lang.String path , int X , int Y , byte [] input , byte [] output , float [] coeffs , boolean is3x3 ) ;
public java.lang.String getIdentity () { return getFieldValue ( android.net.wifi.WifiEnterpriseConfig.IDENTITY_KEY ) ; }
@ java.lang.Override public com.android.dx.dex.file.ClassDefItem call () { com.android.dx.dex.file.ClassDefItem clazz = translateClass ( bytes , classFile ) ; return clazz ; }
@ javax.annotation.Nonnull public final java.util.List < com.android.jack.test.runtime.RuntimeTestInfo > getRuntimeTestInfos () { if ( ( rtTestInfos ) == null ) { rtTestInfos = new java.util.ArrayList < com.android.jack.test.runtime.RuntimeTestInfo > () ; fillRtTestInfos () ; } assert ( rtTestInfos ) != null ; return rtTestInfos ; }
@ java.lang.Override protected void addGroups ( android.database.Cursor cursor ) { mCallLogGroupBuilder . addGroups ( cursor ) ; }
@ java.lang.Override public final double getDouble () { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getDouble ( ix ( nextGetIndex ( SizeOf.DOUBLE ) ) ) ; }
private android.webkit.BrowserFrame createWindow ( boolean dialog , boolean userGesture ) { return mCallbackProxy . createWindow ( dialog , userGesture ) ; }
void setEchoSuppressionEnabled ( ) ;
@ java.lang.Override protected void visitPrimitive ( int type , int arg , int size ) { constantValue = com.android.jack.tools.merger.MergerTools . createConstant ( in , type , arg ) ; }
@ java.lang.Override public boolean containsValue ( @ javax.annotation.Nullable java.lang.Object value ) { return ( value != null ) && ( super . containsValue ( value ) ) ; }
public abstract boolean getDatabaseEnabled ( ) ;
@ com.android.sched.util.findbugs.SuppressFBWarnings ( value = STRING_CONSTANT ) @ javax.annotation.Nonnull public final java.lang.reflect.Constructor < > getJayceReaderConstructor ( ) throws com.android.jack.library.LibraryFormatException { ensureJayceLoaded () ; assert ( jayceReaderConstructor ) != null ; return jayceReaderConstructor ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < java.lang.Void > onSuccessfulFill () { return com.google.common.util.concurrent.Futures . immediateFuture ( null ) ; }
native boolean colorMatrixTest ( java.lang.String path , int X , int Y , byte [] input , byte [] output , float [] coeffs , int optionFlag ) ;
public static void computeNativeAsinh ( android.renderscript.cts.TestNativeAsinh.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( android.renderscript.cts.CoreMathVerifier.NATIVE_PRECISION , android.renderscript.cts.CoreMathVerifier.NATIVE_PRECISION , true ) ; args.out = android.renderscript.cts.CoreMathVerifier . asinh ( args.inV , t ) ; }
public void cancel () { mIsCanceled . set ( true ) ; }
protected final org.bouncycastle.math.ec.ECFieldElement getRawYCoord () { return y ; }
public void setCallAudioState ( android.telecom.CallAudioState state ) { try { if ( mConnected ) { mConnectionService . onCallAudioStateChanged ( mConnectionId , state , null ) ; } } catch ( android.os.RemoteException ignored ) {} }
private void awaitRun ( tests.api.java.util.TimerTest.TimerTestTask task ) throws java.lang.Exception { while ( ( task . wasRun () ) == NUMBER_CONSTANT ) { java.lang.Thread . sleep ( NUMBER_CONSTANT ) ; } }
boolean isBluetoothEnabled () { boolean ret = false ; android.bluetooth.BluetoothAdapter adapter = android.bluetooth.BluetoothAdapter . getDefaultAdapter () ; if ( ( adapter != null ) && ( adapter . isEnabled () ) ) { ret = true ; } return ret ; }
@ java.lang.Override public final boolean equals ( java.lang.Object object ) { return object == ( this ) ; }
private static void appendValue ( java.lang.StringBuilder sb , java.lang.String item , boolean valid , long value ) { sb . append ( item ) . append ( CHAR_CONS ) ; if ( valid ) { sb . append ( value ) ; } else { sb . append ( CHAR_CONS ) ; } }
public void testReplaceValue_NullPointerException () { java.util.concurrent.ConcurrentSkipListMap c = jsr166.ConcurrentSkipListMapTest . map5 () ; try { c . replace ( null , one , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static java.lang.String nativeToString ( long native_region ) { android.graphics.Region_Delegate region = android.graphics.Region_Delegate.sManager . getDelegate ( native_region ) ; if ( region == null ) { return STRING_CONSTANT ; } return region.mArea . toString () ; }
public void run () { mNM . notify ( NUMBER_CONSTANT , notificationWithNumbers ( NUMBER_CONSTANT ) ) ; }
public void testConstructor4 () { try { jsr166.DelayQueueTest.PDelay [] ints = new jsr166.DelayQueueTest.PDelay [ SIZE ] ; new java.util.concurrent.DelayQueue ( java.util.Arrays . asList ( ints ) ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public boolean simAuthFailedResponse ( int id ) { return mSupplicantStaIfaceHal . sendCurrentNetworkEapSimGsmAuthFailure () ; }
private com.android.ide.common.layout.grid.GridModel getGrid ( com.android.ide.common.layout.ResizeState resizeState ) { com.android.ide.common.layout.grid.GridModel grid = ( ( com.android.ide.common.layout.grid.GridModel ) ( resizeState.clientData ) ) ; if ( grid == null ) { grid = com.android.ide.common.layout.grid.GridModel . get ( mRulesEngine , resizeState.layout , resizeState.layoutView ) ; resizeState.clientData = grid ; } return grid ; }
public com.android.sched.vfs.VPath appendPath ( @ javax.annotation.Nonnull com.android.sched.vfs.VPath path ) { pathFragments . add ( new com.android.sched.vfs.VPath.VPathFragment ( java.lang.String . valueOf ( com.android.sched.vfs.VPath.INTERNAL_SEPARATOR ) , com.android.sched.vfs.VPath.INTERNAL_SEPARATOR ) ) ; pathFragments . addAll ( path . getPathFragments () ) ; return this ; }
@ java.lang.Override public javax.net.ssl.SSLSession getSession () { if ( ( sslSession ) == null ) { try { waitForHandshake () ; } catch ( java.io.IOException e ) { return org.conscrypt.SSLNullSession . getNullSession () ; } } return sslSession ; }
@ android.test.suitebuilder.annotation.MediumTest @ org.junit.Test public void testProcessChldTypeReleaseHeldHold ( ) throws java.lang.Exception { com.android.server.telecom.Call onHoldCall = createHeldCall () ; boolean didProcess = mBluetoothPhoneService.mBinder . processChld ( com.android.server.telecom.tests.BluetoothPhoneServiceTest.CHLD_TYPE_RELEASEHELD ) ; org.mockito.Mockito . verify ( mMockCallsManager ) . disconnectCall ( org.mockito.Matchers . eq ( onHoldCall ) ) ; org.junit.Assert . assertEquals ( didProcess , true ) ; }
synchronized void nAllocationData1D ( long id , int off , int mip , int count , float [] d , int sizeBytes ) { validate () ; rsnAllocationData1D ( mContext , id , off , mip , count , d , sizeBytes ) ; }
private static boolean isModelOlderThan011 ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context ) { return com.android.tools.lint.detector.api.LintUtils . isModelOlderThan ( context . getProject () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public static float FloatRemainder () { float a ; float b ; float c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a % b ; return c ; }
@ javax.annotation.Nonnull com.android.jack.dx.rop.code.RegisterSpec getOrCreateRegisterSpec ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JParameter parameter ) { return getRegisterSpec ( getRegisterNumber ( parameter ) , parameter , null ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static int nativeWidth ( long nativeBitmap ) { android.graphics.Bitmap_Delegate delegate = android.graphics.Bitmap_Delegate.sManager . getDelegate ( nativeBitmap ) ; if ( delegate == null ) { return NUMBER_CONSTANT ; } return delegate.mImage . getWidth () ; }
protected native void datagramSocketClose ( ) ;
public void run () { synchronized ( this ) { if ( ( grid ) != null ) { grid . dispose () ; grid = null ; zoom = model . getZoom () ; } } }
@ java.lang.Override public com.android.jack.dx.io.instructions.DecodedInstruction withIndex ( int newFirstIndex , int newSecondIndex ) { return new com.android.jack.dx.io.instructions.ZeroRegisterDecodedInstruction ( getFormat () , getOpcode () , newFirstIndex , getFirstIndexType () , getTarget () , getLiteral () , newSecondIndex , getSecondIndexType () ) ; }
private static < T > void assertEmpty ( T [] ts ) { int length = ts.length ; org.junit.Assert . assertEquals ( ( STRING_CONSTANT + length ) , NUMBER_CONSTANT , length ) ; }
public com.android.volley.toolbox.ImageLoader.ImageContainer get ( java.lang.String requestUrl , final com.android.volley.toolbox.ImageLoader.ImageListener listener ) { return get ( requestUrl , listener , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
protected void nestedStatementPush ( com.android.jack.ir.ast.JStatement statement ) { if ( ! ( statement instanceof com.android.jack.ir.ast.JBlock ) ) { indentIn () ; newline () ; } else { space () ; } }
public static native void setTag ( java.lang.Object o , long tag ) ;
public void testfdimF32 () { android.renderscript.cts.ScriptField_fdim_f32_input floatArray = new android.renderscript.cts.ScriptField_fdim_f32_input ( mRS , INPUTSIZE ) ; mIn = floatArray . getAllocation () ; doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ com.android.internal.annotations.VisibleForTesting boolean hasPermission ( android.content.pm.PackageInfo app , java.lang.String permission ) { if ( ( app.requestedPermissions ) != null ) { for ( java.lang.String p : app.requestedPermissions ) { if ( permission . equals ( p ) ) { return true ; } } } return false ; }
protected final java.lang.Object getContent ( @ org.jetbrains.annotations.NotNull com.intellij.designer.DesignerEditorPanelFacade designer ) { com.intellij.designer.LightToolWindow toolWindow = ( ( com.intellij.designer.LightToolWindow ) ( designer . getClientProperty ( getComponentName () ) ) ) ; assert toolWindow != null ; return toolWindow . getContent () ; }
final void releaseTheme ( long theme ) { synchronized ( this ) { deleteTheme ( theme ) ; decRefsLocked ( theme ) ; } }
@ java.lang.Override public int getDSTSavings () { return mDstSavings ; }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( com.ibm.icu.impl.UResource.Key key ) { period = com.ibm.icu.impl.DayPeriodRules.DayPeriod . fromStringOrNull ( key ) ; if ( ( period ) == null ) { throw new com.ibm.icu.util.ICUException ( STRING_CONSTANT ) ; } return periodSink ; }
public static long UShrLongInt () { long lhs = - NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs > > > rhs ; }
@ java.lang.Override public boolean setFocus () { return canvas . setFocus () ; }
public com.android.layoutlib.api.SceneResult getResult () { assert ( this ) != ( com.android.layoutlib.api.SceneResult.SceneStatus.ERROR_UNKNOWN ) ; return new com.android.layoutlib.api.SceneResult ( this ) ; }
synchronized void nAllocationData1D ( long id , int off , int mip , int count , java.lang.Object d , int sizeBytes , android.renderscript.Element.DataType dt ) { validate () ; rsnAllocationData1D ( mContext , id , off , mip , count , d , sizeBytes , dt.mID ) ; }
private static boolean isIncoming ( com.android.incallui.incall.protocol.PrimaryCallState state ) { return ( ( state . state () ) == ( com.android.incallui.call.DialerCall.State.INCOMING ) ) || ( ( state . state () ) == ( com.android.incallui.call.DialerCall.State.CALL_WAITING ) ) ; }
public void Test04 () {}
@ java.lang.Override public long beforeHandshake ( long context ) throws javax.net.ssl.SSLException { org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_CTX_enable_npn ( context ) ; return super . beforeHandshake ( context ) ; }
public int insert ( java.lang.String name , byte [] item , int uid ) throws android.os.RemoteException ;
synchronized boolean setBondState ( java.lang.String address , int state , int reason ) { mBondState . setBondState ( address . toUpperCase () , state , reason ) ; return true ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void telephonySetNetworkSelectionModeAutomaticForSubscription ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) java.lang.Integer subId ) { mTelephonyManager . setNetworkSelectionModeAutomatic () ; }
@ java.lang.Override public int queryCapabilityStatus ( ) throws android.os.RemoteException { return this . queryCapabilityStatus () . mCapabilities ; }
void onSSLStateChange ( int type , int val ) ;
final byte getByte ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getByte ( ( offset + ( address ) ) ) ; }
@ android.support.annotation.MainThread void registerContentObservers ( android.content.Context appContext ) ;
public static synchronized void release ( android.content.Context context ) { if ( ( com.android.tv.tuner.TunerPreferences . useContentProvider ( context ) ) && ( ( com.android.tv.tuner.TunerPreferences.sContentObserver ) != null ) ) { context . getContentResolver () . unregisterContentObserver ( com.android.tv.tuner.TunerPreferences.sContentObserver ) ; } }
@ org.junit.Test public void testField () { org.apache.harmony.crypto.tests.javax.crypto.interfaces.DHPublicKeyTest.checkDHPublicKey key = new org.apache.harmony.crypto.tests.javax.crypto.interfaces.DHPublicKeyTest.checkDHPublicKey () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , key . getSerVerUID () , ( - NUMBER_CONSTANT ) ) ; }
private void notifyCharacteristicReadRequest () { if ( com.android.cts.verifier.bluetooth.BleServerService.DEBUG ) android.util.Log . d ( com.android.cts.verifier.bluetooth.BleServerService.TAG , STRING_CONSTANT ) ; android.content.Intent intent = new android.content.Intent ( com.android.cts.verifier.bluetooth.BleServerService.BLE_CHARACTERISTIC_READ_REQUEST ) ; sendBroadcast ( intent ) ; }
@ org.junit.Test public void testConnectWithDisconnectAndSingleExistingNetwork ( ) throws java.lang.Exception { executeAndValidateInitializationSequence () ; executeAndValidateConnectSequence ( NUMBER_CONSTANT , false , true ) ; }
public static void computeExp10 ( android.renderscript.cts.TestExp10.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . exp10 ( args.inV , t ) ; }
protected void finalize ( ) throws java.lang.Throwable { try { close () ; } finally { super . finalize () ; } }
public static sun.security.util.Debug getInstance ( java.lang.String option , java.lang.String prefix ) { if ( sun.security.util.Debug . isOn ( option ) ) { sun.security.util.Debug d = new sun.security.util.Debug ( prefix ) ; return d ; } else { return null ; } }
@ java.lang.Override public void run () { addDeviceMenuListener ( mDeviceCombo ) ; }
public void testStrings ( ) throws java.lang.Exception { checkExpression ( null , STRING_CONSTANT ) ; checkExpression ( STRING_CONSTANT , STRING_CONSTANT ) ; checkExpression ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ org.junit.Test public void testCameraImageCaptureAndRendering ( ) throws java.lang.Exception { android.graphics.cts.CameraGpuCtsActivity activity = mActivityRule . launchActivity ( null ) ; activity . waitToFinishRendering () ; activity . finish () ; }
public int indexOfKey ( long key ) { if ( mGarbage ) { gc () ; } return com.android.layoutlib.bridge.util.SparseWeakArray . binarySearch ( mKeys , NUMBER_CONSTANT , mSize , key ) ; }
public byte [] getxattr ( java.lang.String path , java.lang.String name ) throws android.system.ErrnoException ;
@ java.lang.Override protected void onDetachedFromWindow () { super . onDetachedFromWindow () ; if ( ( mRS ) != null ) { mRS = null ; destroyRenderScriptGL () ; } }
synchronized void nScriptSetVarF ( long id , int slot , float val ) { validate () ; rsnScriptSetVarF ( mContext , id , slot , val ) ; }
@ java.lang.Override public void enter () { super . enter () ; setSpeakerphoneOn ( false ) ; setBluetoothOn ( false ) ; android.telecom.CallAudioState newState = new android.telecom.CallAudioState ( mIsMuted , com.android.server.telecom.CallAudioRouteStateMachine.ROUTE_WIRED_HEADSET , mAvailableRoutes ) ; setSystemAudioState ( newState , true ) ; updateInternalCallAudioState () ; }
public void copyTo ( float [] d ) { validateIsFloat32 () ; copyTo ( d , Element.DataType.FLOAT_32 , d.length ) ; }
@ java.lang.Override public void onPeriodChanged ( int periodInMs ) {}
private void run ( @ javax.annotation.Nonnull com.android.jack.test.runtime.RuntimeTestInfo rti ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( rti ) . setSourceLevel ( SourceLevel.JAVA_8 ) . addIgnoredCandidateToolchain ( com.android.jack.test.toolchain.JackApiV01 . class ) . compileAndRunTest () ; }
void start ( java.lang.String outcomeName ) ;
@ java.lang.Override public java.lang.String getClientName ( int pid ) { return mClientInfo . get ( pid ) ; }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onServicesDiscovered ( this , status ) ; } }
public static android.content.SyncStatusInfo getSyncStatus ( android.accounts.Account account , java.lang.String authority ) { try { return android.content.ContentResolver . getContentService () . getSyncStatus ( account , authority , null ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public void error ( org.xml.sax.SAXParseException e ) { validationError ( e . getMessage () ) ; }
public static void sort ( java.lang.Object [] a ) { if ( java.util.Arrays.LegacyMergeSort.userRequested ) java.util.Arrays . legacyMergeSort ( a ) ; else java.util.ComparableTimSort . sort ( a , NUMBER_CONSTANT , a.length , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static long native_initWithPaint ( long paint ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( paint ) ; if ( delegate == null ) { return NUMBER_CONSTANT ; } android.graphics.Paint_Delegate newDelegate = new android.graphics.Paint_Delegate ( delegate ) ; return android.graphics.Paint_Delegate.sManager . addNewDelegate ( newDelegate ) ; }
public static java.util.Locale getDefault () { if ( ( java.util.Locale.defaultLocale ) == null ) { java.util.Locale.defaultLocale = java.util.Locale . initDefault () ; } return java.util.Locale.defaultLocale ; }
@ java.lang.Override public VT setValue ( VT value ) { checkEntryStatus () ; return enumMap . put ( enumMap.keys [ ordinal ] , value ) ; }
@ java.lang.Override public java.lang.Iterable < java.lang.String > getCppFlags () { return getCFlags () ; }
public static void sort ( short [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public static int ShlIntLong () { int lhs = NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs < < rhs ; }
public void postDialContinue ( boolean proceed ) { try { if ( mConnected ) { mConnectionService . onPostDialContinue ( mConnectionId , proceed , null ) ; } } catch ( android.os.RemoteException ignored ) {} }
public void warning ( java.lang.String tag , java.lang.String message , java.lang.Object data ) {}
final void putInt ( int offset , int value ) { sun.nio.ch.NativeObject.unsafe . putInt ( ( offset + ( address ) ) , value ) ; }
public static native void BN_generate_prime_ex ( long ret , int bits , boolean safe , long add , long rem ) ;
public java.lang.String [] saw ( java.lang.String prefix ) { try { return mBinder . saw ( prefix , ( - NUMBER_CONSTANT ) ) ; } catch ( android.os.RemoteException e ) { android.util.Log . w ( android.security.KeyStore.TAG , STRING_CONSTANT , e ) ; return null ; } }
protected void handleNewUpstreamNetworkState ( android.net.NetworkState ns ) { mIPv6TetheringCoordinator . updateUpstreamNetworkState ( ns ) ; mOffloadController . setUpstreamLinkProperties ( ( ns != null ? ns.linkProperties : null ) ) ; }
@ java.lang.Override public void customSmsDismissed () { com.android.dialer.common.LogUtil . i ( STRING_CONSTANT , null ) ; createCustomSmsDialogFragment = null ; }
@ java.lang.Override public void enter () { infoLog ( STRING_CONSTANT ) ; com.android.bluetooth.btservice.AdapterService adapterService = mAdapterService ; if ( adapterService == null ) { errorLog ( STRING_CONSTANT ) ; return; } adapterService . updateUuids () ; }
public abstract java.lang.String getCookie ( java.lang.String url ) ;
synchronized void nAllocationResize2D ( long id , int dimX , int dimY ) { validate () ; rsnAllocationResize2D ( mContext , id , dimX , dimY ) ; }
public static void promptToLogIn ( ) throws com.google.gct.login.InvalidThreadTypeException { com.google.gct.login.GoogleLogin . promptToLogIn ( null , null ) ; }
abstract void putShortUnchecked ( int index , short value ) ;
@ java.lang.Override public boolean needsSequentialWriting () { return baseVFS . needsSequentialWriting () ; }
public void testVersion16 () { android.renderscript.cts.ScriptC_set_target_api_16 test16 = new android.renderscript.cts.ScriptC_set_target_api_16 ( mRS ) ; test16 . invoke_check ( NUMBER_CONSTANT ) ; waitForMessage () ; checkForErrors () ; }
private void turnOnIms ( ) throws com.android.ims.ImsException { checkAndThrowExceptionIfServiceUnavailable () ; try { mImsServiceProxy . turnOnIms () ; } catch ( android.os.RemoteException e ) { throw new com.android.ims.ImsException ( STRING_CONSTANT , e , ImsReasonInfo.CODE_LOCAL_IMS_SERVICE_DOWN ) ; } }
private void processAudioConfigEvent ( android.bluetooth.BluetoothDevice device , android.bluetooth.BluetoothAudioConfig audioConfig ) { log ( ( STRING_CONSTANT + device ) ) ; mAudioConfigs . put ( device , audioConfig ) ; broadcastAudioConfig ( device , audioConfig ) ; }
public void notifyDisconnectCause ( int cause , int preciseCause ) { try { mRegistry . notifyDisconnectCause ( cause , preciseCause ) ; } catch ( android.os.RemoteException ex ) {} }
public void reset ( int i ) { if ( ( i < NUMBER_CONSTANT ) || ( i > ( mLen ) ) ) { throw new android.renderscript.RSIllegalArgumentException ( ( STRING_CONSTANT + i ) ) ; } mPos = i ; }
public static java.lang.String toString ( @ android.security.KeyStoreKeyConstraints.PaddingEnum int padding ) { switch ( padding ) { case android.security.KeyStoreKeyConstraints.Padding.NONE : return STRING_CONSTANT ; case android.security.KeyStoreKeyConstraints.Padding.PKCS7 : return STRING_CONSTANT ; default: throw new java.lang.IllegalArgumentException ( ( STRING_CONSTANT + padding ) ) ; } }
@ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { org.conscrypt.NativeCrypto . SSL_do_handshake ( org.conscrypt.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT , false ) ; }
public native void setInt ( java.lang.Object obj , int i ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
public void testRelease () { com.android.builder.BuildType type = new com.android.builder.BuildType ( STRING_CONSTANT ) ; assertFalse ( type . isDebuggable () ) ; assertFalse ( type . isDebugJniBuild () ) ; }
void unsljLogMore ( int response , java.lang.String more ) { riljLog ( ( ( ( STRING_CONSTANT + ( com.android.internal.telephony.RIL . responseToString ( response ) ) ) + STRING_CONSTANT ) + more ) ) ; }
public void initialize ( ) throws java.lang.Exception { this . socket = serverChannel . socket () ; socket . bind ( null ) ; }
public com.android.ahat.DocString render ( com.android.tools.perflib.heap.Instance element ) { return com.android.ahat.Value . render ( element ) ; }
@ java.lang.Override @ android.support.annotation.CallSuper public void onLost ( android.net.Network network ) { com.android.voicemail.impl.VvmLog . i ( com.android.voicemail.impl.sync.VvmNetworkRequestCallback.TAG , STRING_CONSTANT ) ; resultReceived = true ; onFailed ( com.android.voicemail.impl.sync.VvmNetworkRequestCallback.NETWORK_REQUEST_FAILED_LOST ) ; }
public void setValue ( java.lang.Object value ) { mValue = value ; if ( value instanceof com.android.tools.perflib.heap.Instance ) { ( ( com.android.tools.perflib.heap.Instance ) ( value ) ) . addReference ( null , instance ) ; } }
public static int abs ( int i ) { return i >= NUMBER_CONSTANT ? i : - i ; }
@ java.lang.Override public java.lang.String getId () { return id ; }
@ java.lang.Override public boolean canThrow () { return true ; }
public void testIsSupported_EmptyString () { try { java.nio.charset.Charset . isSupported ( STRING_CONSTANT ) ; fail () ; } catch ( java.lang.IllegalArgumentException expected ) {} }
native void rsnScriptGroupExecute ( long con , long group ) ;
static void printUnsupportedFlag ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.lang.String flag ) {}
public void run () { synchronized ( this ) { if ( ( grid ) != null ) { grid . dispose () ; grid = null ; } zoom = model . getZoom () ; } }
@ org.jetbrains.annotations.NotNull public static java.lang.String readString ( java.io.DataInput in ) throws java.io.IOException { return in . readUTF () ; }
synchronized long nContextCreate ( long dev , int ver , int sdkVer , int contextType ) { return rsnContextCreate ( dev , ver , sdkVer , contextType ) ; }
@ java.lang.Override public java.lang.String toString () { return print ( false ) ; }
@ org.junit.Test public void test001a ( ) throws java.lang.Exception { java.io.File jackOutput = com.android.jack.test.toolchain.AbstractTestTools . createTempDir () ; try { runTest001 ( jackOutput , null , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.backend.jayce.ImportConflictException e ) {} }
public void delete ( ) throws java.io.IOException { if ( ( java.net.ResponseCache . getDefault () ) == ( this . delegate ) ) { java.net.ResponseCache . setDefault ( null ) ; } delegate . delete () ; }
@ android.test.suitebuilder.annotation.MediumTest public void testText () { assertEquals ( STRING_CONSTANT , mTextView . getText () . toString () ) ; }
@ java.lang.Override protected void engineInitVerify ( java.security.PublicKey publicKey ) throws java.security.InvalidKeyException {}
public void test_remove () { s = new java.util.Scanner ( STRING_CONSTANT ) . useDelimiter ( STRING_CONSTANT ) ; try { s . remove () ; fail () ; } catch ( java.lang.UnsupportedOperationException expected ) {} }
public static java.lang.String getPackageName ( java.lang.String classFullName ) { int lastDot = classFullName . lastIndexOf ( CHAR_CONS ) ; return lastDot < NUMBER_CONSTANT ? STRING_CONSTANT : classFullName . substring ( NUMBER_CONSTANT , lastDot ) ; }
public android.telephony.mbms.DownloadRequest.Builder setSubscriptionId ( int subscriptionId ) { this . subscriptionId = subscriptionId ; return this ; }
@ java.lang.Override public com.android.internal.telephony.Connection dial ( java.lang.String dialString , com.android.internal.telephony.UUSInfo uusInfo , int videoState , android.os.Bundle intentExtras ) throws com.android.internal.telephony.CallStateException { return dialInternal ( dialString , videoState , intentExtras , null ) ; }
@ org.junit.Test public void test001_3WithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , new java.io.File ( com.android.jill.AnnotationTest.ANNOTATION001_PATH , STRING_CONSTANT ) , false ) ; }
public com.android.ims.internal.IImsCallSession getPendingCallSession ( int sessionId , java.lang.String callId ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . getPendingCallSession ( sessionId , callId ) ; } }
@ org.junit.Test public void test_SSL_CTX_free ( ) throws java.lang.Exception { org.conscrypt.NativeCrypto . SSL_CTX_free ( org.conscrypt.NativeCrypto . SSL_CTX_new () ) ; }
@ android.test.suitebuilder.annotation.MediumTest public void testAndroidStrings () { assertEquals ( STRING_CONSTANT , mLibTextView1 . getText () . toString () ) ; }
public static com.google.devtools.build.android.desugar.HeaderClassLoader fromClassPath ( java.util.List < java.nio.file.Path > classpath , java.lang.ClassLoader parent ) throws java.io.IOException { return new com.google.devtools.build.android.desugar.HeaderClassLoader ( com.google.devtools.build.android.desugar.HeaderClassLoader . indexJars ( classpath ) , parent ) ; }
public static java.lang.String getEndpointIdentificationAlgorithm ( javax.net.ssl.SSLParameters params ) { return params . getEndpointIdentificationAlgorithm () ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.OutputStream openWrite ( @ javax.annotation.Nonnull com.android.sched.vfs.DeflateFS.DeflateVFile file , boolean append ) throws com.android.sched.util.file.WrongPermissionException { return new java.util.zip.DeflaterOutputStream ( vfs . openWrite ( file . getWrappedFile () , append ) ) ; }
public static android.renderscript.RenderScript create ( android.content.Context ctx , android.renderscript.RenderScript.ContextType ct ) { return android.renderscript.RenderScript . create ( ctx , ct , android.renderscript.RenderScript.CREATE_FLAG_NONE ) ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { Main . doTest () ; }
synchronized void nProgramBindSampler ( long vpf , int slot , long s ) { validate () ; rsnProgramBindSampler ( mContext , vpf , slot , s ) ; }
public void setUiTTYMode ( int uiTtyMode , android.os.Message onComplete ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; getServiceInterface ( mBinder ) . setUiTTYMode ( uiTtyMode , onComplete ) ; } }
@ com.android.annotations.Nullable public org.eclipse.core.runtime.jobs.Job startLintJob () { org.eclipse.core.resources.IFile file = getInputFile () ; if ( file != null ) { return com.android.ide.eclipse.adt.internal.lint.EclipseLintRunner . startLint ( java.util.Collections . singletonList ( file ) , file , getStructuredDocument () , false , false ) ; } return null ; }
public int getHeight () { return mImage . getHeight () ; }
public com.android.ims.internal.ImsCallSession createCallSession ( com.android.ims.ImsCallProfile profile ) { return null ; }
public static native void SSL_set_session ( long sslNativePointer , long sslSessionNativePointer ) throws javax.net.ssl.SSLException ;
@ java.lang.Override public void run () { assert ( mRunLoopID ) != NUMBER_CONSTANT : STRING_CONSTANT ; nativeRun ( mRunLoopID ) ; }
public static com.android.cts.verifier.TestListAdapter.TestListItem newTest ( java.lang.String title , java.lang.String testName , android.content.Intent intent ) { return new com.android.cts.verifier.TestListAdapter.TestListItem ( title , testName , intent ) ; }
public final java.net.URL getLocation () { return null ; }
@ org.junit.runners.Parameterized.Parameters ( name = STRING_CONSTANT ) public static java.lang.Iterable < org.conscrypt.OpenSSLServerSocketImplTest.SocketType > data () { return java.util.Arrays . asList ( org.conscrypt.OpenSSLServerSocketImplTest.SocketType.DEFAULT ) ; }
public static boolean isInstanceOfClass ( com.android.tools.perflib.heap.Instance inst , java.lang.String className ) { com.android.tools.perflib.heap.ClassObj cls = ( inst == null ) ? null : inst . getClassObj () ; return ( cls != null ) && ( className . equals ( cls . getClassName () ) ) ; }
public void timeToUpperCase_ICU ( int reps ) { for ( int i = NUMBER_CONSTANT ; i < reps ; ++ i ) { libcore.icu.ICU . toUpperCase ( s.value , java.util.Locale.US ) ; } }
public void setQuery ( java.lang.String query , @ android.support.annotation.Nullable java.lang.String rawNumber ) { this . query = query ; this . rawNumber = rawNumber ; if ( searchCursorManager . setQuery ( query ) ) { notifyDataSetChanged () ; } }
public E getFirst () { @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) E result = ( ( E ) ( elements [ head ] ) ) ; if ( result == null ) throw new java.util.NoSuchElementException () ; return result ; }
void nObjDestroy ( long id ) { if ( ( mContext ) != NUMBER_CONSTANT ) { rsnObjDestroy ( mContext , id ) ; } }
private com.android.browser.Tab getNextTab () { int pos = ( mTabControl . getCurrentPosition () ) + NUMBER_CONSTANT ; if ( pos >= ( mTabControl . getTabCount () ) ) { pos = NUMBER_CONSTANT ; } return mTabControl . getTab ( pos ) ; }
static java.math.BigInt modInverse ( java.math.BigInt a , java.math.BigInt m ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_mod_inverse ( r.bignum , a.bignum , m.bignum ) ; return r ; }
@ java.lang.Override public void setEchoSuppressionEnabled () { mActivePhone . setEchoSuppressionEnabled () ; }
public void add ( com.android.bluetooth.map.BluetoothMapMessageListingElement element ) { mList . add ( element ) ; if ( ! ( element . getReadBool () ) ) { mHasUnread = true ; } }
public static native void SSL_renegotiate ( long sslNativePointer ) throws javax.net.ssl.SSLException ;
@ org.junit.Ignore @ org.junit.Test public void _hideTestCase6 ( ) throws java.lang.Exception { _testOneLine ( STRING_CONSTANT , NUMBER_CONSTANT ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { android.support.test.espresso.Espresso . setFailureHandler ( new android.support.test.espresso.base.DefaultFailureHandler ( android.support.test.InstrumentationRegistry . getTargetContext () ) ) ; }
@ com.android.annotations.NonNull java.lang.String getTaskName ( @ com.android.annotations.NonNull java.lang.String prefix , @ com.android.annotations.NonNull java.lang.String suffix ) ;
public android.renderscript.ProgramRaster create () { mRS . validate () ; long id = mRS . nProgramRasterCreate ( mPointSprite , mCullMode.mID ) ; android.renderscript.ProgramRaster programRaster = new android.renderscript.ProgramRaster ( id , mRS ) ; programRaster.mPointSprite = mPointSprite ; programRaster.mCullMode = mCullMode ; return programRaster ; }
@ java.lang.Override public void run ( com.intellij.designer.DesignerEditorPanelFacade designer ) { com.intellij.designer.LightToolWindow toolWindow = ( ( com.intellij.designer.LightToolWindow ) ( designer . getClientProperty ( getComponentName () ) ) ) ; if ( toolWindow != null ) { toolWindow . updateAnchor ( getEditorMode () ) ; } }
public void visitSyntheticAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.SyntheticAttribute syntheticAttribute ) { attributeVisitor . visitSyntheticAttribute ( clazz , syntheticAttribute ) ; }
@ java.lang.Override public com.android.jack.tools.merger.JackMerger next () { currentIdx = getNextMergerIdx ( currentIdx ) ; return mergers . get ( currentIdx ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDoStatement doStmt ) { removeBreakOrCase . push ( java.lang.Boolean.FALSE ) ; return super . visit ( doStmt ) ; }
public void removeMemberType ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JClassOrInterface jDeclaredType ) { synchronized ( inners ) { int index = inners . indexOf ( jDeclaredType ) ; if ( index != ( - NUMBER_CONSTANT ) ) { inners . remove ( index ) ; } } }
@ java.lang.Override public void traverse ( @ javax.annotation.Nonnull final com.android.jack.ir.ast.JVisitor visitor ) { if ( visitor . visit ( this ) ) { for ( com.android.jack.ir.ast.cfg.JBasicBlock block : getBlocksDepthFirst ( false ) ) { visitor . accept ( block ) ; } } visitor . endVisit ( this ) ; }
@ java.lang.Override public void middlewareReady ( ) throws android.os.RemoteException { listener . middlewareReady () ; }
protected void visitPrimitive ( int type , int arg , int size ) { for ( int i = NUMBER_CONSTANT ; i < size ; i ++ ) { in . readByte () ; } }
private int addint ( int [] input ) { int result = NUMBER_CONSTANT ; for ( int idx = NUMBER_CONSTANT ; idx < ( input.length ) ; ++ idx ) result += input [ idx ] ; return result ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { myCollation = com.ibm.icu.text.Collator . getInstance ( new java.util.Locale ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
public static long AndLongInt () { long lhs = NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs & rhs ; }
@ java.lang.Override public void shutdown () { fullDismiss () ; }
@ android.test.suitebuilder.annotation.MediumTest public void testResOverlay () { assertFalse ( STRING_CONSTANT . equals ( mResOverLay . getText () . toString () ) ) ; assertEquals ( STRING_CONSTANT , mResOverLay2 . getText () . toString () ) ; }
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; closeGlSurfaceView () ; }
@ java.lang.Override public void endTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) {}
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { android.support.test.espresso.IdlingPolicies . setMasterPolicyTimeout ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) ; }
public static java.lang.String toHexString ( byte [] array ) { return com.android.internal.util.HexDump . toHexString ( array , NUMBER_CONSTANT , array.length , true ) ; }
@ com.android.annotations.NonNull public com.google.common.collect.ImmutableList < com.android.manifmerger.Actions.NodeRecord > getNodeRecords ( com.android.manifmerger.XmlNode.NodeKey key ) { return mRecords . containsKey ( key ) ? mRecords . get ( key ) . getNodeRecords () : com.google.common.collect.ImmutableList . < com.android.manifmerger.Actions.NodeRecord > of () ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean nativeRecycle ( long nativeBitmap ) { android.graphics.Bitmap_Delegate.sManager . removeJavaReferenceFor ( nativeBitmap ) ; return true ; }
@ java.lang.Override public com.android.ims.internal.ImsCallSession createCallSession ( com.android.ims.ImsCallProfile profile ) { return super . createCallSession ( profile ) ; }
public void test_SSLSocket_interrupt ( ) throws java.lang.Exception { test_SSLSocket_interrupt_case ( true , true ) ; test_SSLSocket_interrupt_case ( true , false ) ; test_SSLSocket_interrupt_case ( false , true ) ; test_SSLSocket_interrupt_case ( false , false ) ; }
public boolean p2pFind ( int timeout ) { return mSupplicantP2pIfaceHal . find ( timeout ) ; }
@ java.lang.Override @ com.android.annotations.NonNull public java.util.Collection < java.io.File > getCompileLibraries () { return plugin . getAndroidBuilder () . getCompileClasspath ( getVariantData () . getVariantConfiguration () ) ; }
public final java.lang.String getHostString () { return ( hostname ) != null ? hostname : addr . getHostString () ; }
public static int [] copyOf ( int [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
@ org.junit.Test public void test002d ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( true , null , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
@ java.lang.Override protected javax.net.ssl.KeyManager [] engineGetKeyManagers () { if ( ( keyStore ) == null ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return new javax.net.ssl.KeyManager [] { new org.conscrypt.KeyManagerImpl ( keyStore , pwd ) } ; }
public native float getFloat ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
private void trace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField f ) { if ( brush . startTrace ( f ) ) { trace ( f . getEnclosingType () ) ; trace ( f . getType () ) ; traceAnnotations ( f ) ; brush . endTrace ( f ) ; } }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.lang.Boolean bluetoothHidDeviceUnregisterApp ( ) throws java.lang.Exception { return ( ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile ) != null ) && ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . unregisterApp () ) ; }
public void run () { try { work () ; } catch ( java.lang.Throwable t ) { try { t . printStackTrace ( java.lang.System.out ) ; } catch ( java.lang.Throwable tInner ) {} java.lang.System . exit ( NUMBER_CONSTANT ) ; } }
private void sendSms ( int token , int messageRef , java.lang.String format , java.lang.String smsc , boolean isRetry , byte [] pdu ) { getSmsImplementation () . sendSms ( token , messageRef , format , smsc , isRetry , pdu ) ; }
@ java.lang.Override public void end ( int key ) throws java.lang.InterruptedException {}
@ java.lang.Override public java.lang.String convert ( java.lang.String input ) { return input ; }
boolean run ( vogar.target.Profiler profiler ) ;
private static synchronized void setHeadsetService ( com.android.bluetooth.hfp.HeadsetService instance ) { if ( com.android.bluetooth.hfp.HeadsetService.DBG ) { android.util.Log . d ( com.android.bluetooth.hfp.HeadsetService.TAG , ( STRING_CONSTANT + instance ) ) ; } com.android.bluetooth.hfp.HeadsetService.sHeadsetService = instance ; }
@ java.lang.Override public void run () { scanRawTable ( context ) ; com.android.internal.telephony.InboundSmsHandler . cancelNewMessageNotification ( context ) ; }
public synchronized void setDocumentValidity ( long timeMillis ) { mDocValidity = timeMillis ; }
public void run () { synchronized ( this ) { this . overlayImage = overlayImage ; } }
@ java.lang.Override public com.android.ims.internal.IImsConfig getConfigInterface ( ) throws android.os.RemoteException { checkBinderConnection () ; return getServiceInterface ( mBinder ) . getConfigInterface ( mSlotId ) ; }
public static int NegatedCondition ( boolean x ) { if ( x != false ) { return NUMBER_CONSTANT ; } else { return NUMBER_CONSTANT ; } }
private libcore.util.ZoneInfo createZoneInfo ( int [] [] transitionTimes , int [] [] transitionTypes ) throws java.lang.Exception { return createZoneInfo ( getName () , transitionTimes , transitionTypes , java.lang.System . currentTimeMillis () ) ; }
@ java.lang.Deprecated public void setPluginsPath ( java.lang.String pluginsPath ) {}
public void setMax ( long max ) { this . max = max ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( new Transform () ) ; }
private android.bluetooth.BluetoothGattCharacteristic getCharacteristic ( java.util.UUID uuid ) { android.bluetooth.BluetoothGattCharacteristic characteristic = mService . getCharacteristic ( uuid ) ; if ( characteristic == null ) { showMessage ( STRING_CONSTANT ) ; return null ; } return characteristic ; }
@ java.lang.Override public void editUrl () { if ( mOptionsMenuOpen ) mActivity . closeOptionsMenu () ; mUi . editUrl ( false , true ) ; }
public void sendMessageWithSessionInfo ( int message , int arg ) { sendMessageWithSessionInfo ( message , arg , null ) ; }
private void sendErrorToApp ( int errorCode , java.lang.String message ) { mInternalCallback . onError ( errorCode , message ) ; }
synchronized long nMeshCreate ( long [] vtx , long [] idx , int [] prim ) { validate () ; return rsnMeshCreate ( mContext , vtx , idx , prim ) ; }
public void startAdvertisingSet ( android.bluetooth.le.AdvertisingSetParameters parameters , android.bluetooth.le.AdvertiseData advertiseData , android.bluetooth.le.AdvertiseData scanResponse , android.bluetooth.le.PeriodicAdvertisingParameters periodicParameters , android.bluetooth.le.AdvertiseData periodicData , android.bluetooth.le.AdvertisingSetCallback callback , android.os.Handler handler ) { startAdvertisingSet ( parameters , advertiseData , scanResponse , periodicParameters , periodicData , NUMBER_CONSTANT , NUMBER_CONSTANT , callback , handler ) ; }
public void testAcoshF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
void refresh ( K key ) { int hash = hash ( com.google.common.base.Preconditions . checkNotNull ( key ) ) ; segmentFor ( hash ) . refresh ( key , hash , defaultLoader , false ) ; }
public void testGet_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . get ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public static native byte [] [] EC_POINT_get_affine_coordinates ( long groupCtx , long pointCtx ) ;
public final android.content.ContentProviderClient acquireContentProviderClient ( android.net.Uri uri ) { android.content.IContentProvider provider = acquireProvider ( uri ) ; if ( provider != null ) { return new android.content.ContentProviderClient ( this , provider , true ) ; } return null ; }
public static void startMethodTracing ( java.lang.String traceName , java.io.FileDescriptor fd , int bufferSize , int flags ) { dalvik.system.VMDebug . startMethodTracing ( traceName , fd , bufferSize , flags , false , NUMBER_CONSTANT ) ; }
public int [] getBands () { return ( mBands ) == null ? null : mBands . clone () ; }
protected void validateFields ( java.util.List < java.lang.Throwable > errors ) { org.junit.internal.runners.rules.RuleFieldValidator.RULE_VALIDATOR . validate ( getTestClass () , errors ) ; }
@ org.junit.Before public void setUp ( ) throws com.android.sched.util.config.ConfigurationException { com.android.sched.util.config.ThreadConfig . setConfig ( new com.android.sched.util.config.AsapConfigBuilder () . build () ) ; }
public synchronized void setPolicyDataEnabled ( boolean enabled ) { boolean prevDataEnabled = isDataEnabled () ; mPolicyDataEnabled = enabled ; if ( prevDataEnabled != ( isDataEnabled () ) ) { notifyDataEnabledChanged ( ( ! prevDataEnabled ) , com.android.internal.telephony.dataconnection.DataEnabledSettings.REASON_POLICY_DATA_ENABLED ) ; } }
@ java.lang.Override public boolean onCreateOptionsMenu ( com.android.internal.telephony.cat.Menu menu ) { super . onCreateOptionsMenu ( menu ) ; menu . add ( NUMBER_CONSTANT , StkApp.MENU_ID_END_SESSION , NUMBER_CONSTANT , R.string.menu_end_session ) ; return true ; }
public static long getCreationTimestamp () { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . lock () ; try { return com.intellij.openapi.vfs.newvfs.persistent.FSRecords.DbConnection . getTimestamp () ; } finally { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . unlock () ; } }
public boolean setAttribute ( java.lang.String uri , java.lang.String name , java.lang.String value ) { checkEditOK () ; com.android.ide.eclipse.adt.internal.editors.uimodel.UiAttributeNode attr = mNode . setAttributeValue ( name , uri , value , true ) ; mNode . commitDirtyAttributesToXml () ; return attr != null ; }
private void applyLidSwitchState () { if ( ( ( mLidState ) == ( android.view.WindowManagerPolicy.WindowManagerFuncs.LID_CLOSED ) ) && ( mLidControlsSleep ) ) { mPowerManager . goToSleep ( android.os.SystemClock . uptimeMillis () ) ; } }
public void setClassAnnotations ( com.android.jack.dx.rop.annotation.Annotations annotations ) { assert annotations != null ; if ( ( classAnnotations ) != null ) { throw new java.lang.UnsupportedOperationException ( STRING_CONSTANT ) ; } classAnnotations = new com.android.jack.dx.dex.file.AnnotationSetItem ( annotations ) ; }
public void setAlpha ( int alpha ) { checkGC () ; try { getGc () . setAlpha ( alpha ) ; } catch ( org.eclipse.swt.SWTException e ) {} }
final com.android.server.am.ProcessRecord getRecordForAppLocked ( android.app.IApplicationThread thread ) { if ( thread == null ) { return null ; } int appIndex = getLRURecordIndexForAppLocked ( thread ) ; return appIndex >= NUMBER_CONSTANT ? mLruProcesses . get ( appIndex ) : null ; }
@ com.android.annotations.NonNull public com.android.sdklib.repository.FullRevision getBuildToolsRevision () { return mBuildToolsRevision ; }
@ android.test.suitebuilder.annotation.MediumTest public void testResOverlay () { assertFalse ( STRING_CONSTANT . equals ( mResOverLay . getText () ) ) ; assertEquals ( STRING_CONSTANT , mResOverLay2 . getText () ) ; }
public static void sleep ( long ms ) { try { java.lang.Thread . sleep ( ms ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( STRING_CONSTANT ) ; } }
public native boolean getBoolean ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
private boolean isWhitelistedOrRetained ( char c ) { return ( libcore.net.UriCodec . isWhitelisted ( c ) ) || ( isRetained ( c ) ) ; }
private GitilesView.Builder parseDescribeCommand ( java.lang.String repoName , java.lang.String path ) { if ( com.google.gitiles.ViewFilter . isEmptyOrSlash ( path ) ) { return null ; } return com.google.gitiles.GitilesView . describe () . setRepositoryName ( repoName ) . setPathPart ( path ) ; }
public com.google.gerrit.gpg.GerritPublicKeyChecker create () { return new com.google.gerrit.gpg.GerritPublicKeyChecker ( this ) ; }
public java.util.Map < java.lang.String , java.lang.String > getMergeResults () { return mergeResults ; }
private boolean isNoteDbEnabled () { return migration . readChanges () ; }
public java.lang.String getGerritUrl () { return args.urlProvider . get () ; }
public com.google.gerrit.server.patch.PatchList get ( com.google.gerrit.client.reviewdb.Change change , com.google.gerrit.client.reviewdb.PatchSet patchSet ) ;
public com.google.gerrit.acceptance.PushOneCommit.Result rm ( java.lang.String ref ) throws org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.GitUtil . rm ( git , fileName ) ; return execute ( ref ) ; }
@ org.junit.Before public void setUp () { validator = new com.googlesource.gerrit.plugins.uploadvalidator.ContentTypeValidator ( null , new com.googlesource.gerrit.plugins.uploadvalidator.ContentTypeUtil ( com.googlesource.gerrit.plugins.uploadvalidator.TestUtils.PATTERN_CACHE ) , null , null , null ) ; }
@ java.lang.Override protected void updateRepoImpl ( com.google.gerrit.server.git.BatchUpdate.RepoContext ctx ) throws com.google.gerrit.server.git.IntegrationException { args.mergeTip . moveTipTo ( toMerge , toMerge ) ; }
com.google.gerrit.lucene.LuceneChangeIndex create ( com.google.gerrit.server.index.Schema < com.google.gerrit.server.query.change.ChangeData > schema ) ;
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private static < T > com.google.common.util.concurrent.CheckedFuture < T , com.google.gwtorm.server.OrmException > emptyFuture () { return com.google.common.util.concurrent.Futures . immediateCheckedFuture ( null ) ; }
com.google.gerrit.extensions.restapi.RestModifyView < P , > post ( P parent ) throws com.google.gerrit.extensions.restapi.RestApiException ;
@ org.junit.Test public void createProjectFoo ( ) throws com.google.gerrit.extensions.restapi.RestApiException { java.lang.String name = STRING_CONSTANT ; org.junit.Assert . assertEquals ( name , gApi . projects () . name ( name ) . create () . get () . name ) ; }
public com.google.gerrit.acceptance.RestResponse delete ( java.lang.String endPoint ) throws java.io.IOException { return execute ( org.apache.http.client.fluent.Request . Delete ( ( ( ( url ) + STRING_CONSTANT ) + endPoint ) ) ) ; }
final native void setMessage ( java.lang.String m ) ;
@ java.lang.Override protected java.lang.Object getRowItemKey ( final com.google.gerrit.client.dashboards.DashboardInfo item ) { return item . id () ; }
public void setUserAccountId ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new com.google.gerrit.httpd.WebSessionManager.Key ( ( STRING_CONSTANT + id ) ) ; val = new com.google.gerrit.httpd.WebSessionManager.Val ( id , NUMBER_CONSTANT , false , null , STRING_CONSTANT , NUMBER_CONSTANT ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onRestore ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { if ( ( restoreAction ) == null ) { restoreAction = new com.google.gerrit.client.change.RestoreAction ( restore , project , changeId ) ; } restoreAction . show () ; }
public void onSuccess ( final com.google.gerrit.common.data.HostPageData result ) { com.google.gerrit.client.Gerrit.myConfig = result.config ; if ( ( result.account ) != null ) { com.google.gerrit.client.Gerrit.myAccount = result.account ; com.google.gerrit.client.Gerrit . applyUserPreferences () ; } onModuleLoad2 () ; }
@ org.junit.BeforeClass public static void setup () { com.google.gerrit.server.events.EventTypes . register ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.EventRestApiServletTest.RefReplicationDoneEvent.TYPE , com.ericsson.gerrit.plugins.highavailability.forwarder.rest.EventRestApiServletTest.RefReplicationDoneEvent . class ) ; }
@ java.lang.Override public void close ( ) throws java.io.IOException { repo . close () ; }
@ org.junit.Test public void deletingNonExistingEditRest ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = adminSession . delete ( urlEdit () ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( org.apache.http.HttpStatus.SC_NOT_FOUND ) ; }
public static java.lang.String toAccountQuery ( java.lang.String fullname , com.google.gerrit.reviewdb.client.Change.Status status ) { return com.google.gerrit.common.PageLinks . toChangeQuery ( ( ( ( com.google.gerrit.common.PageLinks . op ( STRING_CONSTANT , fullname ) ) + STRING_CONSTANT ) + ( com.google.gerrit.common.PageLinks . status ( status ) ) ) ) ; }
@ java.lang.Override public java.lang.Object apply ( com.google.gerrit.server.project.ProjectResource rsrc , com.google.gerrit.server.project.GarbageCollect.Input input ) { com.google.gerrit.reviewdb.client.Project.NameKey project = rsrc . getNameKey () ; if ( input.async ) { return applyAsync ( project , input ) ; } return applySync ( project , input ) ; }
private com.google.gerrit.common.data.SubmitTypeRecord typeError ( java.lang.String err ) { return typeError ( err , null ) ; }
public void index ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException { for ( com.google.gerrit.server.index.Index < , com.google.gerrit.server.query.change.ChangeData > i : getWriteIndexes () ) { i . replace ( cd ) ; } fireChangeIndexedEvent ( cd . getId () . get () ) ; }
void syncScroll ( com.google.gerrit.client.diff.DisplaySide masterSide ) { if ( ( scrollSynchronizer ) != null ) { scrollSynchronizer . syncScroll ( masterSide ) ; } }
private java.util.List < com.google.gerrit.common.data.SubmitRecord > ruleError ( java.lang.String err ) { return ruleError ( err , null ) ; }
@ java.lang.Override public void stop () { if ( ( async ) != null ) { async . close () ; } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.common.data.ChangeDetail result ) { buttonClicked = true ; if ( ( callback ) != null ) { callback . onSuccess ( result ) ; } hide () ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus () . isOpen () ) { change . setCurrentPatchSet ( info ) ; change . setStatus ( Change.Status.MERGED ) ; com.google.gerrit.server.ChangeUtil . updated ( change ) ; } return change ; }
private void assertParseSucceeds ( org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { try ( com.google.gerrit.server.notedb.ChangeNotesParser parser = newParser ( commit ) ) { parser . parseAll () ; } }
public static void putMessage ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String m , com.google.gerrit.client.rpc.GerritCallback < com.google.gerrit.client.VoidResult > cb ) { com.google.gerrit.client.changes.ChangeEditApi . editMessage ( project , id ) . put ( m , cb ) ; }
@ java.lang.Override public void configure () { install ( dbInjector . getInstance ( com.google.gerrit.pgm.util.BatchProgramModule . class ) ) ; install ( new com.google.gerrit.server.index.DummyIndexModule () ) ; factory ( ChangeResource.Factory . class ) ; }
public abstract com.google.gerrit.server.project.SubmitRuleOptions.Builder toBuilder ( ) ;
public java.lang.String getLine ( final int i ) { return getLines ( i , ( i + NUMBER_CONSTANT ) , true ) ; }
@ org.junit.Test ( expected = com.ericsson.gerrit.plugins.eventslog.MalformedQueryException . class ) public void throwBadRequestTriggerOnBadQuery ( ) throws java.lang.Exception { easyMock . replayAll () ; setUpClient () ; java.lang.String badQuery = STRING_CONSTANT ; store . queryChangeEvents ( badQuery ) ; easyMock . verifyAll () ; }
public final native void topic ( java.lang.String t ) ;
public com.google.gerrit.util.http.testutil.FakeHttpServletRequest setPathInfo ( java.lang.String path ) { this . path = path ; return this ; }
java.util.Optional < com.google.gerrit.server.group.InternalGroup > get ( com.google.gerrit.reviewdb.client.AccountGroup.UUID groupUuid ) ;
private org.eclipse.jgit.lib.PersonIdent toCommitterIdent ( final com.google.gerrit.reviewdb.client.PatchSetApproval audit ) { if ( audit != null ) { return identifiedUserFactory . create ( audit . getAccountId () ) . newCommitterIdent ( audit . getGranted () , myIdent . getTimeZone () ) ; } return myIdent ; }
private static void h ( final java.lang.StringBuilder r , final com.google.gerrit.client.reviewdb.Branch.NameKey branch ) { com.google.gerrit.client.data.GitwebLink . var ( r , STRING_CONSTANT , branch . get () ) ; }
boolean allRefsAreVisible ( java.util.Set < java.lang.String > ignore ) { return ( user . isInternalUser () ) || ( canPerformOnAllRefs ( Permission.READ , ignore ) ) ; }
protected com.google.gerrit.server.notedb.ChangeUpdate newUpdate ( com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.server.CurrentUser user ) throws java.lang.Exception { return com.google.gerrit.testutil.TestChanges . newUpdate ( injector , c , user ) ; }
public void setChange ( final com.google.gerrit.reviewdb.client.Change change ) { this . change = change ; this . currentPatchSetId = change . currentPatchSetId () ; }
public static void get ( com.google.gerrit.reviewdb.client.Project.NameKey name , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.projects.ConfigInfoCache.Entry > cb ) { com.google.gerrit.client.projects.ConfigInfoCache.instance . getImpl ( name . get () , cb ) ; }
final native void topic ( java.lang.String t ) ;
private static void runGerrit ( java.lang.String . . . args ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.google.gerrit.launcher.GerritLauncher . mainImpl ( args ) ) . isEqualTo ( NUMBER_CONSTANT ) ; }
@ java.lang.Override public void onSuccess ( T value ) { this . result = value ; remaining . remove ( this ) ; this . applyAllSuccess () ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ChangeInfo info ) { info . init () ; loadConfigInfo ( info , base ) ; }
public void setChangeId ( final com.google.gerrit.reviewdb.client.Change.Id changeId ) {}
@ org.junit.Test public void getCache_NotFound ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = adminSession . get ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
java.util.Map < java.lang.String , com.google.gerrit.extensions.common.FileInfo > toFileInfoMap ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws com.google.gerrit.server.patch.PatchListNotAvailableException { return toFileInfoMap ( change , patchSet . getRevision () , null ) ; }
protected void onClick ( final com.google.gwt.user.client.Event event ) { com.google.gerrit.client.Gerrit . display ( getTargetHistoryToken () , createScreen () ) ; com.google.gwt.user.client.DOM . eventPreventDefault ( event ) ; }
void index ( com.google.gerrit.reviewdb.client.Account.Id id ) throws java.io.IOException ;
@ java.lang.Override protected void run () { loader . rescan ( true ) ; }
@ com.google.gerrit.client.rpc.SignInRequired void listBranches ( com.google.gerrit.client.reviewdb.Project.NameKey projectName , com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < com.google.gerrit.client.reviewdb.Branch > > callback ) ;
public static java.lang.String refsDraftComments ( com.google.gerrit.reviewdb.client.Change.Id changeId , com.google.gerrit.reviewdb.client.Account.Id accountId ) { return com.google.gerrit.reviewdb.client.RefNames . buildRefsPrefix ( com.google.gerrit.reviewdb.client.RefNames.REFS_DRAFT_COMMENTS , changeId . get () ) . append ( accountId . get () ) . toString () ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( ) throws java.lang.Exception { return getConfig ( STRING_CONSTANT , true , true ) ; }
private static java.util.List < com.google.gerrit.server.notedb.rebuild.Event > events ( com.google.gerrit.server.notedb.rebuild.Event . . . es ) { return com.google.common.collect.Lists . newArrayList ( es ) ; }
public io.fd.maintainer.plugin.service.dto.PluginBranchSpecificSettings.PluginSettingsBuilder setBranch ( final java.lang.String branch ) { this . branch = reduceWildcard ( branch ) ; return this ; }
@ java.lang.Override @ org.junit.After public void tearDown ( ) throws java.lang.Exception { revWalk . close () ; super . tearDown () ; }
public static final void uploadImage ( java.lang.String imageData ) { com.googlesource.gerrit.plugins.imagare.client.ImageUploader . uploadImage ( imageData , null ) ; }
public static com.google.gerrit.extensions.common.PathSubject assertThat ( java.nio.file.Path path ) { return com.google.common.truth.Truth . assertAbout ( com.google.gerrit.extensions.common.PathSubject : : new ) . that ( path ) ; }
public Account.Id getDeletedAssignee () { return ( deletedAssignee ) != null ? deletedAssignee . getId () : null ; }
protected com.google.gerrit.server.change.ChangeInserter newChangeForBranch ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo , java.lang.String branch ) throws java.lang.Exception { return newChange ( repo , null , branch , null , null ) ; }
@ org.junit.Test public void flushCacheWithGerritPrefix ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = adminSession . post ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_OK ) ; }
private java.lang.Class < > loadClass ( ) throws com.google.gwtorm.server.OrmException { try { return java.lang.Class . forName ( implClassName , false , classLoader ) ; } catch ( java.lang.ClassNotFoundException err ) { throw new com.google.gwtorm.server.OrmException ( STRING_CONSTANT , err ) ; } }
@ java.lang.Override public com.google.gerrit.server.plugins.JarScanner.ExtensionMetaData apply ( com.google.gerrit.server.plugins.JarScanner.ClassData classData ) { return new com.google.gerrit.server.plugins.JarScanner.ExtensionMetaData ( classData.className , classData.annotationValue ) ; }
@ java.lang.Override public com.google.gerrit.server.patch.PatchList load ( final com.google.gerrit.server.patch.PatchListKey key ) throws com.google.gerrit.server.patch.PatchListNotAvailableException , java.io.IOException { try ( org.eclipse.jgit.lib.Repository repo = repoManager . openRepository ( key.projectKey ) ) { return readPatchList ( key , repo ) ; } }
private org.eclipse.jgit.lib.Ref getDraftRef ( com.google.gerrit.acceptance.TestAccount account , com.google.gerrit.reviewdb.client.Change.Id changeId ) throws java.lang.Exception { try ( org.eclipse.jgit.lib.Repository repo = repoManager . openRepository ( allUsers ) ) { return repo . exactRef ( com.google.gerrit.reviewdb.client.RefNames . refsDraftComments ( changeId , account.id ) ) ; } }
public void setSide ( final short s ) { side = s ; }
public static org.eclipse.jgit.errors.ConfigInvalidException parseException ( com.google.gerrit.reviewdb.client.Change.Id changeId , java.lang.String fmt , java.lang.Object . . . args ) { return new org.eclipse.jgit.errors.ConfigInvalidException ( ( ( ( STRING_CONSTANT + changeId ) + STRING_CONSTANT ) + ( java.lang.String . format ( fmt , args ) ) ) ) ; }
@ java.lang.Override public com.google.gerrit.server.patch.DiffSummary call ( ) throws java.lang.Exception { com.google.gerrit.server.patch.PatchList patchList = patchListCache . get ( key . toPatchListKey () , project ) ; return toDiffSummary ( patchList ) ; }
public void normalize ( final com.google.gerrit.common.data.ApprovalType at , final com.google.gerrit.reviewdb.PatchSetApproval ca ) { applyTypeFloor ( at , ca ) ; applyRightFloor ( at , ca ) ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; groups = new com.google.gerrit.client.admin.GroupTable () ; add ( groups ) ; }
@ java.lang.Override public com.google.gerrit.extensions.common.CommitInfo apply ( com.google.gerrit.server.project.CommitResource rsrc ) { return com.google.gerrit.server.project.GetCommit . toCommitInfo ( rsrc . getCommit () ) ; }
@ org.junit.Test public void testGcNotAllowed_Forbidden ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( userSession . post ( ( ( STRING_CONSTANT + ( allProjects . get () ) ) + STRING_CONSTANT ) ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_FORBIDDEN ) ; }
private static void usage () { java.lang.System.err . println ( STRING_CONSTANT ) ; java.lang.System.err . println ( STRING_CONSTANT ) ; java.lang.System.err . println ( STRING_CONSTANT ) ; java.lang.System.err . println ( STRING_CONSTANT ) ; java.lang.System.err . println ( STRING_CONSTANT ) ; }
public static void ensureAllPatchSetsLoaded ( java.lang.Iterable < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . patches () ; } }
com.google.gerrit.extensions.api.changes.ChangeApi id ( java.lang.String id ) throws com.google.gerrit.extensions.restapi.RestApiException ;
private static java.lang.String checkName ( java.lang.String name ) { com.google.common.base.CharMatcher m = com.google.common.base.CharMatcher . anyOf ( STRING_CONSTANT ) ; com.google.common.base.Preconditions . checkArgument ( ( ( name != null ) && ( m . matchesAllOf ( name ) ) ) , STRING_CONSTANT , name ) ; return name ; }
public com.google.gerrit.server.config.PluginConfig getFromGerritConfig ( java.lang.String pluginName ) { return getFromGerritConfig ( pluginName , false ) ; }
public void run () { reviewed . setValue ( ( ! ( reviewed . getValue () ) ) , true ) ; }
public com.google.gerrit.extensions.api.projects.Projects.ListRequest withAll ( boolean all ) { this . all = all ; return this ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.VoidResult result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChangeInEditMode ( project , curr . getParentKey () ) ) ; }
private java.lang.String createMyChange ( ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , user . getIdent () , git ) ; return push . to ( STRING_CONSTANT ) . getChangeId () ; }
@ com.google.inject.Provides @ com.google.inject.Singleton public com.google.gerrit.solr.SolrChangeIndex getChangeIndex ( @ com.google.gerrit.server.config.GerritServerConfig org.eclipse.jgit.lib.Config cfg , com.google.gerrit.server.config.SitePaths sitePaths , com.google.gerrit.server.index.IndexCollection indexes , com.google.gerrit.server.index.FieldDef.FillArgs fillArgs ) throws java.io.IOException { return new com.google.gerrit.solr.SolrChangeIndex ( cfg , fillArgs , sitePaths , indexes , com.google.gerrit.server.index.ChangeSchemas . getLatestRelease () , base ) ; }
public void setFile ( final java.lang.String pattern ) { file = pattern ; }
@ org.junit.Test public void testEndsOnNewline () { com.google.gerrit.client.diff.CodeMirrorDemo.EditIterator iter = new com.google.gerrit.client.diff.CodeMirrorDemo.EditIterator ( lines , NUMBER_CONSTANT ) ; assertLineChsEqual ( net.codemirror.lib.LineCharacter . create ( NUMBER_CONSTANT ) , iter . advance ( NUMBER_CONSTANT ) ) ; }
protected void focusHint () { if ( hintOn ) { super . setText ( STRING_CONSTANT ) ; if ( ( getHintStyleName () ) != null ) { removeStyleName ( getHintStyleName () ) ; } hintOn = false ; } }
@ java.lang.Override public java.util.SortedSet < com.google.gerrit.reviewdb.client.Project.NameKey > list () { com.google.gerrit.server.git.LocalDiskRepositoryManager.ProjectVisitor visitor = new com.google.gerrit.server.git.LocalDiskRepositoryManager.ProjectVisitor ( basePath ) ; scanProjects ( visitor ) ; return java.util.Collections . unmodifiableSortedSet ( visitor.found ) ; }
private static com.google.gerrit.server.git.CodeReviewCommit error ( com.google.gerrit.server.git.CommitMergeStatus s ) { com.google.gerrit.server.git.CodeReviewCommit r = new com.google.gerrit.server.git.CodeReviewCommit ( org.eclipse.jgit.lib.ObjectId . zeroId () ) ; r.statusCode = s ; return r ; }
private static void export ( org.spearce.jgit.lib.RepositoryConfig config , java.sql.ResultSet rs ) throws java.sql.SQLException { com.google.gerrit.pgm.ConvertSystemConfig . sshd ( config , rs ) ; com.google.gerrit.pgm.ConvertSystemConfig . contactstore ( config , rs ) ; com.google.gerrit.pgm.ConvertSystemConfig . user ( config , rs ) ; }
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { enableButtons ( true ) ; super . onFailure ( caught ) ; }
public java.util.Map < java.lang.String , com.google.gerrit.common.data.LabelType > getLabelSections () { return labelSections ; }
public static com.google.gerrit.client.rpc.RestApi reviewer ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String reviewer ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . id ( reviewer ) ; }
private com.google.gerrit.reviewdb.client.Change getChange ( com.google.gerrit.acceptance.GitUtil.Commit c ) throws com.google.gwtorm.server.OrmException { return com.google.common.collect.Iterables . getOnlyElement ( db . changes () . byKey ( new com.google.gerrit.reviewdb.client.Change.Key ( c . getChangeId () ) ) ) ; }
private boolean publishEvent ( com.google.gerrit.server.events.Event event ) { return session . publish ( gson . toJson ( event ) ) ; }
public boolean canPublish ( final com.google.gerrit.reviewdb.ReviewDb db ) throws com.google.gwtorm.client.OrmException { return ( isOwner () ) && ( isVisible ( db ) ) ; }
@ java.lang.Override public java.lang.String apply ( com.google.gerrit.server.git.CodeReviewCommit in ) { return in . change () . getKey () . abbreviate () ; }
private static void assertOwner ( java.lang.String ref , com.google.gerrit.server.project.ProjectControl u ) { org.junit.Assert . assertTrue ( ( STRING_CONSTANT + ref ) , u . controlForRef ( ref ) . isOwner () ) ; }
private void deleteDraftChange ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException , com.google.gwtorm.server.OrmException , java.io.IOException { try { changeUtil . deleteDraftChange ( change ) ; } catch ( com.google.gerrit.server.project.NoSuchChangeException e ) { throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException ( e . getMessage () ) ; } }
private void assertGone ( javax.servlet.http.HttpServletRequest req ) throws java.lang.Exception { com.google.gitiles.FakeHttpServletResponse res = new com.google.gitiles.FakeHttpServletResponse () ; servlet . service ( req , res ) ; org.junit.Assert . assertEquals ( javax.servlet.http.HttpServletResponse.SC_GONE , res . getStatus () ) ; }
@ org.kohsuke.args4j.Option ( name = STRING_CONSTANT , metaVar = STRING_CONSTANT , usage = STRING_CONSTANT ) public void setMatchPrefix ( java.lang.String matchPrefix ) { this . matchPrefix = matchPrefix ; }
private static boolean isAllowed ( com.google.gerrit.gpg.CheckResult result , java.util.Collection < org.eclipse.jgit.transport.ReceiveCommand > commands ) { if ( com.google.gerrit.gpg.SignedPushPreReceiveHook . onlyMagicBranches ( commands ) ) { return result . isOk () ; } return result . isTrusted () ; }
private void grantForcePush ( ) throws java.lang.Exception { grant ( project , STRING_CONSTANT , Permission.PUSH , true , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS ) ; }
public void initFs ( ) throws java.io.IOException { uuid . initFs () ; head . initFs () ; tail . initFs ( ( ( long ) ( NUMBER_CONSTANT ) ) ) ; }
@ org.junit.Test @ com.google.gerrit.acceptance.GerritConfig ( name = STRING_CONSTANT , value = STRING_CONSTANT ) public void testOne () { com.google.common.truth.Truth . assertThat ( serverConfig . getString ( STRING_CONSTANT , null , STRING_CONSTANT ) ) . isEqualTo ( STRING_CONSTANT ) ; }
private static java.lang.String status ( com.google.gerrit.reviewdb.client.Change.Status status ) { switch ( status ) { case ABANDONED : return STRING_CONSTANT ; case MERGED : return STRING_CONSTANT ; case NEW : default: return STRING_CONSTANT ; } }
final native void message ( java.lang.String m ) ;
@ org.junit.Test public void noHeadText ( ) throws java.lang.Exception { setUpSimpleRefs () ; com.google.gitiles.FakeHttpServletResponse res = buildText ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( res . getActualBodyString () ) . isEqualTo ( STRING_CONSTANT ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.common.SuggestedReviewerInfo > apply ( com.google.gerrit.server.project.ProjectResource rsrc ) throws com.google.gerrit.extensions.restapi.BadRequestException , com.google.gwtorm.server.OrmException , java.io.IOException { return reviewersUtil . suggestReviewers ( this , rsrc . getControl () , getVisibility ( rsrc ) , true ) ; }
private boolean match ( java.lang.String destBranch , java.lang.String refPattern ) { return com.google.gerrit.server.project.RefPatternMatcher . getMatcher ( refPattern ) . match ( destBranch , getCurrentUser () . getUserName () ) ; }
private boolean isHttpEnabled () { return ( downloadConfig . getDownloadSchemes () . contains ( DownloadScheme.ANON_HTTP ) ) || ( downloadConfig . getDownloadSchemes () . contains ( DownloadScheme.HTTP ) ) ; }
private java.util.List < com.google.gerrit.reviewdb.RefRight > getInheritedRights ( com.google.gerrit.reviewdb.ApprovalCategory.Id actionId ) { return filter ( getProjectState () . getInheritedRights ( actionId ) ) ; }
com.google.gerrit.server.change.ChangeEdits.Create create ( java.lang.String path ) ;
protected abstract void run ( ) throws com.google.gerrit.server.ssh.AbstractCommand.Failure , java.io.IOException ;
public java.util.List < java.lang.String > currentFilePaths ( ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.PatchSet ps = currentPatchSet () ; return ps != null ? filePaths ( ps ) : null ; }
private static com.google.gerrit.reviewdb.client.AuthType toType ( final org.eclipse.jgit.lib.Config cfg ) { return cfg . getEnum ( STRING_CONSTANT , null , STRING_CONSTANT , AuthType.OPENID ) ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( ( event . getCharCode () ) == ( com.google.gwt.event.dom.client.KeyCodes.KEY_ENTER ) ) { doSearch () ; } }
com.google.gerrit.server.notedb.ChangeUpdate create ( com.google.gerrit.reviewdb.client.Change change , @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Account.Id accountId , org.eclipse.jgit.lib.PersonIdent authorIdent , java.util.Date when , java.util.Comparator < java.lang.String > labelNameComparator ) ;
public static void updateDraft ( com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String draftId , com.google.gerrit.client.changes.CommentInfo content , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.CommentInfo > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( id , STRING_CONSTANT ) . id ( draftId ) . put ( content , cb ) ; }
@ java.lang.Override public synchronized java.util.Optional < com.google.gerrit.server.account.AccountState > get ( com.google.gerrit.reviewdb.client.Account.Id accountId ) { return java.util.Optional . ofNullable ( byId . get ( accountId ) ) ; }
public abstract com.google.gerrit.server.mail.receive.MailMessage.Builder id ( java.lang.String val ) ;
private boolean canPerform ( java.lang.String permissionName , boolean isChangeOwner ) { return doCanPerform ( permissionName , isChangeOwner , false ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return ref ; }
public com.google.gerrit.client.ErrorDialog setText ( java.lang.String t ) { text . setText ( t ) ; return this ; }
public void enableButtons ( final boolean on ) { for ( com.google.gwt.user.client.ui.Widget w : getButtonPanel () ) { if ( w instanceof com.google.gwt.user.client.ui.Button ) { ( ( com.google.gwt.user.client.ui.Button ) ( w ) ) . setEnabled ( on ) ; } } }
public static void setModeHeader ( javax.servlet.http.HttpServletResponse res , com.google.gitiles.PathServlet.FileType type ) { res . setHeader ( com.google.gitiles.PathServlet.MODE_HEADER , java.lang.String . format ( STRING_CONSTANT , type.mode . getBits () ) ) ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; initName () ; initOwner () ; initDescription () ; initMemberList () ; }
@ java.lang.Override protected void set ( int newValue ) { seq = newValue ; }
private com.google.gerrit.server.CurrentUser getUser () { return user ; }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData object ) throws com.google.gwtorm.server.OrmException { try { return com.google.gerrit.server.index.change.ChangeField . getCommitterParts ( object ) . contains ( getValue () . toLowerCase () ) ; } catch ( java.io.IOException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } }
@ org.junit.Test @ com.google.gerrit.acceptance.GerritConfig ( name = STRING_CONSTANT , value = STRING_CONSTANT ) public void suggestReviewersMaxNbrSuggestions ( ) throws java.lang.Exception { java.lang.String changeId = createChange () . getChangeId () ; java.util.List < com.google.gerrit.extensions.common.SuggestedReviewerInfo > reviewers = suggestReviewers ( changeId , name ( STRING_CONSTANT ) , NUMBER_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( reviewers ) . hasSize ( NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testCreateChildProjectUnderNonExistingParent_UnprocessableEntity ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.parent = STRING_CONSTANT ; com.google.gerrit.acceptance.RestResponse r = adminSession . put ( STRING_CONSTANT , in ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_UNPROCESSABLE_ENTITY ) ; }
@ java.lang.Override public boolean getIfPresent ( org.eclipse.jgit.lib.ObjectId commit , org.eclipse.jgit.lib.Ref intoRef , com.google.gerrit.extensions.common.SubmitType submitType , java.lang.String mergeStrategy ) { return cache . getIfPresent ( new com.google.gerrit.server.change.MergeabilityCacheImpl.EntryKey ( commit , com.google.gerrit.server.change.MergeabilityCacheImpl . toId ( intoRef ) , submitType , mergeStrategy ) ) ; }
public void projectDetail ( final com.google.gerrit.client.reviewdb.Project.NameKey projectName , final com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.admin.ProjectDetail > callback ) { projectDetailFactory . create ( projectName ) . to ( callback ) ; }
protected com.google.gerrit.extensions.client.Comment.Range toRange ( com.google.gerrit.reviewdb.client.Comment.Range commentRange ) { com.google.gerrit.extensions.client.Comment.Range range = null ; if ( commentRange != null ) { range = new com.google.gerrit.extensions.client.Comment.Range () ; range.startLine = commentRange.startLine ; range.startCharacter = commentRange.startChar ; range.endLine = commentRange.endLine ; range.endCharacter = commentRange.endChar ; } return range ; }
private static java.lang.String getUrl ( java.lang.String pluginName , int changeId , java.lang.Integer patchSetIdA , int patchSetIdB , java.lang.String path ) { return ( com.googlesource.gerrit.plugins.xdocs.SideBySideDiffPreviewWebLink . getUrl ( pluginName , changeId , patchSetIdA , patchSetIdB , path ) ) + STRING_CONSTANT ; }
private com.google.gerrit.reviewdb.client.Change newChange () { return com.google.gerrit.testutil.TestChanges . newChange ( project , changeOwner . getAccountId () ) ; }
@ java.lang.Override public void delete ( com.google.gerrit.reviewdb.client.Change.Id id ) throws java.io.IOException { java.lang.String idString = java.lang.Integer . toString ( id . get () ) ; delete ( idString , openIndex ) ; delete ( idString , closedIndex ) ; }
public static com.google.gerrit.client.GitwebLink getGitwebLink () { com.google.gerrit.common.data.GitwebConfig gw = com.google.gerrit.client.Gerrit . getConfig () . getGitwebLink () ; return ( gw != null ) && ( ( gw.type ) != null ) ? new com.google.gerrit.client.GitwebLink ( gw ) : null ; }
@ java.lang.Override public java.util.Optional < com.google.gerrit.server.account.AccountState > get ( com.google.gerrit.reviewdb.client.Account.Id accountId ) { try { return byId . get ( accountId ) ; } catch ( java.util.concurrent.ExecutionException e ) { com.google.gerrit.server.account.AccountCacheImpl.log . warn ( ( STRING_CONSTANT + accountId ) , e ) ; return null ; } }
@ java.lang.Override public void execute () { message . setFocus ( true ) ; }
public static void publishEdit ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gwt.core.client.JavaScriptObject in = com.google.gwt.core.client.JavaScriptObject . createObject () ; com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . post ( in , cb ) ; }
@ java.lang.Override public void onLoad ( com.google.gerrit.plugin.client.screen.Screen screen ) { screen . setPageTitle ( STRING_CONSTANT ) ; screen . show ( new com.googlesource.gerrit.plugins.reviewers.client.ReviewersScreen ( com.google.gwt.http.client.URL . decodeQueryString ( screen . getToken ( NUMBER_CONSTANT ) ) ) ) ; }
private void configureRequestScope () {}
@ java.lang.Override public com.google.gerrit.extensions.api.projects.Projects projects () { return projects ; }
Timer1.Context start ( java.lang.String name ) { return execTime . start ( name ) ; }
@ org.junit.Test public void testInvalidSchemeWithBackreference () { try { new com.google.gwtexpui.safehtml.client.LinkFindReplace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT ) ; org.junit.Assert . fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException expected ) {} }
@ org.junit.Test public void testCreateChildProjectUnderNonExistingParent_UnprocessableEntity ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = name ( STRING_CONSTANT ) ; in.parent = STRING_CONSTANT ; assertCreateFails ( in , com.google.gerrit.extensions.restapi.UnprocessableEntityException . class ) ; }
@ java.lang.Override public java.lang.String get () { return externalId ; }
private com.google.gerrit.extensions.common.FixReplacementInfo toFixReplacementInfo ( com.google.gerrit.reviewdb.client.FixReplacement fixReplacement ) { com.google.gerrit.extensions.common.FixReplacementInfo fixReplacementInfo = new com.google.gerrit.extensions.common.FixReplacementInfo () ; fixReplacementInfo.path = fixReplacement.path ; fixReplacementInfo.range = toRange ( fixReplacement.range ) ; fixReplacementInfo.replacement = fixReplacement.replacement ; return fixReplacementInfo ; }
@ java.lang.Override public void configure () { factory ( ChangeUpdate.Factory . class ) ; factory ( ChangeDraftUpdate.Factory . class ) ; bind ( com.google.gerrit.server.IdentifiedUser . class ) . toInstance ( user ) ; }
private static com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > project ( com.google.gerrit.reviewdb.client.Project.NameKey project ) { return new com.google.gerrit.server.query.change.ProjectPredicate ( project . get () ) ; }
@ java.lang.Override public void execute ( java.lang.String sql ) throws com.google.gwtorm.server.OrmException { try { stmt . execute ( sql ) ; } catch ( java.sql.SQLException e ) { throw new com.google.gwtorm.server.OrmException ( ( STRING_CONSTANT + sql ) , e ) ; } }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onMatchBrackets ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . matchBrackets ( e . getValue () ) ; if ( ( view ) != null ) { view . getEditor () . setOption ( STRING_CONSTANT , prefs . matchBrackets () ) ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { schema = new com.google.gwtorm.schema.java.JavaSchemaModel ( com.google.gwtorm.data.PhoneBookDb . class ) ; people = schema . getRelation ( STRING_CONSTANT ) ; }
public void markKeyInvalid ( com.google.gerrit.reviewdb.client.Account.Id accountId , int seq ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { com.google.gerrit.server.account.VersionedAuthorizedKeys authorizedKeys = read ( accountId ) ; if ( authorizedKeys . markKeyInvalid ( seq ) ) { commit ( authorizedKeys ) ; } }
public com.google.gerrit.server.notedb.ChangeNotes notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { com.google.gerrit.reviewdb.client.Change c = change () ; notes = notesFactory . create ( db , c . getProject () , c . getId () ) ; } return notes ; }
protected static java.lang.String padTwo ( final int v ) { if ( v < NUMBER_CONSTANT ) { return STRING_CONSTANT + v ; } return java.lang.String . valueOf ( v ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.extensions.api.GerritApi . class ) . to ( com.google.gerrit.server.api.GerritApiImpl . class ) ; install ( new com.google.gerrit.server.api.Module () ) ; install ( new com.google.gerrit.server.api.Module () ) ; install ( new com.google.gerrit.server.api.Module () ) ; }
protected java.io.Writer startRenderText ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res , java.lang.String contentType ) throws java.io.IOException { setApiHeaders ( req , res , contentType ) ; return com.google.gitiles.BaseServlet . newWriter ( req , res ) ; }
public final void upsert ( final java.lang.Iterable < E > instances ) throws com.google.gwtorm.client.OrmException { doUpsert ( instances ) ; }
@ java.lang.Override public Project.NameKey getProjectNameKey () { return new com.google.gerrit.reviewdb.client.Project.NameKey ( change . get () . project ) ; }
public org.kohsuke.github.GitHub getHub ( ) throws java.io.IOException { if ( ( token ) == null ) { return null ; } else { return org.kohsuke.github.GitHub . connectUsingOAuth ( config.gitHubApiUrl , token.accessToken ) ; } }
protected < S extends com.google.gwt.event.shared.EventHandler > void fireEvent ( com.google.gwtjsonrpc.client.BaseRpcEvent < S > e ) { e.call = this ; com.google.gwtjsonrpc.client.JsonUtil . fireEvent ( e ) ; }
private void checkPreconditions ( javax.servlet.http.HttpServletRequest req ) throws com.google.gerrit.extensions.restapi.PreconditionFailedException { if ( STRING_CONSTANT . equals ( req . getHeader ( STRING_CONSTANT ) ) ) { throw new com.google.gerrit.extensions.restapi.PreconditionFailedException ( STRING_CONSTANT ) ; } }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void parseInvalidPrimaryStorage () { com.google.gerrit.server.notedb.NoteDbChangeState . parse ( new com.google.gerrit.reviewdb.client.Change.Id ( NUMBER_CONSTANT ) , STRING_CONSTANT ) ; }
public void setLinkName ( final java.lang.String name ) { this . name = name ; }
protected abstract void onLoad ( org.eclipse.jgit.revwalk.RevWalk walk ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException ;
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( ( event . getCharCode () ) == ( com.google.gwt.event.dom.client.KeyCodes.KEY_ENTER ) ) { doAddNew () ; } }
private net.sf.ehcache.constructs.blocking.SelfPopulatingCache startCacheSshKeys () { final net.sf.ehcache.Cache dc = com.google.gerrit.server.GerritServer.cacheMgr . getCache ( STRING_CONSTANT ) ; final net.sf.ehcache.constructs.blocking.SelfPopulatingCache r ; r = new net.sf.ehcache.constructs.blocking.SelfPopulatingCache ( dc , new com.google.gerrit.server.ssh.SshKeyCacheEntryFactory ( this ) ) ; com.google.gerrit.server.GerritServer.cacheMgr . replaceCacheWithDecoratedCache ( dc , r ) ; return r ; }
private static void checkLimit ( int limit , java.lang.String name ) { com.google.common.base.Preconditions . checkArgument ( ( limit > NUMBER_CONSTANT ) , STRING_CONSTANT , name , limit ) ; }
@ java.lang.Override public void postEvent ( com.google.gerrit.server.events.Event event , com.google.gerrit.reviewdb.server.ReviewDb db ) {}
protected static java.util.List < com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > > none () { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > any = any () ; return com.google.common.collect.ImmutableList . of ( not ( any ) ) ; }
void onLogout () { async . append ( log ( STRING_CONSTANT ) ) ; audit ( context . get () , STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override protected java.lang.Object createServiceHandle ( ) throws java.lang.Exception { return new com.google.gerrit.client.changes.ChangeDetailServiceImpl () ; }
private void autoReindexIfStale ( com.google.gerrit.server.query.change.ChangeData cd ) { autoReindexIfStale ( cd . project () , cd . getId () ) ; }
@ java.lang.Override public void run () { try { serverStarted . await () ; } catch ( java.lang.InterruptedException | java.util.concurrent.BrokenBarrierException e ) { throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override protected java.lang.String getRefName () { return com.google.gerrit.reviewdb.client.RefNames . refsDraftComments ( getChangeId () , author ) ; }
@ java.lang.Override public void applyFailed () { com.google.gwt.user.client.rpc.AsyncCallback < T > cb = delegate ; if ( cb != null ) { delegate = null ; result = null ; cb . onFailure ( failedThrowable ) ; } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ReviewInput result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( changeId ) ) ; }
private void logDebug ( java.lang.String msg , java.lang.Object . . . args ) { if ( com.google.gerrit.server.git.SubmoduleOp.log . isDebugEnabled () ) { com.google.gerrit.server.git.SubmoduleOp.log . debug ( ( ( orm . getSubmissionId () ) + msg ) , args ) ; } }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.httpd.GerritOptions . class ) . toInstance ( new com.google.gerrit.httpd.GerritOptions ( config , false , false , false ) ) ; }
@ java.lang.Override public short get () { return value ; }
private static com.google.gerrit.common.data.PermissionRule deny ( com.google.gerrit.common.data.GroupReference group ) { com.google.gerrit.common.data.PermissionRule rule = com.google.gerrit.server.schema.Schema_53 . rule ( group ) ; rule . setDeny () ; return rule ; }
private void hideTextBox () { if ( ( textBox ) != null ) { textBox . removeFromParent () ; textBox = null ; } textLabel . setVisible ( true ) ; }
public void assertSchemaVersion ( ) throws com.google.gwtorm.server.OrmException { final com.google.gerrit.reviewdb.client.CurrentSchemaVersion act = getSchemaVersion () ; org.junit.Assert . assertEquals ( schemaVersion . getVersionNbr () , act.versionNbr ) ; }
public static java.lang.String toUnified ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.client.DiffObject diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , project , diffBase , revision , fileName , null , NUMBER_CONSTANT ) ; }
public com.google.gerrit.extensions.registration.DynamicItem < T > get () { return new com.google.gerrit.extensions.registration.DynamicItem ( key , com.google.gerrit.extensions.registration.DynamicItemProvider . find ( injector , type ) , STRING_CONSTANT ) ; }
private static com.google.gerrit.client.reviewdb.AccountExternalId createId ( final com.google.gerrit.client.reviewdb.Account.Id newId , final com.google.gerrit.server.account.AuthRequest who ) { final java.lang.String ext = who . getExternalId () ; return new com.google.gerrit.client.reviewdb.AccountExternalId ( newId , new com.google.gerrit.client.reviewdb.AccountExternalId.Key ( ext ) ) ; }
com.google.gerrit.lucene.LuceneChangeIndex create ( com.google.gerrit.server.index.Schema < com.google.gerrit.server.query.change.ChangeData > schema , java.lang.String base ) ;
public void logout () { if ( ( val ) != null ) { manager . destroy ( key ) ; key = null ; val = null ; saveCookie () ; } }
private static boolean isNotSignedIn ( final java.lang.Throwable caught ) { return ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . equals ( NotSignedInException.MESSAGE ) ) ; }
public int getCount () { synchronized ( this ) { return count ; } }
@ java.lang.Override public synchronized void handleEmails () {}
@ java.lang.Override protected void onLoad () { super . onLoad () ; if ( useLoadPrev ) { loadPrev () ; } else { loadNext () ; } }
private com.google.gerrit.reviewdb.client.AccountGroup toAccountGroup ( org.apache.lucene.document.Document doc ) { com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid = new com.google.gerrit.reviewdb.client.AccountGroup.UUID ( doc . getField ( com.google.gerrit.server.index.group.GroupField.UUID . getName () ) . stringValue () ) ; return groupCache . get () . get ( uuid ) ; }
private boolean can ( com.google.gerrit.server.permissions.LabelPermission perm ) { return ! ( label ( perm . permissionName () ) . isEmpty () ) ; }
com.google.gerrit.server.git.GitModules create ( com.google.gerrit.reviewdb.client.Branch.NameKey project , com.google.gerrit.server.git.MergeOpRepoManager m ) ;
private void setDefaultFields ( javax.servlet.FilterConfig filterConfig ) throws javax.servlet.ServletException { setDefaultConfig ( filterConfig ) ; setDefaultRenderer ( filterConfig ) ; setDefaultUrls () ; setDefaultAccess () ; setDefaultVisibilityCache () ; setDefaultTimeCache () ; setDefaultBlameCache () ; setDefaultGitwebRedirect () ; }
@ java.lang.Override public void removeHandler () { com.google.gwtexpui.globalkey.client.GlobalKey.keys . remove ( key ) ; com.google.gwtexpui.globalkey.client.GlobalKey.keyApplication . remove ( key ) ; }
public void add ( com.google.inject.Injector . . . injectors ) { for ( com.google.inject.Injector i : injectors ) { add ( i ) ; } }
@ java.lang.Override public void init ( javax.servlet.FilterConfig filterConfig ) throws javax.servlet.ServletException {}
@ java.lang.Override public void start ( final org.apache.sshd.server.Environment env ) { startThread ( this : : runImp ) ; }
@ org.junit.Test public void testBackreference () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.google.gwtexpui.safehtml.client.LinkFindReplace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT ) ) ; }
private com.google.gerrit.server.notedb.ChangeNotes newNotes ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return notesFactory . create ( db , change . getProject () , change . getId () ) ; }
private void fail ( com.google.gerrit.reviewdb.client.Change change , java.lang.Throwable t ) { ok . set ( false ) ; failed . update ( NUMBER_CONSTANT ) ; }
@ java.lang.Override public void onMouseMove ( com.google.gwt.event.dom.client.MouseMoveEvent event ) { resizePaddingWidget () ; }
public java.util.List < T > toList () { if ( ( items ) == null ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } final java.util.List < T > r = new java.util.ArrayList < T > ( items ) ; items = null ; return r ; }
public java.lang.String getCoverLetter () { if ( ( changeMessage ) != null ) { return changeMessage . trim () ; } return STRING_CONSTANT ; }
static com.google.gerrit.extensions.restapi.Response < com.google.gerrit.extensions.common.ChangeInfo > cache ( com.google.gerrit.extensions.common.ChangeInfo res ) { return com.google.gerrit.extensions.restapi.Response . ok ( res ) . caching ( com.google.gerrit.extensions.restapi.CacheControl . PRIVATE ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) . setMustRevalidate () ) ; }
public static void deleteDraft ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String draftId , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( project , id , STRING_CONSTANT ) . id ( draftId ) . delete ( cb ) ; }
public static void addSmartcardDevice ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.bll.utils.VmDeviceUtils . addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . NewGuid () , vmId ) , VmDeviceGeneralType.SMARTCARD , VmDeviceType.SMARTCARD , new org.ovirt.engine.core.bll.smartcard.SmartcardSpecParams () , true , false , null ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUpGetDomainExpectations ( StorageType.NFS , true ) ; setUpGetConnectionExpectations () ; setUriInfo ( setUpBasicUriExpectations () ) ; verifyStorageDomain ( resource . get () ) ; }
private org.ovirt.engine.core.bll.gluster.ReplaceGlusterVolumeBrickCommand createTestCommand2 ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.ReplaceGlusterVolumeBrickCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeReplaceBrickActionParameters ( volumeId , null , getBricks ( volumeId , STRING_CONSTANT , NUMBER_CONSTANT ) . get ( NUMBER_CONSTANT ) ) , null ) ; }
@ java.lang.Override protected boolean canDoAction () { return checkQuotaValidationForAdd ( getParameters () . getQuota () , getReturnValue () . getCanDoActionMessages () ) ; }
private boolean validateSourceStorageDomain ( org.ovirt.engine.core.compat.Guid imageId , org.ovirt.engine.core.compat.Guid sourceDomainId ) { org.ovirt.engine.core.bll.validator.StorageDomainValidator validator = getValidator ( imageId , sourceDomainId ) ; return validate ( validator . isDomainExistAndActive () ) ; }
public org.ovirt.engine.core.bll.SPMAsyncTask CreateTask ( org.ovirt.engine.core.common.asynctasks.AsyncTaskType taskType , org.ovirt.engine.core.common.asynctasks.AsyncTaskParameters taskParameters ) { return org.ovirt.engine.core.bll.AsyncTaskFactory . Construct ( taskType , taskParameters , false ) ; }
public java.lang.String getKernelParams () { return vmStatic . getKernelParams () ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getVdsDao () ; existingVds = dao . get ( org.ovirt.engine.core.dao.VdsDAOTest.EXISTING_VDS_ID ) ; existingVds2 = dao . get ( org.ovirt.engine.core.dao.VdsDAOTest.EXISTING_VDS_ID_2 ) ; }
@ java.lang.Override public void Search () { if ( ( getEntity () ) != null ) { super . Search () ; } }
private org.ovirt.engine.ui.uicompat.UIConstants getConstants () { if ( ( constants ) == null ) { constants = org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getConstants () ; } return constants ; }
@ org.junit.Test public void validateSucceedsOnStoppedVolume () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StartGlusterVolumeProfileCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeParameters ( org.ovirt.engine.core.bll.gluster.StartGlusterVolumeProfileCommandTest.STOPPED_VOLUME_ID ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
public org.ovirt.engine.core.common.businessentities.DbUser lookupUserById ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( org.ovirt.engine.core.common.businessentities.DbUser . class , VdcQueryType.GetDbUserByUserId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , id . toString () ) ; }
@ java.lang.Override public void vdsMovedToMaintenance ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { processStorageOnVdsInactive ( vds ) ; } finally { org.ovirt.engine.core.bll.job.ExecutionHandler . updateSpecificActionJobCompleted ( vds . getId () , VdcActionType.MaintenanceVds , true ) ; } }
@ java.lang.Override public javax.ws.rs.core.Response allocateVm ( org.ovirt.engine.api.model.Action action ) { return doAction ( VdcActionType.AttachUserToVmFromPoolAndRun , new org.ovirt.engine.core.common.action.VmPoolUserParameters ( guid , getCurrent () . getUser () . getId () , false ) , action , new org.ovirt.engine.api.restapi.resource.BackendVmPoolResource.VmQueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetVmByVmId , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) ) ; }
public void setStorageFormat ( org.ovirt.engine.core.common.businessentities.StorageFormatType storageFormat ) { this . storageFormat = storageFormat ; }
public void start () { org.ovirt.engine.ui.uicommonweb.models.GridTimer.logger . fine ( ( ( STRING_CONSTANT + ( name ) ) + STRING_CONSTANT ) ) ; active = true ; scheduleRepeating ( getRefreshRate () ) ; }
@ org.junit.Test public void testGet () { setUriInfo ( setUpBasicUriExpectations () ) ; resource . setParent ( getCollectionResourceMock () ) ; org.ovirt.engine.api.model.Hook hook = resource . get () ; assertEquals ( org.ovirt.engine.api.restapi.resource.BackendHostHookResourceTest.EVENT_2_NAME , hook . getEventName () ) ; }
@ org.junit.Test public void getAllForForConnection () { org.ovirt.engine.core.common.businessentities.StorageServerConnections conn = dao . get ( existingConnection . getId () ) ; conn . setId ( STRING_CONSTANT ) ; dao . save ( conn ) ; assertGetAllForConnectionResult ( java.util.Arrays . asList ( existingConnection , conn ) , existingConnection ) ; }
public static org.ovirt.engine.ui.uicommonweb.models.vms.NewGuideVmInterfaceModel createInstance ( org.ovirt.engine.core.common.businessentities.VmBase vm , org.ovirt.engine.core.compat.Version clusterCompatibilityVersion , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > vmNicList , org.ovirt.engine.ui.uicommonweb.models.EntityModel sourceModel ) { org.ovirt.engine.ui.uicommonweb.models.vms.NewGuideVmInterfaceModel instance = new org.ovirt.engine.ui.uicommonweb.models.vms.NewGuideVmInterfaceModel ( vm , clusterCompatibilityVersion , vmNicList , sourceModel ) ; instance . init () ; return instance ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false , false ) ; control . replay () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.util.concurrent.Future < java.util.Map < java.lang.String , java.lang.Object > > setupNetworks ( java.util.Map networks , java.util.Map bonds , java.util.Map options ) { return vdsServer . futureSetupNetworks ( networks , bonds , options ) ; }
@ java.lang.Override public java.lang.Long getRawValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { java.lang.Integer totalSpace = object . getTotalDiskSize () ; return totalSpace == null ? null : java.lang.Long . valueOf ( totalSpace ) ; }
public void setupNetworks () { if ( ( getWindow () ) != null ) { return; } org.ovirt.engine.ui.uicommonweb.models.hosts.HostSetupNetworksModel setupNetworksWindowModel = new org.ovirt.engine.ui.uicommonweb.models.hosts.HostSetupNetworksModel ( this , getEntity () ) ; setWindow ( setupNetworksWindowModel ) ; }
@ java.lang.Override protected boolean validate () { return ( super . validate () ) && ( validate ( validateInputForDuplication () ) ) ; }
public short nextShort () { return ( ( short ) ( nextInt () ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { mappings . setExplanation ( model . getInterfaceMappingsExplanation () . getEntity () ) ; }
protected org.ovirt.engine.core.common.scheduling.ClusterPolicy getSchedulingPolicy () { return getEntity ( new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetClusterPolicyById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , false ) ; }
public org.ovirt.engine.core.common.businessentities.network.VnicProfile getProfile () { return null ; }
private < T extends org.ovirt.engine.core.common.businessentities.BusinessEntity < org.ovirt.engine.core.compat.Guid > > java.lang.String getHostName ( T entity ) { if ( entity instanceof org.ovirt.engine.core.common.businessentities.VDS ) { return STRING_CONSTANT + ( ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( entity ) ) . getName () ) ; } return STRING_CONSTANT ; }
protected boolean isVmTemplateWithSameNameExist () { return org.ovirt.engine.core.bll.VmTemplateCommand . isVmTemlateWithSameNameExist ( getParameters () . getVmTemplate () . getName () ) ; }
@ java.lang.Override public void setEntity ( java.lang.Object value ) { super . setEntity ( value ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , org.ovirt.engine.core.common.utils.Pair < java.lang.String , java.lang.String > > getSharedLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.ImportVmCommand . getParameters () . getContainerId () . toString () , org.ovirt.engine.core.bll.LockMessagesMatchUtil . makeLockingPair ( LockingGroup.REMOTE_VM , org.ovirt.engine.core.bll.ImportVmCommand . getVmIsBeingImportedMessage () ) ) ; }
public void setmem_commited ( java.lang.Integer value ) { this . mVdsDynamic . setmem_commited ( value ) ; calculateFreeVirtualMemory () ; }
@ org.junit.Test public void isNetworkDeviceNonNetworkFree () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.ovirt.engine.core.common.businessentities.HostDevice hostDevice = getSingleMockedNonFreeDevice () ; org.junit.Assert . assertFalse ( networkDeviceHelper . isDeviceNetworkFree ( hostDevice ) ) ; }
public void cancel () { setWindow ( null ) ; org.ovirt.engine.ui.frontend.Frontend . Unsubscribe () ; }
private void setVisibilityToChangedFieldsExpander ( boolean flag ) { changedFieldsPanel . setVisible ( flag ) ; changedFieldsPanelTitle . setVisible ( flag ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object ReturnValue ) { setItems ( ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( ReturnValue ) ) . getReturnValue () ) ) ) ; }
@ java.lang.Override protected java.lang.String extractNameFromEntity ( org.ovirt.engine.core.common.businessentities.VM entity ) { return entity . getName () ; }
private void raiseQueryCompleteEvent ( final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryType > queryTypeList , final java.lang.Object context ) { for ( org.ovirt.engine.core.common.queries.VdcQueryType queryType : queryTypeList ) { raiseQueryCompleteEvent ( queryType , context ) ; } }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testGetAllForStoragePoolWithNoPermissions () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePool ( existingVds . getStoragePoolId () , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.ovirt.engine.core.dao.VdsDAOTest . assertIncorrectGetResult ( result ) ; }
private java.lang.String getPostUpdateOvfStoreDescription ( long size ) { if ( ( postUpdateDescription ) == null ) { postUpdateDescription = generateOvfStoreDescription ( updateDate , true , size ) ; } return postUpdateDescription ; }
public java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > getImageToDestinationDomainMap () { updateImageToDestinationDomainMap () ; return imageToDestinationDomainMap ; }
protected org.ovirt.engine.core.common.businessentities.DiskImage cloneDiskImage ( org.ovirt.engine.core.compat.Guid newImageGuid ) { return cloneDiskImage ( newImageGuid , getDiskImage () ) ; }
private static org.ovirt.engine.core.bll.storage.pool.RemoveStoragePoolCommand < org.ovirt.engine.core.common.action.StoragePoolParametersBase > createCommand ( org.ovirt.engine.core.common.action.StoragePoolParametersBase param ) { return new org.ovirt.engine.core.bll.storage.pool.RemoveStoragePoolCommand ( param , null ) ; }
@ org.junit.Test public void testIsNotUp () { mockHostForActivation ( VDSStatus.Down ) ; org.junit.Assert . assertThat ( validator . isUp () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_VDS_STATUS_ILLEGAL , STRING_CONSTANT ) ) ; }
@ org.junit.Test public void testGet () { setUpGetVmHostDevicesExpectations () ; org.ovirt.engine.api.model.HostDevice device = resource . get () ; verifyHostDevice ( device ) ; }
@ javax.annotation.PostConstruct protected final void postConstruct () { if ( ( getParameters () ) != null ) { init () ; } }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return NUMBER_CONSTANT ; } return source ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > siblingVlanInterfaces = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; return ! ( siblingVlanInterfaces . isEmpty () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase getParameters ( org.ovirt.engine.api.model.Qos incoming , org.ovirt.engine.core.common.businessentities.qos.QosBase entity ) { org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.QosBase > parameters = new org.ovirt.engine.core.common.action.QosParametersBase () ; parameters . setQosId ( guid ) ; parameters . setQos ( map ( incoming , entity ) ) ; return parameters ; }
public java.lang.String getSearchString () { return searchString ; }
protected boolean isVmWithSameNameExistStatic () { return org.ovirt.engine.core.bll.VmHandler . isVmWithSameNameExistStatic ( org.ovirt.engine.core.bll.IsVmWithSameNameExistQuery . getParameters () . getName () ) ; }
@ org.junit.Test public void validateFailsIfHostDoesNotExists () { org.mockito.Mockito . when ( vdsDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( null ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_HOST_NOT_EXIST ) ; }
protected abstract org.ovirt.engine.core.common.vdscommands.DeleteImageGroupVDSCommandParameters buildDeleteMemoryImageParams ( java.util.List < org.ovirt.engine.core.compat.Guid > guids ) ;
protected boolean checkStorageDomainInDb () { return ( org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStorageDomainStaticDAO () . get ( org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStorageDomain () . getId () ) ) != null ; }
protected boolean checkDerivedDisksFromDiskNotExist ( org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage ) { return validate ( createDiskImagesValidator ( diskImage ) . diskImagesHaveNoDerivedDisks ( org.ovirt.engine.core.bll.RemoveDiskCommand . getParameters () . getStorageDomainId () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.uicommonweb.models.ListModel < java.lang.String > createGhostValue () { org.ovirt.engine.ui.uicommonweb.models.ListModel < java.lang.String > value = new org.ovirt.engine.ui.uicommonweb.models.ListModel () ; value . setItems ( suggestions ) ; value . setSelectedItem ( STRING_CONSTANT ) ; return value ; }
public org.ovirt.vdsm.jsonrpc.client.ResponseBuilder withError ( java.util.Map < java.lang.String , java.lang.Object > error ) { this . error = org.ovirt.vdsm.jsonrpc.client.ResponseBuilder.OBJECT_MAPPER . valueToTree ( error ) ; return this ; }
protected org.ovirt.engine.core.common.vdscommands.VDSReturnValue getStatsForDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return runVdsCommand ( VDSCommandType.GetStorageDomainStats , new org.ovirt.engine.core.common.vdscommands.GetStorageDomainStatsVDSCommandParameters ( org.ovirt.engine.core.bll.storage.UpdateStorageServerConnectionCommand . getVds () . getId () , storageDomain . getId () ) ) ; }
public static < T extends org.ovirt.engine.core.common.businessentities.BusinessEntity < ID > , ID extends java.io.Serializable & java.lang.Comparable < ? super ID > > org.ovirt.engine.core.common.businessentities.comparators.BusinessEntityComparator < T , ID > newInstance () { return new org.ovirt.engine.core.common.businessentities.comparators.BusinessEntityComparator () ; }
@ java.lang.Override public boolean isValid ( java.lang.String name , javax.validation.ConstraintValidatorContext context ) { return ( name == null ) || ( org.ovirt.engine.core.common.utils.ValidationUtils . validHostname ( name ) ) ; }
public void setSession ( org.ovirt.engine.core.common.businessentities.SessionState value ) { this . vmDynamic . setSession ( value ) ; }
public static org.ovirt.engine.core.searchbackend.ISyntaxChecker CreateBackendSyntaxChecker ( java.lang.String AuthenticationMethod ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.ConfigAuthenticationMethod = AuthenticationMethod ; if ( ( org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ) == null ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker = new org.ovirt.engine.core.searchbackend.SyntaxChecker ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > GetValue ( ConfigValues.SearchResultsLimit ) ) ; } return org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ; }
private org.ovirt.engine.api.model.Link masterLink ( java.lang.String id ) { org.ovirt.engine.api.model.Link master = new org.ovirt.engine.api.model.Link () ; master . setRel ( STRING_CONSTANT ) ; master . setHref ( idToHref ( id ) ) ; return master ; }
@ org.junit.Test public void getCustomValueFromEmptyMap () { final java.lang.String s = b . getCustomValue ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.NAME ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , s ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain dom ) { return ( ( dom . getstatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) || ( ( dom . getstatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Locked ) ) ; }
public void setstatus ( org.ovirt.engine.core.common.businessentities.VMStatus value ) { this . mVmDynamic . setstatus ( value ) ; }
@ org.junit.Test public void add () { runAddAndVerify ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.OS_ID , true ) ; }
@ java.lang.Override public boolean isAllowSnapshot () { return ! ( isShareable () ) ; }
@ org.junit.Test public void vmNotDuringSnapshotReturnsInvalidResultWhenInSnapshot ( ) throws java.lang.Exception { org.mockito.Mockito . when ( snapshotDao . exists ( vmId , SnapshotStatus.LOCKED ) ) . thenReturn ( true ) ; org.ovirt.engine.core.bll.snapshots.SnapshotsValidatorTest . validateInvalidResult ( validator . vmNotDuringSnapshot ( vmId ) , VdcBllMessages.ACTION_TYPE_FAILED_VM_IS_DURING_SNAPSHOT ) ; }
public static < T > T getValue ( org.ovirt.engine.core.common.config.ConfigValues value ) { return org.ovirt.engine.core.common.config.Config . < T > getValue ( value , ConfigCommon.defaultConfigurationVersion ) ; }
@ org.junit.Test public void testGetByNameAndDataCenter () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByNameAndDataCenter ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME , datacenter ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME , result . getName () ) ; }
protected void addDevices ( java.util.Map < java.lang.String , java.lang.Object > vmInfo , long fetchTime ) { org.ovirt.engine.core.vdsbroker.monitoring.VmDevicesMonitoring.Change change = vmDevicesMonitoring . createChange ( fetchTime ) ; change . updateVmFromFullList ( vmInfo ) ; change . flush () ; }
private void fetchImageTemplates () { if ( ( imageTemplates ) == null ) { imageTemplates = org.ovirt.engine.core.bll.ImagesHandler . filterImageDisks ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getDiskDao () . getAllForVm ( org.ovirt.engine.core.bll.RemoveVmTemplateCommand . getVmTemplateId () ) , false , false , true ) ; } }
@ java.lang.Override public void setMessage ( java.lang.String message ) { messagePanel . setText ( ( message != null ? message . replace ( STRING_CONSTANT , STRING_CONSTANT ) : STRING_CONSTANT ) ) ; }
@ java.lang.Override public void remove ( java.lang.String id ) { execute ( getClient () . networks () . delete ( id ) ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( java.lang.String . format ( STRING_CONSTANT , VdsmEnv.CONFIG_PREFIX ) , java.lang.Integer . toString ( _vds . getPort () ) ) ; return true ; }
@ org.junit.Test public void testAuditLogMacInUseUnplug () { final org.ovirt.engine.core.common.businessentities.network.VmNic iface = org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () ; vmInterfaceManager . auditLogMacInUseUnplug ( iface , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.VM_NAME ) ; verifyCommonAuditLogFilledProperly ( AuditLogType.MAC_ADDRESS_IS_IN_USE_UNPLUG , iface ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.VM_NAME , auditLogableCaptor . getValue () . getVmName () ) ; }
protected java.util.Set < org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor < java.lang.Object > > getExtraConfigDescriptors () { return java.util.Collections . emptySet () ; }
private static org.ovirt.engine.core.common.action.InstallVdsParameters createParameters () { org.ovirt.engine.core.common.action.InstallVdsParameters param = new org.ovirt.engine.core.common.action.InstallVdsParameters ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; param . setIsReinstallOrUpgrade ( true ) ; return param ; }
public void setmem_shared ( java.lang.Long value ) { this . mVdsStatistics . setmem_shared ( value ) ; }
protected void buildSendDataToVdsm () { sendInfo . put ( STRING_CONSTANT , org.ovirt.engine.core.vdsbroker.vdsbroker.HotPlugDiskVDSCommand . getParameters () . getVmId () . toString () ) ; sendInfo . put ( STRING_CONSTANT , initDriveData () ) ; }
private void printSuccessMessage ( java.lang.String domainName , java.lang.String action ) { java.lang.System.out . println ( SERVICE_RESTART_MESSAGE ) ; }
@ java.lang.Override public void setId ( org.ovirt.engine.core.compat.Guid id ) { getStorageStaticData () . setId ( id ) ; getStorageDynamicData () . setId ( id ) ; getStoragePoolIsoMapData () . setstorage_id ( id ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Bookmark > getAll () { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = new org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkSqlParameterSource () ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkRowMapper.instance , parameterSource ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.RemoveDiskCommand . getParameters () . getEntityId () . toString () , LockingGroup.DISK . name () ) ; }
@ org.junit.Test ( expected = java.io.IOException . class ) public void testWriteFileToStream_IOException ( ) throws java.io.IOException { java.io.File file = new java.io.File ( STRING_CONSTANT ) ; java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream () ; org.ovirt.engine.core.utils.servlet.ServletUtils . writeFileToStream ( out , file ) ; }
@ java.lang.Override public void edit ( final org.ovirt.engine.ui.uicommonweb.models.profiles.VnicProfileModel profile ) { driver . edit ( profile ) ; }
@ java.lang.Override protected void onEntityChanged () { super . onEntityChanged () ; if ( ( getEntity () ) != null ) { updateDataCenterVersion () ; getSearchCommand () . execute () ; updateIsDiskHotPlugAvailable () ; } updateActionAvailability () ; }
public boolean isHibernating () { return ( this ) == ( org.ovirt.engine.core.common.businessentities.VMStatus.SavingState ) ; }
@ java.lang.Override protected void onReveal () { super . onReveal () ; setInSlot ( org.ovirt.engine.ui.webadmin.section.main.presenter.HeaderPresenterWidget.TYPE_SetSearchPanel , searchPanel ) ; setInSlot ( org.ovirt.engine.ui.webadmin.section.main.presenter.HeaderPresenterWidget.TYPE_SetTabBar , tabBar ) ; configureFeedbackUrl () ; }
@ org.junit.Test public void testGetVmIconByDataUrlWithInvalidUrl () { final java.util.List < org.ovirt.engine.core.common.businessentities.VmIcon > result = dao . getByDataUrl ( ( ( org.ovirt.engine.core.dao.VmIconDaoTest.OTHER_SMALL_DATAURL ) + STRING_CONSTANT ) ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.Network object ) { return object . getdescription () ; }
public static < T > T GetValue ( org.ovirt.engine.core.common.config.ConfigValues value ) { return org.ovirt.engine.core.common.config.Config . < T > getValue ( value , ConfigCommon.defaultConfigurationVersion ) ; }
protected < C extends org.ovirt.engine.api.model.ActionableResource > C addActions ( C model ) { org.ovirt.engine.api.restapi.util.LinkHelper . addActions ( model , this ) ; return model ; }
public java.lang.String load ( java.util.Properties configuration ) { return loadImpl ( configuration , null ) ; }
@ java.lang.Override public java.lang.String toString () { return java.lang.String . format ( STRING_CONSTANT , super . toString () , ( ( getVm () ) == null ? STRING_CONSTANT : getVm () . getName () ) , getNic () , getVmDevice () ) ; }
protected void setupForStorageTests () { org.mockito.Mockito . doReturn ( multipleSdValidator ) . when ( command ) . getStorageDomainsValidator ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . any () ) ; }
@ org.junit.Test public void validateOkSucceeds ( ) throws java.lang.Exception { parameters . setId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.stepId ) ; parameters . setJobId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.jobId ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.Override public void Executed ( org.ovirt.engine.ui.uicompat.FrontendMultipleActionAsyncResult result ) { org.ovirt.engine.ui.uicommonweb.models.disks.DiskListModel localModel = ( ( org.ovirt.engine.ui.uicommonweb.models.disks.DiskListModel ) ( result . getState () ) ) ; localModel . StopProgress () ; Cancel () ; }
private org.ovirt.engine.core.common.businessentities.Network getNetwork () { if ( ( network ) == null ) { network = org.ovirt.engine.core.bll.UpdateNetworkOnClusterCommand . getNetworkDAO () . get ( getNetworkCluster () . getnetwork_id () ) ; } return network ; }
private void initializeVmDAOMock ( org.ovirt.engine.core.common.businessentities.VM vm ) { org.mockito.Mockito . when ( vmDAO . get ( org.mockito.Matchers . < org.ovirt.engine.core.compat.Guid > any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( vm ) ; }
public java.util.Map < java.lang.String , java.lang.Object > getDeviceList ( int storageType ) ;
@ java.lang.Override protected void endWithFailure () { HandleEndAction () ; }
@ org.junit.Test public void versionDecreaseWithHost () { createCommandWithOlderVersion () ; setupCpu () ; vdsExist () ; validateFailedWithReason ( EngineMessage.ACTION_TYPE_FAILED_CANNOT_DECREASE_CLUSTER_WITH_HOSTS_COMPATIBILITY_VERSION ) ; }
@ org.junit.Test public void testGetAllVfsConfigByHostId () { java.util.List < org.ovirt.engine.core.common.businessentities.network.HostNicVfsConfig > vfsConfigs = dao . getAllVfsConfigByHostId ( org.ovirt.engine.core.dao.network.HostNicVfsConfigDaoTest.HOST_ID ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , vfsConfigs . size () ) ; }
public void setStorage ( java.lang.String storage ) { getStorageStaticData () . setStorage ( storage ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { spice . setWANColorDepth ( ( ( org.ovirt.engine.ui.uicommonweb.models.vms.WanColorDepth ) ( returnValue ) ) ) ; }
public void setTotalDiskSize ( java.lang.Integer value ) { totalDiskSize = value ; }
public static < T > org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor < T > mockConfig ( org.ovirt.engine.core.common.config.ConfigValues value , org.ovirt.engine.core.compat.Version version , T returnValue ) { return new org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor ( value , version . toString () , returnValue ) ; }
public static void RunMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { org.ovirt.engine.ui.frontend.Frontend . RunMultipleAction ( actionType , parameters , null , null ) ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return ( java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . getvm_mem_size_mb () ) ) + STRING_CONSTANT ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid createTask ( org.ovirt.engine.core.compat.Guid taskId , org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo asyncTaskCreationInfo , org.ovirt.engine.core.common.action.VdcActionType parentCommand , org.ovirt.engine.core.common.VdcObjectType vdcObjectType , org.ovirt.engine.core.compat.Guid . . . entityIds ) { return super . createTask ( taskId , asyncTaskCreationInfo , parentCommand , vdcObjectType , entityIds ) ; }
public void initConfiguredWithDefaultMinValue () { org.ovirt.engine.core.common.config.IConfigUtilsInterface configUtils = initConfigUtils () ; org.mockito.Mockito . when ( configUtils . getValue ( ConfigValues.ConnectToServerTimeoutInSeconds , ConfigCommon.defaultConfigurationVersion ) ) . thenReturn ( org.ovirt.engine.core.common.utils.ConfiguredRangeValidatorTest.TEST_MIN_RANGE ) ; org.ovirt.engine.core.common.config.Config . setConfigUtils ( configUtils ) ; }
@ org.junit.Before public void setup () { param = new org.ovirt.engine.core.common.action.AttachNetworkToClusterParameter ( getExistingCluster () , getNetwork () ) ; underTest = new org.ovirt.engine.core.bll.network.cluster.AttachNetworkToClusterInternalCommandTest.TestAttachNetworkToClusterCommand ( param ) ; }
@ java.lang.Override public boolean getIsAvailable () { return ( getDetailModel () . getExternalId () ) != null ; }
@ org.junit.Test public void defaultEndtime () { final long epochOffset = NUMBER_CONSTANT ; final org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase t = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase () ; org.junit.Assert . assertEquals ( epochOffset , t . getEndTime () ) ; }
@ java.lang.Override public void postModelEnabled ( boolean enabled ) { messageLabel . setVisible ( ( ! enabled ) ) ; }
public void sethost_name ( java.lang.String value ) { this . mVdsStatic . sethost_name ( value ) ; }
public java.lang.String getData ( java.lang.String format ) { return getDataTransfer () . getData ( format ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) {}
@ org.ovirt.api.metamodel.annotations.Out types.Vm vm ( ) ;
@ org.junit.Test public void passthroughProfileContainsPortMirroring () { passthroughProfileContainsSupportedPropertiesTest ( true , true , null , null ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_PASSTHROUGH_PROFILE_CONTAINS_NOT_SUPPORTED_PROPERTIES ) ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel createActionPanel ( org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel ( modelProvider , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
public boolean hasCdDevice ( org.ovirt.engine.core.compat.Guid vmId ) { return ! ( getCdDevices ( vmId ) . isEmpty () ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : NUMBER_CONSTANT ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliInstall () ; return true ; }
boolean validate ( ) ;
private org.springframework.jdbc.core.namedparam.MapSqlParameterSource createNetworkParametersMapper ( org.ovirt.engine.core.compat.Guid vfsConfigId , org.ovirt.engine.core.compat.Guid networkId ) { return getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vfsConfigId ) . addValue ( STRING_CONSTANT , networkId ) ; }
private java.lang.String removeStorageServerConnection ( org.ovirt.engine.core.common.businessentities.StorageServerConnections cnx , org.ovirt.engine.core.compat.Guid hostId ) { return performAction ( VdcActionType.RemoveStorageServerConnection , new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase ( cnx , hostId , false ) , java.lang.String . class ) ; }
public static java.lang.String getDisplayStringForPluginName ( java.lang.String pluginName ) { try { return org.ovirt.engine.ui.uicompat.EnumTranslator . createAndTranslate ( org.ovirt.engine.core.common.businessentities.OpenstackNetworkPluginType . valueOf ( pluginName ) ) ; } catch ( java.lang.Exception e ) { return pluginName == null ? new java.lang.String () : pluginName ; } }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > externalVmModel ) { return externalVmModel . getEntity () . getName () ; }
private void verifyCertificate ( org.ovirt.engine.api.model.Vm model ) { assertNotNull ( model . getDisplay () ) ; assertNotNull ( model . getDisplay () . getCertificate () ) ; assertEquals ( org.ovirt.engine.api.restapi.resource.BackendVmResourceTest.CERTIFICATE , model . getDisplay () . getCertificate () . getSubject () ) ; }
@ java.lang.Override public void execute () { doAutoSelect = true ; }
protected org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface lookupInterfaceByName ( java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface : getCollection () ) { if ( iface . getName () . equals ( name ) ) { return iface ; } } return null ; }
@ java.lang.Override public org.ovirt.engine.api.model.StorageConnectionExtension update ( org.ovirt.engine.api.model.StorageConnectionExtension incoming ) { org.ovirt.engine.api.restapi.resource.QueryIdResolver resolver = new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetStorageServerConnectionExtensionById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) ; return performUpdate ( incoming , resolver , VdcActionType.UpdateStorageServerConnectionExtension , new org.ovirt.engine.api.restapi.resource.BackendStorageServerConnectionExtensionResource.UpdateParametersProvider () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public org.ovirt.vdsm.jsonrpc.client.RequestBuilder withOptionalParameterAsList ( java.lang.String name , java.util.List value ) { if ( ( value != null ) && ( ! ( value . isEmpty () ) ) ) { return withParameter ( name , value ) ; } return this ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getname () . equals ( getParameters () . getInterface () . getNetworkName () ) ; }
public void runQuery ( final org.ovirt.engine.core.common.queries.VdcQueryType queryType , final org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters , final org.ovirt.engine.ui.frontend.AsyncQuery callback ) { runQuery ( queryType , parameters , callback , false ) ; }
protected void mockNonInterestingMethodsForCloneVmFromSnapshot ( org.ovirt.engine.core.bll.AddVmFromSnapshotCommand < org.ovirt.engine.core.common.action.AddVmFromSnapshotParameters > cmd ) { mockUninterestingMethods ( cmd ) ; org.mockito.Mockito . doReturn ( true ) . when ( cmd ) . checkCpuSockets () ; org.mockito.Mockito . doReturn ( null ) . when ( cmd ) . getVmFromConfiguration () ; }
public void countAllTemplates ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter () { @ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetVmTemplateCount , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , aQuery ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { getView () . setTestResultImage ( ( ( java.lang.String ) ( model . getTestResult () . getEntity () ) ) ) ; }
@ java.lang.Override protected java.lang.String composeRegex () { return ( ( start () ) + ( hostnameOrIp () ) ) + ( end () ) ; }
public org.ovirt.engine.core.common.queries.VdcQueryParametersBase getParameters () { return parameters ; }
@ java.lang.Override public org.ovirt.engine.api.model.Watchdog update ( org.ovirt.engine.api.model.Watchdog watchdog ) { return performUpdate ( watchdog , new org.ovirt.engine.api.restapi.resource.BackendVmWatchdogResource.WatchdogResolver () , VdcActionType.UpdateWatchdog , new org.ovirt.engine.api.restapi.resource.BackendVmWatchdogResource.UpdateParametersProvider () ) ; }
@ java.lang.Override public java.util.SortedSet < java.lang.String > convert ( java.lang.Object returnValue ) { java.util.SortedSet < java.lang.String > sortedSet = new java.util.TreeSet ( new org.ovirt.engine.core.common.businessentities.comparators.LexoNumericComparator () ) ; sortedSet . addAll ( ( ( java.util.Collection < java.lang.String > ) ( returnValue ) ) ) ; return sortedSet ; }
private void setUpParentMock ( org.ovirt.engine.api.restapi.resource.BackendHostsResource parent ) { parent . setBackend ( backend ) ; parent . setMappingLocator ( mapperLocator ) ; parent . setMessageBundle ( messageBundle ) ; parent . setHttpHeaders ( httpHeaders ) ; }
@ java.lang.Override protected void endSuccessfully () { removeImage ( org.ovirt.engine.core.bll.MoveImageGroupCommand . getParameters () . getSourceDomainId () ) ; super . endSuccessfully () ; }
public static java.lang.String getEngineSSHPublicKey () { return org.ovirt.engine.core.utils.crypt.OpenSSHUtils . getKeyString ( org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils . getCertificate () . getPublicKey () , org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.SSHKeyAlias ) ) ; }
public static boolean isImagesExists ( java.lang.Iterable < org.ovirt.engine.core.common.businessentities.DiskImage > images , org.ovirt.engine.core.compat.Guid storagePoolId ) { return org.ovirt.engine.core.bll.ImagesHandler . isImagesExists ( images , storagePoolId , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > () ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.HostNIC populate ( org.ovirt.engine.api.model.HostNIC model , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface entity ) { return parent . addStatistics ( model , entity , uriInfo , httpHeaders ) ; }
@ java.lang.Override public T get ( ID id ) { if ( id == null ) { return null ; } else { return org.ovirt.engine.core.dao.DefaultReadDao . getCallsHandler () . executeRead ( getProcedureNameForGet () , createEntityRowMapper () , createIdParameterMapper ( id ) ) ; } }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase eval ( org.ovirt.engine.core.common.businessentities.VmStatic vm ) { org.ovirt.engine.core.common.action.MigrateVmToServerParameters parameters = new org.ovirt.engine.core.common.action.MigrateVmToServerParameters ( false , vm . getId () , vds . getId () ) ; parameters . setShouldBeLogged ( false ) ; return parameters ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Disk > getAllForVm ( org.ovirt.engine.core.compat.Guid id ) { return getAllForVm ( id , false ) ; }
@ org.junit.Before public void setup () { host = new org.ovirt.engine.core.common.businessentities.VDS () ; validator = new org.ovirt.engine.core.bll.validator.UpgradeHostValidator ( host ) ; }
@ java.lang.Override protected void beforeTask () {}
private org.ovirt.engine.core.common.businessentities.VdsNetworkInterface createBond ( java.lang.String name , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . NewGuid () , name , true , null , null , networkName , true ) ; }
@ java.lang.Override protected void beforeLogin () { org.ovirt.engine.ui.userportal.uicommon.model.UserPortalModelInitEvent . fire ( eventBus ) ; }
@ org.junit.Test public void moveDiskToGluster () { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initSrcStorageDomain () ; initDestStorageDomain ( StorageType.GLUSTERFS ) ; initVmDiskImage ( false ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setProviders ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider > ) ( returnValue ) ) ) ; org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getDataCenterList ( dcQuery ) ; }
@ java.lang.Override public void update ( org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap map ) { updateStatus ( map . getId () , map . getStatus () ) ; }
public static synchronized boolean isImageDomain ( org.ovirt.engine.api.model.StorageDomain storageDomain ) { org.ovirt.engine.api.model.StorageDomainType type = storageDomain . getType () ; return ( type != null ) && ( type == ( org.ovirt.engine.api.model.StorageDomainType.IMAGE ) ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createBond ( java.lang.String name , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , name , true , null , null , null , networkName , true , null , false , null ) ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopGeoRepSessionCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeGeoRepSessionParameters ( null , null ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.network.Network x , org.ovirt.engine.core.common.businessentities.network.Network y ) { return x . getName () . compareTo ( y . getName () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase behavior = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase ) ( target ) ) ; behavior . setMaxVmsInPool ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; behavior . UpdateMaxNumOfVmCpus () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) { this . setItems ( ( ( java.util.List < P > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue () ) ) ) ; }
public org.ovirt.engine.core.common.businessentities.network.NetworkFilter resolveVnicProfileDefaultNetworkFilter () { if ( org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.EnableMACAntiSpoofingFilterRules ) ) { return networkFilterDao . getNetworkFilterByName ( NetworkFilter.VDSM_NO_MAC_SPOOFING ) ; } return null ; }
private void mockDaos () { mockDiskImageDao () ; mockStorageDomainDao () ; mockStoragePoolDao () ; mockDynamicVmDao () ; }
@ org.junit.Test public void interfaceBasedOnNullProposedVlan () { org.junit.Assert . assertFalse ( org.ovirt.engine.core.utils.NetworkUtils . interfaceBasedOn ( null , org.ovirt.engine.core.utils.NetworkUtilsTest.IFACE_NAME ) ) ; }
public void setDiskStorageMap ( java.util.HashMap < org.ovirt.engine.core.compat.Guid , java.util.ArrayList < org.ovirt.engine.core.compat.Guid > > value ) { diskStorageMap = value ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsUnmanagedNetwork ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertManaged ( iface , false , java.util.Collections . < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > emptyMap () ) ; }
@ java.lang.Override public int hashCode () { return getVm () . hashCode () ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( org.ovirt.engine.api.restapi.resource.AbstractBackendNetworkAttachmentResourceTest . setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public void CancelConfirmWithFocus () { setConfirmWindow ( null ) ; org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel hostModel = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel ) ( getWindow () ) ) ; hostModel . setIsPowerManagementTabSelected ( true ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml statusWithAlertTemplate ( com.google.gwt.safehtml.shared.SafeHtml statusImage , com.google.gwt.safehtml.shared.SafeHtml alertImage , java.lang.String id ) ;
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; existingVds = dao . get ( FixturesTool.HOST_ID ) ; existingVds2 = dao . get ( FixturesTool.VDS_RHEL6_NFS_SPM ) ; newVmId = org.ovirt.engine.core.compat.Guid . newGuid () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.ExternalDiscoveredHost > hosts ) { org.ovirt.engine.ui.uicommonweb.models.ListModel externalDiscoveredHostsListModel = getExternalDiscoveredHosts () ; externalDiscoveredHostsListModel . setItems ( hosts ) ; externalDiscoveredHostsListModel . setIsChangeable ( true ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.NetworkView object ) { return ( object . getProvidedBy () ) == null ? new java.lang.String () : object . getProviderName () ; }
@ java.lang.Override protected void failedToRunVm () { if ( ( org.ovirt.engine.core.bll.MigrateVmCommand . getVm () . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VMStatus.Up ) ) { super . failedToRunVm () ; } }
protected void proceedProxyReturnValue () { proceedConnectProxyReturnValue () ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.DbUser > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance ) ; }
@ org.junit.Test public void testGetByNameForPrivilegedUser () { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . getByName ( existingVdsGroup . getName () , org.ovirt.engine.core.dao.PRIVILEGED_USER_ID , false ) ; assertCorrectVDSGroup ( result ) ; }
private com.google.gwt.user.client.ui.SplitLayoutPanel createRootPanel () { com.google.gwt.user.client.ui.SplitLayoutPanel rootPanel = new com.google.gwt.user.client.ui.SplitLayoutPanel () ; rootPanel . setHeight ( STRING_CONSTANT ) ; rootPanel . setWidth ( STRING_CONSTANT ) ; return rootPanel ; }
@ java.lang.Override protected boolean validate () { boolean validate = super . validate () ; if ( ! validate ) { auditLogDirector . log ( this , AuditLogType.USER_MOVED_VM_DISK_FINISHED_FAILURE ) ; } return validate ; }
@ java.lang.Override public long getSize () { return getImage () . getSize () ; }
@ org.junit.Test public void sparsifyNotSupportedWhenWipeAfterDeleteIsOn () { createStorageDomainForDisk ( StorageType.ISCSI ) ; disk . setWipeAfterDelete ( true ) ; org.junit.Assert . assertThat ( validator . isSparsifySupported () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_DISK_SPARSIFY_NOT_SUPPORTED_BY_UNDERLYING_STORAGE_WHEN_WAD_IS_ENABLED ) ) ; }
protected void updateIteration () { refreshIteration = ( ++ ( refreshIteration ) ) % ( org.ovirt.engine.core.vdsbroker.VMStatsRefresher.NUMBER_VMS_REFRESHES_BEFORE_SAVE ) ; }
@ org.ovirt.engine.ui.common.widget.table.cell.Template ( value = STRING_CONSTANT + STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml input ( java.lang.String value , java.lang.String customStyle , java.lang.String id ) ;
@ org.junit.AfterClass public static void cleanUp () { if ( ( org.ovirt.engine.core.uutils.ssh.TransferTest.local1 ) != null ) { if ( ! ( org.ovirt.engine.core.uutils.ssh.TransferTest.local1 . delete () ) ) {} org.ovirt.engine.core.uutils.ssh.TransferTest.local1 = null ; } }
@ org.junit.Test public void testValidateVmUpHostCapable () { prepareForVmValidatorTests () ; cmd . getVm () . setStatus ( VMStatus.Up ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( cmd ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.hosts.MoveHost moveHost = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.MoveHost ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; moveHost . PostGetHostList ( hosts ) ; }
private void raiseQueryCompleteEvent ( final org.ovirt.engine.core.common.queries.VdcQueryType queryType , final java.lang.String context ) { raiseQueryEvent ( getQueryCompleteEvent () , queryType , context ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.Quota quota , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
private void init () { org.ovirt.engine.core.dal.dbbroker.DbFacade.log . info ( STRING_CONSTANT ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.instance = this ; }
@ org.junit.Test public void testGetWindowsOss ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , OsRepositoryImpl.INSTANCE . getWindowsOss () . size () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain dom ) { return ( ( dom . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) || ( ( dom . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Locked ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { editedVm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( result ) ) ; vmInitLoaded ( editedVm ) ; }
@ java.lang.Override public void onSuccess ( final org.ovirt.engine.core.common.action.VdcReturnValueBase result ) { org.ovirt.engine.ui.frontend.Frontend.logger . finer ( STRING_CONSTANT ) ; callback . getDel () . onSuccess ( result ) ; }
public boolean isOvfTemplate ( java.lang.String ovfstring ) throws org.ovirt.engine.core.utils.ovf.OvfReaderException { return ovfManager . isOvfTemplate ( ovfstring ) ; }
@ org.junit.Test public void areAllVfsFreeFalseAttachedToVm () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertFalse ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VM getValue ( org.ovirt.engine.core.common.businessentities.VM object ) { return object ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.VDSGroup , org.ovirt.engine.core.common.businessentities.network.NetworkCluster > arg0 , org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.VDSGroup , org.ovirt.engine.core.common.businessentities.network.NetworkCluster > arg1 ) { return arg0 . getFirst () . getName () . compareTo ( arg1 . getFirst () . getName () ) ; }
public void onAcccept ( org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient client ) ;
public boolean isMemorySizeLegal ( int osId , int memSizeInMB , org.ovirt.engine.core.compat.Version clusterVersion ) { return ( memSizeInMB >= ( getMinMemorySizeInMb ( osId , clusterVersion ) ) ) && ( memSizeInMB <= ( getMaxMemorySizeInMb ( osId , clusterVersion ) ) ) ; }
@ java.lang.Override public void setStatus ( org.ovirt.engine.core.common.businessentities.VDSStatus value ) { status = value ; }
@ org.junit.Test public void testGetManagedInterfaceForVdsFilteredForPriviligedUser () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface result = dao . getManagedInterfaceForVds ( org.ovirt.engine.core.dao.InterfaceDAOTest.VDS_ID , org.ovirt.engine.core.dao.PRIVILEGED_USER_ID , true ) ; org.ovirt.engine.core.dao.InterfaceDAOTest . assertCorrectGetManagedInterfaceForVdsResult ( result ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel clusterGuideModel = ( ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VDS localStorageHost = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; clusterGuideModel.localStorageHost = localStorageHost ; clusterGuideModel . UpdateOptionsLocalFS () ; }
private org.gwtbootstrap3.client.ui.Anchor createTextAnchor ( java.lang.String id , java.lang.String title ) { return createTextAnchor ( id , title , null ) ; }
private static org.ovirt.engine.core.common.osinfo.OsRepository getOsRepository () { return org.ovirt.engine.core.common.utils.SimpleDependecyInjector . getInstance () . get ( org.ovirt.engine.core.common.osinfo.OsRepository . class ) ; }
@ java.lang.Override public M getMainModel () { return mainModelProvider . get () ; }
private void mockNullVm () { org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseMockUtils . mockVmDao ( command , vmDAO ) ; org.mockito.Mockito . when ( vmDAO . get ( command . getParameters () . getVmId () ) ) . thenReturn ( null ) ; cretaeVirtIODisk () ; }
protected java.util.List < org.ovirt.engine.ui.frontend.server.gwt.plugin.PluginData > getPluginData () { java.util.List < org.ovirt.engine.ui.frontend.server.gwt.plugin.PluginData > currentData = new java.util.ArrayList ( org.ovirt.engine.ui.frontend.server.gwt.plugin.PluginDataManager . getInstance () . reloadAndGetCurrentData () ) ; java.util.Collections . sort ( currentData ) ; return currentData ; }
public static java.lang.String getLikeSyntax ( boolean caseSensitive ) { if ( ( ( org.ovirt.engine.core.common.config.Config . getConfigUtils () ) == null ) || caseSensitive ) return STRING_CONSTANT ; else return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.DBLikeSyntax ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { if ( ( org.ovirt.engine.core.bll.gluster.GlusterVolumeCommandBase . getGlusterVolume () ) != null ) { setVdsGroupId ( org.ovirt.engine.core.bll.gluster.GlusterVolumeCommandBase . getGlusterVolume () . getClusterId () ) ; } return super . getVdsGroup () ; }
public void setName ( java.lang.String value ) { name = value ; }
private void setUpParentMock ( org.ovirt.engine.api.restapi.resource.BackendHostsResource parent ) { parent . setMappingLocator ( mapperLocator ) ; parent . setMessageBundle ( messageBundle ) ; parent . setHttpHeaders ( httpHeaders ) ; }
@ org.junit.Test public void testVmFailNoDisks () { org.ovirt.engine.core.bll.validator.RunVmValidatorTest . validateResult ( runVmValidator . validateBootSequence ( new org.ovirt.engine.core.common.businessentities.VM () , null , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > () , null ) , false , VdcBllMessages.VM_CANNOT_RUN_FROM_DISK_WITHOUT_DISK ) ; }
protected org.ovirt.engine.core.bll.QueriesCommandBase < > createQueryCommand ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) { return org.ovirt.engine.core.bll.CommandsFactory . createQueryCommand ( actionType , parameters ) ; }
private void mockStorageDomainValidator () { org.mockito.Mockito . doReturn ( storageDomainValidator ) . when ( command ) . getStorageDomainValidator ( org.mockito.ArgumentMatchers . any () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.StorageDomains list () { if ( isFiltered () ) return mapCollection ( getBackendCollection ( VdcQueryType.GetAllStorageDomains , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , SearchType.StorageDomain ) ) ; else return mapCollection ( getBackendCollection ( SearchType.StorageDomain ) ) ; }
private org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters buildRemoveMemoryVolumesParameters ( java.lang.String memoryState , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters params = new org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters ( memoryState , vmId , true ) ; params . setEntityInfo ( org.ovirt.engine.core.bll.RemoveVmCommand . getParameters () . getEntityInfo () ) ; return params ; }
private org.ovirt.engine.core.common.businessentities.StoragePool findDc ( org.ovirt.engine.core.compat.Guid dcId , java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > dataCenters ) { for ( org.ovirt.engine.core.common.businessentities.StoragePool dc : dataCenters ) { if ( dcId . equals ( dc . getId () ) ) { return dc ; } } return null ; }
protected abstract boolean shouldRemoveMemorySnapshotVolumes ( java.lang.String memoryVolume ) ;
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( getAdUserId () . toString () , getClass () . getName () ) ; }
@ java.lang.Override protected void initSelectedType () { getNicType () . setSelectedItem ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getDefaultNicType ( getNicType () . getItems () ) ) ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { return ( ( org.ovirt.engine.core.common.businessentities.Disk ) ( obj ) ) . isWipeAfterDelete () ; }
private org.ovirt.engine.api.model.Network map ( org.ovirt.engine.api.model.Network network , org.ovirt.engine.api.model.Network template ) { return getMapper ( org.ovirt.engine.api.model.Network . class , org.ovirt.engine.api.model.Network . class ) . map ( network , template ) ; }
private void assertDbWasCalled ( int expectedNumOfCalls ) { org.junit.Assert . assertEquals ( java.lang.String . format ( org.ovirt.engine.core.bll.quota.QuotaManagerTest.EXPECTED_NUMBER_OF_DB_CALLS , expectedNumOfCalls , dbCalls ) , expectedNumOfCalls , dbCalls ) ; dbCalls = NUMBER_CONSTANT ; }
public javax.ws.rs.core.Response performAction ( org.ovirt.engine.core.common.action.VdcActionType task , org.ovirt.engine.core.common.action.VdcActionParametersBase params ) { return performAction ( task , params , null , false ) ; }
public static org.ovirt.engine.core.common.businessentities.StorageDomain getStorageById ( org.ovirt.engine.core.compat.Guid storageId , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain storage : storageDomains ) { if ( storage . getId () . equals ( storageId ) ) { return storage ; } } return null ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > getLunsForVgId ( java.lang.String vgId ) { return org.ovirt.engine.core.bll.storage.disk.lun.GetLunsByVgIdQuery . getDbFacade () . getLunDao () . getAllForVolumeGroup ( vgId ) ; }
@ java.lang.Override protected void beforeLogin ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalLoginModel loginModel ) { org.ovirt.engine.ui.userportal.uicommon.model.UserPortalModelInitEvent . fire ( eventBus ) ; }
private java.lang.Runnable pendingOperations ( ) throws java.io.IOException { if ( ( this . nioEngine ) == null ) { return null ; } return nioEngine . process () ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain getStorageDomain ( org.ovirt.engine.core.compat.Guid domainId ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainDao () . getForStoragePool ( domainId , vmTemplate . getStoragePoolId () . getValue () ) ; }
private void updateActionAvailability () {}
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createBond () { return createVdsInterface ( STRING_CONSTANT , true , null , org.ovirt.engine.core.utils.RandomUtils . instance () . nextString ( NUMBER_CONSTANT ) , null , null , null , null ) ; }
@ org.junit.Test public void testRestore () { setUriInfo ( setUpBasicUriExpectations () ) ; setUpTryBackExpectations () ; setUpRestoreExpectations () ; resource . restore ( new org.ovirt.engine.api.model.Action () ) ; }
private org.ovirt.engine.core.common.businessentities.Provider < > getHostProvider () { return org.ovirt.engine.core.bll.AddVdsCommand . getProviderDao () . get ( org.ovirt.engine.core.bll.AddVdsCommand . getParameters () . getProviderId () ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.RestoreAllSnapshotsCommand . getVmId () . toString () , LockingGroup.VM . name () ) ; }
public void setKsmState ( java.lang.Boolean value ) { ksmState = value ; }
@ org.junit.Test public void testCleanNotExpiredUsersSessionsNoUsers () { initDataForClearTest ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY ) ; container . cleanExpiredUsersSessions () ; org.junit.Assert . assertNotNull ( STRING_CONSTANT , container . GetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; }
@ javax.ws.rs.GET public org.ovirt.engine.api.v3.types.V3Disk get () { org.ovirt.engine.api.v3.types.V3Disk disk = adaptGet ( getDelegate () : : get ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . fixDiskLinks ( vmId , disk ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . addDiskAttachmentDetails ( vmId , disk ) ; return disk ; }
@ org.junit.Test public void testSave () { dao . save ( newGroup ) ; org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . getByName ( newGroup . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( newGroup , result ) ; }
void runMultipleActionFailed ( org.ovirt.engine.core.common.action.VdcActionType action , java.util.List < org.ovirt.engine.core.common.action.VdcReturnValueBase > returnValues ) ;
private void verifyRunActionAndExecuteCallbacksRandomly ( org.ovirt.engine.ui.uicommonweb.action.UiAction.ActionFlowState flowState , boolean waitForResult ) { verifyRunActionAndExecuteCallbacksRandomly ( false , flowState , NUMBER_CONSTANT , NUMBER_CONSTANT , waitForResult ) ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( id , device , type , address , specParams , isManaged , isPlugged , getIsReadOnly () , alias , customProperties , snapshotId , logicalName , hostDevice ) ; }
@ org.junit.Test public void formatStringTest2 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result ) ; }
private org.ovirt.engine.core.common.businessentities.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , true ) ; }
@ java.lang.Override public void updateRunButton ( org.ovirt.engine.ui.uicommonweb.UICommand command , boolean isPool ) { java.lang.String tooltip = ( isPool ) ? org.ovirt.engine.ui.userportal.section.main.view.tab.basic.MainTabBasicListItemView.constants . takeVm () : org.ovirt.engine.ui.userportal.section.main.view.tab.basic.MainTabBasicListItemView.constants . runVm () ; runButton . setTooltip ( tooltip ) ; updateButton ( runButton , command ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getVmId () { if ( getParameters () . isImportAsNewEntity () ) { return getParameters () . getVm () . getId () ; } return super . getVmId () ; }
@ java.lang.Override protected int getHighUtilizationDefaultValue () { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.HighUtilizationForPowerSave ) ; }
private void edit () { if ( ( getWindow () ) != null ) { return; } setWindow ( new org.ovirt.engine.ui.uicommonweb.models.providers.EditProviderModel ( this , getSelectedItem () ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { timeZoneEditor . setEnabled ( model . getTimeZoneEnabled () . getEntity () ) ; }
@ org.junit.Test public void canDoActionSucceeds () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.DisableGlusterHookCommand < org.ovirt.engine.core.common.action.gluster.GlusterHookParameters > ( new org.ovirt.engine.core.common.action.gluster.GlusterHookParameters ( HOOK_ID ) ) ) ; setupMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . canDoAction () ) ; }
protected javax.ws.rs.core.Response performAction ( org.ovirt.engine.core.common.action.VdcActionType task , org.ovirt.engine.core.common.action.VdcActionParametersBase params ) { return performAction ( task , params , ( ( org.ovirt.engine.api.model.Action ) ( null ) ) , false ) ; }
protected org.springframework.jdbc.core.simple.SimpleJdbcCall getCall ( java.lang.String procedureName , org.ovirt.engine.core.dal.dbbroker.SimpleJdbcCallsHandler.CallCreator callCreator ) { return getCall ( procedureName , callCreator , null ) ; }
@ java.lang.Override public com.google.gwt.event.shared.HandlerRegistration addValueChangeHandler ( com.google.gwt.event.logical.shared.ValueChangeHandler < java.lang.String > handler ) { return eventBus . addHandler ( com.google.gwt.event.logical.shared.ValueChangeEvent . getType () , handler ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { context.hostDataCenter = ( ( org.ovirt.engine.core.common.businessentities.storage_pool ) ( returnValue ) ) ; SetDefaultNames2 () ; }
@ org.junit.Test public void supportsHostedEngineDeploy () { org.mockito.Mockito . when ( hostedEngineHelper . isVmManaged () ) . thenReturn ( true ) ; org.junit.Assert . assertThat ( validator . supportsDeployingHostedEngine ( new org.ovirt.engine.core.common.businessentities.HostedEngineDeployConfiguration ( HostedEngineDeployConfiguration.Action.DEPLOY ) ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
@ org.junit.Test public void canRunVmPassStatelessWhenVmHAwithNullStatelessParam () { canRunStatelessVmTest ( true , false , null , true ) ; }
public void overrideEngineManagedAttributes ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface sourceNic ) { setLabels ( sourceNic . getLabels () ) ; }
public java.lang.String getDomain () { return isLoggedIn () ? loggedUser . getDomain () : null ; }
@ org.junit.Test public void testValidateImageLocked () { diskImage . setImageStatus ( ImageStatus.LOCKED ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( cmd , EngineMessage.ACTION_TYPE_FAILED_DISKS_LOCKED ) ; }
@ java.lang.Override protected org.ovirt.engine.core.dao.DiskLunMapDao prepareDao () { return dbFacade . getDiskLunMapDao () ; }
public void shutdown () { this . pool . shutdown () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) { this . setItems ( ( ( java.util.List < org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VmTemplate > > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( ReturnValue ) ) . getReturnValue () ) ) ) ; }
public org.ovirt.engine.core.bll.ValidationResult validateUniqueId () { if ( ( org.apache.commons.lang.StringUtils . isBlank ( vds . getUniqueId () ) ) && ( org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.InstallVds ) ) ) { return new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.VdcBllMessages.VDS_NO_UUID ) ; } return ValidationResult.VALID ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.aaa.ProfileEntry object ) { return object . toString () ; }
@ org.junit.Test public void testGetAllAttachableDisksByPoolIdNull () { java.util.List < org.ovirt.engine.core.common.businessentities.Disk > result = dao . getAllAttachableDisksByPoolId ( null , null , null , false ) ; org.ovirt.engine.core.dao.DiskDaoTest . assertFullGetAllAttachableDisksByPoolId ( result ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object ) ) . getName () ; }
@ java.lang.Override public void run ( org.ovirt.engine.core.common.businessentities.StoragePool item , org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . GetLocalStorageHost ( callback . getAsyncQuery () , item . getname () ) ; }
@ org.junit.Before public void setupMock () { org.mockito.Mockito . doReturn ( geoRepUtil ) . when ( getQuery () ) . getGeoRepUtilInstance () ; baseTest . setupMock ( geoRepDao , clusterDao ) ; }
public boolean checkIfCpusExist ( java.lang.String cpuName , org.ovirt.engine.core.compat.Version ver ) { final org.ovirt.engine.core.bll.CpuFlagsManagerHandler.CpuFlagsManager cpuFlagsManager = org.ovirt.engine.core.bll.CpuFlagsManagerHandler._managersDictionary . get ( ver ) ; if ( cpuFlagsManager != null ) { return cpuFlagsManager . checkIfCpusExist ( cpuName ) ; } return false ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( asList ( getEntity ( NUMBER_CONSTANT ) ) ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testGetForStoragePoolWithInvalidPool () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getForStoragePool ( existingDomain . getId () , org.ovirt.engine.core.compat.NGuid . NewGuid () ) ; org.junit.Assert . assertNull ( result ) ; }
private void updateController () { updateTimer () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getDefaultConfigurationVersion ( target ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getStorageDomainId () { super . setStorageDomainId ( getMasterDomainIdFromDb () ) ; return super . getStorageDomainId () ; }
private void mockVds () { mockGetImageDomainsListVdsCommand ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
private org.ovirt.engine.core.common.vdscommands.VDSReturnValue createVDSReturnValue ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterServerService > serverServices ) { org.ovirt.engine.core.common.vdscommands.VDSReturnValue ret = new org.ovirt.engine.core.common.vdscommands.VDSReturnValue () ; ret . setSucceeded ( true ) ; ret . setReturnValue ( serverServices ) ; return ret ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setProviders ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider > ) ( returnValue ) ) ) ; }
public org.ovirt.engine.core.dal.dbbroker.DbFacade getDbFacade () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () ; }
@ java.lang.Override public org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient createClient ( org.ovirt.vdsm.jsonrpc.client.reactors.Reactor reactor , java.nio.channels.Selector selector , java.lang.String hostname , int port ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { return new org.ovirt.vdsm.jsonrpc.client.reactors.stomp.SSLStompClient ( reactor , selector , hostname , port , this . sslContext ) ; }
private org.ovirt.engine.core.common.utils.Pair < T , V > addGhostEntry () { T value = createGhostValue () ; V widget = addEntry ( value , true ) ; return new org.ovirt.engine.core.common.utils.Pair < T , V > ( value , widget ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addDiskDevice ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid deviceId , java.lang.Boolean isPlugged , java.lang.Boolean isReadOnly , boolean isUsingScsiReservation ) { return addDiskDevice ( vmId , deviceId , isPlugged , isReadOnly , STRING_CONSTANT , isUsingScsiReservation ) ; }
private void initCommand () { org.mockito.Mockito . doReturn ( executor ) . when ( command ) . createHostFenceActionExecutor ( org.mockito.Matchers . any () , org.mockito.Matchers . any () ) ; command . setClusterId ( org.ovirt.engine.core.bll.pm.StartVdsCommandTest.FENCECD_HOST_CLUSTER_ID ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > getVdsGroups () { return getBackendCollection ( VdcQueryType.GetVdsGroupsByStoragePoolId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) ) ; }
protected boolean isAtLeastOneVmIsNotDown ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vmsDiskPluggedTo ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : vmsDiskPluggedTo ) { if ( ( vm . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VMStatus.Down ) ) { return true ; } } return false ; }
private org.ovirt.engine.core.common.businessentities.Cluster getCluster () { return getEntity ( org.ovirt.engine.core.common.businessentities.Cluster . class , VdcQueryType.GetClusterById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( clusterId ) , clusterId . toString () ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.webadmin.widget.storage.TemplatesTree < org.ovirt.engine.ui.uicommonweb.models.quota.QuotaTemplateListModel > getTree () { return new org.ovirt.engine.ui.webadmin.widget.storage.TemplatesTree < org.ovirt.engine.ui.uicommonweb.models.quota.QuotaTemplateListModel > () ; }
protected boolean validateUniqueVmName () { return org.ovirt.engine.core.bll.VmHandler . isVmWithSameNameExistStatic ( getVm () . getName () , org.ovirt.engine.core.bll.ImportVmCommandBase . getStoragePoolId () ) ? failValidation ( EngineMessage.VM_CANNOT_IMPORT_VM_NAME_EXISTS ) : true ; }
@ java.lang.Override protected void configure () { super . configure () ; bind ( org.ovirt.engine.ui.webadmin.widget.tab.WebadminMenuLayout . class ) . asEagerSingleton () ; bind ( org.ovirt.engine.ui.common.widget.tab.MenuLayout . class ) . asEagerSingleton () ; bind ( org.ovirt.engine.ui.webadmin.section.main.presenter.SearchStringCollector . class ) . asEagerSingleton () ; }
protected boolean validateVM ( org.ovirt.engine.core.bll.validator.VmValidator vmValidator ) { return ( canDoSnapshot ( org.ovirt.engine.core.bll.CreateAllSnapshotsFromVmCommand . getVm () ) ) && ( validate ( vmValidator . vmNotSavingRestoring () ) ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.storage.ActivateStorageDomainCommand . getStorageDomainId () . toString () , LockingGroup.STORAGE . name () ) ; }
public java.lang.String getVdsName () { if ( ( ( mVdsName ) == null ) && ( ( getVds () ) != null ) ) { mVdsName = getVds () . getName () ; } return mVdsName ; }
public static java.util.List < java.lang.String > runAndAssertCanDoActionFailure ( java.lang.String assertionMessage , org.ovirt.engine.core.bll.CommandBase < > command , org.ovirt.engine.core.common.errors.EngineMessage message ) { org.junit.Assert . assertFalse ( STRING_CONSTANT , command . canDoAction () ) ; return org.ovirt.engine.core.bll.CanDoActionTestUtils . assertCanDoActionMessages ( assertionMessage , command , message ) ; }
private org.ovirt.engine.core.common.businessentities.VdsNetworkInterface createBond ( java.lang.String name , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . NewGuid () , name , true , null , null , networkName ) ; }
@ java.lang.Override public java.lang.String toString () { java.lang.String prefix = STRING_CONSTANT ; if ( ( TotalMilliseconds ) < NUMBER_CONSTANT ) { prefix = STRING_CONSTANT ; } return java.lang.String . format ( STRING_CONSTANT , prefix , Days , Hours , Minutes , Seconds , Milliseconds ) ; }
public boolean isCrossReferece ( java.lang.String text , java.lang.String obj ) { org.ovirt.engine.core.searchbackend.IAutoCompleter completer = getCrossRefAutoCompleter ( obj ) ; if ( completer != null ) { return completer . validate ( text ) ; } return false ; }
@ org.junit.Test public void testEmptyDisksUsages () { java.lang.Object [] disksUsages = new java.lang.Object [ NUMBER_CONSTANT ] ; java.util.Map < java.lang.String , java.lang.Object > xml = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . setDisksUsageInXmlRpc ( disksUsages ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . validateDisksUsagesList ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . getVmStatistics () , disksUsages , xml ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > searchStoragePool () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getStoragePoolDao () , true ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.storage.StorageModel storageModel = ( ( org.ovirt.engine.ui.uicommonweb.models.storage.StorageModel ) ( target ) ) ; java.lang.Iterable < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.lang.Iterable < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; storageModel . PostUpdateHost ( hosts ) ; }
@ org.junit.Test public void canDoActionSucceedsOnDiskDomainCheckWhenEmptyStorageGuidInParams ( ) throws java.lang.Exception { initializeCommand ( Guid.Empty ) ; org.ovirt.engine.core.compat.Guid storageId = org.ovirt.engine.core.compat.Guid . NewGuid () ; mockVmWithDisk ( storageId ) ; mockStorageDomain ( storageId ) ; mockStoragePoolIsoMap () ; runAndAssertCanDoActionSuccess () ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase logOff () { org.ovirt.engine.core.common.action.VdcActionParametersBase params = new org.ovirt.engine.core.common.action.VdcActionParametersBase () ; params . setSessionId ( getEngineSessionId () ) ; org.ovirt.engine.core.common.action.VdcReturnValueBase returnValue = getBackend () . logoff ( params ) ; return returnValue ; }
@ java.lang.Override protected java.util.List < org.ovirt.engine.core.common.businessentities.tags > GetTagsAttachedToObject () { return getTagDAO () . getAllForVm ( org.ovirt.engine.core.bll.VmCommand . getParameters () . getVmId () . toString () ) ; }
protected boolean validateVmArchitecture () { return ( getVm () . getClusterArch () ) == ( org.ovirt.engine.core.common.businessentities.ArchitectureType.undefined ) ? failValidation ( EngineMessage.ACTION_TYPE_FAILED_VM_CANNOT_IMPORT_VM_WITH_NOT_SUPPORTED_ARCHITECTURE ) : true ; }
public static org.ovirt.engine.core.searchbackend.ISyntaxChecker createBackendSyntaxChecker ( java.lang.String AuthenticationMethod ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.ConfigAuthenticationMethod = AuthenticationMethod ; if ( ( org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ) == null ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker = new org.ovirt.engine.core.searchbackend.SyntaxChecker ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.SearchResultsLimit ) ) ; } return org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ; }
@ java.lang.Override public void saveJob ( final org.ovirt.engine.core.common.job.Job job ) { jobDao . save ( job ) ; }
public java.lang.String getDiskAlias () { if ( ( getDisk () ) != null ) { return getDisk () . getDiskAlias () ; } return org.apache.commons.lang.StringUtils.EMPTY ; }
@ java.lang.Override protected void syncSearch () { if ( ( getEntity () ) == null ) { return; } super . syncSearch ( VdcQueryType.GetVmTemplatesDisks , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity () . getId () ) ) ; }
private javax.ws.rs.core.Response fenceManually ( org.ovirt.engine.api.model.Action action ) { org.ovirt.engine.core.common.action.FenceVdsManualyParameters params = new org.ovirt.engine.core.common.action.FenceVdsManualyParameters ( true ) ; params . setVdsId ( guid ) ; params . setStoragePoolId ( getEntity () . getStoragePoolId () ) ; return doAction ( VdcActionType.FenceVdsManualy , params , action ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue ) { setAllowClusterWithVirtGlusterEnabled ( returnValue ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.AsyncTaskStatus > getTaskStatuses () { java.util.List < org.ovirt.engine.core.common.businessentities.AsyncTaskStatus > ret = new java.util.ArrayList <> () ; ret . add ( getTaskStatus () ) ; ret . add ( getTaskStatus () ) ; return ret ; }
public java.lang.String getBookmarkValue () { return ( getBookmark () ) != null ? getBookmark () . getValue () : null ; }
private void stubDaos () { mockVmStatic ( true ) ; mockVdsDao () ; }
private void setNonOperational ( org.ovirt.engine.core.common.businessentities.VDS host , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason , java.util.Map < java.lang.String , java.lang.String > customLogValues ) { resourceManager . get () . getEventListener () . vdsNonOperational ( host . getId () , reason , true , Guid.Empty , customLogValues ) ; }
@ org.junit.Test public void clusterAlreadyInLocalFs () { createCommandWithDefaultVdsGroup () ; oldGroupIsDetachedDefault () ; storagePoolIsLocalFS () ; cpuExists () ; cpuManufacturersMatch () ; allQueriesEmpty () ; storagePoolAlreadyHasCluster () ; canDoActionFailedWithReason ( VdcBllMessages.VDS_GROUP_CANNOT_ADD_MORE_THEN_ONE_HOST_TO_LOCAL_STORAGE ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { linuxOsIds = ( ( java.util.ArrayList < java.lang.Integer > ) ( returnValue . getReturnValue () ) ) ; }
public void updateAllDiskImageSnapshotsStatusWithCompensation ( final org.ovirt.engine.core.compat.Guid diskId , final org.ovirt.engine.core.common.businessentities.storage.ImageStatus status , org.ovirt.engine.core.common.businessentities.storage.ImageStatus statusForCompensation , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { updateAllDiskImagesSnapshotsStatusInTransactionWithCompensation ( java.util.Collections . singletonList ( diskId ) , status , statusForCompensation , compensationContext ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Host deprecatedPopulate ( org.ovirt.engine.api.model.Host model , org.ovirt.engine.core.common.businessentities.VDS entity ) { parent . addStatistics ( model , entity ) ; return model ; }
public int getMaxPciDevices ( int osId , org.ovirt.engine.core.compat.Version version ) ;
private void canDetachDomain () { org.mockito.Mockito . doReturn ( true ) . when ( cmd ) . isDetachAllowed () ; }
@ org.junit.Test public void testGetValue () { org.junit.Assert . assertEquals ( ( STRING_CONSTANT + ( value ) ) , value . ordinal () , value . getValue () ) ; }
public boolean isMixedStorageDomainsSupported ( org.ovirt.engine.core.compat.Version version ) { return ( ( java.lang.Boolean ) ( getConfigValuePreConverted ( ConfigurationValues.MixedDomainTypesInDataCenter , version . toString () ) ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return iface . getNetworkName () . equals ( n . getName () ) ; }
@ java.lang.Override protected void refreshModel () { if ( ( getEntity () ) == null ) { return; } super . SyncSearch ( VdcQueryType.GetAllAuditLogsByVMTemplateName , new org.ovirt.engine.core.common.queries.GetAllAuditLogsByVMTemplateNameParameters ( getEntity () . getName () ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { defaultOSes = returnValue . getReturnValue () ; }
public void setvm_name ( java.lang.String value ) { this . mVmStatic . setvm_name ( value ) ; }
public org.ovirt.engine.ui.uicommonweb.models.ListModel flush () { super . flush () ; return driver . flush () ; }
public org.ovirt.engine.core.common.businessentities.BusinessEntityMap < org.ovirt.engine.core.common.businessentities.network.Bond > getBackendHostBonds () { java.util.List < org.ovirt.engine.core.common.businessentities.network.Bond > backendBonds = getBackendCollection ( org.ovirt.engine.core.common.businessentities.network.Bond . class , VdcQueryType.GetHostBondsByHostId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; return new org.ovirt.engine.core.common.businessentities.BusinessEntityMap ( backendBonds ) ; }
public java.lang.Boolean getKvmEnabled () { return this . mVdsDynamic . getKvmEnabled () ; }
private boolean handleDestStorageDomain ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > disksList ) { ensureDomainMap ( disksList , org.ovirt.engine.core.bll.ExportVmCommand . getStorageDomainId () ) ; java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > dummiesDisksList = createDiskDummiesForSpaceValidations ( disksList ) ; dummiesDisksList . addAll ( getMemoryVolumes () ) ; return validateSpaceRequirements ( dummiesDisksList ) ; }
private void processVm () { if ( ( org.ovirt.engine.core.bll.MigrateVmCommand . getVm () . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VMStatus.Up ) ) { decreasePendingVms ( org.ovirt.engine.core.bll.MigrateVmCommand . getVds () . getId () ) ; } }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel ) ( target ) ) ; model.maxSpmPriority = ( ( java.lang.Integer ) ( returnValue ) ) ; InitSpmPriorities1 () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ; java.util.List < java.lang.String > images = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; setImagesToModel ( model , images ) ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . getDiskList () . size () ) ; }
public void setStartTime ( java.util.Date startTime ) { if ( ( this . startTime ) == null ) { this . startTime = startTime ; } }
@ java.lang.Override protected void onReset () { super . onReset () ; clearSelection () ; if ( ( getTable () ) != null ) { getTable () . resetScrollPosition () ; } }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { return ( obj != null ) && ( ( ( org.ovirt.engine.core.common.businessentities.Disk ) ( obj ) ) . isWipeAfterDelete () ) ; }
@ java.lang.Override protected void createQosWidget () { qosWidget = new org.ovirt.engine.ui.webadmin.section.main.view.popup.qos.CpuQosWidget () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider < > > result ) { java.util.List < org.ovirt.engine.core.common.businessentities.Provider > providers = getNonReadOnlyExternalNetworkProviders ( result ) ; getExternalProviders () . setItems ( providers ) ; selectExternalProvider () ; }
@ org.junit.Test public void testGet () { setUriInfo ( setUpBasicUriExpectations () ) ; resource . setParent ( getCollectionResourceMock () ) ; control . replay () ; org.ovirt.engine.api.model.Hook hook = resource . get () ; assertEquals ( org.ovirt.engine.api.restapi.resource.BackendHostHookResourceTest.EVENT_2_NAME , hook . getEventName () ) ; }
@ org.junit.Test public void testGetClusterByClusterPolicyIdNegative () { java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > result = dao . getClustersByClusterPolicyId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertEquals ( result . size () , NUMBER_CONSTANT ) ; }
private void updateIsLiveMergeSupported ( java.lang.Object entity ) { if ( entity == null ) { return; } org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( entity ) ) ; setLiveMergeSupported ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isLiveMergeSupported ( vm ) ) ; }
protected org.ovirt.engine.core.common.businessentities.ArchitectureType getArchitectureFromItem ( org.ovirt.engine.core.common.businessentities.VM vm ) { return vm . getClusterArch () ; }
void setTooltipText ( java.lang.String tooltipText ) { tooltip . setText ( tooltipText ) ; }
public void setVmSnapshotId ( org.ovirt.engine.core.compat.Guid snapshotId ) { getImage () . setSnapshotId ( ( snapshotId == null ? null : snapshotId . getValue () ) ) ; }
@ org.junit.Test public void testGetStorageTypesInPoolForMixedTypes () { org.ovirt.engine.core.compat.Guid poolId = FixturesTool.STORAGE_POOL_MIXED_TYPES ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageType > storageTypes = dao . getStorageTypesInPool ( poolId ) ; assertStorageTypes ( storageTypes , StorageType.POSIXFS , StorageType.NFS , StorageType.ISCSI ) ; }
protected void removeVmSnapshots () { new org.ovirt.engine.core.bll.snapshots.SnapshotsManager () . removeSnapshots ( org.ovirt.engine.core.bll.VmCommand . getVmId () ) ; }
@ java.lang.Override public javax.ws.rs.core.Response detach ( org.ovirt.engine.api.model.Action action ) { return doAction ( VdcActionType.RemoveVmFromPool , new org.ovirt.engine.core.common.action.RemoveVmFromPoolParameters ( guid , false , true ) , action ) ; }
@ java.lang.Override public java.lang.String mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { return rs . getString ( NUMBER_CONSTANT ) ; }
org.ovirt.engine.ui.webadmin.widget.host.VLanPanel createVLanPanel ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostInterfaceLineModel lineModel ) { org.ovirt.engine.ui.webadmin.widget.host.VLanPanel panel = new org.ovirt.engine.ui.webadmin.widget.host.VLanPanel () ; panel . setWidth ( STRING_CONSTANT ) ; panel . setHeight ( STRING_CONSTANT ) ; panel . addVLans ( lineModel ) ; return panel ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml volumeActivityMenu ( com.google.gwt.safehtml.shared.SafeHtml statusImage , java.lang.String id ) ;
private java.util.List < org.ovirt.engine.core.common.businessentities.ExternalOperatingSystem > getOperationSystems () { return runOperationSystemMethod ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.OPERATION_SYSTEM_QUERY ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getLunDao () ; existingLUN = dao . get ( STRING_CONSTANT ) ; newLUN = new org.ovirt.engine.core.common.businessentities.LUNs () ; newLUN . setLUN_id ( STRING_CONSTANT ) ; }
@ org.junit.Test public void sufficientDiskSpace () { final int extraDiskSpaceRequired = NUMBER_CONSTANT ; final org.ovirt.engine.core.bll.ImportVmCommand c = setupDiskSpaceTest ( extraDiskSpaceRequired ) ; org.junit.Assert . assertTrue ( c . canDoAction () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { setMaxVmsInPool ( returnValue ) ; updateMaxNumOfVmCpus () ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.ProfileParametersBase < org.ovirt.engine.core.common.businessentities.profiles.DiskProfile > getParameters () { return new org.ovirt.engine.core.common.action.DiskProfileParameters ( getProfile () ) ; }
public void setErrataDetailPanelVisibilty ( boolean visible ) { splitLayoutPanel . setWidgetHidden ( errataDetailPanel , ( ! visible ) ) ; com.google.gwt.core.client.Scheduler . get () . scheduleDeferred ( ( ) - > errataTableView . onResize () ) ; }
private void initHandlers () { mTagsHandler = org.ovirt.engine.core.bll.HandlersFactory . createTagsHandler () ; org.ovirt.engine.core.searchbackend.BaseConditionFieldAutoCompleter.tagsHandler = mTagsHandler ; org.ovirt.engine.core.bll.VmHandler . init () ; org.ovirt.engine.core.bll.VdsHandler . init () ; org.ovirt.engine.core.bll.VmTemplateHandler . Init () ; org.ovirt.engine.core.bll.Backend.log . info ( STRING_CONSTANT ) ; }
@ java.lang.Override public void cleanup () {}
protected org.ovirt.engine.ui.common.widget.table.SimpleActionTable < T > createActionTable () { return new org.ovirt.engine.ui.userportal.widget.table.column.UserPortalSimpleActionTable < T > ( modelProvider , getTableResources () , org.ovirt.engine.ui.userportal.gin.ClientGinjectorProvider . getEventBus () , org.ovirt.engine.ui.userportal.gin.ClientGinjectorProvider . getClientStorage () ) ; }
private org.ovirt.engine.core.common.businessentities.VM initializeMock ( final int domainSizeGB ) { mockVmTemplateDaoReturnVmTemplate () ; mockStorageDomainDaoGetForStoragePool ( domainSizeGB ) ; mockStorageDomainDaoGet ( domainSizeGB ) ; mockConfig () ; return org.ovirt.engine.core.bll.AddVmCommandTest . createVm () ; }
public static org.ovirt.engine.core.utils.customprop.VmPropertiesUtils getInstance () { return org.ovirt.engine.core.utils.customprop.VmPropertiesUtils.vmPropertiesUtils ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain domain ) { return ( domain . getstorage_domain_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainType.ISO ) ; }
public void showStatus ( java.lang.String status ) { setTitle ( status ) ; }
protected R doPopulate ( R model , Q entity ) { return model ; }
private org.ovirt.engine.core.common.action.RemoveVmFromPoolParameters buildRemoveVmFromPoolParameters () { org.ovirt.engine.core.common.action.RemoveVmFromPoolParameters parameters = new org.ovirt.engine.core.common.action.RemoveVmFromPoolParameters ( org.ovirt.engine.core.bll.UpdateVmVersionCommand . getVmId () , false , false ) ; parameters . setTransactionScopeOption ( TransactionScopeOption.RequiresNew ) ; return parameters ; }
private org.ovirt.engine.ui.uicommonweb.models.vms.VncConsoleModel.ClientConsoleMode readDefaultConsoleClientMode () { try { return org.ovirt.engine.ui.uicommonweb.models.vms.VncConsoleModel.ClientConsoleMode . valueOf ( ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ClientModeVncDefault ) ) ) ) ; } catch ( java.lang.Exception e ) { return org.ovirt.engine.ui.uicommonweb.models.vms.VncConsoleModel.ClientConsoleMode.Native ; } }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { org.ovirt.engine.ui.uicommonweb.models.vms.RunOnceModel runOnceModel = new org.ovirt.engine.ui.uicommonweb.models.vms.WebadminRunOnceModel ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( result ) ) , this ) ; setWindow ( runOnceModel ) ; runOnceModel . init () ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createBond () { return createVdsInterface ( STRING_CONSTANT , true , null , org.ovirt.engine.core.utils.RandomUtils . instance () . nextString ( NUMBER_CONSTANT ) , null , null , null ) ; }
protected java.lang.String getDefaultDomain () { return org.ovirt.engine.core.aaa.AuthenticationProfileRepository . getInstance () . getProfiles () . get ( NUMBER_CONSTANT ) . getName () ; }
private static org.ovirt.engine.core.common.businessentities.StoragePool createBasicPool () { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; pool . setId ( org.ovirt.engine.core.compat.Guid . NewGuid () ) ; pool . setname ( STRING_CONSTANT ) ; return pool ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return iface . getNetworkName () . equals ( n . getname () ) ; }
@ java.lang.Override public void onSuccess ( java.util.Map < org.ovirt.engine.core.compat.Version , java.util.Map < java.lang.String , java.lang.String > > returnValue ) { customPropertiesList = returnValue ; }
@ org.junit.Test public void diskImagesAlreadyExistBothDoesntExist () { org.mockito.Mockito . doReturn ( null ) . when ( validator ) . getExistingDisk ( org.mockito.ArgumentMatchers . any () ) ; org.junit.Assert . assertThat ( validator . diskImagesAlreadyExist () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > getDeviceList ( org.ovirt.engine.core.compat.Guid hostId , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { return getEntity ( java.util.List . class , QueryType.GetDeviceList , new org.ovirt.engine.core.common.queries.GetDeviceListQueryParameters ( hostId , storageType , false , null , false ) , STRING_CONSTANT , true ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < java.lang.String > pmTypes ) { updatePmTypeList ( pmTypes ) ; }
@ java.lang.Override public org.ovirt.engine.core.searchbackend.IAutoCompleter getFieldRelationshipAutoCompleter ( java.lang.String fieldName ) { if ( STRING_CONSTANT . equals ( fieldName ) ) { return StringOnlyEqualConditionRelationAutoCompleter.INSTANCE ; } else { return StringConditionRelationAutoCompleter.INSTANCE ; } }
private org.ovirt.engine.core.common.utils.Pair < T , K > getPair () { if ( ( pair ) == null ) { pair = new org.ovirt.engine.core.common.utils.Pair ( null , null ) ; } return pair ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hostList = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; hostList . add ( NUMBER_CONSTANT , null ) ; getHostList () . setItems ( hostList ) ; }
@ java.lang.Override public void clearBuff () { if ( ( this . nioEngine ) != null ) { this . nioEngine . clearBuff () ; } outbox . clear () ; }
@ java.lang.Override public java.util.Set < java.lang.String > getAllNetworkLabelsForDataCenter ( org.ovirt.engine.core.compat.Guid id ) { return new java.util.HashSet ( getCallsHandler () . executeReadList ( STRING_CONSTANT , new org.springframework.jdbc.core.SingleColumnRowMapper () , createIdParameterMapper ( id ) ) ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetTagsByUserIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getTagDao () . getAllForUsers ( org.ovirt.engine.core.bll.GetTagsByUserIdQuery . getParameters () . getUserId () ) ) ; }
protected java.util.Map < java.lang.String , java.lang.String > getVmValuesForMsgResolving () { return java.util.Collections . singletonMap ( VdcObjectType.VM . name () . toLowerCase () , org.ovirt.engine.core.bll.RunVmCommand . getVmName () ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.migration.MigrationPolicy > returnValue ) { migrationPolicies = returnValue ; }
public org.ovirt.engine.sdk.web.ConnectionsPoolBuilder url ( java.lang.String url ) throws java.net.MalformedURLException { this . url = url ; this . urlobj = createURL ( url ) ; return this ; }
@ org.junit.Test public void getClusterNameDefault () { final java.lang.String n = b . getClusterName () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , n ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.network.cluster.AttachNetworkClusterValidator createValidator () { return new org.ovirt.engine.core.bll.network.cluster.AttachNetworkClusterValidator ( interfaceDao , networkDao , networkCluster ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; org.mockito.Mockito . when ( getQueryParameters () . getId () ) . thenReturn ( org.ovirt.engine.core.bll.GetWatchdogQueryTest.TEST_VM_ID ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addDiskDevice ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid deviceId , java.lang.String address ) { return addDiskDevice ( vmId , deviceId , true , false , address , false ) ; }
public void setiso_path ( java.lang.String value ) { if ( ! ( org.ovirt.engine.core.compat.StringHelper . EqOp ( mVmStatic . getiso_path () , value ) ) ) { mVmStatic . setiso_path ( value ) ; } }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VdsNumaNode > getAllVdsNumaNodeByVdsId ( org.ovirt.engine.core.compat.Guid vdsId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vdsId ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsNumaNodeDaoImpl.vdsNumaNodeRowMapper , parameterSource ) ; }
public void setCustomProperties ( java.util.Map < java.lang.String , java.lang.String > customProperties ) { this . customProperties = customProperties ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getId () . equals ( nc . getnetwork_id () ) ; }
@ org.junit.Before public void setUp () { testedModel = new org.ovirt.engine.ui.uicommonweb.models.SortedListModel () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel clusterGuideModel = ( ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel ) ( target ) ) ; clusterGuideModel.localStorageHost = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; clusterGuideModel . updateOptionsLocalFS () ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createNic ( java.lang.String nicName , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , nicName , false , null , null , networkName , true , null ) ; }
public void setVm ( final org.ovirt.engine.core.common.businessentities.VM value ) { vm = value ; }
@ org.junit.Test public void getUsbPolicyIsSetDisabled () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) , UsbPolicy.DISABLED ) ; }
@ org.junit.Test ( expected = java.lang.UnsupportedOperationException . class ) public void getFreeVfNotSriovNic () { commonIsSriovDevice ( false ) ; hostNicVfsConfigHelper . getFreeVf ( nic , null ) ; }
public java.util.Map < java.lang.String , java.lang.Object > getInfo () { return mInfo ; }
public void setParameters ( java.lang.String value ) { parameters = value ; }
@ java.lang.Override protected void executeVdsBrokerCommand () { buildVmData () ; logCommandInfo () ; mVmReturn = org.ovirt.engine.core.vdsbroker.vdsbroker.CreateVDSCommand . getBroker () . create ( createInfo ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.CreateVDSCommand . proceedProxyReturnValue () ; org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . updateVMDynamicData ( vm . getDynamicData () , mVmReturn.mVm ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getQuotaId () { return org.ovirt.engine.core.bll.RunVmCommand . getVm () . getQuotaId () ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel model , java.lang.Boolean value ) { model . setAttached ( value ) ; refreshClustersTable () ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { spmDefaultPriorityValue = returnValue ; updateSpmPriorityValues () ; updateSpmPriority () ; }
private void createCommandWithOlderVersion () { createCommand ( org.ovirt.engine.core.bll.UpdateClusterCommandTest . createClusterWithOlderVersion () ) ; }
@ org.junit.Test public void validateDiskIsLocked () { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initVmDiskImage ( false ) ; command . getImage () . setImageStatus ( ImageStatus.LOCKED ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_DISKS_LOCKED ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { populateRoles ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.Role > ) ( result ) ) ) ; }
private java.lang.String getMacAddress () { return getInterface () . getMacAddress () ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > getAllForMonitoredVm ( org.ovirt.engine.core.compat.Guid vmId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vmId ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.network.VmNetworkInterfaceDaoImpl.VmNetworkInterfaceMonitoringRowMapper.INSTANCE , parameterSource ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > bonds = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue () ) ) ; allBonds = bonds ; }
public java.lang.String findFreeVfForVnic ( org.ovirt.engine.core.compat.Guid hostId , org.ovirt.engine.core.common.businessentities.network.Network vnicNetwork , org.ovirt.engine.core.compat.Guid vmId ) ;
@ org.junit.Test public void testCobvertGBToBytes () { long gigabytes = NUMBER_CONSTANT ; long bytes = org.ovirt.engine.core.common.utils.SizeConverter . convert ( gigabytes , SizeConverter.SizeUnit.GiB , SizeConverter.SizeUnit.BYTES ) . longValue () ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , bytes ) ; }
protected void validateClientAcceptHeader ( org.ovirt.engine.core.sso.utils.SsoSession ssoSession , javax.servlet.http.HttpServletRequest request ) { org.ovirt.engine.core.sso.utils.SsoUtils . validateClientAcceptHeader ( request ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.async_tasks get ( org.ovirt.engine.core.compat.Guid id ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.AsyncTaskDAODbFacadeImpl.AsyncTaskRowMapper.instance , parameterSource ) ; }
@ org.junit.Test public void testGetDataAndSetDataWithNullSession () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer . setHttpSessionId ( null ) ; org.junit.Assert . assertFalse ( STRING_CONSTANT , container . SetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_VALUE ) ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , container . GetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { setItems ( ( ( java.util.List < P > ) ( returnValue . getReturnValue () ) ) ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
public org.ovirt.engine.ui.uicommonweb.UICommand setIsExecutionAllowed ( boolean value ) { if ( ( isExecutionAllowed ) != value ) { isExecutionAllowed = value ; if ( value ) { getExecuteProhibitionReasons () . clear () ; } onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } return this ; }
private void initTables () { initQuotaClusterTable () ; initQuotaStorageTable () ; }
private void validateValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.Integer > entity , java.lang.Integer maxValue ) { entity . validateEntity ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.IntegerValidation ( NUMBER_CONSTANT , maxValue ) } ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getname () . equals ( bond . getName () ) ; }
@ java.lang.Override protected void executeCommand () { setQuotaParameter () ; getQuotaDAO () . save ( getQuota () ) ; getReturnValue () . setSucceeded ( true ) ; }
private void attachManagementNetwork () { final org.ovirt.engine.core.common.businessentities.network.NetworkCluster networkCluster = org.ovirt.engine.core.bll.AddClusterCommand . createManagementNetworkCluster () ; networkCluster . setClusterId ( org.ovirt.engine.core.bll.AddClusterCommand . getClusterId () ) ; networkClusterDao . save ( networkCluster ) ; }
public org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient getClient ( ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { if ( this . client . isOpen () ) { return this . client ; } this . client . connect () ; return this . client ; }
public void validate () { validateCommon () ; }
private void setSelectedDefaultManagementNetwork ( org.ovirt.engine.core.common.businessentities.network.Network defaultManagementNetwork ) { if ( defaultManagementNetwork != null ) { getManagementNetwork () . setSelectedItem ( defaultManagementNetwork ) ; } }
private void createCommand () { cmd . init () ; org.mockito.Mockito . doReturn ( vdsDao ) . when ( cmd ) . getVdsDao () ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : java.lang.Boolean.TRUE ; }
@ java.lang.Override public org.ovirt.engine.core.compat.NGuid getStoragePoolId () { return ( getSourceVmFromDb () ) != null ? getSourceVmFromDb () . getStoragePoolId () : null ; }
public void rollbackQuotaByVmId ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmDao () . get ( vmId ) ; if ( vm != null ) { removeQuotaFromCache ( vm . getStoragePoolId () , vm . getQuotaId () ) ; } }
@ java.lang.Override public void onSuccess ( java.lang.String suggestedDiskAlias ) { getAlias () . setEntity ( suggestedDiskAlias ) ; }
public void setvds_name ( java.lang.String value ) { this . mVdsStatic . setvds_name ( value ) ; }
private void initDbFacadeMock () { org.mockito.Mockito . when ( dbFacade . getAuditLogDAO () ) . thenReturn ( auditLogDao ) ; }
protected void RemoveVmStatic () { org.ovirt.engine.core.bll.VmCommand . getVmStaticDAO () . remove ( org.ovirt.engine.core.bll.VmCommand . getVmId () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VdsStatic > getAllWithIpAddress ( java.lang.String address ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsStaticDAODbFacadeImpl.VdsStaticRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , address ) ) ; }
private void expectGetLunsMap () { for ( org.ovirt.engine.core.compat.Guid GUID : org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.GUIDS ) { expectGetLunsMap ( GUID . toString () , GUID . toString () ) ; } }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > getFiltered ( java.lang.String filter ) { return runHostListMethod ( ( ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.HOSTS_ENTRY_POINT ) + ( java.lang.String . format ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.SEARCH_QUERY_FORMAT , filter ) ) ) ) ; }
@ org.junit.Test public void testGetByNameAndDataCenter () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByNameAndDataCenter ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME , datacenter ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME , result . getname () ) ; }
public void hide () { getView () . hide () ; }
@ java.lang.Override public void setRaidInfoMessages ( java.lang.String raidType , int stripeSize ) { deviceSelectionInfo . setText ( org.ovirt.engine.ui.webadmin.section.main.view.popup.gluster.CreateBrickPopupView.applicationMessages . getStorageDeviceSelectionInfo ( raidType ) ) ; this . stripeSizeWithInfo . setExplanation ( org.ovirt.engine.ui.webadmin.section.main.view.popup.gluster.CreateBrickPopupView.applicationMessages . stripSizeInfoForGlusterBricks ( stripeSize , raidType ) ) ; }
