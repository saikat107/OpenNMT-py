private void exit () { java.lang.System . exit ( ( myApplied ? mySuccessExitCode : NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public java.lang.String convert ( java.lang.String input ) { return input ; }
public void onLeServiceUp () { mAdapterStateMachine . sendMessage ( AdapterState.USER_TURN_ON ) ; }
@ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { org.conscrypt.NativeCrypto . SSL_do_handshake ( org.conscrypt.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT ) ; }
@ java.lang.Override public boolean unregisterApp ( android.bluetooth.BluetoothHidDeviceAppConfiguration config ) { if ( com.android.bluetooth.hid.HidDeviceService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDeviceService.BluetoothHidDeviceBinder.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.hid.HidDeviceService service = getService () ; if ( service == null ) { return false ; } return service . unregisterApp () ; }
public static void xor ( byte [] x , byte [] y , int yOff , int yLen ) { while ( ( -- yLen ) >= NUMBER_CONSTANT ) { x [ yLen ] ^= y [ ( yOff + yLen ) ] ; } }
@ java.lang.Override public final byte get ( int i ) { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return get ( ix ( checkIndex ( i ) ) ) ; }
@ java.lang.Override public com.android.dx.cf.direct.DirectClassFile call ( ) throws java.lang.Exception { com.android.dx.cf.direct.DirectClassFile cf = parseClass ( name , bytes ) ; return cf ; }
@ java.lang.Override protected com.android.server.wifi.SupplicantStaNetworkHal getStaNetworkMockable ( android.hardware.wifi.supplicant.V1_0.ISupplicantStaNetwork iSupplicantStaNetwork ) { return mSupplicantStaNetworkMock ; }
@ java.lang.Override public boolean startTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { return markIfNecessary ( method ) ; }
public void incProgress ( int delta ) { if ( ( delta > NUMBER_CONSTANT ) && ( ( mIncCoef ) > NUMBER_CONSTANT ) ) { internalIncProgress ( ( delta * ( mIncCoef ) ) ) ; } }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( com.ibm.icu.impl.UResource.Key key ) { ruleSetNum = com.ibm.icu.impl.DayPeriodRules . parseSetNum ( key . toString () ) ; data.rules [ ruleSetNum ] = new com.ibm.icu.impl.DayPeriodRules () ; return ruleSetSink ; }
synchronized int nFileA3DGetNumIndexEntries ( long fileA3D ) { validate () ; return rsnFileA3DGetNumIndexEntries ( mContext , fileA3D ) ; }
private java.io.OutputStream openOutput ( java.lang.String name ) throws java.io.IOException { if ( ( name . equals ( STRING_CONSTANT ) ) || ( name . startsWith ( STRING_CONSTANT ) ) ) { return context.out ; } return new java.io.FileOutputStream ( name ) ; }
@ java.lang.Override final void putUnchecked ( int pos , int [] src , int srcOffset , int length ) { libcore.io.Memory . pokeIntArray ( ix ( pos ) , src , srcOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
public static < T > org.hamcrest.Matcher < T > hasToString ( org.hamcrest.Matcher < ? super java.lang.String > toStringMatcher ) { return new org.hamcrest.object.HasToString < T > ( toStringMatcher ) ; }
public static int getMaxId () { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . lock () ; try { return ( com.intellij.openapi.vfs.newvfs.persistent.FSRecords . length () ) / ( com.intellij.openapi.vfs.newvfs.persistent.FSRecords.RECORD_SIZE ) ; } finally { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . unlock () ; } }
private void onSelectNewUpdates ( boolean selectNew , boolean selectUpdates , boolean selectTop ) { mImpl . onSelectNewUpdates ( selectNew , selectUpdates , selectTop ) ; }
public abstract int [] blend ( int [] src , int [] dst , int [] result ) ;
private void notifyError ( java.lang.String message ) { showMessage ( message ) ; }
@ java.lang.Override public boolean isCallToPolymorphicMethod () { return isCallToPolymorphicMethod ( getReceiverType () , getMethodId () ) ; }
public abstract void setAcceptThirdPartyCookies ( android.webkit.WebView webview , boolean accept ) ;
public static long OrLongInt () { long lhs = NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs | rhs ; }
@ java.lang.Override public void onLoaderReset ( android.content.Loader < android.database.Cursor > loader ) {}
@ org.junit.Before public void init ( ) throws java.lang.Exception { myCollation = android.icu.text.Collator . getInstance ( java.util.Locale.ENGLISH ) ; }
private void setUmsEnabling ( boolean enable ) { synchronized ( mListeners ) { mUmsEnabling = enable ; } }
final void putShort ( int offset , short value ) { sun.nio.ch.NativeObject.unsafe . putShort ( ( offset + ( address ) ) , value ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; if ( action . equals ( ImsManager.ACTION_IMS_REGISTRATION_ERROR ) ) { setResultCode ( Activity.RESULT_CANCELED ) ; showAlert ( intent ) ; } }
private java.lang.String readPlainFile ( java.io.File file ) { try { return com.android.tools.lint.detector.api.LintUtils . getEncodedString ( this , file ) ; } catch ( java.io.IOException e ) { return STRING_CONSTANT ; } }
public byte [] getNpnSelectedProtocol () { return null ; }
public void stopEditors () { com.android.ide.eclipse.adt.AdtPlugin.sAndroidLogo . dispose () ; com.android.ide.eclipse.adt.internal.editors.IconFactory . getInstance () . dispose () ; org.eclipse.core.resources.IWorkspace ws = org.eclipse.core.resources.ResourcesPlugin . getWorkspace () ; com.android.ide.eclipse.adt.internal.resources.manager.GlobalProjectMonitor . stopMonitoring ( ws ) ; mRed . dispose () ; }
private native boolean dialNative ( byte [] address , java.lang.String number ) ;
public int getSpi () { return mSpi ; }
native void rsnAllocationData2D ( long con , long id , int xoff , int yoff , int mip , int face , int w , int h , long [] d , int sizeBytes ) ;
public void assignSim ( java.lang.String id , int state , java.lang.String link ) { if ( ( type ) == ( com.android.internal.telephony.HardwareConfig.DEV_HARDWARE_TYPE_SIM ) ) { uuid = id ; modemUuid = link ; this . state = state ; } }
public synchronized void selectAudioTrack ( int index ) { if ( ( NUMBER_CONSTANT <= index ) && ( index < ( mProto.audioPids.length ) ) ) { mProto.audioTrackIndex = index ; } else { mProto.audioTrackIndex = - NUMBER_CONSTANT ; } }
private void removeRequestMap ( int clientId , int globalId , com.android.server.NsdService.ClientInfo clientInfo ) { clientInfo.mClientIds . remove ( clientId ) ; clientInfo.mClientRequests . remove ( clientId ) ; mIdToClientInfoMap . remove ( globalId ) ; }
@ java.lang.Override public java.text.CollationKey getCollationKey ( java.lang.String source ) { return icuColl . getCollationKey ( source ) ; }
synchronized void nScriptSetVarVE ( long id , int slot , byte [] val , long e , int [] dims ) { validate () ; rsnScriptSetVarVE ( mContext , id , slot , val , e , dims ) ; }
private void doStagefrightTest ( final int rid ) throws java.lang.Exception { doStagefrightTestMediaPlayer ( rid ) ; doStagefrightTestMediaCodec ( rid ) ; }
@ java.lang.Override public java.util.List < com.android.build.FilterData > getSplitsData () { com.google.common.collect.ImmutableList.Builder < com.android.build.FilterData > filterDataBuilder = com.google.common.collect.ImmutableList . builder () ; addAllFilterData ( filterDataBuilder , densitySplits , OutputFile.FilterType.DENSITY ) ; addAllFilterData ( filterDataBuilder , languageSplits , OutputFile.FilterType.LANGUAGE ) ; return filterDataBuilder . build () ; }
private WifiNative.PnoNetwork createDummyPnoNetwork ( java.lang.String ssid ) { com.android.server.wifi.WifiNative.PnoNetwork pnoNetwork = new com.android.server.wifi.WifiNative.PnoNetwork () ; pnoNetwork.ssid = ssid ; return pnoNetwork ; }
@ com.android.annotations.NonNull public com.android.builder.model.AndroidProject getSingleModel () { return getSingleModel ( false , true ) ; }
@ java.lang.Override void addOptionInstance ( com.google.devtools.common.options.ParsedOptionDescription parsedOption , java.util.List < java.lang.String > warnings ) {}
public com.google.android.gles_jni.EGLSurface eglCreatePbufferSurface ( com.google.android.gles_jni.EGLDisplay display , com.google.android.gles_jni.EGLConfig config , int [] attrib_list ) { long eglSurfaceId = _eglCreatePbufferSurface ( display , config , attrib_list ) ; if ( eglSurfaceId == NUMBER_CONSTANT ) { return EGL10.EGL_NO_SURFACE ; } return new com.google.android.gles_jni.EGLSurfaceImpl ( eglSurfaceId ) ; }
public static float ReturnFloat99P25 () { double imm = NUMBER_CONSTANT ; return ( ( float ) ( imm ) ) ; }
static java.math.BigInt generatePrimeDefault ( int bitLength ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_generate_prime_ex ( r.bignum , bitLength , false , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; return r ; }
@ java.lang.Override public int initialize ( int subscriptionId , android.telephony.mbms.IMbmsDownloadManagerCallback listener ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
public int updateCallForward ( int action , int condition , java.lang.String number , int serviceClass , int timeSeconds ) { return NUMBER_CONSTANT ; }
public void test_ENGINE_by_id_Failure ( ) throws java.lang.Exception { org.apache.harmony.xnet.provider.jsse.NativeCrypto . ENGINE_load_dynamic () ; try { int engine = org.apache.harmony.xnet.provider.jsse.NativeCrypto . ENGINE_by_id ( STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.RuntimeException e ) {} }
public static void computeNativeTanpi ( android.renderscript.cts.TestNativeTanpi.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( android.renderscript.cts.CoreMathVerifier.NATIVE_PRECISION , android.renderscript.cts.CoreMathVerifier.NATIVE_PRECISION , true ) ; args.out = android.renderscript.cts.CoreMathVerifier . tanpi ( args.inV , t ) ; }
public void error ( int errorCode , java.lang.String message ) throws android.os.RemoteException {}
public java.util.Set < java.lang.String > keySet () { return nameValuePairs . keySet () ; }
@ java.lang.Override public void onFullResult ( android.net.wifi.ScanResult fullScanResult ) {}
@ java.lang.Override public java.lang.String getDisplayName () { return ( ( ( name ) + STRING_CONSTANT ) + ( count () ) ) + STRING_CONSTANT ; }
public void visitDeprecatedAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.DeprecatedAttribute deprecatedAttribute ) { attributeVisitor . visitDeprecatedAttribute ( clazz , method , deprecatedAttribute ) ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < java.lang.Boolean > isDirty () { return com.google.common.util.concurrent.Futures . immediateFuture ( false ) ; }
synchronized void nMeshGetIndices ( long id , int [] idxIds , int [] primitives , int vtxIdCount ) { validate () ; rsnMeshGetIndices ( mContext , id , idxIds , primitives , vtxIdCount ) ; }
public void testConstructor_NullStartDate_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , null , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
@ java.lang.Override public void onReady () { fetchRuimRecords () ; mCi . getCDMASubscription ( obtainMessage ( com.android.internal.telephony.cdma.RuimRecords.EVENT_GET_CDMA_SUBSCRIPTION_DONE ) ) ; }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( android.icu.impl.UResource.Key key ) { if ( ( width = android.icu.text.MeasureFormat.UnitDataSink . widthFromKey ( key ) ) != null ) { return typeSink ; } return null ; }
private void onAudioStateChanged ( byte [] address , int state ) { com.android.bluetooth.a2dpsink.A2dpSinkStateMachine.StackEvent event = new com.android.bluetooth.a2dpsink.A2dpSinkStateMachine.StackEvent ( com.android.bluetooth.a2dpsink.A2dpSinkStateMachine.EVENT_TYPE_AUDIO_STATE_CHANGED ) ; event.device = getDevice ( address ) ; event.valueInt = state ; sendMessage ( com.android.bluetooth.a2dpsink.A2dpSinkStateMachine.STACK_EVENT , event ) ; }
public void writeTo ( com.google.protobuf.nano.CodedOutputByteBufferNano output ) throws java.io.IOException {}
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . args ) { com.android.ide.eclipse.adt.AdtPlugin . printToConsole ( getProject () , java.lang.String . format ( msgFormat , args ) ) ; }
@ com.android.annotations.NonNull @ java.lang.Override public java.io.File [] getSkins () { return mSkins ; }
void notifyVFileClosed () { boolean previousState = lastVFileOpen . getAndSet ( false ) ; assert previousState ; }
public boolean isPlayerConnected () { if ( ( mMediaBrowser ) == null ) { if ( com.android.bluetooth.avrcp.BrowsedMediaPlayer.DEBUG ) android.util.Log . d ( com.android.bluetooth.avrcp.BrowsedMediaPlayer.TAG , STRING_CONSTANT ) ; return false ; } return mMediaBrowser . isConnected () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.mockito.MockitoAnnotations . initMocks ( this ) ; }
public void sendAddConferenceCall ( java.lang.String id ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . addConferenceCall ( id , parcelable ( mConferenceById . get ( id ) ) , null ) ; } }
public java.io.FileDescriptor getFileDescriptor () { if ( ( mPfd ) == null ) { return null ; } return mPfd . getFileDescriptor () ; }
public void createTest ( com.android.rs.image.Resources res ) { mScript = new com.android.rs.image.ScriptC_greyscale ( mRS ) ; }
@ java.lang.Override public void loggedRun () { if ( mIsPending ) { android.telecom.Log . i ( this , STRING_CONSTANT ) ; android.telecom.Log . addEvent ( mCall , LogUtils.Events.FILTERING_TIMED_OUT ) ; mListener . onCallFilteringComplete ( mCall , mResult ) ; mIsPending = false ; } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setFillType ( long nPath , int ft ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate.mFillType = Path.sFillTypeArray [ ft ] ; }
final E itemAt ( int i ) { @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) E x = ( ( E ) ( items [ i ] ) ) ; return x ; }
native long rsnScriptFieldIDCreate ( long con , long sid , int slot ) ;
@ com.sun.istack.internal.Nullable public static java.awt.image.BufferedImage loadCompatibleImage ( java.net.URL resource ) throws java.io.IOException { java.awt.image.BufferedImage image = javax.imageio.ImageIO . read ( resource ) ; if ( image == null ) { return null ; } return com.android.draw9patch.graphics.GraphicsUtilities . toCompatibleImage ( image ) ; }
@ java.lang.Override public boolean isPageComplete () { if ( ! ( mShown ) ) { return false ; } return super . isPageComplete () ; }
public long getRetainedSize ( com.android.ahat.heapdump.AhatHeap heap ) { int index = heap . getIndex () ; return ( NUMBER_CONSTANT <= index ) && ( index < ( mRetainedSizes.length ) ) ? mRetainedSizes [ heap . getIndex () ] : NUMBER_CONSTANT ; }
@ java.lang.Override public void onResults ( android.net.wifi.WifiScanner [] results ) {}
public void logIn () { users . removeActiveUser () ; logIn ( null ) ; }
final int getInt ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getInt ( ( offset + ( address ) ) ) ; }
public void testConstructorNPE2 () { try { java.util.concurrent.ExecutorService e = java.util.concurrent.Executors . newCachedThreadPool () ; new java.util.concurrent.ExecutorCompletionService ( e , null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public int getModifiers () { return java.lang.reflect.AbstractMethod . fixMethodFlags ( accessFlags ) ; }
@ java.lang.Override protected void fillRtTestInfos () {}
private static void draw ( long nCanvas , com.android.layoutlib.bridge.impl.GcSnapshot.Drawable drawable ) { android.graphics.Canvas_Delegate canvasDelegate = android.graphics.Canvas_Delegate.sManager . getDelegate ( nCanvas ) ; if ( canvasDelegate == null ) { return; } canvasDelegate.mSnapshot . draw ( drawable ) ; }
private static boolean isTerminator ( int ch , int format ) { switch ( ch ) { case - NUMBER_CONSTANT : case CHAR_CONS : case CHAR_CONS : return true ; case CHAR_CONS : return format != ( sun.security.x509.AVA.RFC2253 ) ; default: return false ; } }
@ org.junit.Test public void test002d ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( true , null ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
private void printFilteredProblem ( @ javax.annotation.Nonnull com.android.jack.reporting.Reportable.ProblemLevel problemLevel , @ javax.annotation.Nonnull java.lang.String message ) { printFilteredProblem ( problemLevel , message , null ) ; }
@ java.lang.Override public void onIsConferencedChanged ( com.android.server.telecom.Call call ) { android.telecom.Log . d ( this , STRING_CONSTANT , call ) ; updateCall ( call ) ; }
@ java.lang.Override protected void loge ( java.lang.String s ) { android.util.Log . e ( getName () , s ) ; }
@ android.test.suitebuilder.annotation.SmallTest public void testLang_India ( ) throws java.lang.Exception { assertEquals ( STRING_CONSTANT , com.android.internal.telephony.MccTable . defaultLanguageForMcc ( NUMBER_CONSTANT ) ) ; assertEquals ( STRING_CONSTANT , com.android.internal.telephony.MccTable . defaultLanguageForMcc ( NUMBER_CONSTANT ) ) ; assertEquals ( STRING_CONSTANT , com.android.internal.telephony.MccTable . defaultLanguageForMcc ( NUMBER_CONSTANT ) ) ; }
private void testExplicitPositionMatchParent () { doLayoutParamTest ( ( android.view.WindowManager.LayoutParams params ) - > { params.width = WindowManager.LayoutParams.MATCH_PARENT ; params.height = WindowManager.LayoutParams.MATCH_PARENT ; params.x = NUMBER_CONSTANT ; params.y = NUMBER_CONSTANT ; } ) ; }
public void testCancelSoon ( ) throws java.lang.Exception { doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.CANCEL_SOON , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_EXTRAS , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; }
protected void cleanup () {}
@ org.junit.Test @ com.android.devtools.systemimage.uitest.annotations.TestInfo public void testDeveloperOptionsManager ( ) throws java.lang.Exception { com.android.devtools.systemimage.uitest.utils.DeveloperOptionsManager . enableDeveloperOptions ( testFramework ) ; org.junit.Assert . assertTrue ( STRING_CONSTANT , com.android.devtools.systemimage.uitest.utils.DeveloperOptionsManager . isDeveloperOptionsEnabled ( testFramework ) ) ; }
protected void onButtonAddonSites () { com.android.sdkuilib.internal.repository.AddonSitesDialog d = new com.android.sdkuilib.internal.repository.AddonSitesDialog ( getShell () , mUpdaterData ) ; if ( d . open () ) { loadPackages () ; } }
synchronized java.lang.String nGetName ( long obj ) { validate () ; return rsnGetName ( mContext , obj ) ; }
public static android.net.http.HttpResponseCache getInstalled () { java.net.ResponseCache installed = java.net.ResponseCache . getDefault () ; if ( installed instanceof android.net.http.HttpResponseCache ) { return new android.net.http.HttpResponseCache ( ( ( android.net.http.HttpResponseCache ) ( installed ) ) ) ; } return null ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void bleAddAdvertiseDataManufacturerId ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) java.lang.Integer manufacturerId , @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) byte [] manufacturerSpecificData ) { mAdvertiseDataBuilder . addManufacturerData ( manufacturerId , manufacturerSpecificData ) ; }
public void testWildcardMatchesWildcardSuffix () { assertTrue ( verifier . verifyHostName ( STRING_CONSTANT , STRING_CONSTANT ) ) ; assertTrue ( verifier . verifyHostName ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
public static com.android.dialer.app.calllog.MissedCallNotifier getInstance ( android.content.Context context ) { return new com.android.dialer.app.calllog.MissedCallNotifier ( context , com.android.dialer.app.calllog.CallLogNotificationsQueryHelper . getInstance ( context ) ) ; }
public void visitRuntimeVisibleParameterAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.RuntimeVisibleParameterAnnotationsAttribute runtimeVisibleParameterAnnotationsAttribute ) { if ( ( optionalAttributeVisitor ) != null ) { optionalAttributeVisitor . visitRuntimeVisibleParameterAnnotationsAttribute ( clazz , method , runtimeVisibleParameterAnnotationsAttribute ) ; } }
@ java.lang.Override public void onCallStateChanged ( com.android.server.telecom.Call call , int oldState , int newState ) { updateCall ( call ) ; }
public void textOutput ( java.lang.String textOutput ) { this . textOutput = new java.io.File ( textOutput ) ; }
public int getLine () { return getPosition () . getLine () ; }
public static java.lang.String copyValueOf ( char [] data , int offset , int count ) { return new java.lang.String ( data , offset , count ) ; }
public com.android.dx.merge.SortableType adjust ( com.android.dx.merge.SortableType sortableType ) { return new com.android.dx.merge.SortableType ( sortableType . getDex () , adjust ( sortableType . getClassDef () ) ) ; }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . removeMarker ( com.android.jack.shrob.shrink.KeepMarker . class ) ; }
@ java.lang.Override public void turnOnIms ( ) throws android.os.RemoteException { checkBinderConnection () ; getServiceInterface ( mBinder ) . turnOnIms ( mSlotId ) ; }
@ java.lang.Override void ensureProviderChosen () { getSpi () ; }
@ java.lang.Override public void merge ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws com.android.jack.backend.dex.DexWritingException { try { mergeDex ( merger , type ) ; } catch ( com.android.jack.tools.merger.MergingOverflowException e ) { throw new com.android.jack.backend.dex.DexWritingException ( new com.android.jack.backend.dex.SingleDexOverflowException ( e ) ) ; } }
public static long ShrLongInt () { long lhs = NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs > > rhs ; }
public java.lang.String getNetworkCountryIso ( int subId ) { return getNetworkCountryIsoForPhone ( getPhoneId ( subId ) ) ; }
public E get ( long key ) { return get ( key , null ) ; }
public native java.lang.Object invoke ( java.lang.Object receiver , java.lang.Object . . . args ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.reflect.InvocationTargetException ;
@ org.junit.Before public void reset () { android.autofillservice.cts.AutoFillServiceTestCase.sReplier . reset () ; }
synchronized boolean disconnect ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.TAG , ( STRING_CONSTANT + device ) ) ; } if ( ! ( checkDevice ( device ) ) ) { return false ; } return disconnectNative () ; }
@ java.lang.Override protected java.lang.Iterable < ? extends com.android.dialer.rootcomponentgenerator.ProcessingStep > initSteps () { return com.google.common.collect.ImmutableList . of ( new com.android.dialer.rootcomponentgenerator.MetadataGeneratingStep ( processingEnv ) , new com.android.dialer.rootcomponentgenerator.RootComponentGeneratingStep ( processingEnv ) ) ; }
@ com.android.sdklib.annotations.VisibleForTesting java.util.List < java.lang.String > getIncludedBy ( java.lang.String included ) { ensureInitialized () ; return mIncludedBy . get ( included ) ; }
public com.android.server.wifi.BaseWifiDiagnostics makeWifiDiagnostics ( com.android.server.wifi.WifiNative wifiNative ) { if ( mUseRealLogger ) { return new com.android.server.wifi.WifiDiagnostics ( mContext , this , mWifiStateMachine , wifiNative , mBuildProperties , new com.android.server.wifi.LastMileLogger ( this ) ) ; } else { return new com.android.server.wifi.BaseWifiDiagnostics ( wifiNative ) ; } }
public int start () { return data [ ( ( pos ) + NUMBER_CONSTANT ) ] ; }
public native T newInstance ( java.lang.Object . . . args ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.InstantiationException , java.lang.reflect.InvocationTargetException ;
public boolean isConnected ( int callServiceType , int callType ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . isConnected ( callServiceType , callType ) ; } }
@ java.lang.Override protected void implConfigureBlocking ( boolean blocking ) throws java.io.IOException { libcore.io.IoUtils . setBlocking ( impl . getFD$ () , blocking ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; }
@ java.lang.Override public int getPort () { return ( peerPort ) == ( - NUMBER_CONSTANT ) ? super . getPort () : peerPort ; }
private ApkVerifier.Result verify ( java.lang.String apkFilenameInResources ) throws com.android.apksig.apk.ApkFormatException , java.io.IOException , java.security.NoSuchAlgorithmException { return verify ( apkFilenameInResources , null , null ) ; }
@ java.lang.Override protected void engineInit ( javax.net.ssl.ManagerFactoryParameters spec ) throws java.security.InvalidAlgorithmParameterException { throw new java.security.InvalidAlgorithmParameterException ( STRING_CONSTANT ) ; }
void verifyCertificateChain ( long [] certificateChainRefs , java.lang.String authMethod ) throws java.security.cert.CertificateException ;
private static java.util.Properties createSystemProperties () { java.util.Properties p = new java.lang.System.PropertiesWithNonOverrideableDefaults ( java.lang.System.unchangeableSystemProperties ) ; p . put ( STRING_CONSTANT , STRING_CONSTANT ) ; return p ; }
public boolean isCleartextTrafficPermitted () { return mCleartextTrafficPermitted ; }
public void showHintLabel ( boolean show ) { myHintLabel . setVisible ( show ) ; }
@ java.lang.Override public boolean isMemoryLow () { return mLowMemFlag ; }
public android.util.Pair < byte [] , byte [] > readOutOfBandData () { return null ; }
public void onAppStatusChanged ( android.bluetooth.BluetoothDevice pluggedDevice , boolean registered ) { android.util.Log . d ( android.bluetooth.BluetoothHidDeviceCallback.TAG , ( ( ( STRING_CONSTANT + pluggedDevice ) + STRING_CONSTANT ) + registered ) ) ; }
@ java.lang.Override public java.util.List < android.bluetooth.BluetoothHeadsetClientCall > getCurrentCalls ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.hfpclient.HeadsetClientService service = getService () ; if ( service == null ) { return new java.util.ArrayList < android.bluetooth.BluetoothHeadsetClientCall > () ; } return service . getCurrentCalls ( device ) ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { selectDevice ( d ) ; onDeviceChange ( true ) ; }
@ java.lang.Override public com.android.internal.telephony.Connection dial ( java.lang.String dialString , int videoState ) throws com.android.internal.telephony.CallStateException { return dialInternal ( dialString , videoState , null , null ) ; }
private void callSetupUI () { if ( ! ( mySetupCalled ) ) { mv . visitVarInsn ( Opcodes.ALOAD , NUMBER_CONSTANT ) ; mv . visitMethodInsn ( Opcodes.INVOKESPECIAL , myClassName , com.intellij.uiDesigner.compiler.AsmCodeGenerator.SETUP_METHOD_NAME , STRING_CONSTANT , false ) ; mySetupCalled = true ; } }
public static native long SSL_SESSION_get_time ( long sslSessionNativePointer ) ;
public static void computeClz ( android.renderscript.cts.TestClz.ArgumentsCharChar args ) { int x = args.inValue ; args.out = ( ( byte ) ( ( java.lang.Integer . numberOfLeadingZeros ( ( x & NUMBER_CONSTANT ) ) ) - NUMBER_CONSTANT ) ) ; }
public static void computeAbs ( android.renderscript.cts.TestAbs.ArgumentsShortUshort args ) { args.out = ( ( short ) ( java.lang.Math . abs ( args.inV ) ) ) ; }
private void pause ( int state ) { if ( ( mState ) == ( android.webkit.HTML5Audio.STARTED ) ) { if ( ( mTimer ) != null ) { mTimer . purge () ; } mMediaPlayer . pause () ; mState = state ; } }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { synchronized ( this ) { java.util.regex.Matcher . closeImpl ( address ) ; } } finally { super . finalize () ; } }
public static android.net.wifi.WifiConfiguration createEapNetwork () { android.net.wifi.WifiConfiguration configuration = com.android.server.wifi.WifiConfigurationTestUtil . generateWifiConfig ( com.android.server.wifi.WifiConfigurationTestUtil.TEST_NETWORK_ID , com.android.server.wifi.WifiConfigurationTestUtil.TEST_UID , com.android.server.wifi.WifiConfigurationTestUtil . createNewSSID () , true , true , null , null , com.android.server.wifi.WifiConfigurationTestUtil.SECURITY_EAP ) ; return configuration ; }
@ java.lang.Override public java.lang.String toString () { return ( ( ( g ) + STRING_CONSTANT ) + ( f ) ) + STRING_CONSTANT ; }
@ java.lang.Override public void onContentChanged ( com.android.mms.ui.MessageListAdapter adapter ) { startMsgListQuery () ; }
public void test_setPerformancePreference_Int_Int_Int ( ) throws java.lang.Exception { try ( java.net.Socket theSocket = new java.net.Socket () ) { theSocket . setPerformancePreferences ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
@ java.lang.Override public void printmapping ( java.lang.Object printMapping ) throws proguard.ParseException { mappingFile = ( ( java.io.File ) ( printMapping ) ) ; super . printmapping ( printMapping ) ; }
static void inlinedForNull ( java.lang.Iterable < > it ) { it . iterator () ; if ( it != null ) { throw new java.lang.Error ( STRING_CONSTANT ) ; } }
@ java.lang.Override public final com.android.jack.dx.rop.cst.CstString getName () { return method . getName () ; }
public abstract android.webkit.WebHistoryItem getItemAtIndex ( int index ) ;
@ com.android.cts.util.SecurityTest public void testStagefright_bug_65717533 ( ) throws java.lang.Exception { doStagefrightTest ( R.raw.bug_65717533_header_corrupt ) ; }
protected void launchActivityOnDisplay ( java.lang.String targetActivityName , int displayId ) throws java.lang.Exception { executeShellCommand ( android.server.cts.ActivityManagerTestBase . getAmStartCmd ( targetActivityName , displayId ) ) ; mAmWmState . waitForValidState ( mDevice , targetActivityName ) ; }
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . arg ) { log ( msgFormat , arg ) ; }
private void createTerminals () { addTerminals ( com.android.se.SecureElementService.ESE_TERMINAL ) ; addTerminals ( com.android.se.SecureElementService.UICC_TERMINAL ) ; }
@ java.lang.Override public void exit () { cleanupUpstream () ; super . exit () ; }
@ java.lang.Override public void onPlayStatusChanged ( int status ) { updateMenuVisibility () ; if ( mTimeShiftManager . isAvailable () ) { updateControls ( false ) ; } }
@ java.lang.Override protected void onStop () { android.os.Trace . beginSection ( STRING_CONSTANT ) ; com.android.dialer.common.LogUtil . i ( STRING_CONSTANT , STRING_CONSTANT ) ; isVisible = false ; super . onStop () ; common . onStop () ; android.os.Trace . endSection () ; }
private static boolean isInstanceOfClass ( com.android.tools.perflib.heap.Instance inst , java.lang.String className ) { com.android.tools.perflib.heap.ClassObj cls = ( inst == null ) ? null : inst . getClassObj () ; return ( cls != null ) && ( className . equals ( cls . getClassName () ) ) ; }
static java.lang.String getFlagName ( com.google.devtools.common.options.OptionDefinition optionDefinition ) { java.lang.String name = optionDefinition . getOptionName () ; return optionDefinition . isBooleanField () ? STRING_CONSTANT + name : name ; }
public void update () { for ( com.intellij.diff.tools.simple.SimpleDiffChange.MyGutterOperation operation : myOperations ) { operation . update ( false ) ; } }
public long getSize ( com.android.ahat.heapdump.AhatHeap heap ) { int index = heap . getIndex () ; return ( index >= NUMBER_CONSTANT ) && ( index < ( mSizesByHeap.length ) ) ? mSizesByHeap [ index ] : NUMBER_CONSTANT ; }
void creation ( @ com.android.annotations.NonNull java.lang.Thread t ) throws java.io.IOException ;
@ org.junit.After @ java.lang.Override public void tearDown ( ) throws java.lang.Exception { if ( ( videoView ) != null ) { getHelper () . cleanUpView ( videoView ) ; } if ( ( videoViewFactory ) != null ) { videoViewFactory . release () ; } super . tearDown () ; }
public static int ThreeBlocks ( boolean x , boolean y ) { return x ? NUMBER_CONSTANT : y ? NUMBER_CONSTANT : NUMBER_CONSTANT ; }
public void loadLibrary ( java.lang.String libname , java.lang.ClassLoader classLoader ) { java.lang.System . logE ( ( STRING_CONSTANT + STRING_CONSTANT ) ) ; loadLibrary0 ( classLoader , libname ) ; }
@ com.android.annotations.NonNull public abstract java.lang.String getName ( ) ;
@ java.lang.Override public boolean onInitialize ( @ com.android.annotations.NonNull java.lang.String fqcn , @ com.android.annotations.NonNull com.android.ide.common.api.IClientRulesEngine engine ) { mRulesEngine = engine ; return true ; }
public static void assertEqualByteArrays ( byte [] [] expected , byte [] [] actual ) { org.junit.Assert . assertEquals ( java.util.Arrays . deepToString ( expected ) , java.util.Arrays . deepToString ( actual ) ) ; }
public void shutdown () { synchronized ( lock ) { if ( isAcceptingRequests ) { shutdownConnections () ; isAcceptingRequests = false ; lock . notifyAll () ; } } }
public void execute ( java.io.OutputStream stdout , java.lang.String . . . tasks ) { execute ( java.util.Collections . < java.lang.String > emptyList () , stdout , false , tasks ) ; }
@ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { try { server . startHandshake () ; fail () ; } catch ( javax.net.ssl.SSLException expected ) {} return null ; }
@ java.lang.Override public java.lang.String toString () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( NUMBER_CONSTANT ) ; sb . append ( getClass () . getName () ) ; sb . append ( items ) ; return sb . toString () ; }
public boolean isTerminated () { return mIsTerminated ; }
@ java.lang.Override protected java.lang.String workerClassPath () { return java.lang.System . getProperty ( STRING_CONSTANT ) ; }
public static void validate ( @ javax.annotation.Nonnull com.android.jack.ir.ast.cfg.JBasicBlockElement element ) { new com.android.jack.ir.ast.cfg.CfgExpressionValidator ( element ) . accept ( element ) ; }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onDescriptorRead ( this , descriptor , status ) ; } }
protected int paddedBlockSizeBytes () { int paddedBlockSizeBytes = keySizeBytes () ; if ( ( padding ) == ( NativeConstants.RSA_PKCS1_PADDING ) ) { paddedBlockSizeBytes -- ; paddedBlockSizeBytes -= NUMBER_CONSTANT ; } return paddedBlockSizeBytes ; }
@ java.lang.Override public void setMute ( boolean muted ) { this . setMute ( muted ) ; }
public void installPackage ( final android.net.Uri packageURI , final android.content.pm.IPackageInstallObserver observer , final int flags , final java.lang.String installerPackageName ) { installPackageWithVerification ( packageURI , observer , flags , installerPackageName , null , null , null ) ; }
@ java.lang.Override public boolean isConnected ( int callServiceType , int callType ) throws android.os.RemoteException { synchronized ( mLock ) { checkBinderConnection () ; return getServiceInterface ( mBinder ) . isConnected ( mSlotId , mSupportedFeature , callServiceType , callType ) ; } }
private void refreshLogCatTable () { synchronized ( this ) { if ( ( mCurrentRefresher ) == null ) { mCurrentRefresher = new com.android.ddmuilib.logcat.LogCatPanel.LogCatTableRefresherTask () ; org.eclipse.swt.widgets.Display . getDefault () . asyncExec ( mCurrentRefresher ) ; } } }
@ java.lang.Override public boolean setFocus () { return tree . setFocus () ; }
@ java.lang.Override @ org.gradle.api.tasks.Optional @ org.gradle.api.tasks.InputFile public java.io.File getLintConfig () { return lintConfig ; }
public void callSessionMergeComplete ( com.android.ims.internal.IImsCallSession newSession ) { try { mListener . callSessionMergeComplete ( newSession ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override public void testEnded ( com.android.ddmlib.testrunner.TestIdentifier test , java.util.Map < java.lang.String , java.lang.String > testMetrics ) { mRunResult . testEnded ( test , testMetrics ) ; }
abstract void addOptionInstance ( com.google.devtools.common.options.ParsedOptionDescription parsedOption , java.util.List < java.lang.String > warnings ) throws com.google.devtools.common.options.OptionsParsingException ;
@ android.platform.test.annotations.SecurityTest public void testPocBug_35048450 ( ) throws java.lang.Exception { enableAdbRoot ( getDevice () ) ; android.security.cts.AdbUtils . runPoc ( STRING_CONSTANT , getDevice () , NUMBER_CONSTANT ) ; }
public android.net.wifi.WifiConfiguration answer ( int netId ) { if ( ( netId >= NUMBER_CONSTANT ) && ( netId < ( configs.length ) ) ) { return new android.net.wifi.WifiConfiguration ( configs [ netId ] ) ; } else { return null ; } }
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . arg ) { mRoot . info ( msgFormat , arg ) ; }
public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . createCallSession ( sessionId , profile ) ; } }
@ java.lang.Override protected void tearDown () { com.android.cts.verifier.notifications.MockListener.MockListener . getInstance () . resetData () ; }
public void testPlayHlsStreamWithQueryString ( ) throws java.lang.Throwable { localHlsTest ( STRING_CONSTANT , true , false ) ; }
public void appendIfAppropriate ( com.android.jack.dx.rop.cst.Constant cst ) { assert cst != null ; if ( cst instanceof com.android.jack.dx.rop.cst.CstCallSiteRef ) { callSiteIds . add ( ( ( com.android.jack.dx.rop.cst.CstCallSiteRef ) ( cst ) ) ) ; } }
static void inlinedInvokeStaticViaNonStatic ( java.lang.Iterable < > it ) { if ( it != null ) { Main . inlinedInvokeStaticViaNonStaticHelper ( null ) ; Main . inlinedInvokeStaticViaNonStaticHelper ( it ) ; } }
private void readEmptyLine ( java.io.InputStream in ) throws java.io.IOException { java.lang.String line = readAsciiUntilCrlf ( in ) ; if ( ( line . length () ) != NUMBER_CONSTANT ) { throw new java.lang.IllegalStateException ( ( STRING_CONSTANT + line ) ) ; } }
public void startAdvertisingSet ( android.bluetooth.le.AdvertisingSetParameters parameters , android.bluetooth.le.AdvertiseData advertiseData , android.bluetooth.le.AdvertiseData scanResponse , android.bluetooth.le.PeriodicAdvertisingParameters periodicParameters , android.bluetooth.le.AdvertiseData periodicData , android.bluetooth.le.AdvertisingSetCallback callback , android.os.Handler handler ) { startAdvertisingSet ( parameters , advertiseData , scanResponse , periodicParameters , periodicData , NUMBER_CONSTANT , callback , handler ) ; }
@ java.lang.Override public java.io.File get () { return mappingFile ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.io.File getMappingFile () { return getVariantData () . getMappingFile () ; }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { if ( hasRuntimeAnnotation ( type ) ) { type . addMarker ( MainDexMarker.INSTANCE ) ; } }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . removeMarker ( com.android.jack.shrob.shrink.KeepMarker . class ) ; type . removeMarker ( com.android.jack.analysis.tracer.ExtendingOrImplementingClassMarker . class ) ; }
@ java.lang.Override public int cancelDownload ( android.telephony.mbms.DownloadRequest downloadRequest ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
public static native boolean BN_mod_exp ( long r , long a , long p , long m ) ;
synchronized void nAllocationSetSurface ( long alloc , android.view.Surface sur ) { validate () ; rsnAllocationSetSurface ( mContext , alloc , sur ) ; }
@ com.android.annotations.Nullable public java.util.List < com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation > getAnnotations ( @ com.android.annotations.NonNull com.android.tools.lint.client.api.JavaParser.ResolvedClass cls ) { com.android.tools.lint.ExternalAnnotationRepository.ClassInfo c = findClass ( cls ) ; if ( c == null ) { return null ; } return c . getAnnotations () ; }
native void rsnAllocationRead ( long con , long id , byte [] d ) ;
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { resettingStubber = new android.support.test.espresso.intent.ResettingStubberImpl () ; resettingStubber . initialize () ; }
@ com.android.annotations.NonNull public java.io.File getLocation ( ) ;
private void assertVerdict ( int expected , byte [] program , byte [] packet , int filterAge ) { android.net.apf.ApfTest . assertReturnCodesEqual ( expected , android.net.apf.ApfTest . apfSimulate ( program , packet , null , filterAge ) ) ; }
public void testSp ( ) throws java.lang.Exception { assertEquals ( ( STRING_CONSTANT + ( ( ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) ) , lintFiles ( STRING_CONSTANT ) ) ; }
public static boolean isEmpty () { synchronized ( org.apache.harmony.security.fortress.Services.services ) { return org.apache.harmony.security.fortress.Services.services . isEmpty () ; } }
private com.intellij.psi.impl.file.PsiPackageImpl createPackage ( java.lang.String qualifiedName ) { return new com.intellij.psi.impl.file.PsiPackageImpl ( myManager , qualifiedName ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void nativeSetHasAlpha ( long nativeBitmap , boolean hasAlpha ) { android.graphics.Bitmap_Delegate delegate = android.graphics.Bitmap_Delegate.sManager . getDelegate ( nativeBitmap ) ; if ( delegate == null ) { return; } delegate.mHasAlpha = hasAlpha ; }
public void test_RAND_bytes_Null_Failure ( ) throws java.lang.Exception { byte [] output = null ; try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . RAND_bytes ( output ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.RuntimeException expected ) {} }
public static void computeTan ( android.renderscript.cts.TestTan.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . tan ( args.inV , t ) ; }
private final native int readAsset ( long asset , byte [] b , int off , int len ) ;
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { if ( needsCoverage ( t ) ) { long classId = com.android.jack.coverage.CodeCoverageSelector . computeClassID ( t ) ; t . addMarker ( new com.android.jack.coverage.CodeCoverageMarker ( classId ) ) ; } }
@ java.lang.Deprecated public java.lang.String select ( com.ibm.icu.text.PluralRules.FixedDecimal number ) { return rules . select ( number ) ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { validatePage () ; }
public boolean accept ( org.eclipse.core.resources.IProject project ) { com.android.ide.eclipse.adt.internal.project.ProjectState state = com.android.ide.eclipse.adt.internal.sdk.Sdk . getProjectState ( project ) ; if ( state != null ) { return ( state . isLibrary () ) == false ; } return false ; }
@ java.lang.Override public boolean hasClients () { synchronized ( mClients ) { return ( mClients . size () ) > NUMBER_CONSTANT ; } }
protected native void socketSetOption0 ( int opt , java.lang.Object val ) throws java.net.SocketException ;
native void rsnAllocationRead ( long con , long id , int [] d ) ;
@ java.lang.Override public void exit () { mWifiConnectivityManager . setWifiEnabled ( false ) ; mWifiMetrics . setWifiState ( WifiMetricsProto.WifiLog.WIFI_DISABLED ) ; }
@ java.lang.Override public final int hashCode () { return ( ( ( definingClass . hashCode () ) * NUMBER_CONSTANT ) + ( ( name . hashCode () ) * NUMBER_CONSTANT ) ) + ( nat . hashCode () ) ; }
@ java.lang.Override public void onStreamStateUpdated ( int state , int reason ) { this . onStreamStateUpdated ( state , reason ) ; }
private static int getMask ( int length ) { return ( NUMBER_CONSTANT < < length ) - NUMBER_CONSTANT ; }
@ java.lang.Override public int compare ( java.lang.Comparable left , java.lang.Comparable right ) { com.google.common.base.Preconditions . checkNotNull ( left ) ; com.google.common.base.Preconditions . checkNotNull ( right ) ; return left . compareTo ( right ) ; }
public native void setChar ( java.lang.Object obj , char c ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
protected boolean isMarked ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode node ) { synchronized ( node ) { return node . containsMarker ( markerClass ) ; } }
public static void run ( ) throws java.lang.Exception { art.Test931 . testAgentThread () ; java.lang.System.out . println ( STRING_CONSTANT ) ; }
@ org.junit.Test @ org.junit.experimental.categories.Category ( value = com.android.jack.test.category.RuntimeRegressionTest . class ) public void int_to_byte ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( INT_TO_BYTE ) . compileAndRunTest () ; }
public void callSessionUssdMessageReceived ( int mode , java.lang.String ussdMessage ) { try { mListener . callSessionUssdMessageReceived ( mode , ussdMessage ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
public static < T > org.hamcrest.Matcher < T > nullValue ( java.lang.Class < T > type ) { return new org.hamcrest.core.IsNull < T > () ; }
@ android.annotation.TestApi protected com.android.internal.telephony.euicc.IEuiccController getIEuiccController () { return IEuiccController.Stub . asInterface ( android.os.ServiceManager . getService ( STRING_CONSTANT ) ) ; }
public com.android.apksig.ApkVerifier.Builder setMinCheckedPlatformVersion ( int minSdkVersion ) { mMinSdkVersion = minSdkVersion ; return this ; }
@ org.junit.Test public void testInitialize_success ( ) throws java.lang.Exception { executeAndValidateInitializationSequence ( false , false , false , false ) ; }
@ java.lang.Override public boolean isFirstBoot () { return ! ( mRestoredSettings ) ; }
public abstract void log ( java.lang.String log ) ;
void removePackagesRecursive ( java.lang.String . . . packageNames ) { for ( java.lang.String packageName : packageNames ) { testCaseClasses . removeAll ( testCaseClassesInPackage ( packageName ) ) ; } }
private native int genLibs ( java.lang.String working_dir , java.lang.String sysroot ) ;
public void setMinSdkVersionString ( java.lang.String minSdkVersion ) { mMinSdkVersionString = minSdkVersion ; if ( ( mMinSdkVersionString ) != null ) { try { mMinSdkVersion = java.lang.Integer . parseInt ( mMinSdkVersionString ) ; } catch ( java.lang.NumberFormatException e ) { mMinSdkVersion = NUMBER_CONSTANT ; } } }
synchronized boolean isConnected () { return ( getCurrentState () ) == ( mConnected ) ; }
public static java.lang.String toXml ( org.w3c.dom.Node node , boolean preserveWhitespace ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( NUMBER_CONSTANT ) ; com.android.utils.XmlUtils . append ( sb , node , NUMBER_CONSTANT ) ; return sb . toString () ; }
@ org.junit.Test public void invalidateAuthToken ( ) throws java.lang.Exception { mAuthenticator . invalidateAuthToken ( STRING_CONSTANT ) ; org.mockito.Mockito . verify ( mAccountManager ) . invalidateAuthToken ( STRING_CONSTANT , STRING_CONSTANT ) ; }
private void startNextVibrationLocked () { if ( ( mVibrations . size () ) <= NUMBER_CONSTANT ) { mCurrentVibration = null ; return; } mCurrentVibration = mVibrations . getFirst () ; startVibrationLocked ( mCurrentVibration ) ; }
@ com.android.annotations.Nullable public java.lang.String getId () { if ( ( ( myGroupId ) == null ) || ( ( myArtifactId ) == null ) ) { return null ; } return java.lang.String . format ( STRING_CONSTANT , myGroupId , myArtifactId ) ; }
final double getDouble ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getDouble ( ( offset + ( address ) ) ) ; }
public java.lang.String getActiveScorerPackage () { android.net.NetworkScorerAppManager.NetworkScorerAppData app = new android.net.NetworkScorerAppManager ( mContext ) . getActiveScorer () ; if ( app == null ) { return null ; } return app.mPackageName ; }
public void testCreate ( ) throws java.lang.Exception { java.util.Properties props = createExpectedProps () ; java.lang.Package p = new com.android.sdklib.internal.repository.packages.PackageTest.MockPackage ( null , props , ( - NUMBER_CONSTANT ) , null , null , null , com.android.sdklib.internal.repository.packages.PackageTest.LOCAL_ARCHIVE_PATH ) ; testCreatedPackage ( p ) ; }
@ java.lang.Override void setUp () { createChannels () ; sendNotifications ( ( ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.SEND_B ) | ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.SEND_C ) ) , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.MODE_NONE , true , true ) ; sendNotifications ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.SEND_A , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.MODE_NONE , true , false ) ; status = READY ; }
public void test_checkClientTrusted_02 ( ) throws java.lang.Exception { org.apache.harmony.xnet.tests.support.X509TrustManagerImpl xtm = new org.apache.harmony.xnet.tests.support.X509TrustManagerImpl () ; java.security.cert.X509Certificate [] xcert = setInvalid () ; try { xtm . checkClientTrusted ( xcert , STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.security.cert.CertificateException expected ) {} }
private boolean verify ( java.lang.String host , java.security.cert.X509Certificate certificate ) { return java.net.InetAddress . isNumeric ( host ) ? verifyIpAddress ( host , certificate ) : verifyHostName ( host , certificate ) ; }
public static < T > org.hamcrest.Matcher < T > in ( T [] elements ) { return new org.hamcrest.collection.IsIn < T > ( elements ) ; }
private void logOutgoing ( java.lang.String msg , java.lang.Object . . . params ) { android.telecom.Log . d ( this , ( ( ( STRING_CONSTANT + ( mComponentName . flattenToShortString () ) ) + STRING_CONSTANT ) + msg ) , params ) ; }
@ java.lang.Override protected void tearDown ( ) throws java.lang.Exception { java.io.File toolFolder = mBuildToolInfo . getLocation () ; com.android.builder.internal.compiler.PreDexCacheTest . deleteFolder ( toolFolder ) ; com.android.builder.internal.compiler.PreDexCache . getCache () . clear ( null , null ) ; super . tearDown () ; }
public static com.android.dialer.glidephotomanager.PhotoInfo.Builder builder () { return new com.android.dialer.glidephotomanager.AutoValue_PhotoInfo.Builder () . setPhotoId ( NUMBER_CONSTANT ) . setIsBusiness ( false ) . setIsVoicemail ( false ) . setIsBlocked ( false ) . setIsSpam ( false ) . setIsVideo ( false ) ; }
public android.graphics.Xfermode setXfermode ( android.graphics.Xfermode xfermode ) { long xfermodeNative = NUMBER_CONSTANT ; if ( xfermode != null ) xfermodeNative = xfermode.native_instance ; android.graphics.Paint . native_setXfermode ( mNativePaint , xfermodeNative ) ; mXfermode = xfermode ; return xfermode ; }
private boolean isInvalidOperatorNumeric ( java.lang.String operatorNumeric ) { return ( ( operatorNumeric == null ) || ( ( operatorNumeric . length () ) < NUMBER_CONSTANT ) ) || ( operatorNumeric . startsWith ( com.android.internal.telephony.ServiceStateTracker.INVALID_MCC ) ) ; }
@ org.junit.Test public void testDataPathInitiatorNoConfirmationTimeoutFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( false , true , true , false , false ) ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { Main . doTest () ; }
@ java.lang.Override public java.lang.String getApplicationProtocol () { return org.conscrypt.SSLUtils . toProtocolString ( ssl . getApplicationProtocol () ) ; }
private boolean isMy ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFileEvent event ) { return isMy ( event . getFile () ) ; }
@ java.lang.Override public void libToExe ( @ javax.annotation.Nonnull java.io.File [] in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception {}
@ java.lang.Override void addOptionInstance ( com.google.devtools.common.options.ParsedOptionDescription parsedOption , java.util.List < java.lang.String > warnings ) {}
public void test_getInstance_provider3 ( ) throws java.lang.Exception { test_getInstance ( NUMBER_CONSTANT ) ; }
static void setApkPaths ( java.lang.String [] apkPaths ) { android.test.ClassPathPackageInfoSource.apkPaths = apkPaths ; }
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mUsbReceiver ) != null ) { unregisterReceiver ( mUsbReceiver ) ; } }
private void sendNowPlayingListChanged () { if ( ( mMediaInterface ) == null ) return; if ( com.android.bluetooth.avrcp.AddressedMediaPlayer.DEBUG ) android.util.Log . d ( com.android.bluetooth.avrcp.AddressedMediaPlayer.TAG , STRING_CONSTANT ) ; mMediaInterface . nowPlayingChangedRsp ( AvrcpConstants.NOTIFICATION_TYPE_CHANGED ) ; }
void traverse ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JVisitor visitor ) { for ( java.util.List < com.android.jack.ir.ast.JAnnotationLiteral > annotation : annotations . values () ) { visitor . accept ( annotation ) ; } }
private java.lang.String checkMountedPath ( final java.lang.String path ) { final java.lang.String mountPath = mStorageManager . getMountedObbPath ( path ) ; android.os.storage.cts.StorageManagerTest . assertStartsWith ( ( STRING_CONSTANT + ( android.os.storage.cts.StorageManagerTest.OBB_MOUNT_PREFIX ) ) , android.os.storage.cts.StorageManagerTest.OBB_MOUNT_PREFIX , mountPath ) ; return mountPath ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { r1 = new android.support.test.espresso.base.IdlingResourceIntegrationTest.ResettingIdlingResource ( STRING_CONSTANT , NUMBER_CONSTANT ) ; r2 = new android.support.test.espresso.base.IdlingResourceIntegrationTest.ResettingIdlingResource ( STRING_CONSTANT , NUMBER_CONSTANT ) ; android.support.test.espresso.Espresso . registerIdlingResources ( r1 , r2 ) ; }
public static char [] copyOf ( char [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
@ java.lang.Override final void getUnchecked ( int pos , double [] dst , int dstOffset , int length ) { libcore.io.Memory . peekDoubleArray ( ix ( pos ) , dst , dstOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
com.android.server.wifi.WifiNetworkScoreCache getScoreCache () { return mock ( com.android.server.wifi.WifiNetworkScoreCache . class ) ; }
@ com.android.internal.annotations.VisibleForTesting public static boolean isResumeRequest ( int from , int to ) { boolean fromPaused = android.telecom.VideoProfile . isPaused ( from ) ; boolean toPaused = android.telecom.VideoProfile . isPaused ( to ) ; return fromPaused && ( ! toPaused ) ; }
java.lang.String getStringAttr ( java.lang.String uri , java.lang.String attrName ) ;
private java.lang.String getPackage ( org.w3c.dom.Element element ) { if ( ( mPackage ) == null ) { mPackage = element . getOwnerDocument () . getDocumentElement () . getAttribute ( com.android.SdkConstants.ATTR_PACKAGE ) ; } return mPackage ; }
public static android.support.v8.renderscript.ScriptIntrinsicBlend create ( android.support.v8.renderscript.RenderScript rs , android.support.v8.renderscript.Element e ) { long id = rs . nScriptIntrinsicCreate ( NUMBER_CONSTANT , e . getID ( rs ) ) ; return new android.support.v8.renderscript.ScriptIntrinsicBlend ( id , rs ) ; }
@ java.lang.Override public final java.lang.String getFormat () { return STRING_CONSTANT ; }
public void cancelAllNotifications ( java.lang.String pkg ) { checkIncomingCall ( pkg ) ; cancelAllNotificationsInt ( pkg , NUMBER_CONSTANT , Notification.FLAG_FOREGROUND_SERVICE , true ) ; }
private void loadPackages () { loadPackages ( false ) ; }
synchronized long nPathCreate ( int prim , boolean isStatic , long vtx , long loop , float q ) { validate () ; return rsnPathCreate ( mContext , prim , isStatic , vtx , loop , q ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.util.List < android.bluetooth.BluetoothDevice > bluetoothA2dpGetConnectedDevices () { while ( ! ( com.googlecode.android_scripting.facade.bluetooth.BluetoothA2dpFacade.sIsA2dpReady ) ) { continue; } return com.googlecode.android_scripting.facade.bluetooth.BluetoothA2dpFacade.sA2dpProfile . getDevicesMatchingConnectionStates ( new int [] { android.bluetooth.BluetoothProfile.STATE_CONNECTED , android.bluetooth.BluetoothProfile.STATE_CONNECTING , android.bluetooth.BluetoothProfile.STATE_DISCONNECTING } ) ; }
public static org.junit.runner.Description createSuiteDescription ( java.lang.String name , java.lang.annotation.Annotation . . . annotations ) { return new org.junit.runner.Description ( null , name , annotations ) ; }
@ org.junit.Test public void params () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , field1 ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , field2 ) ; }
@ java.lang.Override protected final void compute () { try { realCompute () ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; } }
static java.lang.String [] getKeyToCharsMap ( @ android.support.annotation.NonNull android.content.Context context ) { return com.android.dialer.dialpadview.DialpadCharMappings.KEY_TO_CHAR_MAPS . get ( com.android.dialer.compat.CompatUtils . getLocale ( context ) . getISO3Language () ) ; }
@ org.gradle.model.Unmanaged java.util.List < java.lang.String > getCFlags ( ) ;
public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { return visit ( ( ( com.android.jack.ir.ast.JNode ) ( method ) ) ) ; }
@ java.lang.Override protected final void setUp ( ) throws java.lang.Exception { super . setUp () ; if ( ! ( isSupported () ) ) return; removePowerSaveModeWhitelist ( com.android.cts.net.hostside.TEST_APP2_PKG ) ; setAppIdle ( false ) ; turnBatteryOff () ; registerBroadcastReceiver () ; }
public static java.lang.String getSimpleName ( java.lang.String fqcn ) { return fqcn . substring ( ( ( fqcn . lastIndexOf ( CHAR_CONS ) ) + NUMBER_CONSTANT ) ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception {}
public void setSimPowerState ( int state ) { setSimPowerStateForSlot ( getSlotIndex () , state ) ; }
public void forEach ( android.renderscript.Allocation aout ) { forEach ( NUMBER_CONSTANT , ( ( android.renderscript.Allocation ) ( null ) ) , aout , null ) ; }
public void cleanup () { mService = null ; }
@ java.lang.Override public boolean isOpened ( ) throws android.os.RemoteException { synchronized ( mLock ) { checkBinderConnection () ; return getServiceInterface ( mBinder ) . isOpened ( mSlotId , mSupportedFeature ) ; } }
public com.android.bluetooth.pbapclient.PbapClientConnectionHandler.Builder setContext ( android.content.Context context ) { this . mContext = context ; return this ; }
public boolean isVoiceCapable () { if ( ( mContext ) == null ) return true ; return mContext . getResources () . getBoolean ( com.android.internal.R.bool.config_voice_capable ) ; }
public void visitRuntimeVisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.RuntimeVisibleAnnotationsAttribute runtimeVisibleAnnotationsAttribute ) { if ( accepted ( clazz , runtimeVisibleAnnotationsAttribute ) ) { attributeVisitor . visitRuntimeVisibleAnnotationsAttribute ( clazz , runtimeVisibleAnnotationsAttribute ) ; } }
@ java.lang.Override public void startPacketKeepalive ( android.os.Message msg ) { int slot = msg.arg1 ; if ( ( mExpectedKeepaliveSlot ) != null ) { org.junit.Assert . assertEquals ( ( ( int ) ( mExpectedKeepaliveSlot ) ) , slot ) ; } onPacketKeepaliveEvent ( slot , mStartKeepaliveError ) ; }
@ java.lang.Override public synchronized void testRunFailed ( java.lang.String errorMessage ) { reportError ( errorMessage ) ; }
@ org.junit.Test public void TestSerbianLongNegative () { checkLocale ( android.icu.util.ULocale . forLanguageTag ( STRING_CONSTANT ) , CompactStyle.LONG , SerbianTestDataLongNegative ) ; }
public void invokeConstructor ( final org.objectweb.asm.Type type , final org.objectweb.asm.commons.Method method ) { invokeInsn ( Opcodes.INVOKESPECIAL , type , method , false ) ; }
public void logError ( java.lang.String format , java.lang.Object . . . params ) { java.lang.String s = java.lang.String . format ( format , params ) ; com.android.ide.eclipse.adt.AdtPlugin . printErrorToConsole ( mProject , s ) ; }
@ android.annotation.SystemApi public java.util.List < android.telephony.UiccAccessRule > getAccessRules () { return accessRules ; }
public void onProgressChanged ( android.widget.SeekBar bar , int progress , boolean fromuser ) { if ( ! fromuser ) { return; } if ( ( mPlayer ) == null ) { return; } mPlayer . seekTo ( progress ) ; }
private void setSpeakerphoneOn ( boolean on ) { android.telecom.Log . i ( this , STRING_CONSTANT , on ) ; mAudioManager . setSpeakerphoneOn ( on ) ; mStatusBarNotifier . notifySpeakerphone ( on ) ; }
@ java.lang.Override public java.lang.String getWizardActionDescription () { return com.google.gct.idea.util.GctBundle . message ( STRING_CONSTANT ) ; }
public void forEach ( com.intellij.updater.PatchAction each ) throws java.io.IOException { com.intellij.updater.ValidationResult validationResult = each . validate ( toDir ) ; if ( validationResult != null ) result . add ( validationResult ) ; }
@ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; mDevice = getDevice () ; if ( ! ( supportsDragAndDrop () ) ) { return; } mSourcePackageName = android.wm.cts.CrossAppDragAndDropTests.SOURCE_PACKAGE_NAME ; mTargetPackageName = android.wm.cts.CrossAppDragAndDropTests.TARGET_PACKAGE_NAME ; }
static java.lang.String [] getDefaultPhoneLookupProjection () { return com.android.incallui.CallerInfo.DEFAULT_PHONELOOKUP_PROJECTION ; }
public void writeDebugEnd ( @ javax.annotation.Nonnull org.objectweb.asm.tree.ClassNode cn , int endLine ) throws java.io.IOException { if ( ( cn.sourceFile ) == null ) { writeUnknownDebugEnd () ; } else { writeLineIfDifferentFromCurrent ( endLine ) ; } }
public boolean isHost () { return ( this ) == ( vogar.ModeId.HOST ) ; }
@ java.lang.Override public void testRunEnded ( long elapsedTime , java.util.Map < java.lang.String , java.lang.String > runMetrics ) { mRunResult . testRunEnded ( elapsedTime , runMetrics ) ; generateDocument ( mReportDir , elapsedTime ) ; }
@ com.android.annotations.Nullable public java.util.List < com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation > getAnnotations ( @ com.android.annotations.NonNull com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation cls ) { com.android.tools.lint.ExternalAnnotationRepository.ClassInfo c = findClass ( cls ) ; if ( c == null ) { return null ; } return c . getAnnotations () ; }
@ java.lang.Override public short get ( int index ) { return byteBuffer . getShort ( ( index * ( libcore.io.SizeOf.SHORT ) ) ) ; }
private java.util.List < java.lang.reflect.Method > getTestMethods ( java.lang.Class < ? extends junit.framework.TestCase > testCaseClass ) { java.util.List < java.lang.reflect.Method > methods = java.util.Arrays . asList ( testCaseClass . getMethods () ) ; return select ( methods , new android.test.suitebuilder.TestGrouping.TestMethodPredicate () ) ; }
abstract int getIntUnchecked ( int index ) ;
private void sendInternalMessage ( int messageCode , int arg1 ) { android.telecom.Logging.Session subsession = android.telecom.Log . createSubsession () ; if ( subsession != null ) { sendMessageAtFrontOfQueue ( messageCode , arg1 , NUMBER_CONSTANT , subsession ) ; } else { sendMessageAtFrontOfQueue ( messageCode , arg1 ) ; } }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( mSocket ) != null ) mSocket . close () ; if ( ( mServerSocket ) != null ) mServerSocket . close () ; }
@ java.lang.Override final float getFloatUnchecked ( int i ) { return getFloat ( ix ( i ) ) ; }
public static boolean checkCallingOrSelfReadPhoneState ( android.content.Context context , int subId , java.lang.String callingPackage , java.lang.String message ) { return com.android.internal.telephony.TelephonyPermissions . checkReadPhoneState ( context , subId , android.os.Binder . getCallingPid () , android.os.Binder . getCallingUid () , callingPackage , message ) ; }
@ java.lang.Override public boolean processFileBytes ( java.lang.String name , long lastModified , byte [] bytes ) { return this . processFileBytes ( name , lastModified , bytes ) ; }
private void refresh () { com.android.traceur.Receiver . updateTracing ( this , false ) ; }
public void setEnable ( @ com.android.annotations.Nullable java.util.Set < java.lang.String > ids ) { enable . addAll ( ids ) ; }
public synchronized org.bouncycastle.math.ec.ECMultiplier getMultiplier () { if ( ( this . multiplier ) == null ) { this . multiplier = createDefaultMultiplier () ; } return this . multiplier ; }
protected native void connect0 ( java.net.InetAddress address , int port ) throws java.net.SocketException ;
private final native void writeInt64Vector ( long [] val ) ;
public static com.android.ahat.heapdump.Value getBaseline ( com.android.ahat.heapdump.Value value ) { return value == null ? null : value . getBaseline () ; }
@ java.lang.Override public boolean isDefault () { return ( ( mDefaultValue ) != null ) & ( mDefaultValue . equals ( mCurrentValue ) ) ; }
public static android.support.v4.util.SimpleArrayMap < java.lang.Character , java.lang.Character > getCharToKeyMap ( @ android.support.annotation.NonNull android.content.Context context ) { return com.android.dialer.dialpadview.DialpadCharMappings.CHAR_TO_KEY_MAPS . get ( com.android.dialer.compat.CompatUtils . getLocale ( context ) . getISO3Language () ) ; }
public int timeAbsI ( int reps ) { int result = i ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . abs ( i ) ; } return result ; }
private void acknowledgeSms ( int token , int messageRef , @ android.telephony.ims.stub.ImsSmsImplBase.DeliverStatusResult int result ) { getSmsImplementation () . acknowledgeSms ( token , messageRef , result ) ; }
abstract void getUnchecked ( int pos , char [] dst , int dstOffset , int length ) ;
@ javax.annotation.Nonnull public static final com.android.jack.test.toolchain.IToolchain getReferenceToolchain () { return com.android.jack.test.toolchain.AbstractTestTools . createToolchain ( STRING_CONSTANT ) ; }
public java.util.ArrayList < com.android.tools.perflib.heap.Instance > getReferences () { return mReferences ; }
@ java.lang.Override protected void attachBaseContext ( android.content.Context base ) { super . attachBaseContext ( base ) ; org.chromium.base.multidex.ChromiumMultiDexInstaller . install ( this ) ; }
public void setAudioRoute ( int route ) { try { mAdapter . setAudioRoute ( route , null ) ; } catch ( android.os.RemoteException e ) {} }
public boolean initializeVendorHal () { return mWifiVendorHal . initialize () ; }
@ java.lang.Override public java.lang.String toString () { return java.lang.String . format ( STRING_CONSTANT , mPackageName ) ; }
synchronized long nAllocationCreateBitmapRef ( long type , android.graphics.Bitmap bmp ) { validate () ; return rsnAllocationCreateBitmapRef ( mContext , type , bmp ) ; }
protected void beforeDebuggeeStart () { synchronizer = createSynchronizer () ; int port = synchronizer . bindServer () ; debuggeeWrapper.savedVMOptions = STRING_CONSTANT + port ; super . beforeDebuggeeStart () ; }
public static boolean canUseNewFiltering () { return true ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_offset ( long nPath , float dx , float dy ) { android.graphics.Path_Delegate . native_offset ( nPath , dx , dy , NUMBER_CONSTANT ) ; }
public static java.nio.file.attribute.FileTime fromMillis ( long value ) { return new java.nio.file.attribute.FileTime ( value , java.util.concurrent.TimeUnit.MILLISECONDS , null ) ; }
@ java.lang.Override public void startLceService ( int report_interval_ms , boolean pullMode , android.os.Message result ) { com.android.internal.telephony.test.SimulatedCommandsVerifier . getInstance () . startLceService ( report_interval_ms , pullMode , result ) ; }
@ com.android.internal.annotations.VisibleForTesting public void disconnect () { disconnect ( NUMBER_CONSTANT ) ; }
public int getApi () { return java.lang.Integer . parseInt ( args . getString ( STRING_CONSTANT ) ) ; }
public static < K , V > java.util.TreeMap < K , V > newTreeMap ( @ javax.annotation.Nullable java.util.Comparator < ? super K > comparator ) { return new java.util.TreeMap < K , V > ( comparator ) ; }
private javax.crypto.CipherSpi getSpi () { return getSpi ( null ) ; }
public void testHypotF32 () { android.renderscript.cts.ScriptField_hypot_f32_in in = new android.renderscript.cts.ScriptField_hypot_f32_in ( mRS , INPUTSIZE ) ; mIn = in . getAllocation () ; doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public V get ( int index ) { return getValue ( index ) ; }
private void runSecondary () { foo ( true ) ; throw new java.lang.RuntimeException ( STRING_CONSTANT ) ; }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session ) { for ( com.android.jack.ir.sourceinfo.FileSourceInfo info : session . getSourceInfoFactory () . getFileSourceInfos () ) { info . setFileName ( STRING_CONSTANT ) ; } }
public static android.telephony.MbmsStreamingManager create ( android.content.Context context , android.telephony.mbms.MbmsStreamingManagerCallback callback ) throws android.telephony.mbms.MbmsException { return android.telephony.MbmsStreamingManager . create ( context , callback , android.telephony.SubscriptionManager . getDefaultSubscriptionId () ) ; }
private static boolean mimeTypeMatches ( java.lang.String mimeType , java.lang.String matchAgainst ) { java.util.regex.Pattern p = java.util.regex.Pattern . compile ( matchAgainst . replaceAll ( STRING_CONSTANT , STRING_CONSTANT ) , java.util.regex.Pattern.CASE_INSENSITIVE ) ; return p . matcher ( mimeType ) . matches () ; }
@ java.lang.Override @ com.android.annotations.Nullable public com.android.build.gradle.internal.dsl.SigningConfig getSigningConfig () { return ( ( com.android.build.gradle.internal.dsl.SigningConfig ) ( super . getSigningConfig () ) ) ; }
private boolean isValidNumber ( java.lang.String number ) { return ( ( number . length () ) <= NUMBER_CONSTANT ) && ( ( number . length () ) > NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.lang.Object expected () { return false ; }
private void readMeminfoDataset ( java.io.BufferedReader br ) throws java.io.IOException { updateDataSet ( com.android.ddmuilib.SysinfoPanel.BugReportParser . readMeminfoDataset ( br ) , STRING_CONSTANT ) ; }
public boolean isEmpty () { return patterns . isEmpty () ; }
public void execute ( java.lang.String . . . tasks ) { execute ( java.util.Collections . < java.lang.String > emptyList () , false , tasks ) ; }
public static native void EVP_DigestSignUpdate ( long evp_md_ctx , byte [] in ) ;
@ javax.annotation.Nonnull protected synchronized int getCurrentMergerIdx () { return currentMergerIdx ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedInterface node ) { if ( ( node . getMarker ( com.android.jack.frontend.VirtualMethodsMarker . class ) ) != null ) { return false ; } handleDefinedClassOrInterface ( node ) ; return super . visit ( node ) ; }
public void setup () { put ( STRING_CONSTANT , MockCipherSpi.AllKeyTypes . class . getName () ) ; }
private final native void writeBoolVector ( boolean [] val ) ;
@ java.lang.Override public void dispose () { super . dispose () ; if ( ( mGraphicalEditor ) != null ) { mGraphicalEditor . dispose () ; mGraphicalEditor = null ; } }
@ org.jetbrains.annotations.Nullable public com.google.api.client.auth.oauth2.Credential makeCredential () { com.google.gct.login.CredentialedUser activeUser = users . getActiveUser () ; if ( activeUser == null ) { return null ; } return activeUser . getGoogleLoginState () . makeCredential () ; }
@ javax.annotation.Nonnull private java.io.File createEmptyLibrary ( ) throws java.io.IOException , java.lang.Exception { java.io.File emptyLib = com.android.jack.test.toolchain.AbstractTestTools . createTempFile ( STRING_CONSTANT , STRING_CONSTANT ) ; com.android.jack.test.toolchain.AndroidToolchain toolchain = com.android.jack.test.toolchain.AbstractTestTools . getCandidateToolchain ( com.android.jack.test.toolchain.AndroidToolchain . class ) ; toolchain . srcToLib ( emptyLib , true ) ; return emptyLib ; }
@ org.junit.Test public void TestNordic () { java.lang.String result = android.icu.text.CompactDecimalFormat . getInstance ( new android.icu.util.ULocale ( STRING_CONSTANT ) , CompactDecimalFormat.CompactStyle.SHORT ) . format ( NUMBER_CONSTANT ) ; assertNotEquals ( STRING_CONSTANT , STRING_CONSTANT , result ) ; }
public void test_ENGINE_by_id_Failure ( ) throws java.lang.Exception { org.apache.harmony.xnet.provider.jsse.NativeCrypto . ENGINE_load_dynamic () ; long engine = org.apache.harmony.xnet.provider.jsse.NativeCrypto . ENGINE_by_id ( STRING_CONSTANT ) ; if ( engine != NUMBER_CONSTANT ) { org.apache.harmony.xnet.provider.jsse.NativeCrypto . ENGINE_finish ( engine ) ; fail ( STRING_CONSTANT ) ; } }
private static dalvik.system.DexPathList.Element [] makePathElements ( java.util.List < java.io.File > files , java.io.File optimizedDirectory , java.util.List < java.io.IOException > suppressedExceptions ) { return dalvik.system.DexPathList . makeElements ( files , null , suppressedExceptions , true , null ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { cursor . close () ; }
@ java.lang.Override public final int getSize () { return mClass . getSize () ; }
private com.android.se.security.ResponseApdu send ( com.android.se.security.CommandApdu cmdApdu ) throws java.io.IOException { byte [] response = mChannel . transmit ( cmdApdu . toBytes () ) ; return new com.android.se.security.ResponseApdu ( response ) ; }
private boolean rescaleToReal ( boolean real ) { if ( real ) { return computeAndSetRealScale ( true ) ; } else { mCanvasViewer . getCanvas () . setScale ( NUMBER_CONSTANT , true ) ; return true ; } }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { if ( ( mNativeChunk ) != NUMBER_CONSTANT ) { android.graphics.NinePatch . nativeFinalize ( mNativeChunk ) ; mNativeChunk = NUMBER_CONSTANT ; } } finally { super . finalize () ; } }
static com.android.bluetooth.mapclient.MnsService newMnsServiceInstance ( com.android.bluetooth.mapclient.MapClientService mapClientService ) { return ( com.android.bluetooth.mapclient.MapUtils.sMnsService ) == null ? new com.android.bluetooth.mapclient.MnsService ( mapClientService ) : com.android.bluetooth.mapclient.MapUtils.sMnsService ; }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( STRING_CONSTANT ) ; Main . testHugeArray () ; Main . testOomeLarge () ; Main . testOomeSmall () ; java.lang.System.out . println ( STRING_CONSTANT ) ; }
@ java.lang.Override public void createNewUiLauncherShortcut ( android.content.Context context ) { com.android.dialer.main.impl.MainImpl . enableComponent ( context ) ; }
@ org.junit.Test public void castNullToString ( ) throws java.lang.Exception { final java.lang.String methodSignature = STRING_CONSTANT ; com.android.jack.transformations.cast.UselessCastRemoverTest . buildMethodAndCheckUselessCastRemover ( com.android.jack.transformations.cast.UselessCastRemoverTest.CAST , methodSignature , false ) ; }
public static synchronized void setNeedRefresh () { org.apache.harmony.security.fortress.Services.needRefresh = true ; }
public static native long SSL_do_handshake_bio ( long sslNativePointer , long sourceBioRef , long sinkBioRef , org.conscrypt.NativeCrypto.SSLHandshakeCallbacks shc , boolean client_mode , byte [] alpnProtocols ) throws java.net.SocketTimeoutException , java.security.cert.CertificateException , javax.net.ssl.SSLException ;
public android.telephony.RadioAccessSpecifier [] getSpecifiers () { return ( mSpecifiers ) == null ? null : mSpecifiers . clone () ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { resetDeviceToClean () ; deleteTempDir () ; }
public void onRemoveTab ( android.view.View v ) { final android.app.ActionBar bar = getActionBar () ; if ( ( bar . getTabCount () ) > NUMBER_CONSTANT ) { bar . removeTabAt ( ( ( bar . getTabCount () ) - NUMBER_CONSTANT ) ) ; } }
@ java.lang.Override protected void engineInitVerify ( java.security.PublicKey publicKey ) throws java.security.InvalidKeyException { initInternal ( org.conscrypt.OpenSSLKey . fromPublicKey ( publicKey ) , false ) ; }
@ java.lang.Override public void setText ( java.text.CharacterIterator newText ) { newText . current () ; wrapped . setText ( newText ) ; }
protected void writeDebugBegin ( @ javax.annotation.CheckForNull org.objectweb.asm.tree.ClassNode classNode , @ javax.annotation.Nonnegative int currentLine ) throws java.io.IOException { if ( ( classNode != null ) && ( currentLine != ( SourceInfoWriter.NO_LINE ) ) ) { sourceInfoWriter . writeDebugBegin ( classNode , currentLine ) ; } else { sourceInfoWriter . writeUnknwonDebugBegin () ; } }
private void localLog ( java.lang.String log ) { if ( ( mLocalLog ) != null ) { mLocalLog . log ( log ) ; } }
@ java.lang.Override public void onStart () { mMountService = new com.android.server.MountService ( getContext () ) ; publishBinderService ( STRING_CONSTANT , mMountService ) ; mMountService . start () ; }
public java.util.Collection < V > values () { java.util.Collection < V > vs = values ; if ( vs == null ) { vs = new Values () ; values = vs ; } return vs ; }
void setFlags ( int pkgFlags ) { this . pkgFlags = pkgFlags & ( ( android.content.pm.ApplicationInfo.FLAG_SYSTEM ) | ( android.content.pm.ApplicationInfo.FLAG_EXTERNAL_STORAGE ) ) ; }
@ java.lang.Deprecated public static int compare ( int codepoint , java.lang.CharSequence a ) { int result = com.ibm.icu.lang.CharSequences . compare ( a , codepoint ) ; return result > NUMBER_CONSTANT ? - NUMBER_CONSTANT : result < NUMBER_CONSTANT ? NUMBER_CONSTANT : NUMBER_CONSTANT ; }
@ org.junit.BeforeClass public static void setupClass () { com.android.jack.annotation.processor.AnnotationProcessorTests.noConfigProcessors = null ; com.android.jack.annotation.processor.AnnotationProcessorTests.autoProcessors = null ; }
public static void setTracker ( dalvik.system.CloseGuard.Tracker tracker ) { dalvik.system.CloseGuard.currentTracker = tracker ; }
public static void assertEquals ( long expected , long result ) { if ( expected != result ) { throw new java.lang.Error ( ( ( ( STRING_CONSTANT + expected ) + STRING_CONSTANT ) + result ) ) ; } }
public void removeFrameSlot ( java.lang.String name ) { assertNotRunning () ; androidx.media.filterfw.FrameManager.FrameSlot slot = getSlot ( name ) ; slot . releaseFrame () ; mFrameSlots . remove ( name ) ; }
@ java.lang.Override public java.util.Collection < V > values () { java.util.Collection < V > vs = values ; return vs != null ? vs : ( values = new Values ( this ) ) ; }
@ javax.annotation.Nonnull public static com.android.sched.scheduler.Request createInitialRequest () { com.android.sched.scheduler.Scheduler scheduler = com.android.sched.scheduler.Scheduler . getScheduler () ; com.android.sched.scheduler.Request request = scheduler . createScheduleRequest () ; request . addSchedulables ( scheduler . getAllSchedulable () ) ; return request ; }
@ java.lang.Override public void streamMethodUpdated ( int methodType ) throws android.os.RemoteException { listener . streamMethodUpdated ( methodType ) ; }
public static org.junit.runner.Description createSuiteDescription ( java.lang.Class < > testClass ) { return new org.junit.runner.Description ( testClass , testClass . getName () , testClass . getAnnotations () ) ; }
public void testDisallowGlobalBelowSdk24 ( ) throws java.lang.Exception { mTargetPackageName = android.wm.cts.CrossAppDragAndDropTests.TARGET_23_PACKAGE_NAME ; if ( ! ( doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.GRANT_NONE , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ) ) { return; } assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , null ) ; }
public boolean hasIccCard () { if ( ( mIccCardStatus ) == null ) { return false ; } else { return mIccCardStatus . getCardState () . isCardPresent () ; } }
public static void assertEquals ( boolean expected , boolean actual ) { if ( actual != expected ) { throw new java.lang.AssertionError ( ( ( ( ( STRING_CONSTANT + actual ) + STRING_CONSTANT ) + expected ) + STRING_CONSTANT ) ) ; } }
@ java.lang.Override public boolean showWarning ( java.lang.String message ) { return false ; }
protected void finalize ( ) throws java.lang.Throwable { android.graphics.PathEffect . nativeDestructor ( native_instance ) ; native_instance = NUMBER_CONSTANT ; }
@ org.jetbrains.annotations.Nullable @ java.lang.Override public java.lang.Object getFragmentTagAt ( int x ) { if ( myHaveLink ) { return myLink . getFragmentTagAt ( ( x - ( myLinkOffset ) ) ) ; } return super . getFragmentTagAt ( x ) ; }
synchronized void nAllocationIoSend ( long alloc ) { validate () ; rsnAllocationIoSend ( mContext , alloc ) ; }
synchronized boolean connect ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.TAG , ( STRING_CONSTANT + device ) ) ; } return connectNative ( com.android.bluetooth.Utils . getByteAddress ( device ) ) ; }
public int limit () { return data [ ( ( pos ) + NUMBER_CONSTANT ) ] ; }
public void removePasspointConfiguration ( java.lang.String fqdn ) { try { if ( ! ( mService . removePasspointConfiguration ( fqdn ) ) ) { throw new java.lang.IllegalArgumentException () ; } } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
@ java.lang.Override public void checkValidity () { if ( ! ( ( parent ) instanceof com.android.jack.ir.ast.JMethod ) ) { throw new com.android.jack.ir.JNodeInternalError ( this , STRING_CONSTANT ) ; } }
@ java.lang.Override public int pxToDp ( int px ) { return px / NUMBER_CONSTANT ; }
private static native long [] getCollectedTags ( int index ) ;
@ java.lang.SuppressWarnings ( value = { STRING_CONSTANT , STRING_CONSTANT } ) @ javax.annotation.Nonnull public com.android.sched.vfs.VPath getPathFromRoot ( @ javax.annotation.Nonnull com.android.sched.vfs.InputVFile file ) { return ( ( com.android.sched.vfs.BaseVFS ) ( vfs ) ) . getPathFromRoot ( ( ( com.android.sched.vfs.BaseVFile ) ( file . getVFile () ) ) ) ; }
@ com.google.common.annotations.GwtIncompatible ( value = STRING_CONSTANT ) private void writeObject ( java.io.ObjectOutputStream stream ) throws java.io.IOException { stream . defaultWriteObject () ; stream . writeObject ( factory ) ; stream . writeObject ( backingMap () ) ; }
@ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { try { server . startHandshake () ; fail () ; } catch ( javax.net.ssl.SSLHandshakeException expected ) {} return null ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeInt ( mRfcommChannelNumber ) ; dest . writeInt ( mProfileVersion ) ; dest . writeString ( mServiceName ) ; }
private static com.android.build.SplitOutput computeBestOutput ( @ com.android.annotations.NonNull java.util.List < ? extends com.android.build.SplitOutput > outputs , int density , @ com.android.annotations.NonNull java.lang.String . . . abis ) { return com.android.ide.common.build.SplitOutputMatcher . computeBestOutput ( outputs , null , density , java.util.Arrays . asList ( abis ) ) ; }
public void addExtension ( org.bouncycastle.asn1.ASN1ObjectIdentifier oid , boolean critical , byte [] value ) { extGenerator . addExtension ( new org.bouncycastle.asn1.ASN1ObjectIdentifier ( oid . getId () ) , critical , value ) ; }
private static void add ( java.lang.String openssl , java.lang.String standard ) { org.conscrypt.NativeCrypto.OPENSSL_TO_STANDARD_CIPHER_SUITES . put ( openssl , standard ) ; org.conscrypt.NativeCrypto.STANDARD_TO_OPENSSL_CIPHER_SUITES . put ( standard , openssl ) ; }
@ java.lang.Override public void loggedRun () { if ( mCallsManager . getCalls () . isEmpty () ) { unbindFromServices () ; } }
@ java.lang.Override public void callSessionRemoveParticipantsRequestDelivered () { if ( ( mListener ) != null ) { mListener . callSessionRemoveParticipantsRequestDelivered ( this ) ; } }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public E peekLast () { return ( ( E ) ( elements [ ( ( ( tail ) - NUMBER_CONSTANT ) & ( ( elements.length ) - NUMBER_CONSTANT ) ) ] ) ) ; }
public static boolean isVoicemailVibrationEnabled ( android.telephony.TelephonyManager telephonyManager , android.telecom.PhoneAccountHandle accountHandle ) { return telephonyManager . isVoicemailVibrationEnabled ( accountHandle ) ; }
@ java.lang.Override public int getState () { if ( com.android.bluetooth.map.BluetoothMapService.VERBOSE ) { android.util.Log . v ( com.android.bluetooth.map.BluetoothMapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.map.BluetoothMapService service = getService () ; if ( service == null ) { return android.bluetooth.BluetoothMap.STATE_DISCONNECTED ; } return getService () . getState () ; }
public long timeMaxL ( int reps ) { long result = l ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . max ( l , l ) ; } return result ; }
public native void setFloat ( java.lang.Object obj , float f ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
public java.util.Set < K > keySet () { java.util.Set < K > ks = keySet ; if ( ks == null ) { ks = new LinkedKeySet () ; keySet = ks ; } return ks ; }
java.lang.Object loadView ( java.lang.String name , java.lang.Class [] constructorSignature , java.lang.Object [] constructorArgs ) throws java.lang.Exception ;
@ java.lang.Override protected void checkReportedError ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Severity severity , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { assertNotNull ( message , com.android.tools.lint.checks.PropertyFileDetector . getSuggestedEscape ( message , com.android.tools.lint.detector.api.TextFormat.TEXT ) ) ; }
protected com.android.tools.lint.checks.AbstractCheckTest.TestConfiguration getConfiguration ( com.android.tools.lint.detector.api.Project project ) { return new com.android.tools.lint.checks.AbstractCheckTest.TestConfiguration () ; }
public void playDtmfTone ( char digit ) { try { if ( mConnected ) { mConnectionService . playDtmfTone ( mConnectionId , digit , null ) ; } } catch ( android.os.RemoteException ignored ) {} }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testHeadsetHangupCall ( ) throws java.lang.Exception { com.android.server.telecom.Call mockCall = createForegroundCall () ; boolean callHungup = mBluetoothPhoneService.mBinder . hangupCall () ; org.mockito.Mockito . verify ( mMockCallsManager ) . disconnectCall ( org.mockito.Matchers . eq ( mockCall ) ) ; org.junit.Assert . assertEquals ( callHungup , true ) ; }
synchronized long nAllocationCreateTyped ( long type , int mip , int usage , long pointer ) { validate () ; return rsnAllocationCreateTyped ( mContext , type , mip , usage , pointer ) ; }
@ java.lang.Override public void onLoadError ( java.io.IOException error ) { mError = error ; }
public boolean implies ( java.security.CodeSource codesource ) { return true ; }
@ android.annotation.SystemApi public int getOtaStatus () { if ( ! ( isEnabled () ) ) { return android.telephony.euicc.EuiccManager.EUICC_OTA_STATUS_UNAVAILABLE ; } try { return getIEuiccController () . getOtaStatus () ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
@ java.lang.Override public void info ( java.lang.String format , java.lang.Object . . . args ) { com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.INFO , format , args ) ; }
public void separate ( android.telecom.RemoteConnection connection ) { if ( mChildConnections . contains ( connection ) ) { try { mConnectionService . splitFromConference ( connection . getId () , null ) ; } catch ( android.os.RemoteException e ) {} } }
public final void run () { try { realRun () ; threadShouldThrow ( STRING_CONSTANT ) ; } catch ( java.lang.InterruptedException success ) { threadAssertFalse ( java.lang.Thread . interrupted () ) ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; } }
synchronized void nContextDestroy () { validate () ; java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock wlock = mRWLock . writeLock () ; wlock . lock () ; long curCon = mContext ; mContext = NUMBER_CONSTANT ; wlock . unlock () ; rsnContextDestroy ( curCon ) ; }
@ android.test.suitebuilder.annotation.MediumTest public void testPreconditions () { assertNotNull ( mTextView ) ; assertEquals ( NUMBER_CONSTANT , mTextView . size () ) ; assertNotNull ( mTextView . get ( NUMBER_CONSTANT ) ) ; }
public void testConstructor_NullEndDate_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , android.security.AndroidKeyPairGeneratorSpecTest.NOW , null , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
public java.lang.String getClasspathName () { return java.lang.String . format ( STRING_CONSTANT , mName , mBasePlatform . getClasspathName () ) ; }
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; setContentView ( R.layout.its_main ) ; setInfoResources ( R.string.camera_its_test , R.string.camera_its_test_info , ( - NUMBER_CONSTANT ) ) ; setPassFailButtonClickListeners () ; }
@ java.lang.Override public boolean execute ( int s ) { addAllSubclasses ( s , acc ) ; return true ; }
public void addExtension ( org.bouncycastle.asn1.ASN1ObjectIdentifier oid , boolean critical , org.bouncycastle.asn1.ASN1Encodable value ) { extGenerator . addExtension ( new org.bouncycastle.asn1.ASN1ObjectIdentifier ( oid . getId () ) , critical , value ) ; }
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mScreenManipulator ) != null ) { mScreenManipulator . close () ; } }
public static void fail () { java.lang.System.out . println ( STRING_CONSTANT ) ; java.lang.Thread . dumpStack () ; }
public void test_getLocalPort ( ) throws java.net.SocketException { try ( java.net.DatagramSocket ds = new java.net.DatagramSocket () ) { assertTrue ( STRING_CONSTANT , ( ( ds . getLocalPort () ) != NUMBER_CONSTANT ) ) ; } }
@ java.lang.Override protected void onDetachedFromWindow () { com.android.launcher2.AllApps3D.sRS.mMessageCallback = null ; if ( ! ( mSurrendered ) ) { android.util.Log . i ( com.android.launcher2.AllApps3D.TAG , STRING_CONSTANT ) ; destroyRenderScript () ; com.android.launcher2.AllApps3D.sRS = null ; com.android.launcher2.AllApps3D.sRollo = null ; super . onDetachedFromWindow () ; } }
@ java.lang.Override public void testStarted ( com.android.ddmlib.testrunner.TestIdentifier test ) { mRunResult . testStarted ( test ) ; }
@ java.lang.Override public java.lang.Object getMinSdkVersion ( @ com.android.annotations.NonNull java.io.File manifestFile ) { return null ; }
public synchronized void interrupt () { interrupt ( thread ) ; }
@ java.lang.Override final long getLongUnchecked ( int i ) { return getLong ( ix ( i ) ) ; }
@ java.lang.Override com.google.common.collect.ImmutableMultiset < K > createKeys () { return new Keys () ; }
public boolean setP2pDeviceType ( java.lang.String type ) { return mSupplicantP2pIfaceHal . setWpsDeviceType ( type ) ; }
synchronized long nScriptGetVarJ ( long id , int slot ) { validate () ; return rsnScriptGetVarJ ( mContext , id , slot ) ; }
public void run ( final com.android.cts.TestDevice device , final com.android.cts.Test test ) throws com.android.cts.ADBServerNeedRestartException , com.android.cts.DeviceDisconnectedException { mTestStop = false ; mCurrentTest = test ; mCurrentTest . run ( device ) ; }
public abstract void computeDeployments ( @ org.jetbrains.annotations.NotNull com.intellij.remoteServer.runtime.deployment.ServerRuntimeInstance.ComputeDeploymentsCallback callback ) ;
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_drawRect ( long nativeCanvas , android.graphics.RectF rect , long paint ) { android.graphics.Canvas_Delegate . native_drawRect ( nativeCanvas , rect.left , rect.top , rect.right , rect.bottom , paint ) ; }
public void testReadProcVersion ( ) throws java.io.IOException { java.io.File file = new java.io.File ( STRING_CONSTANT ) ; try ( java.io.FileInputStream input = new java.io.FileInputStream ( file ) ) { assertTrue ( ( ( input . available () ) == NUMBER_CONSTANT ) ) ; } }
@ java.lang.Override public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile ) throws android.os.RemoteException { synchronized ( mLock ) { return this . createCallSession ( sessionId , profile ) ; } }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { testThreadPool . shutdownNow () ; }
void setResourceOutputDir ( @ com.android.annotations.NonNull java.io.File resourceOutputDir ) ;
public void visitExceptionsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.ExceptionsAttribute exceptionsAttribute ) { if ( ( exceptionsAttribute.u2exceptionIndexTableLength ) > NUMBER_CONSTANT ) { attributeVisitor . visitExceptionsAttribute ( clazz , method , exceptionsAttribute ) ; } }
public void drawableHotspotChanged ( float x , float y ) { if ( ( mBackground ) != null ) { mBackground . setHotspot ( x , y ) ; } }
public void testEC_GROUP ( ) throws java.lang.Exception { check_EC_GROUP ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , NUMBER_CONSTANT ) ; }
public void finishKey ( android.view.IWindow window ) { if ( com.android.server.WindowManagerService.localLOGV ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + window ) ) ; mKeyWaiter . finishedKey ( this , window , false , com.android.server.WindowManagerService.KeyWaiter.RETURN_NOTHING ) ; }
private void checkStatus () { if ( ( prePosition ) == ( - NUMBER_CONSTANT ) ) { throw new java.lang.IllegalStateException () ; } }
@ dalvik.annotation.optimization.FastNative final native int getParameterCountInternal ( ) ;
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) throws java.lang.Exception { type . removeMarker ( com.android.jack.shrob.obfuscation.OriginalNameMarker . class ) ; }
@ java.lang.Override public java.lang.String getCallId () { return this . getCallId () ; }
public java.lang.Object clone () { try { java.text.StringCharacterIterator other = ( ( java.text.StringCharacterIterator ) ( super . clone () ) ) ; return other ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
@ java.lang.Override public synchronized void setGroupingUsed ( boolean enabled ) { if ( enabled ) { properties . setGroupingSize ( NUMBER_CONSTANT ) ; } else { properties . setGroupingSize ( NUMBER_CONSTANT ) ; properties . setSecondaryGroupingSize ( NUMBER_CONSTANT ) ; } refreshFormatter () ; }
public static void assertSSLContextEnabledProtocols ( java.lang.String version , java.lang.String [] protocols ) { org.junit.Assert . assertEquals ( ( ( STRING_CONSTANT + version ) + STRING_CONSTANT ) , java.util.Arrays . toString ( libcore.java.security.StandardNames.SSL_CONTEXT_PROTOCOLS_ENABLED . get ( version ) ) , java.util.Arrays . toString ( protocols ) ) ; }
private static com.android.build.VariantOutput getUniversalOutput ( int versionCode ) { return new com.android.ide.common.build.SplitOutputMatcherTest.FakeVariantOutput ( new com.android.ide.common.build.SplitOutputMatcherTest.FakeSplitOutput ( null , null ) , versionCode ) ; }
public static com.android.dialer.historyitemactions.HistoryItemActionBottomSheet show ( android.content.Context context , com.android.dialer.historyitemactions.HistoryItemBottomSheetHeaderInfo historyItemBottomSheetHeaderInfo , java.util.List < com.android.dialer.historyitemactions.HistoryItemActionModule > modules ) { com.android.dialer.historyitemactions.HistoryItemActionBottomSheet sheet = new com.android.dialer.historyitemactions.HistoryItemActionBottomSheet ( context , historyItemBottomSheetHeaderInfo , modules ) ; sheet . show () ; return sheet ; }
void updateMwi ( int subId , boolean visible ) { updateMwi ( subId , visible , false ) ; }
@ java.lang.Override public void terminate ( int reason ) { this . terminate ( reason ) ; }
@ java.lang.Override public java.lang.String getId () { return id ; }
public void setUp () { monitor = org.mockito.Mockito . mock ( vogar.monitor.TargetMonitor . class ) ; }
final void pollAndExecAll () { for ( java.util.concurrent.ForkJoinTask < > t ; ( t = poll () ) != null ; ) t . doExec () ; }
@ java.lang.Override public long getSize ( com.android.ahat.heapdump.AhatInstance element , com.android.ahat.heapdump.AhatHeap heap ) { return element . getRetainedSize ( heap ) . getSize () ; }
public static java.lang.Object getBlocker ( java.lang.Thread t ) { if ( t == null ) throw new java.lang.NullPointerException () ; return java.util.concurrent.locks.LockSupport.unsafe . getObjectVolatile ( t , java.util.concurrent.locks.LockSupport.parkBlockerOffset ) ; }
@ java.lang.Override public boolean hasSameBehavior ( java.lang.Object a , java.lang.Object b ) { return a . equals ( b ) ; }
com.android.traceview.Call top () { return mStack . get ( ( ( mStack . size () ) - NUMBER_CONSTANT ) ) ; }
public static < TValue extends java.lang.Number > double getStandardDeviation ( java.util.Collection < TValue > collection ) { return java.lang.Math . sqrt ( android.hardware.cts.helpers.SensorCtsHelper . getVariance ( collection ) ) ; }
@ java.lang.Override protected void loge ( java.lang.String s ) { if ( com.android.internal.telephony.ims.IsimUiccRecords.DBG ) android.util.Log . e ( com.android.internal.telephony.ims.IsimUiccRecords.LOG_TAG , ( STRING_CONSTANT + s ) ) ; }
@ java.lang.Deprecated public synchronized void setUseDoubleTree ( boolean use ) { return; }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( com.ibm.icu.impl.UResource.Key key ) { regionOrLocale = key . toString () ; return formatListSink ; }
public void testLenientUrlToUriNul ( ) throws java.lang.Exception { testUrlToUriMapping ( STRING_CONSTANT , null , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
protected abstract boolean isModified ( java.io.File toFile ) throws java.io.IOException ;
public boolean isTopActivityImmersive () { enforceNotIsolatedCaller ( STRING_CONSTANT ) ; synchronized ( this ) { com.android.server.am.ActivityRecord r = getFocusedStack () . topRunningActivityLocked () ; return r != null ? r.immersive : false ; } }
public void testDisallowGlobalBelowSdk24 ( ) throws java.lang.Exception { mTargetPackageName = android.wm.cts.CrossAppDragAndDropTests.TARGET_23_PACKAGE_NAME ; doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.GRANT_NONE , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , null ) ; }
public void dispose () { if ( ( mSelectionListener ) != null ) { mCanvas . getSelectionManager () . removeSelectionChangedListener ( mSelectionListener ) ; } if ( ( mCanvas ) != null ) { mCanvas . dispose () ; mCanvas = null ; } }
void pushScope ( java.lang.String name ) { scopes . add ( name ) ; }
final void updateLruProcessLocked ( com.android.server.am.ProcessRecord app , boolean oomAdj , boolean updateActivityTime ) { ( mLruSeq ) ++ ; updateLruProcessInternalLocked ( app , oomAdj , updateActivityTime , NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void deliverResponse ( java.lang.String response ) { if ( ( mListener ) != null ) { mListener . onResponse ( response ) ; } }
@ com.android.internal.annotations.VisibleForTesting public void startCallWaiting () { if ( ( mRingingCalls . size () ) == NUMBER_CONSTANT ) { mRinger . startCallWaiting ( mRingingCalls . iterator () . next () ) ; } }
public java.lang.String installPackage ( java.lang.String packageFilePath , boolean reinstall ) throws com.android.ddmlib.InstallException ;
@ org.junit.Test public void testInstanceReferenceBinding ( ) throws java.lang.Exception { run ( GWT_LAMBDA_TEST_8 ) ; }
@ java.lang.Deprecated public android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel ( java.lang.String AID ) { return iccOpenLogicalChannel ( getSubId () , AID , ( - NUMBER_CONSTANT ) ) ; }
@ com.android.annotations.NonNull public java.lang.String getRunOptions () { return mRunOptions ; }
native void rsnAllocationData1D ( long con , long id , int off , int mip , int count , short [] d , int sizeBytes ) ;
public void testAddAllSelf () { java.util.concurrent.ArrayBlockingQueue q = populatedQueue ( jsr166.SIZE ) ; try { q . addAll ( q ) ; shouldThrow () ; } catch ( java.lang.IllegalArgumentException success ) {} }
public java.nio.channels.Pipe openPipe ( ) throws java.io.IOException { return new java.nio.PipeImpl ( this ) ; }
public void copy1DRangeFrom ( int off , int count , float [] d ) { validateIsFloat32 () ; copy1DRangeFromUnchecked ( off , count , d , Element.DataType.FLOAT_32 , d.length ) ; }
public static void computeRsqrt ( android.renderscript.cts.TestRsqrt.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . rsqrt ( args.inV , t ) ; }
public int getNumAllFailedTests () { return getNumTestsInState ( TestStatus.FAILURE ) ; }
public void useJack ( @ com.android.annotations.Nullable java.lang.Boolean useJack ) { setUseJack ( useJack ) ; }
public org.bouncycastle.math.ec.ECPoint [] getPreComp () { return preComp ; }
@ java.lang.Override public void exit () { sendBackgroundScanFailedToAllAndClear ( WifiScanner.REASON_UNSPECIFIED , STRING_CONSTANT ) ; mScannerImpl . cleanup () ; }
public boolean setActiveDevice ( android.bluetooth.BluetoothDevice device ) { if ( ( mService ) == null ) return false ; return mService . setActiveDevice ( device ) ; }
abstract java.lang.Object socketGetOption ( int opt ) throws java.net.SocketException ;
private void deleteTempDir ( ) throws java.lang.Exception { com.android.tradefed.util.FileUtil . recursiveDelete ( mTempDir ) ; }
@ java.lang.Override public void onPinnedActivityRestartAttempt ( boolean clearedTask ) { if ( com.android.systemui.pip.tv.PipManager.DEBUG ) android.util.Log . d ( com.android.systemui.pip.tv.PipManager.TAG , STRING_CONSTANT ) ; movePipToFullscreen () ; }
boolean notifyVFileOpenAndReturnPreviousState () { return lastVFileOpen . getAndSet ( true ) ; }
public final void dumpSizes () { for ( com.android.tools.perflib.heap.Heap heap : mHeaps ) { java.lang.System.out . println ( ( STRING_CONSTANT + ( heap . getName () ) ) ) ; heap . dumpSizes () ; } }
@ java.lang.Override public void setResult ( java.lang.String resultFormat , java.lang.Object . . . args ) { mAutomaticallyCloseOnTaskCompletion = false ; super . setResult ( resultFormat , args ) ; }
private static java.util.Map < java.lang.String , java.util.List < java.lang.String > > cookieHeaders ( java.lang.String . . . headers ) { return java.util.Collections . singletonMap ( STRING_CONSTANT , java.util.Arrays . asList ( headers ) ) ; }
public static dalvik.system.DexFile loadDex ( java.lang.String sourcePathName , java.lang.String outputPathName , int flags ) throws java.io.IOException { return dalvik.system.DexFile . loadDex ( sourcePathName , outputPathName , flags , null ) ; }
void setPropertiesFromPattern ( java.lang.String pattern , int ignoreRounding ) { if ( pattern == null ) { throw new java.lang.NullPointerException () ; } com.ibm.icu.impl.number.PatternString . parseToExistingProperties ( pattern , properties , ignoreRounding ) ; }
@ java.lang.Override public java.lang.String insnCommentString ( com.android.dx.dex.code.DalvInsn insn , boolean noteIndices ) { if ( noteIndices ) { return insn . cstComment () ; } else { return STRING_CONSTANT ; } }
private synchronized void notifyAuthKeyInput ( final java.lang.String key ) { if ( key != null ) { mObexAuth . setSessionKey ( key ) ; } mObexAuth . setChallenged ( true ) ; }
public static void captureView ( @ com.android.annotations.NonNull com.android.ddmlib.Client client , @ com.android.annotations.NonNull java.lang.String viewRoot , @ com.android.annotations.NonNull java.lang.String view , @ com.android.annotations.NonNull com.android.ddmlib.HandleViewDebug.ViewDumpHandler handler ) throws java.io.IOException { com.android.ddmlib.HandleViewDebug . sendViewOpPacket ( client , com.android.ddmlib.HandleViewDebug.VUOP_CAPTURE_VIEW , viewRoot , view , null , handler ) ; }
void libToLib ( @ javax.annotation.Nonnull java.io.File [] in , @ javax.annotation.Nonnull java.io.File out , boolean zipFiles ) throws java.lang.Exception ;
public double timeRandom ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . random () ; } return result ; }
public void testGrantNoneRequestNone ( ) throws java.lang.Exception { if ( ! ( doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.GRANT_NONE , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , android.wm.cts.CrossAppDragAndDropTests.RESULT_EXCEPTION ) ) ) { return; } assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_EXTRAS , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; }
public void testStageInstallWithErrorCode_successfulFirstUpdate ( ) throws java.lang.Exception { com.android.timezone.distro.TimeZoneDistro distro = libcore.tzdata.update2.TimeZoneDistroInstallerTest . createValidTimeZoneDistro ( libcore.tzdata.update2.TimeZoneDistroInstallerTest.NEW_RULES_VERSION , NUMBER_CONSTANT ) ; assertEquals ( TimeZoneDistroInstaller.INSTALL_SUCCESS , installer . stageInstallWithErrorCode ( distro ) ) ; assertInstallDistroStaged ( distro ) ; assertNoInstalledDistro () ; }
private java.lang.String format ( long number , android.icu.text.NFRuleSet ruleSet ) { java.lang.StringBuffer result = new java.lang.StringBuffer () ; ruleSet . format ( number , result , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; postProcess ( result , ruleSet ) ; return result . toString () ; }
public static com.android.jack.dx.rop.type.Type internReturnType ( java.lang.String descriptor ) { assert descriptor != null ; if ( descriptor . equals ( STRING_CONSTANT ) ) { return com.android.jack.dx.rop.type.Type.VOID ; } return com.android.jack.dx.rop.type.Type . intern ( descriptor ) ; }
private static org.conscrypt.OpenSSLKey wrapPlatformKey ( java.security.interfaces.ECPrivateKey ecPrivateKey , org.conscrypt.OpenSSLECGroupContext group ) throws java.security.InvalidKeyException { return new org.conscrypt.OpenSSLKey ( org.conscrypt.NativeCrypto . getECPrivateKeyWrapper ( ecPrivateKey , group . getContext () ) , true ) ; }
@ java.lang.Override public void acceptVideoRequestAsAudio () { com.android.dialer.common.LogUtil . enterBlock ( STRING_CONSTANT ) ; call . getVideoCall () . sendSessionModifyResponse ( new android.telecom.VideoProfile ( android.telecom.VideoProfile.STATE_AUDIO_ONLY ) ) ; logger . logImpression ( DialerImpression.Type.IMS_VIDEO_REQUEST_ACCEPTED_AS_AUDIO ) ; }
private void assertChecksumEquals ( int expected , short actual ) { org.junit.Assert . assertEquals ( java.lang.Integer . toHexString ( expected ) , java.lang.Integer . toHexString ( ( actual & NUMBER_CONSTANT ) ) ) ; }
@ com.android.annotations.Nullable public java.io.File getMappingFile () { return ( mappingFileProviderTask ) != null ? mappingFileProviderTask . get () : null ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.jack.dx.rop.type.Type getType () { return type ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; }
@ java.lang.Override public final short getShort () { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getShort ( ix ( nextGetIndex ( SizeOf.SHORT ) ) ) ; }
@ com.android.annotations.NonNull @ java.lang.Override public com.android.tools.lint.TypeDescriptor getType () { com.android.tools.lint.TypeDescriptor typeDescriptor = getTypeDescriptor ( mBinding . getAnnotationType () ) ; assert typeDescriptor != null ; return typeDescriptor ; }
boolean isDiscovering () { return mDiscovering ; }
static void closeGuardWarnIfOpen ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.lang.Object guardObj ) {}
public void failed ( com.google.common.util.concurrent.Service.State from , java.lang.Throwable failure ) {}
void putCopy ( java.math.BigInt from ) { this . makeValid () ; java.math.NativeBN . BN_copy ( this . bignum , from.bignum ) ; }
@ java.lang.Override protected void internalTearDown () { printTestLog ( STRING_CONSTANT ) ; super . internalTearDown () ; }
@ java.lang.Override public final long getLong () { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getLong ( ix ( nextGetIndex ( SizeOf.LONG ) ) ) ; }
private native boolean dialMemoryNative ( byte [] address , int location ) ;
public void enableAdbRoot ( com.android.tradefed.device.ITestDevice mDevice ) throws com.android.tradefed.device.DeviceNotAvailableException { mDevice . enableAdbRoot () ; }
public void storeToXML ( java.io.OutputStream os , java.lang.String comment ) throws java.io.IOException { storeToXML ( os , comment , STRING_CONSTANT ) ; }
@ java.lang.Override public void setSentDate ( java.util.Date sentDate ) throws com.android.voicemail.impl.mail.MessagingException { setHeader ( STRING_CONSTANT , com.android.voicemail.impl.mail.internet.MimeMessage.DATE_FORMAT . format ( sentDate ) ) ; this . sentDate = sentDate ; }
public static < T > com.android.volley.Response < T > success ( T result , com.android.volley.Cache.Entry cacheEntry ) { return new com.android.volley.Response ( result , cacheEntry ) ; }
public void setFrom ( java.util.ArrayList < android.text.util.Rfc822Token > from ) { this . from = from ; }
public boolean keepAttribute ( @ javax.annotation.Nonnull java.lang.String attributeName ) { assert obfuscate ; return ( ( keepAttributes ) != null ) && ( keepAttributes . matches ( attributeName ) ) ; }
@ java.lang.Override public android.view.inputmethod.InputConnection onCreateInputConnection ( final android.view.inputmethod.EditorInfo outAttrs ) { mFactory . startYourEngines ( false ) ; if ( checkNeedsPost () ) { return null ; } return mAwContents . onCreateInputConnection ( outAttrs ) ; }
public static < T > void runBasicSplitTests ( java.lang.Iterable < T > spliterable , java.util.List < T > expectedElements , java.util.Comparator < T > comparator ) { libcore.java.util.SpliteratorTester . runBasicSplitTests ( spliterable . spliterator () , expectedElements , comparator ) ; }
public static com.google.devtools.common.options.OpaqueOptionsData getOptionsData ( java.util.List < java.lang.Class < ? extends com.google.devtools.common.options.OptionsBase > > optionsClasses ) throws com.google.devtools.common.options.OptionsParser.ConstructionException { return com.google.devtools.common.options.OptionsParser . getOptionsDataInternal ( optionsClasses ) ; }
public static android.support.v8.renderscript.ScriptIntrinsicConvolve5x5 create ( android.support.v8.renderscript.RenderScript rs , android.support.v8.renderscript.Element e ) { long id = rs . nScriptIntrinsicCreate ( NUMBER_CONSTANT , e . getID ( rs ) ) ; return new android.support.v8.renderscript.ScriptIntrinsicConvolve5x5 ( id , rs ) ; }
@ java.lang.Override final void putDoubleUnchecked ( int i , double x ) { putDouble ( ix ( i ) , x ) ; }
public void incomingCall ( com.android.ims.internal.ImsCallSession c ) throws android.os.RemoteException { notifyIncomingCall ( c , null ) ; }
protected boolean isFwdLocked () { return ( ( flags ) & ( android.content.pm.PackageManager.INSTALL_FORWARD_LOCK ) ) != NUMBER_CONSTANT ; }
private native boolean phoneStateChangeNative ( int numActive , int numHeld , int callState , java.lang.String number , int type , byte [] address ) ;
com.android.ide.eclipse.adt.internal.editors.layout.gle2.SelectionItem createSelection ( com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo vi ) { return new com.android.ide.eclipse.adt.internal.editors.layout.gle2.SelectionItem ( mCanvas , vi ) ; }
private static boolean isBidirectionalVideoCall ( com.android.incallui.call.DialerCall call ) { return android.telecom.VideoProfile . isBidirectional ( call . getVideoState () ) ; }
public void test_formatToCharacterIteratorLjava_lang_Object () { try { new java.text.SimpleDateFormat () . formatToCharacterIterator ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} new org.apache.harmony.tests.java.text.Support_SimpleDateFormat ( STRING_CONSTANT ) . t_formatToCharacterIterator () ; }
public static long ReturnLong33 () { int imm = NUMBER_CONSTANT ; return ( ( long ) ( imm ) ) ; }
@ org.junit.Test public void testParceling () { android.net.StaticIpConfiguration s = makeTestObject () ; android.net.StaticIpConfiguration s2 = passThroughParcel ( s ) ; org.junit.Assert . assertEquals ( s , s2 ) ; }
@ javax.annotation.Nonnull public static com.android.jack.Options buildCommandLineArgs ( @ javax.annotation.Nonnull java.io.File [] filesOrSourcelists ) throws java.io.IOException { return com.android.jack.TestTools . buildCommandLineArgs ( null , filesOrSourcelists ) ; }
void writeSummaryFromParcelLocked ( android.os.Parcel out ) { int count = mCount . get () ; out . writeInt ( count ) ; out . writeInt ( ( count - ( mLoadedCount ) ) ) ; }
void srcToLib ( @ javax.annotation.Nonnull java.io.File out , boolean zipFiles , @ javax.annotation.Nonnull java.io.File . . . sources ) throws java.lang.Exception ;
public void configure ( org.bouncycastle.jcajce.provider.config.ConfigurableProvider provider ) { provider . addAlgorithm ( STRING_CONSTANT , STRING_CONSTANT ) ; provider . addAlgorithm ( STRING_CONSTANT , STRING_CONSTANT ) ; }
private void debugPrintf ( java.lang.String msg , java.lang.Object . . . params ) { com.android.ide.eclipse.adt.AdtPlugin . printToConsole ( ( ( mNode ) == null ? STRING_CONSTANT : ( mNode . getDescriptor () . getXmlLocalName () ) + STRING_CONSTANT ) , java.lang.String . format ( msg , params ) ) ; }
public void disable ( com.google.gct.testing.dimension.CloudTestingType . . . types ) { checkIsEditable () ; for ( com.google.gct.testing.dimension.CloudTestingType type : types ) { enabledTypes . remove ( type ) ; } }
public void test_joinSourceSpecific_groupBind_ipv4 ( ) throws java.lang.Exception { if ( ! ( supportsMulticast ) ) { return; } java.net.InetAddress ipv4LocalAddress = libcore.java.nio.channels.DatagramChannelMulticastTest . getLocalIpv4Address ( ipv4NetworkInterface ) ; check_joinSourceSpecific ( ipv4LocalAddress , libcore.java.nio.channels.DatagramChannelMulticastTest.GOOD_MULTICAST_IPv4 , libcore.java.nio.channels.DatagramChannelMulticastTest.GOOD_MULTICAST_IPv4 , libcore.java.nio.channels.DatagramChannelMulticastTest.UNICAST_IPv4_1 , ipv4NetworkInterface ) ; }
@ org.junit.Test public void testDefaultDisconnectedState () { android.util.Log . i ( com.android.bluetooth.mapclient.MapClientStateMachineTest.TAG , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( BluetoothProfile.STATE_CONNECTING , mMceStateMachine . getState () ) ; }
void messageFromNative ( com.android.bluetooth.a2dp.A2dpStackEvent stackEvent ) { mStateMachine . sendMessage ( A2dpStateMachine.STACK_EVENT , stackEvent ) ; }
synchronized long nScriptIntrinsicCreate ( int id , long eid ) { validate () ; return rsnScriptIntrinsicCreate ( mContext , id , eid ) ; }
abstract void putUnchecked ( int pos , long [] dst , int srcOffset , int length ) ;
protected javax.net.ssl.SSLSocket configureSocket ( javax.net.ssl.SSLSocket socket ) throws java.io.IOException { return socket ; }
@ java.lang.Override @ javax.annotation.Nonnull public java.util.Iterator < com.android.jack.ir.ast.JDefinedClassOrInterface > sortAndNumber ( java.util.Collection < com.android.jack.ir.ast.JDefinedClassOrInterface > types ) { return types . iterator () ; }
public static com.android.server.wifi.ScanDetail toScanDetail ( android.net.wifi.ScanResult scanResult ) { com.android.server.wifi.hotspot2.NetworkDetail networkDetail = new com.android.server.wifi.hotspot2.NetworkDetail ( scanResult.BSSID , scanResult.informationElements , scanResult.anqpLines , scanResult.frequency ) ; return new com.android.server.wifi.ScanDetail ( scanResult , networkDetail ) ; }
@ org.junit.Test @ org.junit.experimental.categories.Category ( value = com.android.jack.category.SlowTests . class ) public void compareFrameworksStructureWithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( com.android.jill.compile.androidtree.frameworks.FrameworksBaseCompilationTest.CLASSPATH , com.android.jill.compile.androidtree.frameworks.FrameworksBaseCompilationTest.SOURCELIST , false ) ; }
@ java.lang.Override public int size () { return set . size () ; }
private void stopAdvertise () { if ( com.android.cts.verifier.bluetooth.BleServerService.DEBUG ) android.util.Log . d ( com.android.cts.verifier.bluetooth.BleServerService.TAG , STRING_CONSTANT ) ; mAdvertiser . stopAdvertising ( mAdvertiseCallback ) ; }
static org.conscrypt.OpenSSLKey wrapRsaKey ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.security.PrivateKey javaKey ) { return null ; }
@ java.lang.Override public void libToExe ( @ javax.annotation.Nonnull java.io.File [] in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception { libToCommon ( in ) ; setOutputDex ( out , zipFile ) ; run () ; }
public int getTag () { return tag ; }
static native java.lang.reflect.Field getDeclaredField ( java.lang.Class < > c , java.lang.String name ) ;
synchronized void nScriptSetVarJ ( long id , int slot , long val ) { validate () ; rsnScriptSetVarJ ( mContext , id , slot , val ) ; }
private boolean isNotIgnored () { return ! ( isIgnored () ) ; }
public static void computeLog1p ( android.renderscript.cts.TestLog1p.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . log1p ( args.inV , t ) ; }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( android.icu.impl.UResource.Key key ) { unit = android.icu.util.MeasureUnit . internalGetInstance ( type , key . toString () ) ; patternSink.patterns = null ; return patternSink ; }
public void testNormaliseReplaceAlphaCharacters () { java.lang.StringBuilder inputNumber = new java.lang.StringBuilder ( STRING_CONSTANT ) ; java.lang.String expectedOutput = STRING_CONSTANT ; assertEquals ( STRING_CONSTANT , expectedOutput , com.google.i18n.phonenumbers.PhoneNumberUtil . normalize ( inputNumber ) . toString () ) ; }
public boolean cancelWps () { return mSupplicantStaIfaceHal . cancelWps () ; }
public static void cancelSync ( android.accounts.Account account , java.lang.String authority ) { try { android.content.ContentResolver . getContentService () . cancelSync ( account , authority , null ) ; } catch ( android.os.RemoteException e ) {} }
@ java.lang.Override public void onMetadataChanged ( android.media.MediaMetadata metadata ) { if ( com.android.bluetooth.avrcp.Avrcp.DEBUG ) android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , STRING_CONSTANT ) ; updateCurrentMediaState () ; }
public static float ReturnFloat33 () { int imm = NUMBER_CONSTANT ; return ( ( float ) ( imm ) ) ; }
@ java.lang.Override public long beforeHandshake ( long c ) throws javax.net.ssl.SSLException { long s = super . beforeHandshake ( c ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_set_tlsext_host_name ( s , hostname ) ; return s ; }
@ java.lang.Override protected void engineUpdate ( byte [] input , int offset , int len ) { org.conscrypt.NativeCrypto . EVP_DigestUpdate ( ctx , input , offset , len ) ; }
@ java.lang.Override public void run ( long sslSession ) throws java.lang.Exception { try { org.conscrypt.NativeCrypto . SSL_shutdown ( sslSession , null , org.conscrypt.NativeCryptoTest.DUMMY_CB ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public static final native android.os.IHwBinder getService ( java.lang.String iface , java.lang.String serviceName ) throws android.os.RemoteException , java.util.NoSuchElementException ;
@ java.lang.Override public void setParseIntegerOnly ( boolean value ) { super . setParseIntegerOnly ( value ) ; ndf . setParseIntegerOnly ( value ) ; }
void startBluetoothDisable () { mAdapterStateMachine . sendMessage ( AdapterState.BEGIN_DISABLE ) ; }
public void doQuit () { if ( com.android.bluetooth.a2dpsink.A2dpSinkStateMachine.DBG ) { android.util.Log . d ( STRING_CONSTANT , STRING_CONSTANT ) ; } synchronized ( this ) { mStreaming = null ; } quitNow () ; }
public void setDescription ( java.lang.String format , java.lang.Object . . . args ) { mCapturedDescriptions += ( java.lang.String . format ( format , args ) ) + STRING_CONSTANT ; }
@ com.android.annotations.NonNull java.io.File getGeneratedResOutputDir ( ) ;
private void bindDataToCards ( com.android.contacts.quickcontact.QuickContactActivity.Cp2DataCardModel cp2DataCardModel ) { startInteractionLoaders ( cp2DataCardModel ) ; populateContactAndAboutCard ( cp2DataCardModel , true ) ; }
private void doTestGeographicalScopeValue ( byte [] pdu , byte b , int expectedGs ) { pdu [ NUMBER_CONSTANT ] = b ; android.telephony.SmsCbMessage msg = createFromPdu ( pdu ) ; assertEquals ( STRING_CONSTANT , expectedGs , msg . getGeographicalScope () ) ; }
public void test_SSL_CTX_free ( ) throws java.lang.Exception { try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_CTX_free ( org.apache.harmony.xnet.provider.jsse.NativeCryptoTest.NULL ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_CTX_free ( org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_CTX_new () ) ; }
private void updateContactEntry ( com.android.incallui.ContactInfoCache.ContactCacheEntry entry , boolean isPrimary ) { if ( isPrimary ) { mPrimaryContactInfo = entry ; updatePrimaryDisplayInfo () ; } else { mSecondaryContactInfo = entry ; updateSecondaryDisplayInfo () ; } }
private void setUpResources ( android.content.Context ctx ) { org.chromium.android_webview.AwResource . setResources ( com.android.webview.chromium.WebViewChromiumFactoryProvider . getWebViewPackageResources ( ctx ) ) ; org.chromium.android_webview.AwResource . setErrorPageResources ( R.raw.webviewchromium_loaderror , R.raw.webviewchromium_nodomain ) ; org.chromium.android_webview.AwResource . setConfigKeySystemUuidMapping ( R.array.config_keySystemUuidMapping ) ; }
@ java.lang.Override public com.android.ide.common.rendering.api.ResourceValue resolveResValue ( com.android.ide.common.rendering.api.ResourceValue resValue ) { if ( resValue != null ) { mLookupChain . add ( resValue ) ; } return super . resolveResValue ( resValue ) ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { myCollation = android.icu.text.Collator . getInstance ( java.util.Locale.KOREAN ) ; myCollation . setDecomposition ( Collator.CANONICAL_DECOMPOSITION ) ; }
@ java.lang.Override public void update () { if ( ( mActionList ) == null ) { mActionList = createActions () ; setItemList ( mActionList ) ; } else { updateActions () ; } }
private synchronized void createDir ( java.io.File folder ) throws java.io.IOException { if ( ( ! ( folder . isDirectory () ) ) && ( ! ( folder . mkdirs () ) ) ) { throw new java.io.IOException ( ( STRING_CONSTANT + folder ) ) ; } }
public static boolean hasRemoteService ( android.content.Context context , int subId ) { return ( com.android.phone.vvm.RemoteVvmTaskManager . getRemotePackage ( context , subId ) ) != null ; }
public java.lang.String getEncoding () { if ( ! ( isOpen () ) ) { return null ; } return decoder . charset () . name () ; }
public static com.android.server.pm.Installer.InstallerException from ( java.lang.Exception e ) throws com.android.server.pm.Installer.InstallerException { throw new com.android.server.pm.Installer.InstallerException ( e . toString () ) ; }
public void testConstructor_NullCanonicalName () { try { tests.api.java.nio.charset.CharsetTest.MockCharset c = new tests.api.java.nio.charset.CharsetTest.MockCharset ( null , new java.lang.String [] { STRING_CONSTANT } ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public void sendOnPostDialWait ( java.lang.String id , java.lang.String remaining ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . onPostDialWait ( id , remaining , null ) ; } }
void onBleDisable () { com.android.bluetooth.btservice.AdapterProperties . debugLog ( STRING_CONSTANT ) ; setScanMode ( AbstractionLayer.BT_SCAN_MODE_NONE ) ; }
@ java.lang.Override public void checkClientTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType ) throws java.security.cert.CertificateException { checkTrusted ( chain , authType , null , true ) ; }
@ javax.annotation.Nonnegative public static int getHeaderSize () { int headerSize = ( ( ( NUMBER_CONSTANT * ( com.android.jack.dx.dex.SizeOf.UBYTE ) ) + ( com.android.jack.dx.dex.SizeOf.UINT ) ) + ( com.android.jack.dx.dex.SizeOf.SIGNATURE ) ) + ( NUMBER_CONSTANT * ( com.android.jack.dx.dex.SizeOf.UINT ) ) ; return headerSize ; }
synchronized void nMeshGetVertices ( long id , long [] vtxIds , int vtxIdCount ) { validate () ; rsnMeshGetVertices ( mContext , id , vtxIds , vtxIdCount ) ; }
@ com.android.annotations.NonNull public java.util.Set < java.lang.String > getAbiFilters () { return abi . getApplicableFilters () ; }
@ android.support.annotation.MainThread public void tune ( android.net.Uri channelUri ) { mHandler . removeCallbacksAndMessages ( null ) ; mHandler . obtainMessage ( com.android.tv.tuner.tvinput.TunerRecordingSessionWorker.MSG_TUNE , NUMBER_CONSTANT , NUMBER_CONSTANT , channelUri ) . sendToTarget () ; }
private static native void dumpHprofData ( java.lang.String fileName , int fd ) throws java.io.IOException ;
public int getCount () { return mList . size () ; }
@ org.junit.Test public void testEvaluateNetworks_onlyTrustedNetworksAllowed_noTrustedInScanList () { android.net.wifi.WifiConfiguration result = mRecommendedNetworkEvaluator . evaluateNetworks ( com.google.android.collect.Lists . newArrayList ( mUntrustedScanDetail ) , null , null , false , false , null ) ; junit.framework.Assert . assertNull ( result ) ; verifyZeroInteractions ( mNetworkScoreManager ) ; }
@ java.lang.Override public void clientCertificateRequested ( long s ) { super . clientCertificateRequested ( s ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_use_PrivateKey ( s , org.apache.harmony.xnet.provider.jsse.NativeCryptoTest . getClientPrivateKey () ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_use_certificate ( s , org.apache.harmony.xnet.provider.jsse.NativeCryptoTest . getClientCertificates () ) ; }
@ java.lang.Deprecated public void setAccessRules ( java.util.List < android.telephony.UiccAccessRule > accessRules ) { this . accessRules = accessRules ; }
public native java.lang.Object invoke ( java.lang.Object obj , java.lang.Object . . . args ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.reflect.InvocationTargetException ;
public static void main ( java.lang.String [] args ) { Main . DoStaticTests () ; new Main () . DoInstanceTests () ; }
native void rsnAllocationElementRead ( long con , long id , int xoff , int yoff , int zoff , int mip , int compIdx , byte [] d , int sizeBytes ) ;
public boolean areStoresPresent () { return ( mSharedStore . exists () ) || ( ( ( mUserStore ) != null ) && ( mUserStore . exists () ) ) ; }
@ java.lang.Override public org.objectweb.asm.AnnotationVisitor visitAnnotation ( java.lang.String desc , boolean visible ) { org.objectweb.asm.AnnotationVisitor av = super . visitAnnotation ( remapper . mapDesc ( desc ) , visible ) ; return av == null ? av : new org.objectweb.asm.commons.RemappingAnnotationAdapter ( av , remapper ) ; }
public static short [] copyOf ( short [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
@ javax.annotation.Nonnull public static final com.android.jack.test.toolchain.IToolchain getCandidateToolchain () { com.android.jack.test.toolchain.IToolchain result = com.android.jack.test.toolchain.AbstractTestTools . createToolchain ( STRING_CONSTANT ) ; return result ; }
public void testZygote () { assertFalse ( android.security.cts.SELinuxTest . checkSELinuxAccess ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ) ; }
public static < T extends java.lang.Comparable < T > > void runBasicSplitTests ( java.lang.Iterable < T > spliterable , java.util.List < T > expectedElements ) { libcore.java.util.SpliteratorTester . runBasicSplitTests ( spliterable , expectedElements , T : : compareTo ) ; }
public char getZeroDigit () { return zeroDigit ; }
@ java.lang.Override public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surface ) { if ( ( mProcessor ) != null ) { mProcessor . setSurface ( null ) ; } return true ; }
@ java.lang.Override public void streamStateUpdated ( @ android.telephony.mbms.StreamingService.StreamingState int state , @ android.telephony.mbms.StreamingService.StreamingStateChangeReason int reason ) throws android.os.RemoteException { listener . streamStateUpdated ( state , reason ) ; }
public int getCode () { return ( mEvent ) != null ? mEvent . getCode () : - NUMBER_CONSTANT ; }
public final void sendRttInitiationFailure ( int reason ) { mListeners . forEach ( ( l ) - > l . onRttInitiationFailure ( this , reason ) ) ; }
public static java.lang.String [] getSupportedProtocols () { return new java.lang.String [] { org.conscrypt.NativeCrypto.SUPPORTED_PROTOCOL_TLSV1 , org.conscrypt.NativeCrypto.SUPPORTED_PROTOCOL_TLSV1_1 , org.conscrypt.NativeCrypto.SUPPORTED_PROTOCOL_TLSV1_2 } ; }
@ java.lang.Override public com.android.tools.lint.client.api.Configuration getConfiguration ( com.android.tools.lint.detector.api.Project project ) { return this . getConfiguration ( this , project ) ; }
@ java.lang.Override public void setLayerType ( int layerType , android.graphics.Paint paint ) { if ( ( mAwContents ) != null ) { mAwContents . setLayerType ( layerType , paint ) ; } }
@ java.lang.Override public void unregisterContentObservers () { appContext . getContentResolver () . unregisterContentObserver ( markDirtyObserver ) ; }
@ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; setupDatabase () ; }
public static void computeAbs ( android.renderscript.cts.TestAbs.ArgumentsIntUint args ) { args.out = java.lang.Math . abs ( args.inV ) ; }
public libcore.io.BufferIterator littleEndianIterator () { return new libcore.io.NioBufferIterator ( this , this . address , this . size , ( ( java.nio.ByteOrder . nativeOrder () ) != ( java.nio.ByteOrder.LITTLE_ENDIAN ) ) ) ; }
@ javax.annotation.Nonnull public com.android.jack.ir.ast.JType getType () { return type ; }
@ java.lang.Override public void onRecordTimeRangeChanged () { if ( mTimeShiftManager . isAvailable () ) { updateControls ( false ) ; } }
public void testDescendingPut1_NullPointerException () { java.util.NavigableMap c = jsr166.TreeSubMapTest . dmap5 () ; try { c . put ( null , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public void checkClientTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType ) throws java.security.cert.CertificateException { checkTrusted ( chain , authType , null , null , true ) ; }
public void error ( java.lang.String message ) { log . error ( null , message , null ) ; }
public static boolean [] copyOf ( boolean [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
private void assertParcelingIsLossless ( android.net.LinkAddress l ) { android.net.LinkAddress l2 = passThroughParcel ( l ) ; org.junit.Assert . assertEquals ( l , l2 ) ; }
public java.net.InetAddress [] lookupAllHostAddr ( java.lang.String host , int netId ) throws java.net.UnknownHostException { return java.net.InetAddress.impl . lookupAllHostAddr ( host , netId ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_reset ( long nPath ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate.mPath . reset () ; }
native boolean lutTest ( java.lang.String path , int X , int Y , int lutSize , byte [] input , byte [] input2 , byte [] output ) ;
public static void test () { int i ; assertTrue ( ( ( i = NUMBER_CONSTANT ) == NUMBER_CONSTANT ) ) ; assertTrue ( ( i == NUMBER_CONSTANT ) ) ; }
private static native java.lang.String nativeLoad ( java.lang.String filename , java.lang.ClassLoader loader , java.lang.String librarySearchPath ) ;
private com.android.server.am.ContentProviderHolder getContentProviderExternalUnchecked ( java.lang.String name , android.os.IBinder token , int userId ) { return getContentProviderImpl ( null , name , token , true , userId ) ; }
public void test_null_string ( ) throws java.lang.Exception { try { libcore.icu.Transliterator t = new libcore.icu.Transliterator ( STRING_CONSTANT ) ; t . transliterate ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ javax.annotation.Nonnull public static final com.android.jack.test.toolchain.IToolchain getCandidateToolchain () { return com.android.jack.test.toolchain.AbstractTestTools . createToolchain ( STRING_CONSTANT ) ; }
abstract void socketSetOption ( int cmd , java.lang.Object value ) throws java.net.SocketException ;
void addLocalMessage ( java.lang.String message ) { updateCurrentLocalMessage ( message ) ; if ( ( messageListener ) != null ) { messageListener . newMessageAdded () ; } }
final void putFloat ( int offset , float value ) { sun.nio.ch.NativeObject.unsafe . putFloat ( ( offset + ( address ) ) , value ) ; }
public static long LongSubtraction () { long a ; long b ; long c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a - b ; return c ; }
public void testRemove2_NullPointerException () { java.util.concurrent.ConcurrentSkipListMap c = new java.util.concurrent.ConcurrentSkipListMap () ; c . put ( STRING_CONSTANT , STRING_CONSTANT ) ; try { c . remove ( null , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void setRunOptions ( @ com.android.annotations.NonNull java.lang.String options ) { mRunOptions = options ; }
@ java.lang.Override final void putLongUnchecked ( int i , long x ) { putLong ( ix ( i ) , x ) ; }
@ java.lang.Override public void afterHandshake ( long session , long s , long c , java.net.Socket sock , java.io.FileDescriptor fd , org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSLHandshakeCallbacks callback ) throws java.lang.Exception { super . afterHandshake ( org.apache.harmony.xnet.provider.jsse.NativeCryptoTest.NULL , s , org.apache.harmony.xnet.provider.jsse.NativeCryptoTest.NULL , sock , fd , callback ) ; clientSession [ NUMBER_CONSTANT ] = session ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_getValues ( long native_object , float [] values ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return; } java.lang.System . arraycopy ( d.mValues , NUMBER_CONSTANT , d.mValues , NUMBER_CONSTANT , android.graphics.Matrix_Delegate.MATRIX_SIZE ) ; }
@ java.lang.Override public void setTTYMode ( int ttyMode , android.os.Message onComplete ) { super . setTTYMode ( ttyMode , onComplete ) ; if ( ( mImsPhone ) != null ) { mImsPhone . setTTYMode ( ttyMode , onComplete ) ; } }
@ org.junit.Test public void testRequestAllocInvalidSpi ( ) throws java.lang.Exception { try { mIpSecManager . allocateSecurityParameterIndex ( android.net.IpSecManagerTest.GOOGLE_DNS_4 , NUMBER_CONSTANT ) ; org.junit.Assert . fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException e ) {} }
public org.bouncycastle.crypto.Signer createSigner ( org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm algorithm , org.bouncycastle.crypto.params.AsymmetricKeyParameter privateKey ) { return makeSigner ( algorithm , false , true , privateKey ) ; }
public boolean setManufacturer ( java.lang.String value ) { return mSupplicantStaIfaceHal . setWpsManufacturer ( value ) ; }
public static int dayDistance ( java.util.Calendar c1 , java.util.Calendar c2 ) { return ( libcore.icu.DateIntervalFormat . julianDay ( c2 ) ) - ( libcore.icu.DateIntervalFormat . julianDay ( c1 ) ) ; }
public void test_entryCompatibility_compiletime () { assertEquals ( java.util.Map.Entry . class , java.util.Hashtable.Entry . class ) ; }
public int getImsRegistrationTech () { if ( ( mImsManager ) != null ) { return mImsManager . getRegistrationTech () ; } return android.telephony.ims.stub.ImsRegistrationImplBase.REGISTRATION_TECH_NONE ; }
public static void main ( java.lang.String [] args ) { try { Indirect . main () ; java.lang.System.out . println ( STRING_CONSTANT ) ; } catch ( java.lang.IncompatibleClassChangeError icce ) { java.lang.System.out . println ( STRING_CONSTANT ) ; } }
public static java.lang.String transportNameOf ( int transport ) { if ( ( transport < NUMBER_CONSTANT ) || ( ( android.net.NetworkCapabilities.TRANSPORT_NAMES.length ) <= transport ) ) { return STRING_CONSTANT ; } return android.net.NetworkCapabilities.TRANSPORT_NAMES [ transport ] ; }
private void onPageListSelected () { if ( ( ( mInternalPageChange ) == false ) && ( ( mPageList ) != null ) ) { int index = mPageList . getSelectionIndex () ; if ( index >= NUMBER_CONSTANT ) { displayPage ( index ) ; } } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void nativeSetLocalMatrix ( long native_shader , long native_skiaShader , long matrix_instance ) { android.graphics.Shader_Delegate shaderDelegate = android.graphics.Shader_Delegate.sManager . getDelegate ( native_shader ) ; if ( shaderDelegate == null ) { return; } shaderDelegate.mLocalMatrix = android.graphics.Matrix_Delegate . getDelegate ( matrix_instance ) ; }
public static boolean isAtLeast ( java.lang.String version ) { return ( Build.VERSION.SDK_INT ) >= ( com.android.compatibility.common.util.ApiLevelUtil . resolveVersionString ( version ) ) ; }
public static void registerAppInfo ( java.lang.String profile , java.lang.String [] codePaths ) throws java.lang.Exception { Main.VMRuntime.registerAppInfoMethod . invoke ( null , profile , codePaths ) ; }
public void error ( java.lang.Throwable t ) { log . error ( null , STRING_CONSTANT , t , null ) ; }
public void sendConnectionEvent ( java.lang.String id , java.lang.String event , android.os.Bundle extras ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . onConnectionEvent ( id , event , extras , null ) ; } }
public static double ReturnDouble33 () { int imm = NUMBER_CONSTANT ; return ( ( double ) ( imm ) ) ; }
public boolean endsWith ( java.lang.String suffix ) { return startsWith ( suffix , ( ( length () ) - ( suffix . length () ) ) ) ; }
public static void rollbackChanges ( final com.intellij.openapi.project.Project project , final java.util.Collection < com.intellij.openapi.vcs.changes.ui.Change > changes ) { com.intellij.openapi.vcs.changes.ui.RollbackChangesDialog . rollbackChanges ( project , changes , true , null ) ; }
public static void fail ( java.lang.String message ) { if ( message == null ) { throw new junit.framework.AssertionFailedError () ; } throw new junit.framework.AssertionFailedError ( message ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.cfg.JEntryBasicBlock x ) { print ( STRING_CONSTANT ) ; printBlockCommon ( x , null ) ; return false ; }
private void ensureMap () { if ( ( markers ) == null ) { markers = new java.util.HashMap < java.lang.Class < ? extends com.android.sched.marker.Marker > , com.android.sched.marker.Marker > () ; } }
protected abstract void doCompileFiles ( java.util.List < org.eclipse.core.resources.IFile > filesToCompile , com.android.ide.eclipse.adt.internal.build.builders.BaseBuilder builder , org.eclipse.core.resources.IProject project , com.android.sdklib.IAndroidTarget projectTarget , java.util.List < org.eclipse.core.runtime.IPath > sourceFolders , java.util.List < org.eclipse.core.resources.IFile > notCompiledOut , java.util.List < java.io.File > libraryProjectsOut , org.eclipse.core.runtime.IProgressMonitor monitor ) throws org.eclipse.core.runtime.CoreException ;
@ org.jetbrains.annotations.NotNull @ java.lang.Override public java.util.Set < java.lang.Class > getExtraProjectModelClasses () { return java.util.Collections . < java.lang.Class > singleton ( org.jetbrains.plugins.gradle.model.ScalaModel . class ) ; }
private static void getAndPrintTags () { long [] freedTags = Main . getCollectedTags ( NUMBER_CONSTANT ) ; java.util.Arrays . sort ( freedTags ) ; java.lang.System.out . println ( java.util.Arrays . toString ( freedTags ) ) ; }
@ org.junit.Test public void testCompareFiboDexFile ( ) throws java.lang.Exception { com.android.jack.test.helper.SourceToDexComparisonTestHelper helper = new com.android.jack.test.helper.CheckDexStructureTestHelper ( new java.io.File ( TEST001.directory , STRING_CONSTANT ) ) ; helper . runTest ( new com.android.jack.test.comparator.ComparatorDex ( helper . getReferenceDex () , helper . getCandidateDex () ) ) ; }
public final native void registerService ( java.lang.String serviceName ) throws android.os.RemoteException ;
public boolean changeApplicationBluetoothState ( boolean on , android.bluetooth.BluetoothAdapter.BluetoothStateChangeCallback callback ) { return false ; }
private static java.lang.String getCurrentIdp ( boolean useNanp ) { java.lang.String ps = null ; if ( useNanp ) ps = android.telephony.PhoneNumberUtils.NANP_IDP_STRING ; else { ps = android.os.SystemProperties . get ( com.android.internal.telephony.TelephonyProperties.PROPERTY_OPERATOR_IDP_STRING , android.telephony.PhoneNumberUtils.PLUS_SIGN_STRING ) ; } return ps ; }
@ java.lang.Override public void onResume () { super . onResume () ; }
public final android.graphics.Region getTransparentRegion ( android.graphics.Rect bounds ) { long r = android.graphics.NinePatch . nativeGetTransparentRegion ( mBitmap . ni () , mNativeChunk , bounds ) ; return r != NUMBER_CONSTANT ? new android.graphics.Region ( r ) : null ; }
public void copyFromUnchecked ( java.lang.Object array ) { try { android.os.Trace . traceBegin ( RenderScript.TRACE_TAG , STRING_CONSTANT ) ; copyFromUnchecked ( array , validateObjectIsPrimitiveArray ( array , false ) , java.lang.reflect.Array . getLength ( array ) ) ; } finally { android.os.Trace . traceEnd ( RenderScript.TRACE_TAG ) ; } }
@ java.lang.Override public final java.lang.String getApplicationProtocol () { return org.conscrypt.SSLUtils . toProtocolString ( ssl . getApplicationProtocol () ) ; }
@ java.lang.Override public void onAppStatusChanged ( android.bluetooth.BluetoothDevice pluggedDevice , boolean registered ) { mCallback . onAppStatusChanged ( pluggedDevice , registered ) ; }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { super . finalize () ; } finally { android.graphics.ColorFilter . destroyFilter ( native_instance ) ; native_instance = NUMBER_CONSTANT ; } }
public void close () { maybeUnregisterObserverProxy () ; mCursor . close () ; }
@ javax.annotation.Nonnull @ java.lang.Override public com.android.jack.ir.ast.JDefinedClassOrInterface getEnclosingType () { return enclosingType ; }
@ java.lang.Deprecated public void refreshPlugins ( boolean reloadOpenPages ) {}
@ java.lang.Override void setUp () { insertSingleContact ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.ALICE , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.ALICE_PHONE , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.ALICE_EMAIL , true ) ; insertSingleContact ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.BOB , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.BOB_PHONE , com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.BOB_EMAIL , false ) ; status = READY ; }
@ java.lang.Override protected java.io.File getLocalPathForFilename ( com.android.tradefed.build.IBuildInfo arg0 , java.lang.String arg1 ) throws com.android.tradefed.targetprep.TargetSetupError { storedApkName = arg1 ; return super . getLocalPathForFilename ( arg0 , arg1 ) ; }
private static com.android.build.VariantOutput getAbiOutput ( java.lang.String filter , int versionCode ) { return new com.android.ide.common.build.SplitOutputMatcherTest.FakeVariantOutput ( new com.android.ide.common.build.SplitOutputMatcherTest.FakeSplitOutput ( null , filter ) , versionCode ) ; }
public void writeTo ( java.io.File dexOut ) throws java.io.IOException { try ( java.io.OutputStream out = new java.io.FileOutputStream ( dexOut ) ) { writeTo ( out ) ; } }
public static void computeCross ( android.renderscript.cts.TestCross.ArgumentsFloatNFloatNFloatN args ) { android.renderscript.cts.CoreMathVerifier . cross ( args.inLhs , args.inRhs , args.out , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void addrPlayerChangedRsp ( int type , int playerId , int uidCounter ) { if ( ! ( registerNotificationRspAddrPlayerChangedNative ( type , playerId , com.android.bluetooth.avrcp.Avrcp.sUIDCounter ) ) ) { android.util.Log . e ( com.android.bluetooth.avrcp.Avrcp.AvrcpMediaRsp.TAG , STRING_CONSTANT ) ; } }
public void test_getTrafficClass () { try ( java.net.Socket theSocket = new java.net.Socket () ) { int trafficClass = theSocket . getTrafficClass () ; ensureExceptionThrownIfOptionIsUnsupportedOnOS ( libcore.java.net.IP_TOS ) ; } catch ( java.lang.Exception e ) { handleException ( e , libcore.java.net.IP_TOS ) ; } }
@ org.junit.Test public void testDigestFiles ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.lang.Long > checkSums = myPatch . digestFiles ( getDataDir () , java.util.Collections . < java.lang.String > emptyList () , false , com.intellij.updater.TEST_UI ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , checkSums . size () ) ; }
synchronized void nAllocationRead ( long id , byte [] d ) { validate () ; rsnAllocationRead ( mContext , id , d ) ; }
private void populateBottomPanel () { bottomPanel . setBorder ( javax.swing.BorderFactory . createLineBorder ( com.intellij.util.ui.UIUtil . getBorderColor () , NUMBER_CONSTANT ) ) ; updateConfigurationCountLabel () ; bottomPanel . add ( myConfigurationCountLabel ) ; }
synchronized void nMeshGetIndices ( long id , long [] idxIds , int [] primitives , int vtxIdCount ) { validate () ; rsnMeshGetIndices ( mContext , id , idxIds , primitives , vtxIdCount ) ; }
public com.android.ide.eclipse.adt.editors.layout.gscripts.Rect set ( com.android.ide.eclipse.adt.editors.layout.gscripts.Rect r ) { set ( r.x , r.y , r.w , r.h ) ; return this ; }
private native void gattClientSetAdvDataNative ( int advertiserId , boolean set_scan_rsp , byte [] data ) ;
@ org.chromium.base.annotations.CalledByNative private static boolean isBatteryPower () { return org.chromium.base.PowerMonitor.sInstance.mIsBatteryPower ; }
void setDevice ( android.bluetooth.BluetoothDevice device ) { mDevice = device ; }
@ java.lang.Override protected synchronized void create () { mCreated = true ; }
@ java.lang.Override protected void onPause () { super . onPause () ; if ( ( mProcessor ) != null ) { mProcessor . exit () ; mProcessor = null ; } }
private void formatIfOemUnlockEnabled () { if ( doGetOemUnlockEnabled () ) { synchronized ( mLock ) { formatPartitionLocked ( true ) ; } } }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private java.lang.Object readResolve () { java.util.EnumSet < E > result = java.util.EnumSet . noneOf ( elementType ) ; for ( java.lang.Enum < > e : elements ) result . add ( ( ( E ) ( e ) ) ) ; return result ; }
public boolean setWfdDeviceInfo ( java.lang.String hex ) { return mSupplicantP2pIfaceHal . setWfdDeviceInfo ( hex ) ; }
public static void multiplyP ( int [] x ) { int m = ( org.bouncycastle.crypto.modes.gcm.GCMUtil . shiftRight ( x ) ) > > NUMBER_CONSTANT ; x [ NUMBER_CONSTANT ] ^= m & ( org.bouncycastle.crypto.modes.gcm.GCMUtil.E1 ) ; }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { destroy () ; } finally { super . finalize () ; } }
public void pickFirst ( java.lang.String path ) { pickFirsts . add ( path ) ; }
public static native void SSL_CTX_disable_npn ( long sslCtxNativePointer ) ;
@ java.lang.Override final void getUnchecked ( int pos , int [] dst , int dstOffset , int length ) { libcore.io.Memory . peekIntArray ( ix ( pos ) , dst , dstOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
@ com.android.internal.annotations.VisibleForTesting public void sendErrorResponse ( android.os.Message onComplete , java.lang.Throwable e ) { android.telephony.Rlog . d ( com.android.internal.telephony.imsphone.ImsPhone.LOG_TAG , STRING_CONSTANT ) ; if ( onComplete != null ) { android.os.AsyncResult . forMessage ( onComplete , null , getCommandException ( e ) ) ; onComplete . sendToTarget () ; } }
public static void connect ( java.io.FileDescriptor fd , java.net.InetAddress inetAddress , int port ) throws java.net.SocketException { try { libcore.io.IoBridge . connect ( fd , inetAddress , port , NUMBER_CONSTANT ) ; } catch ( java.net.SocketTimeoutException ex ) { throw new java.lang.AssertionError ( ex ) ; } }
public long timeAbsL ( int reps ) { long result = l ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . abs ( l ) ; } return result ; }
void unsljLog ( int response ) { riljLog ( ( STRING_CONSTANT + ( com.android.internal.telephony.RIL . responseToString ( response ) ) ) ) ; }
public boolean canEncode ( char c ) { return canEncode ( java.nio.CharBuffer . wrap ( new char [] { c } ) ) ; }
private java.lang.Object getPairValue ( org.eclipse.jdt.internal.compiler.lookup.ElementValuePair pair ) { return getConstantValue ( pair . getValue () ) ; }
private boolean isAEADModeName ( java.lang.String modeName ) { return ( STRING_CONSTANT . equals ( modeName ) ) || ( STRING_CONSTANT . equals ( modeName ) ) ; }
void setPackagingOptionsFilter ( com.android.builder.signing.SignedJarBuilder.IZipEntryFilter filter ) ;
public boolean resetRoamingConfiguration () { return mWifiVendorHal . configureRoaming ( new com.android.server.wifi.WifiNative.RoamingConfig () ) ; }
@ java.lang.Override public com.google.common.collect.ImmutableSortedMap.Builder < K , V > put ( K key , V value ) { super . put ( key , value ) ; return this ; }
@ java.lang.Override public java.util.Iterator < java.lang.String > getEncodings () { return org.apache.harmony.security.provider.cert.X509CertPathImpl.encodings . iterator () ; }
synchronized void nAllocationData2D ( long id , int xoff , int yoff , int mip , int face , android.graphics.Bitmap b ) { validate () ; rsnAllocationData2D ( mContext , id , xoff , yoff , mip , face , b ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setRotate ( long native_object , float degrees ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return; } android.graphics.Matrix_Delegate . setRotate ( d.mValues , degrees ) ; }
@ org.junit.Test public void test_X509_NAME_hashes () { javax.security.auth.x500.X500Principal name = new javax.security.auth.x500.X500Principal ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( ( - NUMBER_CONSTANT ) , org.conscrypt.NativeCrypto . X509_NAME_hash ( name ) ) ; org.junit.Assert . assertEquals ( ( - NUMBER_CONSTANT ) , org.conscrypt.NativeCrypto . X509_NAME_hash_old ( name ) ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public E get ( int index ) { return ( ( E ) ( elements [ index ] ) ) ; }
@ java.lang.Override public void setCodecConfigPreference ( android.bluetooth.BluetoothDevice device , android.bluetooth.BluetoothCodecConfig codecConfig ) { com.android.bluetooth.a2dp.A2dpService service = getService () ; if ( service == null ) { return; } service . setCodecConfigPreference ( device , codecConfig ) ; }
public void doQuit () { quitNow () ; }
public static int hashCode ( long value ) { return ( ( int ) ( value ^ ( value > > > NUMBER_CONSTANT ) ) ) ; }
static void inlinedForNull ( java.lang.Iterable < > it ) { if ( it != null ) { throw new java.lang.Error ( STRING_CONSTANT ) ; } }
void removeRegistrationListener ( com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException ;
abstract void putUnchecked ( int pos , double [] dst , int srcOffset , int length ) ;
@ java.lang.Override public void onAttachedToWindow () { mFactory . startYourEngines ( false ) ; checkThread () ; mAwContents . onAttachedToWindow () ; }
public android.view.MotionEvent getPendingTrackballMove ( android.view.IWindow window ) { if ( com.android.server.WindowManagerService.localLOGV ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + window ) ) ; return mKeyWaiter . finishedKey ( this , window , false , com.android.server.WindowManagerService.KeyWaiter.RETURN_PENDING_TRACKBALL ) ; }
public android.net.wifi.IApInterface setupDriverForSoftApMode () { android.net.wifi.IApInterface apInterface = mWificondControl . setupDriverForSoftApMode () ; if ( ! ( startHal ( false ) ) ) { android.util.Log . e ( com.android.server.wifi.WifiNative.TAG , STRING_CONSTANT ) ; } return apInterface ; }
public void setreuid ( int ruid , int euid ) throws android.system.ErrnoException { os . setreuid ( ruid , euid ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.lang.Boolean bluetoothHidDeviceVirtualUnplug ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT , description = STRING_CONSTANT ) java.lang.String deviceID ) throws java.lang.Exception { if ( ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile ) == null ) { return false ; } android.bluetooth.BluetoothDevice device = com.googlecode.android_scripting.facade.bluetooth.BluetoothFacade . getDevice ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . getConnectedDevices () , deviceID ) ; return com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . unplug ( device ) ; }
@ com.android.annotations.NonNull public java.io.File getLocation () { return mPath ; }
public void run () { mTextView = findTextView ( R.id.textview_text ) ; }
public void testStepF32 () { android.renderscript.cts.ScriptField_step_input in = new android.renderscript.cts.ScriptField_step_input ( mRS , INPUTSIZE ) ; mIn = in . getAllocation () ; doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public void turnOffIms ( int slotId , int featureType ) throws android.os.RemoteException {}
@ java.lang.Override public void streamingServicesUpdated ( java.util.List < android.telephony.mbms.StreamingServiceInfo > services ) throws android.os.RemoteException { listener . streamingServicesUpdated ( services ) ; }
synchronized void nAllocationRead ( long id , int [] d ) { validate () ; rsnAllocationRead ( mContext , id , d ) ; }
public static com.android.jack.dx.rop.code.RopMethod convertToRopMethod ( com.android.jack.dx.ssa.SsaMethod ssaMeth ) { return new com.android.jack.dx.ssa.back.SsaToRop ( ssaMeth ) . convert () ; }
@ java.lang.Override public void sendDtmf ( char c , android.os.Message result ) { this . sendDtmf ( c , result ) ; }
public boolean isVideoEnabled () { com.android.internal.telephony.Phone imsPhone = mImsPhone ; if ( imsPhone != null ) { return imsPhone . isVideoEnabled () ; } return false ; }
@ java.lang.Override public java.lang.annotation.Annotation [] [] getParameterAnnotations () { return super . getParameterAnnotations () ; }
public void streamStateChanged ( int state ) {}
@ java.lang.Override public void sendRttModifyResponse ( boolean status ) { this . sendRttModifyResponse ( status ) ; }
public void testNearest () { mScript . invoke_test_RGBA ( mAlloc_RGBA_1D , mAlloc_RGBA_2D ) ; mRS . finish () ; waitForMessage () ; checkForErrors () ; }
public double timeCbrt ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . cbrt ( d ) ; } return result ; }
@ android.support.annotation.MainThread void unregisterContentObservers ( ) ;
public boolean setBluetoothCoexistenceMode ( int mode ) { return mSupplicantStaIfaceHal . setBtCoexistenceMode ( mode ) ; }
@ javax.annotation.Nonnull @ java.lang.Override public java.lang.String toString () { return STRING_CONSTANT + ( name . toString () ) ; }
public WifiConfiguration.Visibility getVisibility ( long age ) { return getVisibilityByRssi ( age ) ; }
@ java.lang.Override public void report ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Severity severity , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.TextFormat format ) { java.lang.System.out . println ( ( ( location + STRING_CONSTANT ) + message ) ) ; }
public void callSessionMultipartyStateChanged ( boolean isMultiParty ) { try { mListener . callSessionMultipartyStateChanged ( isMultiParty ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
public void testNullOk ( ) throws java.lang.Exception { com.android.ide.eclipse.adt.internal.editors.layout.gle2.SwtUtils . cropBlank ( null , null ) ; com.android.ide.eclipse.adt.internal.editors.layout.gle2.SwtUtils . cropColor ( null , NUMBER_CONSTANT , null ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setValues ( long native_object , float [] values ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return; } java.lang.System . arraycopy ( values , NUMBER_CONSTANT , d.mValues , NUMBER_CONSTANT , android.graphics.Matrix_Delegate.MATRIX_SIZE ) ; }
@ java.lang.Deprecated public void setUseDoubleTree ( boolean use ) {}
public void test_createEffect ( ) throws java.lang.Exception { assertTrue ( android.security.cts.AudioFlingerBinderTest . native_test_createEffect () ) ; }
public com.android.dx.util.ByteArray slice ( int start , int end ) { checkOffsets ( start , end ) ; return new com.android.dx.util.ByteArray ( bytes , ( start + ( this . start ) ) , ( end + ( this . start ) ) ) ; }
@ java.lang.Override public void registrationConnectedWithRadioTech ( int imsRadioTech ) { if ( com.android.ims.ImsManager.DBG ) { com.android.ims.ImsManager . log ( ( STRING_CONSTANT + imsRadioTech ) ) ; } if ( ( mListener ) != null ) { mListener . onImsConnected ( imsRadioTech ) ; } }
private static native java.lang.Class defineClassNative ( java.lang.String name , java.lang.ClassLoader loader , long cookie ) throws java.lang.ClassNotFoundException , java.lang.NoClassDefFoundError ;
public void run () { recreateScreens () ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { com.android.server.LocalServices . removeServiceForTest ( android.app.admin.DevicePolicyManagerInternal . class ) ; com.android.server.LocalServices . addService ( android.app.admin.DevicePolicyManagerInternal . class , mSystemDpmi ) ; }
public void flushNow () { try { flusher . flushNow () ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( STRING_CONSTANT ) ; e . printStackTrace () ; } }
@ java.lang.Override public void onAttachFailed () { android.os.Bundle mResults = new android.os.Bundle () ; mResults . putInt ( STRING_CONSTANT , mSessionId ) ; mEventFacade . postEvent ( STRING_CONSTANT , mResults ) ; }
@ javax.annotation.Nonnull public com.android.jack.ir.ast.JType getType () { assert ( type ) != null ; return type ; }
public static void is ( java.lang.Class < > type ) {}
public int import_key ( java.lang.String name , byte [] data , int uid ) throws android.os.RemoteException ;
protected void finalize ( ) throws java.lang.Throwable { if ( ( mClosures ) != null ) { mClosures . clear () ; } super . finalize () ; }
com.android.server.wifi.WifiConnectivityManager createConnectivityManager () { return new com.android.server.wifi.WifiConnectivityManager ( mContext , mWifiStateMachine , mWifiScanner , mWifiConfigManager , mWifiInfo , mWifiNS , mWifiLastResortWatchdog , mWifiMetrics , mLooper . getLooper () , mClock , true , mFrameworkFacade , null , null ) ; }
@ com.android.annotations.NonNull public static com.android.sdklib.repository.NoPreviewRevision parseRevision ( @ com.android.annotations.NonNull java.lang.String revision ) throws java.lang.NumberFormatException { com.android.sdklib.repository.FullRevision r = parseRevisionImpl ( revision , true , false , false ) ; return new com.android.sdklib.repository.NoPreviewRevision ( r . getMajor () , r . getMinor () , r . getMicro () ) ; }
public void testPass2 () { addTestLog ( STRING_CONSTANT , LogDataType.TEXT , new com.android.tradefed.result.ByteArrayInputStreamSource ( STRING_CONSTANT . getBytes () ) ) ; addTestMetric ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public void callSessionRemoveParticipantsRequestFailed ( com.android.ims.ImsReasonInfo reasonInfo ) { if ( ( mListener ) != null ) { mListener . callSessionRemoveParticipantsRequestFailed ( this , reasonInfo ) ; } }
public void resumeDownload () { sendMessage ( com.android.bluetooth.pbapclient.PbapClientStateMachine.MSG_RESUME_DOWNLOAD ) ; }
public static int p ( float arg ) { return arg > NUMBER_CONSTANT ? NUMBER_CONSTANT : - NUMBER_CONSTANT ; }
@ java.lang.Override public void setEnabled ( boolean enabled ) { super . setEnabled ( enabled ) ; myKindCombo . setEnabled ( enabled ) ; }
@ java.lang.Override public synchronized int getSoTimeout ( ) throws java.net.SocketException { return readTimeoutMilliseconds ; }
public abstract java.lang.String getFolderSegment ( ) ;
private boolean awaitLatch ( java.util.concurrent.CountDownLatch l , long timeoutMs ) { try { return l . await ( timeoutMs , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } catch ( java.lang.InterruptedException e ) {} return false ; }
public void testGrantNoneRequestNone ( ) throws java.lang.Exception { doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.GRANT_NONE , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , android.wm.cts.CrossAppDragAndDropTests.RESULT_EXCEPTION ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_EXTRAS , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; }
@ java.lang.Override public org.eclipse.ltk.core.refactoring.Change createChange ( org.eclipse.core.runtime.IProgressMonitor pm ) throws org.eclipse.core.runtime.CoreException , org.eclipse.core.runtime.OperationCanceledException { com.android.ide.eclipse.adt.internal.actions.RenamePackageAction.JavaFileVisitor file_visitor = new com.android.ide.eclipse.adt.internal.actions.RenamePackageAction.JavaFileVisitor () ; mProject . accept ( file_visitor ) ; return file_visitor . getChange () ; }
public java.lang.String p2pGetSsid ( java.lang.String deviceAddress ) { return mSupplicantP2pIfaceHal . getSsid ( deviceAddress ) ; }
@ javax.annotation.Nonnull public static java.lang.String getDefaultBootclasspathString () { return com.android.jack.TestTools . getFromAndroidTree ( STRING_CONSTANT ) . getAbsolutePath () ; }
public void visitDeprecatedAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.DeprecatedAttribute deprecatedAttribute ) { if ( ( optionalAttributeVisitor ) != null ) { optionalAttributeVisitor . visitDeprecatedAttribute ( clazz , deprecatedAttribute ) ; } }
private android.bluetooth.BluetoothGattService getService () { android.bluetooth.BluetoothGattService service = null ; if ( ( mBluetoothGatt ) != null ) { service = mBluetoothGatt . getService ( com.android.cts.verifier.bluetooth.BleClientService.SERVICE_UUID ) ; if ( service == null ) { showMessage ( STRING_CONSTANT ) ; } } return service ; }
public static synchronized void removeProvider ( int providerNumber ) { java.security.Provider p = org.apache.harmony.security.fortress.Services.providers . remove ( ( providerNumber - NUMBER_CONSTANT ) ) ; org.apache.harmony.security.fortress.Services.providersNames . remove ( p . getName () ) ; org.apache.harmony.security.fortress.Services . setNeedRefresh () ; }
public void addrPlayerChangedRsp ( int type , int playerId , int uidCounter ) ;
@ java.lang.Override public void progress ( android.telephony.mbms.DownloadRequest request , android.telephony.mbms.FileInfo fileInfo , int currentDownloadSize , int fullDownloadSize , int currentDecodedSize , int fullDecodedSize ) throws android.os.RemoteException {}
@ com.android.annotations.Nullable private static java.lang.String getExpectedType ( @ com.android.annotations.Nullable java.lang.String value ) { return value != null ? com.android.tools.lint.checks.ServiceCastDetector . getServiceMap () . get ( value ) : null ; }
void readSummaryFromParcelLocked ( android.os.Parcel in ) { mLoadedCount = in . readInt () ; mCount . set ( mLoadedCount ) ; mLastCount = in . readInt () ; mUnpluggedCount = mPluggedCount = mLoadedCount ; }
public java.lang.String getJcaKeyAlgorithm () { return mJcaKeyAlgorithm ; }
@ java.lang.Override protected final void setUp ( ) throws java.lang.Exception { super . setUp () ; if ( ! ( isSupported () ) ) return; removePowerSaveModeWhitelist ( com.android.cts.net.hostside.TEST_APP2_PKG ) ; setBatterySaverMode ( false ) ; registerBroadcastReceiver () ; }
public void testContains_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . contains ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public android.bluetooth.BluetoothCodecStatus getCodecStatus ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.a2dp.A2dpService service = getService () ; if ( service == null ) { return null ; } return service . getCodecStatus ( device ) ; }
@ java.lang.Override public native java.lang.annotation.Annotation [] getDeclaredAnnotations ( ) ;
abstract int doPostInstall ( int status , int uid ) ;
protected abstract android.webkit.WebBackForwardList clone ( ) ;
private void safelyUpdateScores ( android.net.ScoredNetwork [] networkScores ) { try { mScoreManager . updateScores ( networkScores ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . w ( com.android.networkrecommendation.DefaultNetworkRecommendationService.TAG , STRING_CONSTANT ) ; } }
public static void disablePortForwarding ( com.android.ddmlib.IDevice device , int port ) { try { device . removeForward ( port , com.android.ide.eclipse.gltrace.CollectTraceAction.GLTRACE_UDS , DeviceUnixSocketNamespace.ABSTRACT ) ; } catch ( java.lang.Exception e ) {} }
public static long OrIntLong () { int lhs = NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs | rhs ; }
@ java.lang.Override public android.graphics.drawable.ConstantState getConstantState () { if ( mState . canConstantState () ) { mState.mChangingConfigurations = getChangingConfigurations () ; return mState ; } return null ; }
public void dump ( java.lang.StringBuilder sb ) { sb . append ( STRING_CONSTANT ) ; sb . append ( mName ) ; sb . append ( STRING_CONSTANT ) ; }
private void writeLineIfDifferentFromCurrent ( @ javax.annotation.Nonnegative int lineNumber ) throws java.io.IOException { if ( lineNumber != ( currentLineNumber ) ) { writeCurrentLine ( lineNumber ) ; } }
@ java.lang.Override protected void cleanup () { if ( ( mStateMachine ) != null ) { mStateMachine . cleanup () ; } com.android.bluetooth.a2dpsink.A2dpSinkService . clearA2dpSinkService () ; }
void assertThreadsStayAlive ( long millis , java.lang.Thread . . . threads ) { try { jsr166.JSR166TestCase . delay ( millis ) ; for ( java.lang.Thread thread : threads ) assertTrue ( thread . isAlive () ) ; } catch ( java.lang.InterruptedException fail ) { fail ( STRING_CONSTANT ) ; } }
public int length () { return count ; }
public void testPowF32 () { android.renderscript.cts.ScriptField_PowInputData in = new android.renderscript.cts.ScriptField_PowInputData ( mRS , INPUTSIZE ) ; mIn = in . getAllocation () ; doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void run () { synchronized ( this ) { viewport = model . getViewport () ; setBounds () ; setTransform () ; } }
@ java.lang.Override public java.lang.String getMessage () { return ( ( STRING_CONSTANT + ( javaVersion . toString () ) ) + STRING_CONSTANT ) + ( getCause () . getMessage () ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_rLineTo ( long nPath , float dx , float dy ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate . rLineTo ( dx , dy ) ; }
public void handleMessage ( android.os.Message msg ) { switch ( msg.what ) { case NUMBER_CONSTANT : mService . killAppAtUsersRequest ( mProc , this ) ; break; } }
T get ( int key ) { T val = mArray . get ( key ) ; if ( val != null ) { val . checkOwnerOrSystemAndThrow () ; } return val ; }
private void displaySoftKeyboard () { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getContext () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mTextEntry , NUMBER_CONSTANT ) ; }
@ java.lang.Override @ android.support.annotation.RequiresPermission ( value = Manifest.permission.READ_PHONE_STATE ) public void onStateChange ( com.android.incallui.InCallPresenter.InCallState oldState , com.android.incallui.InCallPresenter.InCallState newState , com.android.incallui.call.CallList callList ) { com.android.dialer.common.LogUtil . d ( STRING_CONSTANT , STRING_CONSTANT , oldState , newState ) ; updateNotification () ; }
@ java.lang.Override public void declineVideoRequest () { com.android.dialer.common.LogUtil . enterBlock ( STRING_CONSTANT ) ; call . getVideoCall () . sendSessionModifyResponse ( new android.telecom.VideoProfile ( call . getDetails () . getVideoState () ) ) ; logger . logImpression ( DialerImpression.Type.IMS_VIDEO_REQUEST_DECLINED ) ; }
@ java.lang.Override protected byte [] engineGenerateSeed ( int numBytes ) { byte [] output = new byte [ numBytes ] ; org.conscrypt.NativeCrypto . RAND_bytes ( output ) ; return output ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < com.google.common.collect.ImmutableMap < com.android.dialer.DialerPhoneNumber , com.android.dialer.phonelookup.PhoneLookupInfo > > bulkUpdate ( com.google.common.collect.ImmutableMap < com.android.dialer.DialerPhoneNumber , com.android.dialer.phonelookup.PhoneLookupInfo > existingInfoMap ) { return com.google.common.util.concurrent.MoreExecutors . newDirectExecutorService () . submit ( ( ) - > bulkUpdateInternal ( existingInfoMap ) ) ; }
final void putChar ( int offset , char value ) { sun.nio.ch.NativeObject.unsafe . putChar ( ( offset + ( address ) ) , value ) ; }
public static void setCallbackDecode ( long converterHandle , java.nio.charset.CharsetDecoder decoder ) { libcore.icu.NativeConverter . setCallbackDecode ( converterHandle , libcore.icu.NativeConverter . translateCodingErrorAction ( decoder . malformedInputAction () ) , libcore.icu.NativeConverter . translateCodingErrorAction ( decoder . unmappableCharacterAction () ) , decoder . replacement () ) ; }
@ java.lang.Override @ com.google.common.annotations.GwtIncompatible ( value = STRING_CONSTANT ) public java.util.Set < java.util.Map.Entry < K , V > > entrySet () { java.util.Set < java.util.Map.Entry < K , V > > es = entrySet ; return es != null ? es : ( entrySet = new EntrySet ( this ) ) ; }
long getDisplayList ( long displayList ) { return android.view.GLES20Canvas . nGetDisplayList ( mRenderer , displayList ) ; }
public com.android.jack.dx.rop.cst.CstString getDescriptor () { return descriptor ; }
@ java.lang.Override public int getFeatureState ( ) throws android.os.RemoteException { synchronized ( mLock ) { try { return this . getFeatureState () ; } catch ( java.lang.Exception e ) { throw new android.os.RemoteException ( e . getMessage () ) ; } } }
public vogar.commands.Command.Builder permitNonZeroExitStatus ( boolean value ) { this . permitNonZeroExitStatus = value ; return this ; }
void getTotalNumOfItemsRsp ( byte [] address , int rspStatus , int uidCounter , int numItems ) ;
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onPhyRead ( this , txPhy , rxPhy , status ) ; } }
public native long getLong ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
static android.telephony.SignalStrength convertHalSignalStrength ( com.android.internal.telephony.V1_0.SignalStrength signalStrength ) { return new android.telephony.SignalStrength ( signalStrength.gw.signalStrength , signalStrength.gw.bitErrorRate , signalStrength.cdma.dbm , signalStrength.cdma.ecio , signalStrength.evdo.dbm , signalStrength.evdo.ecio , signalStrength.evdo.signalNoiseRatio , signalStrength.lte.signalStrength , signalStrength.lte.rsrp , signalStrength.lte.rsrq , signalStrength.lte.rssnr , signalStrength.lte.cqi , signalStrength.tdScdma.rscp ) ; }
@ java.lang.Override final void putIntUnchecked ( int i , int x ) { putInt ( ix ( i ) , x ) ; }
public static synchronized com.android.ims.internal.Logger getLogger ( java.lang.String classname ) { return new com.android.ims.internal.Logger ( com.android.ims.internal.Logger.TAG , classname ) ; }
@ java.lang.Override public final float getFloat () { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getFloat ( ix ( nextGetIndex ( SizeOf.FLOAT ) ) ) ; }
native void rsnScriptSetVarJ ( long con , long id , int slot , long val ) ;
@ com.android.dialer.calllogutils.CallbackActionHelper.CallbackAction public static int getCallbackAction ( java.lang.String number , int features , java.lang.String phoneAccountComponentName ) { return com.android.dialer.calllogutils.CallbackActionHelper . getCallbackAction ( number , features , com.android.dialer.calllogutils.CallbackActionHelper . isDuoCall ( phoneAccountComponentName ) ) ; }
@ java.lang.Override public int callDrawGLFunction ( long drawGLFunction ) { return android.view.GLES20Canvas . nCallDrawGLFunction ( mRenderer , drawGLFunction ) ; }
@ java.lang.Override @ com.android.annotations.NonNull public java.lang.String getName () { return name ; }
public native void set ( java.lang.Object obj , java.lang.Object value ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Deprecated public boolean getUseDoubleTree () { return false ; }
public libcore.io.BufferIterator littleEndianIterator () { return new libcore.io.NioBufferIterator ( address , ( ( int ) ( size ) ) , ( ( java.nio.ByteOrder . nativeOrder () ) != ( java.nio.ByteOrder.LITTLE_ENDIAN ) ) ) ; }
public static void sort ( short [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void cleanup () { log ( ( STRING_CONSTANT + ( mDevice ) ) ) ; }
public void removeAll ( com.android.sdklib.internal.repository.SdkSourceCategory category ) { synchronized ( mSources ) { mSources . remove ( category ) ; } }
public void handleMessage ( android.os.Message msg ) { super . handleMessage ( msg ) ; if ( ( msg.what ) == NUMBER_CONSTANT ) { mHandler . sendMessageAtFrontOfQueue ( mHandler . obtainMessage ( NUMBER_CONSTANT ) ) ; } }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session ) throws java.lang.Exception { com.android.jack.backend.dex.DexWritingTool writingTool = new com.android.jack.backend.dex.MergingDexWritingTool ( outputVDir ) ; writingTool . write () ; }
@ java.lang.Override @ javax.annotation.Nonnull public java.io.OutputStream getOutputStream ( ) throws com.android.sched.util.file.WrongPermissionException { return getOutputStream ( false ) ; }
@ java.lang.Override public void onCellLocationChanged ( android.telephony.CellLocation location ) { if ( ! ( mOnCellLocationChangedCalled ) ) { synchronized ( mLock ) { mOnCellLocationChangedCalled = true ; mLock . notify () ; } } }
public android.media.MediaDrm.CryptoSession getCryptoSession ( @ android.annotation.NonNull byte [] sessionId , @ android.annotation.NonNull java.lang.String cipherAlgorithm , @ android.annotation.NonNull java.lang.String macAlgorithm ) { return new android.media.MediaDrm.CryptoSession ( sessionId , cipherAlgorithm , macAlgorithm ) ; }
@ com.android.annotations.NonNull java.lang.Iterable < java.io.File > getJavaOuptuts ( ) ;
@ java.lang.Override public boolean onSetSurface ( android.view.Surface surface ) { mSurface = surface ; if ( surface != null ) { draw () ; } return true ; }
@ org.junit.Test public void test030 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( TEST030 ) . compileAndRunTest () ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { lastOpenFiles = com.android.preload.Main . getUI () . showOpenDialog ( true ) ; if ( ( lastOpenFiles ) != null ) { super . actionPerformed ( e ) ; } }
private void removeWifiChangeHandler ( com.android.server.wifi.scanner.WifiScanningServiceImpl.ClientInfo ci , int handler ) { if ( ci != null ) { mActiveWifiChangeHandlers . remove ( android.util.Pair . create ( ci , handler ) ) ; untrackSignificantWifiChangeOnEmpty () ; } }
com.android.internal.telephony.Connection dial ( java.lang.String dialString ) throws com.android.internal.telephony.CallStateException { return dial ( dialString , CommandsInterface.CLIR_DEFAULT , null ) ; }
@ java.lang.Override public void onAvailabilityChanged () { updateMenuVisibility () ; this . updateAll ( false ) ; }
@ java.lang.Override public java.lang.String toString () { return getLogLine ( null ) ; }
public java.lang.String getCanonicalHostName () { if ( ( canonicalHostName ) == null ) { canonicalHostName = java.net.InetAddress . getHostFromNameService ( this ) ; } return canonicalHostName ; }
@ javax.annotation.Nonnull protected com.android.jack.ir.ast.JStatement updateCatchBlockList ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JStatement clonedStmt , @ javax.annotation.Nonnull com.android.jack.ir.ast.JStatement orignalStmt ) { for ( com.android.jack.ir.ast.JCatchBlock catchBlocks : orignalStmt . getJCatchBlocks () ) { clonedStmt . appendCatchBlock ( cloneCatchBlock ( catchBlocks ) ) ; } return clonedStmt ; }
@ java.lang.Override protected void postCreate () { mTableViewer . setLabelProvider ( new org.eclipse.jface.viewers.LabelProvider () ) ; mTableViewer . setContentProvider ( new com.android.sdkuilib.internal.repository.AddonSitesDialog.SourcesContentProvider () ) ; loadList () ; }
@ com.android.internal.annotations.VisibleForTesting public android.os.Looper getStateMachinesThreadLooper () { return mStateMachinesThread . getLooper () ; }
private void setWorkingSets ( org.eclipse.ui.IWorkingSet [] workingSets ) { assert workingSets != null ; mWorkingSetGroup . setWorkingSets ( workingSets ) ; }
@ android.annotation.Nullable public java.lang.String getEid () { if ( ! ( isEnabled () ) ) { return null ; } try { return getIEuiccController () . getEid () ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
protected boolean mustTraceOverridingMethod ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { synchronized ( method ) { com.android.jack.analysis.tracer.BaseTracerMarker marker = method . getMarker ( markerClass ) ; if ( marker != null ) { return marker . mustTraceOverridingMethods () ; } } return false ; }
private void setCurrX ( java.lang.Integer currX ) { mCurrX = currX ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { super . widgetSelected ( e ) ; validatePage () ; }
public void invokeVirtual ( final org.objectweb.asm.Type owner , final org.objectweb.asm.commons.Method method ) { invokeInsn ( Opcodes.INVOKEVIRTUAL , owner , method , false ) ; }
private int packageFlagsToInstallFlags ( com.android.server.pm.PackageSetting ps ) { int installFlags = NUMBER_CONSTANT ; if ( com.android.server.pm.PackageManagerService . isExternal ( ps ) ) { installFlags |= android.content.pm.PackageManager.INSTALL_EXTERNAL ; } if ( ps . isForwardLocked () ) { installFlags |= android.content.pm.PackageManager.INSTALL_FORWARD_LOCK ; } return installFlags ; }
@ java.lang.Override boolean isEmpty ( @ javax.annotation.Nonnull com.android.sched.vfs.ReadZipFS.ZipVDir dir ) { return list ( dir ) . isEmpty () ; }
public abstract int getCacheMode ( ) ;
private void assertVerdict ( int expected , byte [] program , byte [] packet ) { android.net.apf.ApfTest . assertReturnCodesEqual ( expected , android.net.apf.ApfTest . apfSimulate ( program , packet , null , NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public void onStreamStateUpdated ( @ android.telephony.mbms.StreamingService.StreamingState int state , @ android.telephony.mbms.StreamingService.StreamingStateChangeReason int reason ) { try { callback . onStreamStateUpdated ( state , reason ) ; } catch ( android.os.RemoteException e ) { onAppCallbackDied ( uid , subscriptionId ) ; } }
@ java.lang.Override public boolean getReport ( android.bluetooth.BluetoothDevice device , byte reportType , byte reportId , int bufferSize ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return false ; } return service . getReport ( device , reportType , reportId , bufferSize ) ; }
public void setModel ( com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo rootViewInfo ) { mRootWrapper . setRoot ( rootViewInfo ) ; if ( ( mTreeViewer ) != null ) { java.lang.Object [] expanded = mTreeViewer . getExpandedElements () ; mTreeViewer . refresh () ; mTreeViewer . setExpandedElements ( expanded ) ; } }
@ javax.annotation.Nonnull private com.android.jack.ir.ast.JAnnotationType getDefaultAnnotationType () { if ( ( defaultAnnotationType ) == null ) { defaultAnnotationType = com.android.jack.Jack . getSession () . getPhantomLookup () . getAnnotationType ( DexAnnotations.ANNOTATION_ANNOTATION_DEFAULT ) ; } assert ( defaultAnnotationType ) != null ; return defaultAnnotationType ; }
private static java.math.BigInt newBigInt () { java.math.BigInt bi = new java.math.BigInt () ; bi.bignum = java.math.NativeBN . BN_new () ; return bi ; }
@ java.lang.Override protected void tearDown () { mNm . cancelAll () ; deleteChannel () ; if ( ( com.android.cts.verifier.notifications.MockListener.MockListener . getInstance () ) != null ) { com.android.cts.verifier.notifications.MockListener.MockListener . getInstance () . resetData () ; } }
protected int keySizeBytes () { if ( ( key ) == null ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return org.conscrypt.NativeCrypto . RSA_size ( this . key . getNativeRef () ) ; }
protected abstract com.intellij.updater.ValidationResult validate ( java.io.File toDir ) throws java.io.IOException ;
@ java.lang.Override public void setServiceForeground ( android.content.ComponentName className , android.os.IBinder token , int id , android.app.Notification notification , int flags ) { synchronized ( this ) { mServices . setServiceForegroundLocked ( className , token , id , notification , flags ) ; } }
@ android.annotation.SystemApi public synchronized java.lang.String getCookie ( android.net.WebAddress uri ) { return getCookie ( uri . toString () ) ; }
private boolean p2pListen ( int timeout ) { if ( timeout <= NUMBER_CONSTANT ) { return p2pListen () ; } return doBooleanCommand ( ( STRING_CONSTANT + timeout ) ) ; }
@ java.lang.Override public void onOffsetsChanged ( float xOffset , float yOffset , float xStep , float yStep , int xPixels , int yPixels ) { if ( ( mRenderer ) != null ) mRenderer . setOffset ( xOffset , yOffset , xPixels , yPixels ) ; }
private void reportAllocation ( lombok.ast.Node node ) { mContext . report ( com.android.tools.lint.checks.JavaPerformanceDetector.PAINT_ALLOC , node , mContext . getLocation ( node ) , ( STRING_CONSTANT + STRING_CONSTANT ) ) ; }
@ java.lang.Override public void progress ( android.telephony.mbms.DownloadRequest request , android.telephony.mbms.FileInfo fileInfo , int currentDownloadSize , int fullDownloadSize , int currentDecodedSize , int fullDecodedSize ) throws android.os.RemoteException { callback . progress ( request , fileInfo , currentDownloadSize , fullDownloadSize , currentDecodedSize , fullDecodedSize ) ; }
public static native void EC_GROUP_set_generator ( long groupCtx , long pointCtx , byte [] n , byte [] h ) ;
@ java.lang.Override public boolean onSearchRequested () { mUi . editUrl ( false , true ) ; return true ; }
public com.android.tools.r8.utils.AndroidApp.Builder addProgramFiles ( java.nio.file.Path . . . files ) throws java.io.IOException { return addProgramFiles ( java.util.Arrays . asList ( files ) , false ) ; }
public void callSessionTtyModeReceived ( int mode ) { try { mListener . callSessionTtyModeReceived ( mode ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
public static void addDeviceChangeListener ( com.android.ddmlib.AndroidDebugBridge.IDeviceChangeListener listener ) { synchronized ( com.android.ddmlib.AndroidDebugBridge.sLock ) { if ( ! ( com.android.ddmlib.AndroidDebugBridge.sDeviceListeners . contains ( listener ) ) ) { com.android.ddmlib.AndroidDebugBridge.sDeviceListeners . add ( listener ) ; } } }
public static void computeAcosh ( android.renderscript.cts.TestAcosh.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . acosh ( args.inV , t ) ; }
@ java.lang.Override public void stopLoading () { mLoadStopped = true ; com.android.browser.Tab tab = mTabControl . getCurrentTab () ; android.webkit.WebView w = getCurrentTopWebView () ; if ( w != null ) { w . stopLoading () ; mUi . onPageStopped ( tab ) ; } }
public void testConstructor_EmptyAliases () { try { new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , new java.lang.String [] { STRING_CONSTANT } ) ; fail () ; } catch ( java.nio.charset.IllegalCharsetNameException expected ) {} }
private static android.icu.text.DateFormatSymbols getDateFormatSymbols ( java.lang.String id , java.util.Locale locale ) { java.lang.String calendarType = sun.util.locale.provider.CalendarDataUtility . normalizeCalendarType ( id ) ; return new android.icu.text.DateFormatSymbols ( android.icu.util.ULocale . forLocale ( locale ) , calendarType ) ; }
native void rsnAllocationRead ( long con , long id , short [] d ) ;
@ org.junit.Before public void init ( ) throws java.lang.Exception { java.lang.String ruleset = STRING_CONSTANT ; myCollation = new android.icu.text.RuleBasedCollator ( ruleset ) ; }
public java.lang.String getP2pClientList ( int netId ) { return null ; }
boolean needFetch () { if ( ( fetchTime ) == NUMBER_CONSTANT ) { return true ; } long current = java.lang.System . currentTimeMillis () ; return ( current - ( fetchTime ) ) > ( com.android.ddmlib.FileListingService.REFRESH_TEST ) ; }
public static boolean isNetworkTypeValid ( int networkType ) { return ( networkType >= NUMBER_CONSTANT ) && ( networkType <= ( android.net.ConnectivityManager.MAX_NETWORK_TYPE ) ) ; }
private java.lang.String toNetscapeHeaderString () { return ( ( getName () ) + STRING_CONSTANT ) + ( getValue () ) ; }
private void checkReference () { if ( ( mConnection ) == null ) { return; } if ( ( mTaskReferenceCount ) == NUMBER_CONSTANT ) { unbindService ( mConnection ) ; mConnection = null ; } }
native void rsnAllocationData3D ( long con , long id , int xoff , int yoff , int zoff , int mip , int w , int h , int depth , float [] d , int sizeBytes ) ;
@ org.junit.BeforeClass public static void setUpClass () { com.android.jack.statistics.BlockStatisticsOnCore . class . getClassLoader () . setDefaultAssertionStatus ( true ) ; }
java.util.List < android.media.session.MediaSession.QueueItem > getQueue () { return mMediaController . getQueue () ; }
@ java.lang.Override public com.google.gct.testing.GoogleCloudTestingConfiguration clone () { return copy ( null ) ; }
@ java.lang.Override public void connectionServiceFocusGained () {}
@ java.lang.Override public com.android.ims.internal.IImsMultiEndpoint getMultiEndpointInterface ( ) throws android.os.RemoteException { synchronized ( mLock ) { return this . getMultiEndpointInterface () ; } }
protected abstract boolean matchesSafely ( T item ) ;
private static com.android.build.VariantOutput getOutput ( int densityFilter , java.lang.String abiFilter , int versionCode ) { com.android.resources.Density densityEnum = com.android.resources.Density . getEnum ( densityFilter ) ; return new com.android.ide.common.build.SplitOutputMatcherTest.FakeVariantOutput ( new com.android.ide.common.build.SplitOutputMatcherTest.FakeSplitOutput ( densityEnum . getResourceValue () , abiFilter ) , versionCode ) ; }
@ org.junit.Test public void test002a ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( false , null ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
private static com.android.build.VariantOutput getDensityOutput ( int densityFilter , int versionCode ) { com.android.resources.Density densityEnum = com.android.resources.Density . getEnum ( densityFilter ) ; return new com.android.ide.common.build.SplitOutputMatcherTest.FakeVariantOutput ( new com.android.ide.common.build.SplitOutputMatcherTest.FakeSplitOutput ( densityEnum . getResourceValue () , null ) , versionCode ) ; }
public java.lang.String getClasspathName () { return getName () ; }
@ java.lang.Override public void setVolume ( int volume ) {}
@ com.android.annotations.VisibleForTesting public void setXmlNode ( org.w3c.dom.Node xmlNode ) { mXmlNode = xmlNode ; }
private void setupConnectionService ( ) throws java.lang.Exception { mConnectionService = new android.telecom.cts.MockConnectionService () ; android.telecom.cts.CtsConnectionService . setUp ( mConnectionService ) ; mTelecomManager . registerPhoneAccount ( android.telecom.cts.CallScreeningServiceTest.TEST_PHONE_ACCOUNT ) ; android.telecom.cts.TestUtils . enablePhoneAccount ( getInstrumentation () , android.telecom.cts.CallScreeningServiceTest.TEST_PHONE_ACCOUNT_HANDLE ) ; assertPhoneAccountEnabled ( android.telecom.cts.CallScreeningServiceTest.TEST_PHONE_ACCOUNT_HANDLE ) ; }
public void testVersion11 () { android.renderscript.cts.ScriptC_set_target_api_11 test11 = new android.renderscript.cts.ScriptC_set_target_api_11 ( mRS ) ; test11 . invoke_check ( NUMBER_CONSTANT ) ; waitForMessage () ; checkForErrors () ; }
void onActivityStarted () { com.android.dialer.common.LogUtil . d ( STRING_CONSTANT , STRING_CONSTANT ) ; notifyVideoPauseController ( true ) ; applyScreenTimeout () ; }
private static < K extends java.lang.Enum < K > > K [] getKeyUniverse ( java.lang.Class < K > keyType ) { return keyType . getEnumConstantsShared () ; }
public void run () { updateExternalMediaStatusInner ( mediaStatus , reportStatus , true ) ; }
public void cleanup () { if ( ( mWaiting ) != null ) mWaiting . clear () ; mPlayersChanged = false ; if ( ( mCurrentBrowser ) != null ) mCurrentBrowser . disconnect () ; }
public boolean requireEnd () { synchronized ( this ) { return java.util.regex.Matcher . requireEndImpl ( address ) ; } }
@ android.test.suitebuilder.annotation.MediumTest @ org.junit.Test public void testConstructPossiblePhoneAccountsMultiSimIdle ( ) throws java.lang.Exception { setupMsimAccounts () ; java.util.List < android.telecom.PhoneAccountHandle > phoneAccountHandles = mCallsManager . constructPossiblePhoneAccounts ( com.android.server.telecom.tests.CallsManagerTest.TEST_ADDRESS , null , false ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , phoneAccountHandles . size () ) ; }
@ java.lang.Override void addOptionInstance ( com.google.devtools.common.options.ParsedOptionDescription parsedOption , java.util.List < java.lang.String > warnings ) throws com.google.devtools.common.options.OptionsParsingException {}
public void free () { address = NUMBER_CONSTANT ; }
public static com.android.ide.eclipse.adt.internal.editors.layout.uimodel.UiViewElementNode createNode ( java.lang.String fqn , boolean hasChildren ) { return com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfoTest . createNode ( null , fqn , hasChildren ) ; }
@ java.lang.Override protected void update ( byte b ) { checkNotDone () ; digest . update ( b ) ; }
public void setMiracastMode ( int mode ) { mSupplicantP2pIfaceHal . setMiracastMode ( mode ) ; }
synchronized double nScriptGetVarD ( long id , int slot ) { validate () ; return rsnScriptGetVarD ( mContext , id , slot ) ; }
@ java.lang.Override public java.lang.String convert ( java.lang.String input ) { return input ; }
synchronized float nScriptGetVarF ( long id , int slot ) { validate () ; return rsnScriptGetVarF ( mContext , id , slot ) ; }
public void warning ( java.lang.String message ) { log . warning ( null , message , null ) ; }
public void addPeriodicSync ( android.accounts.Account account , int userId , java.lang.String providerName , android.os.Bundle extras , long pollFrequency ) { updateOrRemovePeriodicSync ( account , userId , providerName , extras , pollFrequency , true ) ; }
private java.nio.ByteBuffer put ( long a , byte x ) { libcore.io.Memory . pokeByte ( a , x ) ; return this ; }
public void testNewInstanceString_NoArgConstructor () { runTestNewInstanceString ( STRING_CONSTANT , new org.apache.harmony.jpda.tests.jdwp.ClassType.NoConstructorArgumentProvider () ) ; }
@ java.lang.Override public int hashCode () { return id ; }
public void testSqrtF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void addNewEmergencyCall () { java.lang.String callerId = STRING_CONSTANT ; connectionTag = com.android.dialer.simulator.impl.SimulatorSimCallManager . addNewIncomingCall ( context , callerId , SimulatorSimCallManager.CALL_TYPE_RTT ) ; }
public static void assertEquals ( long expected , long result ) { if ( expected != result ) { throw new java.lang.Error ( ( ( ( STRING_CONSTANT + expected ) + STRING_CONSTANT ) + result ) ) ; } }
public synchronized void kill () { if ( sendCommand ( com.android.ddmlib.EmulatorConsole.COMMAND_KILL ) ) { close () ; } }
public void testContainsValue_NullPointerException () { java.util.concurrent.ConcurrentSkipListMap c = new java.util.concurrent.ConcurrentSkipListMap () ; try { c . containsValue ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void testTimeZoneNotChangedByParse ( ) throws java.lang.Exception { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( STRING_CONSTANT ) ; df . setTimeZone ( libcore.java.text.SimpleDateFormatTest.UTC ) ; df . parse ( STRING_CONSTANT ) ; assertEquals ( libcore.java.text.SimpleDateFormatTest.UTC , df . getTimeZone () ) ; }
@ java.lang.Override public void log ( java.lang.String log ) { if ( acceptLog ( log ) ) { mSdkLog . info ( STRING_CONSTANT , log ) ; } }
@ com.android.annotations.Nullable public com.android.sdklib.BuildToolInfo getLatestBuildTool () { return mManager . getLatestBuildTool () ; }
@ org.junit.Test public void test002e ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( true , STRING_CONSTANT , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
private int newBranchOffset ( int oldInstructionOffset , int oldBranchOffset ) { return ( newInstructionOffset ( ( oldInstructionOffset + oldBranchOffset ) ) ) - ( newInstructionOffset ( oldInstructionOffset ) ) ; }
private native boolean sendDtmfNative ( byte [] address , byte code ) ;
private static java.lang.IllegalArgumentException badTimestampString ( java.lang.String s ) { return new java.lang.IllegalArgumentException ( ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + s ) + STRING_CONSTANT ) ) ; }
@ java.lang.Override public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile ) throws android.os.RemoteException { checkBinderConnection () ; return getServiceInterface ( mBinder ) . createCallSession ( sessionId , profile , null ) ; }
public void setup () { put ( STRING_CONSTANT , libcore.java.security.ProviderTest.MockSpi . class . getName () ) ; }
public void onImsCapabilityChanged () { sendMessage ( obtainMessage ( com.android.internal.telephony.ServiceStateTracker.EVENT_IMS_CAPABILITY_CHANGED ) ) ; }
private void removeHotlist ( com.android.server.wifi.scanner.WifiScanningServiceImpl.ClientInfo ci , int handler ) { if ( ci != null ) { mActiveHotlistSettings . removeRequest ( ci , handler ) ; resetHotlist () ; } }
public boolean isProductionValid ( @ javax.annotation.Nonnull com.android.sched.scheduler.ManagedRunnable runner ) { return missingProductions . containsAll ( runner . getProductions () ) ; }
@ java.lang.Deprecated public abstract void setDefaultZoom ( android.webkit.WebSettings.ZoomDensity zoom ) ;
public static long XorIntLong () { int lhs = NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs ^ rhs ; }
public static void finalizeAllEnqueued ( ) throws java.lang.InterruptedException { java.lang.ref.FinalizerReference.Sentinel sentinel ; do { sentinel = new java.lang.ref.FinalizerReference.Sentinel () ; } while ( ! ( java.lang.ref.FinalizerReference . enqueueSentinelReference ( sentinel ) ) ) ; sentinel . awaitFinalization () ; }
@ org.junit.Test @ android.test.suitebuilder.annotation.MediumTest public void test_UT_math () { com.android.rs.test.UT_math test = new com.android.rs.test.UT_math ( null , mContext ) ; test . run () ; org.junit.Assert . assertTrue ( ( ( test . getResult () ) == ( UnitTest.TEST_PASSED ) ) ) ; }
@ java.lang.Override public void beforeExecute ( org.gradle.api.Task task ) { taskRecords . put ( task . getName () , new com.android.build.gradle.internal.profile.RecordingBuildListener.TaskRecord ( mRecorder . allocationRecordId () , java.lang.System . currentTimeMillis () ) ) ; }
public void removeTransportModeTransform ( java.net.Socket socket , android.net.IpSecTransform transform ) throws java.io.IOException { removeTransportModeTransform ( android.os.ParcelFileDescriptor . fromSocket ( socket ) , transform ) ; }
@ java.lang.Override public java.io.File call () { return scope . getJavaOutputDir () ; }
private static org.eclipse.core.runtime.IStatus createErrorStatus ( java.lang.String message , java.lang.Throwable e ) { com.android.ide.eclipse.adt.AdtPlugin . log ( e , message ) ; com.android.ide.eclipse.adt.AdtPlugin . printErrorToConsole ( Messages.DexWrapper_Dex_Loader , message ) ; return new org.eclipse.core.runtime.Status ( org.eclipse.core.runtime.IStatus.ERROR , com.android.ide.eclipse.adt.AdtPlugin.PLUGIN_ID , message , e ) ; }
public com.android.ide.eclipse.adt.internal.editors.layout.gre.RulesEngine getRulesEngine () { return mGraphicalEditor . getRulesEngine () ; }
private synchronized void addMediaPlayerBrowsable ( java.lang.String packageName ) { com.android.bluetooth.avrcp.MediaPlayerInfo info = new com.android.bluetooth.avrcp.MediaPlayerInfo ( null , AvrcpConstants.PLAYER_TYPE_AUDIO , AvrcpConstants.PLAYER_SUBTYPE_NONE , getPlayStateBytes ( null ) , getFeatureBitMask ( packageName ) , packageName , getAppLabel ( packageName ) ) ; addMediaPlayerInfo ( info ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.jack.tools.merger.JackMerger getNewJackMerger ( int firstTypeIndex ) { return new com.android.jack.tools.merger.JackMerger ( createDexFile () , com.android.sched.util.config.ThreadConfig . get ( Options.BEST_MERGING_ACCURACY ) . booleanValue () , firstTypeIndex ) ; }
private void readHistoryStatsFromFile () { synchronized ( mFileLock ) { if ( mHistoryFile . getBaseFile () . exists () ) { readHistoryStatsFLOCK () ; } } }
@ java.lang.Override protected void deliverResponse ( T response ) { if ( ( mListener ) != null ) { mListener . onResponse ( response ) ; } }
@ javax.annotation.Nonnull public static org.jf.dexlib2.Opcodes forApi ( int api ) { return new org.jf.dexlib2.Opcodes ( api , org.jf.dexlib2.VersionMap.NO_VERSION ) ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { UCA = ( ( android.icu.text.RuleBasedCollator ) ( android.icu.text.Collator . getInstance ( ULocale.ROOT ) ) ) ; comparer = new android.icu.text.UTF16.StringComparator ( true , false , UTF16.StringComparator.FOLD_CASE_DEFAULT ) ; }
@ java.lang.Override public void traverse ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JVisitor visitor ) { visitor . visit ( this ) ; visitor . endVisit ( this ) ; }
private void reset () { org.conscrypt.NativeCrypto . EVP_CipherInit_ex ( cipherCtx , NUMBER_CONSTANT , encodedKey , iv , encrypting ) ; calledUpdate = false ; }
public android.content.SyncStorageEngine.AuthorityInfo getOrCreateAuthority ( android.accounts.Account account , int userId , java.lang.String authority ) { synchronized ( mAuthorities ) { return getOrCreateAuthorityLocked ( account , userId , authority , ( - NUMBER_CONSTANT ) , true ) ; } }
public void testCompareNull ( ) throws java.lang.Exception { try { new java.text.RuleBasedCollator ( STRING_CONSTANT ) . compare ( null , null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public void doQuit () { log ( ( STRING_CONSTANT + ( mDevice ) ) ) ; quitNow () ; }
public static void sort ( long [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public boolean onCreate () { databaseHelper = new com.android.dialer.phonelookup.database.PhoneLookupHistoryDatabaseHelper ( getContext () ) ; return true ; }
protected native java.lang.Object socketGetOption ( int opt ) throws java.net.SocketException ;
public void testNanoSingle ( ) throws java.lang.Exception { com.google.protobuf.nano.UnittestSingleNano.SingleMessageNano msg = new com.google.protobuf.nano.UnittestSingleNano.SingleMessageNano () ; assertNotNull ( msg ) ; }
public void run () { try { readTimedTextTracks () ; } catch ( java.lang.Exception e ) { throw new junit.framework.AssertionFailedError ( e . getMessage () ) ; } }
@ java.lang.Override @ javax.annotation.Nonnull public java.lang.String getCanonicalName () { return com.android.jack.coverage.CodeCoverage . class . getCanonicalName () ; }
private static native boolean findNextImpl ( long addr , int [] offsets ) ;
static final java.text.DateFormatSymbols getInstanceRef ( java.util.Locale locale ) { return java.text.DateFormatSymbols . getCachedInstance ( locale ) ; }
@ java.lang.Override boolean isPartialView () { return ( size ) != ( array.length ) ; }
private void setNotification ( boolean enable ) { android.bluetooth.BluetoothGattCharacteristic characteristic = getCharacteristic ( com.android.cts.verifier.bluetooth.BleClientService.UPDATE_CHARACTERISTIC_UUID ) ; if ( characteristic != null ) { setNotification ( characteristic , enable ) ; } }
native void rsnScriptGroupSetInput ( long con , long group , long kernel , long alloc ) ;
@ java.lang.Override public void onSetFeatureResponse ( int feature , int network , int value , int status ) { mMetrics . writeImsSetFeatureValue ( mPhone . getPhoneId () , feature , network , value ) ; }
@ java.lang.Override public final byte get () { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return get ( ix ( nextGetIndex () ) ) ; }
@ java.lang.Override public int hashCode () { return icuColl . hashCode () ; }
public void deinit () { mInitialized = false ; unregisterObserver () ; if ( ( mSmsBroadcastReceiver ) != null ) { mSmsBroadcastReceiver . unregister () ; } unRegisterPhoneServiceStateListener () ; failPendingMessages () ; removeDeletedMessages () ; }
public static byte [] copyOf ( byte [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
public void doQuit () { android.util.Log . d ( com.android.bluetooth.hfpclient.HeadsetClientStateMachine.TAG , STRING_CONSTANT ) ; quitNow () ; }
@ java.lang.Override public void onProgramInfoChanged () { if ( mTimeShiftManager . isAvailable () ) { initializeTimeline () ; updateControls ( false ) ; } }
@ java.lang.Override public void onSelected ( boolean showTitle ) { super . onSelected ( showTitle ) ; postHideRippleAnimation () ; }
protected boolean nativeConnectDisabled () { return false ; }
public void testRemove2_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; c . put ( STRING_CONSTANT , STRING_CONSTANT ) ; try { c . remove ( null , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public int dexopt ( java.lang.String apkPath , int uid , boolean isPublic , java.lang.String instructionSet ) { return dexopt ( apkPath , uid , isPublic , STRING_CONSTANT , instructionSet , false , false , null ) ; }
public com.android.build.gradle.integration.common.fixture.GradleTestProject.Builder fromSample ( @ com.android.annotations.NonNull java.lang.String project ) { com.android.build.gradle.integration.common.fixture.app.AndroidTestApp app = new com.android.build.gradle.integration.common.fixture.GradleTestProject.Builder.EmptyTestApp () ; name = project ; java.io.File projectDir = new java.io.File ( com.android.build.gradle.integration.common.fixture.GradleTestProject.Builder.SAMPLE_PROJECT_DIR , project ) ; com.android.build.gradle.integration.common.fixture.GradleTestProject . addAllFiles ( app , projectDir ) ; return fromTestApp ( app ) ; }
@ com.android.annotations.NonNull public static java.lang.String lookupNamespacePrefix ( @ com.android.annotations.NonNull org.w3c.dom.Node node , @ com.android.annotations.NonNull java.lang.String nsUri ) { java.lang.String defaultPrefix = ( com.android.SdkConstants.ANDROID_URI . equals ( nsUri ) ) ? com.android.SdkConstants.ANDROID_NS_NAME : com.android.SdkConstants.APP_PREFIX ; return com.android.utils.XmlUtils . lookupNamespacePrefix ( node , nsUri , defaultPrefix , true ) ; }
public static java.lang.String getId ( org.w3c.dom.Element element ) { return element . getAttributeNS ( com.android.ide.common.layout.LayoutConstants.ANDROID_URI , com.android.ide.common.layout.LayoutConstants.ATTR_ID ) ; }
@ java.lang.Override final int getIntUnchecked ( int i ) { return getInt ( ix ( i ) ) ; }
private native void nativeDoRunLoopOnce ( long messagePumpDelegateNative , long delayedScheduledTimeTicks ) ;
private final com.android.server.am.HistoryRecord finishCurrentActivityLocked ( com.android.server.am.HistoryRecord r , int mode ) { final int index = indexOfTokenLocked ( r ) ; if ( index < NUMBER_CONSTANT ) { return null ; } return finishCurrentActivityLocked ( r , index , mode ) ; }
public long read ( java.nio.ByteBuffer [] buffers ) throws java.io.IOException { return channel . read ( buffers ) ; }
abstract long getLongUnchecked ( int index ) ;
@ com.google.caliper.Benchmark public long timeMethod ( long reps ) { java.lang.System.out . println ( reps ) ; return reps ; }
public void sendRemoveCall ( java.lang.String id ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . removeCall ( id , null ) ; } }
public void testEncodeDecodeVideoFromBufferToBuffer720p ( ) throws java.lang.Exception { setParameters ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , android.media.cts.EncodeDecodeTest.MIME_TYPE_AVC , true , false ) ; encodeDecodeVideoFromBuffer ( false ) ; }
public void applyConfiguration ( @ com.android.annotations.NonNull org.gradle.api.tasks.testing.Test task ) { this . testTasks . add ( task ) ; }
@ java.lang.Override public void execute ( org.gradle.api.Task it ) { it . dependsOn ( reportTask . getName () ) ; }
abstract java.util.Set < java.util.Map.Entry < K , V > > createEntrySet ( ) ;
public static android.renderscript.Element F64 ( android.renderscript.RenderScript rs ) { if ( ( rs.mElement_F64 ) == null ) { synchronized ( rs ) { if ( ( rs.mElement_F64 ) == null ) { rs.mElement_F64 = android.renderscript.Element . createUser ( rs , android.renderscript.Element.DataType.FLOAT_64 ) ; } } } return rs.mElement_F64 ; }
public void parse ( java.util.List < java.lang.String > args ) throws com.google.devtools.common.options.OptionsParsingException { parse ( OptionPriority.COMMAND_LINE , null , args ) ; }
@ java.lang.Override public double get ( int index ) { return byteBuffer . getDouble ( ( index * ( libcore.io.SizeOf.DOUBLE ) ) ) ; }
private void logEvent ( int probeType , int errorCode ) { int eventType = probeType | ( errorCode & NUMBER_CONSTANT ) ; mMetricsLog . log ( mInterfaceName , new android.net.metrics.IpReachabilityEvent ( eventType ) ) ; }
public boolean isChromiumLinkerLibrary ( java.lang.String library ) { return library . equals ( org.chromium.base.library_loader.Linker.LINKER_JNI_LIBRARY ) ; }
public void testInvalidInvokeinterface () { mn . visitInsn ( org.objectweb.asm.tree.analysis.ACONST_NULL ) ; mn . visitTypeInsn ( org.objectweb.asm.tree.analysis.CHECKCAST , STRING_CONSTANT ) ; mn . visitInsn ( org.objectweb.asm.tree.analysis.FCONST_0 ) ; mn . visitMethodInsn ( org.objectweb.asm.tree.analysis.INVOKEINTERFACE , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , true ) ; assertInvalid () ; }
public static int getUnsignedInt16 ( java.nio.ByteBuffer buffer , int offset ) { return ( buffer . getShort ( offset ) ) & NUMBER_CONSTANT ; }
@ java.lang.Override public com.google.common.collect.UnmodifiableIterator < V > iterator () { return multimap . valueIterator () ; }
@ java.lang.Override final void getUnchecked ( int pos , float [] dst , int dstOffset , int length ) { libcore.io.Memory . peekFloatArray ( ix ( pos ) , dst , dstOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
@ java.lang.Override public java.lang.String toString () { return ( super . toString () ) + ( name . toString () ) ; }
@ java.lang.Override public boolean getScanCapabilities ( com.android.server.wifi.WifiNative.ScanCapabilities capabilities ) { capabilities.max_scan_cache_size = java.lang.Integer.MAX_VALUE ; capabilities.max_scan_buckets = com.android.server.wifi.scanner.WificondScannerImpl.MAX_SCAN_BUCKETS ; capabilities.max_ap_cache_per_scan = com.android.server.wifi.scanner.WificondScannerImpl.MAX_APS_PER_SCAN ; capabilities.max_rssi_sample_size = NUMBER_CONSTANT ; capabilities.max_scan_reporting_threshold = com.android.server.wifi.scanner.WificondScannerImpl.SCAN_BUFFER_CAPACITY ; return true ; }
@ java.lang.Override public void enter () { super . enter () ; setSpeakerphoneOn ( false ) ; setBluetoothOn ( true ) ; android.telecom.CallAudioState newState = new android.telecom.CallAudioState ( mIsMuted , com.android.server.telecom.CallAudioRouteStateMachine.ROUTE_BLUETOOTH , mAvailableRoutes ) ; setSystemAudioState ( newState , true ) ; updateInternalCallAudioState () ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeInt ( mRawSize ) ; dest . writeByteArray ( mRawData ) ; }
public native double getDouble ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public void handleSetListening ( boolean listening ) { if ( ( mController ) == null ) return; if ( listening ) { mController . addCallback ( mSignalCallback ) ; } else { mController . removeCallback ( mSignalCallback ) ; } }
@ java.lang.Override public void report ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message , @ com.android.annotations.Nullable java.lang.Object data ) { if ( mDriver . isSuppressed ( this , issue , compilationUnit ) ) { return; } super . report ( issue , location , message , data ) ; }
@ java.lang.Override public final void setAccessible ( boolean value ) { memoryRef.isAccessible = value ; }
public void uidsChangedRsp ( int type ) ;
protected final void set0 ( int n , java.lang.Object obj ) { throwIfImmutable () ; arr [ n ] = obj ; }
@ dalvik.annotation.optimization.FastNative final native java.lang.String getMethodNameInternal ( ) ;
private void notifyOptionChanged ( @ com.android.tv.TvOptionsManager.OptionType int option ) { com.android.tv.TvOptionsManager.OptionChangedListener listener = mOptionChangedListeners . get ( option ) ; if ( listener != null ) { listener . onOptionChanged ( option , getOptionString ( option ) ) ; } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean nativeHasMipMap ( long nativeBitmap ) { android.graphics.Bitmap_Delegate delegate = android.graphics.Bitmap_Delegate.sManager . getDelegate ( nativeBitmap ) ; if ( delegate == null ) { return true ; } return delegate.mHasMipMap ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_reset ( long native_object ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return; } android.graphics.Matrix_Delegate . reset ( d.mValues ) ; }
void setBondingInitiatedLocally ( boolean isBondingInitiatedLocally ) { synchronized ( mObject ) { this . isBondingInitiatedLocally = isBondingInitiatedLocally ; } }
@ java.lang.Override public void visitElement ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.XmlContext context , @ com.android.annotations.NonNull org.w3c.dom.Element element ) { if ( ( mLookup ) == null ) { return; } visit ( context , element , element ) ; }
public boolean p2pReject ( java.lang.String deviceAddress ) { return mSupplicantP2pIfaceHal . reject ( deviceAddress ) ; }
private void onUpdateSelected () { mUpdaterData . updateOrInstallAll_WithGUI ( null , false ) ; }
@ java.lang.Override public void dispose () { super . dispose () ; fileImage . dispose () ; folderImage . dispose () ; }
@ java.lang.Override public int getVersionCode () { if ( ( versionCodeOverride ) > NUMBER_CONSTANT ) { return versionCodeOverride ; } return variantData . getVariantConfiguration () . getVersionCode () ; }
@ java.lang.Override protected byte [] engineSign ( ) throws java.security.SignatureException { return new byte [ NUMBER_CONSTANT ] ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.lang.Boolean bluetoothHidDeviceUnregisterApp ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT , description = STRING_CONSTANT ) java.lang.Boolean useCorrectConfig ) throws java.lang.Exception { if ( ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile ) == null ) { return false ; } if ( useCorrectConfig ) { return com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . unregisterApp ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sAppConfig ) ; } else { return com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . unregisterApp ( null ) ; } }
private static int transportToLegacyType ( int transport ) { switch ( transport ) { case TRANSPORT_ETHERNET : return android.net.ConnectivityManager.TYPE_ETHERNET ; case TRANSPORT_WIFI : return android.net.ConnectivityManager.TYPE_WIFI ; case TRANSPORT_CELLULAR : return android.net.ConnectivityManager.TYPE_MOBILE ; default: throw new java.lang.IllegalStateException ( ( STRING_CONSTANT + transport ) ) ; } }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent event ) { boolean scrollLock = mScrollLockCheckBox . getSelection () ; setScrollToLatestLog ( scrollLock ) ; }
public static void createNewUiLauncherShortcut ( android.content.Context context ) { com.android.dialer.app.MainComponent . enableComponent ( context ) ; }
public void testAddAllSelf () { jsr166.AbstractQueueTest.Succeed q = new jsr166.AbstractQueueTest.Succeed () ; try { q . addAll ( q ) ; shouldThrow () ; } catch ( java.lang.IllegalArgumentException success ) {} }
private void assertVerifiedForEachForMinSdkVersion ( java.lang.String apkFilenameInResources , java.lang.String [] args , int minSdkVersion ) throws java.lang.Exception { assertVerifiedForEach ( apkFilenameInResources , args , minSdkVersion , null ) ; }
native void rsnAllocationData2D ( long con , long id , int xoff , int yoff , int mip , int face , int w , int h , int [] d , int sizeBytes ) ;
@ java.lang.Override protected void setUp ( ) throws java.lang.Exception { super . setUp () ; assertNotNull ( mAbi ) ; assertNotNull ( mCtsBuild ) ; uninstallPackage ( com.android.cts.net.HostsideNetworkTestCase.TEST_PKG , false ) ; installPackage ( com.android.cts.net.HostsideNetworkTestCase.TEST_APK ) ; }
@ java.lang.Override public void run () { director . populateDeviceSelectionModel () ; }
public int getCarrierListVersion () { final android.database.Cursor cursor = mContext . getContentResolver () . query ( android.net.Uri . withAppendedPath ( CarrierId.All.CONTENT_URI , STRING_CONSTANT ) , null , null , null ) ; cursor . moveToFirst () ; return cursor . getInt ( NUMBER_CONSTANT ) ; }
public static int ReturnInt33 () { long imm = NUMBER_CONSTANT ; return ( ( int ) ( imm ) ) ; }
public java.lang.Object clone () { try { java.text.DateFormatSymbols other = ( ( java.text.DateFormatSymbols ) ( super . clone () ) ) ; copyMembers ( this , other ) ; return other ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
private boolean checkPuk () { if ( ( mPasswordEntry . getText () . length () ) == NUMBER_CONSTANT ) { mPukText = mPasswordEntry . getText () . toString () ; return true ; } return false ; }
private void addRemoteBuildTool ( com.android.sdklib.repository.FullRevision revision ) { com.android.sdklib.repository.descriptors.IPkgDesc d = PkgDesc.Builder . newBuildTool ( revision ) . create () ; com.android.sdklib.repository.remote.RemotePkgInfo r = new com.android.sdklib.repository.remote.RemotePkgInfo ( d , mSource , NUMBER_CONSTANT ) ; mRemotePkgs . put ( d . getType () , r ) ; }
private ImageReader.OnImageAvailableListener createAvailableListenerDropper () { return new android.media.ImageReader.OnImageAvailableListener () { @ java.lang.Override public void onImageAvailable ( android.media.ImageReader reader ) { android.media.Image i = reader . acquireNextImage () ; i . close () ; } } ; }
public void testWildcardMatchingEmptySubstring () { assertTrue ( verifier . verifyHostName ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
@ java.lang.Override public int updateCOLP ( boolean enable ) throws android.os.RemoteException { return this . updateCOLP ( enable ) ; }
@ java.lang.Override public void reset () { resetJack = true ; super . reset () ; }
public boolean isIgnored ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { return false ; }
private java.util.List < java.lang.Class < ? extends junit.framework.TestCase > > testCaseClassesInPackage ( java.lang.String packageName ) { android.test.ClassPathPackageInfoSource source = android.test.ClassPathPackageInfoSource . forClassPath ( classLoader ) ; return selectTestClasses ( source . getTopLevelClassesRecursive ( packageName ) ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean native_isEmpty ( long nPath ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return true ; } return pathDelegate . isEmpty () ; }
public void copy1DRangeFromUnchecked ( int off , int count , float [] d ) { copy1DRangeFromUnchecked ( off , count , ( ( java.lang.Object ) ( d ) ) , Element.DataType.FLOAT_32 , d.length ) ; }
@ java.lang.Override public void checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType ) throws java.security.cert.CertificateException { checkTrusted ( chain , authType , null , null , false ) ; }
@ java.lang.Deprecated public static < T > org.hamcrest.Matcher < T > isIn ( T [] elements ) { return org.hamcrest.collection.IsIn . in ( elements ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_lineTo ( long nPath , float x , float y ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate . lineTo ( x , y ) ; }
native long rsnScriptKernelIDCreate ( long con , long sid , int slot , int sig ) ;
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT + STRING_CONSTANT ) public void forceStopPackage ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT , description = STRING_CONSTANT ) java.lang.String packageName ) { mActivityManager . forceStopPackage ( packageName ) ; }
void setState ( int state ) { com.android.bluetooth.btservice.AdapterProperties . debugLog ( ( STRING_CONSTANT + ( android.bluetooth.BluetoothAdapter . nameForState ( state ) ) ) ) ; mState = state ; }
synchronized long nAllocationCubeCreateFromBitmap ( long type , int mip , android.graphics.Bitmap bmp , int usage ) { validate () ; return rsnAllocationCubeCreateFromBitmap ( mContext , type , mip , bmp , usage ) ; }
private static < T > void assertLength ( int expected , T [] got ) { int length = got.length ; org.junit.Assert . assertEquals ( java.lang.String . format ( STRING_CONSTANT , expected , length , java.util.Arrays . toString ( got ) ) , expected , length ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JClassLiteral x ) { com.android.jack.ir.ast.JClassLiteral classLiteral = new com.android.jack.ir.ast.JClassLiteral ( x . getSourceInfo () , x . getRefType () ) ; expression = classLiteral ; return false ; }
private boolean isInterface () { return com.google.devtools.build.android.desugar.BitFlags . isInterface ( accessFlags ) ; }
@ javax.annotation.Nonnull @ java.lang.Override public com.android.jack.ir.ast.JMethod getEnclosingMethod () { assert ( enclosingMethod ) != null ; return enclosingMethod ; }
public static void setUp ( android.telecom.ConnectionService connectionService ) throws java.lang.Exception { synchronized ( android.telecom.cts.CtsConnectionService.sLock ) { if ( ( android.telecom.cts.CtsConnectionService.sConnectionService ) != null ) { throw new java.lang.Exception ( STRING_CONSTANT ) ; } android.telecom.cts.CtsConnectionService.sConnectionService = connectionService ; } }
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; preCallCoordinator = new com.android.dialer.precall.impl.PreCallCoordinatorImpl ( this ) ; preCallCoordinator . onCreate ( getIntent () , savedInstanceState ) ; }
public abstract java.lang.annotation.Annotation [] [] getParameterAnnotations ( ) ;
public static native int EVP_VerifyFinal ( long ctx , byte [] signature , int offset , int length , long key ) ;
public void endSession ( int sessionId ) throws android.os.RemoteException { synchronized ( mLock ) { checkBinderConnection () ; getServiceInterface ( mBinder ) . endSession ( sessionId ) ; } }
public com.android.ahat.heapdump.Size getSize ( com.android.ahat.heapdump.AhatHeap heap ) { return mSizesByHeap [ heap . getIndex () ] ; }
public int indexOf ( java.lang.String str , int fromIndex ) { return java.lang.String . indexOf ( value , NUMBER_CONSTANT , count , str , fromIndex ) ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.OutputStream openWrite ( @ javax.annotation.Nonnull com.android.sched.vfs.BaseVFile file , boolean append ) throws com.android.sched.util.file.WrongPermissionException { return workVFS . openWrite ( file , append ) ; }
void destruction ( @ com.android.annotations.NonNull java.lang.Thread t ) throws java.io.IOException , java.lang.InterruptedException ;
public static java.util.Collection < com.android.tools.perflib.heap.RootObj > getRoots ( com.android.tools.perflib.heap.Snapshot snapshot ) { java.util.HashSet < com.android.tools.perflib.heap.RootObj > result = new java.util.HashSet < com.android.tools.perflib.heap.RootObj > () ; for ( com.android.tools.perflib.heap.Heap heap : snapshot.mHeaps ) { result . addAll ( heap.mRoots ) ; } return result ; }
void setPropertiesFromPattern ( java.lang.String pattern , int ignoreRounding ) { com.ibm.icu.impl.number.PatternString . parseToExistingProperties ( pattern , properties , ignoreRounding ) ; }
public void addObj ( android.renderscript.BaseObj obj ) { if ( obj != null ) { addI32 ( ( ( int ) ( obj . getID ( null ) ) ) ) ; } else { addI32 ( NUMBER_CONSTANT ) ; } }
@ java.lang.Override public void onAddressedPlayerChanged ( android.content.ComponentName receiver ) { if ( receiver == null ) { setAddressedMediaSessionPackage ( null ) ; return; } setAddressedMediaSessionPackage ( receiver . getPackageName () ) ; }
@ java.lang.Override public void onDetach () { super . onDetach () ; mDvrDataManager . removeSeriesRecordingListener ( this ) ; }
@ java.lang.Override public int getState () { return this . getState () ; }
native void rsnAllocationData1D ( long con , long id , int off , int mip , int count , long [] d , int sizeBytes ) ;
private int getConversationCount () { if ( android.util.Log . isLoggable ( LogTag.WIDGET , Log.VERBOSE ) ) { android.util.Log . v ( com.android.mms.widget.MmsWidgetService.TAG , STRING_CONSTANT ) ; } return java.lang.Math . min ( mConversationCursor . getCount () , com.android.mms.widget.MmsWidgetService.MmsFactory.MAX_CONVERSATIONS_COUNT ) ; }
private void setButtonClickListeners () { findViewById ( R.id.organization_info_set_button ) . setOnClickListener ( this ) ; findViewById ( R.id.go_button ) . setOnClickListener ( this ) ; }
public abstract void processAudioEvent ( int state ) ;
@ java.lang.Override boolean isAuto ( @ com.android.annotations.NonNull com.android.build.gradle.internal.dsl.Splits splits ) { return false ; }
private static boolean checkHardwareTypeSkipTest ( java.lang.String hardwareTypeString ) { return ( hardwareTypeString . contains ( STRING_CONSTANT ) ) || ( hardwareTypeString . contains ( STRING_CONSTANT ) ) ; }
public void shutdown () { synchronized ( this ) { mRunning = false ; if ( ( mServerSocket ) != null ) { try { mServerSocket . close () ; } catch ( java.io.IOException e ) {} mServerSocket = null ; } } }
public void setUid ( java.lang.String uid ) { this . uid = uid ; }
@ java.lang.Override public void setEchoSuppressionEnabled () {}
@ javax.annotation.CheckForNull public com.android.jack.incremental.InputFilter getInputFilter () { return inputFilter ; }
@ org.junit.AfterClass public static void resetSettings () { android.autofillservice.cts.Helper . runShellCommand ( STRING_CONSTANT , android.provider.Settings.Secure.AUTOFILL_SERVICE ) ; }
public com.android.sdklib.internal.project.ProjectProperties makeReadOnlyCopy () { java.util.Map < java.lang.String , java.lang.String > propList = new java.util.HashMap < java.lang.String , java.lang.String > ( mProperties ) ; return new com.android.sdklib.internal.project.ProjectProperties ( mProjectFolder , propList , mType ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_addPath ( long nPath , int src , float dx , float dy ) { android.graphics.Path_Delegate . addPath ( nPath , src , java.awt.geom.AffineTransform . getTranslateInstance ( dx , dy ) ) ; }
protected boolean expectCertificateVerifyMessage () { return ( ( clientCertificateType ) >= NUMBER_CONSTANT ) && ( org.bouncycastle.crypto.tls.TlsUtils . hasSigningCapability ( clientCertificateType ) ) ; }
public boolean getScanCapabilities ( com.android.server.wifi.WifiNative.ScanCapabilities capabilities ) { return mWifiVendorHal . getScanCapabilities ( capabilities ) ; }
public static native java.lang.String [] followReferences ( int heapFilter , java.lang.Class < > klassFilter , java.lang.Object initialObject , int stopAfter , int followSet , java.lang.Object jniRef ) ;
public void close ( ) throws java.io.IOException { flush () ; bout . close () ; }
private void resolveIntent () { android.content.Intent intent = getIntent () ; mName = intent . getStringExtra ( com.android.phone.DeleteFdnContactScreen.INTENT_EXTRA_NAME ) ; mNumber = intent . getStringExtra ( com.android.phone.DeleteFdnContactScreen.INTENT_EXTRA_NUMBER ) ; if ( android.text.TextUtils . isEmpty ( mNumber ) ) { finish () ; } }
@ com.android.annotations.NonNull java.io.File [] getSkins ( ) ;
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { refreshTags () ; }
private native void gattAdvertiseNative ( boolean start ) ;
public android.net.NetworkScorerAppManager.NetworkScorerAppData getActiveScorer () { java.lang.String scorerPackage = Settings.Global . getString ( mContext . getContentResolver () , Settings.Global.NETWORK_SCORER_APP ) ; return getScorer ( scorerPackage ) ; }
public final void remove () { if ( ( lastReturned ) == null ) throw new java.lang.IllegalStateException () ; this . remove ( lastReturned.key ) ; lastReturned = null ; }
@ java.lang.Override protected sun.util.locale.BaseLocale createObject ( sun.util.locale.BaseLocale.Key key ) { return new sun.util.locale.BaseLocale ( key.lang . get () , key.scrt . get () , key.regn . get () , key.vart . get () ) ; }
@ javax.annotation.Nonnull public com.android.jack.tools.merger.JackMerger getNewJackMerger ( int firstTypeIndex ) { return new com.android.jack.tools.merger.JackMerger ( createDexFile () , com.android.sched.util.config.ThreadConfig . get ( Options.BEST_MERGING_ACCURACY ) . booleanValue () ) ; }
public abstract void setBuiltInZoomControls ( boolean enabled ) ;
@ javax.annotation.Nonnull @ java.lang.Override protected com.android.jack.shrob.shrink.KeepMarker createMarkerFor ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode node ) { return new com.android.jack.shrob.shrink.KeepMarker () ; }
public void closeSocket () { try { if ( ( mSocket ) != null ) { mSocket . close () ; } } catch ( java.io.IOException e ) { android.util.Log . e ( android.bluetooth.client.pbap.BluetoothPbapSession.RfcommConnectThread.TAG , STRING_CONSTANT , e ) ; } }
public boolean accept ( org.eclipse.core.resources.IProject project ) { com.android.ide.eclipse.adt.internal.sdk.ProjectState state = com.android.ide.eclipse.adt.internal.sdk.Sdk . getProjectState ( project ) ; if ( state != null ) { return state . isLibrary () ; } return false ; }
protected native void setTimeToLive ( int ttl ) throws java.io.IOException ;
public native byte getByte ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public boolean isContextSwitch () { return ( mMethodData . getId () ) == ( - NUMBER_CONSTANT ) ; }
public static android.telephony.MbmsStreamingManager create ( android.content.Context context , android.telephony.mbms.MbmsStreamingManagerCallback callback ) throws android.telephony.mbms.MbmsException { return android.telephony.MbmsStreamingManager . create ( context , callback , android.telephony.SubscriptionManager . getDefaultSubscriptionId () ) ; }
public void test_isUpperCaseC () { assertFalse ( STRING_CONSTANT , java.lang.Character . isUpperCase ( CHAR_CONS ) ) ; assertTrue ( STRING_CONSTANT , java.lang.Character . isUpperCase ( CHAR_CONS ) ) ; }
public void run ( final org.eclipse.jdt.launching.VMRunnerConfiguration config , org.eclipse.debug.core.ILaunch launch , org.eclipse.core.runtime.IProgressMonitor monitor ) throws org.eclipse.core.runtime.CoreException { com.android.ide.eclipse.adt.internal.launch.junit.AndroidJUnitLaunchAction.TestRunnerProcess runnerProcess = new com.android.ide.eclipse.adt.internal.launch.junit.AndroidJUnitLaunchAction.TestRunnerProcess ( config , mJUnitInfo ) ; launch . addProcess ( runnerProcess ) ; runnerProcess . run () ; }
@ org.chromium.base.annotations.CalledByNative public static java.lang.String getDataDirectory () { assert ( org.chromium.base.PathUtils.sDirPathFetchTask ) != null : STRING_CONSTANT ; return org.chromium.base.PathUtils . getDirectoryPath ( org.chromium.base.PathUtils.DATA_DIRECTORY ) ; }
public void playDtmfTone ( char digit ) { try { mConnectionService . playDtmfTone ( mId , digit , null ) ; } catch ( android.os.RemoteException e ) {} }
private boolean isCarrierVideoPauseSupported () { android.os.PersistableBundle b = com.android.phone.PhoneGlobals . getInstance () . getCarrierConfigForSubId ( mPhone . getSubId () ) ; return ( b != null ) && ( b . getBoolean ( CarrierConfigManager.KEY_SUPPORT_PAUSE_IMS_VIDEO_CALLS_BOOL ) ) ; }
public static final void checkCert ( java.security.cert.X509Certificate cert ) throws java.security.cert.CertificateException { org.conscrypt.ChainStrengthAnalyzer . checkKeyLength ( cert ) ; org.conscrypt.ChainStrengthAnalyzer . checkSignatureAlgorithm ( cert ) ; }
public void testEncode_CharBuffer_NullCharBuffer () { tests.api.java.nio.charset.CharsetTest.MockCharset c = new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , null ) ; try { c . encode ( ( ( java.nio.CharBuffer ) ( null ) ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public void onApplicationCreate () { registerContentObservers () ; com.android.dialer.calllog.CallLogConfig . schedulePollingJob ( appContext ) ; }
public static void main ( java.lang.String [] args ) { Main . byteToLong () ; Main . charToLong () ; Main . shortToLong () ; Main . intToLong () ; }
private void onNew () { com.android.sdkuilib.internal.widgets.AvdCreationDialog dlg = new com.android.sdkuilib.internal.widgets.AvdCreationDialog ( mTable . getShell () , mAvdManager , mImageFactory , mSdkLog , null ) ; if ( ( dlg . open () ) == ( org.eclipse.jface.window.Window.OK ) ) { refresh ( false ) ; } }
public void comment ( java.lang.String comment ) throws java.io.IOException { check ( false ) ; append ( STRING_CONSTANT ) ; append ( comment ) ; append ( STRING_CONSTANT ) ; }
public static void computeCbrt ( android.renderscript.cts.TestCbrt.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . cbrt ( args.inV , t ) ; }
@ java.lang.Override public float get ( int index ) { return byteBuffer . getFloat ( ( index * ( libcore.io.SizeOf.FLOAT ) ) ) ; }
@ java.lang.Override public void addContents ( com.android.jack.dx.dex.file.DexFile file ) { super . addContents ( file ) ; com.android.jack.dx.dex.file.StringIdsSection stringIds = file . getStringIds () ; stringIds . intern ( getRef () . getName () ) ; }
@ android.support.annotation.Nullable public static android.net.Uri getVoicemailRingtoneUri ( android.telephony.TelephonyManager telephonyManager , android.telecom.PhoneAccountHandle accountHandle ) { return telephonyManager . getVoicemailRingtoneUri ( accountHandle ) ; }
public java.lang.String [] saw ( java.lang.String prefix , int uid ) { try { return mBinder . saw ( prefix , uid ) ; } catch ( android.os.RemoteException e ) { android.util.Log . w ( android.security.KeyStore.TAG , STRING_CONSTANT , e ) ; return null ; } }
@ java.lang.Override public final short getShort ( int i ) { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getShort ( ix ( checkIndex ( i , SizeOf.SHORT ) ) ) ; }
public ScriptGroup2.Closure asyncLaunch ( android.renderscript.ScriptGroup2.Builder builder , java.lang.Object in , android.renderscript.Type outputType ) { return builder . addKernel ( getKernelID () , outputType , in ) ; }
private void _test ( com.ibm.icu.text.NumberFormat fmt , long value ) { _test ( fmt , new java.lang.Long ( value ) ) ; }
public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session ) { return visit ( ( ( com.android.jack.ir.ast.JNode ) ( session ) ) ) ; }
@ java.lang.Override public boolean setActiveScorer ( java.lang.String packageName ) { mContext . enforceCallingOrSelfPermission ( permission.SCORE_NETWORKS , com.android.server.NetworkScoreService.TAG ) ; return false ; }
public void Test05 () {}
public com.android.jack.dx.rop.cst.CstFieldRef getFieldRef () { if ( ( fieldRef ) == null ) { fieldRef = new com.android.jack.dx.rop.cst.CstFieldRef ( getDefiningClass () , getName () , getNat () ) ; } return fieldRef ; }
public final void notifyCapabilitiesStatusChanged ( android.telephony.ims.feature.MmTelFeature.MmTelCapabilities c ) { super . notifyCapabilitiesStatusChanged ( c ) ; }
private int getEffectiveVersion ( java.io.File resourceFile ) { com.android.ide.common.resources.configuration.FolderConfiguration configuration = getFolderConfiguration ( resourceFile ) ; if ( ( configuration . getVersionQualifier () ) == null ) { configuration . createDefault () ; } return configuration . getVersionQualifier () . getVersion () ; }
@ java.lang.Override public boolean updateQuery ( @ android.support.annotation.Nullable java.lang.String query ) { contactFilterCursor . filter ( query , context ) ; return true ; }
public boolean lookingAt () { synchronized ( this ) { matchFound = java.util.regex.Matcher . lookingAtImpl ( address , matchOffsets ) ; } return matchFound ; }
public void realRun ( ) throws java.lang.InterruptedException { q . transfer ( four ) ; assertTrue ( ( ! ( q . contains ( four ) ) ) ) ; assertEquals ( NUMBER_CONSTANT , q . size () ) ; }
public void testConstructor_NullAliase () { try { new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , new java.lang.String [] { STRING_CONSTANT , null } ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ com.android.annotations.VisibleForTesting ( visibility = com.android.annotations.VisibleForTesting.Visibility.PRIVATE ) protected com.android.sdklib.internal.repository.archives.Archive [] initializeArchives ( java.util.Properties props , java.lang.String archiveOsPath ) { return new com.android.sdklib.internal.repository.archives.Archive [] { new com.android.sdklib.internal.repository.archives.Archive ( this , props , archiveOsPath ) } ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( new Transform () ) ; }
@ java.lang.Override public UResource.ArraySink getOrCreateArraySink ( com.ibm.icu.impl.UResource.Key key ) { cutoffType = com.ibm.icu.impl.DayPeriodRules.CutoffType . fromStringOrNull ( key ) ; return cutoffSink ; }
public void execute ( java.lang.String . . . tasks ) { execute ( java.util.Collections . < java.lang.String > emptyList () , false , false , tasks ) ; }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testGetPhoneAccount ( ) throws android.os.RemoteException { makeAccountsVisibleToAllUsers ( com.android.server.telecom.tests.TelecomServiceImplTest.TEL_PA_HANDLE_16 , com.android.server.telecom.tests.TelecomServiceImplTest.SIP_PA_HANDLE_17 ) ; org.junit.Assert . assertEquals ( com.android.server.telecom.tests.TelecomServiceImplTest.TEL_PA_HANDLE_16 , mTSIBinder . getPhoneAccount ( com.android.server.telecom.tests.TelecomServiceImplTest.TEL_PA_HANDLE_16 ) . getAccountHandle () ) ; org.junit.Assert . assertEquals ( com.android.server.telecom.tests.TelecomServiceImplTest.SIP_PA_HANDLE_17 , mTSIBinder . getPhoneAccount ( com.android.server.telecom.tests.TelecomServiceImplTest.SIP_PA_HANDLE_17 ) . getAccountHandle () ) ; }
@ org.jetbrains.annotations.NotNull public static java.lang.String intern ( @ org.jetbrains.annotations.NotNull java.lang.String s ) { return com.intellij.ide.plugins.IdeaPluginDescriptorImpl.ourInterner . intern ( s ) ; }
@ javax.annotation.Nonnull public abstract com.android.jack.test.toolchain.JackBasedToolchain setSanityChecks ( boolean sanityChecks ) ;
@ java.lang.Override public void onDisconnect () { android.util.Log . d ( com.android.bluetooth.hfpclient.connserv.HfpClientConference.TAG , STRING_CONSTANT ) ; mHeadsetProfile . terminateCall ( mDevice , null ) ; }
@ java.lang.Override public java.lang.String toString () { return java.lang.String . format ( ( ( STRING_CONSTANT + ( ( com.android.tools.rpclib.binary.Handle.SIZE ) * NUMBER_CONSTANT ) ) + STRING_CONSTANT ) , new java.math.BigInteger ( mValue ) ) ; }
@ java.lang.Override public boolean hasElements () { return false ; }
public abstract void onOtaStatusChanged ( int status ) ;
public void onRttConnectionFailure ( int reason ) { android.telecom.Log . i ( this , STRING_CONSTANT , reason ) ; for ( com.android.server.telecom.Call.Listener l : mListeners ) { l . onRttInitiationFailure ( this , reason ) ; } }
static void inlinedForNull ( java.lang.Iterable < > it ) { if ( it != null ) { it . iterator () ; throw new java.lang.Error ( STRING_CONSTANT ) ; } }
abstract void putFloatUnchecked ( int index , float value ) ;
@ com.android.annotations.NonNull public static com.android.tools.lint.detector.api.Category create ( @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Category parent , @ com.android.annotations.NonNull java.lang.String name , int priority ) { return new com.android.tools.lint.detector.api.Category ( parent , name , priority ) ; }
void unsljLogvRet ( int response , java.lang.Object ret ) { riljLogv ( ( ( ( STRING_CONSTANT + ( com.android.internal.telephony.RIL . responseToString ( response ) ) ) + STRING_CONSTANT ) + ( com.android.internal.telephony.RIL . retToString ( response , ret ) ) ) ) ; }
private void setClientInfo ( int pid , java.lang.String pkgName ) { if ( pkgName == null ) { pkgName = com.android.ddmlib.Device.UNKNOWN_PACKAGE ; } mClientInfo . put ( pid , pkgName ) ; }
@ java.lang.Override public boolean factoryReset () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return false ; } service . disable () ; return service . factoryReset () ; }
public static dalvik.system.CloseGuard get () { return new dalvik.system.CloseGuard () ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.util.log.EventType getDynamicEventType ( @ javax.annotation.Nonnull java.lang.String name ) { synchronized ( dynalicEventByName ) { com.android.sched.util.log.EventType type = dynalicEventByName . get ( name ) ; if ( type != null ) { return type ; } else { return TracerEventType.NOTYPE ; } } }
java.lang.String getName () { return mName ; }
@ java.lang.Override @ javax.annotation.Nonnegative public long read () { return ( ( threadMXBean . getThreadInfo ( java.lang.Thread . currentThread () . getId () ) . getBlockedTime () ) * NUMBER_CONSTANT ) * NUMBER_CONSTANT ; }
public boolean lookingAt () { synchronized ( this ) { matchFound = java.util.regex.Matcher . lookingAtImpl ( address , input , matchOffsets ) ; } return matchFound ; }
@ java.lang.Deprecated public synchronized boolean getUseDoubleTree () { return false ; }
public static boolean hasHfpClientEcc ( android.bluetooth.BluetoothHeadsetClient client , android.bluetooth.BluetoothDevice device ) { android.os.Bundle features = client . getCurrentAgEvents ( device ) ; return ( features != null ) && ( features . getBoolean ( BluetoothHeadsetClient.EXTRA_AG_FEATURE_ECC , false ) ) ; }
void releaseWakeLock () { if ( ( mPartialWakeLock ) != null ) { synchronized ( mPartialWakeLock ) { if ( mPartialWakeLock . isHeld () ) { android.telephony.Rlog . d ( com.android.internal.telephony.imsphone.ImsPhoneConnection.LOG_TAG , STRING_CONSTANT ) ; mPartialWakeLock . release () ; } } } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.chromium.base.library_loader.LibraryLoader . get ( LibraryProcessType.PROCESS_BROWSER ) . ensureInitialized () ; org.chromium.base.metrics.RecordHistogram . initialize () ; }
@ org.junit.Test public void logMessageSilentlyIgnoresExtraneousValues () { com.android.server.wifi.WifiLog.LogMessage logMessage = mLogger . err ( STRING_CONSTANT ) ; logMessage . c ( STRING_CONSTANT ) . c ( STRING_CONSTANT ) . flush () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , logMessage . toString () ) ; }
@ java.lang.Override public void revalidate () { if ( ( myEditor ) != null ) { myEditor . resetPaintersWidth () ; } super . revalidate () ; }
@ android.annotation.Nullable public android.telephony.euicc.EuiccInfo getEuiccInfo () { if ( ! ( isEnabled () ) ) { return null ; } try { return getIEuiccController () . getEuiccInfo () ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
public java.net.InetAddress [] lookupAllHostAddr ( java.lang.String host , int netId ) throws java.net.UnknownHostException ;
@ java.lang.Override public com.android.sched.vfs.VPath clone () { @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.util.ArrayList < com.android.sched.vfs.VPath.VPathFragment > clonedList = ( ( java.util.ArrayList < com.android.sched.vfs.VPath.VPathFragment > ) ( pathFragments . clone () ) ) ; return new com.android.sched.vfs.VPath ( clonedList ) ; }
private java.lang.Object get ( final int local ) { maxLocals = java.lang.Math . max ( maxLocals , ( local + NUMBER_CONSTANT ) ) ; return local < ( locals . size () ) ? locals . get ( local ) : org.objectweb.asm.Opcodes.TOP ; }
@ java.lang.Override public void registerContentObservers () { appContext . getContentResolver () . registerContentObserver ( BlockedNumbers.CONTENT_URI , true , markDirtyObserver ) ; }
public static com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.Directory create ( int id , @ android.support.annotation.Nullable java.lang.String displayName , boolean supportsPhotos ) { return new com.android.dialer.searchfragment.remote.AutoValue_RemoteDirectoriesCursorLoader_Directory ( id , displayName , supportsPhotos ) ; }
@ java.lang.Override protected boolean engineVerify ( byte [] sigBytes ) throws java.security.SignatureException { return true ; }
@ javax.annotation.Nonnull public static com.android.jack.dx.rop.cst.CstString createSignature ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JFieldId field ) { java.lang.String fieldSignature = com.android.jack.backend.dex.rop.RopHelper.formatter . getName ( field . getType () ) ; com.android.jack.dx.rop.cst.CstString descriptor = new com.android.jack.dx.rop.cst.CstString ( fieldSignature ) ; return descriptor ; }
public abstract void setGeolocationDatabasePath ( java.lang.String databasePath ) ;
public void sendOnPostDialChar ( java.lang.String id , char nextChar ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . onPostDialChar ( id , nextChar , null ) ; } }
public static void setAccessible ( java.lang.reflect.AccessibleObject [] objects , boolean flag ) { for ( java.lang.reflect.AccessibleObject object : objects ) { object.flag = flag ; } }
public void test_10100 ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( STRING_CONSTANT , java.net.URLConnection . guessContentTypeFromName ( STRING_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , java.net.URLConnection . guessContentTypeFromName ( STRING_CONSTANT ) ) ; }
void pauseDispatchingLocked ( com.android.server.WindowManagerService.WindowToken token ) { synchronized ( this ) { if ( com.android.server.WindowManagerService.DEBUG_INPUT ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + token ) ) ; token.paused = true ; } }
private void passed ( java.lang.String className ) { if ( ! ( mOnlyFailures ) ) { android.util.Log . i ( mTag , ( STRING_CONSTANT + className ) ) ; } }
public static java.security.Provider [] getProviders () { synchronized ( org.apache.harmony.security.fortress.Services.providers ) { return org.apache.harmony.security.fortress.Services.providers . toArray ( new java.security.Provider [ org.apache.harmony.security.fortress.Services.providers . size () ] ) ; } }
synchronized long nFontCreateFromAssetStream ( java.lang.String name , float size , int dpi , long assetStream ) { validate () ; return rsnFontCreateFromAssetStream ( mContext , name , size , dpi , assetStream ) ; }
protected void receiveNewSessionTicketMessage ( java.io.ByteArrayInputStream buf ) throws java.io.IOException { org.bouncycastle.crypto.tls.NewSessionTicket newSessionTicket = org.bouncycastle.crypto.tls.NewSessionTicket . parse ( buf ) ; assertEmpty ( buf ) ; tlsClient . notifyNewSessionTicket ( newSessionTicket ) ; }
public void setOwnedByTransform () { if ( mOwnedByTransform ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } mOwnedByTransform = true ; }
protected void nestedStatementPop ( com.android.jack.ir.ast.JStatement statement ) { if ( ! ( statement instanceof com.android.jack.ir.ast.JBlock ) ) { indentOut () ; } }
protected boolean mustTraceOverridingMethod ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { com.android.jack.analysis.tracer.BaseTracerMarker marker = method . getMarker ( markerClass ) ; if ( marker != null ) { return marker . mustTraceOverridingMethods () ; } return false ; }
private static void initializeStatic () { java.security.Security.props . put ( STRING_CONSTANT , STRING_CONSTANT ) ; java.security.Security.props . put ( STRING_CONSTANT , STRING_CONSTANT ) ; java.security.Security.props . put ( STRING_CONSTANT , STRING_CONSTANT ) ; }
public final boolean hasNext () { return ( nextEntry ) != null ; }
@ org.junit.Before public void init () { characterBreak = android.icu.text.BreakIterator . getCharacterInstance () ; wordBreak = android.icu.text.BreakIterator . getWordInstance () ; lineBreak = android.icu.text.BreakIterator . getLineInstance () ; sentenceBreak = android.icu.text.BreakIterator . getSentenceInstance () ; titleBreak = android.icu.text.BreakIterator . getTitleInstance () ; }
public boolean disconnect ( android.bluetooth.BluetoothDevice device ) { if ( ( mService ) == null ) return false ; return mService . disconnect ( device ) ; }
public void removeTransportModeTransforms ( java.net.Socket socket ) throws java.io.IOException { removeTransportModeTransforms ( socket . getFileDescriptor$ () ) ; }
@ java.lang.Override V output ( K key , V value ) { return value ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { if ( ( myCollation ) == null ) { myCollation = android.icu.text.Collator . getInstance ( java.util.Locale.JAPANESE ) ; } }
public double timeMinD ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . min ( d , d ) ; } return result ; }
@ java.lang.Override public long get ( int index ) { return byteBuffer . getLong ( ( index * ( libcore.io.SizeOf.LONG ) ) ) ; }
@ java.lang.Override public boolean isSynthetic () { return ( ( accessFlags ) & ( java.lang.reflect.Modifier.SYNTHETIC ) ) != NUMBER_CONSTANT ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { android.support.test.espresso.IdlingPolicies . setMasterPolicyTimeout ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) ; }
private static native boolean findNextImpl ( long addr , java.lang.String s , int [] offsets ) ;
private void throwMakeAccessException ( java.lang.String message , java.lang.Object from ) throws java.lang.IllegalAccessException { message = ( message + STRING_CONSTANT ) + ( toString () ) ; if ( from != null ) message += STRING_CONSTANT + from ; throw new java.lang.IllegalAccessException ( message ) ; }
public void test_getAcceptedIssuers ( ) throws java.lang.Exception { org.apache.harmony.xnet.tests.support.X509TrustManagerImpl xtm = new org.apache.harmony.xnet.tests.support.X509TrustManagerImpl () ; assertNotNull ( xtm . getAcceptedIssuers () ) ; }
void onEvent ( @ android.support.annotation.NonNull com.android.dialer.simulator.Simulator.Event event ) { events . add ( com.android.dialer.common.Assert . isNotNull ( event ) ) ; for ( com.android.dialer.simulator.impl.SimulatorConnection.Listener listener : new java.util.ArrayList <> ( listeners ) ) { listener . onEvent ( this , event ) ; } }
public void addPackageForDeferredDexopt ( android.content.pm.PackageParser.Package pkg ) { if ( ( mDeferredDexOpt ) == null ) { mDeferredDexOpt = new android.util.ArraySet () ; } mDeferredDexOpt . add ( pkg ) ; }
public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile ) { return null ; }
protected static android.accounts.AuthenticatorDescription findAuthenticator ( android.accounts.AuthenticatorDescription [] auths , java.lang.String accountType ) { for ( android.accounts.AuthenticatorDescription auth : auths ) { if ( accountType . equals ( auth.type ) ) { return auth ; } } return null ; }
@ dagger.Provides @ java.lang.SuppressWarnings ( value = { STRING_CONSTANT , STRING_CONSTANT } ) static com.google.common.collect.ImmutableList < com.android.dialer.phonelookup.PhoneLookup > providePhoneLookupList ( com.android.dialer.phonelookup.cp2.Cp2DefaultDirectoryPhoneLookup cp2DefaultDirectoryPhoneLookup , com.android.dialer.phonelookup.cp2.Cp2ExtendedDirectoryPhoneLookup cp2ExtendedDirectoryPhoneLookup , com.android.dialer.phonelookup.blockednumber.SystemBlockedNumberPhoneLookup systemBlockedNumberPhoneLookup , com.android.dialer.phonelookup.spam.SpamPhoneLookup spamPhoneLookup ) { return com.google.common.collect.ImmutableList . of ( cp2DefaultDirectoryPhoneLookup , cp2ExtendedDirectoryPhoneLookup , systemBlockedNumberPhoneLookup , spamPhoneLookup ) ; }
synchronized android.bluetooth.BluetoothDevice getCurrentDevice () { return mCurrentDevice ; }
public void setFramework ( org.apache.tools.ant.types.Path value ) { mFramework = value ; }
@ java.lang.Override protected void execute ( org.eclipse.core.runtime.IProgressMonitor monitor ) throws java.lang.reflect.InvocationTargetException { createProjectAsync ( monitor , mainData , testData , null , true ) ; }
private com.android.sdklib.devices.DeviceManager createDeviceManager () { log = super . getLog () ; java.io.File sdkLocation = getSdkManager () . getLocalSdk () . getLocation () ; return com.android.sdklib.devices.DeviceManager . createInstance ( sdkLocation , log ) ; }
@ java.lang.Override public void setBuild ( com.android.tradefed.build.IBuildInfo arg0 ) { mBuildHelper = new com.android.compatibility.common.tradefed.build.CompatibilityBuildHelper ( arg0 ) ; }
@ java.lang.Override public void callSessionUssdMessageReceived ( int mode , java.lang.String ussdMessage ) { if ( ( mListener ) != null ) { mListener . callSessionUssdMessageReceived ( this , mode , ussdMessage ) ; } }
public void testNullPointerException ( ) throws java.lang.Exception { try { new java.text.RuleBasedCollator ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
private static com.android.internal.telephony.euicc.IEuiccController getIEuiccController () { return IEuiccController.Stub . asInterface ( android.os.ServiceManager . getService ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public synchronized void testRunStopped ( long elapsedTime ) { notifyTestRunStopped ( elapsedTime ) ; com.android.ide.eclipse.adt.AdtPlugin . printToConsole ( mLaunchInfo . getProject () , LaunchMessages.RemoteAdtTestRunner_RunStoppedMsg ) ; }
private static void displayAddonManifestWarning ( com.android.sdklib.ISdkLog log , java.lang.String addonName , java.lang.String valueName ) { log . warning ( STRING_CONSTANT , addonName , valueName , SdkConstants.FN_MANIFEST_INI ) ; }
private int getLibraryLoadFromApkStatus () { assert org.chromium.base.library_loader.Linker . getInstance () . isUsed () ; if ( mLibraryWasLoadedFromApk ) { return LibraryLoadFromApkStatusCodes.SUCCESSFUL ; } return LibraryLoadFromApkStatusCodes.UNKNOWN ; }
private void rebootRecoveryWithCommand ( java.lang.String command ) { try { mService . rebootRecoveryWithCommand ( command ) ; } catch ( android.os.RemoteException ignored ) {} }
@ org.junit.Test public void getUpdatePackageFile_works ( ) throws java.lang.Exception { com.example.android.systemupdatersample.UpdateConfig c = com.example.android.systemupdatersample.UpdateConfig . fromJson ( com.example.android.systemupdatersample.UpdateConfigTest.JSON_NON_STREAMING ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , c . getUpdatePackageFile () . getAbsolutePath () ) ; }
public abstract void undeploy ( @ org.jetbrains.annotations.NotNull com.intellij.remoteServer.runtime.deployment.DeploymentRuntime.UndeploymentTaskCallback callback ) ;
private void assertValidRequestMethod ( java.lang.String requestMethod ) throws java.lang.Exception { java.net.HttpURLConnection connection = ( ( java.net.HttpURLConnection ) ( server . getUrl ( STRING_CONSTANT ) . openConnection () ) ) ; connection . setRequestMethod ( requestMethod ) ; org.junit.Assert . assertEquals ( requestMethod , connection . getRequestMethod () ) ; }
public int insert ( java.lang.String name , byte [] item , int uid , int flags ) throws android.os.RemoteException ;
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { createTempDir () ; resetDeviceToClean () ; }
public com.android.ims.ImsCallProfile createCallProfile ( int sessionId , int callServiceType , int callType ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . createCallProfile ( sessionId , callServiceType , callType ) ; } }
public boolean startScan ( android.os.WorkSource workSource ) { try { mService . startScan ( null , workSource ) ; return true ; } catch ( android.os.RemoteException e ) { return false ; } }
@ android.annotation.RequiresPermission ( value = Manifest.permission.BLUETOOTH_ADMIN ) public void startScan ( java.util.List < android.bluetooth.le.ScanFilter > filters , android.bluetooth.le.ScanSettings settings , final android.bluetooth.le.ScanCallback callback ) { startScan ( filters , settings , null , callback , null ) ; }
public abstract int getQuickCheck ( int c ) ;
@ com.android.annotations.NonNull public java.util.Map < java.lang.String , com.android.build.gradle.internal.BuildTypeData > getBuildTypes () { return buildTypes ; }
protected void sendUrgentData ( int data ) throws java.io.IOException { if ( ( ( fd ) == null ) || ( ! ( fd . valid () ) ) ) { throw new java.io.IOException ( STRING_CONSTANT ) ; } socketSendUrgentData ( data ) ; }
@ java.lang.Override public final void removeCapabilities ( @ android.telephony.ims.internal.feature.MmTelFeature.MmTelCapabilities.MmTelCapability int capability ) { super . removeCapabilities ( capability ) ; }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { mFrameSequenceState . destroy () ; } finally { super . finalize () ; } }
public org.bouncycastle.math.ec.ECFieldElement invert () { return new org.bouncycastle.math.ec.ECFieldElement.Fp ( q , r , modInverse ( x ) ) ; }
@ java.lang.Deprecated public java.lang.String getPluginsPath () { return STRING_CONSTANT ; }
private static native boolean findImpl ( long addr , java.lang.String s , int startIndex , int [] offsets ) ;
@ java.lang.Override public void callSessionMayHandover ( int srcAccessTech , int targetAccessTech ) { if ( ( mListener ) != null ) { mListener . callSessionMayHandover ( this , srcAccessTech , targetAccessTech ) ; } }
public boolean isInstance ( java.lang.Object obj ) { if ( obj == null ) { return false ; } return isAssignableFrom ( obj . getClass () ) ; }
private void assertVerdict ( int expected , android.net.apf.ApfGenerator gen , byte [] packet , int filterAge ) throws android.net.apf.ApfGenerator.IllegalInstructionException { android.net.apf.ApfTest . assertReturnCodesEqual ( expected , android.net.apf.ApfTest . apfSimulate ( gen . generate () , packet , null , filterAge ) ) ; }
public java.lang.String getDisplayName ( java.util.Locale locale ) { return libcore.icu.ICU . getCurrencyDisplayName ( locale , currencyCode ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( speedDialUiItem . defaultChannel () ) != null ) { listener . onClick ( speedDialUiItem . defaultChannel () ) ; } else { listener . onAmbiguousContactClicked ( speedDialUiItem ) ; } }
private static void staticMethodCalledByClinit () { try { Main . throwDuringClinit () ; java.lang.System.out . println ( STRING_CONSTANT ) ; } catch ( java.lang.NullPointerException ex ) { java.lang.System.out . println ( STRING_CONSTANT ) ; } }
public void dispose () { mDestroyed . set ( true ) ; mParentCard = null ; mFh = null ; mCi = null ; mContext = null ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.OutputStream openWrite ( @ javax.annotation.Nonnull com.android.sched.vfs.BaseVFile file , boolean append ) throws com.android.sched.util.file.WrongPermissionException { return new java.util.zip.DeflaterOutputStream ( vfs . openWrite ( file , append ) , new java.util.zip.Deflater () ) ; }
@ com.android.annotations.Nullable public java.io.File getMainManifest () { java.io.File defaultManifest = mDefaultSourceProvider . getManifestFile () ; if ( defaultManifest . isFile () ) { return defaultManifest ; } return null ; }
public static java.lang.String copyValueOf ( char [] data ) { return new java.lang.String ( data ) ; }
public void initialize ( int strength , java.security.SecureRandom random ) { param = new org.bouncycastle.crypto.params.RSAKeyGenerationParameters ( org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.defaultPublicExponent , ( random != null ? random : new java.security.SecureRandom () ) , strength , org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.defaultTests ) ; engine . init ( param ) ; }
public static long LongDivision () { long a ; long b ; long c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a / b ; return c ; }
@ java.lang.Override public com.android.jack.dx.rop.cst.CstString getName () { return field . getName () ; }
private void refresh () { refresh ( false ) ; }
public void setImageUrl ( java.lang.String url , com.android.volley.toolbox.ImageLoader imageLoader ) { mUrl = url ; mImageLoader = imageLoader ; loadImageIfNecessary ( false ) ; }
public static void test () { java.lang.Object [] array = Main.sArray ; java.lang.Object nonNull = array [ NUMBER_CONSTANT ] ; nonNull . getClass () ; array [ NUMBER_CONSTANT ] = nonNull ; }
public void search ( @ com.android.annotations.NonNull com.android.builder.internal.compiler.SourceSearcher.SourceFileProcessor processor ) throws com.android.ide.common.internal.LoggedErrorException , java.io.IOException , java.lang.InterruptedException { for ( java.io.File file : mSourceFolders ) { processFile ( file , file , processor ) ; } if ( ( mExecutor ) != null ) { mExecutor . waitForTasksWithQuickFail ( true ) ; } }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onCharacteristicChanged ( this , characteristic ) ; } }
public abstract android.graphics.Bitmap getFavicon ( ) ;
public void run () { assertFalse ( mTextView . moveCursorToVisibleOffset () ) ; }
void removeForward ( int localPort , int remotePort ) throws com.android.ddmlib.AdbCommandRejectedException , com.android.ddmlib.TimeoutException , java.io.IOException ;
@ java.lang.Override public com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider () { return this . getVideoCallProvider () ; }
public void testForName_NotSupported () { try { java.nio.charset.Charset . forName ( STRING_CONSTANT ) ; fail () ; } catch ( java.nio.charset.UnsupportedCharsetException expected ) {} }
public static org.eclipse.wst.sse.core.internal.provisional.IndexedRegion getRegion ( org.w3c.dom.Node node ) { if ( node instanceof org.eclipse.wst.sse.core.internal.provisional.IndexedRegion ) { return ( ( org.eclipse.wst.sse.core.internal.provisional.IndexedRegion ) ( node ) ) ; } return null ; }
public native byte [] getxattr ( java.lang.String path , java.lang.String name ) throws android.system.ErrnoException ;
private void addAuthAndCryptToIpSecConfig ( android.net.IpSecConfig config ) throws java.lang.Exception { config . setEncryption ( com.android.server.IpSecServiceParameterizedTest.CRYPT_ALGO ) ; config . setAuthentication ( com.android.server.IpSecServiceParameterizedTest.AUTH_ALGO ) ; }
public static < T > org.hamcrest.Matcher < T [] > hasItemInArray ( org.hamcrest.Matcher < ? super T > elementMatcher ) { return new org.hamcrest.collection.IsArrayContaining < T > ( elementMatcher ) ; }
@ java.lang.Override public void validateModel ( @ com.android.annotations.NonNull com.android.build.gradle.internal.VariantModel model ) {}
void updateInCallNotification () { updateInCallNotification ( false ) ; }
private android.support.v7.preference.Preference getPreference ( final android.content.pm.PermissionInfo perm , final android.content.pm.PermissionGroupInfo group ) { if ( isMutableGranularPermission ( perm.name ) ) { return getMutablePreference ( perm , group ) ; } else { return getImmutablePreference ( perm , group ) ; } }
@ java.lang.Override public void exit () { mWifiConnectivityManager . handleConnectionStateChanged ( WifiConnectivityManager.WIFI_STATE_TRANSITIONING ) ; }
@ org.junit.Test public void TestCoverage () { com.ibm.icu.util.Currency usd = com.ibm.icu.util.Currency . getInstance ( STRING_CONSTANT ) ; assertEquals ( STRING_CONSTANT , STRING_CONSTANT , usd . getSymbol () ) ; }
@ java.lang.Override public boolean disconnect ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.map.BluetoothMapService.VERBOSE ) { android.util.Log . v ( com.android.bluetooth.map.BluetoothMapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.map.BluetoothMapService service = getService () ; if ( service == null ) { return false ; } return service . disconnect ( device ) ; }
abstract void putIntUnchecked ( int index , int value ) ;
public synchronized com.google.android.gles_jni.EGLSurface eglGetCurrentSurface ( int readdraw ) { long value = _eglGetCurrentSurface ( readdraw ) ; if ( value == NUMBER_CONSTANT ) { return EGL10.EGL_NO_SURFACE ; } if ( ( mSurface.mEGLSurface ) != value ) mSurface = new com.google.android.gles_jni.EGLSurfaceImpl ( value ) ; return mSurface ; }
public static int ReturnIntMax () { float imm = NUMBER_CONSTANT ; return ( ( int ) ( imm ) ) ; }
@ java.lang.Override boolean isEmpty ( @ javax.annotation.Nonnull com.android.sched.vfs.CaseInsensitiveFS.CaseInsensitiveVDir dir ) { return dir . isEmpty () ; }
public boolean removeAllNetworks () { if ( ! ( mWifiNative . removeAllNetworks () ) ) { loge ( STRING_CONSTANT ) ; return false ; } return true ; }
@ java.lang.Override public void setCarrierInfoForImsiEncryption ( android.telephony.ImsiEncryptionInfo imsiEncryptionInfo ) { com.android.internal.telephony.CarrierInfoManager . setCarrierInfoForImsiEncryption ( imsiEncryptionInfo , mContext ) ; }
public int checkPermission ( java.lang.String permission , int pid , int uid ) { if ( permission == null ) { return android.content.pm.PackageManager.PERMISSION_DENIED ; } return checkComponentPermission ( permission , pid , uid , ( - NUMBER_CONSTANT ) , true ) ; }
public static synchronized java.security.Provider [] getProviders () { return org.apache.harmony.security.fortress.Services.providers . toArray ( new java.security.Provider [ org.apache.harmony.security.fortress.Services.providers . size () ] ) ; }
@ javax.annotation.Nonnegative int getMinorVersion ( ) ;
@ javax.annotation.Nonnull public com.android.jack.test.toolchain.JackBasedToolchain setSanityChecks ( boolean sanityChecks ) { this . sanityChecks = sanityChecks ; return this ; }
@ java.lang.Override public boolean isPlatformEligible () { return true ; }
public void testAtan2PiF32 () { android.renderscript.cts.ScriptField_atan2pi_float_input in = new android.renderscript.cts.ScriptField_atan2pi_float_input ( mRS , INPUTSIZE ) ; mIn = in . getAllocation () ; doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_addRect ( long nPath , android.graphics.RectF rect , int dir ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate . addRect ( rect.left , rect.top , rect.right , rect.bottom , dir ) ; }
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . args ) { messages . add ( java.lang.String . format ( msgFormat , args ) ) ; }
public static void sort ( double [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ com.android.annotations.NonNull public java.lang.String getName () { return variantConfiguration . getFullName () ; }
@ java.lang.Override public java.lang.Object clone ( ) throws java.lang.CloneNotSupportedException { android.icu.text.DictionaryBreakEngine.DequeI result = ( ( android.icu.text.DictionaryBreakEngine.DequeI ) ( super . clone () ) ) ; result.data = data . clone () ; return result ; }
public boolean isGetChannelsForBandSupported () { return mWifiVendorHal . isGetChannelsForBandSupported () ; }
synchronized void nAllocationRead ( long id , short [] d ) { validate () ; rsnAllocationRead ( mContext , id , d ) ; }
private final native void writeDoubleVector ( double [] val ) ;
@ java.lang.Override public void callSessionConferenceExtendReceived ( com.android.ims.internal.IImsCallSession newSession , com.android.ims.ImsCallProfile profile ) { if ( ( mListener ) != null ) { mListener . callSessionConferenceExtendReceived ( this , new com.android.ims.internal.ImsCallSession ( newSession ) , profile ) ; } }
public static long max ( long l1 , long l2 ) { return l1 > l2 ? l1 : l2 ; }
@ java.lang.Override protected void finalize ( ) throws java.lang.Throwable { try { close () ; } finally { super . finalize () ; } }
@ javax.annotation.Nonnull static com.android.sched.vfs.VPath getFilePath ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return new com.android.sched.vfs.VPath ( ( ( com.android.jack.ir.formatter.BinaryQualifiedNameFormatter . getFormatter () . getName ( type ) ) + ( com.android.jack.backend.dex.DexWriter.DEX_FILE_EXTENSION ) ) , CHAR_CONS ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_reset ( long native_object ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( native_object ) ; if ( delegate == null ) { return; } delegate . reset () ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static long native_getStrokeJoin ( long native_object ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( native_object ) ; if ( delegate == null ) { return NUMBER_CONSTANT ; } return delegate.mJoin ; }
@ com.google.caliper.Benchmark public void deepEquals ( int reps ) { for ( int i = NUMBER_CONSTANT ; i < reps ; ++ i ) { java.util.Arrays . deepEquals ( array , array2 ) ; } }
public android.telecom.ParcelableCall toParcelableCall ( com.android.server.telecom.Call call , boolean includeVideoProvider , com.android.server.telecom.PhoneAccountRegistrar phoneAccountRegistrar ) { return com.android.server.telecom.ParcelableCallUtils . toParcelableCall ( call , includeVideoProvider , phoneAccountRegistrar , false , false ) ; }
private static void debugLog ( java.lang.String msg ) { if ( com.android.bluetooth.btservice.PhonePolicy.DBG ) { android.util.Log . i ( com.android.bluetooth.btservice.PhonePolicy.TAG , msg ) ; } }
private void display ( java.lang.String format , java.lang.Object . . . args ) { mMonitor . log ( format , args ) ; }
@ org.junit.Test public void testParseBatchTimestamp () { com.android.bluetooth.gatt.GattService service = new com.android.bluetooth.gatt.GattService () ; long timestampNanos = service . parseTimestampNanos ( new byte [] { - NUMBER_CONSTANT , NUMBER_CONSTANT } ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , timestampNanos ) ; }
public void widgetDisposed ( org.eclipse.swt.events.DisposeEvent e ) { model . removeImageChangeListener ( this ) ; }
public void test_isUnicodeIdentifierPartC () { assertTrue ( STRING_CONSTANT , java.lang.Character . isUnicodeIdentifierPart ( CHAR_CONS ) ) ; assertTrue ( STRING_CONSTANT , java.lang.Character . isUnicodeIdentifierPart ( CHAR_CONS ) ) ; assertFalse ( STRING_CONSTANT , java.lang.Character . isUnicodeIdentifierPart ( CHAR_CONS ) ) ; }
@ java.lang.Override public void requestImsExternalCallStateInfo ( ) throws android.os.RemoteException { this . requestImsExternalCallStateInfo () ; }
@ java.lang.Override public boolean handleError ( java.lang.String message ) { return false ; }
public void traceMethodCalls ( boolean on ) { if ( on != ( tracingMethods ) ) { if ( on ) { dalvik.system.VMDebug . startMethodTracing () ; } else { dalvik.system.VMDebug . stopMethodTracing () ; } tracingMethods = on ; } }
public int compare ( java.lang.Double o1 , java.lang.Double o2 ) { int result = o1 . compareTo ( o2 ) ; return result > NUMBER_CONSTANT ? - NUMBER_CONSTANT : result < NUMBER_CONSTANT ? NUMBER_CONSTANT : NUMBER_CONSTANT ; }
public static void assertChainLength ( java.lang.Object [] chain ) { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , chain.length ) ; }
private com.android.mms.layout.LayoutParameters getLayoutParameters ( int displayType ) { switch ( displayType ) { case LayoutParameters.HVGA_LANDSCAPE : return new com.android.mms.layout.HVGALayoutParameters ( mContext , LayoutParameters.HVGA_LANDSCAPE ) ; case LayoutParameters.HVGA_PORTRAIT : return new com.android.mms.layout.HVGALayoutParameters ( mContext , LayoutParameters.HVGA_PORTRAIT ) ; } throw new java.lang.IllegalArgumentException ( ( STRING_CONSTANT + displayType ) ) ; }
public int getMaxConnectedAudioDevices () { enforceCallingOrSelfPermission ( com.android.bluetooth.btservice.AdapterService.BLUETOOTH_PERM , STRING_CONSTANT ) ; return mAdapterProperties . getMaxConnectedAudioDevices () ; }
@ java.lang.Deprecated @ java.lang.Override public final E set ( int index , E element ) { throw new java.lang.UnsupportedOperationException () ; }
@ java.lang.Override protected void setUp () { mNm . setInterruptionFilter ( NotificationManager.INTERRUPTION_FILTER_NONE ) ; createChannels () ; sendNotifications ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.MODE_URI , false , false ) ; status = READY ; }
public void updateErrorIndicator () { updateErrorIndicator ( mEditor . getEditedFile () ) ; }
private boolean isIgnored () { return ( hasIgnoredAnnotation () ) || ( hasNoParameters () ) ; }
@ com.android.annotations.NonNull public java.util.Map < java.lang.String , com.android.builder.model.AndroidProject > getAllModelsIgnoringSyncIssues () { return getAllModels ( new com.android.build.gradle.integration.common.fixture.GetAndroidModelAction () , false , null , null ) ; }
@ java.lang.Override public boolean isBinderAlive () { return ( ( mIsAvailable ) && ( ( mBinder ) != null ) ) && ( mBinder . isBinderAlive () ) ; }
static void setSocketWriteTimeout ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.net.Socket s , @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) long timeoutMillis ) throws java.net.SocketException {}
public void selectionChanged ( org.eclipse.jface.action.IAction action , org.eclipse.jface.viewers.ISelection selection ) { mSelection = selection ; }
public void setResourceDirs ( @ javax.annotation.Nonnull java.util.List < java.io.File > resourceDirs ) { resImport = new java.util.ArrayList < java.io.File > ( resourceDirs ) ; }
public com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy makeWorkingCopy ( com.android.sdklib.internal.project.ProjectProperties.PropertyType type ) { java.util.Map < java.lang.String , java.lang.String > propList = new java.util.HashMap < java.lang.String , java.lang.String > ( mProperties ) ; return new com.android.sdklib.internal.project.ProjectPropertiesWorkingCopy ( mProjectFolder , propList , type ) ; }
public boolean setP2pClientList ( int netId , java.lang.String list ) { return false ; }
public int getCategory () { switch ( basicType ) { case com.android.jack.dx.rop.type.Type.BT_LONG : case com.android.jack.dx.rop.type.Type.BT_DOUBLE : { return NUMBER_CONSTANT ; } } return NUMBER_CONSTANT ; }
public void setPassword ( java.lang.String password ) { setFieldValue ( android.net.wifi.WifiEnterpriseConfig.PASSWORD_KEY , password ) ; }
public void testEncode_String_NullString () { tests.api.java.nio.charset.CharsetTest.MockCharset c = new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , null ) ; try { c . encode ( ( ( java.lang.String ) ( null ) ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.jack.test.toolchain.Toolchain setErrorStream ( @ javax.annotation.Nonnull java.io.OutputStream errorStream ) { errRedirectStream = new java.io.PrintStream ( errorStream ) ; return this ; }
public void testPlayHlsStream ( ) throws java.lang.Throwable { localHlsTest ( STRING_CONSTANT , false , false ) ; }
@ javax.annotation.Nonnull com.android.sched.util.location.Location getLocation () { return location ; }
public static void setUp ( android.telecom.PhoneAccountHandle phoneAccountHandle , android.telecom.ConnectionService connectionService ) throws java.lang.Exception { synchronized ( android.telecom.cts.CtsConnectionService.sLock ) { if ( ( android.telecom.cts.CtsConnectionService.sConnectionService ) != null ) { throw new java.lang.Exception ( STRING_CONSTANT ) ; } android.telecom.cts.CtsConnectionService.sConnectionService = connectionService ; } }
@ java.lang.Override public java.lang.String getProperty ( java.lang.String key ) { try { return manager . getVariable ( key ) ; } catch ( java.io.IOException e ) { com.android.monkeyrunner.adb.AdbMonkeyDevice.LOG . log ( java.util.logging.Level.SEVERE , ( STRING_CONSTANT + key ) , e ) ; return null ; } }
public static void computeCospi ( android.renderscript.cts.TestCospi.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . cospi ( args.inV , t ) ; }
protected void runImpl ( ) throws com.android.cts.DeviceDisconnectedException { mDevice . runTest ( this ) ; }
@ org.junit.Before public void init () { availableLocales = com.ibm.icu.impl.ICUResourceBundle . getAvailableULocales () ; }
public native short getShort ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public synchronized void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; try { wait () ; } catch ( java.lang.InterruptedException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override protected void visitString ( int index ) { addConstant ( new com.android.jack.dx.rop.cst.CstString ( dex . strings () . get ( index ) ) ) ; }
public static java.lang.String escape ( java.lang.String entryName ) { return com.android.ddmlib.FileListingService.FileEntry.sEscapePattern . matcher ( entryName ) . replaceAll ( STRING_CONSTANT ) ; }
@ java.lang.Override public void setHintText ( @ android.support.annotation.Nullable java.lang.CharSequence hintText ) { if ( hintText == null ) { swipeToAnswerText . setText ( R.string.call_incoming_swipe_to_answer ) ; } else { swipeToAnswerText . setText ( hintText ) ; } swipeToRejectText . setText ( R.string.call_incoming_swipe_to_reject ) ; }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testGetNetworkOperatorNoPhoneAccount ( ) throws java.lang.Exception { org.mockito.Mockito . when ( mMockCallsManager . getForegroundCall () ) . thenReturn ( null ) ; java.lang.String networkOperator = mBluetoothPhoneService.mBinder . getNetworkOperator () ; org.junit.Assert . assertEquals ( networkOperator , STRING_CONSTANT ) ; }
public void test_Any_Upper ( ) throws java.lang.Exception { libcore.icu.Transliterator t = new libcore.icu.Transliterator ( STRING_CONSTANT ) ; assertEquals ( STRING_CONSTANT , t . transliterate ( STRING_CONSTANT ) ) ; assertEquals ( STRING_CONSTANT , t . transliterate ( STRING_CONSTANT ) ) ; }
protected void waitForMavenImport () { org.jetbrains.idea.maven.project.MavenProjectsManager . getInstance ( myProject ) . waitForResolvingCompletion () ; }
static void printRow ( java.io.PrintWriter pw , java.lang.String format , java.lang.Object . . . objs ) { pw . println ( java.lang.String . format ( format , objs ) ) ; }
public abstract int getSize ( ) ;
public static int getNumberOfDevices ( android.content.Context context ) { try { return new com.android.tv.tuner.DvbDeviceAccessor ( context ) . getNumOfDvbDevices () ; } catch ( java.lang.Exception e ) { return NUMBER_CONSTANT ; } }
public void forEach ( android.support.v8.renderscript.Allocation aout ) { forEach ( NUMBER_CONSTANT , ( ( android.support.v8.renderscript.Allocation ) ( null ) ) , aout , null ) ; }
private static void onDisabledEvent ( int status ) { if ( com.android.server.wifi.nan.WifiNanNative.VDBG ) android.util.Log . v ( com.android.server.wifi.nan.WifiNanNative.TAG , ( STRING_CONSTANT + status ) ) ; com.android.server.wifi.nan.WifiNanStateManager . getInstance () . onNanDownNotification ( status ) ; }
@ org.junit.Test public void testBridge001 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( BRIDGE001 ) . setSourceLevel ( SourceLevel.JAVA_8 ) . addIgnoredCandidateToolchain ( com.android.jack.test.toolchain.JackApiV01 . class ) . compileAndRunTest () ; }
@ java.lang.Override public void deleteEditor () { mEntry . markDeleted () ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( getParent () ) ) ; if ( parent != null ) { parent . removeView ( this ) ; } }
public static int IntRemainder () { int a ; int b ; int c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a % b ; return c ; }
@ java.lang.Override public java.lang.String toString () { return ( ( address . getHostAddress () ) + STRING_CONSTANT ) + ( prefixLength ) ; }
public void bindRootScript ( android.renderscript.Script s ) { validate () ; nContextBindRootScript ( ( ( int ) ( safeID ( s ) ) ) ) ; }
@ java.lang.Override public void uncaughtException ( java.lang.Thread t , java.lang.Throwable e ) { if ( e instanceof java.lang.ThreadDeath ) { passed [ NUMBER_CONSTANT ] = true ; } super . uncaughtException ( t , e ) ; }
public void callSessionInviteParticipantsRequestDelivered () { try { mListener . callSessionInviteParticipantsRequestDelivered () ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
public void supplyNetworkDepersonalization ( java.lang.String pin , android.os.Message onComplete ) { mPhone.mCM . supplyNetworkDepersonalization ( pin , onComplete ) ; }
public static com.android.cts.verifier.TestListAdapter.TestListItem newCategory ( java.lang.String title ) { return new com.android.cts.verifier.TestListAdapter.TestListItem ( title , null , null , null , null , null ) ; }
@ java.lang.Override public int download ( android.telephony.mbms.DownloadRequest downloadRequest , android.telephony.mbms.IDownloadCallback listener ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
protected boolean areShallowlyEqual ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode a , @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode b ) { assert ! ( differenceFound ) ; other = b ; accept ( a ) ; return ! ( differenceFound ) ; }
public static void multiplyP ( int [] x ) { int m = ( org.bouncycastle.crypto.modes.gcm.GCMUtil . shiftRight ( x ) ) > > NUMBER_CONSTANT ; x [ NUMBER_CONSTANT ] ^= m & ( org.bouncycastle.crypto.modes.gcm.GCMUtil.E1 ) ; }
public void projectOpenedWithWorkspace ( org.eclipse.core.resources.IProject project ) { onProjectOpened ( project ) ; }
public void await ( java.util.concurrent.CountDownLatch latch ) { try { assertTrue ( latch . await ( jsr166.JSR166TestCase.LONG_DELAY_MS , java.util.concurrent.TimeUnit.MILLISECONDS ) ) ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; } }
public static void setProperty ( java.lang.String key , java.lang.String datum ) { java.security.Security.props . put ( key , datum ) ; java.security.Security . increaseVersion () ; java.security.Security . invalidateSMCache ( key ) ; }
public void testField () { org.apache.harmony.crypto.tests.javax.crypto.interfaces.DHPublicKeyTest.checkDHPublicKey key = new org.apache.harmony.crypto.tests.javax.crypto.interfaces.DHPublicKeyTest.checkDHPublicKey () ; assertEquals ( STRING_CONSTANT , key . getSerVerUID () , ( - NUMBER_CONSTANT ) ) ; }
private static boolean isCdmaVoice ( int subId ) { int activePhone = android.telephony.TelephonyManager . getDefault () . getCurrentPhoneType ( subId ) ; return ( android.telephony.TelephonyManager.PHONE_TYPE_CDMA ) == activePhone ; }
public com.android.build.gradle.internal.test.report.ClassTestResults addTestClass ( java.lang.String className ) { return addPackageForClass ( className ) . addClass ( className ) ; }
public static final void logln ( java.lang.String message ) {}
public void test_oneJar_init ( ) throws java.lang.Exception { java.lang.ClassLoader cl = createLoader ( jar1 ) ; }
@ java.lang.Override public void out ( @ com.android.annotations.Nullable java.lang.String line ) { if ( line != null ) { logger . info ( line ) ; } }
static void addKeepClassMembers ( @ javax.annotation.Nonnull com.android.jack.shrob.spec.Flags flags , com.android.jack.shrob.spec.ClassSpecification classSpecification , @ javax.annotation.Nonnull com.android.jack.shrob.spec.KeepModifier keepModifier ) { assert classSpecification != null ; classSpecification . setKeepModifier ( keepModifier ) ; flags . addKeepClassMembers ( classSpecification ) ; }
void setState ( int mState ) { debugLog ( ( STRING_CONSTANT + mState ) ) ; this . mState = mState ; }
public boolean hasResourcesOfType ( com.android.resources.ResourceType type ) { java.util.Map < java.lang.String , com.android.ide.common.resources.ResourceItem > items = mResourceMap . get ( type ) ; return ( items != null ) && ( ( items . size () ) > NUMBER_CONSTANT ) ; }
public void testAll ( ) throws java.lang.Exception { for ( java.lang.String id : libcore.icu.Transliterator . getAvailableIDs () ) { java.lang.System.err . println ( id ) ; libcore.icu.Transliterator t = new libcore.icu.Transliterator ( id ) ; t . transliterate ( STRING_CONSTANT ) ; } }
public void updateRecords () { onUpdateIcc () ; }
@ java.lang.Override public java.io.InputStream openStream ( ) throws java.io.IOException { return url . openStream () ; }
private boolean isSelfManagedConnectionService ( android.telecom.PhoneAccountHandle phoneAccountHandle ) { if ( phoneAccountHandle != null ) { android.telecom.PhoneAccount phoneAccount = mPhoneAccountRegistrar . getPhoneAccountUnchecked ( phoneAccountHandle ) ; return ( phoneAccount != null ) && ( phoneAccount . isSelfManaged () ) ; } return false ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { lastSaveFile = com.android.preload.Main . getUI () . showSaveDialog () ; if ( ( lastSaveFile ) != null ) { super . actionPerformed ( e ) ; } }
public int compare ( com.android.sdkuilib.internal.repository.PackagesPage.PkgCategory cat1 , com.android.sdkuilib.internal.repository.PackagesPage.PkgCategory cat2 ) { return ( cat2 . getKey () ) - ( cat1 . getKey () ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( mListener ) != null ) { mTelephonyManager . listen ( mListener , PhoneStateListener.LISTEN_NONE ) ; } }
public android.net.IpSecManager.UdpEncapsulationSocket openUdpEncapsulationSocket ( ) throws android.net.IpSecManager.ResourceUnavailableException , java.io.IOException { return new android.net.IpSecManager.UdpEncapsulationSocket ( mService , NUMBER_CONSTANT ) ; }
@ javax.annotation.Nonnull public java.lang.String getName () { assert ( name ) != null ; return name ; }
public java.lang.String getName () { return getClass () . getSimpleName () ; }
public native java.lang.Class < > [] getExceptionTypes ( ) ;
private void gotoCameraApp ( ) throws android.support.test.uiautomator.UiObjectNotFoundException { com.android.devtools.systemimage.uitest.utils.AppLauncher . launch ( instrumentation , STRING_CONSTANT ) ; }
@ java.lang.Override public void registerContentObservers () { if ( ( android.os.Build.VERSION.SDK_INT ) < ( android.os.Build.VERSION_CODES.N ) ) { return; } appContext . getContentResolver () . registerContentObserver ( BlockedNumbers.CONTENT_URI , true , markDirtyObserver ) ; }
private native boolean nativeMotionUp ( int x , int y , int slop ) ;
private void init ( org.apache.harmony.xnet.provider.jsse.SSLParametersImpl sslParameters , java.lang.String [] enabledProtocols , java.lang.String [] enabledCipherSuites ) throws java.io.IOException { this . sslParameters = sslParameters ; this . enabledProtocols = enabledProtocols ; this . enabledCipherSuites = enabledCipherSuites ; }
void setJavaResourcesProvider ( com.android.build.gradle.tasks.JavaResourcesProvider javaResourcesProvider ) ;
@ java.lang.Override public java.lang.String toString () { return getFolderSegment () ; }
public void write ( int b ) throws java.io.IOException { out . write ( b ) ; if ( on ) { digest . update ( ( ( byte ) ( b ) ) ) ; } }
public void onSessionConfigFailed () {}
@ java.lang.Override public boolean connect ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.map.BluetoothMapService.VERBOSE ) { android.util.Log . v ( com.android.bluetooth.map.BluetoothMapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.map.BluetoothMapService service = getService () ; if ( service == null ) { return false ; } return false ; }
public void setSimPowerState ( int state ) { mCi . setSimCardPower ( state , null ) ; }
public boolean isImsRegistered ( int subId ) { try { return getITelephony () . isImsRegistered ( subId ) ; } catch ( android.os.RemoteException | java.lang.NullPointerException ex ) { return false ; } }
private void assertAllRoutesHaveInterface ( java.lang.String iface , android.net.LinkProperties lp ) { for ( android.net.RouteInfo r : lp . getRoutes () ) { org.junit.Assert . assertEquals ( iface , r . getInterface () ) ; } }
@ java.lang.Override protected void execute ( org.eclipse.core.runtime.IProgressMonitor monitor ) throws java.lang.reflect.InvocationTargetException { createProjectAsync ( monitor , mainData , testData , null ) ; }
private boolean supports ( java.lang.Class < > klass ) { return ( vogar.target.junit.Junit3 . isJunit3Test ( klass ) ) || ( vogar.target.junit.Junit4 . isJunit4Test ( klass ) ) ; }
void startTimer ( java.lang.String timerEventName ) ;
public native boolean isAnonymousClass ( ) ;
@ java.lang.Override public void error ( int errorCode , java.lang.String message ) throws android.os.RemoteException { listener . error ( errorCode , message ) ; }
@ java.lang.Override public boolean accept ( java.io.File pathname ) { return ! ( pathname . getName () . equals ( android.support.multidex.MultiDexExtractor.LOCK_FILENAME ) ) ; }
public java.lang.Class < > getReturnType () { return java.lang.Class . findOverriddenMethodIfProxy ( artMethod ) . getReturnType () ; }
private void updateConfigurationControls ( boolean isRealConfiguration ) { myConfigurationName . setVisible ( isRealConfiguration ) ; myConfigurationNameLabel . setVisible ( isRealConfiguration ) ; myGroupDescriptionLabel . setVisible ( ( ! isRealConfiguration ) ) ; }
public static java.nio.MemoryBlock wrapFromJni ( long address , long byteCount ) { return new java.nio.MemoryBlock.UnmanagedBlock ( address , byteCount ) ; }
@ java.lang.Override public void attachFunctor ( long functor ) { android.view.GLES20Canvas . nAttachFunctor ( mRenderer , functor ) ; }
synchronized void nAllocationRead ( long id , float [] d ) { validate () ; rsnAllocationRead ( mContext , id , d ) ; }
public synchronized com.google.android.gles_jni.EGLDisplay eglGetCurrentDisplay () { long value = _eglGetCurrentDisplay () ; if ( value == NUMBER_CONSTANT ) { return EGL10.EGL_NO_DISPLAY ; } if ( ( mDisplay.mEGLDisplay ) != value ) mDisplay = new com.google.android.gles_jni.EGLDisplayImpl ( value ) ; return mDisplay ; }
private java.lang.String styleName ( int s ) { switch ( s ) { case android.icu.text.DateFormat.SHORT : return STRING_CONSTANT ; case android.icu.text.DateFormat.MEDIUM : return STRING_CONSTANT ; case android.icu.text.DateFormat.LONG : return STRING_CONSTANT ; case android.icu.text.DateFormat.FULL : return STRING_CONSTANT ; default: return STRING_CONSTANT ; } }
@ java.lang.Override public int hashCode () { final int prime = NUMBER_CONSTANT ; int result = super . hashCode () ; result = ( prime * result ) + ( ( mMinToolsRevision ) == null ? NUMBER_CONSTANT : mMinToolsRevision . hashCode () ) ; return result ; }
synchronized long nElementCreate ( long type , int kind , boolean norm , int vecSize ) { validate () ; return rsnElementCreate ( mContext , type , kind , norm , vecSize ) ; }
public void callSessionRttModifyResponseReceived ( int status ) { try { mListener . callSessionRttModifyResponseReceived ( status ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
public void merge () { try { mConnectionService . mergeConference ( mId , null ) ; } catch ( android.os.RemoteException e ) {} }
public void callSessionMultipartyStateChanged ( boolean isMultiParty ) { if ( ( mListener ) != null ) { mListener . callSessionMultipartyStateChanged ( this , isMultiParty ) ; } }
public static java.lang.Long sumToReference ( int . . . ints ) { java.lang.System.out . println ( STRING_CONSTANT ) ; return new java.lang.Long ( Main.VariableArityTester . sumToPrimitive ( ints ) ) ; }
@ android.test.suitebuilder.annotation.MediumTest public void testAndroidStrings () { assertEquals ( STRING_CONSTANT , mTextView1 . getText () . toString () ) ; }
@ java.lang.Override public void onMediaScannerConnected () { if ( com.android.bluetooth.opp.BluetoothOppService.V ) { android.util.Log . v ( com.android.bluetooth.opp.BluetoothOppService.TAG , STRING_CONSTANT ) ; } mConnection . scanFile ( mInfo.mFilename , mInfo.mMimetype ) ; }
@ java.lang.Override final void putUnchecked ( int pos , double [] src , int srcOffset , int length ) { libcore.io.Memory . pokeDoubleArray ( ix ( pos ) , src , srcOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
@ com.android.annotations.NonNull org.gradle.api.file.FileCollection getJavaClasspath ( ) ;
public void unplug ( long batteryUptime , long batteryRealtime ) { mUnpluggedCount = mPluggedCount ; mCount . set ( mPluggedCount ) ; }
public static void setChromiumAwDrawGLFunction ( long functionPointer ) { com.android.webview.chromium.DrawGLFunctor . nativeSetChromiumAwDrawGLFunction ( functionPointer ) ; }
void end ( int key ) throws java.lang.InterruptedException ;
public void runWithPermissions ( java.lang.Runnable r , java.security.Permission . . . permissions ) { r . run () ; }
public void run () { synchronized ( this ) { loadImage () ; } }
@ java.lang.Override public void disconnect ( android.bluetooth.BluetoothDevice device ) { if ( com.android.bluetooth.pbap.BluetoothPbapService.DEBUG ) { android.util.Log . d ( com.android.bluetooth.pbap.BluetoothPbapService.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.pbap.BluetoothPbapService service = getService () ; if ( service == null ) { return; } service . disconnect ( device ) ; }
private static native java.lang.String nativeLoad ( java.lang.String filename , java.lang.ClassLoader loader ) ;
public void setChildren ( java.util.List < com.android.layoutlib.api.ViewInfo > children ) { mChildren = java.util.Collections . unmodifiableList ( children ) ; }
public static void computeClz ( android.renderscript.cts.TestClz.ArgumentsShortShort args ) { args.out = ( ( short ) ( ( java.lang.Integer . numberOfLeadingZeros ( ( ( args.inValue ) & NUMBER_CONSTANT ) ) ) - NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public android.bluetooth.BluetoothDevice [] getBondedDevices () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return new android.bluetooth.BluetoothDevice [ NUMBER_CONSTANT ] ; } return service . getBondedDevices () ; }
synchronized int nFileA3DGetEntryByIndex ( long fileA3D , int index ) { validate () ; return rsnFileA3DGetEntryByIndex ( mContext , fileA3D , index ) ; }
public static < T > org.hamcrest.Matcher < T > in ( java.util.Collection < T > collection ) { return new org.hamcrest.collection.IsIn < T > ( collection ) ; }
private boolean isValidKeyType ( java.lang.Object key ) { return ( key != null ) && ( keyType . isInstance ( key ) ) ; }
@ org.junit.Test public final void testTapLink_changeOrientationThenTapBack ( ) throws java.lang.Exception { sUiBot . setScreenOrientation ( UiBot.PORTRAIT ) ; try { saveUiRestoredAfterTappingLinkTest ( android.autofillservice.cts.CustomDescriptionWithLinkTestCase.PostSaveLinkTappedAction.ROTATE_THEN_TAP_BACK_BUTTON ) ; } finally { sUiBot . setScreenOrientation ( UiBot.PORTRAIT ) ; } }
synchronized long nScriptFieldIDCreate ( long sid , int slot ) { validate () ; return rsnScriptFieldIDCreate ( mContext , sid , slot ) ; }
private void getSubjectAlternativeNames ( java.security.cert.CertificateFactory f ) throws java.lang.Exception { java.security.cert.X509Certificate c = getCertificate ( f , libcore.java.security.cert.X509CertificateTest.CERT_RSA ) ; java.util.Collection < java.util.List < > > col = c . getSubjectAlternativeNames () ; checkAlternativeNames ( f , col ) ; }
public void addNewIncomingCall () { if ( ! ( isVideoAccountEnabled () ) ) { showVideoAccountSettings () ; return; } java.lang.String callerId = STRING_CONSTANT ; connectionTag = com.android.dialer.simulator.impl.SimulatorSimCallManager . addNewIncomingCall ( context , callerId , SimulatorSimCallManager.CALL_TYPE_VIDEO ) ; }
public void test_RAND_bytes_Null_Failure ( ) throws java.lang.Exception { byte [] output = null ; try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . RAND_bytes ( output ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.RuntimeException expected ) {} }
private void reportConnectionAttemptStart ( android.net.wifi.WifiConfiguration config , java.lang.String targetBSSID , int roamType ) { mWifiMetrics . startConnectionEvent ( config , targetBSSID , roamType ) ; mWifiDiagnostics . reportConnectionEvent ( ( - NUMBER_CONSTANT ) , WifiDiagnostics.CONNECTION_EVENT_STARTED ) ; }
public static float ReturnFloat34 () { long imm = NUMBER_CONSTANT ; return ( ( float ) ( imm ) ) ; }
@ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { try { server . startHandshake () ; fail () ; } catch ( javax.net.ssl.SSLHandshakeException expected ) {} return null ; }
static native java.lang.reflect.Member getDeclaredConstructorOrMethod ( java.lang.Class c , java.lang.String name , java.lang.Class [] args ) ;
@ java.lang.Override protected void updateSearchPanel () { super . updateSearchPanel () ; if ( ( mNavigationBarView ) != null ) { mNavigationBarView . setDelegateView ( mSearchPanelView ) ; } }
public final void setFeatureState ( @ android.telephony.ims.feature.ImsFeature.ImsState int state ) { synchronized ( mLock ) { if ( ( mState ) != state ) { mState = state ; notifyFeatureState ( state ) ; } } }
public void testForName_Null () { try { java.nio.charset.Charset . forName ( null ) ; fail () ; } catch ( java.lang.IllegalArgumentException expected ) {} }
public java.lang.Integer getResourceId ( com.android.resources.ResourceType type , java.lang.String name ) { if ( ( mProjectRes ) != null ) { return mProjectRes . getResourceId ( type , name ) ; } return null ; }
public static com.android.tools.lint.client.api.JavaParser.ResolvedMethod createMethod ( java.lang.String containingClass , java.lang.String returnType , java.lang.String name , java.lang.String parameters ) { return com.android.tools.lint.ExternalAnnotationRepositoryTest . createMethod ( containingClass , returnType , name , parameters , false ) ; }
public void setDummyAnimation () { if ( ( animation ) == null ) { if ( com.android.server.WindowManagerService.localLOGV ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + ( this ) ) ) ; animation = com.android.server.WindowManagerService.sDummyAnimation ; } }
public android.security.KeyStoreParameter.Builder setUserAuthenticators ( @ android.security.KeyStoreKeyConstraints.UserAuthenticatorEnum int userAuthenticators ) { mUserAuthenticators = userAuthenticators ; return this ; }
public void testAddAll1 () { java.util.TreeSet q = new java.util.TreeSet () ; try { q . addAll ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
private static boolean needTwoButton ( @ android.support.annotation.NonNull android.app.Activity activity ) { if ( com.android.incallui.answer.impl.answermethod.AnswerMethodFactory.shouldUseTwoButtonMethodForTesting ) { com.android.dialer.common.LogUtil . i ( STRING_CONSTANT , STRING_CONSTANT ) ; return true ; } return ( com.android.incallui.util.AccessibilityUtil . isTouchExplorationEnabled ( activity ) ) || ( activity . isInMultiWindowMode () ) ; }
boolean isRoaming () { return mAutoRoaming ; }
public boolean isActiveUserAvailable () { return ( activeUser ) != null ; }
@ java.lang.Override public java.lang.String getName () { return scope . getTaskName ( deviceProvider . getName () ) ; }
void setSimCardPower ( int state , android.os.Message result ) ;
public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { try { org.conscrypt.NativeCrypto . SSL_do_handshake ( org.conscrypt.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT , false , null , null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public int underlyingOffset ( int offset ) { return ( start ) + offset ; }
public void run () { getActivity () . setVisible ( false ) ; }
@ java.lang.Override public void runUntilIdle () { assert ( mRunLoopID ) != NUMBER_CONSTANT : STRING_CONSTANT ; nativeRunUntilIdle ( mRunLoopID ) ; }
public static javax.net.ssl.SSLSession wrapSSLSession ( org.conscrypt.AbstractOpenSSLSession sslSession ) { if ( ( Build.VERSION.SDK_INT ) <= NUMBER_CONSTANT ) { return sslSession ; } return new org.conscrypt.OpenSSLExtendedSessionImpl ( sslSession ) ; }
@ org.junit.Test public void testParseARPRequest () { final java.lang.String packet = STRING_CONSTANT + ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) ; final java.lang.String expected = STRING_CONSTANT + STRING_CONSTANT ; org.junit.Assert . assertEquals ( expected , getSummary ( packet ) ) ; }
@ java.lang.Override public void onLowMemory () { mTabControl . freeMemory () ; }
public static native long SSL_clear_options ( long ssl , long options ) ;
void setObfuscationTask ( com.android.build.gradle.internal.scope.AndroidTask < ? extends org.gradle.api.Task > obfuscationTask ) ;
private void stopAll ( boolean keepVisibleBehind ) { mOverlayManager . hideOverlays ( TvOverlayManager.FLAG_HIDE_OVERLAYS_WITHOUT_ANIMATION ) ; stopTv ( STRING_CONSTANT , keepVisibleBehind ) ; }
public void registerListener ( @ com.android.annotations.NonNull com.android.sdklib.devices.DeviceManager.DevicesChangedListener listener ) { synchronized ( sListeners ) { if ( ! ( sListeners . contains ( listener ) ) ) { sListeners . add ( listener ) ; } } }
@ javax.annotation.Nonnull public com.android.sched.vfs.VFS getVfs () { return vfs ; }
public static boolean isEclipseWorkspaceDir ( @ com.android.annotations.NonNull java.io.File file ) { return ( file . isDirectory () ) && ( new java.io.File ( file , ( ( STRING_CONSTANT + ( java.io.File.separator ) ) + STRING_CONSTANT ) ) . exists () ) ; }
public static long ReturnLong0 () { double imm = - ( java.lang.Double.NaN ) ; return ( ( long ) ( imm ) ) ; }
protected void onGetImageError ( java.lang.String cacheKey , com.android.volley.VolleyError error ) { com.android.volley.toolbox.ImageLoader.BatchedImageRequest request = mInFlightRequests . remove ( cacheKey ) ; if ( request != null ) { request . setError ( error ) ; batchResponse ( cacheKey , request ) ; } }
@ java.lang.Override boolean initialize ( android.view.Surface surface ) throws android.view.Surface.OutOfResourcesException { boolean status = ! ( mInitialized ) ; mInitialized = true ; updateEnabledState ( surface ) ; android.view.ThreadedRenderer . nInitialize ( mNativeProxy , surface ) ; return status ; }
public void testGet_NullPointerException () { java.util.NavigableMap c = jsr166.TreeSubMapTest . map5 () ; try { c . get ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ com.android.cts.util.SecurityTest public void testStagefright_cve_2017_0852_b_62815506 ( ) throws java.lang.Exception { doStagefrightTest ( R.raw.cve_2017_0852_b_62815506 ) ; }
@ java.lang.Override public boolean hasSameBehavior ( java.lang.Object a , java.lang.Object b ) { return a == b ; }
@ org.junit.Test public void test002c ( ) throws java.lang.Exception { java.io.File jackOutput ; jackOutput = runTest002 ( false , STRING_CONSTANT , false ) ; checkResourceContent ( jackOutput , com.android.jack.fileconflict.FileConflictTests.RESOURCE1_LONGPATH , STRING_CONSTANT ) ; checkResourceContent ( jackOutput , com.android.jack.fileconflict.FileConflictTests.RESOURCE2_LONGPATH , STRING_CONSTANT ) ; checkResourceContent ( jackOutput , com.android.jack.fileconflict.FileConflictTests.RESOURCE3_LONGPATH , STRING_CONSTANT ) ; }
@ java.lang.Override public org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey () { return key ; }
public boolean isEmpty () { return ( length () ) == NUMBER_CONSTANT ; }
public android.bluetooth.BluetoothCodecStatus getCodecStatus ( android.bluetooth.BluetoothDevice device ) ;
public static java.lang.String map2AlgName ( java.lang.String oid ) { final java.lang.String algUC = org.apache.harmony.security.utils.AlgNameMapper.oid2AlgMap . get ( oid ) ; if ( algUC != null ) { return org.apache.harmony.security.utils.AlgNameMapper.algAliasesMap . get ( algUC ) ; } return null ; }
@ java.lang.Override public int getBondState ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return android.bluetooth.BluetoothDevice.BOND_NONE ; } return service . getBondState ( device ) ; }
public void recordExistingFile ( @ com.android.annotations.NonNull java.lang.String absFilePath ) { recordExistingFile ( absFilePath , NUMBER_CONSTANT , ( ( byte [] ) ( null ) ) ) ; }
public void addAll ( com.android.jack.dx.rop.annotation.Annotations toAdd ) { assert toAdd != null ; throwIfImmutable () ; for ( com.android.jack.dx.rop.annotation.Annotation a : toAdd.annotations . values () ) { add ( a ) ; } }
@ java.lang.Override public java.lang.Object clone ( ) throws java.lang.CloneNotSupportedException { java.security.SignatureSpi spi = ( ( spiImpl ) != null ) ? ( ( java.security.SignatureSpi ) ( spiImpl . clone () ) ) : null ; return new java.security.Signature.SignatureImpl ( getAlgorithm () , getProvider () , spi ) ; }
public void projectOpened ( org.eclipse.core.resources.IProject project ) { onProjectOpened ( project ) ; }
public static void assertEquals ( boolean actual , boolean expected ) throws java.lang.AssertionError { if ( actual != expected ) { throw new java.lang.AssertionError ( ( ( ( ( STRING_CONSTANT + actual ) + STRING_CONSTANT ) + expected ) + STRING_CONSTANT ) ) ; } }
synchronized long nSamplerCreate ( int magFilter , int minFilter , int wrapS , int wrapT , int wrapR , float aniso ) { validate () ; return rsnSamplerCreate ( mContext , magFilter , minFilter , wrapS , wrapT , wrapR , aniso ) ; }
public static boolean putString ( android.content.ContentResolver resolver , java.lang.String name , java.lang.String value ) { return android.provider.Settings.Global . putStringForUser ( resolver , name , value , null , false , android.os.UserHandle . myUserId () ) ; }
public static synchronized java.util.List < java.security.Provider > getProvidersList () { return new java.util.ArrayList < java.security.Provider > ( org.apache.harmony.security.fortress.Services.providers ) ; }
private void cleanup () { com.android.ddmlib.AndroidDebugBridge . removeDeviceChangeListener ( this ) ; }
private void assertActiveRulesVersion ( java.lang.String expectedRulesVersion ) throws java.lang.Exception { java.lang.String expectedActiveRulesVersion = ( ( ( expectedRulesVersion + STRING_CONSTANT ) + expectedRulesVersion ) + STRING_CONSTANT ) + expectedRulesVersion ; java.lang.String actualActiveRulesVersion = waitForNoOperationInProgressAndReturn ( com.android.timezone.xts.TimeZoneUpdateHostTest.StateType.ACTIVE_RULES_VERSION ) ; assertEquals ( expectedActiveRulesVersion , actualActiveRulesVersion ) ; }
@ org.junit.Test public void getNameMultiFlavor () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.android.build.gradle.internal.ProductFlavorCombo ( f1 , f2 ) . getName () ) ; }
synchronized void nAllocationData1D ( long id , int off , int mip , int count , short [] d , int sizeBytes ) { validate () ; rsnAllocationData1D ( mContext , id , off , mip , count , d , sizeBytes ) ; }
private void generateUnexpectedConnectionMessageFromNative ( android.bluetooth.BluetoothDevice device , int newConnectionState , int oldConnectionState ) { com.android.bluetooth.hearingaid.HearingAidStackEvent stackEvent = new com.android.bluetooth.hearingaid.HearingAidStackEvent ( HearingAidStackEvent.EVENT_TYPE_CONNECTION_STATE_CHANGED ) ; stackEvent.device = device ; stackEvent.valueInt1 = newConnectionState ; mService . messageFromNative ( stackEvent ) ; verifyNoConnectionStateIntent ( com.android.bluetooth.hearingaid.HearingAidServiceTest.TIMEOUT_MS , device ) ; }
public void callSessionMayHandover ( int srcAccessTech , int targetAccessTech ) { try { mListener . callSessionMayHandover ( srcAccessTech , targetAccessTech ) ; } catch ( android.os.RemoteException e ) { throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override public boolean cancel ( boolean mayInterruptIfRunning ) { if ( ! ( sync . cancel ( mayInterruptIfRunning ) ) ) { return false ; } executionList . execute () ; if ( mayInterruptIfRunning ) { interruptTask () ; } return true ; }
@ java.lang.Override final byte _get ( int i ) { return get ( i ) ; }
void putLittleEndianInts ( int [] a , boolean neg ) { this . makeValid () ; java.math.NativeBN . litEndInts2bn ( a , a.length , neg , this . bignum ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public java.lang.String test0_OnConnect () { featureSupportedOrSkip () ; showUserMessage ( java.lang.String . format ( STRING_CONSTANT , com.android.cts.verifier.sensors.DynamicSensorDiscoveryTestActivity.CONNECTION_TIMEOUT_SEC ) ) ; junit.framework.Assert . assertTrue ( STRING_CONSTANT , mCallback . waitForConnection ( null ) ) ; mSensorConnected = true ; mSensorId = mCallback . getSensorId () ; return STRING_CONSTANT ; }
public static void main ( java.lang.String [] args ) { Main . doTest () ; }
public void testfabsF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void initSstIcc () { mSST = new com.android.internal.telephony.cdma.CdmaLteServiceStateTracker ( this ) ; }
@ com.android.internal.annotations.VisibleForTesting public void removeImsServiceFeatureCallbacks () { mImsStatusCallbacks . clear () ; }
public void goingToSleep () { synchronized ( this ) { mSleeping = true ; mWindowManager . setEventDispatching ( false ) ; if ( ( mResumedActivity ) != null ) { pauseIfSleepingLocked () ; } else { android.util.Slog . w ( com.android.server.am.ActivityManagerService.TAG , STRING_CONSTANT ) ; } } }
public void writeUnknownDebugEnd ( ) throws java.io.IOException { writeLineIfDifferentFromCurrent ( com.android.jill.frontend.java.SourceInfoWriter.NO_LINE ) ; }
@ java.lang.Override public void execute ( com.android.build.gradle.model.AndroidBinary androidBinary ) { com.android.build.gradle.model.DefaultAndroidBinary binary = ( ( com.android.build.gradle.model.DefaultAndroidBinary ) ( androidBinary ) ) ; binary . setBuildType ( buildType ) ; binary . setProductFlavors ( flavorCombo . getFlavorList () ) ; }
@ java.lang.Override public void writeContent ( @ javax.annotation.Nonnull com.android.jack.jayce.v0004.io.JayceInternalWriterImpl out ) throws java.io.IOException { out . writeString ( name ) ; out . writeId ( type ) ; out . writeString ( genericSignature ) ; }
private void assertVerifiedForEach ( java.lang.String apkFilenamePatternInResources , java.lang.String [] args ) throws java.lang.Exception { assertVerifiedForEach ( apkFilenamePatternInResources , args , null , null ) ; }
public static boolean isVideoCompatible () { return true ; }
public void testLongSelectResponse () { byte [] selectResponse = testSelectableAid ( android.omapi.cts.OmapiTest.LONG_SELECT_RESPONSE_AID ) ; if ( selectResponse == null ) { return; } assertTrue ( STRING_CONSTANT , android.omapi.cts.OmapiTest . verifyBerTlvData ( selectResponse ) ) ; }
@ com.android.internal.annotations.VisibleForTesting public com.android.internal.telephony.imsphone.ImsPhoneConnection getFirstConnection () { if ( ( mConnections . size () ) == NUMBER_CONSTANT ) return null ; return ( ( com.android.internal.telephony.imsphone.ImsPhoneConnection ) ( mConnections . get ( NUMBER_CONSTANT ) ) ) ; }
public static int [] copyOf ( int [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
native void rsnScriptSetVarF ( long con , long id , int slot , float val ) ;
@ java.lang.Override public java.io.File getInstallFolder ( java.lang.String osSdkRoot , com.android.sdklib.SdkManager sdkManager ) { return new java.io.File ( osSdkRoot , com.android.sdklib.SdkConstants.FD_TOOLS ) ; }
public void testRemove1_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; c . put ( STRING_CONSTANT , STRING_CONSTANT ) ; try { c . remove ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public abstract android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm ( ) ;
@ org.junit.Test public void test011_1 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( TEST011_1 ) . compileAndRunTest () ; }
public final void run () { try { realRun () ; } catch ( java.lang.Throwable fail ) { threadUnexpectedException ( fail ) ; } }
@ com.android.internal.annotations.VisibleForTesting public void setMonitoring ( java.lang.String iface , boolean enabled ) { mMonitoringMap . put ( iface , enabled ) ; }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( STRING_CONSTANT ) ; Main main = new Main () ; main . run () ; java.lang.System.out . println ( STRING_CONSTANT ) ; }
protected void addPage ( org.eclipse.swt.widgets.Composite page , java.lang.String title ) { page . setData ( title ) ; mPages . add ( page ) ; if ( ( mPageList ) != null ) { mPageList . add ( title ) ; } }
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . voids ) { testChargingConstraintExecutes_onCharging () ; return null ; }
public void uidsChangedRsp ( int type ) { if ( ! ( registerNotificationRspUIDsChangedNative ( type , com.android.bluetooth.avrcp.Avrcp.sUIDCounter ) ) ) { android.util.Log . e ( com.android.bluetooth.avrcp.Avrcp.AvrcpMediaRsp.TAG , STRING_CONSTANT ) ; } }
void setPrimary ( java.lang.String number , java.lang.String name , boolean nameIsNumber , java.lang.String label , android.graphics.drawable.Drawable photo , boolean isSipCall ) ;
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session ) { for ( com.android.jack.ir.sourceinfo.FileSourceInfo info : session . getSourceInfoFactory () . getFileSourceInfos () ) { info . setFileName ( newSourceFileName . getPath () ) ; } }
@ java.lang.Override public java.lang.String getProperty ( java.lang.String name ) { return this . getProperty ( name ) ; }
@ android.annotation.SystemApi public abstract void bulkRequestIconForPageUrl ( android.content.ContentResolver cr , java.lang.String where , android.webkit.WebIconDatabase.IconListener listener ) ;
private void stopScan () { if ( com.android.cts.verifier.bluetooth.BleClientService.DEBUG ) android.util.Log . d ( com.android.cts.verifier.bluetooth.BleClientService.TAG , STRING_CONSTANT ) ; if ( ( mScanner ) != null ) { mScanner . stopScan ( mScanCallback ) ; } }
public void test_getOrDefault () { libcore.java.util.MapDefaultMethodTester . test_getOrDefault ( new java.util.Hashtable <> () , false , false , true ) ; }
@ java.lang.Override public void conference () { android.telephony.Rlog . e ( com.android.internal.telephony.cdma.CDMAPhone.LOG_TAG , STRING_CONSTANT ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_rewind ( long nPath ) { android.graphics.Path_Delegate . native_reset ( nPath ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField x ) { print ( com.android.jack.ir.ast.JModifier . getStringFieldModifier ( x . getModifier () ) ) ; printType ( x ) ; space () ; printName ( x ) ; return false ; }
public static boolean isValueResource ( com.android.resources.ResourceType type ) { com.android.ide.eclipse.adt.internal.resources.manager.ResourceFolderType [] folderTypes = com.android.ide.eclipse.adt.internal.resources.manager.FolderTypeRelationship . getRelatedFolders ( type ) ; for ( com.android.ide.eclipse.adt.internal.resources.manager.ResourceFolderType folderType : folderTypes ) { if ( folderType == ( com.android.ide.eclipse.adt.internal.resources.manager.ResourceFolderType.VALUES ) ) { return true ; } } return false ; }
public native void setByte ( java.lang.Object obj , byte b ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
public static native boolean EC_POINT_cmp ( long groupRef , long pointRef1 , long pointRef2 ) ;
@ javax.annotation.Nonnegative int getMajorVersion ( ) ;
@ com.android.annotations.NonNull public com.android.builder.model.AndroidProject executeAndReturnModel ( java.lang.String . . . tasks ) { return executeAndReturnModel ( false , tasks ) ; }
public boolean isAlive () { return ( ( isAvailable () ) && ( mCreated ) ) && ( mStarted ) ; }
private static void queryProperties ( @ com.android.annotations.NonNull com.android.ddmlib.Device device ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException { java.util.concurrent.Future < java.lang.String > prop = device . getSystemProperty ( STRING_CONSTANT ) ; prop . get () ; }
@ com.android.internal.annotations.VisibleForTesting public static boolean isPauseRequest ( int from , int to ) { boolean fromPaused = android.telecom.VideoProfile . isPaused ( from ) ; boolean toPaused = android.telecom.VideoProfile . isPaused ( to ) ; return ( ! fromPaused ) && toPaused ; }
@ android.test.suitebuilder.annotation.MediumTest public void testResOverlay () { assertEquals ( STRING_CONSTANT , mResOverLay . getText () . toString () ) ; assertEquals ( STRING_CONSTANT , mResOverLay1 . getText () . toString () ) ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JForStatement x ) { removeBreakOrCase . push ( java.lang.Boolean.FALSE ) ; return super . visit ( x ) ; }
private void safeCanvasSwap ( long nativeCanvas , boolean copyState ) { final long oldCanvas = mNativeCanvas ; mNativeCanvas = nativeCanvas ; mFinalizer.mNativeCanvas = nativeCanvas ; if ( copyState ) { android.graphics.Canvas . copyNativeCanvasState ( oldCanvas , mNativeCanvas ) ; } android.graphics.Canvas . finalizer ( oldCanvas ) ; }
public void sendMessageWithSessionInfo ( int message , int arg ) { sendMessageWithSessionInfo ( message , arg , null ) ; }
public int groupCount () { synchronized ( this ) { return java.util.regex.Matcher . groupCountImpl ( address ) ; } }
@ org.junit.Test public void testRemoveTransportModeTransform ( ) throws java.lang.Exception { android.os.ParcelFileDescriptor pfd = android.os.ParcelFileDescriptor . fromSocket ( new java.net.Socket () ) ; mIpSecService . removeTransportModeTransforms ( pfd ) ; org.mockito.Mockito . verify ( mMockNetd ) . ipSecRemoveTransportModeTransform ( pfd . getFileDescriptor () ) ; }
@ java.lang.Deprecated public abstract java.lang.String getDatabasePath ( ) ;
private int getBlockId ( @ javax.annotation.Nonnull com.android.jack.ir.ast.cfg.JBasicBlock block ) { return basicBlocks . get ( block ) . intValue () ; }
public static void assertEquals ( int expected , int actual ) { if ( actual != expected ) { throw new java.lang.AssertionError ( ( ( ( ( STRING_CONSTANT + actual ) + STRING_CONSTANT ) + expected ) + STRING_CONSTANT ) ) ; } }
@ dalvik.annotation.optimization.FastNative final native java.lang.Class < > getMethodReturnTypeInternal ( ) ;
private void testExplicitPositionMatchParent () { doLayoutParamTest ( ( android.view.WindowManager.LayoutParams params ) - > { params.width = WindowManager.LayoutParams.MATCH_PARENT ; params.height = WindowManager.LayoutParams.MATCH_PARENT ; } ) ; }
protected boolean stop () { if ( ( mStateMachine ) != null ) { mStateMachine . doQuit () ; } mAvrcp . doQuit () ; return true ; }
@ java.lang.Override protected java.net.URLConnection openConnection ( java.net.URL url ) throws java.io.IOException { return new libcore.io.ClassPathURLStreamHandler.ClassPathURLConnection ( url ) ; }
@ java.lang.Override @ java.lang.Deprecated public boolean isPermissionEnforced ( java.lang.String permission ) { return true ; }
public static com.android.server.wifi.ScanResults create ( int id , com.android.server.wifi.ScanDetail . . . nativeResults ) { return new com.android.server.wifi.ScanResults ( id , false , ( - NUMBER_CONSTANT ) , nativeResults ) ; }
public native char getChar ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public boolean startTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return markIfNecessary ( type ) ; }
@ java.lang.Override public V put ( @ javax.annotation.Nullable K key , @ javax.annotation.Nullable V value ) { return put ( key , value , false ) ; }
private static void confirmInterrupted ( java.lang.Thread thread ) throws java.lang.InterruptedException { try { assertTrue ( java.lang.Thread . interrupted () ) ; } finally { thread . join () ; } }
public java.util.Set < K > keySet () { java.util.Set < K > ks = keySet ; if ( ks == null ) { ks = new KeySet () ; keySet = ks ; } return ks ; }
private static native boolean isBoundaryImpl ( int address , java.lang.String text , int offset ) ;
@ java.lang.Override public void setDeviceOrientation ( int rotation ) {}
public void test_getInstance_provider2 ( ) throws java.lang.Exception { test_getInstance ( NUMBER_CONSTANT ) ; }
private void handleRemovedCall ( com.android.server.telecom.ConnectionServiceFocusManager.CallFocus call ) { mCalls . remove ( call ) ; if ( call . equals ( mCurrentFocusCall ) ) { updateCurrentFocusCall () ; } }
protected boolean isSettingAvailable () { if ( ! ( mInitialized ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return mSettingAvailable ; }
public double timeAtan2 ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . atan2 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } return result ; }
public java.lang.Object clone () { try { return super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
private void stopGattProfileService () { mAdapterProperties . onBleDisable () ; if ( ( mRunningProfiles . size () ) == NUMBER_CONSTANT ) { debugLog ( STRING_CONSTANT ) ; mAdapterStateMachine . sendMessage ( AdapterState.BLE_STOPPED ) ; } setProfileServiceState ( com.android.bluetooth.gatt.GattService . class , BluetoothAdapter.STATE_OFF ) ; }
public static com.android.resources.Navigation getByIndex ( int index ) { com.android.resources.Navigation [] values = com.android.resources.Navigation . values () ; if ( ( index >= NUMBER_CONSTANT ) && ( index < ( values.length ) ) ) { return values [ index ] ; } return null ; }
public void setConfiguration ( com.android.ide.eclipse.adt.internal.resources.configurations.FolderConfiguration config ) { mSelectedConfiguration . set ( config , true ) ; mSelectionTableViewer . refresh () ; mBaseConfiguration . substract ( mSelectedConfiguration ) ; mFullTableViewer . refresh () ; }
public libcore.java.security.TestKeyStore.Builder addSubjectAltName ( com.android.org.bouncycastle.asn1.x509.GeneralName generalName ) { subjectAltNames . add ( generalName ) ; return this ; }
private void init ( org.apache.harmony.xnet.provider.jsse.SSLParametersImpl sslParameters ) throws java.io.IOException { init ( sslParameters , org.apache.harmony.xnet.provider.jsse.NativeCrypto . getDefaultProtocols () , org.apache.harmony.xnet.provider.jsse.NativeCrypto . getDefaultCipherSuites () ) ; }
private synchronized void onVirtualCableUnplug () { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.TAG , STRING_CONSTANT ) ; } android.os.Message msg = mHandler . obtainMessage ( com.android.bluetooth.hid.HidDevService.MESSAGE_VC_UNPLUG ) ; mHandler . sendMessage ( msg ) ; }
public java.lang.annotation.Annotation [] [] getParameterAnnotations () { return super . getParameterAnnotations () ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( new Transform ( STRING_CONSTANT , STRING_CONSTANT ) , new Transform ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
@ java.lang.Override public void update ( java.net.CacheResponse conditionalCacheHit , java.net.HttpURLConnection connection ) throws java.io.IOException { delegate . update ( conditionalCacheHit , connection ) ; }
private static boolean isAudioCall ( com.android.incallui.call.DialerCall call ) { return ( call != null ) && ( android.telecom.VideoProfile . isAudioOnly ( call . getVideoState () ) ) ; }
@ android.support.annotation.Nullable public abstract java.lang.String name ( ) ;
public void notifyIconDone ( com.android.server.wifi.hotspot2.IconEvent iconEvent ) { mHandler . notifyIconDone ( iconEvent ) ; }
public void testSeekTooLarge ( ) throws java.lang.Exception { try ( java.io.RandomAccessFile raf = new java.io.RandomAccessFile ( file , STRING_CONSTANT ) ) { try { raf . seek ( java.lang.Long.MAX_VALUE ) ; fail () ; } catch ( java.io.IOException expected ) {} } }
@ java.lang.Override protected void visitPrimitive ( int type , int arg , int size ) { addConstant ( com.android.jack.tools.merger.MergerTools . createConstant ( in , type , arg ) ) ; }
@ java.lang.Override public void sendDtmf ( char c , android.os.Message result ) { this . sendDtmf ( c , result ) ; }
@ com.android.annotations.NonNull private static javax.xml.parsers.SAXParser getParser ( int version ) throws javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { javax.xml.validation.Schema schema = com.android.dvlib.DeviceSchema . getSchema ( version ) ; if ( schema != null ) { com.android.sdklib.devices.DeviceParser.sParserFactory . setSchema ( schema ) ; } return com.android.sdklib.devices.DeviceParser.sParserFactory . newSAXParser () ; }
static void sendMessageResponse ( android.os.Message msg , java.lang.Object ret ) { if ( msg != null ) { android.os.AsyncResult . forMessage ( msg , ret , null ) ; msg . sendToTarget () ; } }
public java.lang.Object getContent () { return this ; }
@ java.lang.Override public int transact ( android.os.Bundle ssInfo ) throws android.os.RemoteException { return this . transact ( ssInfo ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { android.support.test.espresso.IdlingPolicies . setMasterPolicyTimeout ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) ; android.support.test.espresso.IdlingPolicies . setIdlingResourceTimeout ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) ; oneShotResource . setIdle ( true ) ; }
@ java.lang.Override public void onEnrichedCallStateChanged () { com.android.dialer.common.LogUtil . enterBlock ( STRING_CONSTANT ) ; updateNotification () ; }
@ javax.annotation.Nonnull private com.android.jack.server.ServerLogConfiguration.LogLevel parseLevel ( @ javax.annotation.Nonnull java.lang.String stringLevel ) throws com.android.sched.util.codec.ParsingException { return new com.android.sched.util.codec.EnumCodec ( com.android.jack.server.ServerLogConfiguration.LogLevel . class ) . checkString ( new com.android.sched.util.codec.CodecContext () , stringLevel ) ; }
@ java.lang.Override public java.math.BigInteger getS () { return getPrivateKey () ; }
public int getImsServiceStatus ( ) throws com.android.ims.ImsException { return mImsServiceProxy . getFeatureStatus () ; }
public boolean attachFunctor ( long functor ) { if ( ( ( mAttachInfo.mHardwareRenderer ) != null ) && ( mAttachInfo.mHardwareRenderer . isEnabled () ) ) { return mAttachInfo.mHardwareRenderer . attachFunctor ( mAttachInfo , functor ) ; } return false ; }
@ java.lang.Override public void onUnhandledKeyEvent ( android.webkit.WebView view , android.view.KeyEvent event ) { if ( ! ( mInForeground ) ) { return; } if ( ! ( mWebViewController . onUnhandledKeyEvent ( event ) ) ) { super . onUnhandledKeyEvent ( view , event ) ; } }
private void clear () { synchronized ( types ) { types . clear () ; init () ; } }
@ java.lang.Override public java.util.Set < com.google.common.collect.Multiset.Entry < E > > entrySet () { java.util.Set < com.google.common.collect.Multiset.Entry < E > > result = entrySet ; if ( result == null ) { entrySet = result = createEntrySet () ; } return result ; }
@ java.lang.Override public void explicitCallTransfer () { mCT . explicitCallTransfer () ; }
@ java.lang.Override public android.graphics.drawable.ConstantState getConstantState () { mNinePatchState.mChangingConfigurations = getChangingConfigurations () ; return mNinePatchState ; }
public void test_providerCount () { assertTrue ( ( ( providers . size () ) > NUMBER_CONSTANT ) ) ; assertTrue ( ( ( providers . size () ) < NUMBER_CONSTANT ) ) ; }
@ javax.annotation.Nonnull public java.lang.String getName () { assert ( name ) != null ; return name ; }
@ org.junit.Test public void test002b ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( false , STRING_CONSTANT , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
public static int NegatedCondition ( boolean x ) { return x != false ? NUMBER_CONSTANT : NUMBER_CONSTANT ; }
@ java.lang.Override public void traverse ( @ javax.annotation.Nonnull final com.android.sched.scheduler.ScheduleInstance < ? super com.android.sched.item.Component > schedule ) throws java.lang.Exception { schedule . process ( this ) ; for ( com.android.jack.ir.ast.cfg.JBasicBlock block : getBlocksDepthFirst ( false ) ) { block . traverse ( schedule ) ; } }
public static native long SSL_do_handshake ( long sslNativePointer , java.io.FileDescriptor fd , org.conscrypt.NativeCrypto.SSLHandshakeCallbacks shc , int timeoutMillis ) throws java.net.SocketTimeoutException , java.security.cert.CertificateException , javax.net.ssl.SSLException ;
public void setDescription ( java.lang.String format , java.lang.Object . . . args ) {}
public static com.android.bluetooth.ObexServerSockets create ( com.android.bluetooth.IObexConnectionHandler validator ) { return com.android.bluetooth.ObexServerSockets . create ( validator , BluetoothAdapter.SOCKET_CHANNEL_AUTO_STATIC_NO_SDP , BluetoothAdapter.SOCKET_CHANNEL_AUTO_STATIC_NO_SDP , true ) ; }
@ java.lang.Override public void uncaughtException ( java.lang.Thread t , java.lang.Throwable e ) { throw new UncaughtException () ; }
public static < V > org.hamcrest.Matcher < java.util.Map < , ? extends V > > hasValue ( org.hamcrest.Matcher < ? super V > valueMatcher ) { return new org.hamcrest.collection.IsMapContaining < java.lang.Object , V > ( org.hamcrest.collection.IsMapContaining . anything () , valueMatcher ) ; }
@ java.lang.Override void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , int attributePointer , int attributeCount ) throws org.xml.sax.SAXException { if ( ( ( depth ) ++ ) > NUMBER_CONSTANT ) { super . startElement ( uri , localName , qName , attributePointer , attributeCount ) ; } }
public static boolean isVideoPresenceCompatible () { return true ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_transform ( long nPath , long matrix ) { android.graphics.Path_Delegate . native_transform ( nPath , matrix , NUMBER_CONSTANT ) ; }
public static native boolean BN_mul ( long r , long a , long b ) ;
public static dalvik.system.DexFile loadDex ( java.lang.String sourcePathName , java.lang.String outputPathName , int flags ) throws java.io.IOException { return dalvik.system.DexFile . loadDex ( sourcePathName , outputPathName , flags , null , null ) ; }
public boolean getKeepParameterNames () { assert obfuscate ; return keepParameterNames ; }
@ java.lang.Override public void tearDown ( ) throws java.lang.Exception { android.text.format.cts.TimeTest . changeJavaAndAndroidLocale ( originalLocale , true ) ; super . tearDown () ; }
public void sendSetCallerDisplayName ( java.lang.String id ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . setCallerDisplayName ( id , mConnectionById . get ( id ) . callerDisplayName , mConnectionById . get ( id ) . callerDisplayNamePresentation , null ) ; } }
@ java.lang.Override @ com.android.annotations.NonNull public java.lang.String readFile ( @ com.android.annotations.NonNull java.io.File file ) { try { return com.android.tools.lint.detector.api.LintUtils . getEncodedString ( this , file ) ; } catch ( java.io.IOException e ) { return STRING_CONSTANT ; } }
public void addReference ( com.android.tools.perflib.heap.Instance reference ) { mReferences . add ( reference ) ; }
private float calculateWeight ( long startDelta , long endDelta ) { return ( weightIntegral ( endDelta ) ) - ( weightIntegral ( startDelta ) ) ; }
@ java.lang.Override public char get ( int index ) { return byteBuffer . getChar ( ( index * ( libcore.io.SizeOf.CHAR ) ) ) ; }
@ java.lang.Override public void removeRegistrationListener ( com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException {}
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public java.lang.Boolean bluetoothHidDeviceRegisterApp ( ) throws java.lang.Exception { return ( ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile ) != null ) && ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sHidDeviceProfile . registerApp ( com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sSdpSettings , null , com.googlecode.android_scripting.facade.bluetooth.BluetoothHidDeviceFacade.sQos , mCallback ) ) ; }
public native void setDouble ( java.lang.Object obj , double d ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public synchronized void ensureCapacity ( int minimumCapacity ) { super . ensureCapacity ( minimumCapacity ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testDataPathInitiatorMacNoTokenFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( false , true , false , true , false ) ; }
@ java.lang.Override final void getUnchecked ( int pos , long [] dst , int dstOffset , int length ) { libcore.io.Memory . peekLongArray ( ix ( pos ) , dst , dstOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
public void sendHandleCreateConnectionComplete ( java.lang.String id ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . handleCreateConnectionComplete ( id , mConnectionById . get ( id ) . request , parcelable ( mConnectionById . get ( id ) ) , null ) ; } }
public native void setShort ( java.lang.Object obj , short s ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
@ java.lang.Override public void enter () { turnOnMasterTetherSettings () ; simChange . startListening () ; mUpstreamNetworkMonitor . start () ; chooseUpstreamType ( true ) ; mTryCell = false ; }
public boolean setDeviceType ( java.lang.String type ) { return mSupplicantStaIfaceHal . setWpsDeviceType ( type ) ; }
@ org.junit.Test public void testDefaultDisconnectedState () { org.junit.Assert . assertEquals ( BluetoothProfile.STATE_DISCONNECTED , mA2dpStateMachine . getConnectionState () ) ; }
@ java.lang.Override public boolean getDataRoamingEnabled () { return mDcTracker . getDataRoamingEnabled () ; }
public void endVisit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JAnnotation annotation ) {}
private void notifyDescriptorWriteRequest () { if ( com.android.cts.verifier.bluetooth.BleServerService.DEBUG ) android.util.Log . d ( com.android.cts.verifier.bluetooth.BleServerService.TAG , STRING_CONSTANT ) ; android.content.Intent intent = new android.content.Intent ( com.android.cts.verifier.bluetooth.BleServerService.BLE_DESCRIPTOR_WRITE_REQUEST ) ; sendBroadcast ( intent ) ; }
com.google.common.util.concurrent.ListenableFuture < java.lang.Void > onSuccessfulFill ( ) ;
public java.util.ArrayList < com.android.dialer.smartdial.SmartDialMatchPosition > getMatchPositions () { return new java.util.ArrayList ( mMatchPositions ) ; }
public void setSupplicantLogLevel ( boolean turnOnVerbose ) { mSupplicantStaIfaceHal . setLogLevel ( turnOnVerbose ) ; }
void setJavaCompilerTask ( @ com.android.annotations.NonNull com.android.build.gradle.internal.scope.AndroidTask < ? extends org.gradle.api.tasks.compile.AbstractCompile > javaCompileTask ) ;
public java.lang.invoke.MethodHandle asFixedArity () { assert ! ( isVarargsCollector () ) ; return this ; }
long length ( @ com.android.annotations.NonNull java.io.File file ) ;
@ java.lang.Override public org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey () { return key ; }
public static java.lang.String formatCalendar ( java.util.Calendar cal ) { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( STRING_CONSTANT , java.util.Locale.ENGLISH ) ; format . setTimeZone ( cal . getTimeZone () ) ; return format . format ( new java.util.Date ( cal . getTimeInMillis () ) ) ; }
@ java.lang.Override final void _put ( int i , byte b ) { put ( i , b ) ; }
public java.lang.Class < > getDeclaringClass () { if ( libcore.reflect.AnnotationAccess . isAnonymousClass ( this ) ) { return null ; } return libcore.reflect.AnnotationAccess . getEnclosingClass ( this ) ; }
@ java.lang.Override public void callSessionTtyModeReceived ( int mode ) { if ( ( mListener ) != null ) { mListener . callSessionTtyModeReceived ( this , mode ) ; } }
public void testLaunchToSideSingleInstance ( ) throws java.lang.Exception { launchTargetToSide ( android.server.cts.ActivityManagerDockedStackTests.SINGLE_INSTANCE_ACTIVITY_NAME , false ) ; }
private void finishDisconnectedCall ( com.android.incallui.call.DialerCall call ) { if ( pendingDisconnectCalls . contains ( call ) ) { pendingDisconnectCalls . remove ( call ) ; } call . setState ( DialerCall.State.IDLE ) ; updateCallInMap ( call ) ; notifyGenericListeners () ; }
public static void failOrWarning ( boolean testIsStrict , java.lang.String message , boolean condition ) { if ( testIsStrict ) { junit.framework.Assert . assertTrue ( message , condition ) ; } else { if ( ! condition ) { android.location.cts.SoftAssert . failAsWarning ( STRING_CONSTANT , message ) ; } } }
@ org.gradle.api.tasks.Input public java.lang.String getBuildToolsVersion () { return getBuildTools () . getRevision () . toString () ; }
int getModuleCount () { int moduleCount = NUMBER_CONSTANT ; for ( com.android.tools.gradle.eclipse.ImportModule module : mModules ) { if ( ! ( module . isReplacedWithDependency () ) ) { moduleCount ++ ; } } return moduleCount ; }
public void onAlarm () { try { writeBufferedData () ; } catch ( java.io.IOException e ) { android.util.Log . wtf ( com.android.server.wifi.WifiConfigStore.TAG , STRING_CONSTANT , e ) ; } }
protected boolean stop () { if ( ( mStateMachine ) != null ) mStateMachine . doQuit () ; return true ; }
final long getLong ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getLong ( ( offset + ( address ) ) ) ; }
public android.graphics.Canvas beginRecording ( int width , int height ) { long ni = android.graphics.Picture . nativeBeginRecording ( mNativePicture , width , height ) ; mRecordingCanvas = new android.graphics.Picture.RecordingCanvas ( this , ni ) ; return mRecordingCanvas ; }
@ java.lang.Override public void onDisconnect () { android.util.Log . d ( com.android.bluetooth.hfpclient.connserv.HfpClientConference.TAG , STRING_CONSTANT ) ; mHeadsetProfile . terminateCall ( mDevice , null ) ; setDisconnected ( new android.telecom.DisconnectCause ( android.telecom.DisconnectCause.LOCAL ) ) ; }
public static double DoubleSubtraction () { double a ; double b ; double c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a - b ; return c ; }
public synchronized com.google.android.gles_jni.EGLContext eglGetCurrentContext () { long value = _eglGetCurrentContext () ; if ( value == NUMBER_CONSTANT ) { return EGL10.EGL_NO_CONTEXT ; } if ( ( mContext.mEGLContext ) != value ) mContext = new com.google.android.gles_jni.EGLContextImpl ( value ) ; return mContext ; }
native long rsnScriptGroupCreate ( long con , long [] kernels , long [] src , long [] dstk , long [] dstf , long [] types ) ;
public static android.telephony.MbmsStreamingManager create ( android.content.Context context , android.telephony.mbms.MbmsStreamingManagerCallback callback , int subscriptionId ) throws android.telephony.mbms.MbmsException { android.telephony.MbmsStreamingManager manager = new android.telephony.MbmsStreamingManager ( context , callback , subscriptionId ) ; manager . bindAndInitialize () ; return manager ; }
public void addVirtualMethod ( com.android.jack.dx.dex.file.EncodedMethod method ) { assert method != null ; virtualMethods . add ( method ) ; }
private static void maybeVerboseLog ( java.lang.String s , java.lang.Object . . . args ) { if ( com.android.server.connectivity.NetdEventListenerService.VDBG ) android.util.Log . d ( com.android.server.connectivity.NetdEventListenerService.TAG , java.lang.String . format ( s , args ) ) ; }
private void runSecondary () { foo () ; throw new java.lang.RuntimeException ( STRING_CONSTANT ) ; }
public static void closeQuietly ( java.net.Socket socket ) { if ( socket != null ) { try { socket . close () ; } catch ( java.io.IOException ignored ) {} } }
private static void assertArrayEquals ( int [] expected , int [] actual ) { libcore.io.Base64Test . assertSubArrayEquals ( expected , expected.length , actual ) ; }
@ java.lang.Override public void readExternal ( org.jdom.Element element ) throws com.intellij.openapi.util.InvalidDataException {}
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean native_mapRect ( long native_object , android.graphics.RectF dst , android.graphics.RectF src ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return false ; } return d . mapRect ( dst , src ) ; }
private void onGetImageError ( java.lang.String cacheKey , com.android.volley.VolleyError error ) { com.android.volley.toolbox.ImageLoader.BatchedImageRequest request = mInFlightRequests . remove ( cacheKey ) ; if ( request != null ) { request . setError ( error ) ; batchResponse ( cacheKey , request ) ; } }
private void acquireWakeLock () { if ( ( mPartialWakeLock ) != null ) { synchronized ( mPartialWakeLock ) { log ( STRING_CONSTANT ) ; mPartialWakeLock . acquire () ; } } }
long end ( long nativeDisplayList ) { return getDisplayList ( nativeDisplayList ) ; }
void shift ( int n ) { java.math.NativeBN . BN_shift ( this . bignum , this . bignum , n ) ; }
native void rsnAllocationData1D ( long con , long id , int off , int mip , int count , float [] d , int sizeBytes ) ;
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( android.icu.impl.UResource.Key key ) { if ( key . contentEquals ( STRING_CONSTANT ) ) { return relativeSink ; } else if ( key . contentEquals ( STRING_CONSTANT ) ) { return relativeTimeSink ; } return null ; }
public java.lang.String getHostName () { if ( ( holder () . getHostName () ) == null ) { holder () . hostName = java.net.InetAddress . getHostFromNameService ( this ) ; } return holder () . getHostName () ; }
@ java.lang.Override public boolean connect ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return false ; } return service . connect ( device ) ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( new RemoveAnnotationsTest () ) ; Main . doTest ( new AddAnnotationsTest () ) ; Main . doTest ( new ChangeAnnotationValues () ) ; }
final float getFloat ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getFloat ( ( offset + ( address ) ) ) ; }
@ java.lang.Override public void onAvailable ( android.net.Network network ) { handleAvailable ( mCallbackType , network ) ; }
@ java.lang.Override public void onCapabilitiesChanged ( android.net.Network network , android.net.NetworkCapabilities newNc ) { handleNetCap ( network , newNc ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { intento = new android.support.test.espresso.intent.Intents ( android.support.test.espresso.intent.IntentsTest.RESETTING_STUB ) ; intento . internalInit () ; }
@ com.android.annotations.NonNull public static com.android.tools.lint.detector.api.Category create ( @ com.android.annotations.NonNull java.lang.String name , int priority ) { return new com.android.tools.lint.detector.api.Category ( null , name , priority ) ; }
public com.android.server.wifi.hotspot2.DomainMatcher.Label getSubLabel ( java.lang.String labelString ) { return mSubDomains . get ( labelString ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { boolean oldState = mIsDevicePlugged ; mIsDevicePlugged = ( intent . getIntExtra ( BatteryManager.EXTRA_PLUGGED , NUMBER_CONSTANT ) ) != NUMBER_CONSTANT ; if ( ( mIsDevicePlugged ) != oldState ) { updateScreenState ( false ) ; } }
@ java.lang.Override public int startStreaming ( java.lang.String appName , int subId , java.lang.String serviceId , android.telephony.mbms.IStreamingServiceCallback listener ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
public void testConstructor_NullKeystoreAlias_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , null , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , android.security.AndroidKeyPairGeneratorSpecTest.NOW , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
public void setSubject ( java.lang.String subject ) { this . subject = subject ; }
public void testExecuteNullRunnable () { java.util.concurrent.ExecutorService e = new jsr166.AbstractExecutorServiceTest.DirectExecutorService () ; try { e . submit ( ( ( java.lang.Runnable ) ( null ) ) ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ android.annotation.SystemApi public abstract boolean hasCookies ( boolean privateBrowsing ) ;
public void testConstructor_NullSubjectDN_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , null , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , android.security.AndroidKeyPairGeneratorSpecTest.NOW , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
void reset ( ) throws java.io.IOException { if ( ( ( fd ) != null ) && ( fd . valid () ) ) { socketClose () ; } super . reset () ; }
private static void displayAddonManifestWarning ( com.android.sdklib.ISdkLog log , java.lang.String addonName , java.lang.String valueName ) { log . warning ( STRING_CONSTANT , addonName , valueName , SdkConstants.FN_MANIFEST_INI ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public E peekFirst () { return ( ( E ) ( elements [ head ] ) ) ; }
abstract short getShortUnchecked ( int index ) ;
private synchronized void restartSessionCounter () { sCodeEntryCounter = NUMBER_CONSTANT ; }
protected org.bouncycastle.crypto.tls.TlsKeyExchange createPSKKeyExchange ( int keyExchange ) { return new org.bouncycastle.crypto.tls.TlsPSKKeyExchange ( keyExchange , supportedSignatureAlgorithms , pskIdentity , null , null , namedCurves , clientECPointFormats , serverECPointFormats ) ; }
@ java.lang.Override protected void fillRtTestInfos () { rtTestInfos . add ( com.android.jack.reflect.ReflectTests.TEST001_WITHOUT_SHRINK_SCHEDULABLE ) ; }
public byte [] getxattr ( java.lang.String path , java.lang.String name ) throws android.system.ErrnoException { return os . getxattr ( path , name ) ; }
public void init () { if ( ( mSmsBroadcastReceiver ) != null ) { mSmsBroadcastReceiver . register () ; } registerPhoneServiceStateListener () ; mInitialized = true ; }
public static void setUpDirectory ( java.lang.String baseDir ) {}
void setSecondary ( boolean show , java.lang.String name , boolean nameIsNumber , java.lang.String label , java.lang.String providerLabel , boolean isConference ) ;
native boolean blendTest ( java.lang.String path , int X , int Y , byte [] input , byte [] output , int optionFlag ) ;
@ java.lang.Override protected void setUp ( ) throws java.lang.Exception { com.android.ddmuilib.logcat.LogCatMessageParser parser = new com.android.ddmuilib.logcat.LogCatMessageParser () ; mParsedMessages = parser . processLogLines ( com.android.ddmuilib.logcat.LogCatMessageParserTest.MESSAGES , null ) ; }
@ java.lang.Override public java.lang.String getFolderSegment () { return java.lang.String . format ( STRING_CONSTANT , mValue1 , mValue2 ) ; }
@ java.lang.Override public synchronized void onPlaybackStateChanged ( android.media.session.PlaybackState state ) { if ( com.android.bluetooth.avrcp.Avrcp.DEBUG ) android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , ( STRING_CONSTANT + ( state . toString () ) ) ) ; updateCurrentMediaState ( false ) ; }
@ java.lang.Override void addOptionInstance ( com.google.devtools.common.options.ParsedOptionDescription parsedOption , java.util.List < java.lang.String > warnings ) { throw new java.lang.IllegalStateException ( ( STRING_CONSTANT + STRING_CONSTANT ) ) ; }
@ java.lang.Override public void onReady () { fetchSimRecords () ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.util.Set < java.lang.String > getAbiFilters () { return ndkOptions . getAbiFilters () ; }
public static android.telecom.Call getCallById ( java.lang.String callId ) { com.googlecode.android_scripting.facade.telephony.InCallServiceImpl.CallContainer cc = com.googlecode.android_scripting.facade.telephony.InCallServiceImpl.mCallContainerMap . get ( callId ) ; if ( cc != null ) { return cc . getCall () ; } return null ; }
public java.util.ArrayList < org.junit.runner.Description > getChildren () { return new java.util.ArrayList < org.junit.runner.Description > ( fChildren ) ; }
public static com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.Directory readDirectory ( android.database.Cursor cursor ) { return com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.Directory . create ( cursor . getInt ( com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.ID ) , cursor . getString ( com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.DISPLAY_NAME ) , ( ( cursor . getInt ( com.android.dialer.searchfragment.remote.RemoteDirectoriesCursorLoader.PHOTO_SUPPORT ) ) != NUMBER_CONSTANT ) ) ; }
@ java.lang.Override @ com.android.annotations.Nullable @ org.gradle.api.tasks.Optional @ org.gradle.api.tasks.OutputFile public java.io.File getXmlOutput () { return xmlOutput ; }
public boolean isEarlierThan ( android.car.diagnostic.CarDiagnosticEvent otherEvent ) { java.util.Objects . requireNonNull ( otherEvent ) ; return ( timestamp ) < ( otherEvent.timestamp ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean native_isIdentity ( long native_object ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return false ; } return d . isIdentity () ; }
public void execute ( @ com.android.annotations.NonNull java.util.List < java.lang.String > arguments , java.lang.String . . . tasks ) { execute ( arguments , false , false , tasks ) ; }
final long createTheme () { synchronized ( this ) { if ( ! ( mOpen ) ) { throw new java.lang.RuntimeException ( STRING_CONSTANT ) ; } long res = newTheme () ; incRefsLocked ( res ) ; return res ; } }
public abstract java.util.List < java.lang.String > targetProcessPrefix ( ) ;
@ com.android.annotations.Nullable public java.util.List < com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation > getAnnotations ( @ com.android.annotations.NonNull com.android.tools.lint.client.api.JavaParser.ResolvedMethod method ) { com.android.tools.lint.ExternalAnnotationRepository.MethodInfo m = findMethod ( method ) ; if ( m == null ) { return null ; } return m . getAnnotations () ; }
public static native byte [] [] SSL_get_peer_cert_chain ( long sslNativePointer ) ;
private com.android.ide.eclipse.adt.internal.resources.manager.ResourceFile getFile ( com.android.io.IAbstractFile file ) { if ( ( mFiles ) != null ) { for ( com.android.ide.eclipse.adt.internal.resources.manager.ResourceFile f : mFiles ) { if ( f . getFile () . equals ( file ) ) { return f ; } } } return null ; }
abstract void putUnchecked ( int pos , float [] dst , int srcOffset , int length ) ;
public java.net.InetSocketAddress getLocalSocketAddress () { return address ; }
@ java.lang.Override protected void tearDown () { mNm . cancelAll () ; deleteChannel () ; delay () ; }
@ java.lang.Override public void onMetadataChanged ( android.media.MediaMetadata metadata ) { if ( com.android.bluetooth.avrcp.Avrcp.DEBUG ) android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , STRING_CONSTANT ) ; updateCurrentMediaState ( false ) ; }
public void setup () {}
@ java.lang.Override public void onBrEdrDown () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return; } service . onBrEdrDown () ; }
@ java.lang.Override public boolean handles ( int c , int breakType ) { return ( ( breakType >= NUMBER_CONSTANT ) && ( breakType < ( fHandled . length () ) ) ) && ( fHandled . get ( breakType ) . contains ( c ) ) ; }
public void assertEqualsIp ( java.lang.String expected , int got ) throws java.lang.Exception { int want = com.android.internal.util.BitUtils . bytesToBEInt ( java.net.InetAddress . getByName ( expected ) . getAddress () ) ; org.junit.Assert . assertEquals ( want , got ) ; }
public void testConstructor4 () { try { java.lang.Integer [] ints = new java.lang.Integer [ SIZE ] ; new java.util.concurrent.ConcurrentSkipListSet ( java.util.Arrays . asList ( ints ) ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
synchronized long nElementCreate2 ( long [] elements , java.lang.String [] names , int [] arraySizes ) { validate () ; return rsnElementCreate2 ( mContext , elements , names , arraySizes ) ; }
public static < K , V > com.google.common.collect.HashBiMap < K , V > create () { return com.google.common.collect.HashBiMap . create ( NUMBER_CONSTANT ) ; }
@ java.lang.Override public boolean setReport ( android.bluetooth.BluetoothDevice device , byte reportType , java.lang.String report ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return false ; } return service . setReport ( device , reportType , report ) ; }
public void createTest ( com.android.rs.image.Resources res ) { mScriptR = new com.android.rs.image.ScriptC_levels_relaxed ( mRS ) ; mScriptF = new com.android.rs.image.ScriptC_levels_full ( mRS ) ; setSaturation () ; setLevels () ; }
public static java.lang.String input ( java.lang.String message , java.lang.String initialValue , java.lang.String title ) { return ( ( java.lang.String ) ( javax.swing.JOptionPane . showInputDialog ( null , message , title , javax.swing.JOptionPane.QUESTION_MESSAGE , null , null , initialValue ) ) ) ; }
public boolean setP2pDeviceName ( java.lang.String name ) { return mSupplicantP2pIfaceHal . setWpsDeviceName ( name ) ; }
synchronized void nAllocationData1D ( long id , int off , int mip , int count , short [] d , int sizeBytes ) { validate () ; rsnAllocationData1D ( mContext , id , off , mip , count , d , sizeBytes ) ; }
public void waitForNetworkRequests ( final int count ) throws java.lang.InterruptedException { waitForRequests () ; org.junit.Assert . assertEquals ( count , getMyRequestCount () ) ; }
public void flushNow () { flushBuffer ( null ) ; }
public void invokeinterface ( final java.lang.String owner , final java.lang.String name , final java.lang.String desc ) { mv . visitMethodInsn ( Opcodes.INVOKEINTERFACE , owner , name , desc , true ) ; }
private synchronized void onSetProtocol ( byte protocol ) { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.TAG , ( STRING_CONSTANT + protocol ) ) ; } android.os.Message msg = mHandler . obtainMessage ( com.android.bluetooth.hid.HidDevService.MESSAGE_SET_PROTOCOL ) ; msg.arg1 = protocol ; mHandler . sendMessage ( msg ) ; }
public static void computeExp2 ( android.renderscript.cts.TestExp2.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . exp2 ( args.inV , t ) ; }
public void testInstrumentationRunnerArguments ( @ com.android.annotations.NonNull java.util.Map < java.lang.String , java.lang.String > args ) { getTestInstrumentationRunnerArguments () . putAll ( args ) ; }
public static int ReturnInt0 () { double imm = java.lang.Double.NaN ; return ( ( int ) ( imm ) ) ; }
@ java.lang.Override public android.print.PrintDocumentAdapter createPrintDocumentAdapter () { checkThread () ; return new org.chromium.android_webview.AwPrintDocumentAdapter ( mAwContents . getPdfExporter () ) ; }
public static java.lang.String stringify ( java.lang.Throwable error ) { return java.util.Arrays . toString ( error . getStackTrace () ) . replaceAll ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testEndCallWithNoCalls ( ) throws java.lang.Exception { org.junit.Assert . assertFalse ( mTSIBinder . endCall ( null ) ) ; }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onConnectionStateChange ( this , android.bluetooth.BluetoothGatt.GATT_FAILURE , BluetoothProfile.STATE_DISCONNECTED ) ; } }
protected void setElements ( @ javax.annotation.Nonnull com.android.sched.util.codec.KeyValueCodec.Entry < T > [] entries ) { this . entries = java.util.Arrays . copyOf ( entries , entries.length ) ; if ( sorted ) { sorted () ; } }
@ java.lang.Override public void addActivationStateListener ( com.android.voicemail.stub.ActivationStateListener listener ) {}
public void onServiceDisconnected ( android.content.ComponentName className ) { android.bluetooth.BluetoothPbap . log ( STRING_CONSTANT ) ; mService = null ; if ( ( mServiceListener ) != null ) { mServiceListener . onServiceDisconnected () ; } }
public void setUseJack ( @ com.android.annotations.Nullable java.lang.Boolean useJack ) { this . useJack = useJack ; }
public static int IntDivision () { int a ; int b ; int c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a / b ; return c ; }
protected void socketClose ( ) throws java.io.IOException { guard . close () ; socketClose0 ( false ) ; }
@ java.lang.Override public void run () { try { art.Test924 . doTest () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } }
public boolean connectToNetwork ( android.net.wifi.WifiConfiguration configuration ) { return mSupplicantStaIfaceHal . connectToNetwork ( configuration ) ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.lang.String merge ( @ com.android.annotations.NonNull java.lang.String higherPriority , @ com.android.annotations.NonNull java.lang.String lowerPriority ) { return higherPriority ; }
private static native java.lang.Class < > generateProxy ( java.lang.String name , java.lang.Class < > [] interfaces , java.lang.ClassLoader loader , java.lang.reflect.Method [] methods , java.lang.Class < > [] [] exceptions ) ;
@ org.junit.Test public void test001b ( ) throws java.lang.Exception { java.io.File jackOutput = com.android.jack.test.toolchain.AbstractTestTools . createTempDir () ; try { runTest001 ( jackOutput , STRING_CONSTANT , true ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.backend.jayce.ImportConflictException e ) {} }
public void testDisallowGlobal ( ) throws java.lang.Exception { doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.DISALLOW_GLOBAL , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , null ) ; }
public boolean matchesPcAndIndex ( int pc , int index ) { return ( ( index == ( this . index ) ) && ( pc >= ( startPc ) ) ) && ( pc < ( ( startPc ) + ( length ) ) ) ; }
@ java.lang.Override public com.android.build.gradle.internal.dsl.GroupableProductFlavorDsl create ( java.lang.String name ) { return instantiator . newInstance ( com.android.build.gradle.internal.dsl.GroupableProductFlavorDsl . class , name , fileResolver , instantiator ) ; }
public void testBaseResourceSetByCount ( ) throws java.lang.Exception { com.android.builder.resources.ResourceSet resourceSet = com.android.builder.resources.ResourceSetTest . getBaseResourceSet () ; assertEquals ( NUMBER_CONSTANT , resourceSet . size () ) ; }
public int import_key ( java.lang.String name , byte [] data , int uid , int flags ) throws android.os.RemoteException ;
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { if ( ( mMenuState ) == ( com.android.browser.Controller.EMPTY_MENU ) ) { return false ; } android.view.MenuInflater inflater = mActivity . getMenuInflater () ; inflater . inflate ( R.menu.browser , menu ) ; return true ; }
native void rsnAllocationSyncAll ( long con , long alloc , int src ) ;
@ org.junit.Test @ android.test.suitebuilder.annotation.SmallTest public void testCreateTooShortPdu () { byte [] pdu = new byte [ NUMBER_CONSTANT ] ; android.telephony.SmsCbMessage msg = createFromPdu ( pdu ) ; assertNull ( STRING_CONSTANT , msg ) ; }
static com.google.devtools.common.options.OptionPriority lowestOptionPriorityAtCategory ( com.google.devtools.common.options.OptionPriority.PriorityCategory category ) { return new com.google.devtools.common.options.OptionPriority ( category , NUMBER_CONSTANT , false ) ; }
private void verifyMeasurements ( java.lang.String message , float . . . expectations ) throws java.lang.Throwable { appendText ( java.lang.String . format ( STRING_CONSTANT , message ) ) ; appendText ( STRING_CONSTANT ) ; waitForUser () ; verifyMeasurements ( expectations ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void addUpdatePasspointConfig ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) org.json.JSONObject config ) throws java.io.IOException , java.security.cert.CertificateException , org.json.JSONException { android.net.wifi.hotspot2.PasspointConfiguration passpointConfig = genWifiPasspointConfig ( config ) ; mWifi . addOrUpdatePasspointConfiguration ( passpointConfig ) ; }
public boolean startWpsPinKeypad ( java.lang.String pin ) { return mSupplicantStaIfaceHal . startWpsPinKeypad ( pin ) ; }
@ org.junit.Test @ org.junit.experimental.categories.Category ( value = com.android.jack.category.SlowTests . class ) public void compareBouncycastleStructure ( ) throws java.lang.Exception { com.android.jack.TestTools . checkStructure ( new com.android.jack.Options () , null , null , com.android.jack.compile.androidtree.bouncycastle.BouncycastleCompilationTest.SOURCELIST , false , true , NUMBER_CONSTANT , com.android.jack.compile.androidtree.bouncycastle.BouncycastleCompilationTest.JARJAR_RULES , ( ( com.android.jack.ProguardFlags [] ) ( null ) ) ) ; }
public int initServer ( java.lang.String servePath , java.lang.String contentType ) throws java.lang.Exception { tests.support.Support_TestWebData . initDynamicTestWebData ( servePath , contentType ) ; return initServer () ; }
public java.lang.String putValue ( java.lang.String name , java.lang.String value ) { return ( ( java.lang.String ) ( map . put ( new java.util.jar.Attributes.Name ( name ) , value ) ) ) ; }
@ java.lang.Override public void tearDown ( ) throws java.lang.Exception { tearDownSdk () ; super . tearDown () ; }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onConnectionStateChange ( this , status , profileState ) ; } }
@ java.lang.Override public boolean unregisterApp ( android.bluetooth.BluetoothHidDeviceAppConfiguration config ) { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.BluetoothHidDeviceBinder.TAG , STRING_CONSTANT ) ; } com.android.bluetooth.hid.HidDevService service = getService () ; if ( service == null ) { return false ; } return service . unregisterApp ( config ) ; }
private final native void writeInt32Vector ( int [] val ) ;
public static native long getTag ( java.lang.Object o ) ;
void setMergeAssetsTask ( @ com.android.annotations.Nullable com.android.build.gradle.internal.scope.AndroidTask < com.android.build.gradle.tasks.MergeAssets > mergeAssetsTask ) ;
private static native long nativeInit ( com.android.terminal.TerminalCallbacks callbacks ) ;
public static void begin ( java.lang.String name , java.lang.String arg ) { if ( org.chromium.base.TraceEvent.sEnabled ) org.chromium.base.TraceEvent . nativeBegin ( name , arg ) ; }
protected abstract void sendText ( java.lang.String destAddr , java.lang.String scAddr , java.lang.String text , android.app.PendingIntent sentIntent , android.app.PendingIntent deliveryIntent , android.net.Uri messageUri , java.lang.String callingPkg , boolean persistMessage ) ;
@ java.lang.Override protected void cleanup () { if ( com.android.bluetooth.hid.HidDeviceService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDeviceService.TAG , STRING_CONSTANT ) ; } if ( mNativeAvailable ) { mHidDeviceNativeInterface . cleanup () ; mNativeAvailable = false ; } }
public static void main ( java.lang.String [] args ) { Main . doTest ( new Transform () , new Main.TestWatcher () ) ; }
private android.net.NetworkRequest sendRequestForNetwork ( android.net.NetworkCapabilities need , android.net.ConnectivityManager.NetworkCallback callback , int timeoutMs , int action , int legacyType ) { return sendRequestForNetwork ( need , callback , timeoutMs , action , legacyType , getHandler () ) ; }
public int startStreaming ( int subscriptionId , java.lang.String serviceId , android.telephony.mbms.StreamingServiceCallback callback ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
public com.android.layoutlib.api.SceneResult insertChild ( java.lang.Object parentView , com.android.layoutlib.api.IXmlPullParser childXml , int index , com.android.layoutlib.api.LayoutScene.IAnimationListener listener ) { return SceneStatus.NOT_IMPLEMENTED . getResult () ; }
boolean isPriority ( android.print.PrinterId printerId ) { return mTrackingIds . contains ( printerId ) ; }
public void testManagedProvisioningPreInstalled ( ) throws java.lang.Exception { if ( mDeviceAdmin ) { assertTrue ( isPackageInstalledOnSystemImage ( android.admin.cts.DevicePolicyManagerTest.MANAGED_PROVISIONING_PKG ) ) ; } }
static boolean shouldPrefix ( java.lang.String typeName ) { return ( ( typeName . startsWith ( STRING_CONSTANT ) ) || ( typeName . startsWith ( STRING_CONSTANT ) ) ) && ( ! ( com.google.devtools.build.android.desugar.CoreLibraryRewriter . except ( typeName ) ) ) ; }
@ java.lang.Override public void onStart () { if ( ( mInstaller ) != null ) { android.util.Slog . i ( com.android.server.pm.Installer.TAG , STRING_CONSTANT ) ; mInstaller . waitForConnection () ; } }
public boolean couldBe ( double a ) { return couldBe ( a , NUMBER_CONSTANT ) ; }
private void expectNetworkStatsUidDetail ( android.net.NetworkStats detail ) throws java.lang.Exception { expectNetworkStatsUidDetail ( detail , new android.net.NetworkStats ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public void checkValidity () {}
public void checkOwnerOrSystemAndThrow () { if ( ( ( uid ) != ( android.os.Binder . getCallingUid () ) ) && ( ( android.os.Process.SYSTEM_UID ) != ( android.os.Binder . getCallingUid () ) ) ) { throw new java.lang.SecurityException ( STRING_CONSTANT ) ; } }
public boolean isBetterMatchThan ( com.android.ide.common.resources.configuration.ResourceQualifier compareTo , com.android.ide.common.resources.configuration.ResourceQualifier reference ) { return compareTo == null ; }
public boolean isSameMainPackageAs ( java.lang.Package pkg ) { if ( ( mMainPkg . canBeUpdatedBy ( pkg ) ) == ( com.android.sdklib.internal.repository.packages.Package.UpdateInfo.NOT_UPDATE ) ) { return mMainPkg . getRevision () . equals ( pkg . getRevision () ) ; } return false ; }
@ java.lang.Override public void onLoadFinished ( android.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { updateCallDetailsEntries ( com.android.dialer.calldetails.CallDetailsCursorLoader . toCallDetailsEntries ( activity , data ) ) ; activity . loadRttTranscriptAvailability () ; }
private void notifyChange ( android.net.Uri uri ) { getContext () . getContentResolver () . notifyChange ( uri , null ) ; }
protected void renameResource ( @ com.android.annotations.NonNull java.lang.Object [] testData , @ com.android.annotations.NonNull java.lang.Object resource , boolean updateReferences , @ com.android.annotations.NonNull java.lang.String newName , @ com.android.annotations.NonNull java.lang.String expected ) throws java.lang.Exception { renameResource ( testData , resource , updateReferences , newName , expected , null ) ; }
public dalvik.system.EmulatedStackFrame.StackFrameAccessor attach ( dalvik.system.EmulatedStackFrame stackFrame ) { return attach ( stackFrame , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public boolean verify ( int [] bitmap , int offset , int stride , int width , int height ) { return true ; }
@ java.lang.Override public boolean apply ( com.google.gct.testing.dimension.GoogleCloudTestingType type ) { return true ; }
public static < T > com.android.volley.Response < T > error ( com.android.volley.VolleyError error ) { return new com.android.volley.Response ( error ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { mHandler . obtainMessage ( com.android.server.net.NetworkPolicyManagerService.MSG_SCREEN_ON_CHANGED ) . sendToTarget () ; }
@ java.lang.Override public void onBatchCanceled () { if ( com.android.bluetooth.opp.BluetoothOppTransfer.V ) { android.util.Log . v ( com.android.bluetooth.opp.BluetoothOppTransfer.TAG , STRING_CONSTANT ) ; } this . stop () ; mBatch.mStatus = Constants.BATCH_STATUS_FINISHED ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.vfs.OutputVFile createOutputVFile ( @ javax.annotation.Nonnull com.android.sched.vfs.VPath path ) { return new com.android.sched.vfs.zip.OutputZipVFile ( zos , new java.util.zip.ZipEntry ( path . getPathAsString ( getSeparator () ) ) , zipFile , this ) ; }
@ java.lang.Override public void onDisplayChanged ( int displayId ) { if ( displayId == ( android.view.Display.DEFAULT_DISPLAY ) ) { final int oldState = mDefaultDisplayState ; mDefaultDisplayState = mDefaultDisplay . getState () ; if ( ( mDefaultDisplayState ) != oldState ) { updateScreenState ( false ) ; } } }
@ org.junit.Test public void logMessageSilentlyIgnoresExtraneousValuesEvenForEmptyFormat () { com.android.server.wifi.WifiLog.LogMessage logMessage = mLogger . err ( STRING_CONSTANT ) ; logMessage . c ( STRING_CONSTANT ) . c ( STRING_CONSTANT ) . flush () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , logMessage . toString () ) ; }
@ java.lang.Override public void onDestroy () { super . onDestroy () ; mScanner . stopScan ( mCallback ) ; }
@ java.lang.Override public java.io.File getApkMetadataFile () { return null ; }
@ java.lang.Override public java.lang.String getFormat () { return STRING_CONSTANT ; }
public static com.android.tools.perflib.heap.Instance getRefField ( com.android.tools.perflib.heap.Instance inst , java.lang.String fieldName ) { java.lang.Object value = com.android.ahat.InstanceUtils . getField ( inst , fieldName ) ; if ( ! ( value instanceof com.android.tools.perflib.heap.Instance ) ) { return null ; } return ( ( com.android.tools.perflib.heap.Instance ) ( value ) ) ; }
public static java.lang.String toTitleCase ( java.util.Locale locale , java.lang.String str , com.ibm.icu.text.BreakIterator breakiter ) { return com.ibm.icu.lang.UCharacter . toTitleCase ( locale , str , breakiter , NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void postCreatePages () { super . postCreatePages () ; }
public static void test () { int i = NUMBER_CONSTANT ; assertTrue ( ( ( i = NUMBER_CONSTANT ) == NUMBER_CONSTANT ) ) ; assertTrue ( ( i == NUMBER_CONSTANT ) ) ; }
@ com.android.internal.annotations.VisibleForTesting public int getResourceId () { return mResourceId ; }
public void visitTypeArgument () {}
public static com.android.server.wifi.ScanResults createOverflowing ( int id , int maxResults , com.android.server.wifi.ScanDetail . . . nativeResults ) { return new com.android.server.wifi.ScanResults ( id , false , maxResults , nativeResults ) ; }
@ java.lang.Override @ com.android.annotations.NonNull protected com.android.build.gradle.internal.variant.ApkVariantOutputData doCreateOutput () { return new com.android.build.gradle.internal.variant.ApkVariantOutputData ( this ) ; }
public void test_SSL_SESSION_free ( ) throws java.lang.Exception { try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_SESSION_free ( org.apache.harmony.xnet.provider.jsse.NativeCryptoTest.NULL ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ java.lang.Override public void error ( java.lang.String tag , java.lang.String message ) { java.lang.String description = describe ( message ) ; com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.ERROR , STRING_CONSTANT , mName , description ) ; addError ( tag , description ) ; }
public void run () { com.android.ide.eclipse.adt.internal.editors.descriptors.DescriptorsUtils . setDefaultLayoutAttributes ( uiNew , updateLayout ) ; uiNew . createXmlNode () ; }
public void paint ( java.awt.Graphics2D g2d , java.awt.geom.AffineTransform viewPortTransform , int screenWidth ) { java.awt.geom.AffineTransform originalTransform = g2d . getTransform () ; drawTimeLine ( g2d , viewPortTransform , screenWidth ) ; g2d . setTransform ( originalTransform ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.util.Log . i ( com.android.phone.MobileNetworkSettings.MobileNetworkFragment.LOG_TAG , STRING_CONSTANT ) ; updateBody () ; }
public void testNullId ( ) throws java.lang.Exception { try { java.util.TimeZone . getTimeZone ( ( ( java.lang.String ) ( null ) ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
@ javax.annotation.Nonnull com.android.sched.util.location.Location getLocation () { return location ; }
public java.lang.String getNfcHandoverSelect () { return mSupplicantP2pIfaceHal . getNfcHandoverSelect () ; }
private void assertPinnedToWifiWithCellDefault () { org.junit.Assert . assertEquals ( mWiFiNetworkAgent . getNetwork () , mCm . getBoundNetworkForProcess () ) ; org.junit.Assert . assertEquals ( mCellNetworkAgent . getNetwork () , mCm . getActiveNetwork () ) ; }
public static long LongRemainder () { long a ; long b ; long c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a % b ; return c ; }
@ java.lang.Override public java.lang.Void doInBackground ( java.lang.Void . . . args ) { java.security.MessageDigest md ; try { md = java.security.MessageDigest . getInstance ( STRING_CONSTANT ) ; } catch ( java.security.NoSuchAlgorithmException e ) { md = null ; } android.telecom.Log.sMessageDigest = md ; return null ; }
protected static int [] getIntValues ( int fieldId , int count ) throws java.lang.IllegalAccessException { int [] resultInts = new int [ count ] ; if ( count > NUMBER_CONSTANT ) { android.opengl.GLES20 . glGetIntegerv ( fieldId , resultInts , NUMBER_CONSTANT ) ; } return resultInts ; }
@ java.lang.Override public final byte [] getEncoded () { return org.conscrypt.NativeCrypto . i2d_PKCS8_PRIV_KEY_INFO ( key . getNativeRef () ) ; }
public void run () { mNM . notify ( NUMBER_CONSTANT , notificationWithNumbers ( NUMBER_CONSTANT ) ) ; mNM . notify ( NUMBER_CONSTANT , notificationWithNumbers ( NUMBER_CONSTANT ) ) ; }
private static com.google.i18n.phonenumbers.PhoneNumberUtil createInstance ( com.google.i18n.phonenumbers.MetadataSource metadataSource ) { if ( metadataSource == null ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } return new com.google.i18n.phonenumbers.PhoneNumberUtil ( metadataSource , com.google.i18n.phonenumbers.CountryCodeToRegionCodeMap . getCountryCodeToRegionCodeMap () ) ; }
void setConnectionState ( int mConnectionState ) { this . mConnectionState = mConnectionState ; }
public void dragStart ( org.eclipse.swt.dnd.DragSourceEvent e ) { com.android.ide.eclipse.adt.internal.editors.layout.gle2.GlobalCanvasDragInfo . getInstance () . startDrag ( mElements , null , null ) ; }
public abstract void retainIconForPageUrl ( java.lang.String url ) ;
private void pressDeleteKey ( int n ) { while ( n > NUMBER_CONSTANT ) { device . pressDelete () ; n -- ; } }
@ java.lang.Override public java.lang.Object expected () { return true ; }
@ java.lang.Override public KT getKey () { checkEntryStatus () ; return enumMap.keys [ ordinal ] ; }
@ java.lang.Override public void propertyChange ( org.eclipse.jface.util.PropertyChangeEvent event ) { if ( event . getSource () . equals ( mUseAdbHost ) ) { mAdbHostValue . setEnabled ( mUseAdbHost . getBooleanValue () , getFieldEditorParent () ) ; } super . propertyChange ( event ) ; }
@ java.lang.Override public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , com.android.ims.ImsCallProfile profile ) { isCreateCallSessionCalled = true ; return null ; }
public boolean isCategory1 () { switch ( basicType ) { case com.android.jack.dx.rop.type.Type.BT_LONG : case com.android.jack.dx.rop.type.Type.BT_DOUBLE : { return false ; } } return true ; }
public void testReplaceValue_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . replace ( null , one , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public static org.hamcrest.Matcher < java.lang.Object > anything ( java.lang.String description ) { return new org.hamcrest.core.IsAnything < java.lang.Object > ( description ) ; }
@ java.lang.Override public java.io.File getInstallFolder ( java.lang.String osSdkRoot , com.android.sdklib.SdkManager sdkManager ) { return new java.io.File ( osSdkRoot , getPath () ) ; }
public double acquire () { return acquire ( NUMBER_CONSTANT ) ; }
@ java.lang.Override public void loggedRun () { if ( mPendingCallsToDisconnect . remove ( call ) ) { android.telecom.Log . i ( this , STRING_CONSTANT , call ) ; call . disconnect () ; } }
@ java.lang.Override protected void updateActions () {}
public void dragStart ( org.eclipse.swt.dnd.DragSourceEvent e ) { com.android.ide.eclipse.adt.internal.editors.layout.gle2.GlobalCanvasDragInfo . getInstance () . startDrag ( mElements , null , null , null ) ; }
public static void setPreference ( java.lang.String key , java.lang.String value ) { junit.runner.BaseTestRunner . getPreferences () . put ( key , value ) ; }
void onBatchScanThresholdCrossed ( int clientIf ) { if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( STRING_CONSTANT + clientIf ) ) ; } flushPendingBatchResults ( clientIf ) ; }
public java.util.List < java.security.cert.X509Certificate > checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType , java.lang.String hostname ) throws java.security.cert.CertificateException { return checkTrusted ( chain , null , authType , hostname , false ) ; }
public void config ( java.lang.String msg ) { log ( java.util.logging.Level.CONFIG , msg ) ; }
@ java.lang.Override public void run () { if ( mTimeShiftManager . isAvailable () ) { mTimeShiftManager . jumpToPrevious () ; updateControls ( true ) ; } }
synchronized long nElementCreate2 ( long [] elements , java.lang.String [] names , int [] arraySizes ) { validate () ; return rsnElementCreate2 ( mContext , elements , names , arraySizes ) ; }
@ com.android.annotations.NonNull java.lang.String getTaskName ( @ com.android.annotations.NonNull java.lang.String prefix ) ;
static java.math.BigInt shift ( java.math.BigInt a , int n ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_shift ( r.bignum , a.bignum , n ) ; return r ; }
public final java.lang.String getName () { return name ; }
@ java.lang.Override public void run () { com.intellij.openapi.ui.Messages . showErrorDialog ( message , title ) ; }
@ java.lang.Override final void putFloatUnchecked ( int i , float x ) { putFloat ( ix ( i ) , x ) ; }
public void visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method , @ javax.annotation.Nonnull com.android.sched.transform.TransformRequest transformRequest ) throws java.lang.Exception { visit ( ( ( com.android.jack.ir.ast.JNode ) ( method ) ) , transformRequest ) ; }
abstract void putCharUnchecked ( int index , char value ) ;
@ java.lang.invoke.MethodHandle.PolymorphicSignature public final native void set ( java.lang.Object . . . args ) ;
public void execute ( ) throws org.apache.tools.ant.BuildException { try { proguard.ant.ProGuard proGuard = new proguard.ant.ProGuard ( configuration ) ; proGuard . execute () ; } catch ( java.io.IOException e ) { throw new org.apache.tools.ant.BuildException ( e . getMessage () , e ) ; } }
@ java.lang.Override public void srcToLib ( @ javax.annotation.Nonnull java.io.File out , boolean zipFiles , @ javax.annotation.Nonnull java.io.File . . . sources ) throws java.lang.Exception { srcToCommon ( sources ) ; setOutputJack ( out , zipFiles ) ; run () ; }
@ java.lang.Override public javax.net.ssl.SSLSocket createSocket ( java.net.Socket s , java.lang.String host , int port , boolean autoClose ) throws java.io.IOException { hostNameUsed . set ( host ) ; return ( ( javax.net.ssl.SSLSocket ) ( delegate . createSocket ( s , host , port , autoClose ) ) ) ; }
@ java.lang.Override public boolean contains ( java.lang.Object o ) { try { return ( o != null ) && ( ( unsafeBinarySearch ( o ) ) >= NUMBER_CONSTANT ) ; } catch ( java.lang.ClassCastException e ) { return false ; } }
private static java.lang.String getFileName ( java.lang.String filePath ) { return new java.io.File ( filePath ) . getName () ; }
@ com.android.annotations.Nullable @ java.lang.Override public java.io.File getOutputFile () { if ( ( zipAlignTask ) != null ) { return zipAlignTask . getOutputFile () ; } return ( packageApplicationTask ) == null ? null : packageApplicationTask . getOutputFile () ; }
@ java.lang.Override public final void accept ( com.android.tools.perflib.heap.Visitor visitor ) { visitor . visitRootObj ( this ) ; com.android.tools.perflib.heap.Instance instance = getReferredInstance () ; if ( instance != null ) { visitor . visitLater ( null , instance ) ; } }
private static int writeSize ( com.android.jack.dx.rop.annotation.Annotations annotations ) { assert annotations != null ; return ( ( annotations . size () ) * ( com.android.jack.dx.dex.file.AnnotationSetItem.ENTRY_WRITE_SIZE ) ) + NUMBER_CONSTANT ; }
@ java.lang.Override public int getLeMaximumAdvertisingDataLength () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return NUMBER_CONSTANT ; } return service . getLeMaximumAdvertisingDataLength () ; }
public void parse ( java.lang.String . . . args ) throws com.google.devtools.common.options.OptionsParsingException { parse ( OptionPriority.COMMAND_LINE , null , java.util.Arrays . asList ( args ) ) ; }
public void testRefactor2_renamesub_norefs ( ) throws java.lang.Exception { renamePackage ( com.android.ide.eclipse.adt.internal.refactorings.core.TEST_PROJECT2 , true , false , STRING_CONSTANT , ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) , false ) ; }
private static native void setFieldImpl ( java.lang.String field , java.lang.String signature , java.lang.Object stream ) ;
@ java.lang.Override public void setUiTTYMode ( int uiTtyMode , android.os.Message onComplete ) {}
public boolean setApfVersion ( int version ) { return version >= NUMBER_CONSTANT ; }
@ javax.annotation.Nonnull @ java.lang.Override public java.lang.String toString () { return ( STRING_CONSTANT + STRING_CONSTANT ) + ( value . toString () ) ; }
public java.lang.String getEncoding () { if ( ( encoder ) == null ) { return null ; } return encoder . charset () . name () ; }
@ java.lang.Override public void registrationProgressingWithRadioTech ( int imsRadioTech ) { if ( com.android.ims.ImsManager.DBG ) { com.android.ims.ImsManager . log ( ( STRING_CONSTANT + imsRadioTech ) ) ; } if ( ( mListener ) != null ) { mListener . onImsProgressing ( imsRadioTech ) ; } }
public static void writeString ( java.io.DataOutput out , @ org.jetbrains.annotations.NotNull java.lang.String s ) throws java.io.IOException { out . writeUTF ( s ) ; }
public void apply ( java.util.zip.ZipFile patchFile , java.io.File backupDir , java.io.File toDir ) throws java.io.IOException { doApply ( patchFile , backupDir , getFile ( toDir ) ) ; }
public static com.android.chimpchat.core.ISelector accessibilityIds ( int windowId , long accessibilityId ) { return new com.android.chimpchat.core.SelectorAccessibilityIds ( windowId , accessibilityId ) ; }
@ java.lang.Override public void uncaughtException ( java.lang.Thread t , java.lang.Throwable e ) { if ( e instanceof TestException ) { passed [ NUMBER_CONSTANT ] = true ; } super . uncaughtException ( t , e ) ; }
public static long getLength ( int id ) { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . lock () ; try { return com.intellij.openapi.vfs.newvfs.persistent.FSRecords . getRecords () . getLong ( com.intellij.openapi.vfs.newvfs.persistent.FSRecords . getOffset ( id , com.intellij.openapi.vfs.newvfs.persistent.FSRecords.LENGTH_OFFSET ) ) ; } finally { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . unlock () ; } }
public void plug ( long batteryUptime , long batteryRealtime ) { mPluggedCount = mCount . get () ; }
@ java.lang.Override public synchronized boolean onConnect ( android.bluetooth.BluetoothDevice device , android.bluetooth.BluetoothSocket socket ) { boolean isValid = mMapService . onConnect ( device , this ) ; if ( isValid ) { mRemoteDevice = device ; mConnSocket = socket ; } return isValid ; }
public long getRetainedSize ( com.android.ahat.heapdump.AhatHeap heap ) { int index = heap . getIndex () ; return ( NUMBER_CONSTANT <= index ) && ( index < ( mRetainedSizes.length ) ) ? mRetainedSizes [ heap . getIndex () ] : NUMBER_CONSTANT ; }
@ java.lang.Override public java.lang.String getSystemProperty ( java.lang.String key ) { return device . getProperty ( key ) ; }
public static void setMultiprocessEnabled ( boolean enabled ) { synchronized ( android.webkit.WebViewZygote.sLock ) { android.webkit.WebViewZygote.sMultiprocessEnabled = enabled ; if ( ! enabled ) { android.webkit.WebViewZygote . stopZygoteLocked () ; } } }
@ java.lang.Override public void fileServicesUpdated ( java.util.List < android.telephony.mbms.FileServiceInfo > services ) throws android.os.RemoteException {}
public java.util.List < android.bluetooth.BluetoothDevice > getConnectedDevices () { enforceCallingOrSelfPermission ( com.android.bluetooth.pbapclient.BLUETOOTH_PERM , STRING_CONSTANT ) ; int [] desiredStates = new int [] { android.bluetooth.BluetoothProfile.STATE_CONNECTED } ; return getDevicesMatchingConnectionStates ( desiredStates ) ; }
private void scanInternalSubtitleTracks () { setSubtitleAnchor () ; populateInbandTracks () ; if ( ( mSubtitleController ) != null ) { mSubtitleController . selectDefaultTrack () ; } }
public boolean setConfiguration ( java.lang.String [] folderSegments ) { com.android.ide.eclipse.adt.internal.resources.configurations.FolderConfiguration config = com.android.ide.eclipse.adt.internal.resources.configurations.FolderConfiguration . getConfig ( folderSegments ) ; if ( config == null ) { return false ; } setConfiguration ( config ) ; return true ; }
@ org.junit.Test public void test002e ( ) throws java.lang.Exception { java.io.File jackOutput ; try { jackOutput = runTest002 ( true , STRING_CONSTANT ) ; junit.framework.Assert . fail () ; } catch ( com.android.jack.resource.ResourceImportConflictException e ) {} }
int getAudioState ( android.bluetooth.BluetoothDevice device ) { return mStateMachine . getAudioState () ; }
@ java.lang.Override public void addRegistrationListener ( com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException { checkBinderConnection () ; getServiceInterface ( mBinder ) . addRegistrationListener ( mSlotId , ImsFeature.MMTEL , listener ) ; }
@ java.lang.Override public synchronized boolean isGroupingUsed () { return ( ( properties . getGroupingSize () ) > NUMBER_CONSTANT ) || ( ( properties . getSecondaryGroupingSize () ) > NUMBER_CONSTANT ) ; }
public void run () { pleaseCancel . countDown () ; try { delay ( jsr166.LONG_DELAY_MS ) ; threadShouldThrow () ; } catch ( java.lang.InterruptedException success ) {} catch ( java.lang.Throwable t ) { threadUnexpectedException ( t ) ; } throw new java.lang.RuntimeException () ; }
public void run () { mNM . notify ( NUMBER_CONSTANT , notificationWithNumbers ( NUMBER_CONSTANT ) ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_addPath ( long nPath , int src ) { android.graphics.Path_Delegate . addPath ( nPath , src , null ) ; }
protected void setSignalStrengthDefaultValues () { mSignalStrength = new android.telephony.SignalStrength ( false ) ; }
public void testAddNull () { java.util.TreeSet q = populatedSet ( jsr166.TreeSetTest.SIZE ) ; try { q . add ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void run () { while ( scanner . hasNextLine () ) { java.lang.String line = scanner . nextLine () ; result . add ( line ) ; } }
public boolean removeSdpRecord ( int recordId ) { if ( ! ( com.android.bluetooth.sdp.SdpManager.sNativeAvailable ) ) { throw new java.lang.RuntimeException ( ( ( com.android.bluetooth.sdp.SdpManager.TAG ) + STRING_CONSTANT ) ) ; } return sdpRemoveSdpRecordNative ( recordId ) ; }
public void test_null_id ( ) throws java.lang.Exception { try { libcore.icu.Transliterator t = new libcore.icu.Transliterator ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public static native int get_EVP_CIPHER_CTX_buf_len ( long ctx ) ;
public void decreaseSlideSize ( int decreaseSize ) { if ( decreaseSize > NUMBER_CONSTANT ) { mSlideSize -= decreaseSize ; if ( ( mSlideSize ) < NUMBER_CONSTANT ) { mSlideSize = NUMBER_CONSTANT ; } } }
synchronized void nAllocationRead ( long id , java.lang.Object d , android.renderscript.Element.DataType dt ) { validate () ; rsnAllocationRead ( mContext , id , d , dt.mID ) ; }
@ java.lang.Override public boolean isSynthetic () { return super . isSynthetic () ; }
@ java.lang.Override public void traverse ( @ javax.annotation.Nonnull com.android.sched.scheduler.ScheduleInstance < ? super com.android.sched.item.Component > schedule ) throws java.lang.Exception { schedule . process ( this ) ; lhs . traverse ( schedule ) ; for ( com.android.jack.ir.ast.JSsaVariableRef var : rhs ) { var . traverse ( schedule ) ; } }
@ javax.annotation.Nonnull public com.android.jack.lookup.JNodeLookup getLookup () { assert ( nodeLookup ) != null ; return nodeLookup ; }
@ java.lang.Override protected void cleanup () { if ( ( mStateMachine ) != null ) { mStateMachine . cleanup () ; } }
@ java.lang.Override final void putUnchecked ( int pos , float [] src , int srcOffset , int length ) { libcore.io.Memory . pokeFloatArray ( ix ( pos ) , src , srcOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
public double timeLog ( int reps ) { double result = d ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . log ( d ) ; } return result ; }
public com.android.util.Pair < java.lang.Integer , java.lang.Integer > getLayoutlibVersion () { return mLayoutlibVersion . getLayoutlibVersion () ; }
native long rsnAllocationGetType ( long con , long id ) ;
@ java.lang.Override public int queryCLIP ( ) throws android.os.RemoteException { return this . queryCLIP () ; }
@ java.lang.Override public void onCreate ( android.os.Bundle icicle ) { super . onCreate ( icicle ) ; mRS = android.renderscript.RenderScript . create ( this ) ; RSTC = new com.android.rs.test.RSTestCore ( this ) ; RSTC . init ( mRS ) ; }
static void logEvent ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) java.lang.String message ) {}
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface t ) throws java.lang.Exception { if ( needsCoverage ( t ) ) { t . addMarker ( new com.android.jack.coverage.CodeCoverageMarker () ) ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.mockito.MockitoAnnotations . initMocks ( this ) ; alwaysFailingMatcher = org.hamcrest.Matchers . nullValue ( android.view.View . class ) ; }
public static void main ( java.lang.String [] args ) throws java.lang.Throwable { Main . testfindSpecial_invokeSuperBehaviour () ; Main . testfindSpecial_invokeDirectBehaviour () ; }
public static float FloatAddition () { float a ; float b ; float c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a + b ; return c ; }
public void testCornerCase ( ) throws java.lang.Exception { mEnableIds = true ; assertEquals ( STRING_CONSTANT , lintProject ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
@ java.lang.Override public void onPause () { super . onPause () ; }
@ java.lang.Override public synchronized boolean isClosed () { return closed ; }
@ javax.annotation.Nonnull public com.android.jack.dx.rop.cst.CstFieldRef getFieldRef () { if ( ( fieldRef ) == null ) { fieldRef = new com.android.jack.dx.rop.cst.CstFieldRef ( getDefiningClass () , getName () , getDefiningClass () ) ; } return fieldRef ; }
public void testRefactor1_noreferences ( ) throws java.lang.Exception { renamePackage ( com.android.ide.eclipse.adt.internal.refactorings.core.TEST_PROJECT , false , false , STRING_CONSTANT , ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) , false ) ; }
public abstract void ignore ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) ;
public static void sort ( float [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JAnnotation annotation , @ javax.annotation.Nonnull com.android.sched.transform.TransformRequest transformRequest ) throws java.lang.Exception {}
public static native long EVP_CIPHER_CTX_new ( ) ;
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private void modifyClass ( org.objectweb.asm.tree.ClassNode classNode ) { classNode.access &= ~ ( org.objectweb.asm.Opcodes.ACC_FINAL ) ; java.util.List < org.objectweb.asm.tree.MethodNode > methodNodes = classNode.methods ; for ( org.objectweb.asm.tree.MethodNode methodNode : methodNodes ) { methodNode.access &= ~ ( org.objectweb.asm.Opcodes.ACC_FINAL ) ; fixMethodBody ( methodNode , classNode ) ; } }
private int getCallingThreadId () { return mCurrentThreadId . get () ; }
public void testAllowBackupOk2 ( ) throws java.lang.Exception { mEnabled = java.util.Collections . singleton ( ManifestDetector.ALLOW_BACKUP ) ; assertEquals ( STRING_CONSTANT , lintProject ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
com.google.common.util.concurrent.ListenableFuture < java.lang.Boolean > isDirty ( com.google.common.collect.ImmutableSet < com.android.dialer.DialerPhoneNumber > phoneNumbers ) ;
public static native long DSA_generate_key ( int primeBits , byte [] seed , byte [] g , byte [] p , byte [] q ) ;
public void visitFormalTypeParameter ( java.lang.String name ) {}
abstract void getUnchecked ( int pos , int [] dst , int dstOffset , int length ) ;
public static int ThreeBlocks ( boolean x , boolean y ) { if ( x ) { return NUMBER_CONSTANT ; } else if ( y ) { return NUMBER_CONSTANT ; } else { return NUMBER_CONSTANT ; } }
public boolean onSurfaceTextureDestroyed ( android.graphics.SurfaceTexture surface ) { if ( ( mCamera ) != null ) { mCamera . stopPreview () ; mCamera . release () ; } return true ; }
public void addInstanceField ( com.android.jack.dx.dex.file.EncodedField field ) { assert field != null ; instanceFields . add ( field ) ; }
@ java.lang.Override public int updateCallBarringForServiceClass ( int cbType , int action , java.lang.String [] barrList , int serviceClass ) throws android.os.RemoteException { return this . updateCallBarringForServiceClass ( cbType , action , barrList , serviceClass ) ; }
protected org.bouncycastle.crypto.tls.TlsStreamCipher createRC4Cipher ( org.bouncycastle.crypto.tls.TlsContext context , int cipherKeySize , int macAlgorithm ) throws java.io.IOException { return new org.bouncycastle.crypto.tls.TlsStreamCipher ( context , createRC4StreamCipher () , createRC4StreamCipher () , createHMACDigest ( macAlgorithm ) , createHMACDigest ( macAlgorithm ) , cipherKeySize , false ) ; }
protected void checkReportedError ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Severity severity , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) {}
public static void newConstructorInstance ( ) throws java.lang.Exception { java.lang.Class < > c = otherpackage.ConstructorAccess.Inner . class ; java.lang.reflect.Constructor cons = c . getDeclaredConstructor () ; java.lang.Object obj = cons . newInstance () ; }
public final void sendRttInitiationSuccess () { mListeners . forEach ( ( l ) - > l . onRttInitiationSuccess ( this ) ) ; }
@ java.lang.Override public byte [] getEncoded () { return org.conscrypt.NativeCrypto . i2d_PKCS8_PRIV_KEY_INFO ( key . getNativeRef () ) ; }
public java.lang.String getPackageFromManifest () { java.io.File manifestLocation = mDefaultSourceSet . getAndroidManifest () ; return com.android.builder.VariantConfiguration.sManifestParser . getPackage ( manifestLocation ) ; }
@ java.lang.Override public void type ( java.lang.String string ) { try { manager . type ( string ) ; } catch ( java.io.IOException e ) { com.android.monkeyrunner.adb.AdbMonkeyDevice.LOG . log ( java.util.logging.Level.SEVERE , ( STRING_CONSTANT + string ) , e ) ; } }
int getDiscoverableTimeout () { return mDiscoverableTimeout ; }
public void onMessageSendFailed ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) int messageId ) {}
public boolean await ( long nanosTimeout ) throws java.lang.InterruptedException { return sync . tryAcquireSharedNanos ( NUMBER_CONSTANT , nanosTimeout ) ; }
public static void assertDefaultEllipticCurves ( java.lang.String [] curves ) { org.junit.Assert . assertEquals ( libcore.java.security.StandardNames.ELLIPTIC_CURVES_DEFAULT , java.util.Arrays . asList ( curves ) ) ; }
private native boolean notifyDeviceStatusNative ( int networkState , int serviceType , int signal , int batteryCharge , byte [] address ) ;
private java.lang.String format ( long number , android.icu.text.NFRuleSet ruleSet ) { java.lang.StringBuffer result = new java.lang.StringBuffer () ; ruleSet . format ( number , result , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; postProcess ( result , ruleSet ) ; return result . toString () ; }
public static void initLogging ( android.content.Context context ) { android.telecom.Log . setTag ( com.android.services.telephony.Log.TAG ) ; android.telecom.Log . setSessionContext ( context ) ; }
private void expectSystemReady ( ) throws java.lang.Exception { expectNetworkStatsSummary ( buildEmptyStats () ) ; expectBandwidthControlCheck () ; }
private void testScriptSide ( android.renderscript.RenderScript pRS ) { com.android.rs.unittest.ScriptC_sampler s = new com.android.rs.unittest.ScriptC_sampler ( pRS ) ; initializeGlobals ( pRS , s ) ; s . invoke_sampler_test () ; pRS . finish () ; s . destroy () ; }
public android.net.IpSecManager.UdpEncapsulationSocket openUdpEncapsulationSocket ( ) throws android.net.IpSecManager.ResourceUnavailableException , java.io.IOException { return new android.net.IpSecManager.UdpEncapsulationSocket ( mService ) ; }
@ java.lang.Override public void visitEnd () { if ( ( companion ) != null ) { companion . visitEnd () ; } super . visitEnd () ; }
private void removeClientInfo ( com.android.ddmlib.Client client ) { int pid = client . getClientData () . getPid () ; mClientInfo . remove ( pid ) ; }
public static void sort ( double [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
native void rsnAllocationData3D ( long con , long id , int xoff , int yoff , int zoff , int mip , int w , int h , int depth , int [] d , int sizeBytes ) ;
@ java.lang.Override public int updateCallBarring ( int cbType , int action , java.lang.String [] barrList ) throws android.os.RemoteException { return this . updateCallBarring ( cbType , action , barrList ) ; }
com.google.common.util.concurrent.ListenableFuture < java.lang.Void > fill ( com.android.dialer.calllog.datasources.CallLogMutations mutations ) ;
public void testSignF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public static com.android.io.IAbstractFile getManifest ( com.android.io.IAbstractFolder projectFolder ) { com.android.io.IAbstractFile file = projectFolder . getFile ( SdkConstants.FN_ANDROID_MANIFEST_XML ) ; if ( ( file != null ) && ( file . exists () ) ) { return file ; } return null ; }
static boolean isFieldSet ( int fieldMask , int field ) { return ( fieldMask & ( NUMBER_CONSTANT < < field ) ) != NUMBER_CONSTANT ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { mFactory = null ; if ( mTestProc . exists () ) { libcore.io.IoUtils . deleteContents ( mTestProc ) ; } }
@ java.lang.Deprecated protected static com.ibm.icu.util.UResourceBundle loadFromCache ( java.lang.String fullName , com.ibm.icu.util.ULocale defaultLocale ) { synchronized ( com.ibm.icu.util.UResourceBundle.cacheKey ) { com.ibm.icu.util.UResourceBundle.cacheKey . setKeyValues ( fullName , defaultLocale ) ; return com.ibm.icu.util.UResourceBundle.BUNDLE_CACHE . get ( com.ibm.icu.util.UResourceBundle.cacheKey ) ; } }
@ java.lang.Override public int get ( int index ) { return byteBuffer . getInt ( ( index * ( libcore.io.SizeOf.INT ) ) ) ; }
@ java.lang.Override public void registerCallback ( android.bluetooth.IBluetoothCallback cb ) { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return; } service . registerCallback ( cb ) ; }
public void close ( ) throws java.io.IOException { if ( ( serverSocket ) != null ) { serverSocket . close () ; } for ( java.net.Socket client : clients ) { client . close () ; } }
@ java.lang.Override public void componentMoved ( java.awt.event.ComponentEvent e ) { repaint () ; }
public static void setEndpointIdentificationAlgorithm ( javax.net.ssl.SSLParameters params , java.lang.String endpointIdentificationAlgorithm ) { params . setEndpointIdentificationAlgorithm ( endpointIdentificationAlgorithm ) ; }
@ android.security.KeyStoreKeyConstraints.UserAuthenticatorEnum public int getUserAuthenticators () { return mUserAuthenticators ; }
@ java.lang.Override public java.security.SignatureSpi getCurrentSpi () { if ( ( lock ) == null ) { return sigSpi ; } synchronized ( lock ) { return sigSpi ; } }
public void addPhiOperand ( com.android.jack.dx.rop.code.RegisterSpec registerSpec , com.android.jack.dx.ssa.SsaBasicBlock predBlock ) { addPhiOperand ( registerSpec , predBlock . getIndex () , predBlock . getRopLabel () ) ; }
public static double ReturnDouble34 () { long imm = NUMBER_CONSTANT ; return ( ( double ) ( imm ) ) ; }
public static synchronized java.security.Provider getProvider ( java.lang.String name ) { if ( name == null ) { return null ; } return org.apache.harmony.security.fortress.Services.providersNames . get ( name ) ; }
@ java.lang.Override public int getAdapterConnectionState () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return android.bluetooth.BluetoothAdapter.STATE_DISCONNECTED ; } return service . getAdapterConnectionState () ; }
@ org.junit.Test public void testV1OneSignerMD5withRSAAccepted ( ) throws java.lang.Exception { assertVerifiedForEach ( STRING_CONSTANT , com.android.apksig.ApkVerifierTest.RSA_KEY_NAMES ) ; assertVerifiedForEach ( STRING_CONSTANT , com.android.apksig.ApkVerifierTest.RSA_KEY_NAMES ) ; }
@ android.support.annotation.WorkerThread public static void deleteAllVoicemail ( @ android.support.annotation.NonNull android.content.Context context ) { com.android.dialer.common.Assert . isWorkerThread () ; context . getContentResolver () . delete ( android.provider.VoicemailContract.Voicemails . buildSourceUri ( context . getPackageName () ) , null , null ) ; }
@ org.junit.Test public void testSetMode () { if ( ! ( mHasTelephony ) ) { return; } int audioMode = mAudioManager . getMode () ; mAudioManager . setMode ( AudioManager.MODE_IN_CALL ) ; org.junit.Assert . assertEquals ( audioMode , mAudioManager . getMode () ) ; }
protected abstract android.os.IInterface getBinder ( ) ;
@ org.junit.BeforeClass public static void setUpClass ( ) throws java.lang.Exception {}
public java.util.List < android.content.pm.ResolveInfo > queryIntent ( android.content.Intent intent , java.lang.String resolvedType , boolean defaultOnly , int userId ) { mFlags = ( defaultOnly ) ? android.content.pm.PackageManager.MATCH_DEFAULT_ONLY : NUMBER_CONSTANT ; return super . queryIntent ( intent , resolvedType , defaultOnly , userId ) ; }
public void setSize ( int size ) { this . size = size ; }
@ java.lang.Override public synchronized void testEnded ( com.android.ddmlib.testrunner.TestIdentifier test , java.util.Map < java.lang.String , java.lang.String > ignoredTestMetrics ) { mExecution . getListener () . notifyTestEnded ( new com.android.ide.eclipse.adt.internal.launch.junit.runtime.TestCaseReference ( test ) ) ; }
@ org.gradle.api.tasks.TaskAction public void sendToServer () { testServer . uploadApks ( getVariantName () , getTestApk () , getTestedApk () ) ; }
public org.eclipse.ui.IWorkingSet [] getSelectedWorkingSets () { try { return fWorkingSetBlock . getSelectedWorkingSets () ; } catch ( java.lang.Throwable t ) { return new org.eclipse.ui.IWorkingSet [ NUMBER_CONSTANT ] ; } }
public java.util.Locale.Builder setRegion ( java.lang.String region ) { this . region = java.util.Locale.Builder . normalizeAndValidateRegion ( region , true ) ; return this ; }
private final native void writeInt8Vector ( byte [] val ) ;
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { int selectedFrame = mFrameSelectionSpinner . getSelection () ; mFrameSelectionScale . setSelection ( selectedFrame ) ; selectFrame ( selectedFrame ) ; }
@ java.lang.Override public java.lang.Object clone ( ) throws java.lang.CloneNotSupportedException { return super . clone () ; }
@ java.lang.Override public java.util.List < android.bluetooth.BluetoothDevice > getConnectedDevices () { if ( com.android.bluetooth.hid.HidDevService.DBG ) { android.util.Log . d ( com.android.bluetooth.hid.HidDevService.BluetoothHidDeviceBinder.TAG , STRING_CONSTANT ) ; } return getDevicesMatchingConnectionStates ( new int [] { android.bluetooth.BluetoothProfile.STATE_CONNECTED } ) ; }
@ java.lang.Override public java.util.zip.ZipEntry getEntry ( java.lang.String name ) { java.util.zip.ZipEntry ze = super . getEntry ( name ) ; if ( ze == null ) { return ze ; } return new java.util.jar.JarEntry ( ze , this ) ; }
private void loadPackages () { loadPackages ( false , false ) ; }
@ java.lang.Override public java.lang.Object clone () { long cloneAddr = libcore.icu.NativeBreakIterator . cloneImpl ( this . address ) ; libcore.icu.NativeBreakIterator clone = new libcore.icu.NativeBreakIterator ( cloneAddr , this . type ) ; clone.string = this . string ; clone.charIterator = this . charIterator ; return clone ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.vfs.BaseVDir getRootDir () { return vfs . getRootDir () ; }
@ java.lang.Override protected void checkReportedError ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Severity severity , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { if ( issue == ( DuplicateResourceDetector.TYPE_MISMATCH ) ) { assertNotNull ( message , com.android.tools.lint.checks.DuplicateResourceDetector . getExpectedType ( message , com.android.tools.lint.detector.api.TextFormat.TEXT ) ) ; } }
@ java.lang.Override public javax.swing.JComponent createComponent ( java.lang.String type , com.android.tools.idea.templates.Parameter parameter ) { if ( ! ( com.google.gct.idea.cloudsave.CloudWizardParameterFactory.GOOGLE_PROJECT_SELECTOR_TYPENAME . equals ( type ) ) ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } return new com.google.gct.idea.elysium.ProjectSelector ( true ) ; }
public boolean startScan () { try { mService . startScan ( null , null ) ; return true ; } catch ( android.os.RemoteException e ) { return false ; } }
@ java.lang.Override public java.lang.String getMessage () { return ( ( getCause () . getMessage () ) + STRING_CONSTANT ) + ( prop ) ; }
@ java.lang.Override public long beforeHandshake ( long c ) throws javax.net.ssl.SSLException { long s = super . beforeHandshake ( c ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_set_client_CA_list ( s , org.apache.harmony.xnet.provider.jsse.NativeCryptoTest . getCaPrincipals () ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_set_verify ( s , NativeCrypto.SSL_VERIFY_PEER ) ; return s ; }
static native java.lang.reflect.Method [] getDeclaredMethods ( java.lang.Class < > c , boolean publicOnly ) ;
native boolean blurTest ( java.lang.String path , int X , int Y , byte [] input , byte [] output , boolean singleChannel ) ;
@ java.lang.Override public void clientReadPhy ( int clientIf , java.lang.String address ) { com.android.bluetooth.gatt.GattService service = getService () ; if ( service == null ) return; service . clientReadPhy ( clientIf , address ) ; }
private boolean isAliasProject () { return ( ! ( com.android.activitycreator.ActivityCreator . isStringEmpty ( mAliasData ) ) ) && ( ! ( com.android.activitycreator.ActivityCreator . isStringEmpty ( mApplicationLabel ) ) ) ; }
private void a2 ( java.lang.StringBuilder sb , int x ) { if ( x < NUMBER_CONSTANT ) { sb . append ( CHAR_CONS ) ; } sb . append ( x ) ; }
public static com.android.ide.eclipse.gltrace.GLEnum valueOf ( final long value ) { return com.android.ide.eclipse.gltrace.GLEnum.reverseMap . get ( value ) ; }
public int offsetByCodePoints ( int index , int codePointOffset ) { if ( ( index < NUMBER_CONSTANT ) || ( index > ( length () ) ) ) { throw new java.lang.IndexOutOfBoundsException () ; } return java.lang.Character . offsetByCodePoints ( this , index , codePointOffset ) ; }
public void testStandaloneWeekdayFormatting ( ) throws java.lang.Exception { java.util.Locale fi = new java.util.Locale ( STRING_CONSTANT ) ; assertEquals ( STRING_CONSTANT , formatDateUtc ( fi , STRING_CONSTANT ) ) ; assertEquals ( STRING_CONSTANT , formatDateUtc ( fi , STRING_CONSTANT ) ) ; }
private boolean isEnabled () { return ( mAdapter . getState () ) == ( BluetoothAdapter.STATE_ON ) ; }
@ org.junit.Test public void testCheckStructure21WithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.JillTestTools . getJackTestsWithJackFolder ( STRING_CONSTANT ) , false ) ; }
@ java.lang.Override public synchronized V getOrDefault ( java.lang.Object key , V defaultValue ) { V result = get ( key ) ; return null == result ? defaultValue : result ; }
public void setRemoteAddress ( java.lang.String remoteAddress ) { mRemoteAddress = remoteAddress ; }
@ java.lang.Override public int size () { return size ; }
public android.icu.impl.UResource.TableSink getOrCreateTableSink ( int index ) { return null ; }
@ java.lang.Override @ android.support.annotation.MainThread public void setDayGroup ( long rowId , int dayGroup ) { mDayGroups . put ( rowId , dayGroup ) ; }
@ java.lang.Override public android.telephony.ims.ImsCallProfile createCallProfile ( int callSessionType , int callType ) throws android.os.RemoteException { synchronized ( mLock ) { try { return this . createCallProfile ( callSessionType , callType ) ; } catch ( java.lang.Exception e ) { throw new android.os.RemoteException ( e . getMessage () ) ; } } }
@ java.lang.Override public void callSessionMergeStarted ( com.android.ims.internal.IImsCallSession newSession , com.android.ims.ImsCallProfile profile ) { android.util.Log . d ( com.android.ims.internal.ImsCallSession.TAG , STRING_CONSTANT ) ; }
private java.lang.String readUTF8 ( int length ) throws java.io.IOException { byte [] b = new byte [ length ] ; mInput . read ( b ) ; return new java.lang.String ( b , STRING_CONSTANT ) ; }
void silenceRingers () { for ( com.android.server.telecom.Call call : mRingingCalls ) { call . silence () ; } mRinger . stopRinging () ; mRinger . stopCallWaiting () ; }
abstract void putDoubleUnchecked ( int index , double value ) ;
@ com.android.internal.annotations.VisibleForTesting public int getBondState ( android.bluetooth.BluetoothDevice device ) { enforceCallingOrSelfPermission ( com.android.bluetooth.btservice.AdapterService.BLUETOOTH_PERM , STRING_CONSTANT ) ; com.android.bluetooth.btservice.RemoteDevices.DeviceProperties deviceProp = mRemoteDevices . getDeviceProperties ( device ) ; if ( deviceProp == null ) { return android.bluetooth.BluetoothDevice.BOND_NONE ; } return deviceProp . getBondState () ; }
@ java.lang.Override public android.telephony.mbms.DownloadStatus getDownloadStatus ( android.telephony.mbms.DownloadRequest downloadRequest ) throws android.os.RemoteException { return null ; }
@ java.lang.Override void detachFunctor ( long functor ) { if ( ( mCanvas ) != null ) { mCanvas . detachFunctor ( functor ) ; } }
public void testReplaceValue2_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . replace ( STRING_CONSTANT , null , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public boolean setException ( java.lang.Throwable t ) { return futureValue . setException ( t ) ; }
@ java.lang.Override public void onDialerCallSessionModificationStateChange () { if ( ( mDialerCall . getVideoTech () . getSessionModificationState () ) == ( com.android.incallui.videotech.utils.SessionModificationState.NO_REQUEST ) ) { cleanup () ; updateNotification () ; } }
public void ensureInitialized ( ) throws org.chromium.base.library_loader.ProcessInitException { synchronized ( org.chromium.base.library_loader.LibraryLoader.sLock ) { if ( mInitialized ) { return; } loadAlreadyLocked ( org.chromium.base.ContextUtils . getApplicationContext () ) ; initializeAlreadyLocked () ; } }
@ java.lang.Override public com.android.ims.internal.IImsCallSession createCallSession ( com.android.ims.ImsCallProfile profile ) throws android.os.RemoteException { synchronized ( mLock ) { com.android.ims.internal.ImsCallSession s = this . createCallSession ( profile ) ; return s != null ? s . getSession () : null ; } }
@ java.lang.Override public boolean isMwiDontStore () { if ( ( isMwi ) && ( mwiDontStore ) ) { return true ; } if ( isCphsMwiMessage () ) { if ( STRING_CONSTANT . equals ( getMessageBody () ) ) { return true ; } } return false ; }
@ java.lang.Override public android.database.Cursor loadInBackground () { android.database.Cursor cursor = super . loadInBackground () ; com.android.dialer.searchfragment.cp2.ContactFilterCursor contactFilterCursor = new com.android.dialer.searchfragment.cp2.ContactFilterCursor ( cursor , query , getContext () ) ; return com.android.dialer.searchfragment.cp2.SearchContactsCursor . newInstance ( getContext () , contactFilterCursor ) ; }
@ java.lang.Override final void putUnchecked ( int pos , long [] src , int srcOffset , int length ) { libcore.io.Memory . pokeLongArray ( ix ( pos ) , src , srcOffset , length , ( ! ( nativeByteOrder ) ) ) ; }
public static void main ( java.lang.String [] args ) { Main . doTest () ; Main . testGetTaggedObjects () ; }
public static android.graphics.Rasterizer_Delegate getDelegate ( long nativeShader ) { return android.graphics.Rasterizer_Delegate.sManager . getDelegate ( nativeShader ) ; }
@ java.lang.Override protected void engineUpdate ( byte b ) throws java.security.SignatureException {}
@ java.lang.Override public void close ( ) throws java.io.IOException { synchronized ( channel ) { super . close () ; if ( channel . isOpen () ) { channel . close () ; } } }
@ java.lang.Override public void computeDeployments ( @ org.jetbrains.annotations.NotNull com.intellij.appengine.cloud.ComputeDeploymentsCallback callback ) { callback . succeeded () ; }
public ScriptGroup2.Closure prepInit ( android.renderscript.ScriptGroup2.Builder b ) { cInit = b . addInvoke ( s . getInvokeID_prepareShadows () , NUMBER_CONSTANT ) ; return cInit ; }
@ java.lang.Override public com.google.common.collect.ImmutableSet < com.google.common.collect.Table.Cell < R , C , V > > cellSet () { return ( ( com.google.common.collect.ImmutableSet < com.google.common.collect.Table.Cell < R , C , V > > ) ( super . cellSet () ) ) ; }
private java.lang.String getCaCertField () { return mEnterpriseConfig . getFieldValue ( WifiEnterpriseConfig.CA_CERT_KEY ) ; }
protected void loge ( java.lang.String s , java.lang.Exception e ) { if ( com.android.internal.telephony.cdma.CDMAPhone.DBG ) android.telephony.Rlog . e ( com.android.internal.telephony.cdma.CDMAPhone.LOG_TAG , s , e ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.util.config.id.PropertyId < > . IValueObject < T > getValueObject ( @ javax.annotation.Nonnull com.android.sched.util.codec.CodecContext context ) { return new IValueObject < T > ( context , this . codec . parseString ( context , value ) ) ; }
@ java.lang.Override public void testRunStarted ( java.lang.String runName , int numTests ) { mRunResult = new com.android.ddmlib.testrunner.TestRunResult () ; mRunResult . testRunStarted ( runName , numTests ) ; }
@ com.android.annotations.Nullable private static com.android.tools.lint.TypeDescriptor getTypeDescriptor ( @ com.android.annotations.Nullable org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType ) { if ( resolvedType == null ) { return null ; } return new com.android.tools.lint.EcjParser.EcjTypeDescriptor ( resolvedType ) ; }
static int remainderByPositiveInt ( java.math.BigInt a , int w ) { return java.math.NativeBN . BN_mod_word ( a.bignum , w ) ; }
private void loadResources () { com.android.ddmuilib.ImageLoader loader = com.android.ddmuilib.ImageLoader . getDdmUiLibLoader () ; fileImage = loader . loadImage ( STRING_CONSTANT , org.eclipse.swt.widgets.Display . getDefault () ) ; folderImage = loader . loadImage ( STRING_CONSTANT , org.eclipse.swt.widgets.Display . getDefault () ) ; }
protected android.graphics.Bitmap captureRenderSpec ( android.uirendering.cts.testinfrastructure.ActivityTestBase.TestCase testCase ) { return takeScreenshot ( runRenderSpec ( testCase ) ) ; }
@ java.lang.Override public void onConnectionServiceChanged ( com.android.server.telecom.Call call , com.android.server.telecom.ConnectionServiceWrapper oldService , com.android.server.telecom.ConnectionServiceWrapper newService ) { updateCall ( call ) ; }
@ java.lang.Override public org.objectweb.asm.AnnotationVisitor visitParameterAnnotation ( int parameter , java.lang.String desc , boolean visible ) { org.objectweb.asm.AnnotationVisitor av = super . visitParameterAnnotation ( parameter , remapper . mapDesc ( desc ) , visible ) ; return av == null ? av : new org.objectweb.asm.commons.RemappingAnnotationAdapter ( av , remapper ) ; }
@ java.lang.Override public int size () { return size ; }
private static boolean checkFileAccess ( @ javax.annotation.Nonnull java.lang.String fileName ) { try { java.io.File file = new java.io.File ( fileName ) ; com.android.sched.util.file.FileOrDirectory . checkPermissions ( file , new com.android.sched.util.location.FileLocation ( fileName ) , Permission.READ ) ; } catch ( com.android.sched.util.file.WrongPermissionException e ) { return false ; } return true ; }
@ java.lang.Deprecated @ com.android.annotations.Nullable public com.android.tools.lint.client.api.JavaParser.TypeDescriptor getType ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.JavaContext context , @ com.android.annotations.NonNull lombok.ast.Node node ) { return null ; }
@ javax.annotation.Nonnull protected com.android.jack.dx.dex.file.DexFile createDexFile () { com.android.jack.dx.dex.DexOptions options = new com.android.jack.dx.dex.DexOptions ( apiLevel , forceJumbo ) ; return new com.android.jack.dx.dex.file.DexFile ( options ) ; }
@ java.lang.Override public synchronized double getMax () { ensureSorted () ; return samples [ ( ( count ) - NUMBER_CONSTANT ) ] ; }
public static void loop9 () { while ( ( java.lang.Runtime . getRuntime () ) != null ) { boolean incoming = Main.field ; while ( incoming ) {} } }
@ java.lang.Override public T next () { T result = iterator . next () ; atStart = false ; return result ; }
public void testForName_InvalidInitialCharacter () { try { java.nio.charset.Charset . forName ( STRING_CONSTANT ) ; fail () ; } catch ( java.lang.IllegalArgumentException expected ) {} }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { synchronize ( true ) ; }
android.net.NetworkScoreManager getNetworkScoreManager () { android.net.NetworkScoreManager networkScoreManager = mock ( android.net.NetworkScoreManager . class ) ; return networkScoreManager ; }
public java.util.List < java.security.cert.X509Certificate > checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType , java.lang.String host ) throws java.security.cert.CertificateException { return checkTrusted ( chain , authType , host , false ) ; }
void addResourceValue ( com.android.ide.common.rendering.api.ResourceValue value ) ;
public void lockNow ( @ android.app.admin.DevicePolicyManager.LockNowFlag int flags ) { if ( ( mService ) != null ) { try { mService . lockNow ( flags , mParentInstance ) ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } } }
private void setThumbPos ( float scale ) { final android.graphics.drawable.Drawable thumb = mThumb ; if ( thumb != null ) { setThumbPos ( getWidth () , thumb , scale , java.lang.Integer.MIN_VALUE ) ; invalidate () ; } }
@ java.lang.Override public void enter () { super . enter () ; mCurrInd = NUMBER_CONSTANT ; mFolderList . clear () ; callNativeFunctionForScope ( mStartInd , java.lang.Math . min ( mEndInd , ( ( ( mStartInd ) + ( com.android.bluetooth.avrcpcontroller.AvrcpControllerStateMachine.GET_FOLDER_ITEMS_PAGINATION_SIZE ) ) - NUMBER_CONSTANT ) ) ) ; }
@ org.junit.Test public void testInitialize_nullInterfaceFailure ( ) throws java.lang.Exception { executeAndValidateInitializationSequence ( false , false , true , false ) ; }
public void setCc ( java.util.ArrayList < android.text.util.Rfc822Token > cc ) { this . cc = cc ; }
public static void assertEquals ( int expected , int result ) { if ( expected != result ) { throw new java.lang.Error ( ( ( ( STRING_CONSTANT + expected ) + STRING_CONSTANT ) + result ) ) ; } }
@ java.lang.Override public void callSessionHandover ( int srcAccessTech , int targetAccessTech , com.android.ims.ImsReasonInfo reasonInfo ) { if ( ( mListener ) != null ) { mListener . callSessionHandover ( this , srcAccessTech , targetAccessTech , reasonInfo ) ; } }
@ java.lang.Override public boolean onError ( android.media.MediaPlayer mp , int newWhat , int extra ) { what = newWhat ; lock . lock () ; condition . signal () ; lock . unlock () ; return true ; }
@ org.junit.Test public void testConnectFailureDueToNetworkSelectFailure ( ) throws java.lang.Exception { executeAndValidateInitializationSequence () ; setupMocksForConnectSequence ( false ) ; org.mockito.Mockito . when ( mSupplicantStaNetworkMock . select () ) . thenReturn ( false ) ; assertFalse ( mDut . connectToNetwork ( new android.net.wifi.WifiConfiguration () ) ) ; }
synchronized void nAllocationData1D ( long id , int off , int mip , int count , int [] d , int sizeBytes ) { validate () ; rsnAllocationData1D ( mContext , id , off , mip , count , d , sizeBytes ) ; }
public void runEditHooks () { if ( ! ( mIgnoreXmlUpdate ) ) { if ( com.android.ide.eclipse.adt.internal.preferences.AdtPrefs . getPrefs () . isLintOnSave () ) { runLint () ; } } }
public void setSize ( long value ) { size = value ; }
@ java.lang.Override public android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return null ; } return service . reportActivityInfo () ; }
private java.lang.String getMinSdkVersion () { java.lang.String injectedMinSdk = mSystemPropertyResolver . getValue ( SystemProperty.MIN_SDK_VERSION ) ; if ( injectedMinSdk != null ) { return injectedMinSdk ; } return getRawMinSdkVersion () ; }
public static java.util.ArrayList < java.lang.Byte > byteArrayToArrayList ( byte [] bytes ) { java.util.ArrayList < java.lang.Byte > byteList = new java.util.ArrayList <> () ; for ( java.lang.Byte b : bytes ) { byteList . add ( b ) ; } return byteList ; }
@ java.lang.Override public void enter () { if ( com.android.server.wifi.SupplicantStateTracker.DBG ) android.util.Log . d ( com.android.server.wifi.SupplicantStateTracker.TAG , ( ( getName () ) + STRING_CONSTANT ) ) ; if ( mNetworksDisabledDuringConnect ) { mNetworksDisabledDuringConnect = false ; } }
@ java.lang.Override public int queryCallBarringForServiceClass ( int cbType , int serviceClass ) throws android.os.RemoteException { return this . queryCallBarringForServiceClass ( cbType , serviceClass ) ; }
public float timeAbsF ( int reps ) { float result = f ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . abs ( f ) ; } return result ; }
private void updateCallDetailsEntries ( com.android.dialer.calldetails.CallDetailsEntries newEntries ) { activity . setCallDetailsEntries ( newEntries ) ; com.android.dialer.enrichedcall.EnrichedCallComponent . get ( activity ) . getEnrichedCallManager () . requestAllHistoricalData ( activity . getNumber () , newEntries ) ; }
@ javax.annotation.Nonnull public static org.jf.dexlib2.Opcodes getDefault () { return org.jf.dexlib2.Opcodes . forApi ( NUMBER_CONSTANT ) ; }
private static native java.lang.String formatDateInterval ( long address , long fromDate , long toDate ) ;
@ java.lang.Override public boolean isVarArgs () { return super . isVarArgs () ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , org.conscrypt.NativeCrypto . ERR_peek_last_error () ) ; }
public java.util.Locale build () { return new java.util.Locale ( language , region , variant , script , attributes , keywords , extensions , true ) ; }
public static native void SSL_shutdown ( long sslNativePointer , java.io.FileDescriptor fd , org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSLHandshakeCallbacks shc ) throws java.io.IOException ;
public static java.nio.ByteBuffer allocateDirect ( int capacity ) { java.nio.DirectByteBuffer.MemoryRef memoryRef = new java.nio.DirectByteBuffer.MemoryRef ( capacity ) ; return new java.nio.DirectByteBuffer ( capacity , memoryRef ) ; }
public static int IntAddition1 () { int a ; int b ; int c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a + b ; return c ; }
private void log ( java.lang.String s ) { android.telephony.Rlog . d ( com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager.LOG_TAG , s ) ; }
public java.util.List < java.security.cert.X509Certificate > checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType , java.lang.String host ) throws java.security.cert.CertificateException { return mDelegate . checkServerTrusted ( chain , authType , host ) ; }
public int startSession ( android.app.PendingIntent incomingCallIntent , com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException { synchronized ( mLock ) { checkServiceIsReady () ; return getServiceInterface ( mBinder ) . startSession ( incomingCallIntent , listener ) ; } }
public static native void EVP_VerifyUpdate ( long ctx , byte [] buffer , int offset , int length ) ;
@ java.lang.Override public void onActionModeStarted ( android.view.ActionMode mode ) { mUi . onActionModeStarted ( mode ) ; mActionMode = mode ; }
public java.lang.String getHostName () { try { return java.net.InetAddress . getLocalHost () . getHostName () ; } catch ( java.net.UnknownHostException e ) { throw new java.lang.AssertionError ( e ) ; } }
boolean isDeviceProvisioned () { return ( Settings.Secure . getInt ( mContext . getContentResolver () , Settings.Secure.DEVICE_PROVISIONED , NUMBER_CONSTANT ) ) != NUMBER_CONSTANT ; }
@ java.lang.Override protected void onPause () { super . onPause () ; log ( STRING_CONSTANT ) ; mTelephonyManager . listen ( mPhoneStateListener , PhoneStateListener.LISTEN_NONE ) ; mTelephonyManager . setCellInfoListRate ( com.android.settings.RadioInfo.CELL_INFO_LIST_RATE_DISABLED ) ; }
void doit () { try { java.lang.System.out . println ( ( STRING_CONSTANT + ( this . f ) ) ) ; java.lang.System.out . println ( STRING_CONSTANT ) ; } catch ( java.lang.IncompatibleClassChangeError icce ) { java.lang.System.out . println ( STRING_CONSTANT ) ; } }
public void closeSupplicantConnection () { if ( com.android.server.wifi.WifiNative.HIDL_SUP_ENABLE ) {} else { synchronized ( com.android.server.wifi.WifiNative.sLock ) { localLog ( ( ( mInterfacePrefix ) + STRING_CONSTANT ) ) ; com.android.server.wifi.WifiNative . closeSupplicantConnectionNative () ; } } }
public void setCondition ( boolean condition ) { mCondition = condition ; mConditionIsSet = true ; }
protected void onCreate ( android.os.Bundle icicle ) { super . onCreate ( icicle ) ; }
public static native long SSL_do_handshake ( long sslNativePointer , java.io.FileDescriptor fd , org.conscrypt.NativeCrypto.SSLHandshakeCallbacks shc , int timeoutMillis , boolean client_mode , byte [] alpnProtocols ) throws java.net.SocketTimeoutException , java.security.cert.CertificateException , javax.net.ssl.SSLException ;
private void stopScan () { if ( com.android.cts.verifier.bluetooth.BleClientService.DEBUG ) android.util.Log . d ( com.android.cts.verifier.bluetooth.BleClientService.TAG , STRING_CONSTANT ) ; mScanner . stopScan ( mScanCallback ) ; }
@ java.lang.Override public final com.google.common.base.CharMatcher precomputed () { return this ; }
void doQuit () { if ( ( mHandlerThread ) != null ) { mHandlerThread . quitSafely () ; } quitNow () ; }
@ java.lang.Override public long beforeHandshake ( long c ) throws javax.net.ssl.SSLException { long s = org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_new ( clientContext ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_set_session ( s , clientSession [ NUMBER_CONSTANT ] ) ; return s ; }
@ org.junit.AfterClass public static void tearDownOnlyOnce ( ) throws java.lang.Exception { java.lang.reflect.Method method = com.android.bluetooth.btservice.AdapterService . class . getDeclaredMethod ( STRING_CONSTANT , com.android.bluetooth.btservice.AdapterService . class ) ; method . setAccessible ( true ) ; method . invoke ( null , com.android.bluetooth.hfp.HeadsetStateMachineTest.sAdapterService ) ; com.android.bluetooth.hfp.HeadsetStateMachineTest.sAdapterService = null ; }
@ org.junit.Test public void testConnectWithNoDisconnectAndEmptyExistingNetworks ( ) throws java.lang.Exception { executeAndValidateInitializationSequence () ; executeAndValidateConnectSequence ( NUMBER_CONSTANT , false , false ) ; }
public static int getFlags ( int id ) { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . lock () ; try { return com.intellij.openapi.vfs.newvfs.persistent.FSRecords . getRecordInt ( id , com.intellij.openapi.vfs.newvfs.persistent.FSRecords.FLAGS_OFFSET ) ; } finally { com.intellij.openapi.vfs.newvfs.persistent.FSRecords.r . unlock () ; } }
@ org.junit.Test public void test () { org.junit.Assert . assertNotNull ( STRING_CONSTANT , runnable ) ; }
public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_do_handshake ( org.apache.harmony.xnet.provider.jsse.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT , false , null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public void testGetCollationElementIteratorString_de_DE ( ) throws java.lang.Exception { assertGetCollationElementIteratorString ( new java.util.Locale ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) , STRING_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public org.bouncycastle.cert.X509v2CRLBuilder setNextUpdate ( org.bouncycastle.asn1.x509.Time date ) { tbsGen . setNextUpdate ( date ) ; return this ; }
boolean permissionCheck ( java.util.UUID uuid ) { return ! ( ( isRestrictedCharUuid ( uuid ) ) && ( NUMBER_CONSTANT != ( checkCallingOrSelfPermission ( com.android.bluetooth.gatt.BLUETOOTH_PRIVILEGED ) ) ) ) ; }
public void testFieldReferences ( ) throws java.lang.Exception { checkExpression ( NUMBER_CONSTANT , STRING_CONSTANT ) ; checkExpression ( STRING_CONSTANT , STRING_CONSTANT ) ; checkExpression ( STRING_CONSTANT , STRING_CONSTANT ) ; checkExpression ( ( - NUMBER_CONSTANT ) , STRING_CONSTANT ) ; }
@ java.lang.Override public android.telephony.ImsiEncryptionInfo getCarrierInfoForImsiEncryption ( int keyType ) { return com.android.internal.telephony.CarrierInfoManager . getCarrierInfoForImsiEncryption ( keyType , mContext ) ; }
@ android.support.annotation.VisibleForTesting boolean isEnhanced4gLteHidden () { return com.android.phone.MobileNetworkSettings . hideEnhanced4gLteSettings ( getContext () ) ; }
void releasePendingPointerLocked ( com.android.server.WindowManagerService.Session s ) { if ( com.android.server.WindowManagerService.DEBUG_INPUT ) android.util.Slog . v ( com.android.server.WindowManagerService.TAG , ( STRING_CONSTANT + ( s.mPendingPointerMove ) ) ) ; if ( ( s.mPendingPointerMove ) != null ) { mQueue . recycleEvent ( s.mPendingPointerMove ) ; s.mPendingPointerMove = null ; } }
static void checkNonnegative ( int position ) { if ( position < NUMBER_CONSTANT ) { throw new java.lang.IndexOutOfBoundsException ( ( ( STRING_CONSTANT + position ) + STRING_CONSTANT ) ) ; } }
private void writeObject ( java.io.ObjectOutputStream stream ) throws java.io.IOException { stream . defaultWriteObject () ; stream . writeObject ( getEncoded () ) ; }
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( o instanceof com.android.internal.telephony.dataconnection.DataProfile ) == false ) return false ; return ( o == ( this ) ) || ( toString () . equals ( o . toString () ) ) ; }
public static void wakeUpService ( android.content.Context context ) { if ( android.util.Log . isLoggable ( LogTag.TRANSACTION , Log.VERBOSE ) ) { android.util.Log . v ( com.android.mms.transaction.MmsSystemEventReceiver.TAG , STRING_CONSTANT ) ; } context . startService ( new android.content.Intent ( context , com.android.mms.transaction.TransactionService . class ) ) ; }
private static java.lang.String getLockName ( java.lang.Enum < > rank ) { return ( ( rank . getDeclaringClass () . getSimpleName () ) + STRING_CONSTANT ) + ( rank . name () ) ; }
@ java.lang.Override @ javax.annotation.Nonnull java.io.OutputStream openWrite ( @ javax.annotation.Nonnull com.android.sched.vfs.CaseInsensitiveFS.CaseInsensitiveVFile file , boolean append ) throws com.android.sched.util.file.WrongPermissionException { return file . getEncodedFile () . getOutputStream ( append ) ; }
public void test_getDelegatedTask ( ) throws java.lang.Exception { javax.net.ssl.SSLEngine sse = getEngine () ; assertNull ( sse . getDelegatedTask () ) ; }
public boolean hasDiff () { return ( removed ) || ( added ) ; }
public void error ( java.lang.String tag , java.lang.String message , java.lang.Throwable throwable , java.lang.Object data ) {}
@ java.lang.Override public void onAnimationStart ( android.view.animation.Animation animation ) {}
public void addDynamicConfigFile ( java.lang.String moduleName , java.io.File configFile ) { mBuildInfo . addBuildAttribute ( ( ( com.android.compatibility.common.util.DynamicConfigHostSide.CONFIG_PATH_PREFIX ) + moduleName ) , configFile . getAbsolutePath () ) ; }
@ java.lang.Override public void run () { notificationManager . notify ( notificationId , notification ) ; }
static void initAtlas ( android.view.GraphicBuffer buffer , long [] map ) { android.view.GLES20Canvas . nInitAtlas ( buffer , map , map.length ) ; }
public boolean unregisterListener ( com.android.sdklib.devices.DeviceManager.DevicesChangeListener listener ) { return com.android.sdklib.devices.DeviceManager.listeners . remove ( listener ) ; }
public boolean p2pServDiscCancelReq ( java.lang.String id ) { return mSupplicantP2pIfaceHal . cancelServiceDiscovery ( id ) ; }
public void logIn () { users . removeActiveUser () ; logIn ( null , null ) ; }
public void copy1DRangeFrom ( int off , int count , float [] d ) { validateIsFloat32 () ; copy1DRangeFromUnchecked ( off , count , d , Element.DataType.FLOAT_32 , d.length ) ; }
public static void assertEquals ( char expected , char actual ) { if ( actual != expected ) { throw new java.lang.AssertionError ( ( ( ( ( STRING_CONSTANT + actual ) + STRING_CONSTANT ) + expected ) + STRING_CONSTANT ) ) ; } }
public static void computeLog10 ( android.renderscript.cts.TestLog10.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . log10 ( args.inV , t ) ; }
public static void sort ( float [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
private static boolean isAospBuildEnvironment () { if ( ( com.android.tools.lint.detector.api.Project.sAospBuild ) == null ) { com.android.tools.lint.detector.api.Project.sAospBuild = ( com.android.tools.lint.detector.api.Project . getAospTop () ) != null ; } return com.android.tools.lint.detector.api.Project.sAospBuild ; }
@ java.lang.Override public boolean isCancelled () { return mIsCanceled . get () ; }
boolean needsShape () { return ( this ) == ( com.android.ide.eclipse.adt.internal.assetstudio.AssetType.LAUNCHER ) ; }
@ java.lang.Override public java.lang.String getFolderSegment () { if ( ( mValue ) != null ) { return com.android.ide.eclipse.adt.internal.resources.configurations.LanguageQualifier . getFolderSegment ( mValue ) ; } return STRING_CONSTANT ; }
public void put ( java.lang.String ID , java.lang.String resourceName , int dir , boolean visible ) { registerEntry ( ID , new com.ibm.icu.text.TransliteratorRegistry.ResourceEntry ( resourceName , dir ) , visible ) ; }
@ java.lang.Override public java.lang.reflect.Type [] getGenericExceptionTypes () { return super . getGenericExceptionTypes () ; }
public com.android.incallui.videotech.VideoTech getVideoTech () { return videoTech ; }
private final native void writeStringVector ( java.lang.String [] val ) ;
public void run () { if ( ( nativePtr ) != NUMBER_CONSTANT ) { libcore.util.NativeAllocationRegistry . applyFreeFunction ( freeFunction , nativePtr ) ; libcore.util.NativeAllocationRegistry . registerNativeFree ( size ) ; } }
public static java.text.BreakIterator getSentenceInstance ( java.util.Locale locale ) { return new java.text.RuleBasedBreakIterator ( libcore.icu.NativeBreakIterator . getSentenceInstance ( locale ) ) ; }
private void verifyOpenSSL ( org.apache.harmony.xnet.provider.jsse.OpenSSLKey pkey ) throws java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.NoSuchProviderException , java.security.SignatureException , java.security.cert.CertificateException { try { org.apache.harmony.xnet.provider.jsse.NativeCrypto . X509_verify ( mContext , pkey . getPkeyContext () ) ; } catch ( java.lang.RuntimeException e ) { throw new java.security.cert.CertificateException ( e ) ; } }
@ java.lang.Override public boolean visit ( org.eclipse.jdt.internal.compiler.ast.LocalDeclaration x , org.eclipse.jdt.internal.compiler.lookup.BlockScope scope ) { try { curMethod.body . addLocal ( createLocal ( x ) ) ; return true ; } catch ( java.lang.RuntimeException e ) { throw translateException ( x , e ) ; } }
@ javax.annotation.Nonnull public static com.android.jack.Options buildCommandLineArgs ( @ javax.annotation.CheckForNull java.io.File [] classpath , @ javax.annotation.Nonnull java.io.File fileOrSourcelist ) throws java.io.IOException { return com.android.jack.TestTools . buildCommandLineArgs ( classpath , new java.io.File [] { fileOrSourcelist } ) ; }
private void grow ( int newCapacity ) { E [] newData = newElementArray ( newCapacity ) ; java.lang.System . arraycopy ( elementData , NUMBER_CONSTANT , newData , NUMBER_CONSTANT , elementCount ) ; elementData = newData ; }
public static double DoubleAddition () { double a ; double b ; double c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a + b ; return c ; }
public void testAccept_NonBlock_NoConnect ( ) throws java.io.IOException { this . serverChannel . bind ( null ) ; this . serverChannel . configureBlocking ( false ) ; assertNull ( this . serverChannel . accept () ) ; }
public boolean compareValueWith ( com.android.ide.common.res2.ResourceItem resource ) { if ( ( ( mValue ) != null ) && ( ( resource.mValue ) != null ) ) { return com.android.ide.common.res2.NodeUtils . compareElementNode ( mValue , resource.mValue , true ) ; } return ( mValue ) == ( resource.mValue ) ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { super . widgetSelected ( e ) ; reloadSkinCombo () ; reloadAbiTypeCombo () ; validatePage () ; }
@ org.junit.BeforeClass public static void setUpClass () { com.android.jack.shrob.TreeTest.CORE_SOURCELIST = com.android.jack.TestTools . getTargetLibSourcelist ( STRING_CONSTANT ) ; }
public void run () { updateExternalMediaStatusInner ( mediaStatus , reportStatus ) ; }
@ javax.annotation.Nonnull public java.lang.String getPathAsString ( char separator ) { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; for ( com.android.sched.vfs.VPath.VPathFragment pathElement : pathFragments ) { buffer . append ( pathElement . getPathElementAsString ( separator ) ) ; } return buffer . toString () ; }
public void visitRuntimeInvisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Field field , proguard.classfile.attribute.visitor.RuntimeInvisibleAnnotationsAttribute runtimeInvisibleAnnotationsAttribute ) { if ( ( optionalAttributeVisitor ) != null ) { optionalAttributeVisitor . visitRuntimeInvisibleAnnotationsAttribute ( clazz , field , runtimeInvisibleAnnotationsAttribute ) ; } }
final void putLong ( int offset , long value ) { sun.nio.ch.NativeObject.unsafe . putLong ( ( offset + ( address ) ) , value ) ; }
public void setUp ( int repoXsdLevel ) throws java.lang.Exception { super . setUp () ; mRepoXsdLevel = repoXsdLevel ; mLog = new com.android.sdklib.mock.MockLog () ; makeFakeSdk () ; createSdkAvdManagers () ; }
@ java.lang.Override public void run () { com.android.ddmlib.AndroidDebugBridge . createBridge ( com.android.ide.eclipse.ddms.DdmsPlugin.sAdbLocation , false ) ; }
@ java.lang.Override public boolean startTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { return markIfNecessary ( method ) ; }
public void registerForDataEnabledChanged ( android.os.Handler h , int what , java.lang.Object obj ) { mDataEnabledChangedRegistrants . addUnique ( h , what , obj ) ; notifyDataEnabledChanged ( isDataEnabled () , com.android.internal.telephony.dataconnection.DataEnabledSettings.REASON_REGISTERED ) ; }
public com.android.internal.telephony.imsphone.ImsExternalCallTracker makeImsExternalCallTracker ( com.android.internal.telephony.imsphone.ImsPhone imsPhone ) { return new com.android.internal.telephony.imsphone.ImsExternalCallTracker ( imsPhone ) ; }
private static native int nextImpl ( int address , java.lang.String text , int n ) ;
public static void main ( java.lang.String [] args ) throws java.lang.Exception { Main . testAgentThread () ; java.lang.System.out . println ( STRING_CONSTANT ) ; }
protected java.lang.String getJvmInfo () { return ( ( getJvmVersion () ) + CHAR_CONS ) + ( getJvmArch () ) ; }
public final java.util.List < V > getChildren () { return new java.util.ArrayList <> ( children ) ; }
protected void unregisterForLocked ( android.os.Handler h ) { synchronized ( mLock ) { mPinLockedRegistrants . remove ( h ) ; } }
public void test_parse_W_w_dd_MMMM_yyyy_EEEE ( ) throws java.lang.Exception { java.util.Date d = new java.util.Date ( NUMBER_CONSTANT ) ; java.lang.String pattern = STRING_CONSTANT ; org.apache.harmony.tests.java.text.SimpleDateFormatTest . assertFormat ( d , pattern , STRING_CONSTANT ) ; }
@ java.lang.Override public boolean isOpened () { return false ; }
@ java.lang.Override public void disableSharedRelros () { if ( DEBUG ) { org.chromium.base.Log . i ( org.chromium.base.library_loader.ModernLinker.TAG , STRING_CONSTANT ) ; } synchronized ( mLock ) { mInBrowserProcess = false ; mWaitForSharedRelros = false ; } }
@ java.lang.Override @ com.android.annotations.NonNull @ org.gradle.api.tasks.Input public java.util.Set < java.lang.String > getEnable () { return enable ; }
@ java.lang.Override protected void cleanup () { if ( com.android.bluetooth.mapclient.MapClientService.DBG ) { android.util.Log . d ( com.android.bluetooth.mapclient.MapClientService.TAG , STRING_CONSTANT ) ; } }
android.net.NetworkCapabilities expectCapabilitiesWith ( int capability , com.android.server.ConnectivityServiceTest.MockNetworkAgent agent ) { com.android.server.ConnectivityServiceTest.CallbackInfo cbi = expectCallback ( com.android.server.ConnectivityServiceTest.CallbackState.NETWORK_CAPABILITIES , agent ) ; android.net.NetworkCapabilities nc = ( ( android.net.NetworkCapabilities ) ( cbi.arg ) ) ; org.junit.Assert . assertTrue ( nc . hasCapability ( capability ) ) ; return nc ; }
public java.lang.Class loadClass ( java.lang.String name , java.lang.ClassLoader loader ) { java.lang.String slashName = name . replace ( CHAR_CONS , CHAR_CONS ) ; return loadClassBinaryName ( slashName , loader , null ) ; }
public com.android.dialer.smartdial.SmartDialMatchPosition matchesNumber ( java.lang.String phoneNumber ) { return matchesNumber ( phoneNumber , mQuery ) ; }
@ java.lang.Override public java.net.Socket createSocket ( java.lang.String host , int port ) throws java.io.IOException , java.net.UnknownHostException { javax.net.ssl.SSLSocket socket = ( ( javax.net.ssl.SSLSocket ) ( mDelegate . createSocket ( host , port ) ) ) ; return configureSocket ( socket ) ; }
@ java.lang.Override public void run () { throw new java.lang.RuntimeException () ; }
@ java.lang.Override public void dispose () { super . dispose () ; mTabIcon = null ; mJavaElementLabelProvider . dispose () ; }
public void setWarnIfHeld ( java.lang.Object warnIfHeld ) { if ( ( mInstaller ) != null ) { mInstaller . setWarnIfHeld ( warnIfHeld ) ; } mWarnIfHeld = warnIfHeld ; }
private static android.net.Uri getPhoneLookupFilterUri () { return android.provider.ContactsContract.PhoneLookup.ENTERPRISE_CONTENT_FILTER_URI ; }
private native void gattClientWriteDescriptorNative ( int conn_id , int handle , int auth_req , byte [] value ) ;
public static java.util.List < java.awt.Font > getFonts ( long native_int ) { android.graphics.Typeface_Delegate delegate = android.graphics.Typeface_Delegate.sManager . getDelegate ( native_int ) ; if ( delegate == null ) { return null ; } return delegate . getFonts () ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private static void log ( java.lang.Exception e ) {}
@ android.test.suitebuilder.annotation.MediumTest @ org.junit.Test public void testConstructPossiblePhoneAccounts ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , mCallsManager . constructPossiblePhoneAccounts ( null , null , false ) . size () ) ; }
@ java.lang.Override public void onGetReport ( android.bluetooth.BluetoothDevice device , byte type , byte id , int bufferSize ) { mCallback . onGetReport ( device , type , id , bufferSize ) ; }
private static dalvik.system.DexPathList.Element [] makePathElements ( java.util.List < java.io.File > files , java.io.File optimizedDirectory , java.util.List < java.io.IOException > suppressedExceptions ) { return dalvik.system.DexPathList . makeElements ( files , optimizedDirectory , suppressedExceptions , false , null ) ; }
@ java.lang.Override public int compareTo ( com.android.sdklib.internal.repository.packages.Package other ) { java.lang.String s1 = this . comparisonKey () ; java.lang.String s2 = other . comparisonKey () ; int r = s1 . compareTo ( s2 ) ; return r ; }
@ java.lang.Override public void execute ( org.gradle.language.base.FunctionalSourceSet functionalSourceSet ) { functionalSourceSet . maybeCreate ( sourceSetName , type ) ; }
static com.android.cts.verifier.TestListAdapter.TestListItem createTestItem ( android.app.Activity activity , java.lang.String id , int titleRes , android.content.Intent intent ) { return com.android.cts.verifier.TestListAdapter.TestListItem . newTest ( activity , titleRes , id , intent . putExtra ( com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity.EXTRA_TEST_ID , id ) ) ; }
@ com.android.annotations.VisibleForTesting ( visibility = com.android.annotations.VisibleForTesting.Visibility.PRIVATE ) protected void setTargets ( com.android.sdklib.IAndroidTarget [] targets ) { assert targets != null ; mTargets = targets ; }
@ android.annotation.SystemApi public java.util.List < android.telephony.NetworkRegistrationState > getNetworkRegistrationStates () { synchronized ( mNetworkRegistrationStates ) { return new java.util.ArrayList ( mNetworkRegistrationStates ) ; } }
public void run () { gattClientGetGattDbNative ( connId ) ; }
public void playPauseClicked ( android.view.View v ) { if ( ( mPlayer ) == null ) { return; } if ( mPlayer . isPlaying () ) { mPlayer . pause () ; } else { start () ; } updatePlayPause () ; }
@ java.lang.Override public java.net.ServerSocket createServerSocket ( int port ) throws java.io.IOException { return throwException () ; }
public static void assertOnUiThread () { assert org.chromium.base.ThreadUtils . runningOnUiThread () ; }
private void setMobileDataAlwaysOn ( boolean enable ) { android.content.ContentResolver cr = mServiceContext . getContentResolver () ; Settings.Global . putInt ( cr , Settings.Global.MOBILE_DATA_ALWAYS_ON , ( enable ? NUMBER_CONSTANT : NUMBER_CONSTANT ) ) ; mService . updateMobileDataAlwaysOn () ; waitForIdle () ; }
public abstract java.io.File getInstallFolder ( java.lang.String osSdkRoot , com.android.sdklib.SdkManager sdkManager ) ;
@ java.lang.Override public void exit () { checkAndSetConnectivityInstance () ; mCm . requestNetworkTransitionWakelock ( android.net.wifi.WifiStateMachine.TAG ) ; }
public void broadcastAnqpDoneEvent ( java.lang.String iface , com.android.server.wifi.hotspot2.AnqpEvent anqpEvent ) { sendMessage ( iface , com.android.server.wifi.WifiMonitor.ANQP_DONE_EVENT , anqpEvent ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public synchronized java.io.PrintStream getPrintStream () { if ( ( printer ) == null ) { printer = new java.io.PrintStream ( getOutputStream () ) ; } return printer ; }
private static void assertSingleScanCompletedMessage ( int listenerId , android.os.Message completedMessage ) { org.junit.Assert . assertEquals ( STRING_CONSTANT , WifiScanner.CMD_SINGLE_SCAN_COMPLETED , completedMessage.what ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , listenerId , completedMessage.arg2 ) ; }
@ javax.annotation.Nonnull public static java.io.File createTempFile ( @ javax.annotation.Nonnull java.lang.String prefix , @ javax.annotation.Nonnull java.lang.String suffix ) throws java.io.IOException { java.io.File tmp = java.io.File . createTempFile ( prefix , suffix ) ; tmp . deleteOnExit () ; return tmp ; }
@ java.lang.Override public android.content.Intent getIntent ( android.content.Context context ) { return new com.android.dialer.callintent.CallIntentBuilder ( number , CallInitiationType.Type.CALL_LOG ) . setAllowAssistedDial ( true ) . build () ; }
public static float returnFloat ( float [] a ) { return ( a [ NUMBER_CONSTANT ] ) + ( a [ NUMBER_CONSTANT ] ) ; }
@ java.lang.Override public void onFrameAvailable ( android.graphics.SurfaceTexture surfaceTexture ) { updateLayer () ; invalidate () ; }
public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JAnnotation annotation ) { return false ; }
@ java.lang.Override public void run () { if ( com.android.systemui.statusbar.phone.PhoneStatusBar.DEBUG ) { android.util.Log . v ( com.android.systemui.statusbar.phone.PhoneStatusBar.TAG , STRING_CONSTANT ) ; } try { mPile . setViewRemoval ( true ) ; mBarService . onClearAllNotifications () ; } catch ( java.lang.Exception ex ) {} }
@ java.lang.Override @ javax.annotation.Nonnull protected com.android.jack.test.toolchain.JackApiToolchain setVerbosityLevel ( @ javax.annotation.Nonnull com.android.jack.Options.VerbosityLevel level ) { jackOptions . setVerbosityLevel ( level ) ; return this ; }
@ java.lang.Override protected void runImpl () { mHostSideTestRunner = new com.android.cts.HostSideOnlyTest.HostSideTestRunner ( this ) ; mHostSideTestRunner . start () ; }
@ java.lang.Override public void onClick ( android.view.View v ) { stopConnectivityScan () ; stopDownloadFile () ; stopGScan () ; stopIperfClient () ; mBtnStart . setEnabled ( true ) ; }
native void rsnAllocationData2D ( long con , long id , int xoff , int yoff , int mip , int face , int w , int h , int [] d , int sizeBytes ) ;
public static native void SSL_use_PrivateKey ( long ssl , byte [] pkcs8EncodedPrivateKey ) ;
@ java.lang.Override public void warning ( java.lang.String tag , java.lang.String message , java.lang.Object data ) { java.lang.String description = describe ( message ) ; com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.WARNING , STRING_CONSTANT , mName , description ) ; addWarning ( tag , description ) ; }
static java.math.BigInt generatePrimeDefault ( int bitLength ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_generate_prime_ex ( r.bignum , bitLength , false , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; return r ; }
@ org.junit.Test public void testDisabled () { com.android.build.gradle.internal.dsl.DensitySplitOptions options = new com.android.build.gradle.internal.dsl.DensitySplitOptions () ; java.util.Set < java.lang.String > values = options . getApplicableFilters () ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , values . size () ) ; }
@ java.lang.Override public void endTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField field ) { composedStatus . pop () ; for ( com.android.jack.analysis.tracer.TracerBrush config : brushes ) { config . endTrace ( field ) ; } }
@ com.android.internal.annotations.VisibleForTesting public boolean isDataEnabled () { return mDataEnabledSettings . isDataEnabled () ; }
@ java.lang.Override public void warning ( java.lang.String tag , java.lang.String message , java.lang.Object data ) { com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.WARNING , message ) ; }
private boolean isPhoneInEcbMode () { return ( ( mPhone ) != null ) && ( mPhone . isInEcm () ) ; }
public void test ( ) throws java.lang.Exception { assertEquals ( ( STRING_CONSTANT + ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) ) , lintProject ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
synchronized void nAllocationResize1D ( long id , int dimX ) { validate () ; rsnAllocationResize1D ( mContext , id , dimX ) ; }
synchronized void nMeshGetVertices ( long id , int [] vtxIds , int vtxIdCount ) { validate () ; rsnMeshGetVertices ( mContext , id , vtxIds , vtxIdCount ) ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < java.lang.Boolean > isDirty ( com.google.common.collect.ImmutableSet < com.android.dialer.DialerPhoneNumber > phoneNumbers ) { return com.google.common.util.concurrent.MoreExecutors . newDirectExecutorService () . submit ( ( ) - > isDirtyInternal ( phoneNumbers ) ) ; }
protected abstract void updateData ( ) ;
public void testCloseNull ( ) throws java.io.IOException { com.google.common.io.Closeables . close ( null , true ) ; com.google.common.io.Closeables . close ( null , false ) ; }
public static int checkDunRequired ( android.content.Context ctx ) { final android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( ctx . getSystemService ( android.content.Context.TELEPHONY_SERVICE ) ) ) ; return tm != null ? tm . getTetherApnRequired () : com.android.server.connectivity.tethering.TetheringConfiguration.DUN_UNSPECIFIED ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { intento . internalRelease () ; intento = null ; }
public static char [] getDateFormatOrder ( android.content.Context context ) { return libcore.icu.ICU . getDateFormatOrder ( android.text.format.DateFormat . getDateFormatString () ) ; }
synchronized void nAllocationSyncAll ( long alloc , int src ) { validate () ; rsnAllocationSyncAll ( mContext , alloc , src ) ; }
@ org.junit.Test public void testEvaluateNetworks_emptyScanList () { android.net.wifi.WifiConfiguration result = mRecommendedNetworkEvaluator . evaluateNetworks ( new java.util.ArrayList < com.android.server.wifi.ScanDetail > () , null , null , false , false , null ) ; junit.framework.Assert . assertNull ( result ) ; verifyZeroInteractions ( mWifiConfigManager , mNetworkScoreManager ) ; }
public abstract void setCookie ( java.lang.String url , java.lang.String value ) ;
private native void gattServerReadPhyNative ( int clientIf , java.lang.String address ) ;
boolean isNextTransitionForward () { int transit = mWindowManager . getPendingAppTransition () ; return ( ( transit == ( android.view.WindowManagerPolicy.TRANSIT_ACTIVITY_OPEN ) ) || ( transit == ( android.view.WindowManagerPolicy.TRANSIT_TASK_OPEN ) ) ) || ( transit == ( android.view.WindowManagerPolicy.TRANSIT_TASK_TO_FRONT ) ) ; }
@ java.lang.Override public int updateCallWaiting ( boolean enable , int serviceClass ) throws android.os.RemoteException { return this . updateCallWaiting ( enable , serviceClass ) ; }
@ java.lang.Override public void extendToConference ( java.lang.String [] participants ) { this . extendToConference ( participants ) ; }
@ com.android.annotations.Nullable static com.android.ide.eclipse.adt.internal.wizards.templates.Parameter getParameter ( org.eclipse.swt.widgets.Control control ) { return ( ( com.android.ide.eclipse.adt.internal.wizards.templates.Parameter ) ( control . getData () ) ) ; }
public int generate ( java.lang.String name , int uid , int flags ) throws android.os.RemoteException ;
public synchronized void setAudioTracks ( java.util.List < com.android.tv.tuner.data.Track.AtscAudioTrack > audioTracks ) { mProto.audioTracks = audioTracks . toArray ( new com.android.tv.tuner.data.Track.AtscAudioTrack [ audioTracks . size () ] ) ; }
public static long AndIntLong () { int lhs = NUMBER_CONSTANT ; long rhs = NUMBER_CONSTANT ; return lhs & rhs ; }
void addRemoteMessage ( java.lang.String message ) { if ( android.text.TextUtils . isEmpty ( message ) ) { return; } updateCurrentRemoteMessage ( message ) ; if ( ( messageListener ) != null ) { messageListener . newMessageAdded () ; } }
public static void computeTanh ( android.renderscript.cts.TestTanh.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . tanh ( args.inV , t ) ; }
public static void loop2 ( boolean incoming ) { while ( true ) { java.lang.System.out . println ( STRING_CONSTANT ) ; while ( incoming ) {} } }
public void doAbort ( java.lang.String msg ) ;
@ java.lang.Override public void onStreamingServicesUpdated ( java.util.List < android.telephony.mbms.StreamingServiceInfo > services ) { try { callback . onStreamingServicesUpdated ( services ) ; } catch ( android.os.RemoteException e ) { onAppCallbackDied ( uid , subscriptionId ) ; } }
public static void writeUint16 ( int i , java.io.OutputStream output ) throws java.io.IOException { output . write ( ( i > > > NUMBER_CONSTANT ) ) ; output . write ( i ) ; }
public boolean getRoamingCapabilities ( com.android.server.wifi.WifiNative.RoamingCapabilities capabilities ) { return mWifiVendorHal . getRoamingCapabilities ( capabilities ) ; }
@ com.android.annotations.NonNull public java.lang.String getDescription () { return mDescription ; }
private java.lang.String p2pPeer ( java.lang.String deviceAddress ) { return doStringCommand ( ( STRING_CONSTANT + deviceAddress ) ) ; }
public java.lang.Object clone () { try { java.util.TimeZone other = ( ( java.util.TimeZone ) ( super . clone () ) ) ; other.ID = ID ; return other ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
public static android.net.http.HttpResponseCache getInstalled () { java.net.ResponseCache installed = java.net.ResponseCache . getDefault () ; if ( installed instanceof android.net.http.HttpResponseCache ) { return ( ( android.net.http.HttpResponseCache ) ( installed ) ) ; } return null ; }
private boolean updateAdapterData ( android.database.Cursor cursor ) { final com.android.dialer.database.CallLogQueryHandler.Listener listener = mListener . get () ; return ( listener != null ) && ( listener . onCallsFetched ( cursor ) ) ; }
@ javax.annotation.Nonnull public static com.android.jack.Options buildCommandLineArgs ( @ javax.annotation.Nonnull java.io.File fileOrSourcelist , @ javax.annotation.CheckForNull java.io.File jarjarRules ) throws java.io.IOException { com.android.jack.Options options = com.android.jack.TestTools . buildCommandLineArgs ( null , new java.io.File [] { fileOrSourcelist } ) ; options.jarjarRulesFile = jarjarRules ; return options ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void webcamAdjustQuality ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT , description = STRING_CONSTANT ) @ com.googlecode.android_scripting.rpc.RpcDefault ( value = STRING_CONSTANT ) java.lang.Integer resolutionLevel , @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT , description = STRING_CONSTANT ) @ com.googlecode.android_scripting.rpc.RpcDefault ( value = STRING_CONSTANT ) java.lang.Integer jpegQuality ) throws java.lang.Exception { if ( ! ( mStreaming ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } stopStream () ; releaseCamera () ; openCamera ( resolutionLevel , jpegQuality ) ; startStream () ; }
private void handleReleasedFocusTimeout ( com.android.server.telecom.ConnectionServiceFocusManager.FocusRequest focusRequest ) { mCallsManagerRequester . releaseConnectionService ( mCurrentFocus ) ; updateConnectionServiceFocus ( focusRequest.call . getConnectionServiceWrapper () ) ; updateCurrentFocusCall () ; onRequestFocusDone ( focusRequest ) ; mCurrentFocusRequest = null ; }
boolean matches ( final java.lang.String name ) { return ( includesMatcher . matches ( name ) ) && ( ! ( excludesMatcher . matches ( name ) ) ) ; }
void libToLib ( @ javax.annotation.Nonnull java.io.File in , @ javax.annotation.Nonnull java.io.File out , boolean zipFiles ) throws java.lang.Exception ;
@ java.lang.Override public boolean setIdleTime ( android.bluetooth.BluetoothDevice device , byte idleTime ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return false ; } return service . setIdleTime ( device , idleTime ) ; }
public void visitRuntimeInvisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Field field , proguard.classfile.attribute.visitor.RuntimeInvisibleAnnotationsAttribute runtimeInvisibleAnnotationsAttribute ) { if ( ( runtimeInvisibleAnnotationsAttribute.u2annotationsCount ) > NUMBER_CONSTANT ) { attributeVisitor . visitRuntimeInvisibleAnnotationsAttribute ( clazz , field , runtimeInvisibleAnnotationsAttribute ) ; } }
private void openSdkManager () { if ( com.android.ide.eclipse.adt.internal.actions.SdkManagerAction . openExternalSdkManager () ) { return; } if ( ! ( com.android.ide.eclipse.adt.internal.actions.SdkManagerAction . openAdtSdkManager () ) ) { openAndroidPrefs () ; } }
private android.bluetooth.BluetoothGattService getService () { if ( ( mBluetoothGatt ) == null ) return null ; android.bluetooth.BluetoothGattService service = mBluetoothGatt . getService ( com.android.cts.verifier.bluetooth.BleClientService.SERVICE_UUID ) ; if ( service == null ) { showMessage ( STRING_CONSTANT ) ; return null ; } return service ; }
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int whichButton ) { dialog . dismiss () ; }
public void visitRuntimeInvisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.RuntimeInvisibleAnnotationsAttribute runtimeInvisibleAnnotationsAttribute ) { if ( ( runtimeInvisibleAnnotationsAttribute.u2annotationsCount ) > NUMBER_CONSTANT ) { attributeVisitor . visitRuntimeInvisibleAnnotationsAttribute ( clazz , runtimeInvisibleAnnotationsAttribute ) ; } }
protected void stdout ( java.lang.String format , java.lang.Object . . . args ) { java.lang.String output = java.lang.String . format ( format , args ) ; output = com.android.sdklib.util.LineUtil . reflowLine ( output ) ; mLog . info ( STRING_CONSTANT , output ) ; }
native void rsnAllocationRead ( long con , long id , float [] d ) ;
@ java.lang.Override public synchronized void onPlaybackStateChanged ( android.media.session.PlaybackState state ) { if ( com.android.bluetooth.avrcp.Avrcp.DEBUG ) android.util.Log . v ( com.android.bluetooth.avrcp.Avrcp.TAG , ( STRING_CONSTANT + ( state . toString () ) ) ) ; updateCurrentMediaState () ; }
@ java.lang.Override public com.google.common.base.CharMatcher or ( com.google.common.base.CharMatcher other ) { com.google.common.base.Preconditions . checkNotNull ( other ) ; return this ; }
public int init ( ) throws java.io.IOException { ss = new java.net.ServerSocket ( NUMBER_CONSTANT ) ; ss . setSoTimeout ( NUMBER_CONSTANT ) ; ss . setReuseAddress ( true ) ; return ss . getLocalPort () ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_computeBounds ( long nPath , android.graphics.RectF bounds ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate . fillBounds ( bounds ) ; }
@ org.junit.Test public void testGetDeviceId () { verifyDeviceId ( mTelephonyManager . getDeviceId () ) ; }
synchronized void nAllocationElementData1D ( long id , int xoff , int mip , int compIdx , byte [] d , int sizeBytes ) { validate () ; rsnAllocationElementData1D ( mContext , id , xoff , mip , compIdx , d , sizeBytes ) ; }
private static java.lang.Object invoke ( java.lang.reflect.Proxy proxy , java.lang.reflect.Method method , java.lang.Object [] args ) throws java.lang.Throwable { java.lang.reflect.InvocationHandler h = proxy.h ; return h . invoke ( proxy , method , args ) ; }
public java.lang.annotation.Annotation [] [] getParameterAnnotations () { return super . getParameterAnnotations () ; }
private void setChannelNumber ( java.lang.String majorNumber , boolean hasDelimiter , java.lang.String minorNumber ) { this . majorNumber = majorNumber ; this . hasDelimiter = hasDelimiter ; this . minorNumber = minorNumber ; }
public void onConnectionStateChanged ( android.bluetooth.BluetoothDevice device , int state ) { android.util.Log . d ( android.bluetooth.BluetoothHidDeviceCallback.TAG , ( ( ( STRING_CONSTANT + device ) + STRING_CONSTANT ) + state ) ) ; }
@ java.lang.Override public void addSelectionChangedListener ( org.eclipse.jface.viewers.ISelectionChangedListener listener ) { if ( ( mListeners ) == null ) { mListeners = new java.util.ArrayList < org.eclipse.jface.viewers.ISelectionChangedListener > ( NUMBER_CONSTANT ) ; } mListeners . add ( listener ) ; }
void setAccel ( float x , float y , float z ) { if ( ( ( mRender ) == null ) || ( ( mRS ) == null ) ) { return; } mRender . setAccel ( x , ( - y ) ) ; }
public void testConstructor_IllegalCanonicalName_Initial () { try { new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , new java.lang.String [] { STRING_CONSTANT } ) ; fail () ; } catch ( java.nio.charset.IllegalCharsetNameException expected ) {} }
@ java.lang.Override public void addRegistrationListener ( com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException { synchronized ( mLock ) { checkBinderConnection () ; getServiceInterface ( mBinder ) . addRegistrationListener ( mSlotId , mSupportedFeature , listener ) ; } }
@ org.junit.BeforeClass public static void setUpClass () { com.android.jack.compile.androidtree.core.CoreCompilationTest.SOURCELIST = com.android.jack.TestTools . getTargetLibSourcelist ( STRING_CONSTANT ) ; }
@ org.junit.BeforeClass public static void init ( ) throws java.io.IOException , java.lang.Exception { com.android.jack.multidex.MultiDexTests.annotations = com.android.jack.multidex.MultiDexTests . prepareAnnotations () ; com.android.jack.multidex.MultiDexTests.frameworks = com.android.jack.multidex.MultiDexTests . prepareFrameworks () ; com.android.jack.multidex.MultiDexTests.library = com.android.jack.multidex.MultiDexTests . prepareLibrary ( com.android.jack.multidex.MultiDexTests.frameworks ) ; }
private void updateCall ( com.android.server.telecom.Call call ) { updateCall ( call , false , false ) ; }
public boolean equals ( java.lang.Object other ) { if ( other instanceof sun.security.x509.CertificatePolicyId ) return id . equals ( ( ( java.lang.Object ) ( ( ( sun.security.x509.CertificatePolicyId ) ( other ) ) . getIdentifier () ) ) ) ; else return false ; }
public void offset ( float dx , float dy , android.graphics.Path dst ) { long dstNative = NUMBER_CONSTANT ; if ( dst != null ) { dstNative = dst.mNativePath ; dst.isSimplePath = false ; } android.graphics.Path . native_offset ( mNativePath , dx , dy , dstNative ) ; }
public void testAtanPiF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public abstract void setDefaultFixedFontSize ( int size ) ;
protected native int getTimeToLive ( ) throws java.io.IOException ;
protected synchronized native void receive0 ( java.net.DatagramPacket p ) throws java.io.IOException ;
@ java.lang.Override public final org.hamcrest.Matcher < android.view.View > getConstraints () { return android.support.test.espresso.matcher.ViewMatchers . isAssignableFrom ( android.support.v4.widget.DrawerLayout . class ) ; }
private void transitionFromStartupToIdle () { org.junit.Assert . assertEquals ( STRING_CONSTANT , getCurrentState () . getName () ) ; mGsmInboundSmsHandler . sendMessage ( InboundSmsHandler.EVENT_START_ACCEPTING_SMS ) ; com.android.internal.telephony.TelephonyTestUtils . waitForMs ( NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , getCurrentState () . getName () ) ; }
@ java.lang.Override public boolean visit ( org.eclipse.jdt.internal.compiler.ast.FieldDeclaration x , org.eclipse.jdt.internal.compiler.lookup.MethodScope scope ) { try { pushInitializerMethodInfo ( x , scope ) ; return true ; } catch ( java.lang.RuntimeException e ) { throw translateException ( x , e ) ; } }
public static void sort ( long [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.lang.Object getTargetSdkVersion ( @ com.android.annotations.NonNull java.io.File manifestFile ) { return null ; }
@ java.lang.Override public boolean equals ( java.lang.Object r ) { return ( ( r != null ) && ( r instanceof com.android.calculator2.BoundedRational ) ) && ( ( compareTo ( ( ( com.android.calculator2.BoundedRational ) ( r ) ) ) ) == NUMBER_CONSTANT ) ; }
public static native boolean BN_mod_inverse ( long ret , long a , long n ) ;
public boolean partSubstringMatches ( com.ibm.icu.text.MessagePattern.Part part , java.lang.String s ) { return ( ( part.length ) == ( s . length () ) ) && ( msg . regionMatches ( part.index , s , NUMBER_CONSTANT , part.length ) ) ; }
@ java.lang.Override public java.util.Set < java.util.Map.Entry < K , V > > entrySet () { java.util.Set < java.util.Map.Entry < K , V > > result = entrySet ; return result == null ? entrySet = createEntrySet () : result ; }
private static boolean isInteger ( java.lang.String string ) { try { java.lang.Integer . parseInt ( string ) ; } catch ( java.lang.NumberFormatException | java.lang.NullPointerException e ) { return false ; } return true ; }
private void clearBleApps () { mBleApps . clear () ; }
protected java.io.File getFile ( java.io.File baseDir ) { return new java.io.File ( baseDir , myPath ) ; }
public java.lang.String getValue ( java.lang.String name ) { return getValue ( new java.util.jar.Attributes.Name ( name ) ) ; }
public boolean isCategory2 () { switch ( basicType ) { case com.android.jack.dx.rop.type.Type.BT_LONG : case com.android.jack.dx.rop.type.Type.BT_DOUBLE : { return true ; } } return false ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.mockito.MockitoAnnotations . initMocks ( this ) ; java.lang.System . loadLibrary ( STRING_CONSTANT ) ; }
int doPostInstall ( int status , int uid ) { if ( status != ( android.content.pm.PackageManager.INSTALL_SUCCEEDED ) ) { cleanUp () ; } return status ; }
public void onReleased ( android.view.View.AttachInfo.InvalidateInfo element ) { element.target = null ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.jack.dx.rop.type.Type getType () { return getDefiningClass () ; }
boolean run ( ) ;
static java.math.BigInt bigExp ( java.math.BigInt a , java.math.BigInt p ) { java.math.BigInt r = java.math.BigInt . newBigInt () ; java.math.NativeBN . BN_exp ( r.bignum , a.bignum , p.bignum ) ; return r ; }
void addNdkDebuggableLibraryFolders ( @ com.android.annotations.NonNull com.android.build.gradle.internal.core.Abi abi , @ com.android.annotations.NonNull java.io.File searchPath ) ;
public boolean isEmpty () { return ( count ) == NUMBER_CONSTANT ; }
native boolean initTest ( java.lang.String path ) ;
private void createPagesRoot ( org.eclipse.swt.widgets.Composite parent ) { mPagesRootComposite = new org.eclipse.swt.widgets.Composite ( parent , org.eclipse.swt.SWT.NONE ) ; mStackLayout = new org.eclipse.swt.custom.StackLayout () ; mPagesRootComposite . setLayout ( mStackLayout ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ org.gradle.model.Model ( value = com.android.build.gradle.model.ModelConstants.IS_APPLICATION ) public java.lang.Boolean isApplication () { return false ; }
public void recordExistingFile ( @ com.android.annotations.NonNull java.io.File file ) { recordExistingFile ( getAgnosticAbsPath ( file ) , NUMBER_CONSTANT , ( ( byte [] ) ( null ) ) ) ; }
@ java.lang.Override public void testCreate () { java.util.Properties props = createExpectedProps () ; com.android.sdklib.internal.repository.packages.MinToolsPackageTest.MockMinToolsPackage p = new com.android.sdklib.internal.repository.packages.MinToolsPackageTest.MockMinToolsPackage ( null , props , ( - NUMBER_CONSTANT ) , null , null , null , LOCAL_ARCHIVE_PATH ) ; testCreatedPackage ( p ) ; }
@ org.junit.Test public void testFeatureMaskTranslation () { int caps = ( IWifiStaIface.StaIfaceCapabilityMask.BACKGROUND_SCAN ) | ( IWifiStaIface.StaIfaceCapabilityMask.LINK_LAYER_STATS ) ; int expected = ( android.net.wifi.WifiManager.WIFI_FEATURE_SCANNER ) | ( android.net.wifi.WifiManager.WIFI_FEATURE_LINK_LAYER_STATS ) ; assertEquals ( expected , mWifiVendorHal . wifiFeatureMaskFromStaCapabilities ( caps ) ) ; }
public void execute ( java.lang.String . . . tasks ) { execute ( java.util.Collections . < java.lang.String > emptyList () , null , false , tasks ) ; }
public java.lang.String toString () { return sharedToString ( java.lang.reflect.Modifier . constructorModifiers () , false , getParameterTypes () , getExceptionTypes () ) ; }
@ com.android.internal.annotations.VisibleForTesting public void triggerRestrictedStateChanged ( int restrictedState ) { if ( ( mRestrictedStateRegistrant ) != null ) { mRestrictedStateRegistrant . notifyRegistrant ( new android.os.AsyncResult ( null , restrictedState , null ) ) ; } }
void maybeWriteAsync () { maybeWriteAsync ( null ) ; }
protected final void clearPostDialListeners () { if ( ( mPostDialListeners ) != null ) { mPostDialListeners . clear () ; } }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testDataPathInitiatorDirectMacNoTokenFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( true , true , false , true , false ) ; }
public com.android.ahat.heapdump.Size getTotalSize () { com.android.ahat.heapdump.Size total = Size.ZERO ; for ( com.android.ahat.heapdump.Size size : mSizesByHeap ) { total = total . plus ( size ) ; } return total ; }
public < OutputT > com.android.dialer.common.concurrent.UiListener < OutputT > createUiListener ( android.app.FragmentManager fragmentManager , java.lang.String taskId ) { return com.android.dialer.common.concurrent.UiListener . create ( fragmentManager , taskId ) ; }
public void close ( ) throws java.io.IOException { synchronized ( lock ) { if ( ( in ) == null ) return; try { in . close () ; } finally { in = null ; cb = null ; } } }
@ org.junit.After public void restoreState ( ) throws java.lang.Exception { com.android.devtools.systemimage.uitest.utils.SettingsUtil . deactivate ( instrumentation , STRING_CONSTANT ) ; }
public void sendSetVideoProvider ( java.lang.String id ) throws java.lang.Exception { for ( com.android.internal.telecom.IConnectionServiceAdapter a : mConnectionServiceAdapters ) { a . setVideoProvider ( id , mConnectionById . get ( id ) . videoProvider , null ) ; } }
public void addChecker ( com.android.build.gradle.internal.dependency.DependencyChecker checker ) { checkers . add ( checker ) ; }
native void rsnAllocationData3D ( long con , long id , int xoff , int yoff , int zoff , int mip , int w , int h , int depth , long [] d , int sizeBytes ) ;
public void performFirstLoad () { loadPackages ( true ) ; loadPackages ( false ) ; }
public static double ReturnDouble99P25 () { float imm = NUMBER_CONSTANT ; return ( ( double ) ( imm ) ) ; }
public int getSerializedSize () { cachedSize = NUMBER_CONSTANT ; return NUMBER_CONSTANT ; }
private void _test ( android.icu.text.NumberFormat fmt , double value ) { _test ( fmt , new java.lang.Double ( value ) ) ; }
@ java.lang.Override public com.android.browser.BrowserSettings getSettings () { return mSettings ; }
public void testEncode_String_NullEncoder () { tests.api.java.nio.charset.CharsetTest.MockCharset2 c = new tests.api.java.nio.charset.CharsetTest.MockCharset2 ( STRING_CONSTANT , null ) ; try { c . encode ( STRING_CONSTANT ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public com.android.ahat.DocString append ( java.lang.String text ) { mStringBuilder . append ( com.google.common.html.HtmlEscapers . htmlEscaper () . escape ( text ) ) ; return this ; }
public static org.hamcrest.Matcher < java.lang.Object > nullValue () { return new org.hamcrest.core.IsNull < java.lang.Object > () ; }
public native java.lang.Object getDefaultValue ( ) ;
private void setSmsListener ( com.android.ims.internal.IImsSmsListener listener ) { getSmsImplementation () . registerSmsListener ( listener ) ; }
@ java.lang.Override @ org.gradle.api.tasks.Input public boolean getIncremental () { return isIncrementalFlag ; }
@ java.lang.Override public void err ( @ com.android.annotations.Nullable java.lang.String line ) { if ( line != null ) { logger . info ( STRING_CONSTANT , line ) ; } }
@ java.lang.Override public java.net.Socket createSocket ( java.net.InetAddress host , int port ) throws java.io.IOException { javax.net.ssl.SSLSocket socket = ( ( javax.net.ssl.SSLSocket ) ( mDelegate . createSocket ( host , port ) ) ) ; return configureSocket ( socket ) ; }
@ java.lang.Override public final float getFloat ( int i ) { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getFloat ( ix ( checkIndex ( i , SizeOf.FLOAT ) ) ) ; }
public abstract void open ( java.lang.String path ) ;
@ java.lang.Override public synchronized void run ( com.android.jack.ir.ast.JDefinedClassOrInterface declaredType ) throws java.lang.Exception { com.android.jack.analysis.dependency.type.TypeDependenciesCollector.Visitor v = new com.android.jack.analysis.dependency.type.TypeDependenciesCollector.Visitor ( declaredType ) ; v . accept ( declaredType ) ; }
@ java.lang.Override public boolean sendData ( android.bluetooth.BluetoothDevice device , java.lang.String report ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return false ; } return service . sendData ( device , report ) ; }
synchronized void nScriptSetVarD ( long id , int slot , double val ) { validate () ; rsnScriptSetVarD ( mContext , id , slot , val ) ; }
@ java.lang.Override void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , long attributePointer , int attributeCount ) throws org.xml.sax.SAXException { if ( ( ( depth ) ++ ) > NUMBER_CONSTANT ) { super . startElement ( uri , localName , qName , attributePointer , attributeCount ) ; } }
@ java.lang.Override public void endTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { composedStatus . pop () ; for ( com.android.jack.analysis.tracer.TracerBrush config : brushes ) { config . endTrace ( method ) ; } }
public abstract void report ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Severity severity , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.TextFormat format ) ;
@ org.junit.Before public void setUp () { mHandlerThread = new android.os.HandlerThread ( STRING_CONSTANT ) ; mHandlerThread . start () ; mAdapter = android.bluetooth.BluetoothAdapter . getDefaultAdapter () ; }
public org.w3c.dom.Document parse ( java.io.File f ) throws java.lang.Exception { mFileName = f . getName () ; org.w3c.dom.Document doc = com.android.utils.PositionXmlParser . parse ( new java.io.FileInputStream ( f ) , false ) ; return doc ; }
public static byte [] getxattr ( java.lang.String path , java.lang.String name ) throws android.system.ErrnoException { return Libcore.os . getxattr ( path , name ) ; }
public android.bluetooth.BluetoothGatt connectGatt ( android.content.Context context , boolean autoConnect , android.bluetooth.BluetoothGattCallback callback , int transport ) { return connectGatt ( context , autoConnect , callback , transport , android.bluetooth.BluetoothDevice.PHY_LE_1M_MASK ) ; }
@ java.lang.Override public org.objectweb.asm.AnnotationVisitor visitAnnotationDefault () { org.objectweb.asm.AnnotationVisitor av = super . visitAnnotationDefault () ; return av == null ? av : new org.objectweb.asm.commons.RemappingAnnotationAdapter ( av , remapper ) ; }
protected void onGetImageSuccess ( java.lang.String cacheKey , android.graphics.Bitmap response ) { mCache . putBitmap ( cacheKey , response ) ; com.android.volley.toolbox.ImageLoader.BatchedImageRequest request = mInFlightRequests . remove ( cacheKey ) ; if ( request != null ) { request.mResponseBitmap = response ; batchResponse ( cacheKey , request ) ; } }
@ java.lang.Override public void err ( @ com.android.annotations.Nullable java.lang.String line ) { if ( line != null ) { logger . error ( null , line ) ; } }
private static java.lang.String getString ( java.lang.StringBuilder s ) { return s . toString () . trim () ; }
@ javax.annotation.Nullable vogar.target.Runner newRunner ( vogar.monitor.TargetMonitor monitor , java.lang.String qualification , java.lang.Class < > klass , java.util.concurrent.atomic.AtomicReference < java.lang.String > skipPastReference , vogar.target.TestEnvironment testEnvironment , int timeoutSeconds , boolean profile ) ;
public java.io.File getDefaultGccToolchainPath ( com.android.build.gradle.internal.core.Abi abi ) { return getToolchainPath ( Toolchain.GCC , getGccToolchainVersion ( abi ) , abi ) ; }
public java.nio.channels.FileChannel getChannel () { synchronized ( this ) { if ( ( channel ) == null ) { channel = sun.nio.ch.FileChannelImpl . open ( fd , path , true , false , this ) ; } return channel ; } }
@ java.lang.Override public void cleanup () { synchronized ( mSettingsLock ) { mPendingSingleScanSettings = null ; mPendingSingleScanEventHandler = null ; stopHwPnoScan () ; stopBatchedScan () ; mLastScanSettings = null ; } }
@ java.lang.Override public java.util.List < android.bluetooth.BluetoothDevice > getDevicesMatchingConnectionStates ( int [] states ) { com.android.bluetooth.hid.HidService service = getService () ; if ( service == null ) { return new java.util.ArrayList < android.bluetooth.BluetoothDevice > ( NUMBER_CONSTANT ) ; } return service . getDevicesMatchingConnectionStates ( states ) ; }
public java.lang.String getActions () { return null ; }
@ java.lang.Override public void createTabs ( org.eclipse.debug.ui.ILaunchConfigurationDialog dialog , java.lang.String mode ) { org.eclipse.debug.ui.ILaunchConfigurationTab [] tabs = new org.eclipse.debug.ui.ILaunchConfigurationTab [] { new com.android.ide.eclipse.adt.internal.launch.junit.AndroidJUnitLaunchConfigurationTab () , new com.android.ide.eclipse.adt.internal.launch.EmulatorConfigTab ( false ) , new org.eclipse.debug.ui.CommonTab () } ; setTabs ( tabs ) ; }
@ java.lang.Override protected void onError ( int cause ) { if ( com.android.internal.telephony.sip.SipPhone.SipConnection.SCN_DBG ) log ( ( STRING_CONSTANT + cause ) ) ; onCallEnded ( cause ) ; }
private static java.util.List < com.android.build.OutputFile > computeBestOutput ( @ com.android.annotations.NonNull java.util.List < ? extends com.android.build.VariantOutput > outputs , int density , @ com.android.annotations.NonNull java.lang.String . . . abis ) { return com.android.ide.common.build.SplitOutputMatcher . computeBestOutput ( outputs , null , density , null , null , java.util.Arrays . asList ( abis ) ) ; }
public void realRun () { java.util.concurrent.Future future = executor . submit ( sleeper ) ; assertFutureTimesOut ( future ) ; }
void putExtras ( final android.os.Bundle extras ) { if ( extras == null ) { return; } if ( ( mExtras ) == null ) { mExtras = new android.os.Bundle () ; } mExtras . putAll ( extras ) ; notifyExtrasChanged () ; }
@ java.lang.Override public void addRegistrationListener ( int slotId , int featureType , com.android.ims.internal.IImsRegistrationListener listener ) throws android.os.RemoteException {}
public static libcore.icu.NativeDecimalFormat.FieldPositionIterator forFieldPosition ( java.text.FieldPosition fp ) { return fp != null ? new libcore.icu.NativeDecimalFormat.FieldPositionIterator () : null ; }
public boolean getPolicyMetered ( android.net.NetworkTemplate template ) { android.net.NetworkPolicy policy = getPolicy ( template ) ; if ( policy != null ) { return policy.metered ; } else { return false ; } }
boolean isExternalCall () { return hasProperty ( CallCompat.Details.PROPERTY_IS_EXTERNAL_CALL ) ; }
public void testAsinPiF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testDataPathInitiatorNoMacFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( false , false , true , true , false ) ; }
public java.lang.String getNfcWpsConfigurationToken ( int netId ) { return mSupplicantStaIfaceHal . getCurrentNetworkWpsNfcConfigurationToken () ; }
private void unpackBundle ( byte [] content , java.io.File targetDir ) throws java.io.IOException { android.util.Slog . i ( logTag , ( STRING_CONSTANT + targetDir ) ) ; libcore.tzdata.update2.ConfigBundle bundle = new libcore.tzdata.update2.ConfigBundle ( content ) ; bundle . extractTo ( targetDir ) ; }
public boolean removeAllNetworks () { return mSupplicantStaIfaceHal . removeAllNetworks () ; }
private void makeValid () { if ( ( this . bignum ) == NUMBER_CONSTANT ) { this . bignum = java.math.NativeBN . BN_new () ; } }
@ java.lang.Override public void loggedRun () { if ( mIsPending ) { android.telecom.Log . addEvent ( mCall , LogUtils.Events.FILTERING_COMPLETED , mResult ) ; mListener . onCallFilteringComplete ( mCall , mResult ) ; mIsPending = false ; } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void nativeGetStringBounds ( long nativePaint , java.lang.String text , int start , int end , int bidiFlags , android.graphics.Rect bounds ) { android.graphics.Paint_Delegate . nativeGetCharArrayBounds ( nativePaint , text . toCharArray () , start , ( end - start ) , bidiFlags , bounds ) ; }
@ java.lang.Override public void enter () { mWifiConnectivityManager . setWifiEnabled ( true ) ; mWifiMetrics . setWifiState ( WifiMetricsProto.WifiLog.WIFI_DISCONNECTED ) ; }
private void assertActiveRulesVersion ( java.lang.String expectedRulesVersion ) throws java.lang.Exception { java.lang.String expectedActiveRulesVersion = ( ( ( expectedRulesVersion + STRING_CONSTANT ) + expectedRulesVersion ) + STRING_CONSTANT ) + expectedRulesVersion ; java.lang.String actualActiveRulesVersion = waitForNoOperationInProgressAndReturn ( com.android.timezone.xts.TimeZoneUpdateHostTest.StateType.ACTIVE_RULES_VERSION ) ; org.junit.Assert . assertEquals ( expectedActiveRulesVersion , actualActiveRulesVersion ) ; }
public void testStagefright_cve_2015_3873_b_21814993 ( ) throws java.lang.Exception { doStagefrightTest ( R.raw.cve_2015_3873_b_21814993 ) ; }
sun.misc.JarIndex getIndex () { try { ensureOpen () ; } catch ( java.io.IOException e ) { throw new java.lang.InternalError ( e ) ; } return index ; }
@ java.lang.Override public boolean setActiveDevice ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.hearingaid.HearingAidService service = getService () ; if ( service == null ) { return false ; } return service . setActiveDevice ( device ) ; }
private java.lang.String buildIntentData ( long channelId ) { return android.media.tv.TvContract . buildChannelUri ( channelId ) . toString () ; }
@ java.lang.Override protected boolean check () { return mVideoView . isPlaying () ; }
@ java.lang.Override public com.android.ide.common.rendering.api.ResourceValue getValue ( com.android.resources.ResourceType type , java.lang.String name ) { java.util.Map < java.lang.String , com.android.ide.common.rendering.api.ResourceValue > list = mResourceItems . get ( type ) ; if ( list != null ) { return list . get ( name ) ; } return null ; }
@ java.lang.Override void setBody ( com.google.mockwebserver.MockResponse response , byte [] content , int chunkSize ) { response . setBody ( content ) ; }
public void testStagefright_bug_27855419_CVE_2016_2463 ( ) throws java.lang.Exception { doStagefrightTest ( R.raw.bug_27855419 ) ; }
public static void removeProvider ( int providerNumber ) { synchronized ( org.apache.harmony.security.fortress.Services.providers ) { java.security.Provider p = org.apache.harmony.security.fortress.Services.providers . remove ( ( providerNumber - NUMBER_CONSTANT ) ) ; org.apache.harmony.security.fortress.Services.providersNames . remove ( p . getName () ) ; org.apache.harmony.security.fortress.Services . setNeedRefresh () ; } }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public long getUidRxBytes ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) java.lang.Integer uid ) { return android.net.TrafficStats . getUidRxBytes ( uid ) ; }
public abstract void setUseWideViewPort ( boolean use ) ;
public void testNfcFeatures () { if ( ( android.nfc.NfcAdapter . getDefaultAdapter () ) != null ) { assertAvailable ( PackageManager.FEATURE_NFC ) ; } else { assertNotAvailable ( PackageManager.FEATURE_NFC ) ; } }
public void testSendEtwsMessageCancel ( ) throws java.lang.Exception { android.content.Intent intent = new android.content.Intent ( android.provider.Telephony.Sms.Intents.SMS_EMERGENCY_CB_RECEIVED_ACTION ) ; intent . putExtra ( STRING_CONSTANT , createFromPdu ( com.android.cellbroadcastreceiver.DialogSmsDisplayTests.etwsMessageCancel ) ) ; mContext . sendOrderedBroadcast ( intent , STRING_CONSTANT ) ; }
protected void requestUpstreamMobileConnection () { mUpstreamNetworkMonitor . updateMobileRequiresDun ( mConfig.isDunRequired ) ; mUpstreamNetworkMonitor . registerMobileNetworkRequest () ; }
private native void gattSetAdvDataNative ( boolean setScanRsp , byte [] data ) ;
public void widgetDisposed ( org.eclipse.swt.events.DisposeEvent e ) { model . removeImageChangeListener ( this ) ; crosshairColor . dispose () ; borderColor . dispose () ; paddingColor . dispose () ; }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testToString () { org.junit.Assert . assertEquals ( STRING_CONSTANT , com.android.server.telecom.tests.IncomingCallFilterTest.RESULT1 . toString () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , com.android.server.telecom.tests.IncomingCallFilterTest.RESULT2 . toString () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , com.android.server.telecom.tests.IncomingCallFilterTest.RESULT3 . toString () ) ; }
@ java.lang.Override public boolean visitNode ( org.w3c.dom.Node node ) { return ( mDone ) || ( super . visitNode ( node ) ) ; }
@ java.lang.Override protected int doHash ( java.lang.Object o ) { return o . hashCode () ; }
public static void main ( java.lang.String [] args ) { Main . doTest ( NUMBER_CONSTANT ) ; }
public native int getInt ( java.lang.Object obj ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException ;
public void testEmptyFamily () { java.util.regex.Pattern . compile ( STRING_CONSTANT ) ; }
synchronized long nScriptCCreate ( java.lang.String resName , java.lang.String cacheDir , byte [] script , int length ) { validate () ; return rsnScriptCCreate ( mContext , resName , cacheDir , script , length ) ; }
public void visitStringConstant ( proguard.classfile.visitor.Clazz clazz , proguard.classfile.visitor.StringConstant stringConstant ) { println ( ( ( ( ( visitorInfo ( stringConstant ) ) + STRING_CONSTANT ) + ( stringConstant . getString ( clazz ) ) ) + STRING_CONSTANT ) ) ; }
@ android.annotation.SystemApi @ java.lang.Deprecated public abstract void setUserAgent ( int ua ) ;
private static long parseIsoTime ( java.lang.String isoTime ) throws java.lang.Exception { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( STRING_CONSTANT ) ; java.util.Date date = sdf . parse ( isoTime ) ; return date . getTime () ; }
protected int getUserRotation ( ) throws com.android.tradefed.device.DeviceNotAvailableException { final java.lang.String rotation = runCommandAndPrintOutput ( STRING_CONSTANT ) . trim () ; if ( STRING_CONSTANT . equals ( rotation ) ) { return - NUMBER_CONSTANT ; } return java.lang.Integer . parseInt ( rotation ) ; }
public static javax.net.ssl.X509TrustManager getDefaultX509TrustManager ( ) throws java.security.KeyManagementException { javax.net.ssl.X509TrustManager result = org.conscrypt.SSLParametersImpl.defaultX509TrustManager ; if ( result == null ) { org.conscrypt.SSLParametersImpl.defaultX509TrustManager = result = org.conscrypt.SSLParametersImpl . createDefaultX509TrustManager () ; } return result ; }
@ java.lang.Override public com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider () { return this . getVideoCallProvider () ; }
private synchronized void setLastLineupId ( java.lang.String lineupId ) { mLineupId = lineupId ; android.preference.PreferenceManager . getDefaultSharedPreferences ( mContext ) . edit () . putString ( com.android.tv.data.epg.EpgFetcher.KEY_LAST_LINEUP_ID , lineupId ) . commit () ; }
@ java.lang.Override public void libToExe ( @ javax.annotation.Nonnull java.io.File [] in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception { libToCommon ( in ) ; setOutputDex ( out ) ; run () ; }
@ javax.annotation.Nonnull public com.android.jack.reporting.Reporter getReporter () { assert ( reporter ) != null ; return reporter ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean native_rectStaysRect ( long native_object ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return true ; } return ( ( d . computeTypeMask () ) & ( android.graphics.Matrix_Delegate.kRectStaysRect_Mask ) ) != NUMBER_CONSTANT ; }
@ java.lang.Override protected void visitMethod ( int index ) { assert ( cstIndexMap ) != null ; constantValue = cstIndexMap . getCstMethodRef ( index ) ; }
@ javax.annotation.Nonnull private synchronized int getCurrentMergerIdx () { return currentMergerIdx ; }
@ java.lang.Override public void run () { completed . set ( runPlayAV ( inputResourceId , ( lastBufferTimestampMs * NUMBER_CONSTANT ) , audio , video , playbackRate , state ) ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) static void warning ( java.lang.String message ) { java.lang.System.out . println ( ( STRING_CONSTANT + message ) ) ; }
public com.ibm.icu.impl.UResource.ArraySink getOrCreateArraySink ( com.ibm.icu.impl.UResource.Key key ) { return null ; }
public static void setupForwarding ( com.android.ddmlib.IDevice device , int i ) throws com.android.ddmlib.AdbCommandRejectedException , com.android.ddmlib.TimeoutException , java.io.IOException { device . createForward ( i , com.android.ide.eclipse.gltrace.CollectTraceAction.GLTRACE_UDS , DeviceUnixSocketNamespace.ABSTRACT ) ; }
@ java.lang.Override public void info ( java.lang.String format , java.lang.Object . . . args ) { add ( STRING_CONSTANT , format , args ) ; }
public java.text.Format.Field field () { return libcore.icu.NativeDecimalFormat.ICU4C_FIELD_IDS [ data [ pos ] ] ; }
void removeDc ( com.android.internal.telephony.dataconnection.DataConnection dc ) { synchronized ( mDcListAll ) { mDcListActiveByCid . remove ( dc.mCid ) ; mDcListAll . remove ( dc ) ; } }
@ java.lang.Override public void testRunStarted ( java.lang.String runName , int testCount ) { if ( ( mLogger ) != null ) { mLogger . info ( STRING_CONSTANT , testCount , mDeviceName ) ; } super . testRunStarted ( runName , testCount ) ; }
@ com.google.caliper.Benchmark public void deepHashCode ( int reps ) { for ( int i = NUMBER_CONSTANT ; i < reps ; ++ i ) { java.util.Arrays . deepHashCode ( array ) ; } }
public void requestNetwork ( android.net.NetworkRequest request , android.net.ConnectivityManager.NetworkCallback networkCallback , int timeoutMs , int legacyType , android.os.Handler handler ) { android.net.ConnectivityManager.CallbackHandler cbHandler = new android.net.ConnectivityManager.CallbackHandler ( handler ) ; android.net.NetworkCapabilities nc = request.networkCapabilities ; sendRequestForNetwork ( nc , networkCallback , timeoutMs , android.net.ConnectivityManager.REQUEST , legacyType , cbHandler ) ; }
private void expandError ( double valueWithError ) { if ( valueWithError != valueWithError ) { return; } double delta = java.lang.Math . abs ( ( valueWithError - ( mValue ) ) ) ; if ( delta > ( mError ) ) { mError = delta ; } }
private java.lang.String best ( java.util.Locale l , java.lang.String skeleton ) { return libcore.icu.ICU . getBestDateTimePattern ( skeleton , l ) ; }
abstract char getCharUnchecked ( int index ) ;
public static native long SSL_do_handshake ( long sslNativePointer , java.io.FileDescriptor fd , org.conscrypt.NativeCrypto.SSLHandshakeCallbacks shc , int timeoutMillis , boolean client_mode ) throws java.net.SocketTimeoutException , java.security.cert.CertificateException , javax.net.ssl.SSLException ;
native long rsnSamplerCreate ( long con , int magFilter , int minFilter , int wrapS , int wrapT , int wrapR , float aniso ) ;
@ java.lang.Override public boolean start () { if ( com.android.bluetooth.opp.BluetoothOppService.V ) android.util.Log . v ( com.android.bluetooth.opp.BluetoothOppService.TAG , STRING_CONSTANT ) ; updateFromProvider () ; return true ; }
void unregisterCallback () { synchronized ( mCallbackLock ) { mRegisteredCallback = null ; } if ( ( mControllerCallbacks ) == null ) return; mControllerCallbacks . cleanup () ; mControllerCallbacks = null ; }
@ java.lang.Override public boolean visit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSwitchStatement jswitch ) { removeBreakOrCase . push ( ( jswitch . getCases () . isEmpty () ? java.lang.Boolean.TRUE : java.lang.Boolean.FALSE ) ) ; return super . visit ( jswitch ) ; }
private native void gattClientSetPreferredPhyNative ( int clientIf , java.lang.String address , int tx_phy , int rx_phy , int phy_options ) ;
@ java.lang.Override public void tearDown ( ) throws java.lang.Exception { mComponentContextFixture = null ; mMockitoHelper . tearDown () ; }
@ java.lang.Override public final void libToExe ( @ javax.annotation.Nonnull java.io.File in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception { libToExe ( new java.io.File [] { in } , out , zipFile ) ; }
@ javax.annotation.Nullable vogar.target.TargetRunner newRunner ( vogar.monitor.TargetMonitor monitor , java.lang.String qualification , java.lang.Class < > klass , java.util.concurrent.atomic.AtomicReference < java.lang.String > skipPastReference , vogar.target.TestEnvironment testEnvironment , int timeoutSeconds , java.lang.String [] args ) ;
@ org.junit.Test public void testZeroIsObviousForDebugging () { android.net.Network zero = new android.net.Network ( NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , zero . hashCode () ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , zero . getNetworkHandle () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , zero . toString () ) ; }
public boolean inConference () { return ( ( ( mAdded ) && ( ( mCurrentCall ) != null ) ) && ( mCurrentCall . isMultiParty () ) ) && ( ( getState () ) != ( android.telecom.Connection.STATE_DISCONNECTED ) ) ; }
public static float [] copyOf ( float [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
@ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void test_SSL_do_handshake_NULL_SSL ( ) throws java.lang.Exception { org.conscrypt.NativeCrypto . SSL_do_handshake ( org.conscrypt.NativeCryptoTest.NULL , null , null , NUMBER_CONSTANT , false , null ) ; }
@ java.lang.Override public boolean handleWarning ( java.lang.String message ) { return true ; }
void multiplyByPositiveInt ( int w ) { java.math.NativeBN . BN_mul_word ( this . bignum , w ) ; }
@ java.lang.Override public void onCheckComplete ( java.lang.Integer id ) { if ( ( id != null ) && ( id != ( com.android.dialer.blocking.FilteredNumberAsyncQueryHandler.INVALID_ID ) ) ) { call . setBlockedStatus ( true ) ; } }
@ java.lang.Override public java.lang.Class < > getDeclaringClass () { return declaringClass ; }
int maxAdvertiseInstances () { return mAdapterService . getNumOfAdvertisementInstancesSupported () ; }
public static void failSame ( java.lang.String message ) { java.lang.String formatted = STRING_CONSTANT ; if ( message != null ) formatted = message + STRING_CONSTANT ; junit.framework.Assert . fail ( ( formatted + STRING_CONSTANT ) ) ; }
private final void scheduleBroadcastsLocked () { if ( com.android.server.am.ActivityManagerService.DEBUG_BROADCAST ) android.util.Slog . v ( com.android.server.am.ActivityManagerService.TAG , ( STRING_CONSTANT + ( mBroadcastsScheduled ) ) ) ; if ( mBroadcastsScheduled ) { return; } mHandler . sendEmptyMessage ( com.android.server.am.ActivityManagerService.BROADCAST_INTENT_MSG ) ; mBroadcastsScheduled = true ; }
public void registerPage ( java.lang.String title , java.lang.Class < ? extends org.eclipse.swt.widgets.Composite > pageClass ) { mWindow . registerPage ( title , pageClass ) ; }
public void setDescription ( java.lang.String format , java.lang.Object . . . args ) { final java.lang.String text = java.lang.String . format ( format , args ) ; mUi . setDescription ( text ) ; }
protected static long rotateLeft ( long x , int n ) { return ( x < < n ) | ( x > > > ( - n ) ) ; }
static boolean containsButton ( android.view.View item , android.view.View button ) { return item == null ? false : ( item . findViewById ( R.id.user_action_button ) ) == button ; }
@ java.lang.Override public boolean hasStableIds () { return false ; }
public static int IntSubtraction () { int a ; int b ; int c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a - b ; return c ; }
@ java.lang.Override public boolean isRadioOnForSubscriber ( int subId , java.lang.String callingPackage ) { if ( ! ( com.android.internal.telephony.TelephonyPermissions . checkCallingOrSelfReadPhoneState ( mApp , subId , callingPackage , STRING_CONSTANT ) ) ) { return false ; } return isRadioOnForSubscriber ( subId ) ; }
public void visitRuntimeVisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Field field , proguard.classfile.attribute.visitor.RuntimeVisibleAnnotationsAttribute runtimeVisibleAnnotationsAttribute ) { if ( accepted ( clazz , runtimeVisibleAnnotationsAttribute ) ) { attributeVisitor . visitRuntimeVisibleAnnotationsAttribute ( clazz , field , runtimeVisibleAnnotationsAttribute ) ; } }
@ java.lang.Override public void initRttCallScreenDelegate ( com.android.incallui.rtt.protocol.RttCallScreen rttCallScreen ) { this . rttCallScreen = rttCallScreen ; }
static boolean isCTVerificationRequired ( java.lang.String hostname ) { return libcore.net.NetworkSecurityPolicy . getInstance () . isCertificateTransparencyVerificationRequired ( hostname ) ; }
public int codePointAt ( int index ) { if ( ( index < NUMBER_CONSTANT ) || ( index >= ( length () ) ) ) { throw new java.lang.StringIndexOutOfBoundsException ( index ) ; } return java.lang.Character . codePointAt ( this , index ) ; }
public void run () { getActivity () . setVisible ( true ) ; }
@ java.lang.Override public final T next () { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } state = com.google.common.collect.AbstractIterator.State.NOT_READY ; T result = next ; next = null ; return result ; }
private void assertPinnedToWifiWithWifiDefault () { org.junit.Assert . assertEquals ( mWiFiNetworkAgent . getNetwork () , mCm . getBoundNetworkForProcess () ) ; org.junit.Assert . assertEquals ( mWiFiNetworkAgent . getNetwork () , mCm . getActiveNetwork () ) ; }
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mChatService ) != null ) { mChatService . stop () ; } unregisterReceiver ( mPairingActionReceiver ) ; }
public void setClassesConfiguration ( org.gradle.api.artifacts.Configuration configuration ) { dependsOn ( configuration ) ; }
native void rsnAllocationCopyFromBitmap ( long con , long alloc , android.graphics.Bitmap bmp ) ;
public static synchronized boolean isEmpty () { return org.apache.harmony.security.fortress.Services.services . isEmpty () ; }
synchronized void nAssignName ( long obj , byte [] name ) { validate () ; rsnAssignName ( mContext , obj , name ) ; }
@ com.android.annotations.Nullable public java.util.List < com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation > getAnnotations ( @ com.android.annotations.NonNull com.android.tools.lint.client.api.JavaParser.ResolvedField field ) { com.android.tools.lint.ExternalAnnotationRepository.FieldInfo f = findField ( field ) ; if ( f == null ) { return null ; } return f . getAnnotations () ; }
public void visitStackMapAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.CodeAttribute codeAttribute , proguard.classfile.attribute.visitor.StackMapAttribute stackMapAttribute ) { if ( ( optionalAttributeVisitor ) != null ) { optionalAttributeVisitor . visitStackMapAttribute ( clazz , method , codeAttribute , stackMapAttribute ) ; } }
private static native int previousImpl ( int address , java.lang.String text ) ;
@ java.lang.Override public void enter () { if ( android.net.wifi.p2p.WifiP2pService.DBG ) logd ( getName () ) ; notifyInvitationReceived () ; }
@ java.lang.Override public boolean startTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField field ) { return markIfNecessary ( field ) ; }
private static com.google.gct.testing.dimension.DeviceDimension.Device getDefaultDevice () { if ( ( com.google.gct.testing.dimension.DeviceDimension.defaultDevice ) == null ) { com.google.gct.testing.dimension.DeviceDimension . getFullDomain () ; } return com.google.gct.testing.dimension.DeviceDimension.defaultDevice ; }
void createNewUserLILPw ( int userHandle , java.io.File path ) { if ( ( mInstaller ) != null ) { mSettings . createNewUserLILPw ( this , mInstaller , userHandle , path ) ; } }
public void addOrUpdatePasspointConfiguration ( android.net.wifi.hotspot2.PasspointConfiguration config ) { try { if ( ! ( mService . addOrUpdatePasspointConfiguration ( config ) ) ) { throw new java.lang.IllegalArgumentException () ; } } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
@ android.test.suitebuilder.annotation.MediumTest public void testCodeOverlay () { assertEquals ( testString , mCodeOverlay3 . getText () . toString () ) ; }
synchronized long nPathCreate ( int prim , boolean isStatic , long vtx , int loop , float q ) { validate () ; return rsnPathCreate ( mContext , prim , isStatic , vtx , loop , q ) ; }
public com.google.api.client.auth.oauth2.Credential makeCredential () { com.google.gct.login.CredentialedUser activeUser = users . getActiveUser () ; if ( activeUser == null ) { return null ; } else { return activeUser . getGoogleLoginState () . makeCredential () ; } }
static java.lang.String oidToAlgorithmName ( java.lang.String oid ) { try { return sun.security.x509.AlgorithmId . get ( oid ) . getName () ; } catch ( java.security.NoSuchAlgorithmException e ) { return oid ; } }
public static com.android.cts.verifier.TestListAdapter.TestListItem newTest ( java.lang.String title , java.lang.String testName , android.content.Intent intent ) { return new com.android.cts.verifier.TestListAdapter.TestListItem ( title , testName , intent ) ; }
public static void failNotEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { junit.framework.Assert . fail ( junit.framework.Assert . format ( message , expected , actual ) ) ; }
@ java.lang.Override public void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JSession session ) throws java.lang.Exception { java.io.PrintStream writer = com.android.sched.util.config.ThreadConfig . get ( com.android.jack.coverage.CodeCoverageMetadataFileWriter.COVERAGE_METADATA_FILE ) . getPrintStream () ; try { writeMetadata ( session , writer ) ; } finally { writer . close () ; } }
@ com.android.annotations.NonNull private static java.lang.String escapeXml ( @ com.android.annotations.NonNull java.lang.String unescaped ) { return com.google.common.xml.XmlEscapers . xmlAttributeEscaper () . escape ( unescaped ) ; }
@ java.lang.Override public void endTrace ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JField field ) {}
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { if ( ( mStatusBarContents . getAlpha () ) == NUMBER_CONSTANT ) { if ( com.android.systemui.statusbar.phone.PhoneStatusBar.DEBUG ) android.util.Log . d ( com.android.systemui.statusbar.phone.PhoneStatusBar.TAG , STRING_CONSTANT ) ; mStatusBarContents . setVisibility ( View.INVISIBLE ) ; } }
@ java.lang.Override public void onUserSwitchComplete ( int newUserId ) throws android.os.RemoteException { profileChanged ( newUserId ) ; }
public static native java.lang.String SSL_SESSION_get_version ( long sslSessionNativePointer ) ;
private final native long seekAsset ( long asset , long offset , int whence ) ;
public boolean setConfigMethods ( java.lang.String cfg ) { return mSupplicantStaIfaceHal . setWpsConfigMethods ( cfg ) ; }
@ java.lang.Override public void visitElement ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.XmlContext context , @ com.android.annotations.NonNull org.w3c.dom.Element element ) { context . report ( com.android.tools.lint.checks.DeprecationDetector.ISSUE , element , context . getLocation ( element ) , java.lang.String . format ( STRING_CONSTANT , element . getTagName () ) ) ; }
public void fidelityWarning ( java.lang.String tag , java.lang.String message , java.lang.Throwable throwable , java.lang.Object data ) {}
@ java.lang.Override public void onPause () { super . onPause () ; setRenderMode ( android.openglperf.cts.RENDERMODE_WHEN_DIRTY ) ; mWatchDog . stop () ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { testThread . quitLooper () ; asyncPool . shutdown () ; }
private static boolean isValidDevice ( android.bluetooth.BluetoothDevice device ) { return ( device != null ) && ( android.bluetooth.BluetoothAdapter . checkBluetoothAddress ( device . getAddress () ) ) ; }
@ java.lang.Override public int count () { int product = NUMBER_CONSTANT ; for ( com.google.gct.testing.GoogleCloudTestingDimension dimension : getDimensions () ) { product *= dimension . getEnabledTypes () . size () ; } return product ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_addPath ( long nPath , int src , long matrix ) { android.graphics.Matrix_Delegate matrixDelegate = android.graphics.Matrix_Delegate . getDelegate ( matrix ) ; if ( matrixDelegate == null ) { return; } android.graphics.Path_Delegate . addPath ( nPath , src , matrixDelegate . getAffineTransform () ) ; }
public com.android.tools.r8.utils.AndroidApp.Builder addProgramFiles ( java.util.Collection < java.nio.file.Path > files ) throws java.io.IOException { for ( java.nio.file.Path file : files ) { addProgramFile ( file ) ; } return this ; }
public boolean lock ( int userId ) { try { return ( mBinder . lock ( userId ) ) == ( android.security.KeyStore.NO_ERROR ) ; } catch ( android.os.RemoteException e ) { android.util.Log . w ( android.security.KeyStore.TAG , STRING_CONSTANT , e ) ; return false ; } }
public java.lang.String getTargetHashString () { if ( ( mTarget ) != null ) { return mTarget . hashString () ; } return mProperties . getProperty ( ProjectProperties.PROPERTY_TARGET ) ; }
protected native void setTTL ( byte ttl ) throws java.io.IOException ;
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void run () { while ( true ) { try { if ( ! ( cleanUp ( queue . remove () ) ) ) { break; } } catch ( java.lang.InterruptedException e ) {} } }
@ java.lang.Override protected void onResume () { super . onResume () ; if ( ( ( mCurrentTest ) != null ) && ( mCurrentTest . autoStart () ) ) { mCurrentTest.status = com.android.cts.verifier.notifications.InteractiveVerifierActivity.READY ; } next () ; }
static org.conscrypt.GCMParameters fromGCMParameterSpec ( java.security.spec.AlgorithmParameterSpec params ) { if ( params instanceof javax.crypto.spec.GCMParameterSpec ) { javax.crypto.spec.GCMParameterSpec gcmParams = ( ( javax.crypto.spec.GCMParameterSpec ) ( params ) ) ; return new org.conscrypt.GCMParameters ( gcmParams . getTLen () , gcmParams . getIV () ) ; } return null ; }
public void ndk ( @ com.android.annotations.NonNull org.gradle.api.Action < com.android.build.gradle.internal.dsl.NdkOptions > action ) { action . execute ( ndkConfig ) ; }
@ com.android.annotations.NonNull public com.android.ide.common.process.ProcessResult executeProcess ( @ com.android.annotations.NonNull com.android.ide.common.process.ProcessInfo processInfo ) { return executeProcess ( processInfo , mProcessOutputHandler ) ; }
public com.android.bluetooth.gatt.AdvertiseClient getAdvertiseClient ( int advertiserId ) { for ( com.android.bluetooth.gatt.AdvertiseClient client : mAdvertiseClients ) { if ( ( client.advertiserId ) == advertiserId ) { return client ; } } return null ; }
protected void setContactId ( long rawContactId , long contactId ) { mContactIdUpdate . bindLong ( NUMBER_CONSTANT , contactId ) ; mContactIdUpdate . bindLong ( NUMBER_CONSTANT , rawContactId ) ; mContactIdUpdate . execute () ; }
@ java.lang.Override public java.lang.String insnArgString ( com.android.dx.dex.code.DalvInsn insn ) { com.android.dx.rop.code.RegisterSpecList regs = com.android.dx.dex.code.form.Form45cc . explicitize ( insn . getRegisters () ) ; return ( ( regListString ( regs ) ) + STRING_CONSTANT ) + ( insn . cstString () ) ; }
public org.bouncycastle.math.ec.ECFieldElement divide ( org.bouncycastle.math.ec.ECFieldElement b ) { return new org.bouncycastle.math.ec.ECFieldElement.Fp ( q , r , modMult ( x , modInverse ( b . toBigInteger () ) ) ) ; }
public void testRemove1_NullPointerException () { java.util.concurrent.ConcurrentSkipListMap c = new java.util.concurrent.ConcurrentSkipListMap () ; c . put ( STRING_CONSTANT , STRING_CONSTANT ) ; try { c . remove ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public void unregisterListener ( com.android.sdklib.devices.DeviceManager.DevicesChangeListener listener ) { com.android.sdklib.devices.DeviceManager.listeners . remove ( listener ) ; }
@ java.lang.Override public java.util.List < java.lang.String > targetProcessPrefix () { return com.google.common.collect.ImmutableList . of ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override @ com.android.annotations.NonNull public java.io.File [] listFiles ( @ com.android.annotations.NonNull java.io.File file ) { java.io.File [] r = file . listFiles () ; if ( r == null ) { return new java.io.File [ NUMBER_CONSTANT ] ; } else { return r ; } }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testDataPathInitiatorDirectNoMacTokenFail ( ) throws java.lang.Exception { testDataPathInitiatorUtility ( true , false , true , true , false ) ; }
synchronized void nScriptSetTimeZone ( long script , byte [] timeZone ) { validate () ; rsnScriptSetTimeZone ( mContext , script , timeZone ) ; }
@ com.googlecode.android_scripting.rpc.Rpc ( description = STRING_CONSTANT ) public void bleAddAdvertiseDataServiceData ( @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) java.lang.String serviceDataUuid , @ com.googlecode.android_scripting.rpc.RpcParameter ( name = STRING_CONSTANT ) byte [] serviceData ) { mAdvertiseDataBuilder . addServiceData ( android.os.ParcelUuid . fromString ( serviceDataUuid ) , serviceData ) ; }
public final void binderDied () { try { release () ; } catch ( java.lang.Exception e ) { android.util.Log . e ( com.android.server.IpSecService.TAG , ( STRING_CONSTANT + e ) ) ; } }
@ java.lang.Override public final android.graphics.drawable.ConstantState getConstantState () { mBitmapState.mChangingConfigurations = getChangingConfigurations () ; return mBitmapState ; }
public final void setAudioRoute ( int route ) { for ( android.telecom.Connection.Listener l : mListeners ) { l . onAudioRouteChanged ( this , route , null ) ; } }
@ java.lang.Override @ org.jetbrains.annotations.NotNull public com.intellij.openapi.fileEditor.impl.UiDecoration getDecoration () { return new com.intellij.openapi.fileEditor.impl.UiDecoration ( null , new java.awt.Insets ( TabsUtil.TAB_VERTICAL_PADDING , NUMBER_CONSTANT , TabsUtil.TAB_VERTICAL_PADDING , NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public int getConnectionState ( android.bluetooth.BluetoothDevice device ) { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return NUMBER_CONSTANT ; } return service . getConnectionState ( device ) ; }
@ javax.annotation.Nonnull public java.lang.String getName () { return name ; }
public boolean setBluetoothCoexistenceMode ( int mode ) { return mSupplicantStaIfaceHal . setBtCoexistenceMode ( ( ( byte ) ( mode ) ) ) ; }
void setNdkBuildable ( @ com.android.annotations.NonNull java.util.Collection < java.lang.Object > ndkBuildable ) ;
void putLongInt ( long val ) { this . makeValid () ; java.math.NativeBN . putLongInt ( this . bignum , val ) ; }
@ java.lang.Override public void warning ( java.lang.String tag , java.lang.String message ) { java.lang.String description = describe ( message ) ; com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.WARNING , STRING_CONSTANT , mName , description ) ; addWarning ( tag , description ) ; }
final char getChar ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getChar ( ( offset + ( address ) ) ) ; }
private final native void writeFloatVector ( float [] val ) ;
public void onActivityPause () { mStopped = true ; if ( ( mVolumizer ) != null ) { mVolumizer . stop () ; mVolumizer = null ; } }
@ java.lang.Override com.google.common.collect.Multiset.Entry < E > getEntry ( int index ) { return com.google.common.collect.Multisets . immutableEntry ( elementSet . asList () . get ( index ) , counts [ ( ( offset ) + index ) ] ) ; }
public java.lang.String getSetting ( android.content.Context context , java.lang.String symbol , java.lang.String defaultValue ) { final java.lang.String value = Settings.Global . getString ( context . getContentResolver () , symbol ) ; return value != null ? value : defaultValue ; }
@ com.android.internal.annotations.VisibleForTesting public boolean startRinging () { return mRinger . startRinging ( mForegroundCall ) ; }
public com.android.util.Pair < com.android.resources.ResourceType , java.lang.String > resolveResourceId ( int id ) { if ( ( mProjectRes ) != null ) { return mProjectRes . resolveResourceId ( id ) ; } return null ; }
@ java.lang.Override public VT getValue () { checkEntryStatus () ; return enumMap.values [ ordinal ] ; }
@ java.lang.Override public void run () { if ( changed || ( ( mITreeViewer . getInput () ) != ( mDiffLogic . getCategories () ) ) ) { refreshViewerInput () ; } }
byte [] getAddress () { return mAddress ; }
@ java.lang.Override public java.lang.String toString () { return name ; }
public boolean setDeviceName ( java.lang.String name ) { return mSupplicantStaIfaceHal . setWpsDeviceName ( name ) ; }
public static void computeLog ( android.renderscript.cts.TestLog.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . log ( args.inV , t ) ; }
private void releaseWakeLock () { if ( ( mPartialWakeLock ) != null ) { synchronized ( mPartialWakeLock ) { if ( mPartialWakeLock . isHeld () ) { log ( STRING_CONSTANT ) ; mPartialWakeLock . release () ; } } } }
@ java.lang.Override public com.android.ahat.heapdump.Reference get ( int index ) { java.lang.String field = ( STRING_CONSTANT + ( java.lang.Integer . toString ( index ) ) ) + STRING_CONSTANT ; return new com.android.ahat.heapdump.Reference ( this , field , mRoots . get ( index ) , true ) ; }
private void setUsbConfig ( java.lang.String config ) { if ( com.android.server.usb.UsbDeviceManager.DEBUG ) android.util.Slog . d ( com.android.server.usb.UsbDeviceManager.TAG , ( ( STRING_CONSTANT + config ) + STRING_CONSTANT ) ) ; android.os.SystemProperties . set ( com.android.server.usb.UsbDeviceManager.USB_CONFIG_PROPERTY , config ) ; }
@ org.junit.Test public void testCheckStructure003 ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.JillTestTools . getJackTestsWithJackFolder ( STRING_CONSTANT ) , false , new com.android.jack.JarJarRules ( com.android.jill.JillTestTools . getJackTestFolder ( STRING_CONSTANT ) , STRING_CONSTANT ) , null ) ; }
public static void computeAbs ( android.renderscript.cts.TestAbs.ArgumentsCharUchar args ) { args.out = ( ( byte ) ( java.lang.Math . abs ( args.inV ) ) ) ; }
@ java.lang.Override public void cleanUp ( com.android.tradefed.build.IBuildInfo info ) {}
synchronized void nElementGetNativeData ( long id , int [] elementData ) { validate () ; rsnElementGetNativeData ( mContext , id , elementData ) ; }
public void writeToParcel ( android.os.Parcel dest , int flags ) { networkCapabilities . writeToParcel ( dest , flags ) ; dest . writeInt ( legacyType ) ; dest . writeInt ( requestId ) ; dest . writeString ( type . name () ) ; }
@ java.lang.Override public void onDestroy () { super . onDestroy () ; if ( ( mScanner ) != null ) { mScanner . stopScan ( mCallback ) ; } }
private void cmdFlush ( java.io.PrintWriter pw ) { pw . print ( flushEncodedOutput () ) ; }
public boolean isApplicationOnIcc ( com.android.internal.telephony.uicc.IccCardApplicationStatus.AppType type ) { return false ; }
public void testRsqrtF32 () { doF32 ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public void ignore ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { fail ( STRING_CONSTANT ) ; }
@ java.lang.Override public void placeVideoCall ( java.lang.String phoneNumber , int ranking ) { placeCall ( phoneNumber , ranking , true , false ) ; }
private int skipValue ( ) throws java.io.IOException { com.android.tools.perflib.heap.Type type = com.android.tools.perflib.heap.Type . getType ( readUnsignedByte () ) ; int size = type . getSize () ; skipFully ( size ) ; return size + NUMBER_CONSTANT ; }
static java.lang.String getProperty ( java.util.Properties props , java.lang.String propKey , java.lang.String defaultValue ) { if ( props == null ) { return defaultValue ; } return props . getProperty ( propKey , defaultValue ) ; }
public boolean isEnabled () { return ( getIEuiccController () ) != null ; }
@ java.lang.Override @ com.android.annotations.NonNull public com.android.build.gradle.internal.dsl.SigningConfig create ( @ com.android.annotations.NonNull java.lang.String name ) { return instantiator . newInstance ( com.android.build.gradle.internal.dsl.SigningConfig . class , name ) ; }
private static android.content.SharedPreferences getMultiDexPreferences ( android.content.Context context ) { return context . getSharedPreferences ( android.support.multidex.MultiDexExtractor.PREFS_FILE , ( ( Build.VERSION.SDK_INT ) < NUMBER_CONSTANT ? android.content.Context.MODE_PRIVATE : ( android.content.Context.MODE_PRIVATE ) | NUMBER_CONSTANT ) ) ; }
protected int getMinSdk ( com.android.tools.lint.detector.api.Context context ) { if ( ( mMinApi ) == ( - NUMBER_CONSTANT ) ) { mMinApi = context . getMainProject () . getMinSdk () ; } return mMinApi ; }
protected final com.android.tools.lint.detector.api.Detector getDetectorInstance () { if ( ( mDetector ) == null ) { mDetector = getDetector () ; } return mDetector ; }
public static void startMethodTracing () { dalvik.system.VMDebug . startMethodTracing ( android.os.Debug.DEFAULT_TRACE_FILE_PATH , NUMBER_CONSTANT , NUMBER_CONSTANT , false , NUMBER_CONSTANT ) ; }
@ java.lang.Override public void error ( int errorCode , java.lang.String message ) throws android.os.RemoteException {}
public java.lang.Object [] toArray () { return new java.lang.Object [ NUMBER_CONSTANT ] ; }
@ java.lang.Override public void out ( @ com.android.annotations.Nullable java.lang.String line ) { filterStdOut ( line ) ; }
public void resolveOperandBlockIndex ( int [] labelToIndex ) { for ( com.android.jack.dx.ssa.PhiInsn.Operand o : operands ) { o.blockIndex = labelToIndex [ o.ropLabel ] ; } }
public java.lang.String getVersionName () { if ( ( versionNameOverride ) != null ) { return versionNameOverride ; } return variantData . getVariantConfiguration () . getVersionName () ; }
private void getIssuerAlternativeNames ( java.security.cert.CertificateFactory f ) throws java.lang.Exception { java.security.cert.X509Certificate c = getCertificate ( f , libcore.java.security.cert.X509CertificateTest.CERT_RSA ) ; java.util.Collection < java.util.List < > > col = c . getIssuerAlternativeNames () ; checkAlternativeNames ( col ) ; }
@ java.lang.Override public void traverse ( @ javax.annotation.Nonnull com.android.sched.scheduler.ScheduleInstance < ? super com.android.sched.item.Component > schedule ) throws java.lang.Exception { schedule . process ( this ) ; lhs . traverse ( schedule ) ; for ( com.android.jack.ir.ast.JSsaVariableRef var : rhs . values () ) { var . traverse ( schedule ) ; } }
public void testInvalidInvokevirtual () { mn . visitInsn ( org.objectweb.asm.tree.analysis.ACONST_NULL ) ; mn . visitTypeInsn ( org.objectweb.asm.tree.analysis.CHECKCAST , STRING_CONSTANT ) ; mn . visitMethodInsn ( org.objectweb.asm.tree.analysis.INVOKEVIRTUAL , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , false ) ; assertInvalid () ; }
@ java.lang.Override public void checkClientTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType ) throws java.security.cert.CertificateException { checkTrusted ( chain , authType , null , true ) ; }
public void testConstructorNPE () { try { new java.util.concurrent.ExecutorCompletionService ( null ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public java.lang.String getRead () { if ( ! ( mReportRead ) ) { return STRING_CONSTANT ; } return mRead ? STRING_CONSTANT : STRING_CONSTANT ; }
public boolean exists ( com.android.monkeyrunner.easy.By selector ) { com.android.hierarchyviewerlib.device.ViewNode node = selector . findView ( mHierarchyViewer ) ; return node != null ; }
public void inputChanged ( org.eclipse.jface.viewers.Viewer viewer , java.lang.Object oldInput , java.lang.Object newInput ) {}
@ java.lang.Override public void onAdvertisingEnabled ( android.bluetooth.le.AdvertisingSet advertisingSet , boolean enabled , int status ) { if ( enabled ) { android.util.Log . e ( android.bluetooth.le.BluetoothLeAdvertiser.TAG , ( STRING_CONSTANT + STRING_CONSTANT ) ) ; return; } stopAdvertising ( callback ) ; }
@ java.lang.Override public synchronized void close ( ) throws java.io.IOException { if ( ! ( closed ) ) { if ( ( outputStream ) != null ) { outputStream . close () ; } closed = true ; } }
@ java.lang.Override @ org.gradle.api.tasks.Input public boolean isAbortOnError () { return abortOnError ; }
private boolean verifyCameraAppDisabled () { return ( device . hasObject ( android.support.test.uiautomator.By . textContains ( STRING_CONSTANT ) ) ) || ( device . hasObject ( android.support.test.uiautomator.By . text ( STRING_CONSTANT ) ) ) ; }
public void testPlay00 ( ) throws java.lang.Exception { doTestVideoPlaybackLong ( NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void tearDown ( ) throws java.lang.Exception { if ( ( mActivityDoneReceiver ) != null ) { try { mContext . unregisterReceiver ( mActivityDoneReceiver ) ; } catch ( java.lang.IllegalArgumentException e ) {} mActivityDoneReceiver = null ; } super . tearDown () ; }
native boolean lutTest ( java.lang.String path , int X , int Y , byte [] input , byte [] output ) ;
@ java.lang.Override protected boolean mustBeRemoved ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return ( ! ( type . isExternal () ) ) && ( ! ( ( ( com.android.jack.ir.ast.JNode ) ( type ) ) . containsMarker ( com.android.jack.shrob.shrink.KeepMarker . class ) ) ) ; }
void setUiTTYMode ( int uiTtyMode , android.os.Message onComplete ) throws android.os.RemoteException ;
private void log ( java.lang.String msg ) { android.telephony.Rlog . d ( com.android.internal.telephony.sip.SipConnectionBase.LOG_TAG , msg ) ; }
public void performFirstLoad () { loadPackages ( true , false ) ; loadPackages ( false , true ) ; }
@ java.lang.Override public int hashCode () { return ( ( mEAPMethodID ) * NUMBER_CONSTANT ) + ( mAuthParams . hashCode () ) ; }
private void onSelectAll () { mSelections . clear () ; mAltSelection = null ; if ( ( mIsResultValid ) && ( ( mLastValidResult ) != null ) ) { selectAllViewInfos ( mLastValidViewInfoRoot ) ; redraw () ; } fireSelectionChanged () ; }
private static java.lang.String fixParameterString ( java.lang.String parameters ) { return parameters . replace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.String insnArgString ( com.android.dx.dex.code.DalvInsn insn ) { return ( ( regRangeString ( insn . getRegisters () ) ) + STRING_CONSTANT ) + ( insn . cstString () ) ; }
@ java.lang.Override public void run ( int i ) { try ( android.database.Cursor cursor = mContentResolver . query ( Programs.CONTENT_URI , null , null , null , null ) ) { while ( cursor . moveToNext () ) {} } }
@ org.junit.Test @ org.junit.experimental.categories.Category ( value = com.android.jack.category.SlowTests . class ) public void compareBouncycastleStructureWithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.compile.androidtree.bouncycastle.BouncycastleCompilationTest.SOURCELIST , false , com.android.jill.compile.androidtree.bouncycastle.BouncycastleCompilationTest.JARJAR_RULES , ( ( com.android.jack.ProguardFlags [] ) ( null ) ) ) ; }
@ java.lang.Override public void setUiTTYMode ( int uiTtyMode , android.os.Message onComplete ) throws android.os.RemoteException { synchronized ( mLock ) { checkBinderConnection () ; getServiceInterface ( mBinder ) . setUiTTYMode ( mSlotId , mSupportedFeature , uiTtyMode , onComplete ) ; } }
private void preCreateContent () { mUpdaterData . setWindowShell ( mShell ) ; mTaskFactory = new com.android.sdkuilib.internal.tasks.ProgressTaskFactory ( mShell ) ; mUpdaterData . setTaskFactory ( mTaskFactory ) ; mUpdaterData . setImageFactory ( new com.android.sdkuilib.internal.repository.icons.ImageFactory ( mShell . getDisplay () ) ) ; }
public static java.lang.String getDefaultIpAddresses ( android.net.ConnectivityManager cm ) { android.net.LinkProperties prop = cm . getActiveLinkProperties () ; return com.android.settings.Utils . formatIpAddresses ( prop ) ; }
private synchronized com.android.mms.dom.smil.SmilPlayer.TimelineEntry reloadCurrentEntry () { if ( ( mCurrentElement ) < ( mAllEntries . size () ) ) { return mAllEntries . get ( mCurrentElement ) ; } else { return null ; } }
public void visitStackMapTableAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.CodeAttribute codeAttribute , proguard.classfile.attribute.visitor.StackMapTableAttribute stackMapTableAttribute ) { if ( accepted ( clazz , stackMapTableAttribute ) ) { attributeVisitor . visitStackMapTableAttribute ( clazz , method , codeAttribute , stackMapTableAttribute ) ; } }
@ java.lang.Override public boolean isTrue ( ) throws android.support.test.uiautomator.UiObjectNotFoundException { return gotItButton . exists () ; }
public static org.conscrypt.OpenSSLBIOSource wrap ( java.nio.ByteBuffer buffer ) { return new org.conscrypt.OpenSSLBIOSource ( new org.conscrypt.OpenSSLBIOInputStream ( new org.conscrypt.OpenSSLBIOSource.ByteBufferInputStream ( buffer ) , false ) ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { mFilePath = com.android.ide.eclipse.tests.AdtTestData . getInstance () . getTestFilePath ( com.android.ide.common.resources.platform.AttrsXmlParserManifestTest.MOCK_DATA_PATH ) ; mParser = new com.android.ide.common.resources.platform.AttrsXmlParser ( mFilePath , new com.android.ide.eclipse.mock.TestLogger () , NUMBER_CONSTANT ) ; }
private void onPhotoAvatarReceived ( @ android.support.annotation.NonNull android.graphics.drawable.Drawable photo ) { if ( ( bubble ) != null ) { bubble . updatePhotoAvatar ( photo ) ; } }
public boolean isHalStarted () { return mWifiVendorHal . isHalStarted () ; }
public void setPowerSave ( boolean enabled ) { mSupplicantStaIfaceHal . setPowerSave ( enabled ) ; }
public static android.support.v8.renderscript.ScriptIntrinsicYuvToRGB create ( android.support.v8.renderscript.RenderScript rs , android.support.v8.renderscript.Element e ) { long id = rs . nScriptIntrinsicCreate ( NUMBER_CONSTANT , e . getID ( rs ) ) ; android.support.v8.renderscript.ScriptIntrinsicYuvToRGB si = new android.support.v8.renderscript.ScriptIntrinsicYuvToRGB ( id , rs ) ; return si ; }
private boolean isRequired () { return ( ( com.android.compatibility.common.util.PropertyUtil . getFirstApiLevel () ) >= ( android.security.cts.EncryptionTest.MIN_API_LEVEL ) ) && ( ! ( isTelevision () ) ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public synchronized java.util.Collection < ? extends com.android.sched.vfs.BaseVElement > list () { return java.util.Collections . unmodifiableCollection ( map . values () ) ; }
@ java.lang.Override public int hashCode () { return ( address . hashCode () ) + ( NUMBER_CONSTANT * ( prefixLength ) ) ; }
public static void sleep ( int ms ) { try { java.lang.Thread . sleep ( ms ) ; } catch ( java.lang.InterruptedException ie ) { java.lang.System.out . println ( STRING_CONSTANT ) ; } }
@ java.lang.Override public com.android.ims.internal.IImsCallSession createCallSession ( int sessionId , android.telephony.ims.ImsCallProfile profile ) throws android.os.RemoteException { synchronized ( mLock ) { return this . createCallSession ( sessionId , profile , null ) ; } }
public int lastIndexOf ( int ch ) { return lastIndexOf ( ch , ( ( length () ) - NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public java.lang.Object clone () { try { return ( ( java.text.DecimalFormatSymbols ) ( super . clone () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
public void hold () { try { if ( mConnected ) { mConnectionService . hold ( mConnectionId , null ) ; } } catch ( android.os.RemoteException ignored ) {} }
public void testVP8EncodeDecodeVideoFromBufferToSurfaceQCIF ( ) throws java.lang.Throwable { setParameters ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , android.media.cts.EncodeDecodeTest.MIME_TYPE_VP8 , true , false ) ; android.media.cts.EncodeDecodeTest.BufferToSurfaceWrapper . runTest ( this ) ; }
@ java.lang.Override public org.eclipse.ltk.core.refactoring.RefactoringStatus checkInitialConditions ( org.eclipse.core.runtime.IProgressMonitor pm ) throws org.eclipse.core.runtime.CoreException , org.eclipse.core.runtime.OperationCanceledException { if ( ( mProject . findMaxProblemSeverity ( IMarker.PROBLEM , true , IResource.DEPTH_INFINITE ) ) == ( org.eclipse.core.resources.IMarker.SEVERITY_ERROR ) ) { return org.eclipse.ltk.core.refactoring.RefactoringStatus . createFatalErrorStatus ( STRING_CONSTANT ) ; } return new org.eclipse.ltk.core.refactoring.RefactoringStatus () ; }
@ java.lang.Override public void clientCertificateRequested ( long s ) { super . clientCertificateRequested ( s ) ; throw new java.lang.RuntimeException ( STRING_CONSTANT ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setTranslate ( long native_object , float dx , float dy ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return; } android.graphics.Matrix_Delegate . setTranslate ( d.mValues , dx , dy ) ; }
@ java.lang.Override public com.google.mockwebserver.MockResponse peek () { com.google.mockwebserver.MockResponse peek = responseQueue . peek () ; if ( peek != null ) return peek ; if ( ( failFastResponse ) != null ) return failFastResponse ; return super . peek () ; }
public void visitBootstrapMethodsAttribute ( proguard.shrink.Clazz clazz , proguard.shrink.BootstrapMethodsAttribute bootstrapMethodsAttribute ) { if ( shouldBeMarkedAsUsed ( bootstrapMethodsAttribute ) ) { markAsUsed ( bootstrapMethodsAttribute ) ; markConstant ( clazz , bootstrapMethodsAttribute.u2attributeNameIndex ) ; } bootstrapMethodsAttribute . bootstrapMethodEntryAccept ( clazz , bootstrapMethodIndex , this ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private java.util.LinkedList < E > superClone () { try { return ( ( java.util.LinkedList < E > ) ( super . clone () ) ) ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e ) ; } }
public static android.renderscript.ScriptIntrinsicColorMatrix create ( android.renderscript.RenderScript rs ) { long id = rs . nScriptIntrinsicCreate ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; return new android.renderscript.ScriptIntrinsicColorMatrix ( id , rs ) ; }
public void test_getInstance_provider0 ( ) throws java.lang.Exception { test_getInstance ( NUMBER_CONSTANT ) ; }
public android.app.Notification.Builder addAction ( android.app.Notification.Action action ) { if ( action != null ) { mActions . add ( action ) ; } return this ; }
private void releaseAllWakeLocks () { if ( ( mPartialWakeLock ) != null ) { synchronized ( mPartialWakeLock ) { while ( mPartialWakeLock . isHeld () ) { mPartialWakeLock . release () ; } } } }
@ java.lang.Override public java.util.List < android.bluetooth.BluetoothDevice > getConnectedDevices () { com.android.bluetooth.hearingaid.HearingAidService service = getService () ; if ( service == null ) { return new java.util.ArrayList <> () ; } return service . getConnectedDevices () ; }
public void testICS ( ) throws java.lang.Exception { assertEquals ( STRING_CONSTANT , lintProject ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ) ; }
public static long LongMultiplication () { long a ; long b ; long c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a * b ; return c ; }
native void rsnObjDestroy ( long con , long id ) ;
public static synchronized java.util.ArrayList < java.security.Provider > getProviders () { return org.apache.harmony.security.fortress.Services.providers ; }
@ java.lang.Override protected void fillRtTestInfos () { rtTestInfos . add ( TEST001 ) ; rtTestInfos . add ( TEST002 ) ; rtTestInfos . add ( TEST003 ) ; rtTestInfos . add ( TEST004 ) ; rtTestInfos . add ( TEST005 ) ; }
@ org.junit.Test public void classObjToString ( ) throws java.io.IOException { com.android.ahat.TestDump dump = com.android.ahat.TestDump . getTestDump () ; com.android.ahat.heapdump.AhatInstance obj = dump . findClass ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , obj . toString () ) ; }
com.google.common.util.concurrent.ListenableFuture < com.google.common.collect.ImmutableMap < com.android.dialer.DialerPhoneNumber , com.android.dialer.phonelookup.PhoneLookupInfo > > bulkUpdate ( com.google.common.collect.ImmutableMap < com.android.dialer.DialerPhoneNumber , com.android.dialer.phonelookup.PhoneLookupInfo > existingInfoMap ) ;
public void testCanEncodeCharSequence () { assertTrue ( encoder . canEncode ( STRING_CONSTANT ) ) ; assertFalse ( encoder . canEncode ( STRING_CONSTANT ) ) ; }
public void testInitWithDerEncoded ( ) throws java.lang.Exception { assertInitWithDerEncoded ( libcore.java.security.spec.AlgorithmParametersPSSTest.WEIRD_SPEC_DER_ENCODED , libcore.java.security.spec.AlgorithmParametersPSSTest.WEIRD_SPEC ) ; assertInitWithDerEncoded ( libcore.java.security.spec.AlgorithmParametersPSSTest.DEFAULT_SPEC_DER_ENCODED , libcore.java.security.spec.AlgorithmParametersPSSTest.DEFAULT_SPEC ) ; }
public static java.io.File getStlBaseDirectory ( com.android.build.gradle.internal.NdkHandler ndkHandler ) { return new java.io.File ( ndkHandler . getNdkDirectory () , STRING_CONSTANT ) ; }
public boolean isOpened ( ) throws com.android.ims.ImsException { checkAndThrowExceptionIfServiceUnavailable () ; try { return mImsServiceProxy . isOpened () ; } catch ( android.os.RemoteException e ) { throw new com.android.ims.ImsException ( STRING_CONSTANT , e , ImsReasonInfo.CODE_LOCAL_IMS_SERVICE_DOWN ) ; } }
@ java.lang.Override @ javax.annotation.Nonnegative public long read () { long count = NUMBER_CONSTANT ; for ( java.lang.management.GarbageCollectorMXBean gc : gcs ) { count += gc . getCollectionTime () ; } return ( count * NUMBER_CONSTANT ) * NUMBER_CONSTANT ; }
@ java.lang.Override public synchronized void run ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface declaredType ) throws java.lang.Exception { com.android.jack.dx.dex.file.ClassDefItem classDefItem = createClassDefItem ( declaredType ) ; com.android.jack.scheduling.marker.ClassDefItemMarker classDefItemMarker = new com.android.jack.scheduling.marker.ClassDefItemMarker ( classDefItem ) ; declaredType . addMarker ( classDefItemMarker ) ; }
private boolean isMarked ( @ javax.annotation.Nonnull com.android.sched.marker.MarkerManager node ) { synchronized ( node ) { return node . containsMarker ( com.android.jack.shrob.obfuscation.KeepNameMarker . class ) ; } }
protected void shutdownOutput ( ) throws java.io.IOException { if ( ( ( fd ) != null ) && ( fd . valid () ) ) { socketShutdown ( java.net.AbstractPlainSocketImpl.SHUT_WR ) ; shut_wr = true ; } }
@ java.lang.Override public com.google.common.hash.Hasher putBytes ( byte [] bytes ) { try { stream . write ( bytes ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return this ; }
native void rsnAllocationData2D ( long con , long id , int xoff , int yoff , int mip , int face , int w , int h , short [] d , int sizeBytes ) ;
public boolean shouldAccept ( java.net.URI uri , java.net.HttpCookie cookie ) { if ( ( uri == null ) || ( cookie == null ) ) return false ; return java.net.HttpCookie . domainMatches ( cookie . getDomain () , uri . getHost () ) ; }
native void rsnAllocationData3D ( long con , long id , int xoff , int yoff , int zoff , int mip , int w , int h , int depth , long [] d , int sizeBytes ) ;
@ java.lang.Override public void startDtmf ( char c ) { this . startDtmf ( c ) ; }
@ java.lang.Override public boolean getIccLockEnabled () { synchronized ( mLock ) { java.lang.Boolean retValue = ( ( mUiccApplication ) != null ) ? mUiccApplication . getIccLockEnabled () : false ; return retValue ; } }
public java.util.List < java.security.cert.X509Certificate > checkServerTrusted ( java.security.cert.X509Certificate [] certs , java.lang.String authType , java.lang.String hostname ) throws java.security.cert.CertificateException { android.security.net.config.NetworkSecurityConfig config = mConfig . getConfigForHostname ( hostname ) ; return config . getTrustManager () . checkServerTrusted ( certs , authType , hostname ) ; }
public void testConstructor_EndBeforeStart_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , android.security.AndroidKeyPairGeneratorSpecTest.SERIAL_1 , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , android.security.AndroidKeyPairGeneratorSpecTest.NOW , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { mService = null ; mAdapter = null ; }
private static native java.lang.Class < > [] getDeclaredClasses ( java.lang.Class < > c , boolean publicOnly ) ;
public void addListener ( org.eclipse.jface.viewers.ILabelProviderListener listener ) {}
@ com.android.annotations.NonNull private com.android.manifmerger.IMergerLog.FileAndLine xmlFileAndLine ( @ com.android.annotations.NonNull org.w3c.dom.Node node ) { return com.android.manifmerger.XmlUtils . xmlFileAndLine ( node ) ; }
public final java.lang.String encode ( java.lang.String s , java.nio.charset.Charset charset ) { java.lang.StringBuilder builder = new java.lang.StringBuilder ( s . length () ) ; appendEncoded ( builder , s , charset , false ) ; return builder . toString () ; }
public abstract void setCacheMode ( int mode ) ;
public static android.net.Uri [] getPrivateDnsSettingsUris () { return new android.net.Uri [] { Settings.Global . getUriFor ( android.provider.Settings.Global.PRIVATE_DNS_MODE ) , Settings.Global . getUriFor ( android.provider.Settings.Global.PRIVATE_DNS_SPECIFIER ) } ; }
public com.android.sched.vfs.VPath prependPath ( @ javax.annotation.Nonnull com.android.sched.vfs.VPath path ) { pathFragments . add ( NUMBER_CONSTANT , new com.android.sched.vfs.VPath.VPathFragment ( java.lang.String . valueOf ( com.android.sched.vfs.VPath.INTERNAL_SEPARATOR ) , com.android.sched.vfs.VPath.INTERNAL_SEPARATOR ) ) ; pathFragments . addAll ( NUMBER_CONSTANT , path . getPathFragments () ) ; return this ; }
@ org.junit.Test public void testConnectWithNoDisconnectAndSingleExistingNetwork ( ) throws java.lang.Exception { executeAndValidateInitializationSequence () ; executeAndValidateConnectSequence ( NUMBER_CONSTANT , true , false ) ; }
private static native long openDexFileNative ( java.lang.String sourceName , java.lang.String outputName , int flags ) ;
private void generateBuildStepFor ( java.util.Collection < java.lang.String > dependentTestClassNames , java.util.Set < util.build.BuildStep > targets ) { for ( java.lang.String dependentTestClassName : dependentTestClassNames ) { generateBuildStepForDependant ( dependentTestClassName , targets ) ; } }
public int timeMaxI ( int reps ) { int result = i ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . max ( i , i ) ; } return result ; }
@ java.lang.Override @ javax.annotation.Nonnull public java.lang.String getPath () { return path ; }
public void writeFileNameIfDifferentFromCurrent ( @ javax.annotation.Nonnull java.lang.String fileName ) throws java.io.IOException { if ( ! ( fileName . equals ( currentFileName ) ) ) { writeCurrentFileName ( fileName ) ; } }
public boolean p2pGroupAdd ( int netId ) { return mSupplicantP2pIfaceHal . groupAdd ( netId , true ) ; }
public final com.android.server.am.ContentProviderHolder getContentProvider ( android.app.IApplicationThread caller , java.lang.String name ) { if ( caller == null ) { java.lang.String msg = STRING_CONSTANT + name ; android.util.Slog . w ( com.android.server.am.ActivityManagerService.TAG , msg ) ; throw new java.lang.SecurityException ( msg ) ; } return getContentProviderImpl ( caller , name ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static long native_setPathEffect ( long native_object , long effect ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( native_object ) ; if ( delegate == null ) { return effect ; } delegate.mPathEffect = android.graphics.PathEffect_Delegate . getDelegate ( effect ) ; return effect ; }
public void testBaseResourceSetByCount ( ) throws java.lang.Exception { com.android.ide.common.res2.ResourceSet resourceSet = com.android.ide.common.res2.ResourceSetTest . getBaseResourceSet ( false ) ; assertEquals ( NUMBER_CONSTANT , resourceSet . size () ) ; }
public void testCancelSoon ( ) throws java.lang.Exception { if ( ! ( doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.CANCEL_SOON , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ) ) { return; } assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_EXTRAS , android.wm.cts.CrossAppDragAndDropTests.RESULT_OK ) ; }
private long getCtx () { if ( ( ctx ) == NUMBER_CONSTANT ) { ctx = org.apache.harmony.xnet.provider.jsse.NativeCrypto . EVP_DigestInit ( evp_md ) ; } return ctx ; }
private void unpackDistro ( com.android.timezone.distro.TimeZoneDistro distro , java.io.File targetDir ) throws java.io.IOException { android.util.Slog . i ( logTag , ( STRING_CONSTANT + targetDir ) ) ; distro . extractTo ( targetDir ) ; }
@ java.lang.Override protected void cleanup () { removeUncleanAccounts () ; com.android.bluetooth.pbapclient.PbapClientService . clearPbapClientService () ; }
final void putDouble ( int offset , double value ) { sun.nio.ch.NativeObject.unsafe . putDouble ( ( offset + ( address ) ) , value ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; if ( DevicePolicyManager.ACTION_DEVICE_POLICY_MANAGER_STATE_CHANGED . equals ( action ) ) { enforceBeamShareActivityPolicy ( context , new android.os.UserHandle ( getSendingUserId () ) ) ; } }
@ java.lang.Override public void getAllProfiles ( java.lang.String callingPackage , com.android.internal.telephony.euicc.IGetAllProfilesCallback callback ) { checkCallingPackage ( callingPackage ) ; }
public static boolean isSupportedDexMagic ( byte [] magic ) { int api = com.android.dex.DexFormat . magicToApi ( magic ) ; return api > NUMBER_CONSTANT ; }
synchronized void nObjDestroy ( long id ) { if ( ( mContext ) != NUMBER_CONSTANT ) { rsnObjDestroy ( mContext , id ) ; } }
void setSupplicantLogLevel () { mWifiNative . setSupplicantLogLevel ( mVerboseLoggingEnabled ) ; }
@ java.lang.Override public void run () { onPreloginFinished ( icicle , intent , currentTabId , restoreIncognitoTabs ) ; }
public java.lang.String formatNationalNumberWithPreferredCarrierCode ( com.google.i18n.phonenumbers.Phonenumber.PhoneNumber number , java.lang.String fallbackCarrierCode ) { return formatNationalNumberWithCarrierCode ( number , ( ( number . getPreferredDomesticCarrierCode () . length () ) > NUMBER_CONSTANT ? number . getPreferredDomesticCarrierCode () : fallbackCarrierCode ) ) ; }
@ java.lang.Override public void info ( java.lang.String msgFormat , java.lang.Object . . . arg ) { logMessages . add ( java.lang.String . format ( msgFormat , arg ) ) ; }
public int initialize ( android.telephony.mbms.MbmsStreamingManagerCallback callback , int subscriptionId ) throws android.os.RemoteException { return NUMBER_CONSTANT ; }
public synchronized void taskFinished ( org.apache.tools.ant.BuildEvent event ) { sendException ( event , true ) ; myTaskPriority . sendMessage ( com.intellij.rt.ant.execution.IdeaAntLogger2.TASK_END , event . getPriority () , event . getException () ) ; }
public void bindProgramRaster ( android.renderscript.ProgramRaster p ) { validate () ; nContextBindProgramRaster ( ( ( int ) ( safeID ( p ) ) ) ) ; }
public abstract boolean acceptThirdPartyCookies ( android.webkit.WebView webview ) ;
public void close () { sync . close () ; }
public boolean setSuspendOptimizations ( boolean enabled ) { return mSupplicantStaIfaceHal . setSuspendModeEnabled ( enabled ) ; }
@ java.lang.Override public void dispose () { synchronized ( com.android.internal.telephony.PhoneProxy.lockForRadioTechnologyChange ) { super . dispose () ; m3gppSMS . dispose () ; } }
public org.bouncycastle.math.ec.ECPoint subtract ( org.bouncycastle.math.ec.ECPoint b ) { if ( b . isInfinity () ) { return this ; } return this . add ( b . negate () ) ; }
private boolean matchAddresses ( android.database.Cursor c , com.android.bluetooth.map.BluetoothMapContent.FilterInfo fi , com.android.bluetooth.map.BluetoothMapAppParams ap ) { return ( matchOriginator ( c , fi , ap ) ) && ( matchRecipient ( c , fi , ap ) ) ; }
public static double [] copyOf ( double [] original , int newLength ) { if ( newLength < NUMBER_CONSTANT ) { throw new java.lang.NegativeArraySizeException ( java.lang.Integer . toString ( newLength ) ) ; } return java.util.Arrays . copyOfRange ( original , NUMBER_CONSTANT , newLength ) ; }
boolean isConnected ( int callServiceType , int callType ) throws android.os.RemoteException ;
public java.util.List < java.security.cert.X509Certificate > checkClientTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType , java.lang.String hostname ) throws java.security.cert.CertificateException { return checkTrusted ( chain , null , authType , hostname , true ) ; }
public static long abs ( long l ) { return l >= NUMBER_CONSTANT ? l : - l ; }
public java.lang.Class < > getDeclaringClass () { if ( isAnonymousClass () ) { return null ; } return libcore.reflect.AnnotationAccess . getEnclosingClass ( this ) ; }
public void testCipher_Success ( ) throws java.lang.Exception { for ( java.lang.String provider : libcore.javax.crypto.CipherTest.AES_PROVIDERS ) { testCipher_Success ( provider ) ; } }
@ com.android.annotations.NonNull public abstract java.util.List < ? extends com.android.builder.testing.api.DeviceConnector > getDevices ( ) ;
public void testDecode_NullDecoder () { tests.api.java.nio.charset.CharsetTest.MockCharset2 c = new tests.api.java.nio.charset.CharsetTest.MockCharset2 ( STRING_CONSTANT , null ) ; try { c . decode ( java.nio.ByteBuffer . wrap ( STRING_CONSTANT . getBytes () ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
private void selectAllViewInfos ( com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo canvasViewInfo ) { if ( canvasViewInfo != null ) { mSelections . add ( new com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasSelection ( canvasViewInfo , mRulesEngine , mNodeFactory ) ) ; for ( com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo vi : canvasViewInfo . getChildren () ) { selectAllViewInfos ( vi ) ; } } }
void crunchPng ( int key , @ com.android.annotations.NonNull java.io.File from , @ com.android.annotations.NonNull java.io.File to ) throws com.android.ide.common.internal.PngException ;
public static java.lang.String getBestDateTimePattern ( java.util.Locale locale , java.lang.String skeleton ) { return libcore.icu.ICU . getBestDateTimePattern ( skeleton , locale ) ; }
native void rsnAllocationElementData1D ( long con , long id , int xoff , int mip , int compIdx , byte [] d , int sizeBytes ) ;
public static < E > org.hamcrest.Matcher < java.lang.Iterable < ? extends E > > containsInRelativeOrder ( org.hamcrest.Matcher < ? super E > . . . itemMatchers ) { return org.hamcrest.collection.IsIterableContainingInRelativeOrder . containsInRelativeOrder ( ( ( java.util.List ) ( java.util.Arrays . asList ( itemMatchers ) ) ) ) ; }
public void loadUrl ( java.lang.String url ) { if ( url == null ) { return; } switchOutDrawHistory () ; mWebViewCore . sendMessage ( EventHub.LOAD_URL , url ) ; clearTextEntry () ; }
public void setSize ( int size ) { this . size = size ; }
private void notifyTarget ( int which , java.lang.Object obj ) { mTarget . sendMessage ( mWhat , which , NUMBER_CONSTANT , obj ) ; }
public void run () { android.os.Debug . stopMethodTracing () ; android.util.Log . d ( com.android.systemui.statusbar.phone.PhoneStatusBar.TAG , STRING_CONSTANT ) ; vibrate () ; }
public void supplyPin2 ( java.lang.String pin2 , android.os.Message onComplete ) { mPhone.mCM . supplyIccPin2 ( pin2 , onComplete ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) static void setEndpointIdentificationAlgorithm ( javax.net.ssl.SSLParameters params , java.lang.String endpointIdentificationAlgorithm ) { params . setEndpointIdentificationAlgorithm ( endpointIdentificationAlgorithm ) ; }
com.android.ddmlib.Client [] getClients () { synchronized ( mClientList ) { return mClientList . toArray ( new com.android.ddmlib.Client [ mClientList . size () ] ) ; } }
@ java.lang.Override protected void onMethodEnter () { mv . visitLdcInsn ( ( ( ( ( cname ) + STRING_CONSTANT ) + name ) + desc ) ) ; mv . visitMethodInsn ( org.objectweb.asm.commons.INVOKESTATIC , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , false ) ; }
@ org.junit.Test public void test_SSL_CTX_free ( ) throws java.lang.Exception { org.conscrypt.NativeCrypto . SSL_CTX_free ( org.conscrypt.NativeCrypto . SSL_CTX_new () ) ; }
public long write ( java.nio.ByteBuffer [] buffers , int offset , int length ) throws java.io.IOException { return channel . write ( buffers , offset , length ) ; }
public static android.renderscript.Element F16_3 ( android.renderscript.RenderScript rs ) { if ( ( rs.mElement_HALF_3 ) == null ) { rs.mElement_HALF_3 = android.renderscript.Element . createVector ( rs , android.renderscript.Element.DataType.FLOAT_16 , NUMBER_CONSTANT ) ; } return rs.mElement_HALF_3 ; }
public static boolean isAospBuildEnvironment () { if ( ( com.android.tools.lint.detector.api.Project.sAospBuild ) == null ) { com.android.tools.lint.detector.api.Project.sAospBuild = ( com.android.tools.lint.detector.api.Project . getAospTop () ) != null ; } return com.android.tools.lint.detector.api.Project.sAospBuild ; }
public boolean isDefaultOrSystemDialer ( java.lang.String packageName , int userId ) { java.lang.String defaultDialer = getDefaultDialerApplication ( userId ) ; return ( java.util.Objects . equals ( packageName , defaultDialer ) ) || ( java.util.Objects . equals ( packageName , mSystemDialerName ) ) ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { super . widgetSelected ( e ) ; validatePage () ; }
public void endVisit ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { endVisit ( ( ( com.android.jack.ir.ast.JNode ) ( method ) ) ) ; }
protected void registerForLocked ( android.os.Handler h , int what , java.lang.Object obj ) { synchronized ( mLock ) { android.os.Registrant r = new android.os.Registrant ( h , what , obj ) ; mPinLockedRegistrants . add ( r ) ; notifyPinLockedRegistrantsIfNeeded ( r ) ; } }
public static com.android.tools.r8.utils.AndroidApp fromProgramFiles ( java.util.List < java.nio.file.Path > files ) throws java.io.IOException { return com.android.tools.r8.utils.AndroidApp . builder () . addProgramFiles ( files , false ) . build () ; }
protected boolean ensure ( boolean expectedToBeTrue ) { if ( ! expectedToBeTrue ) { differenceFound = true ; } return expectedToBeTrue ; }
synchronized void nAllocationIoReceive ( long alloc ) { validate () ; rsnAllocationIoReceive ( mContext , alloc ) ; }
private static android.net.Uri getBaseUri ( android.content.Context context ) { return com.android.dialer.blocking.FilteredNumberCompat . useNewFiltering ( context ) ? android.provider.BlockedNumberContract.BlockedNumbers.CONTENT_URI : com.android.dialer.database.FilteredNumberContract.FilteredNumber.CONTENT_URI ; }
@ java.lang.Deprecated @ com.android.annotations.Nullable public lombok.ast.Node parseJava ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.JavaContext context ) { return null ; }
native void rsnScriptSetVarD ( long con , long id , int slot , double val ) ;
public void test_skip_LString () { s = new java.util.Scanner ( STRING_CONSTANT ) ; try { s . skip ( ( ( java.lang.String ) ( null ) ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public static final boolean isHandshakeMessageType ( android.security.cts.OpenSSLHeartbleedTest.TlsRecord record , int type ) { android.security.cts.OpenSSLHeartbleedTest.HandshakeMessage handshake = android.security.cts.OpenSSLHeartbleedTest.HandshakeMessage . tryParse ( record ) ; if ( handshake == null ) { return false ; } return ( handshake.type ) == type ; }
@ java.lang.Override public void setDataRoamingEnabled ( boolean enable ) { mDcTracker . setDataRoamingEnabled ( enable ) ; }
public void testPrimitives () { android.renderscript.cts.ScriptC_primitives t = new android.renderscript.cts.ScriptC_primitives ( mRS , mRes , R.raw.primitives ) ; assertTrue ( initializeGlobals ( t ) ) ; t . invoke_test () ; waitForMessage () ; assertEquals ( android.renderscript.cts.RS_MSG_TEST_PASSED , result ) ; }
@ javax.annotation.Nonnull protected java.lang.String getClassOrInterfaceName ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JClassOrInterface type ) { com.android.jack.ir.ast.JPackage enclosingPackage = type . getEnclosingPackage () ; assert enclosingPackage != null ; return getName ( enclosingPackage , type . getName () ) ; }
public int getPriority ( android.bluetooth.BluetoothDevice device ) { enforceCallingOrSelfPermission ( com.android.bluetooth.hfp.BLUETOOTH_ADMIN_PERM , STRING_CONSTANT ) ; return Settings.Global . getInt ( getContentResolver () , Settings.Global . getBluetoothHeadsetPriorityKey ( device . getAddress () ) , BluetoothProfile.PRIORITY_UNDEFINED ) ; }
private static java.security.MessageDigest getMessageDigest ( java.lang.String algorithm ) throws java.security.NoSuchAlgorithmException { return java.security.MessageDigest . getInstance ( algorithm ) ; }
public static native long EVP_get_digestbyname ( java.lang.String name ) ;
@ java.lang.Override public void error ( java.lang.String tag , java.lang.String message , java.lang.Object data ) { java.lang.String description = describe ( message ) ; com.android.ide.eclipse.adt.AdtPlugin . log ( IStatus.ERROR , STRING_CONSTANT , mName , description ) ; addError ( tag , description ) ; }
@ java.lang.Override public void disableScoring () { if ( ( isCallerActiveScorer ( getCallingUid () ) ) || ( isCallerSystemUid () ) ) {} else { throw new java.lang.SecurityException ( STRING_CONSTANT ) ; } }
private void assertDhcpErrorCodes ( int expected , int got ) { org.junit.Assert . assertEquals ( java.lang.Integer . toHexString ( expected ) , java.lang.Integer . toHexString ( got ) ) ; }
private static void errorLog ( java.lang.String msg ) { android.util.Log . e ( com.android.bluetooth.btservice.PhonePolicy.TAG , msg ) ; }
final java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService ( java.util.concurrent.ScheduledThreadPoolExecutor executor ) { return getExitingScheduledExecutorService ( executor , NUMBER_CONSTANT , java.util.concurrent.TimeUnit.SECONDS ) ; }
protected com.android.dialer.dialpadview.DialpadFragment getDialpadFragment () { return ( ( com.android.dialer.dialpadview.DialpadFragment ) ( mainActivity . getFragmentManager () . findFragmentByTag ( com.android.dialer.main.impl.MainSearchController.DIALPAD_FRAGMENT_TAG ) ) ) ; }
public static java.util.List < java.security.Provider > getProvidersList () { synchronized ( org.apache.harmony.security.fortress.Services.providers ) { return new java.util.ArrayList < java.security.Provider > ( org.apache.harmony.security.fortress.Services.providers ) ; } }
@ org.junit.Test public void test011_2 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( TEST011_2 ) . compileAndRunTest () ; }
@ java.lang.Override public void onSetReport ( android.bluetooth.BluetoothDevice device , byte type , byte id , byte [] data ) { mCallback . onSetReport ( device , type , id , data ) ; }
@ java.lang.Override void setUp () { createChannel () ; sendNotifications () ; status = READY ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static boolean native_postRotate ( long native_object , float degrees ) { android.graphics.Matrix_Delegate d = android.graphics.Matrix_Delegate.sManager . getDelegate ( native_object ) ; if ( d == null ) { return false ; } d . postTransform ( android.graphics.Matrix_Delegate . getRotate ( degrees ) ) ; return true ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public E peek () { return ( size ) == NUMBER_CONSTANT ? null : ( ( E ) ( queue [ NUMBER_CONSTANT ] ) ) ; }
public void unregisterForNetworkLocked ( android.os.Handler h ) { return; }
@ java.lang.Override public void onVideoCallProviderChanged ( com.android.server.telecom.Call call ) { updateCall ( call , true , false ) ; }
public void run () { mTextView . setKeyListener ( digitsKeyListener ) ; }
public static void sort ( char [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) , null , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void dismiss () { if ( ( mPopup ) != null ) { mPopup . dismiss () ; mPopup = null ; } }
native void rsnContextFinish ( long con ) ;
private static java.math.BigInteger getSerialNumber ( java.lang.Object cert ) { return ( ( java.security.cert.X509Certificate ) ( cert ) ) . getSerialNumber () ; }
@ java.lang.Override public void onStreamMethodUpdated ( int methodType ) { try { callback . onStreamMethodUpdated ( methodType ) ; } catch ( android.os.RemoteException e ) { onAppCallbackDied ( uid , subscriptionId ) ; } }
private static void debugLog ( java.lang.String msg ) { if ( com.android.bluetooth.btservice.PhonePolicy.DBG ) android.util.Log . d ( com.android.bluetooth.btservice.PhonePolicy.TAG , msg ) ; }
@ java.lang.Override protected void cleanup () { setState ( BluetoothSap.STATE_DISCONNECTED , BluetoothSap.RESULT_CANCELED ) ; closeService () ; if ( ( mSessionStatusHandler ) != null ) { mSessionStatusHandler . removeCallbacksAndMessages ( null ) ; } }
private void writeDebugBeginInternal ( @ javax.annotation.CheckForNull java.lang.String sourceFile , int startLine ) throws java.io.IOException { writeFileNameIfDifferentFromCurrent ( sourceFile ) ; writeLineIfDifferentFromCurrent ( startLine ) ; }
public java.util.regex.Matcher useAnchoringBounds ( boolean value ) { synchronized ( this ) { anchoringBounds = value ; java.util.regex.Matcher . useAnchoringBoundsImpl ( address , value ) ; } return this ; }
@ javax.annotation.CheckForNull com.android.jack.ecj.loader.jast.JAstBinaryType findType ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JDefinedClassOrInterface type ) { return new com.android.jack.ecj.loader.jast.JAstBinaryType ( type , this ) ; }
public synchronized libcore.icu.AlphabeticIndex addLabelRange ( int codePointStart , int codePointEnd ) { libcore.icu.AlphabeticIndex . addLabelRange ( peer , codePointStart , codePointEnd ) ; return this ; }
@ org.junit.Before public void init ( ) throws java.lang.Exception { myCollation = com.ibm.icu.text.Collator . getInstance ( java.util.Locale.GERMAN ) ; if ( ( myCollation ) == null ) { errln ( STRING_CONSTANT ) ; } }
@ java.lang.Override @ javax.annotation.Nonnull public java.util.Iterator < com.android.jack.ir.ast.cfg.JBasicBlock > adapt ( @ javax.annotation.Nonnull com.android.jack.ir.ast.cfg.JControlFlowGraph cfg ) { return com.google.common.collect.Lists . newArrayList ( cfg . getBlocksDepthFirst ( false ) ) . iterator () ; }
public static java.util.Locale getDefault () { if ( ( java.util.Locale.defaultLocale ) == null ) { java.util.Locale . initDefault () ; } return java.util.Locale.defaultLocale ; }
public android.drm.DrmConvertedStatus closeConvertSession ( int convertId ) { if ( ( android.drm.DrmManagerClient.STATE_UNINITIALIZED ) == ( getState () ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return _closeConvertSession ( mUniqueId , convertId ) ; }
public void setLocation ( @ com.android.annotations.NonNull com.android.sdklib.devices.CameraLocation location ) { mLocation = location ; }
protected boolean computeAttributeValues ( java.util.List < org.eclipse.jface.text.contentassist.ICompletionProposal > proposals , int offset , java.lang.String parentTagName , java.lang.String attributeName , org.w3c.dom.Node node , java.lang.String wordPrefix , boolean skipEndTag , int replaceLength ) { return false ; }
public void testChars ( ) throws java.lang.Exception { checkExpression ( CHAR_CONS , STRING_CONSTANT ) ; checkExpression ( CHAR_CONS , STRING_CONSTANT ) ; }
public void setDrawFilter ( android.graphics.DrawFilter filter ) { long nativeFilter = NUMBER_CONSTANT ; if ( filter != null ) { nativeFilter = filter.mNativeInt ; } mDrawFilter = filter ; android.graphics.Canvas . nativeSetDrawFilter ( mNativeCanvas , nativeFilter ) ; }
@ java.lang.Override public long beforeHandshake ( long c ) throws javax.net.ssl.SSLException { long s = super . beforeHandshake ( c ) ; org.apache.harmony.xnet.provider.jsse.NativeCrypto . SSL_set_session_creation_enabled ( s , false ) ; return s ; }
@ java.lang.Override public int queryCallForward ( int condition , java.lang.String number ) throws android.os.RemoteException { return this . queryCallForward ( condition , number ) ; }
boolean startSingleAdvertising ( com.android.bluetooth.gatt.AdvertiseClient client ) { logd ( STRING_CONSTANT ) ; resetCountDownLatch () ; enableAdvertising ( client , true ) ; if ( ! ( waitForCallback () ) ) { return false ; } setAdvertisingData ( client , client.advertiseData , false ) ; return true ; }
@ java.lang.Override public void run () { try { actuallySendPing ( app , normalVersion , id ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
public void onConnectionUpdated ( android.bluetooth.BluetoothDevice device , int interval , int latency , int timeout , int status ) {}
public void run ( com.android.ddmlib.SyncService.ISyncProgressMonitor monitor ) throws com.android.ddmlib.SyncException , com.android.ddmlib.TimeoutException , java.io.IOException { sync . pullFile ( remoteFilePath , tempPath , monitor ) ; }
@ java.lang.Override protected void removeImpl ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JNode existingNode ) throws java.lang.UnsupportedOperationException { assert existingNode != ( thenStmt ) ; if ( ( elseStmt ) == existingNode ) { elseStmt = null ; } else { super . removeImpl ( existingNode ) ; } }
public static synchronized com.android.internal.telephony.uicc.UiccController getInstance ( com.android.internal.telephony.PhoneBase phone ) { if ( ( com.android.internal.telephony.uicc.UiccController.mInstance ) == null ) { com.android.internal.telephony.uicc.UiccController.mInstance = new com.android.internal.telephony.uicc.UiccController ( phone ) ; } else if ( phone != null ) { com.android.internal.telephony.uicc.UiccController.mInstance . setNewPhone ( phone ) ; } return com.android.internal.telephony.uicc.UiccController.mInstance ; }
public static void computeClz ( android.renderscript.cts.TestClz.ArgumentsUintUint args ) { args.out = ( ( int ) ( java.lang.Integer . numberOfLeadingZeros ( args.inValue ) ) ) ; }
private void writeDescriptor ( java.lang.String writeValue ) { android.bluetooth.BluetoothGattDescriptor descriptor = getDescriptor () ; if ( descriptor == null ) return; descriptor . setValue ( writeValue . getBytes () ) ; mBluetoothGatt . writeDescriptor ( descriptor ) ; }
@ java.lang.Override public int dpToPx ( int dp ) { return NUMBER_CONSTANT * dp ; }
public static final void log ( java.lang.String message ) {}
final short getShort ( int offset ) { return sun.nio.ch.NativeObject.unsafe . getShort ( ( offset + ( address ) ) ) ; }
private native long loadNativeCode ( java.lang.String path , java.lang.String funcname , android.os.MessageQueue queue , java.lang.String internalDataPath , java.lang.String obbPath , java.lang.String externalDataPath , int sdkVersion , android.content.res.AssetManager assetMgr , byte [] savedState , java.lang.ClassLoader classLoader , java.lang.String libraryPath ) ;
public void stop () { mRunning = false ; clearLinkProperties () ; mNetlinkSocketObserver . clearNetlinkSocket () ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void nativeDestructor ( long native_shader , long native_skiaShader ) { android.graphics.Shader_Delegate.sManager . removeJavaReferenceFor ( native_shader ) ; }
public static void assertEqualByteArrays ( byte [] expected , byte [] actual ) { org.junit.Assert . assertEquals ( java.util.Arrays . toString ( expected ) , java.util.Arrays . toString ( actual ) ) ; }
@ java.lang.Override final double getDoubleUnchecked ( int i ) { return getDouble ( ix ( i ) ) ; }
public void close ( ) throws java.io.IOException { if ( ( mCookie ) != NUMBER_CONSTANT ) { guard . close () ; dalvik.system.DexFile . closeDexFile ( mCookie ) ; mCookie = NUMBER_CONSTANT ; } }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { switch ( NUMBER_CONSTANT ) { case NUMBER_CONSTANT : java.lang.System.out . println ( STRING_CONSTANT ) ; break; default: throw new java.lang.AssertionError () ; } }
@ java.lang.Override public com.android.sdklib.internal.repository.DownloadCache getDownloadCache () { return mMockDownloadCache ; }
private static boolean isVideoCall ( int videoState ) { return ( android.telecom.VideoProfile . isTransmissionEnabled ( videoState ) ) || ( android.telecom.VideoProfile . isReceptionEnabled ( videoState ) ) ; }
@ java.lang.Override public void changeToVideoClicked () { com.android.dialer.common.LogUtil . enterBlock ( STRING_CONSTANT ) ; com.android.dialer.logging.Logger . get ( mContext ) . logCallImpression ( DialerImpression.Type.VIDEO_CALL_UPGRADE_REQUESTED , mCall . getUniqueCallId () , mCall . getTimeAddedMs () ) ; mCall . getVideoTech () . upgradeToVideo ( mContext ) ; }
void setAvdName ( java.lang.String avdName ) { if ( ! ( isEmulator () ) ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } mAvdName = avdName ; }
public com.android.server.wifi.HalDeviceManager getHalDeviceManager () { return mHalDeviceManager ; }
@ dalvik.annotation.optimization.FastNative public static native double log ( double a ) ;
public static < T > org.hamcrest.Matcher < T > sameInstance ( T target ) { return new org.hamcrest.core.IsSame < T > ( target ) ; }
public boolean responderReportNfcHandover ( java.lang.String requestMessage ) { return mSupplicantP2pIfaceHal . responderReportNfcHandover ( requestMessage ) ; }
private static com.android.tools.perflib.heap.StackTrace getStack ( com.android.tools.perflib.heap.Instance inst ) { return inst . getStack () ; }
void traverse ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JVisitor visitor ) { for ( java.util.ArrayList < com.android.jack.ir.ast.JAnnotationLiteral > annotation : annotations . values () ) { visitor . accept ( annotation ) ; } }
void addNormalBasicBlock ( @ javax.annotation.Nonnull com.android.jack.cfg.NormalBasicBlock block , @ javax.annotation.CheckForNull com.android.jack.ir.ast.JStatement targetStatement ) { assert block != null ; blocksToResolve . add ( new com.android.jack.cfg.ForwardBranchResolver.NormalBasicBlockToResolve ( block , targetStatement ) ) ; }
public void testConstructor3 () { try { new java.util.concurrent.ConcurrentLinkedQueue ( ( ( java.util.Collection ) ( null ) ) ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override protected void engineUpdate ( byte [] b , int off , int len ) throws java.security.SignatureException {}
public com.android.sdkuilib.internal.repository.ArchiveInfo addDependencyFor ( com.android.sdkuilib.internal.repository.ArchiveInfo dependencyFor ) { if ( ! ( mDependencyFor . contains ( dependencyFor ) ) ) { mDependencyFor . add ( dependencyFor ) ; } return this ; }
public void draw ( java.awt.Graphics2D graphics2D , int x , int y , int scaledWidth , int scaledHeight ) { mChunk . draw ( mImage , graphics2D , x , y , scaledWidth , scaledHeight , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public void finest ( java.lang.String msg ) { log ( java.util.logging.Level.FINEST , msg ) ; }
void putBigEndian ( byte [] a , boolean neg ) { this . makeValid () ; java.math.NativeBN . BN_bin2bn ( a , a.length , neg , this . bignum ) ; }
public void incProgress ( int delta ) { if ( ( delta > NUMBER_CONSTANT ) && ( ( mSubCoef ) > NUMBER_CONSTANT ) ) { subIncProgress ( ( delta * ( mSubCoef ) ) ) ; } }
@ java.lang.Override public boolean isConnected ( int callSessionType , int callType ) { return false ; }
public boolean resetAndStart () { return false ; }
public void visitBaseType ( char descriptor ) {}
public static native int getSupportedFeatureSetNative ( int iface ) ;
private void handleRadioProxyExceptionForRR ( com.android.internal.telephony.RILRequest rr , java.lang.String caller , java.lang.Exception e ) { riljLoge ( caller , e ) ; rr . onError ( com.android.internal.telephony.RADIO_NOT_AVAILABLE , null ) ; decrementWakeLock ( rr ) ; rr . release () ; resetProxyAndRequestList () ; }
@ java.lang.Override public java.net.Socket createSocket ( java.net.InetAddress address , int port ) throws java.io.IOException { return new org.conscrypt.OpenSSLSocketImpl ( address , port , ( ( org.conscrypt.SSLParametersImpl ) ( sslParameters . clone () ) ) ) ; }
private com.android.ide.eclipse.adt.internal.editors.layout.descriptors.ViewElementDescriptor getFqcnViewDescriptor ( java.lang.String fqcn ) { com.android.ide.eclipse.adt.internal.editors.AndroidXmlEditor editor = mNode . getEditor () ; if ( editor instanceof com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditor ) { return ( ( com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditor ) ( editor ) ) . getFqcnViewDescriptor ( fqcn ) ; } return null ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setTextLocale ( long native_object , java.lang.String locale ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( native_object ) ; if ( delegate == null ) { return; } delegate . setTextLocale ( locale ) ; }
@ java.lang.Override public com.android.bluetooth.hfp.IProfileServiceBinder initBinder () { return new com.android.bluetooth.hfp.HeadsetService.BluetoothHeadsetBinder ( this ) ; }
@ javax.annotation.Nonnull public static com.android.sched.scheduler.Request createInitialRequest ( @ javax.annotation.Nonnull com.android.sched.scheduler.Scheduler scheduler ) { com.android.sched.scheduler.Request request = scheduler . createScheduleRequest () ; request . addSchedulables ( scheduler . getAllSchedulable () ) ; return request ; }
@ java.lang.Override public void onRemoteConferenceAdded ( android.telecom.RemoteConference conference ) { synchronized ( android.telecom.cts.CtsConnectionService.sLock ) { if ( ( android.telecom.cts.CtsConnectionService.sConnectionService ) != null ) { android.telecom.cts.CtsConnectionService.sConnectionService . onRemoteConferenceAdded ( conference ) ; } } }
public boolean isAffiliatedUser () { throwIfParentInstance ( STRING_CONSTANT ) ; try { return mService . isAffiliatedUser () ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
@ java.lang.Override public synchronized void close ( ) throws java.io.IOException { out . close () ; closed = true ; }
void onBluetoothDisable () { com.android.bluetooth.btservice.AdapterProperties . debugLog ( STRING_CONSTANT ) ; mService . cancelDiscovery () ; setScanMode ( AbstractionLayer.BT_SCAN_MODE_NONE ) ; }
@ java.lang.Override public void run ( com.android.jack.ir.ast.JMethodBodyCfg body ) { com.android.jack.transformations.ssa.SsaBasicBlockSplitterMarker marker = body . getCfg () . removeMarker ( com.android.jack.transformations.ssa.SsaBasicBlockSplitterMarker . class ) ; assert marker != null ; placePhiFunctions ( body . getCfg () ) ; }
public static java.lang.String toXml ( org.w3c.dom.Node node ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( NUMBER_CONSTANT ) ; com.android.utils.XmlUtils . append ( sb , node , NUMBER_CONSTANT ) ; return sb . toString () ; }
@ java.lang.Override public void noteAudioTurnedOffLocked () { if ( mAudioTurnedOn ) { mAudioTurnedOn = false ; if ( ( mAudioTurnedOnTimer ) != null ) { mAudioTurnedOnTimer . stopRunningLocked ( this ) ; } } }
public int length () { final boolean STRING_COMPRESSION_ENABLED = false ; if ( STRING_COMPRESSION_ENABLED ) { return ( count ) > > > NUMBER_CONSTANT ; } else { return count ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { mainHandler = new android.os.Handler ( android.os.Looper . getMainLooper () ) ; }
void handle ( com.android.ahat.Doc doc , com.android.ahat.Query query ) throws java.io.IOException ;
synchronized long nAllocationCreateTyped ( long type , int mip , int usage , long pointer ) { validate () ; return rsnAllocationCreateTyped ( mContext , type , mip , usage , pointer ) ; }
@ org.junit.Before public void setUp () {}
@ java.lang.Override public int hashCode () { return java.lang.Integer . hashCode ( value ) ; }
static void inlinedInvokeStaticViaStaticTwice ( java.lang.Iterable < > it ) { if ( it != null ) { Main.ClassWithClinit12 . callInlinedForNull ( null ) ; Main.ClassWithClinit12 . callInlinedForNull ( it ) ; } }
public static int identityHashCode ( java.lang.Object x ) { if ( x == null ) { return NUMBER_CONSTANT ; } return java.lang.Object . identityHashCode ( x ) ; }
@ java.lang.invoke.MethodHandle.PolymorphicSignature public final native java.lang.Object get ( java.lang.Object . . . args ) ;
public synchronized com.google.android.gles_jni.EGLDisplay eglGetDisplay ( java.lang.Object native_display ) { long value = _eglGetDisplay ( native_display ) ; if ( value == NUMBER_CONSTANT ) { return EGL10.EGL_NO_DISPLAY ; } if ( ( mDisplay.mEGLDisplay ) != value ) mDisplay = new com.google.android.gles_jni.EGLDisplayImpl ( value ) ; return mDisplay ; }
public void testConstructor_NullSerial_Failure ( ) throws java.lang.Exception { try { new android.security.AndroidKeyPairGeneratorSpec ( getContext () , android.security.AndroidKeyPairGeneratorSpecTest.TEST_ALIAS_1 , android.security.AndroidKeyPairGeneratorSpecTest.TEST_DN_1 , null , android.security.AndroidKeyPairGeneratorSpecTest.NOW , android.security.AndroidKeyPairGeneratorSpecTest.NOW_PLUS_10_YEARS , NUMBER_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException success ) {} }
@ java.lang.Override public java.util.Set < K > keySet () { java.util.Set < K > ks = keySet ; return ks != null ? ks : ( keySet = new KeySet ( this ) ) ; }
public void testDisallowGlobal ( ) throws java.lang.Exception { if ( ! ( doTestDragAndDrop ( android.wm.cts.CrossAppDragAndDropTests.DISALLOW_GLOBAL , android.wm.cts.CrossAppDragAndDropTests.REQUEST_NONE , null ) ) ) { return; } assertResult ( android.wm.cts.CrossAppDragAndDropTests.RESULT_KEY_DRAG_STARTED , null ) ; }
public void setParent ( com.android.voicemail.impl.mail.Part parent ) throws com.android.voicemail.impl.mail.MessagingException { this . parent = parent ; }
static void inlinedInvokeStaticViaStatic ( java.lang.Iterable < > it ) { if ( it != null ) { Main.ClassWithClinit11 . callInlinedForNull ( it ) ; } }
public boolean p2pCancelConnect () { return mSupplicantP2pIfaceHal . cancelConnect () ; }
@ java.lang.Override @ javax.annotation.Nonnull synchronized void delete ( @ javax.annotation.Nonnull com.android.sched.vfs.MessageDigestFS.MessageDigestVFile file ) throws com.android.sched.util.file.CannotDeleteFileException { file . getWrappedFile () . delete () ; digests . remove ( file . getPath () ) ; digest = null ; }
public void run () { setBlockOnOpen ( true ) ; open () ; }
@ org.junit.Test @ org.junit.experimental.categories.Category ( value = com.android.jack.category.SlowTests . class ) public void compareLibCoreStructureWithJill ( ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( null , com.android.jill.compile.androidtree.core.CoreCompilationTest.SOURCELIST , false ) ; }
public void setPreCompNeg ( org.bouncycastle.math.ec.ECPoint [] preCompNeg ) { this . preCompNeg = preCompNeg ; }
public static long ShlLongInt () { long lhs = NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs < < rhs ; }
@ org.junit.Test public void retroLambdaDefaultMethodsTest013 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( RETROLAMBDA_DEFAULTMETHODS_013 ) . setSourceLevel ( SourceLevel.JAVA_8 ) . compileAndRunTest () ; }
public void close ( ) throws java.io.IOException { if ( ( mCookie ) != null ) { guard . close () ; dalvik.system.DexFile . closeDexFile ( mCookie ) ; mCookie = null ; } }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static long init2 ( long nPath ) { android.graphics.Path_Delegate newDelegate = new android.graphics.Path_Delegate () ; android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate != null ) { newDelegate . set ( pathDelegate ) ; } return android.graphics.Path_Delegate.sManager . addNewDelegate ( newDelegate ) ; }
@ java.lang.Override public boolean onSearchRequested () { if ( ( mSearchItem ) != null ) { mSearchItem . expandActionView () ; } return true ; }
public static void verifyGolden ( java.lang.Object test , java.lang.Object object ) throws java.lang.Exception { org.apache.harmony.testframework.serialization.SerializationTest . verifyGolden ( test , object , org.apache.harmony.testframework.serialization.SerializationTest . defineComparator ( test , object ) ) ; }
protected static void sleep ( long millis ) { try { java.lang.Thread . sleep ( millis ) ; } catch ( java.lang.InterruptedException e ) { com.android.voicemail.impl.VvmLog . e ( com.android.voicemail.impl.transcribe.TranscriptionTask.TAG , STRING_CONSTANT , e ) ; java.lang.Thread . currentThread () . interrupt () ; } }
private void readDescriptor () { android.bluetooth.BluetoothGattDescriptor descriptor = getDescriptor () ; if ( descriptor != null ) mBluetoothGatt . readDescriptor ( descriptor ) ; }
public void test_twoJar_init ( ) throws java.lang.Exception { java.lang.ClassLoader cl = createLoader ( jar1 , jar2 ) ; }
void add ( java.math.BigInt a ) { java.math.NativeBN . BN_add ( this . bignum , this . bignum , a.bignum ) ; }
@ java.lang.Override public void onError ( int errorCode , java.lang.String message ) { try { callback . onError ( errorCode , message ) ; } catch ( android.os.RemoteException e ) { onAppCallbackDied ( uid , subscriptionId ) ; } }
@ java.lang.Override public void onBluetoothManagerInitialized ( android.content.Context appContext , com.android.settingslib.bluetooth.LocalBluetoothManager bluetoothManager ) { com.android.settingslib.bluetooth.Utils . setErrorListener ( com.android.settings.bluetooth.Utils.mErrorListener ) ; }
public java.lang.String getSubscriberId () { com.android.internal.telephony.uicc.IccRecords r = mIccRecords . get () ; return r != null ? r . getIMSI () : null ; }
public java.util.List < android.content.Intent > getAndClearBroadcastIntents () { java.util.List < android.content.Intent > intents = mBroadcastIntents ; mBroadcastIntents = new java.util.ArrayList <> () ; return intents ; }
@ java.lang.Override public void enter () { mWifiStateMachine . setOperationalMode ( WifiStateMachine.SCAN_ONLY_WITH_WIFI_OFF_MODE ) ; mWifiStateMachine . setSupplicantRunning ( true ) ; mDisabledTimestamp = android.os.SystemClock . elapsedRealtime () ; ( mDeferredEnableSerialNumber ) ++ ; mHaveDeferredEnable = false ; mWifiStateMachine . clearANQPCache () ; }
public static android.telephony.MbmsStreamingManager create ( android.content.Context context , android.telephony.mbms.MbmsStreamingManagerCallback callback , int subscriptionId ) throws android.telephony.mbms.MbmsException { android.telephony.MbmsStreamingManager manager = new android.telephony.MbmsStreamingManager ( context , callback , subscriptionId ) ; manager . bindAndInitialize () ; return manager ; }
private native boolean setCodecConfigPreferenceNative ( byte [] address , android.bluetooth.BluetoothCodecConfig [] codecConfigArray ) ;
@ java.lang.Override public synchronized void testFailed ( com.android.ddmlib.testrunner.TestIdentifier test , java.lang.String trace ) {}
native void rsnScriptSetVarVE ( long con , long id , int slot , byte [] val , long e , int [] dims ) ;
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { lock . lock () ; condition . signal () ; lock . unlock () ; }
public void update ( byte input ) { md5 . update ( input ) ; sha1 . update ( input ) ; }
public android.net.LocalSocket accept ( ) throws java.io.IOException { android.net.LocalSocketImpl acceptedImpl = new android.net.LocalSocketImpl () ; impl . accept ( acceptedImpl ) ; return android.net.LocalSocket . createLocalSocketForAccept ( acceptedImpl ) ; }
@ java.lang.Override protected void onDetachedFromWindow () { super . onDetachedFromWindow () ; removeAllCallbacks () ; }
public static org.xmlpull.v1.XmlPullParserFactory newInstance ( ) throws org.xmlpull.v1.XmlPullParserException { return new org.xmlpull.v1.XmlPullParserFactory () ; }
@ java.lang.Override public java.lang.Object clone () { try { return super . clone () ; } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.InternalError ( e . toString () , e ) ; } }
private void assertNoTombstone ( java.lang.String alias ) { assertTrue ( org.conscrypt.TrustedCertificateStore . isUser ( alias ) ) ; assertFalse ( file ( alias ) . exists () ) ; }
@ javax.annotation.Nonnull public com.android.jack.jayce.v0002.NNode newNode ( ) throws com.android.jack.jayce.v0002.io.InvalidTokenException { throw new com.android.jack.jayce.v0002.io.InvalidTokenException ( ( STRING_CONSTANT + ( this . toString () ) ) ) ; }
public void entering ( java.lang.String sourceClass , java.lang.String sourceMethod ) { logp ( java.util.logging.Level.FINER , sourceClass , sourceMethod , STRING_CONSTANT ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) static boolean isSniEnabledByDefault () { return true ; }
private void internalLoadAllDisplayNames () { if ( ! ( _namesFullyLoaded ) ) { _namesFullyLoaded = true ; new android.icu.impl.TimeZoneNamesImpl.ZoneStringsLoader () . load () ; } }
private final synchronized void updateAudioRoute () { if ( mAudioRouteNeedsUpdate ) { mAudioManager . setWiredHeadsetOn ( ( ( mHeadsetState ) > NUMBER_CONSTANT ) ) ; mAudioRouteNeedsUpdate = false ; } }
@ org.junit.Test public void calculateScore ( ) throws java.lang.Exception { for ( com.android.server.wifi.hotspot2.PasspointNetworkScoreTest.TestData data : com.android.server.wifi.hotspot2.PasspointNetworkScoreTest.TEST_DATA_LIST ) { com.android.server.wifi.ScanDetail scanDetail = com.android.server.wifi.hotspot2.PasspointNetworkScoreTest . generateScanDetail ( data.rssiLevel , data.internetAccess , data.networkType ) ; org.junit.Assert . assertEquals ( data.expectedScore , com.android.server.wifi.hotspot2.PasspointNetworkScore . calculateScore ( data.isHomeProvider , scanDetail , data.anqpElements , data.isActiveNetwork ) ) ; } }
public void visitRuntimeInvisibleAnnotationsAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Method method , proguard.classfile.attribute.visitor.RuntimeInvisibleAnnotationsAttribute runtimeInvisibleAnnotationsAttribute ) { if ( accepted ( clazz , runtimeInvisibleAnnotationsAttribute ) ) { attributeVisitor . visitRuntimeInvisibleAnnotationsAttribute ( clazz , method , runtimeInvisibleAnnotationsAttribute ) ; } }
@ javax.annotation.Nonnull private com.android.jack.dx.dex.file.DexFile createDexFile () { com.android.jack.dx.dex.DexOptions options = new com.android.jack.dx.dex.DexOptions () ; options.forceJumbo = forceJumbo ; return new com.android.jack.dx.dex.file.DexFile ( options ) ; }
@ java.lang.Override public void dispose () { if ( DBG ) log ( ( STRING_CONSTANT + ( this ) ) ) ; mParentApp . unregisterForReady ( this ) ; resetRecords () ; super . dispose () ; }
public void uncheckAllItems () { for ( com.android.sdklib.internal.repository.updater.PkgItem item : getAllPkgItems () ) { item . setChecked ( false ) ; } }
public boolean requestRouteToHost ( int networkType , int hostAddress , java.lang.String packageName ) { java.net.InetAddress inetAddress = android.net.NetworkUtils . intToInetAddress ( hostAddress ) ; if ( inetAddress == null ) { return false ; } return requestRouteToHostAddress ( networkType , inetAddress . getAddress () , packageName ) ; }
public static org.conscrypt.OpenSSLKey wrapPlatformKey ( java.security.interfaces.DSAPrivateKey dsaPrivateKey ) { return new org.conscrypt.OpenSSLKey ( org.conscrypt.NativeCrypto . getDSAPrivateKeyWrapper ( dsaPrivateKey ) , true ) ; }
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { rescaleToFit ( true ) ; }
public void detachFunctor ( long functor ) { if ( ( mAttachInfo.mHardwareRenderer ) != null ) { mAttachInfo.mHardwareRenderer . detachFunctor ( functor ) ; } }
public static void computeSqrt ( android.renderscript.cts.TestSqrt.ArgumentsFloatFloat args , android.renderscript.cts.Target t ) { t . setPrecision ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; args.out = android.renderscript.cts.CoreMathVerifier . sqrt ( args.inV , t ) ; }
@ com.android.annotations.Nullable java.lang.Integer getVersionCode ( ) ;
@ java.lang.Override public void finalize ( ) throws java.lang.Throwable { try { android.os.IBinder operationToken = mOperationToken ; if ( operationToken != null ) { mKeyStore . abort ( operationToken ) ; } } finally { super . finalize () ; } }
public void registerForNetworkLocked ( android.os.Handler h , int what , java.lang.Object obj ) { return; }
public static < E > org.hamcrest.Matcher < E [] > arrayContainingInAnyOrder ( org.hamcrest.Matcher < ? super E > . . . itemMatchers ) { return org.hamcrest.collection.IsArrayContainingInAnyOrder . arrayContainingInAnyOrder ( ( ( java.util.List ) ( java.util.Arrays . asList ( itemMatchers ) ) ) ) ; }
private static java.nio.channels.DatagramChannel createReceiverChannel ( ) throws java.lang.Exception { java.nio.channels.DatagramChannel dc = java.nio.channels.DatagramChannel . open () ; libcore.java.nio.channels.DatagramChannelMulticastTest . configureChannelForReceiving ( dc ) ; dc . bind ( null ) ; return dc ; }
@ java.lang.Override public java.lang.String toString () { return getMessage () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { cursor = android.support.test.espresso.matcher.CursorMatchersTest . makeCursor ( android.support.test.espresso.matcher.CursorMatchersTest.COLUMN_NAMES , android.support.test.espresso.matcher.CursorMatchersTest.COLUMN_VALUES ) ; cursor . moveToFirst () ; }
protected int handleGetLimit ( int field , int limitType ) { if ( limitType == ( android.icu.util.Calendar.LEAST_MAXIMUM ) ) { return NUMBER_CONSTANT ; } else if ( limitType == ( android.icu.util.Calendar.GREATEST_MINIMUM ) ) { return NUMBER_CONSTANT ; } return - NUMBER_CONSTANT ; }
public void testIsSupported_InvalidInitialCharacter () { try { java.nio.charset.Charset . isSupported ( STRING_CONSTANT ) ; fail () ; } catch ( java.lang.IllegalArgumentException expected ) {} }
@ java.lang.Override public boolean isMultiparty () { return this . isMultiparty () ; }
public void stopAdvertisingSet ( android.bluetooth.le.IAdvertisingSetCallback callback ) { com.android.bluetooth.gatt.GattService service = getService () ; if ( service == null ) return; service . stopAdvertisingSet ( callback ) ; }
private boolean missingTargetFile () { for ( java.io.File target : mTargets ) { if ( ! ( target . exists () ) ) { return true ; } } return false ; }
public void supplyPuk2 ( java.lang.String puk2 , java.lang.String newPin2 , android.os.Message onComplete ) { mPhone.mCM . supplyIccPuk2 ( puk2 , newPin2 , onComplete ) ; }
@ java.lang.Override void setUp () { createChannels () ; sendNotifications ( com.android.cts.verifier.notifications.AttentionManagementVerifierActivity.MODE_NONE , true , false ) ; status = READY ; }
private boolean isSupported ( int networkType ) { return mNetworks . containsKey ( networkType ) ; }
public static float FloatDivision () { float a ; float b ; float c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a / b ; return c ; }
public boolean hasPerDomainConfigs () { ensureInitialized () ; return ( ( mConfigs ) != null ) && ( ! ( mConfigs . isEmpty () ) ) ; }
@ java.lang.Override public void dispose () { super . dispose () ; model . removeWindowChangeListener ( this ) ; boldFont . dispose () ; }
@ java.lang.Override public void onSSLStateChange ( int type , int val ) { if ( org.conscrypt.NativeCryptoTest.DEBUG ) { java.lang.System.out . println ( ( ( STRING_CONSTANT + ( java.lang.Long . toString ( sslNativePointer , NUMBER_CONSTANT ) ) ) + STRING_CONSTANT ) ) ; } this . handshakeCompletedCalled = true ; }
public static lombok.ast.Node getCompilationUnit ( @ org.intellij.lang.annotations.Language ( value = STRING_CONSTANT ) java.lang.String javaSource , java.io.File relativePath ) { com.android.tools.lint.detector.api.JavaContext context = com.android.tools.lint.detector.api.LintUtilsTest . parse ( javaSource , relativePath ) ; return context . getCompilationUnit () ; }
public boolean reconnect () { return mSupplicantStaIfaceHal . reconnect () ; }
public void log ( java.lang.String format , java.lang.Object . . . args ) { java.lang.String text = java.lang.String . format ( format , args ) ; mUi . log ( text ) ; }
@ java.lang.Override public java.lang.String compose ( int codepoint , java.lang.String string , java.lang.String a , java.lang.String b ) { return ( ( a . toString () ) + STRING_CONSTANT ) + ( b . toString () ) ; }
public void setTo ( java.util.ArrayList < android.text.util.Rfc822Token > to ) { this . to = to ; }
private java.io.File createAvdIniFile ( com.android.sdklib.internal.avd.AvdManager.AvdInfo info ) throws com.android.prefs.AndroidLocation.AndroidLocationException , java.io.IOException { return createAvdIniFile ( info . getName () , new java.io.File ( info . getPath () ) , info . getTarget () , false ) ; }
@ java.lang.Override public int getFeatureState ( ) throws android.os.RemoteException { synchronized ( mLock ) { return this . getFeatureState () ; } }
@ java.lang.Override public void close ( ) throws java.io.IOException { synchronized ( channelImpl ) { super . close () ; if ( channelImpl . isOpen () ) { channelImpl . close () ; } } }
public int lastIndexOf ( java.lang.String str ) { return lastIndexOf ( str , length () ) ; }
public void testConstructor_EmptyCanonicalName () { try { new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , new java.lang.String [ NUMBER_CONSTANT ] ) ; fail () ; } catch ( java.nio.charset.IllegalCharsetNameException expected ) {} }
public com.android.tools.r8.utils.AndroidApp.Builder addClasspathFiles ( java.util.Collection < java.nio.file.Path > files ) throws java.io.IOException { for ( java.nio.file.Path file : files ) { addFile ( file , ClassKind.CLASSPATH , false ) ; } return this ; }
native void rsnScriptSetVarI ( long con , long id , int slot , int val ) ;
public void test_init_List_null () { try { new javax.net.ssl.KeyStoreBuilderParameters ( ( ( java.util.List ) ( null ) ) ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
public static float FloatMultiplication () { float a ; float b ; float c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a * b ; return c ; }
public com.android.ide.eclipse.adt.internal.ui.ConfigurationSelector.ConfigurationState getState () { if ( ( mSelectedConfiguration . getInvalidQualifier () ) != null ) { return com.android.ide.eclipse.adt.internal.ui.ConfigurationSelector.ConfigurationState.INVALID_CONFIG ; } return com.android.ide.eclipse.adt.internal.ui.ConfigurationSelector.ConfigurationState.OK ; }
private void watchdogHandler () { localLog ( STRING_CONSTANT ) ; if ( ( mWifiState ) == ( com.android.server.wifi.WifiConnectivityManager.WIFI_STATE_DISCONNECTED ) ) { localLog ( STRING_CONSTANT ) ; scheduleWatchdogTimer () ; startSingleScan ( true ) ; } }
@ java.lang.Override public int size () { return size ; }
public android.graphics.Typeface setTypeface ( android.graphics.Typeface typeface ) { long typefaceNative = NUMBER_CONSTANT ; if ( typeface != null ) { typefaceNative = typeface.native_instance ; } android.graphics.Paint . native_setTypeface ( mNativePaint , typefaceNative ) ; mTypeface = typeface ; return typeface ; }
public void testConstructor2NPE () { try { long [] a = null ; new java.util.concurrent.atomic.AtomicLongArray ( a ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public static final void logln ( java.lang.String message ) {}
@ java.lang.Override public void verifyCertificateChain ( long [] certRefs , java.lang.String authMethod ) throws java.security.cert.CertificateException { throw new java.lang.AssertionError ( STRING_CONSTANT ) ; }
public void setAdvertisingParameters ( int advertiserId , android.bluetooth.le.AdvertisingSetParameters parameters ) { com.android.bluetooth.gatt.GattService service = getService () ; if ( service == null ) return; service . setAdvertisingParameters ( advertiserId , parameters ) ; }
public void attach ( @ android.annotation.NonNull android.net.wifi.aware.WifiAwareAttachCallback attachCallback , @ android.annotation.Nullable android.os.Handler handler ) { attach ( handler , null , attachCallback , null ) ; }
@ org.junit.Test public void getNameEmpty () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.android.build.gradle.internal.ProductFlavorCombo () . getName () ) ; }
public static void main ( java.lang.String [] args ) { long dummy = NUMBER_CONSTANT ; Main . assertEquals ( NUMBER_CONSTANT , Main . $opt$LargeFrame ( dummy ) ) ; }
public static < T > org.hamcrest.core.AnyOf < T > anyOf ( java.lang.Iterable < org.hamcrest.org.hamcrest.Matcher < ? extends T > > matchers ) { return org.hamcrest.core.AnyOf . anyOf ( matchers ) ; }
public boolean hasIconSixtyFour () { return ( ( mIconSixtyFour ) != null ) && ( mIconSixtyFour . isFile () ) ; }
public void test_SSLContext_getDefault ( ) throws java.lang.Exception { javax.net.ssl.SSLContext sslContext = javax.net.ssl.SSLContext . getDefault () ; assertNotNull ( sslContext ) ; try { sslContext . init ( null , null , null ) ; fail () ; } catch ( java.security.KeyManagementException expected ) {} }
private void setSystraceUrl ( java.lang.String url ) { this . systraceUrl = url ; }
public void testConstructor2NPE () { try { java.lang.Integer [] a = null ; new java.util.concurrent.atomic.AtomicReferenceArray < java.lang.Integer > ( a ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override protected void onPause () { mLunarView . getThread () . pause () ; super . onPause () ; }
private static native < T > java.lang.reflect.Constructor < T > [] getDeclaredConstructors ( java.lang.Class < T > c , boolean publicOnly ) ;
public void test_TrustManagerFactory_getDefaultAlgorithm ( ) throws java.lang.Exception { java.lang.String algorithm = javax.net.ssl.TrustManagerFactory . getDefaultAlgorithm () ; assertEquals ( StandardNames.TRUST_MANAGER_FACTORY_DEFAULT , algorithm ) ; javax.net.ssl.TrustManagerFactory tmf = javax.net.ssl.TrustManagerFactory . getInstance ( algorithm ) ; test_TrustManagerFactory ( tmf ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public java.lang.String getPath () { return ( ( com.android.sched.util.location.FileLocation ) ( location ) ) . getPath () ; }
@ java.lang.Override public java.lang.String getTimeZoneDisplayName ( java.lang.String tzID , android.icu.impl.NameType type ) { if ( ( tzID == null ) || ( ( tzID . length () ) == NUMBER_CONSTANT ) ) { return null ; } return loadTimeZoneNames ( tzID ) . getName ( type ) ; }
@ java.lang.Override public void onCancel ( android.content.DialogInterface dialog ) { if ( ( mWebViewCore ) != null ) { mWebViewCore . sendMessage ( EventHub.SINGLE_LISTBOX_CHOICE , ( - NUMBER_CONSTANT ) , NUMBER_CONSTANT ) ; } mListBoxDialog = null ; }
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; if ( ( mVoicemailPlaybackPresenter ) != null ) { mVoicemailPlaybackPresenter . onSaveInstanceState ( outState ) ; } }
@ java.lang.Override protected void log ( java.lang.String s ) { if ( com.android.internal.telephony.ims.IsimUiccRecords.DBG ) android.util.Log . d ( com.android.internal.telephony.ims.IsimUiccRecords.LOG_TAG , ( STRING_CONSTANT + s ) ) ; }
@ java.lang.Override public void onRejectCallWithMessage ( java.lang.String message ) { call . reject ( true , message ) ; addTimeoutCheck () ; }
@ com.android.annotations.NonNull private java.lang.String lineNumberString () { switch ( mLineNumber ) { case com.android.tools.perflib.heap.StackFrame.NO_LINE_NUMBER : return STRING_CONSTANT ; case com.android.tools.perflib.heap.StackFrame.UNKNOWN_LOCATION : return STRING_CONSTANT ; case com.android.tools.perflib.heap.StackFrame.COMPILED_METHOD : return STRING_CONSTANT ; case com.android.tools.perflib.heap.StackFrame.NATIVE_METHOD : return STRING_CONSTANT ; default: return java.lang.String . valueOf ( mLineNumber ) ; } }
public void fireOnChange () { myDestPushTargetPanelComponent . fireOnChange () ; T target = myDestPushTargetPanelComponent . getValue () ; if ( target == null ) return; for ( com.intellij.dvcs.push.RepositoryNodeListener < T > listener : myListeners ) { listener . onTargetChanged ( target ) ; } }
private byte [] getData () { synchronized ( mLock ) { if ( ! ( mDone ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return ( mBuf ) != null ? mBuf . getData () : new byte [ NUMBER_CONSTANT ] ; } }
public void setText ( java.lang.String source ) { this . icuIterator . setText ( source ) ; }
@ java.lang.Override public void registerTextAnnotation ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.editor.impl.TextAnnotationGutterProvider provider ) { myTextAnnotationGutters . add ( provider ) ; myTextAnnotationGutterSizes . add ( NUMBER_CONSTANT ) ; updateSize () ; }
synchronized void nScriptGroupSetOutput ( long group , long kernel , long alloc ) { validate () ; rsnScriptGroupSetOutput ( mContext , group , kernel , alloc ) ; }
@ android.test.suitebuilder.annotation.SmallTest public void testConformance ( ) throws java.io.FileNotFoundException { org.chromium.mojo.bindings.ValidationTest . runTest ( STRING_CONSTANT , ConformanceTestInterface.MANAGER . buildStub ( null , ConformanceTestInterface.MANAGER . buildProxy ( null , new org.chromium.mojo.bindings.ValidationTest.SinkMessageReceiver () ) ) ) ; }
public boolean hasRegisteredReceivers ( java.lang.String action ) { return ( mCachedWakeSignalConfigs . containsKey ( action ) ) || ( mCachedNoWakeSignalConfigs . containsKey ( action ) ) ; }
public com.android.builder.model.AndroidProject executeAndReturnModel ( java.lang.String . . . tasks ) { return execute ( java.util.Collections . < java.lang.String > emptyList () , true , tasks ) ; }
@ org.junit.Test public void jarjar003 ( ) throws java.lang.Exception { new com.android.jack.test.helper.RuntimeTestHelper ( JARJAR003 ) . compileAndRunTest () ; }
public final boolean isDeviceOwnerAction ( java.lang.String action ) { return ( android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE . equals ( action ) ) || ( android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_SHAREABLE_DEVICE . equals ( action ) ) ; }
@ com.android.annotations.NonNull public static com.android.tools.lint.detector.api.Location create ( @ com.android.annotations.NonNull java.io.File file , @ com.android.annotations.NonNull java.lang.String contents , int line ) { return com.android.tools.lint.detector.api.Location . create ( file , contents , line , null , null , null ) ; }
@ java.lang.Override protected void onMethodExit ( final int opcode ) { mv . visitLdcInsn ( ( ( ( ( cname ) + STRING_CONSTANT ) + name ) + desc ) ) ; mv . visitMethodInsn ( org.objectweb.asm.commons.INVOKESTATIC , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , false ) ; }
public android.net.RecommendationRequest.Builder setConnectableConfigs ( android.net.wifi.WifiConfiguration [] connectableConfigs ) { this . mConnectableConfigs = connectableConfigs ; return this ; }
@ android.annotation.SystemApi public void addAddress ( android.net.LinkAddress address ) throws java.io.IOException { try { mService . addAddressToTunnelInterface ( mResourceId , address ) ; } catch ( android.os.RemoteException e ) { throw e . rethrowFromSystemServer () ; } }
public static void openSession ( com.jediterm.terminal.ui.TerminalWidget terminal , com.jediterm.terminal.TtyConnector ttyConnector ) { com.jediterm.terminal.ui.TerminalSession session = terminal . createTerminalSession ( ttyConnector ) ; session . start () ; }
public float timeMaxF ( int reps ) { float result = f ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . max ( f , f ) ; } return result ; }
public void onScanningStateChanged ( boolean started ) {}
android.os.ParcelUuid [] getUuids () { return mUuids ; }
void detachNativeFunctor () { if ( ( ( mNativeDrawGLFunctor ) != NUMBER_CONSTANT ) && ( ( mViewRootImpl ) != null ) ) { mViewRootImpl . detachFunctor ( mNativeDrawGLFunctor ) ; } mViewRootImpl = null ; }
@ java.lang.Override public int hashCode () { return original . hashCode () ; }
private static void test_String_charAtExc3 ( java.lang.String testStr ) { junit.framework.Assert . assertEquals ( CHAR_CONS , testStr . charAt ( ( - NUMBER_CONSTANT ) ) ) ; }
@ org.junit.Test public void testEnableDisable () { doEnable ( NUMBER_CONSTANT , false ) ; doDisable ( NUMBER_CONSTANT , false ) ; }
public static native void EC_POINT_set_affine_coordinates ( long groupCtx , long pointCtx , byte [] x , byte [] y ) ;
@ com.android.internal.annotations.VisibleForTesting public void setCallProfile ( com.android.ims.ImsCallProfile profile ) { synchronized ( mLockObj ) { mCallProfile = profile ; trackVideoStateHistory ( mCallProfile ) ; } }
@ org.junit.BeforeClass public static void setUpClassOnlyOnce ( ) throws java.lang.Exception { com.android.bluetooth.hfp.HeadsetStateMachineTest.sAdapterService = mock ( com.android.bluetooth.btservice.AdapterService . class ) ; java.lang.reflect.Method method = com.android.bluetooth.btservice.AdapterService . class . getDeclaredMethod ( STRING_CONSTANT , com.android.bluetooth.btservice.AdapterService . class ) ; method . setAccessible ( true ) ; method . invoke ( null , com.android.bluetooth.hfp.HeadsetStateMachineTest.sAdapterService ) ; }
public static int IntMultiplication () { int a ; int b ; int c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a * b ; return c ; }
public boolean isValid () { if ( ( protocol ) == null ) { return false ; } return true ; }
public static void sort ( byte [] a ) { java.util.DualPivotQuicksort . sort ( a , NUMBER_CONSTANT , ( ( a.length ) - NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public com.ibm.icu.impl.UResource.TableSink getOrCreateTableSink ( com.ibm.icu.impl.UResource.Key key ) { if ( key . contentEquals ( com.ibm.icu.text.DateIntervalInfo.INTERVAL_FORMATS_KEY ) ) { return skeletonSink ; } return null ; }
@ java.lang.Override public void registerContentObservers () { appContext . getContentResolver () . registerContentObserver ( FilteredNumber.CONTENT_URI , true , markDirtyObserver ) ; }
@ java.lang.Override public void onTick ( long millisUntilFinished ) { mTimeLeft = millisUntilFinished ; }
public static void testStoreStore ( boolean doThrow ) { Main m = new Main () ; m.intField = NUMBER_CONSTANT ; m.intField = NUMBER_CONSTANT ; if ( doThrow ) { throw new java.lang.Error ( m . $opt$noinline$toString () ) ; } }
public void setErrorHandler ( android.support.v8.renderscript.RenderScript.RSErrorHandler msg ) { mErrorCallback = msg ; }
private static void log ( java.lang.String msg ) { if ( android.bluetooth.BluetoothPbap.DBG ) { android.util.Log . d ( android.bluetooth.BluetoothPbap.TAG , msg ) ; } }
@ com.android.annotations.Nullable public java.util.Set < java.lang.String > getSupportedAbis () { return mMergedNdkConfig . getAbiFilters () ; }
public void drawImage () { synchronized ( this ) { mImageOverlay . setImage ( mImage ) ; mImage = null ; mPendingDrawing = false ; } redraw () ; }
@ java.lang.Override protected void cleanup () { com.android.bluetooth.hfpclient.HeadsetClientStateMachine . cleanup () ; com.android.bluetooth.hfpclient.HeadsetClientService . clearHeadsetClientService () ; }
private static boolean isRoProp ( @ com.android.annotations.NonNull java.lang.String propName ) { return propName . startsWith ( STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.String getIccSerialNumber () { com.android.internal.telephony.uicc.IccRecords r = mIccRecords . get () ; return r != null ? r.iccid : null ; }
public boolean isTurningOn () { return mPendingCommandState . isTurningOn () ; }
public static android.os.UserHandle myUserHandle () { return android.os.UserHandle . of ( android.os.UserHandle . getUserId ( android.os.Process . myUid () ) ) ; }
public void log ( java.lang.String format , java.lang.Object . . . args ) { mRoot . log ( format , args ) ; }
@ java.lang.Override protected java.lang.Object handleGetObject ( java.lang.String key ) { if ( key == null ) { throw new java.lang.NullPointerException () ; } loadLookupTablesIfNecessary () ; return lookup . get ( key ) ; }
@ java.lang.Override public void execute ( final org.gradle.nativeplatform.NativeLibrarySpec nativeLib ) { ( ( com.android.build.gradle.model.DefaultAndroidComponentSpec ) ( specs . get ( com.android.build.gradle.model.AndroidComponentModelPlugin.COMPONENT_NAME ) ) ) . setNativeLibrary ( nativeLib ) ; com.android.build.gradle.ndk.internal.NdkConfiguration . configureProperties ( nativeLib , sources , buildDir , ndkHandler ) ; }
boolean get ( long index ) { return ( ( data [ ( ( int ) ( index > > > NUMBER_CONSTANT ) ) ] ) & ( NUMBER_CONSTANT < < index ) ) != NUMBER_CONSTANT ; }
public void run () { synchronized ( this ) { loadImage () ; selectedNode = model . getSelected () ; } }
public void setScanResponseData ( int advertiserId , android.bluetooth.le.AdvertiseData data ) { com.android.bluetooth.gatt.GattService service = getService () ; if ( service == null ) return; service . setScanResponseData ( advertiserId , data ) ; }
@ java.lang.Override public boolean onKeyLongPress ( int keyCode , android.view.KeyEvent event ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_BACK : if ( mUi . isWebShowing () ) { bookmarksOrHistoryPicker ( ComboViews.History ) ; return true ; } break; } return false ; }
public com.android.server.wifi.SupplicantStateTracker makeSupplicantStateTracker ( android.content.Context context , com.android.server.wifi.WifiConfigManager configManager , android.os.Handler handler ) { return new com.android.server.wifi.SupplicantStateTracker ( context , configManager , this , handler ) ; }
final boolean updateLRUListLocked ( com.android.server.am.ActivityRecord r ) { final boolean hadit = mLRUActivities . remove ( r ) ; mLRUActivities . add ( r ) ; return hadit ; }
public void stopDtmfTone () { try { mConnectionService . stopDtmfTone ( mId , null ) ; } catch ( android.os.RemoteException e ) {} }
@ java.lang.Override public void srcToLib ( @ javax.annotation.Nonnull java.io.File out , boolean zipFiles , @ javax.annotation.Nonnull java.io.File . . . sources ) throws java.lang.Exception {}
public android.bluetooth.BluetoothGatt connectGatt ( android.content.Context context , boolean autoConnect , android.bluetooth.BluetoothGattCallback callback , int transport , int phy ) { return connectGatt ( context , autoConnect , callback , transport , phy , null ) ; }
@ junit.framework.Test public void testPass2 () { com.android.tradefed.result.ByteArrayInputStreamSource source = new com.android.tradefed.result.ByteArrayInputStreamSource ( STRING_CONSTANT . getBytes () ) ; logs . addTestLog ( STRING_CONSTANT , LogDataType.TEXT , source ) ; com.android.tradefed.util.StreamUtil . cancel ( source ) ; }
private native int getBooleanAttributes0 ( java.lang.String abspath ) ;
@ org.junit.Test public void getNameSingleFlavor () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.android.build.gradle.internal.ProductFlavorCombo ( f1 ) . getName () ) ; }
public void remove ( long key ) { delete ( key ) ; }
public void attach ( @ android.annotation.NonNull android.net.wifi.aware.WifiAwareAttachCallback attachCallback , @ android.annotation.NonNull android.net.wifi.aware.WifiAwareIdentityChangedListener identityChangedListener , @ android.annotation.Nullable android.os.Handler handler ) { attach ( handler , null , attachCallback , identityChangedListener ) ; }
public void testDecode_empty ( ) throws java.lang.Exception { byte [] decoded = libcore.io.Base64 . decode ( new byte [ NUMBER_CONSTANT ] ) ; assertEquals ( NUMBER_CONSTANT , decoded.length ) ; }
public void testDecode_NullByteBuffer () { tests.api.java.nio.charset.CharsetTest.MockCharset c = new tests.api.java.nio.charset.CharsetTest.MockCharset ( STRING_CONSTANT , null ) ; try { c . decode ( null ) ; fail () ; } catch ( java.lang.NullPointerException expected ) {} }
private static byte readByte ( @ com.android.annotations.NonNull java.io.FileInputStream fis , @ com.android.annotations.NonNull com.android.builder.internal.incremental.DependencyDataStore.ReusableBuffer buffers ) throws java.io.IOException { int read = fis . read ( buffers.intBuffer , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; if ( read != NUMBER_CONSTANT ) { return com.android.builder.internal.incremental.DependencyDataStore.TAG_END ; } return buffers.intBuffer [ NUMBER_CONSTANT ] ; }
public void updateConnectStatus () { getPassButton () . setEnabled ( true ) ; }
private static boolean shouldSkip ( java.io.File file ) { return file . getPath () . endsWith ( STRING_CONSTANT ) ; }
public void test_readLByteBufferJ_Position_As_Long ( ) throws java.lang.Exception { java.nio.ByteBuffer readBuffer = java.nio.ByteBuffer . allocate ( org.apache.harmony.tests.java.nio.channels.FileChannelTest.CAPACITY ) ; try { readOnlyFileChannel . read ( readBuffer , java.lang.Long.MAX_VALUE ) ; fail () ; } catch ( java.io.IOException expected ) {} }
public void testPut1_NullPointerException () { java.util.concurrent.ConcurrentHashMap c = new java.util.concurrent.ConcurrentHashMap ( NUMBER_CONSTANT ) ; try { c . put ( null , STRING_CONSTANT ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
@ java.lang.Override public java.lang.String [] getDefaultCipherSuites () { return getDelegate () . getDefaultCipherSuites () ; }
public boolean isEmpty () { return ( count ) == NUMBER_CONSTANT ; }
private boolean isDialerRingingEnabled () { return ( isDialerRingingEnabledForTesting ) != null ? isDialerRingingEnabledForTesting : com.android.incallui.ringtone.DialerRingtoneManager.IS_DIALER_RINGING_ENABLED ; }
public android.net.IpSecManager.UdpEncapsulationSocket openUdpEncapsulationSocket ( int port ) throws android.net.IpSecManager.ResourceUnavailableException , java.io.IOException { return new android.net.IpSecManager.UdpEncapsulationSocket ( mService , port ) ; }
public void init ( org.bouncycastle.crypto.CipherParameters key ) throws java.lang.IllegalArgumentException { if ( ! ( key instanceof org.bouncycastle.crypto.params.RSAKeyParameters ) ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } this . key = ( ( org.bouncycastle.crypto.params.RSAKeyParameters ) ( key ) ) ; }
@ java.lang.Override public java.util.stream.IntStream chars () { return java.util.stream.StreamSupport . intStream ( ( ) - > new java.nio.CharBufferSpliterator ( this ) , java.nio.Buffer.SPLITERATOR_CHARACTERISTICS , false ) ; }
public static org.bouncycastle.crypto.Digest createPRFHash ( int prfAlgorithm ) { switch ( prfAlgorithm ) { case PRFAlgorithm.tls_prf_legacy : return new org.bouncycastle.crypto.tls.CombinedHash () ; default: return org.bouncycastle.crypto.tls.TlsUtils . createHash ( org.bouncycastle.crypto.tls.TlsUtils . getHashAlgorithmForPRFAlgorithm ( prfAlgorithm ) ) ; } }
final void putByte ( int offset , byte value ) { sun.nio.ch.NativeObject.unsafe . putByte ( ( offset + ( address ) ) , value ) ; }
@ java.lang.Override @ javax.annotation.Nonnull public com.android.sched.vfs.BaseVDir createVDir ( @ javax.annotation.Nonnull com.android.sched.vfs.VPath path ) throws com.android.sched.util.file.CannotCreateFileException { com.android.sched.vfs.BaseVDir dir = this ; for ( java.lang.String name : path . split () ) { dir = dir . createVDir ( name ) ; } return dir ; }
public void forEach_bicubic ( android.renderscript.Allocation aout , android.renderscript.Script.LaunchOptions opt ) { forEach ( NUMBER_CONSTANT , ( ( android.renderscript.Allocation ) ( null ) ) , aout , null , opt ) ; }
@ android.annotation.SystemApi protected abstract boolean allowFileSchemeCookiesImpl ( ) ;
void start () { for ( int i = NUMBER_CONSTANT ; i < ( nb ) ; i ++ ) { probes [ i ] . start () ; } com.android.sched.util.log.tracer.ProbeManager.enable . set ( java.lang.Boolean.TRUE ) ; }
@ java.lang.Override java.util.Set < java.util.Map.Entry < R , V > > createEntrySet () { return new EntrySet () ; }
public int get ( int n ) { return values [ n ] ; }
public void test_blockWithJoinWithSource ( ) throws java.lang.Exception { init ( true ) ; try { key . block ( sourceAddress ) ; fail () ; } catch ( java.lang.IllegalStateException expected ) {} }
@ java.lang.Override public final native void transact ( int code , android.os.HwParcel request , android.os.HwParcel reply , int flags ) throws android.os.RemoteException ;
@ java.lang.Override public void start ( android.os.Handler handler , int numShares ) { if ( com.android.bluetooth.opp.BluetoothOppObexClientSession.D ) { android.util.Log . d ( com.android.bluetooth.opp.BluetoothOppObexClientSession.TAG , STRING_CONSTANT ) ; } mCallback = handler ; mThread = new com.android.bluetooth.opp.BluetoothOppObexClientSession.ClientThread ( mContext , mTransport , numShares ) ; mThread . start () ; }
public boolean removeP2pNetwork ( int netId ) { return mSupplicantP2pIfaceHal . removeNetwork ( netId ) ; }
@ java.lang.Override public void setBackgroundDrawable ( android.graphics.drawable.Drawable background ) { if ( ( mImpl ) != null ) { mImpl . setBackgroundDrawable ( background , mBackgroundTint , mBackgroundTintMode , mRippleColor ) ; } }
@ java.lang.Override public UResource.TableSink getOrCreateTableSink ( com.ibm.icu.impl.UResource.Key key ) { int setNum = com.ibm.icu.impl.DayPeriodRules . parseSetNum ( key . toString () ) ; if ( setNum > ( data.maxRuleSetNum ) ) { data.maxRuleSetNum = setNum ; } return null ; }
@ java.lang.Override public void openArtifactSettings ( @ org.jetbrains.annotations.Nullable com.intellij.packaging.artifacts.Artifact artifact ) { com.intellij.openapi.roots.ui.configuration.ModulesConfigurator . showArtifactSettings ( myProject , artifact ) ; }
private com.intellij.psi.PsiDirectory getDirectory ( ) throws com.intellij.util.IncorrectOperationException { if ( ( myTargetDirectory ) == null ) { myTargetDirectory = com.intellij.refactoring.util.RefactoringUtil . createPackageDirectoryInSourceRoot ( myPackage , mySourceRoot ) ; } return myTargetDirectory ; }
static java.lang.String normalizeCountryIso ( java.lang.String countryIso ) { return countryIso . toLowerCase ( java.util.Locale.US ) ; }
public static com.android.bluetooth.btservice.AdapterState make ( com.android.bluetooth.btservice.AdapterService service ) { android.util.Log . d ( com.android.bluetooth.btservice.AdapterState.TAG , STRING_CONSTANT ) ; com.android.bluetooth.btservice.AdapterState as = new com.android.bluetooth.btservice.AdapterState ( service ) ; as . start () ; return as ; }
public final boolean equals ( sun.security.util.ObjectIdentifier id ) { return algid . equals ( ( ( java.lang.Object ) ( id ) ) ) ; }
@ java.lang.Override public void setMustTraceOverridingMethods ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { synchronized ( method ) { com.android.jack.analysis.tracer.BaseTracerMarker marker = method . getMarker ( markerClass ) ; assert marker != null ; marker . setMustTraceOverridingMethods ( true ) ; } }
public javax.crypto.MacSpi getSpi () { return getSpi ( null ) ; }
private boolean isDeviceProvisioned () { return ( Settings.System . getInt ( mContext . getContentResolver () , Settings.System.DEVICE_PROVISIONED , NUMBER_CONSTANT ) ) != NUMBER_CONSTANT ; }
@ java.lang.Override public void srcToExe ( @ javax.annotation.Nonnull java.io.File out , boolean zipFile , @ javax.annotation.Nonnull java.io.File . . . sources ) throws java.lang.Exception { srcToCommon ( sources ) ; setOutputDex ( out ) ; run () ; }
public java.lang.String getActiveScorerPackage () { android.net.NetworkScorerAppManager.NetworkScorerAppData app = new android.net.NetworkScorerAppManager ( mContext ) . getActiveScorer () ; if ( app == null ) { return null ; } return app.packageName ; }
@ java.lang.Override @ javax.annotation.Nonnull public java.io.OutputStream getOutputStream ( ) throws com.android.sched.util.file.WrongPermissionException { return getOutputStream ( false ) ; }
@ javax.annotation.Nonnull public java.io.File getJar () { return jar ; }
private ApkVerifier.Result verify ( java.lang.String apkFilenameInResources ) throws com.android.apksig.apk.ApkFormatException , java.io.IOException , java.security.NoSuchAlgorithmException { return verify ( apkFilenameInResources , null , null ) ; }
public void visitSignatureAttribute ( proguard.classfile.attribute.visitor.Clazz clazz , proguard.classfile.attribute.visitor.Field field , proguard.classfile.attribute.visitor.SignatureAttribute signatureAttribute ) { attributeVisitor . visitSignatureAttribute ( clazz , field , signatureAttribute ) ; }
@ com.android.internal.annotations.VisibleForTesting public void startOnHoldTone ( com.android.internal.telephony.Connection cn ) { android.util.Pair < com.android.internal.telephony.Connection , java.lang.Boolean > result = new android.util.Pair < com.android.internal.telephony.Connection , java.lang.Boolean > ( cn , java.lang.Boolean.TRUE ) ; mOnHoldRegistrants . notifyRegistrants ( new android.os.AsyncResult ( null , result , null ) ) ; }
public final java.net.URL getLocation () { return this . location ; }
public void refresh () { refresh ( null , true ) ; }
@ java.lang.Override protected void execute ( org.eclipse.core.runtime.IProgressMonitor monitor ) throws java.lang.reflect.InvocationTargetException { createProjectAsync ( monitor , null , null , projectData , true ) ; }
public boolean saveConfig () { return false ; }
public boolean matchesPcAndIndex ( int pc , int index ) { return ( index == ( this . index ) ) && ( pc < ( ( startPc ) + ( length ) ) ) ; }
void turnOnIms ( ) throws android.os.RemoteException ;
@ com.android.internal.annotations.VisibleForTesting public android.os.ParcelUuid [] getRemoteUuids ( android.bluetooth.BluetoothDevice device ) { enforceCallingOrSelfPermission ( com.android.bluetooth.btservice.AdapterService.BLUETOOTH_PERM , STRING_CONSTANT ) ; com.android.bluetooth.btservice.RemoteDevices.DeviceProperties deviceProp = mRemoteDevices . getDeviceProperties ( device ) ; if ( deviceProp == null ) { return null ; } return deviceProp . getUuids () ; }
private void timeUpdated () { android.content.Intent timeChanged = new android.content.Intent ( android.content.Intent.ACTION_TIME_CHANGED ) ; getActivity () . sendBroadcast ( timeChanged ) ; }
public com.google.common.base.Objects.ToStringHelper addValue ( @ javax.annotation.Nullable java.lang.Object value ) { return addHolder ( value ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static int nativeGetPixel ( long nativeBitmap , int x , int y ) { android.graphics.Bitmap_Delegate delegate = android.graphics.Bitmap_Delegate.sManager . getDelegate ( nativeBitmap ) ; if ( delegate == null ) { return NUMBER_CONSTANT ; } return delegate.mImage . getRGB ( x , y ) ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( myConditionCheckbox . isSelected () ) { myPassCountCheckbox . setSelected ( false ) ; } updateCheckboxes () ; }
android.net.NetworkCapabilities expectCapabilitiesWithout ( int capability , com.android.server.ConnectivityServiceTest.MockNetworkAgent agent ) { com.android.server.ConnectivityServiceTest.CallbackInfo cbi = expectCallback ( com.android.server.ConnectivityServiceTest.CallbackState.NETWORK_CAPABILITIES , agent ) ; android.net.NetworkCapabilities nc = ( ( android.net.NetworkCapabilities ) ( cbi.arg ) ) ; org.junit.Assert . assertFalse ( nc . hasCapability ( capability ) ) ; return nc ; }
public void testSubmitNullCallable () { java.util.concurrent.ExecutorService e = new jsr166.AbstractExecutorServiceTest.DirectExecutorService () ; try { e . submit ( ( ( java.util.concurrent.Callable ) ( null ) ) ) ; shouldThrow () ; } catch ( java.lang.NullPointerException success ) {} }
public static java.security.Provider.Service getService ( java.lang.String key ) { synchronized ( org.apache.harmony.security.fortress.Services.services ) { return org.apache.harmony.security.fortress.Services.services . get ( key ) ; } }
public boolean isPhiUse () { if ( isDef ) { return false ; } com.android.jack.ir.ast.JNode parent = getParent () ; return parent instanceof com.android.jack.ir.ast.cfg.JPhiBlockElement ; }
public void callSessionInviteParticipantsRequestFailed ( com.android.ims.ImsReasonInfo reasonInfo ) throws android.os.RemoteException { mListener . callSessionInviteParticipantsRequestFailed ( reasonInfo ) ; }
private void waitForFilteredIntent ( android.content.ContextWrapper contextWrapper , final java.lang.String action ) throws java.lang.InterruptedException { contextWrapper . sendOrderedBroadcast ( new android.content.Intent ( action ) , null ) ; synchronized ( mLockObj ) { mLockObj . wait ( android.content.cts.ContextWrapperTest.BROADCAST_TIMEOUT ) ; } }
public void close () { synchronized ( this ) { if ( mClosed ) { return; } try { miSession . close () ; mClosed = true ; } catch ( android.os.RemoteException e ) {} } }
@ com.android.annotations.NonNull public static com.android.sdklib.repository.FullRevision parseRevision ( @ com.android.annotations.NonNull java.lang.String revision ) throws java.lang.NumberFormatException { return com.android.sdklib.repository.FullRevision . parseRevisionImpl ( revision , true , true , false ) ; }
public void test_Unknown ( ) throws java.lang.Exception { try { libcore.icu.Transliterator t = new libcore.icu.Transliterator ( STRING_CONSTANT ) ; fail () ; } catch ( java.lang.RuntimeException expected ) {} }
public void testGetCommonInstances_Success ( ) throws java.lang.Exception { java.security.SecureRandom sr = java.security.SecureRandom . getInstance ( STRING_CONSTANT ) ; assertNotNull ( sr ) ; assertEquals ( libcore.java.security.SecureRandomTest.EXPECTED_PROVIDER , sr . getProvider () . getClass () . getName () ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setStrokeJoin ( long native_object , int join ) { android.graphics.Paint_Delegate delegate = android.graphics.Paint_Delegate.sManager . getDelegate ( native_object ) ; if ( delegate == null ) { return; } delegate.mJoin = join ; }
int getModuleCount () { int moduleCount = NUMBER_CONSTANT ; if ( ( mModules ) != null ) { for ( com.android.tools.gradle.eclipse.ImportModule module : mModules ) { if ( ! ( module . isReplacedWithDependency () ) ) { moduleCount ++ ; } } } return moduleCount ; }
@ java.lang.Override public boolean isLeCodedPhySupported () { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return false ; } return service . isLeCodedPhySupported () ; }
@ java.lang.Override void setUp () { createChannel () ; sendNotifications () ; status = READY ; state = com.android.cts.verifier.notifications.NotificationListenerVerifierActivity.GetSnoozedNotificationTest.READY_TO_SNOOZE ; }
public static boolean isDeveloperOptionsEnabled ( final android.app.Instrumentation instrumentation ) { try { com.android.devtools.systemimage.uitest.utils.SettingsUtil . findItem ( instrumentation , STRING_CONSTANT ) ; return true ; } catch ( android.support.test.uiautomator.UiObjectNotFoundException e ) { return false ; } }
@ java.lang.Override public boolean hasResources ( com.android.resources.ResourceType type ) { java.util.Map < java.lang.String , com.android.ide.common.rendering.api.ResourceValue > list = mResourceItems . get ( type ) ; return ( list != null ) && ( ( list . size () ) > NUMBER_CONSTANT ) ; }
protected void createSourceProps ( java.io.File parentDir , java.lang.String . . . paramValuePairs ) throws java.io.IOException { createFileProps ( SdkConstants.FN_SOURCE_PROP , parentDir , paramValuePairs ) ; }
@ java.lang.Override public void execute () { sleep ( mDelay , mTimeUnit ) ; mOperation . execute () ; }
@ javax.annotation.Nonnull protected com.android.jack.dx.dex.file.DexFile createDexFile () { com.android.jack.dx.dex.DexOptions options = new com.android.jack.dx.dex.DexOptions () ; options.forceJumbo = forceJumbo ; return new com.android.jack.dx.dex.file.DexFile ( options ) ; }
public void finishReceiver ( android.os.IBinder who , int resultCode , java.lang.String resultData , android.os.Bundle map , boolean abortBroadcast , int flags ) throws android.os.RemoteException ;
private void setConfigPasspoint ( android.net.wifi.WifiConfiguration config ) { config.FQDN = STRING_CONSTANT ; config.providerFriendlyName = STRING_CONSTANT ; android.net.wifi.WifiEnterpriseConfig enterpriseConfig = mock ( android.net.wifi.WifiEnterpriseConfig . class ) ; when ( enterpriseConfig . getEapMethod () ) . thenReturn ( WifiEnterpriseConfig.Eap.PEAP ) ; }
protected abstract long getId ( T item ) ;
@ java.lang.Override public void exit () { mWifiConnectivityManager . handleConnectionStateChanged ( WifiConnectivityManager.WIFI_STATE_TRANSITIONING ) ; }
@ org.gradle.model.Unmanaged java.util.Set < java.lang.String > getAbiFilters ( ) ;
@ java.lang.Override public boolean setPriority ( android.bluetooth.BluetoothDevice device , int priority ) { com.android.bluetooth.map.BluetoothMapService service = getService () ; if ( service == null ) { return false ; } return service . setPriority ( device , priority ) ; }
@ java.lang.Override public void onGnssMeasurementsReceived ( android.location.GnssMeasurementsEvent event ) { if ( ( event . getMeasurements () . size () ) > NUMBER_CONSTANT ) { synchronized ( mMeasurementsEvents ) { mMeasurementsEvents . add ( event ) ; } mCountDownLatch . countDown () ; } }
private void releaseEffectsRecorder () { android.util.Log . v ( com.android.camera.VideoCamera.TAG , STRING_CONSTANT ) ; if ( ( mEffectsRecorder ) != null ) { cleanupEmptyFile () ; mEffectsRecorder . release () ; mEffectsRecorder = null ; } mEffectType = EffectsRecorder.EFFECT_NONE ; mVideoFilename = null ; }
private static native long nativeOpenJarFile ( java.lang.String name , int fd ) throws java.io.IOException ;
private static void infoLog ( java.lang.String msg ) { if ( com.android.bluetooth.btservice.AdapterProperties.VDBG ) android.util.Log . i ( com.android.bluetooth.btservice.AdapterProperties.TAG , msg ) ; }
private void badCallActionHelper ( android.net.Uri handle , int expectedCode ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_ALARM_CHANGED , handle ) ; int result = processIntent ( intent , true ) ; org.junit.Assert . assertEquals ( expectedCode , result ) ; verifyNoBroadcastSent () ; verifyNoCallPlaced () ; }
private void removeLastLineSeparator () { int newLength = ( mOut . length () ) - ( mLineSeparator . length () ) ; if ( newLength >= NUMBER_CONSTANT ) { mOut . setLength ( newLength ) ; } }
private void resolveIntent () { android.content.Intent intent = getIntent () ; mName = intent . getStringExtra ( com.android.phone.EditFdnContactScreen.INTENT_EXTRA_NAME ) ; mNumber = intent . getStringExtra ( com.android.phone.EditFdnContactScreen.INTENT_EXTRA_NUMBER ) ; mAddContact = android.text.TextUtils . isEmpty ( mNumber ) ; }
abstract void getUnchecked ( int pos , short [] dst , int dstOffset , int length ) ;
@ java.lang.Override protected java.lang.String removeSessionData ( java.lang.String data ) { data = super . removeSessionData ( data ) ; if ( ( getProject () ) != null ) { data = data . replace ( getProject () . getName () , STRING_CONSTANT ) ; } return data ; }
@ java.lang.Override public java.lang.String toString () { return getLogLine () ; }
public void entityRef ( java.lang.String name ) throws java.io.IOException { check ( false ) ; append ( CHAR_CONS ) ; append ( name ) ; append ( CHAR_CONS ) ; }
@ java.lang.Override public java.lang.String getMeid () { return mMeid ; }
public void testAltWithFlags () { java.util.regex.Pattern . compile ( STRING_CONSTANT ) ; }
@ android.annotation.SystemApi public void sendMultipartTextMessageWithoutPersisting ( java.lang.String destinationAddress , java.lang.String scAddress , java.util.List < java.lang.String > parts , java.util.List < android.app.PendingIntent > sentIntents , java.util.List < android.app.PendingIntent > deliveryIntents ) { sendMultipartTextMessageInternal ( destinationAddress , scAddress , parts , sentIntents , deliveryIntents , false ) ; }
public final java.lang.ClassLoader getClassLoader () { return null ; }
private java.lang.StringBuilder createSuccessTest () { java.lang.StringBuilder output = buildCommonResult () ; addSuccessCode ( output ) ; return output ; }
@ com.android.annotations.Nullable public com.android.ide.eclipse.adt.internal.editors.layout.gle2.CanvasViewInfo findViewInfoFor ( @ com.android.annotations.Nullable com.android.ide.eclipse.adt.internal.editors.layout.gre.NodeProxy proxy ) { if ( proxy == null ) { return null ; } return mNodeToView . get ( proxy . getNode () ) ; }
@ java.lang.Override public final void libToExe ( @ javax.annotation.Nonnull java.util.List < java.io.File > in , @ javax.annotation.Nonnull java.io.File out , boolean zipFile ) throws java.lang.Exception { libToExe ( in . toArray ( new java.io.File [ in . size () ] ) , out , zipFile ) ; }
public java.util.Collection < V > values () { java.util.Collection < V > vs = values ; if ( vs == null ) { vs = new LinkedValues () ; values = vs ; } return vs ; }
private static native java.lang.String nativeLoad ( java.lang.String filename , java.lang.ClassLoader loader , java.lang.String ldLibraryPath ) ;
@ java.lang.Override public void close ( ) throws java.io.IOException { try { addDirToZip ( zos , this ) ; } finally { zos . close () ; com.android.sched.util.file.FileUtils . deleteDir ( dir ) ; } }
@ java.lang.Override public android.os.Parcelable onSaveInstanceState () { android.os.Parcelable superState = super . onSaveInstanceState () ; android.widget.CompoundButton.SavedState ss = new android.widget.CompoundButton.SavedState ( superState ) ; ss.checked = isChecked () ; return ss ; }
@ java.lang.Override public final double getDouble ( int i ) { if ( ! ( memoryRef.isAccessible ) ) { throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; } return getDouble ( ix ( checkIndex ( i , SizeOf.DOUBLE ) ) ) ; }
public static java.util.Locale forLanguageTag ( java.lang.String languageTag ) { if ( languageTag == null ) { throw new java.lang.NullPointerException ( STRING_CONSTANT ) ; } return java.util.Locale . forLanguageTag ( languageTag , false ) ; }
public void testAdd2 () { java.util.Set full = jsr166.CopyOnWriteArraySetTest . populatedSet ( NUMBER_CONSTANT ) ; full . add ( one ) ; assertEquals ( NUMBER_CONSTANT , full . size () ) ; }
@ com.android.tools.layoutlib.annotations.LayoutlibDelegate static void native_setLastPoint ( long nPath , float dx , float dy ) { android.graphics.Path_Delegate pathDelegate = android.graphics.Path_Delegate.sManager . getDelegate ( nPath ) ; if ( pathDelegate == null ) { return; } pathDelegate.mLastX = dx ; pathDelegate.mLastY = dy ; }
@ java.lang.Override public void checkExit ( int status ) { throw new com.android.tools.lint.MainTest.ExitException ( status ) ; }
public static java.util.Calendar getInstance () { return java.util.Calendar . createCalendar ( java.util.TimeZone . getDefault () , java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ) ; }
public int [] getCellBandwidths () { return ( mCellBandwidths ) == null ? new int [ NUMBER_CONSTANT ] : mCellBandwidths ; }
com.android.server.telecom.ConnectionServiceFocusManager create ( com.android.server.telecom.ConnectionServiceFocusManager.CallsManagerRequester requester ) ;
@ java.lang.Override public void setMustTraceOverridingMethods ( @ javax.annotation.Nonnull com.android.jack.ir.ast.JMethod method ) { com.android.jack.analysis.tracer.BaseTracerMarker marker = method . getMarker ( markerClass ) ; assert marker != null ; marker . setMustTraceOverridingMethods ( true ) ; }
public native java.lang.Class < > [] getExceptionTypes ( ) ;
@ com.android.annotations.NonNull public static org.w3c.dom.Document parse ( @ com.android.annotations.NonNull java.lang.String xml ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { xml = com.android.utils.XmlUtils . stripBom ( xml ) ; return com.android.utils.PositionXmlParser . parse ( xml , new org.xml.sax.InputSource ( new java.io.StringReader ( xml ) ) , true , true ) ; }
synchronized long nScriptKernelIDCreate ( long sid , int slot , int sig ) { validate () ; return rsnScriptKernelIDCreate ( mContext , sid , slot , sig ) ; }
@ java.lang.Override public java.lang.Object getValue ( int valueIndex ) { if ( valueIndex == NUMBER_CONSTANT ) { return processId ; } try { return getValueAsLong ( valueIndex ) ; } catch ( com.android.ddmlib.log.InvalidTypeException e ) {} return null ; }
public float timeScalbF ( int reps ) { float result = f ; for ( int rep = NUMBER_CONSTANT ; rep < reps ; ++ rep ) { result = java.lang.Math . scalb ( f , NUMBER_CONSTANT ) ; } return result ; }
@ java.lang.Override public void run () { if ( ( mCallback ) != null ) { mCallback . onConnectionUpdated ( this , interval , latency , timeout , status ) ; } }
public boolean migrateNetworksFromSupplicant ( java.util.Map < java.lang.String , android.net.wifi.WifiConfiguration > configs , android.util.SparseArray < java.util.Map < java.lang.String , java.lang.String > > networkExtras ) { mWifiSupplicantControl . loadNetworks ( configs , networkExtras ) ; return true ; }
public void run () { synchronized ( this ) { tree = model . getTree () ; setBounds () ; setTransform () ; } }
public java.lang.Class loadClassBinaryName ( java.lang.String name , java.lang.ClassLoader loader , java.util.List < java.lang.Throwable > suppressed ) { return dalvik.system.DexFile . defineClass ( name , loader , mCookie , this , suppressed ) ; }
void assertThreadStaysAlive ( java.lang.Thread thread , long millis ) { try { jsr166.JSR166TestCase . delay ( millis ) ; assertTrue ( thread . isAlive () ) ; } catch ( java.lang.InterruptedException fail ) { fail ( STRING_CONSTANT ) ; } }
public void removeWindow ( com.android.server.WindowManagerService.Session session , android.view.IWindow client ) { synchronized ( mWindowMap ) { com.android.server.WindowManagerService.WindowState win = windowForClientLocked ( session , client , false ) ; if ( win == null ) { return; } removeWindowLocked ( session , win ) ; } }
public static double DoubleDivision () { double a ; double b ; double c ; a = NUMBER_CONSTANT ; b = NUMBER_CONSTANT ; c = a / b ; return c ; }
public void writeToParcel ( android.os.Parcel out ) { out . writeInt ( mCount . get () ) ; out . writeInt ( mLoadedCount ) ; out . writeInt ( mLastCount ) ; out . writeInt ( mUnpluggedCount ) ; }
@ java.lang.Override public void run () { synchronized ( this ) { if ( shutdown ) { com.android.server.power.ShutdownThread . shutdown ( mContext , reason , confirm ) ; } else { com.android.server.power.ShutdownThread . reboot ( mContext , reason , confirm ) ; } } }
@ android.annotation.SystemApi protected abstract void setAcceptFileSchemeCookiesImpl ( boolean accept ) ;
public java.lang.annotation.Annotation [] [] getParameterAnnotations () { return java.lang.Class . findOverriddenMethodIfProxy ( artMethod ) . getParameterAnnotations () ; }
@ java.lang.Override public void sendBroadcastAsUser ( android.content.Intent intent , android.os.UserHandle user ) { sendBroadcast ( intent ) ; }
@ java.lang.Override public void checkServerTrusted ( java.security.cert.X509Certificate [] chain , java.lang.String authType ) throws java.security.cert.CertificateException { checkTrusted ( chain , authType , null , false ) ; }
public long size () { try { return delegate . size () ; } catch ( java.io.IOException e ) { return - NUMBER_CONSTANT ; } }
@ org.junit.Test @ java.lang.Runtime public void testLamba010 ( ) throws java.lang.Exception { run ( LAMBDA010 ) ; }
@ java.lang.Override public void sendConnectionStateChange ( android.bluetooth.BluetoothDevice device , int profile , int state , int prevState ) { com.android.bluetooth.btservice.AdapterService service = getService () ; if ( service == null ) { return; } service . sendConnectionStateChange ( device , profile , state , prevState ) ; }
public boolean contains ( com.android.ide.eclipse.adt.editors.layout.gscripts.Point p ) { return ( p != null ) && ( contains ( p.x , p.y ) ) ; }
public void test_Any_Lower ( ) throws java.lang.Exception { libcore.icu.Transliterator t = new libcore.icu.Transliterator ( STRING_CONSTANT ) ; assertEquals ( STRING_CONSTANT , t . transliterate ( STRING_CONSTANT ) ) ; }
@ android.test.suitebuilder.annotation.SmallTest @ org.junit.Test public void testNullHandle () { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_CALL , null ) ; int result = processIntent ( intent , true ) ; org.junit.Assert . assertEquals ( DisconnectCause.INVALID_NUMBER , result ) ; verifyNoBroadcastSent () ; verifyNoCallPlaced () ; }
@ java.lang.Override public void afterCheckProject ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context ) { if ( ( ( mAlwaysFields ) != null ) && ( ! ( mHasIfRoomRefs ) ) ) { for ( com.android.tools.lint.detector.api.Location location : mAlwaysFields ) { context . report ( com.android.tools.lint.checks.AlwaysShowActionDetector.ISSUE , location , STRING_CONSTANT ) ; } } }
public void setCallAudioState ( android.telecom.CallAudioState state ) { try { mConnectionService . onCallAudioStateChanged ( mId , state , null ) ; } catch ( android.os.RemoteException e ) {} }
@ com.android.annotations.Nullable public java.util.List < com.android.tools.lint.client.api.JavaParser.ResolvedAnnotation > getAnnotations ( @ com.android.annotations.NonNull com.android.tools.lint.client.api.JavaParser.ResolvedPackage pkg ) { com.android.tools.lint.ExternalAnnotationRepository.ClassInfo c = findPackage ( pkg ) ; if ( c == null ) { return null ; } return c . getAnnotations () ; }
@ java.lang.Override public void addToBlacklist ( java.lang.String bssid ) {}
@ java.lang.Override public void log ( java.lang.String format , java.lang.Object . . . args ) { mLog . info ( format , args ) ; }
private void connectNativeNetdService () { new java.lang.Thread () { @ java.lang.Override public void run () { synchronized ( com.android.server.IpSecService . this ) { android.net.util.NetdService . get ( com.android.server.IpSecService.NETD_FETCH_TIMEOUT ) ; } } } . start () ; }
public static com.android.internal.telephony.cat.AppInterface getInstance () { return com.android.internal.telephony.cat.CatService . getInstance ( null , null , null ) ; }
@ java.lang.Override public void run () { removeCallbacks ( this ) ; updateViews ( false ) ; }
public abstract void processConnectionEvent ( android.os.Message message , int state ) ;
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ org.gradle.model.Model ( value = com.android.build.gradle.model.ModelConstants.IS_APPLICATION ) public java.lang.Boolean isApplication () { return true ; }
private static java.lang.String getParentName ( java.lang.String styleName ) { int index = styleName . lastIndexOf ( CHAR_CONS ) ; if ( index != ( - NUMBER_CONSTANT ) ) { return styleName . substring ( NUMBER_CONSTANT , index ) ; } return null ; }
private static boolean isStdErr ( @ com.android.annotations.NonNull java.io.File output ) { return com.android.build.gradle.internal.dsl.LintOptions.STDERR . equals ( output . getPath () ) ; }
private void verifyProperCleanup () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , mCallerInfoLookupHelper . getCallerInfoEntries () . size () ) ; }
protected final org.bouncycastle.math.ec.ECFieldElement getRawXCoord () { return x ; }
@ java.lang.Override public boolean isIgnored ( @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Context context , @ com.android.annotations.NonNull com.android.tools.lint.detector.api.Issue issue , @ com.android.annotations.Nullable com.android.tools.lint.detector.api.Location location , @ com.android.annotations.NonNull java.lang.String message ) { return issue != ( com.android.tools.lint.client.api.IssueRegistry.LINT_ERROR ) ; }
@ java.lang.Override public void run () { this . onChange ( mSelfChange , mUri , mUserId ) ; }
public void testDeserializeWasExternalizableClass ( ) throws java.lang.Exception { final java.lang.String s = STRING_CONSTANT + STRING_CONSTANT ; assertFalse ( libcore.java.io.SerializationTest.wasExternalizableInitializedFlag ) ; try { libcore.util.SerializationTester . deserializeHex ( s ) ; fail () ; } catch ( java.io.InvalidClassException expected ) {} assertTrue ( libcore.java.io.SerializationTest.wasExternalizableInitializedFlag ) ; }
void runTask ( @ com.android.annotations.NonNull com.android.builder.tasks.Job < T > job ) throws java.lang.Exception ;
public static void main ( java.lang.String [] args ) throws java.lang.Exception { Main . test ( STRING_CONSTANT ) ; Main . test ( STRING_CONSTANT ) ; Main . test ( STRING_CONSTANT ) ; Main . test ( STRING_CONSTANT ) ; }
public android.drm.DrmConvertedStatus closeConvertSession ( int convertId ) { return _closeConvertSession ( mUniqueId , convertId ) ; }
public static void checkStructureWithJill ( @ javax.annotation.CheckForNull java.io.File [] refClasspath , @ javax.annotation.Nonnull java.io.File fileOrSourceList , boolean withDebugInfo ) throws java.lang.Exception { com.android.jill.JillTestTools . checkStructureWithJill ( refClasspath , fileOrSourceList , withDebugInfo , null , null ) ; }
@ java.lang.Override public void run () { if ( ( getActivity () ) != null ) { getActivity () . finish () ; } }
@ java.lang.Override public void run () { android.os.Looper . prepare () ; mLooper = android.os.Looper . myLooper () ; mInitErrors = mCamera . cameraInitUnspecified ( mCameraId ) ; mStartDone . open () ; android.os.Looper . loop () ; }
public abstract void requestIconForPageUrl ( java.lang.String url , android.webkit.WebIconDatabase.IconListener listener ) ;
private int getApiLevel ( java.lang.String target ) { if ( target . startsWith ( STRING_CONSTANT ) ) { return java.lang.Integer . parseInt ( target . substring ( STRING_CONSTANT . length () ) ) ; } return - NUMBER_CONSTANT ; }
public void setDate ( long date ) { this . date = date ; }
@ java.lang.Override public final boolean equals ( java.lang.Object obj ) { return ( obj == ( this ) ) || ( obj instanceof com.android.sched.util.location.NoLocation ) ; }
public static void main ( java.lang.String [] args ) { Main . mul () ; }
public abstract void setCookie ( java.lang.String url , java.lang.String value , android.webkit.ValueCallback < java.lang.Boolean > callback ) ;
@ java.lang.Override public java.lang.Object [] getElements ( java.lang.Object model ) { return ( ( java.util.List < > ) ( model ) ) . toArray () ; }
@ java.lang.Override public void loggedRun () { mDtmfLocalTonePlayer . stopTone ( call ) ; }
public void test_isWhitespaceC () { assertTrue ( STRING_CONSTANT , java.lang.Character . isWhitespace ( CHAR_CONS ) ) ; assertFalse ( STRING_CONSTANT , java.lang.Character . isWhitespace ( CHAR_CONS ) ) ; }
public static long XorLongInt () { long lhs = NUMBER_CONSTANT ; int rhs = NUMBER_CONSTANT ; return lhs ^ rhs ; }
@ javax.annotation.Nullable vogar.target.Runner newRunner ( vogar.monitor.TargetMonitor monitor , java.lang.String qualification , java.lang.Class < > klass , java.util.concurrent.atomic.AtomicReference < java.lang.String > skipPastReference , vogar.target.TestEnvironment testEnvironment , int timeoutSeconds , boolean profile , java.lang.String [] args ) ;
@ java.lang.Override public boolean isConnected ( int slotId , int featureType , int callSessionType , int callType ) throws android.os.RemoteException { return false ; }
@ java.lang.Override public void releaseBitmap ( android.graphics.Bitmap bitmap ) {}
@ org.junit.Test public void byId ( ) throws java.lang.Exception { com.google.gerrit.extensions.common.AccountInfo user = newAccount ( STRING_CONSTANT ) ; assertQuery ( STRING_CONSTANT ) ; assertQuery ( currentUserInfo._accountId , currentUserInfo ) ; assertQuery ( user._accountId , user ) ; }
@ java.lang.Override protected void run ( ) throws java.lang.Exception { processor . query ( com.google.gerrit.sshd.commands.Query . join ( query , STRING_CONSTANT ) ) ; }
private void setRefLogIdent ( final com.google.gerrit.reviewdb.client.PatchSetApproval submitAudit ) { if ( submitAudit != null ) { branchUpdate . setRefLogIdent ( identifiedUserFactory . create ( submitAudit . getAccountId () ) . newRefLogIdent () ) ; } }
public void onSuccess ( final com.google.gwtjsonrpc.client.VoidResult result ) { createCommentEditor ( suggestRow , column , line , file ) ; }
protected PushOneCommit.Result createChange ( ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , admin . getIdent () , git ) ; return push . to ( STRING_CONSTANT ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.common.ChangeInfo > submittedTogether ( ) throws com.google.gerrit.extensions.restapi.RestApiException { throw new com.google.gerrit.extensions.restapi.NotImplementedException () ; }
com.googlesrouce.gerrit.plugins.github.git.ReplicateProjectStep create ( @ com.google.inject.assistedinject.Assisted ( value = STRING_CONSTANT ) java.lang.String organisation , @ com.google.inject.assistedinject.Assisted ( value = STRING_CONSTANT ) java.lang.String repository ) ;
private static void h ( final java.lang.StringBuilder r , final com.google.gerrit.client.reviewdb.PatchSet ps ) { com.google.gerrit.client.data.GitwebLink . var ( r , STRING_CONSTANT , ps . getRevision () ) ; }
private static int getInt ( final org.spearce.jgit.transport.RemoteConfig rc , final org.spearce.jgit.lib.RepositoryConfig cfg , final java.lang.String name , final int defValue ) { return cfg . getInt ( STRING_CONSTANT , rc . getName () , name , defValue ) ; }
@ org.junit.Test ( expected = java.lang.IllegalStateException . class ) public void testProjectRecreationAfterRestart ( ) throws java.lang.Exception { repoManager . createRepository ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ) ; com.google.gerrit.server.git.LocalDiskRepositoryManager newRepoManager = new com.google.gerrit.server.git.LocalDiskRepositoryManager ( site , cfg ) ; newRepoManager . createRepository ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ) ; }
private com.google.gerrit.server.events.DependencyAttribute newDependsOn ( com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.reviewdb.client.PatchSet ps ) { com.google.gerrit.server.events.DependencyAttribute d = newDependencyAttribute ( c , ps ) ; d.isCurrentPatchSet = ps . getId () . equals ( c . currentPatchSetId () ) ; return d ; }
@ java.lang.Override public java.lang.String format ( java.lang.String projectName , com.googlesource.gerrit.plugins.xdocs.ConfigSection cfg , java.lang.String raw ) { return ( STRING_CONSTANT + ( org.apache.commons.lang.StringEscapeUtils . escapeHtml ( raw ) ) ) + STRING_CONSTANT ; }
private org.eclipse.jgit.lib.ObjectId pushChangeTo ( org.eclipse.jgit.junit.TestRepository < > repo , java.lang.String branch ) throws java.lang.Exception { return pushChangeTo ( repo , branch , STRING_CONSTANT ) ; }
public abstract com.google.gerrit.server.index.SiteIndexer.Result indexAll ( I index ) ;
@ java.lang.Override public org.eclipse.jgit.lib.ObjectId apply ( org.eclipse.jgit.lib.Ref ref ) { if ( ( ref . getPeeledObjectId () ) != null ) { return ref . getPeeledObjectId () ; } return ref . getObjectId () ; }
public com.google.gerrit.client.reviewdb.PatchSetAncestor.Id getId () { return key ; }
void resizeCodeMirror () { int height = getCodeMirrorHeight () ; cmA . setHeight ( height ) ; cmB . setHeight ( height ) ; diffTable.sidePanel . adjustGutters ( cmB ) ; }
public static com.google.gerrit.server.project.SubmitRuleOptions.Builder defaults () { return com.google.gerrit.server.project.SubmitRuleOptions . builder () . allowClosed ( false ) . skipFilters ( false ) . rule ( null ) ; }
public void notACommit ( final org.eclipse.jgit.lib.ObjectId id ) { ignoredObjectIds . add ( id ) ; }
public static void init () { com.google.gerrit.client.api.ApiGlue . init0 () ; com.google.gerrit.client.api.ActionContext . init () ; com.google.gerrit.client.api.HtmlTemplate . init () ; com.google.gerrit.client.api.Plugin . init () ; }
@ java.lang.Override public void addRefUpdate ( org.eclipse.jgit.transport.ReceiveCommand cmd ) throws java.io.IOException { initRepository () ; commands . add ( cmd ) ; }
@ org.junit.Test public void deleteNotAllowedWithOnlyPushPermission ( ) throws java.lang.Exception { grant ( project , STRING_CONSTANT , Permission.PUSH , false ) ; assertDeleteRef ( org.eclipse.jgit.transport.RemoteRefUpdate.Status.REJECTED_OTHER_REASON ) ; }
public boolean isOwnerOf ( com.google.gerrit.common.data.AccessSection section ) { return isOwnerOf ( section . getName () ) ; }
void onLogin () { async . append ( log ( ( STRING_CONSTANT + ( session . get () . getRemoteAddressAsString () ) ) ) ) ; audit ( context . get () , STRING_CONSTANT , STRING_CONSTANT ) ; }
private static java.lang.StringBuilder addFooter ( java.lang.StringBuilder sb , org.eclipse.jgit.revwalk.FooterKey footer ) { return sb . append ( footer . getName () ) . append ( STRING_CONSTANT ) ; }
@ java.lang.Override protected void run () { for ( com.googlesource.gerrit.plugins.replication.Destination d : config . getDestinations ( FilterType.ALL ) ) { if ( matches ( d . getRemoteConfig () . getName () ) ) { printRemote ( d ) ; } } }
@ java.lang.Override public void run () { for ( ; ; ) { try { if ( done . await ( checkFrequencyMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ) { return; } } catch ( java.lang.InterruptedException e ) {} loader . rescan ( false ) ; } }
public abstract boolean isAuthSupported ( ) ;
private java.util.Map < java.lang.String , com.google.gitiles.RefServlet.RefJsonData > buildRefJson ( java.lang.String path ) throws java.lang.Exception { return buildJson ( path , new com.google.gson.reflect.TypeToken < java.util.Map < java.lang.String , com.google.gitiles.RefServlet.RefJsonData > > () {} ) ; }
@ javax.inject.Inject void setPluginName ( @ com.google.gerrit.extensions.annotations.PluginName java.lang.String name ) { this . command = com.google.gerrit.sshd.Commands . named ( name ) ; }
public void onRpcStart () { if ( ( ++ ( activeCalls ) ) == NUMBER_CONSTANT ) { if ( ( com.google.gerrit.client.RpcStatus.hideDepth ) == NUMBER_CONSTANT ) { loading . setVisible ( true ) ; } } }
com.google.gerrit.server.query.change.ChangeData create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) ;
@ org.junit.Test public void flush_Forbidden ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = userSession . post ( STRING_CONSTANT , new com.google.gerrit.server.config.PostCaches.Input ( com.google.gerrit.server.config.PostCaches.Operation.FLUSH , java.util.Arrays . asList ( STRING_CONSTANT ) ) ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_FORBIDDEN ) ; }
private static void assertChildren ( java.lang.String o , com.google.gerrit.server.query.Predicate < java.lang.String > p , java.util.List < ? extends com.google.gerrit.server.query.Predicate < java.lang.String > > l ) { org.junit.Assert . assertEquals ( ( o + STRING_CONSTANT ) , l , p . getChildren () ) ; }
private void assertBodyEquals ( java.lang.String expected , org.eclipse.jgit.lib.ObjectId commitId ) throws java.lang.Exception { org.eclipse.jgit.revwalk.RevCommit commit = parseCommit ( commitId ) ; com.google.common.truth.Truth . assertThat ( commit . getFullMessage () ) . isEqualTo ( expected ) ; }
protected void assertServerStartupFails ( ) throws java.lang.Exception { try ( com.google.gerrit.acceptance.GerritServer server = startImpl ( null ) ) { org.junit.Assert . fail ( STRING_CONSTANT ) ; } catch ( com.google.gerrit.acceptance.GerritServer e ) {} }
public static void doSignIn () { new com.google.gerrit.client.SignInDialog () . center () ; }
@ java.lang.Override public int getSpecificity () { return NUMBER_CONSTANT ; }
private Project.NameKey createProject ( com.google.gerrit.extensions.api.projects.ProjectInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { gApi . projects () . create ( in ) ; return new com.google.gerrit.reviewdb.client.Project.NameKey ( in.name ) ; }
public static native net.codemirror.lib.CodeMirror create ( com.google.gwt.dom.client.Element p , net.codemirror.lib.Configuration cfg ) ;
public static java.lang.String refsDraftComments ( com.google.gerrit.reviewdb.client.Account.Id accountId , com.google.gerrit.reviewdb.client.Change.Id changeId ) { java.lang.StringBuilder r = com.google.gerrit.reviewdb.client.RefNames . buildRefsPrefix ( com.google.gerrit.reviewdb.client.RefNames.REFS_DRAFT_COMMENTS , accountId . get () ) ; r . append ( changeId . get () ) ; return r . toString () ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JavaScriptObject result ) { if ( screen . isCurrentView () ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( screen . getProject () , psId ) ) ; } }
com.google.gerrit.server.IdentifiedUser getUser () { return ( ( com.google.gerrit.server.IdentifiedUser ) ( getControl () . getUser () ) ) ; }
private boolean sshEnabled () { return downloadConfig . getDownloadSchemes () . contains ( DownloadScheme.SSH ) ; }
public final void insert ( final java.lang.Iterable < E > instances ) throws com.google.gwtorm.client.OrmException { doInsert ( instances ) ; }
public void batchAbandon ( com.google.gerrit.server.update.BatchUpdate.Factory updateFactory , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.server.CurrentUser user , java.util.Collection < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gerrit.extensions.restapi.RestApiException , com.google.gerrit.server.update.UpdateException { batchAbandon ( updateFactory , project , user , changes , STRING_CONSTANT , NotifyHandling.ALL , com.google.common.collect.ImmutableListMultimap . of () ) ; }
public void done () { finalAdded = true ; apply () ; }
private org.eclipse.jgit.revwalk.RevWalk getRevWalk ( ) throws java.io.IOException { initRepository () ; return revWalk ; }
@ java.lang.Override public java.lang.String apply ( com.google.gerrit.extensions.common.ChangeInfo input ) { return input.changeId ; }
private void uncacheSshKeys ( final java.lang.String userName ) { sshKeyCache . evict ( userName ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onReload ( com.google.gwt.event.dom.client.ClickEvent e ) { e . preventDefault () ; com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , changeId ) ) ; }
protected com.google.gerrit.acceptance.server.mail.StagedChange stageWipChange ( ) throws java.lang.Exception { return stageChange ( ( ) - > super . stageWipChange () ) ; }
public boolean createProject ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String head ) { boolean success = true ; for ( org.eclipse.jgit.transport.URIish uri : getURIs ( project , FilterType.PROJECT_CREATION ) ) { success &= createProject ( uri , head ) ; } return success ; }
public java.util.List < com.google.gerrit.common.data.SubmitRecord > getSubmitRecords ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return canSubmit ( db , patchSet , null , false , true , false ) ; }
@ java.lang.Override public java.lang.Class < > create ( com.google.gwtorm.server.GeneratedClassLoader loader , com.google.gwtorm.schema.RelationModel rm ) throws com.google.gwtorm.client.OrmException { return new com.google.gwtorm.jdbc.AccessGen ( loader , rm , dialect ) . create () ; }
public static com.google.gerrit.client.DiffObject autoMerge () { return new com.google.gerrit.client.DiffObject ( true ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return ref ; }
boolean canSubmit ( boolean isChangeOwner ) { if ( RefNames.REFS_CONFIG . equals ( refName ) ) { return projectControl . isOwner () ; } return canPerform ( Permission.SUBMIT , isChangeOwner ) ; }
@ com.google.common.annotations.VisibleForTesting java.lang.String getBaseUrl () { return baseUrl ; }
@ java.lang.Override public void postEvent ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.server.events.ChangeEvent event ) throws com.google.gwtorm.server.OrmException { fireEvent ( change , event ) ; }
private java.lang.String pushTagForExistingCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { return pushTag ( tagType , null , false , false , expectedStatus ) ; }
public java.lang.String getName () { if ( ( fullName ) != null ) { return fullName ; } if ( ( preferredEmail ) != null ) { return preferredEmail ; } return com.google.gerrit.reviewdb.client.Account . getName ( accountId ) ; }
@ org.junit.Test public void createBranch ( ) throws java.lang.Exception { allow ( STRING_CONSTANT , Permission.READ , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS ) ; gApi . projects () . name ( project . get () ) . branch ( STRING_CONSTANT ) . create ( new com.google.gerrit.extensions.api.projects.BranchInput () ) ; }
private void assertParseSucceeds ( org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { newParser ( commit ) . parseAll () ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JsArray < com.google.gerrit.client.account.ProjectWatchInfo > watchedProjects ) { watchesTab . display ( watchedProjects ) ; display () ; }
@ org.junit.Test public void fooBarSubdirText ( ) throws java.lang.Exception { com.google.gitiles.FakeHttpServletResponse res = buildText ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( new java.lang.String ( res . getActualBody () , java.nio.charset.StandardCharsets.UTF_8 ) ) . isEqualTo ( STRING_CONSTANT ) ; }
@ org.kohsuke.args4j.Option ( name = STRING_CONSTANT , usage = STRING_CONSTANT ) void setDisableSshd ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) boolean arg ) { sshd = false ; }
private static void updateUiLink ( java.lang.String token ) { if ( ( com.google.gerrit.client.Gerrit.uiSwitcherLink ) != null ) { com.google.gerrit.client.Gerrit.uiSwitcherLink . setHref ( com.google.gerrit.client.Gerrit . getUiSwitcherUrl ( token ) ) ; } }
@ org.junit.Test public void hostIndex ( ) throws java.lang.Exception { assertRedirectsTo ( com.google.gitiles.GitilesView . hostIndex () . setHostName ( com.google.gitiles.TestGitilesUrls.HOST_NAME ) . setServletPath ( com.google.gitiles.FakeHttpServletRequest.SERVLET_PATH ) . toUrl () , com.google.gitiles.GitwebRedirectFilterTest . newRequest ( STRING_CONSTANT ) ) ; }
protected void setCacheHeaders ( javax.servlet.http.HttpServletResponse res ) { com.google.gitiles.BaseServlet . setNotCacheable ( res ) ; }
private static java.security.SecureRandom newRandomGenerator () { try { return java.security.SecureRandom . getInstance ( STRING_CONSTANT ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT , e ) ; } }
@ com.google.gerrit.common.Nullable public final com.google.gerrit.server.index.SiteIndexer < K , V , I > getSiteIndexer () { return siteIndexer ; }
public com.google.gerrit.server.IdentifiedUser create ( final com.google.gerrit.reviewdb.Account.Id id ) { return create ( AccessPath.UNKNOWN , null , id ) ; }
@ java.lang.Override protected void preDisplay ( java.lang.Void result ) { initEditor ( content ) ; content = null ; }
public int compare ( com.google.gerrit.common.data.AccessSection a , com.google.gerrit.common.data.AccessSection b ) { return compare ( a . getName () , b . getName () ) ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byTopicOpen ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.Predicate . and ( new com.google.gerrit.server.query.change.ExactTopicPredicate ( topic ) , com.google.gerrit.server.query.change.ChangeStatusPredicate . open () ) ) ; }
private void clearMarkerAndWidget () { marker . clear () ; assert ( widget ) != null ; widget . clear () ; }
private org.eclipse.jetty.util.thread.ThreadPool threadPool () { org.eclipse.jetty.util.thread.QueuedThreadPool pool = new org.eclipse.jetty.util.thread.QueuedThreadPool () ; pool . setName ( STRING_CONSTANT ) ; pool . setMinThreads ( NUMBER_CONSTANT ) ; pool . setMaxThreads ( NUMBER_CONSTANT ) ; pool . setMaxQueued ( NUMBER_CONSTANT ) ; return pool ; }
@ org.junit.Test public void underscoredHashtag ( ) throws java.lang.Exception { java.lang.String commitMessage = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( commitMessage ) ) . containsExactlyElementsIn ( com.google.common.collect.Sets . newHashSet ( STRING_CONSTANT ) ) ; }
boolean canPerform ( java.lang.String permissionName ) { return canPerform ( permissionName , false , false ) ; }
@ org.kohsuke.args4j.Option ( name = STRING_CONSTANT , aliases = { STRING_CONSTANT } , metaVar = STRING_CONSTANT , usage = STRING_CONSTANT ) public void setLimit ( int n ) { if ( n < NUMBER_CONSTANT ) { limit = NUMBER_CONSTANT ; } else if ( n == NUMBER_CONSTANT ) { limit = com.google.gerrit.server.account.SuggestAccounts.MAX_RESULTS ; } else { limit = java.lang.Math . min ( n , com.google.gerrit.server.account.SuggestAccounts.MAX_RESULTS ) ; } }
@ java.lang.Override public void onClick ( final com.google.gwt.event.dom.client.ClickEvent event ) { doAddNewInclude () ; }
@ java.lang.Override public com.google.gerrit.server.notedb.NoteDbUpdateManager stage ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change.Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return delegate . stage ( db , changeId ) ; }
private static java.lang.String format ( final java.lang.String name , final java.lang.String email ) { return new com.google.gerrit.server.mail.Address ( name , email ) . toHeaderString () ; }
private java.io.Writer newWriter ( javax.servlet.http.HttpServletResponse res ) throws java.io.IOException { return com.google.gitiles.BaseServlet . newWriter ( res . getOutputStream () , res ) ; }
public com.google.gerrit.server.project.SubmitRuleOptions.Builder toBuilder () { return com.google.gerrit.server.project.SubmitRuleOptions . builder () . allowClosed ( allowClosed () ) . skipFilters ( skipFilters () ) . rule ( rule () ) ; }
public void onCellClicked ( com.google.gwt.user.client.ui.SourcesTableEvents sender , int row , int cell ) { if ( ( cell != NUMBER_CONSTANT ) && ( ( getRowItem ( row ) ) != null ) ) { movePointerTo ( row ) ; } }
@ java.lang.Override public boolean apply ( com.google.gerrit.server.git.ReceiveCommits.CreateRequest input ) { return ( input.change ) != null ; }
private com.google.inject.Injector createHttpdInjector () { final java.util.List < com.google.inject.Module > modules = new java.util.ArrayList < com.google.inject.Module > () ; modules . add ( new com.google.gerrit.pgm.http.jetty.JettyModule ( new com.google.gerrit.pgm.http.jetty.JettyEnv ( webInjector ) ) ) ; return webInjector . createChildInjector ( modules ) ; }
private boolean canRead ( org.eclipse.jgit.lib.ObjectId revId ) throws java.io.IOException { try ( org.eclipse.jgit.revwalk.RevWalk rw = new org.eclipse.jgit.revwalk.RevWalk ( repo ) ) { org.eclipse.jgit.revwalk.RevCommit commit = rw . parseCommit ( revId ) ; return projectControl . canReadCommit ( db , repo , commit ) ; } }
protected void add ( final com.google.gerrit.server.mail.RecipientType rt , final com.google.gerrit.reviewdb.UserIdentity who ) { if ( ( who != null ) && ( ( who . getAccount () ) != null ) ) { add ( rt , who . getAccount () ) ; } }
@ java.lang.Override public void printJson ( final java.lang.StringBuilder sb , final T o ) { sb . append ( CHAR_CONS ) ; sb . append ( o . name () ) ; sb . append ( CHAR_CONS ) ; }
private void initProviderJce () { setRandomFactory ( new org.apache.sshd.common.random.SingletonRandomFactory ( org.apache.sshd.common.random.JceRandomFactory.INSTANCE ) ) ; }
public boolean canRestore ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( canAbandon ( db ) ) && ( getRefControl () . canUpload () ) ; }
public void set ( final T value ) { try { oldValue = com.google.gerrit.client.ui.ListenableOldValue . get () ; super . set ( value ) ; } finally { oldValue = null ; } }
public static java.util.List < com.google.gerrit.reviewdb.client.Account.Id > ids ( com.google.gerrit.acceptance.TestAccount . . . accounts ) { return com.google.gerrit.acceptance.TestAccount . ids ( java.util.Arrays . asList ( accounts ) ) ; }
@ java.lang.Override public void delete ( com.google.gerrit.reviewdb.client.Change.Id id ) { throw new java.lang.UnsupportedOperationException () ; }
void merge ( com.google.gerrit.client.reviewdb.Branch.NameKey branch ) ;
public static java.lang.String emptyToNull ( java.lang.String str ) { return ( str == null ) || ( str . isEmpty () ) ? null : str ; }
Account.Id getAccountId () { return ( ( com.google.gerrit.server.IdentifiedUser ) ( getControl () . getCurrentUser () ) ) . getAccountId () ; }
public static com.google.gerrit.client.DiffObject base () { return new com.google.gerrit.client.DiffObject ( false ) ; }
@ java.lang.Override public void stop () { if ( ( queue ) != null ) { queue . shutdownNow () ; queue = null ; } }
public static java.lang.String toEditScreen ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toEditScreen ( project , revision , fileName , NUMBER_CONSTANT ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onAutoHideDiffTableHeader ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . autoHideDiffTableHeader ( ( ! ( e . getValue () ) ) ) ; view . setAutoHideDiffHeader ( ( ! ( e . getValue () ) ) ) ; }
@ java.lang.Override public void init ( javax.servlet.FilterConfig filterConfig ) throws javax.servlet.ServletException {}
public com.google.gerrit.server.account.GroupControl controlFor ( final com.google.gerrit.reviewdb.client.AccountGroup group ) { return new com.google.gerrit.server.account.GroupControl ( user . get () , group ) ; }
protected com.google.gerrit.reviewdb.client.PatchSet getPatchSet ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) throws com.google.gwtorm.server.OrmException { return changeDataFactory . create ( db , project , psId . getParentKey () ) . patchSet ( psId ) ; }
com.google.gerrit.server.mail.CreateChangeSender create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) ;
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo result ) { sent = true ; hide () ; com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , result . legacyId () ) ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { project2 = createProject ( STRING_CONSTANT ) ; }
@ org.junit.Test public void createProjectFoo ( ) throws java.lang.Exception { java.lang.String name = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( name ) . isEqualTo ( gApi . projects () . name ( name ) . create () . get () . name ) ; }
public abstract void execute ( com.google.gerrit.server.update.BatchUpdateListener listener ) throws com.google.gerrit.extensions.restapi.RestApiException , com.google.gerrit.server.update.UpdateException ;
public void doChangeRestoredHook ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , com.google.gerrit.reviewdb.client.PatchSet patchSet , java.lang.String reason , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ;
private ProjectResetter.Builder builder () { return builder ( null , null , null , null ) ; }
@ java.lang.Override public void setValue ( T value ) { this . value = value ; asEditor () . setValue ( value ) ; }
private final native void setLine ( int line ) ;
private boolean inProject ( com.google.gerrit.reviewdb.client.Project project ) { if ( ( projectControl ) != null ) { return projectControl . getProject () . getNameKey () . equals ( project . getNameKey () ) ; } else { return true ; } }
@ java.lang.Override protected java.lang.String getNextSequenceValueSql ( final java.lang.String seqname ) { return seqname ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > post ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.POST , STRING_CONSTANT ) ) ; }
private java.lang.String indent ( int spaces ) { if ( spaces == NUMBER_CONSTANT ) { return STRING_CONSTANT ; } return java.lang.String . format ( ( ( STRING_CONSTANT + spaces ) + STRING_CONSTANT ) , STRING_CONSTANT ) ; }
public static java.lang.String getUserName ( java.util.Collection < com.google.gerrit.reviewdb.client.AccountExternalId > ids ) { for ( com.google.gerrit.reviewdb.client.AccountExternalId id : ids ) { if ( id . isScheme ( com.google.gerrit.reviewdb.client.AccountExternalId.SCHEME_USERNAME ) ) { return id . getSchemeRest () ; } } return null ; }
public static com.google.gerrit.server.account.externalids.ExternalId createWithEmail ( com.google.gerrit.server.account.externalids.ExternalId.Key key , com.google.gerrit.reviewdb.client.Account.Id accountId , @ com.google.gerrit.common.Nullable java.lang.String email ) { return com.google.gerrit.server.account.externalids.ExternalId . create ( key , accountId , com.google.common.base.Strings . emptyToNull ( email ) , null ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.projects.ProjectMap result ) { projects . display ( result ) ; }
@ java.lang.Override protected com.google.gerrit.server.GerritCall createActiveCall ( final javax.servlet.http.HttpServletRequest req , final javax.servlet.http.HttpServletResponse resp ) { return new com.google.gerrit.server.GerritCall ( server , schema , req , resp ) ; }
static void reject ( final org.eclipse.jgit.transport.ReceiveCommand cmd , final java.lang.String why ) { cmd . setResult ( ReceiveCommand.Result.REJECTED_OTHER_REASON , why ) ; }
@ java.lang.Override public java.lang.String getProjectDescription ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) throws java.io.IOException , org.eclipse.jgit.errors.RepositoryNotFoundException { try ( org.eclipse.jgit.lib.Repository e = openRepository ( name ) ) { return getProjectDescription ( e ) ; } }
public static final void uploadImage ( java.lang.String imageData ) { com.googlesource.gerrit.plugins.imagare.client.ImageUploader . uploadImage ( STRING_CONSTANT , imageData , null ) ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byProjectCommit ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.String hash ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.Predicate . and ( com.google.gerrit.server.query.change.InternalChangeQuery . project ( project ) , com.google.gerrit.server.query.change.InternalChangeQuery . commit ( hash ) ) ) ; }
public static void ensureAllPatchSetsLoaded ( java.lang.Iterable < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . patchSets () ; } }
com.google.gitiles.doc.Navbar setMarkdown ( byte [] md ) { if ( ( md != null ) && ( ( md.length ) > NUMBER_CONSTANT ) ) { parse ( org.eclipse.jgit.util.RawParseUtils . decode ( md ) ) ; } return this ; }
private PatchSet.Id getPatchSetId ( org.eclipse.jgit.lib.ObjectId c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . change () . currentPatchSetId () ; }
public void onSuccess ( final com.google.gwtjsonrpc.client.VoidResult result ) { if ( submit ) { submit () ; } else { saveStateOnUnload = false ; goChange () ; } }
private static void dispatchHistoryHooks ( java.lang.String token ) { com.google.gerrit.client.api.ApiGlue . fireEvent ( STRING_CONSTANT , token ) ; }
private void setListBox ( final com.google.gwt.user.client.ui.ListBox f , final int defaultValue , final int currentValue ) { setListBox ( f , java.lang.String . valueOf ( defaultValue ) , java.lang.String . valueOf ( currentValue ) ) ; }
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new com.google.gerrit.extensions.api.changes.SubmitInput () , null , null ) ; }
@ org.junit.Test public void testOpenSchema ( ) throws java.lang.Exception { final com.google.gwtorm.data.PhoneBookDb schema1 = open () ; org.junit.Assert . assertNotNull ( schema1 ) ; final com.google.gwtorm.data.PhoneBookDb schema2 = open () ; org.junit.Assert . assertNotNull ( schema2 ) ; org.junit.Assert . assertNotSame ( schema1 , schema2 ) ; }
public static void all ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.rpc.NativeList < com.google.gerrit.client.dashboards.DashboardList > > callback ) { com.google.gerrit.client.dashboards.DashboardList . base ( project ) . addParameterTrue ( STRING_CONSTANT ) . get ( callback ) ; }
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { com.google.gerrit.client.Gerrit . display ( event . getValue () ) ; }
public void setFullName ( final java.lang.String name ) { if ( ( name != null ) && ( ! ( name . trim () . isEmpty () ) ) ) { fullName = name . trim () ; } else { fullName = null ; } }
public com.google.gerrit.server.notedb.ChangeNotes createWithAutoRebuildingDisabled ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.server.git.RefCache refs ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( args , change , false , refs ) . load () ; }
private org.eclipse.jgit.lib.Repository openRepository ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return repoManager . openRepository ( name ) ; } catch ( java.io.IOException err ) { com.google.gerrit.common.ChangeHookRunner.log . warn ( ( STRING_CONSTANT + ( name . get () ) ) , err ) ; return null ; } }
@ org.junit.Test public void createProjectFooWithGitSuffix ( ) throws java.lang.Exception { java.lang.String name = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( name ) . isEqualTo ( gApi . projects () . create ( ( name + STRING_CONSTANT ) ) . get () . name ) ; }
public boolean isLineStart ( int b ) { return ( b == NUMBER_CONSTANT ) || ( ( charAt ( ( b - NUMBER_CONSTANT ) ) ) == CHAR_CONS ) ; }
private com.google.gerrit.common.data.PermissionRange getRange ( java.lang.String permission ) { return getRefControl () . getRange ( permission , isOwner () ) ; }
private static final native void init ( java.lang.String d , java.lang.String t , java.lang.String r , java.lang.String o ) ;
@ java.lang.Override public java.lang.String id () { return java.lang.Integer . toString ( change . getId () . get () ) ; }
@ java.lang.Override public void run () { try { java.nio.file.Files . walkFileTree ( gitDir , new com.googlesource.gerrit.plugins.deleteproject.fs.DeleteTrashFolders.TrashFolderRemover () ) ; } catch ( java.io.IOException e ) { com.googlesource.gerrit.plugins.deleteproject.fs.DeleteTrashFolders.log . warn ( STRING_CONSTANT , e ) ; } }
private void asScript ( final org.w3c.dom.Element scriptNode ) { scriptNode . setAttribute ( STRING_CONSTANT , STRING_CONSTANT ) ; scriptNode . setAttribute ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override int getEnd ( org.eclipse.jgit.diff.Edit edit ) { return edit . getEndB () ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( java.lang.String ignore ) throws java.lang.Exception { return getConfig ( ignore , true , true ) ; }
@ java.lang.Override protected void configure () { install ( new com.google.gerrit.server.project.DefaultPermissionBackendModule.LegacyControlsModule () ) ; }
@ org.junit.Test public void testFormat () { org.junit.Assert . assertEquals ( STRING_CONSTANT , com.google.gerrit.server.util.IdGenerator . format ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , com.google.gerrit.server.util.IdGenerator . format ( - NUMBER_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , com.google.gerrit.server.util.IdGenerator . format ( - NUMBER_CONSTANT ) ) ; }
public static java.lang.String toChange ( final com.google.gerrit.reviewdb.client.PatchSet.Id ps ) { return ( ( STRING_CONSTANT + ( ps . getParentKey () ) ) + STRING_CONSTANT ) + ( ps . getId () ) ; }
@ java.lang.Override public void updateRepo ( com.google.gerrit.server.update.RepoContext ctx ) throws java.io.IOException { ctx . addRefUpdate ( oldId , newId , dest ) ; }
com.google.gerrit.common.EventListener getEventListener ( ) ;
@ java.lang.Override public void stop () { if ( ( pool ) != null ) { pool = null ; } }
public final boolean requireXsrfValid () { if ( isXsrfValid () ) { return true ; } onFailure ( new java.lang.Exception ( com.google.gwtjsonrpc.common.JsonConstants.ERROR_INVALID_XSRF ) ) ; return false ; }
private static boolean isVisible ( com.google.gerrit.server.change.RelatedChangesSorter.PatchSetData psd , com.google.gerrit.server.project.ProjectControl ctl ) throws com.google.gwtorm.server.OrmException { return ctl . controlFor ( psd . data () . notes () ) . isPatchVisible ( psd . patchSet () , psd . data () ) ; }
private boolean canAddRefs () { return ( canPerformOnAnyRef ( Permission.CREATE ) ) || ( isOwnerAnyRef () ) ; }
@ java.lang.Override public < K , V > com.google.common.cache.LoadingCache < K , V > build ( com.google.gerrit.server.cache.CacheBinding < K , V > def , com.google.common.cache.CacheLoader < K , V > loader ) { return create ( def , false ) . build ( loader ) ; }
private void initCompression ( boolean enableCompression ) { java.util.List < org.apache.sshd.common.NamedFactory < org.apache.sshd.common.compression.Compression > > compressionFactories = new java.util.ArrayList <> () ; compressionFactories . add ( BuiltinCompressions.none ) ; if ( enableCompression ) { compressionFactories . add ( BuiltinCompressions.zlib ) ; } setCompressionFactories ( compressionFactories ) ; }
@ java.lang.Override public void delete ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { deleteDraft . apply ( revision , null ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
private void afterTest ( ) throws java.lang.Exception { server . stop () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = com.google.gerrit.acceptance.GitUtil . newTestRepository ( repoManager . openRepository ( project ) ) ; blockRead ( STRING_CONSTANT ) ; }
void autoOpen () { if ( ( commentList ) == null ) { autoOpen = true ; } else if ( ! ( commentList . isEmpty () ) ) { setOpen ( true ) ; } }
public com.google.common.util.concurrent.ListenableFuture < > index ( com.google.gerrit.reviewdb.client.Change change ) { return index ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; }
public static boolean toBoolean ( java.lang.Boolean b ) { if ( b == null ) { return false ; } return b . booleanValue () ; }
@ java.lang.Override public com.google.gerrit.server.project.TagResource parse ( com.google.gerrit.server.project.ProjectResource resource , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException , java.io.IOException { return new com.google.gerrit.server.project.TagResource ( resource . getControl () , list . get () . get ( resource , id ) ) ; }
abstract int getBegin ( org.eclipse.jgit.diff.Edit edit ) ;
private boolean isMember ( com.google.gerrit.reviewdb.client.AccountGroup parent , com.google.gerrit.common.data.GroupDescription.Basic member ) throws com.google.gwtorm.server.OrmException { return groups . isIncluded ( dbProvider . get () , parent . getGroupUUID () , member . getGroupUUID () ) ; }
@ java.lang.Override public com.google.gwtorm.jdbc.Database < com.google.gerrit.reviewdb.server.ReviewDb > get () { try { return new com.google.gwtorm.jdbc.Database ( datasource , com.google.gerrit.reviewdb.server.ReviewDb . class ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new com.google.inject.ProvisionException ( STRING_CONSTANT , e ) ; } }
public void addQuery ( java.lang.String query ) { if ( ( queries ) == null ) { queries = new java.util.ArrayList <> () ; } queries . add ( query ) ; }
public java.lang.String getNameEmail () { return getAccount () . getNameEmail ( anonymousCowardName ) ; }
public static com.google.gerrit.client.rpc.RestApi vote ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , int reviewer , java.lang.String vote ) { return com.google.gerrit.client.changes.ChangeApi . reviewer ( project , id , reviewer ) . view ( STRING_CONSTANT ) . id ( vote ) ; }
boolean isLoggedIn () { return ( user ) != null ; }
public static void testMerge ( com.google.gerrit.server.git.MergeOp.Factory opFactory , com.google.gerrit.reviewdb.client.Change change ) { opFactory . create ( change . getDest () ) . verifyMergeability ( change ) ; }
@ java.lang.Override public java.util.concurrent.Callable < java.lang.Void > indexTask ( com.google.gerrit.server.query.change.ChangeData cd ) { return new com.google.gerrit.server.index.ChangeIndexerImpl.Task ( cd , false ) ; }
@ java.lang.Override public java.lang.String getName () { return null ; }
@ com.google.gwtorm.client.Query ( value = ( STRING_CONSTANT + ( PatchLineComment.STATUS_DRAFT ) ) + STRING_CONSTANT ) com.google.gwtorm.client.ResultSet < com.google.gerrit.client.reviewdb.PatchLineComment > draft ( com.google.gerrit.client.reviewdb.Patch.Key patch , com.google.gerrit.client.reviewdb.Account.Id author ) throws com.google.gwtorm.client.OrmException ;
@ java.lang.Override public void onOk () { deleteBranches ( refs ) ; }
@ java.lang.Override public boolean dryRun ( com.google.gerrit.server.git.CodeReviewCommit mergeTip , com.google.gerrit.server.git.CodeReviewCommit toMerge ) throws com.google.gerrit.server.git.MergeException { return args.mergeUtil . canCherryPick ( args.mergeSorter , args.repo , mergeTip , args.rw , toMerge ) ; }
private com.google.gerrit.acceptance.GerritServer startImpl ( @ com.google.gerrit.common.Nullable com.google.inject.Module testSysModule , java.lang.String . . . additionalArgs ) throws java.lang.Exception { return com.google.gerrit.acceptance.GerritServer . start ( serverDesc , baseConfig , sitePaths.site_path , testSysModule , null , null , additionalArgs ) ; }
@ java.lang.Override protected final com.google.gerrit.pgm.CmdLineParser newCmdLineParser () { final com.google.gerrit.pgm.CmdLineParser parser = super . newCmdLineParser () ; for ( com.google.gerrit.server.ssh.commands.CmdOption c : optionList ) { parser . addOption ( c , c ) ; } return parser ; }
public void doChangeAbandonedHook ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , java.lang.String reason , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ;
@ java.lang.Override public void close ( ) throws java.io.IOException { rw . close () ; repo . close () ; }
@ java.lang.Override public java.lang.String getAvatarUrl ( int size ) throws com.google.gerrit.extensions.restapi.RestApiException { getAvatar . setSize ( size ) ; return getAvatar . apply ( account ) . location () ; }
private com.google.gerrit.server.notedb.ChangeNotes newNotes ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) { return notesFactory . create ( db , change ) ; }
@ java.lang.Override public java.lang.String getAvatarUrl ( int size ) throws com.google.gerrit.extensions.restapi.RestApiException { throw new com.google.gerrit.extensions.restapi.NotImplementedException () ; }
Project.NameKey getProjectName () { return project . getNameKey () ; }
@ org.junit.Test public void testNextAddressId ( ) throws java.lang.Exception { final com.google.gwtorm.data.PhoneBookDb schema = openAndCreate () ; final int a = schema . nextAddressId () ; final int b = schema . nextAddressId () ; org.junit.Assert . assertTrue ( ( a != b ) ) ; }
com.google.gerrit.common.data.PermissionRange getRange ( java.lang.String permission , boolean isChangeOwner ) { if ( com.google.gerrit.common.data.Permission . hasRange ( permission ) ) { return toRange ( permission , isChangeOwner ) ; } return null ; }
private boolean canSkipRef ( com.google.gerrit.server.config.PluginConfig config , java.lang.String ref ) { return matchCriteria ( config , STRING_CONSTANT , ref , true , true ) ; }
private javax.servlet.http.Cookie getGerritCookie ( javax.servlet.http.HttpServletRequest httpRequest ) { for ( javax.servlet.http.Cookie cookie : getCookies ( httpRequest ) ) { if ( cookie . getName () . equalsIgnoreCase ( com.googlesource.gerrit.plugins.github.oauth.OAuthFilter.GERRIT_COOKIE_NAME ) ) { return cookie ; } } return null ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser getCurrentUser () { return user ; }
public java.lang.String commitMessage ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( commitMessage ) == null ) { loadCommitData () ; } return commitMessage ; }
@ java.lang.Override public void run () { c . close () ; db = null ; }
public final native void setLine ( int line ) ;
void maybeRegisterRenderEntireFileKeyMap ( net.codemirror.lib.CodeMirror cm ) { if ( renderEntireFile () ) { cm . addKeyMap ( com.google.gerrit.client.diff.DiffScreen.RENDER_ENTIRE_FILE_KEYMAP ) ; } }
private java.lang.String url ( com.google.gerrit.client.info.ChangeInfo.RevisionInfo r ) { return com.google.gerrit.common.PageLinks . toChange ( project , changeId , r . id () ) ; }
@ org.junit.After public void cleanup () { db . close () ; }
public static boolean isNoSuchEntity ( final java.lang.Throwable caught ) { if ( caught instanceof com.google.gerrit.client.rpc.NoSuchEntityException ) { return true ; } return ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . equals ( NoSuchEntityException.MESSAGE ) ) ; }
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { hide () ; }
private void doList () { for ( final java.lang.String name : cacheNames () ) { p . print ( name ) ; p . print ( CHAR_CONS ) ; } p . flush () ; }
public static void delete ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String path , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.VoidResult > cb ) { com.google.gerrit.client.changes.ChangeEditApi . editFile ( project , id , path ) . delete ( cb ) ; }
@ java.lang.Override protected void configure () { factory ( AddReviewer.Factory . class ) ; factory ( PatchScriptFactory.Factory . class ) ; factory ( SaveDraft.Factory . class ) ; }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( ( ( source ) != null ) && ( cd . isFromSource ( source ) ) ) || ( pred . match ( cd ) ) ; }
private static java.lang.String fullName ( java.lang.String branch ) { if ( branch . startsWith ( Constants.R_HEADS ) ) { return branch ; } return ( org.eclipse.jgit.lib.Constants.R_HEADS ) + branch ; }
public static void detail ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.info.ChangeInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . detail ( project , id ) . get ( cb ) ; }
@ java.lang.Override public void setVisible ( final boolean show ) { com.google.gwtexpui.user.client.UserAgent . fireDialogVisible ( this , show ) ; super . setVisible ( show ) ; }
private boolean isUiPlugin ( java.lang.String name ) { return ( isPlugin ( name , STRING_CONSTANT ) ) || ( isPlugin ( name , STRING_CONSTANT ) ) ; }
public void putApproval ( java.lang.String label , short value ) { approvals . put ( label , value ) ; }
public static boolean isOff ( java.lang.String listenHostname ) { return ( ( STRING_CONSTANT . equalsIgnoreCase ( listenHostname ) ) || ( STRING_CONSTANT . equalsIgnoreCase ( listenHostname ) ) ) || ( STRING_CONSTANT . equalsIgnoreCase ( listenHostname ) ) ; }
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj instanceof com.google.gerrit.reviewdb.TrackingId ) { final com.google.gerrit.reviewdb.TrackingId tr = ( ( com.google.gerrit.reviewdb.TrackingId ) ( obj ) ) ; return key . equals ( tr.key ) ; } return false ; }
public java.util.List < com.google.gerrit.client.reviewdb.AccountSshKey > run ( com.google.gerrit.client.reviewdb.ReviewDb db ) throws com.google.gwtorm.client.OrmException { return db . accountSshKeys () . byAccount ( getAccountId () ) . toList () ; }
public static com.google.gitiles.FakeHttpServletRequest newRequest () { return new com.google.gitiles.FakeHttpServletRequest ( com.google.gitiles.TestGitilesUrls.URLS . getHostName ( null ) , NUMBER_CONSTANT , STRING_CONSTANT , com.google.gitiles.FakeHttpServletRequest.SERVLET_PATH ) ; }
private void setStyleName ( final int row , final int col , final java.lang.String name ) { table . getFlexCellFormatter () . setStyleName ( row , col , name ) ; }
private void fail ( java.lang.Throwable t ) { com.google.gerrit.pgm.RebuildNotedb.log . error ( ( STRING_CONSTANT + ( changeId ) ) , t ) ; ok . set ( false ) ; failedTask . update ( NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testThreeLevelTreeWithAllIndexPredicates ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( query ( parse ( STRING_CONSTANT ) ) , rewrite . rewrite ( in , NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public boolean isEmpty () { return ( deleteComments . isEmpty () ) && ( upsertComments . isEmpty () ) ; }
private com.google.gerrit.server.notedb.ChangeNotesParser newParser ( org.eclipse.jgit.lib.ObjectId tip ) throws java.lang.Exception { return new com.google.gerrit.server.notedb.ChangeNotesParser ( newChange () . getId () , tip , walk , noteUtil , args.metrics ) ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > indexAsync ( com.google.gerrit.reviewdb.client.Change change ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( change , false ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
private static java.util.List < com.googlecode.prolog_cafe.lang.Term > eval ( com.google.gerrit.server.project.SubmitRuleEvaluator evaluator ) throws com.google.gerrit.server.project.RuleEvalException { return evaluator . evaluate () ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byCommit ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.change.InternalChangeQuery . commit ( id . name () ) ) ; }
public com.google.gerrit.server.git.MultiProgressMonitor.Task beginSubTask ( final java.lang.String subTask , final int subTaskWork ) { com.google.gerrit.server.git.MultiProgressMonitor.Task task = new com.google.gerrit.server.git.MultiProgressMonitor.Task ( subTask , subTaskWork ) ; tasks . add ( task ) ; return task ; }
@ java.lang.Override public com.google.gwtorm.server.ResultSet < com.google.gerrit.reviewdb.client.PatchLineComment > answer ( ) throws java.lang.Throwable { return new com.google.gwtorm.server.ListResultSet ( com.google.common.collect.Lists . newArrayList ( comments ) ) ; }
public void setPatchSetId ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { com.google.common.base.Preconditions . checkArgument ( ( ( psId == null ) || ( psId . getParentKey () . equals ( getChange () . getId () ) ) ) ) ; this . psId = psId ; }
public static com.google.gwtexpui.user.client.Type < com.google.gwtexpui.user.client.DialogVisibleHandler > getType () { if ( ( com.google.gwtexpui.user.client.DialogVisibleEvent.TYPE ) == null ) { com.google.gwtexpui.user.client.DialogVisibleEvent.TYPE = new com.google.gwtexpui.user.client.Type () ; } return com.google.gwtexpui.user.client.DialogVisibleEvent.TYPE ; }
@ java.lang.Override public int getCost () { return NUMBER_CONSTANT + ( ( group ) == null ? NUMBER_CONSTANT : NUMBER_CONSTANT ) ; }
void doLinkIdentity () { final com.google.gerrit.client.SignInDialog d = new com.google.gerrit.client.SignInDialog ( SignInDialog.Mode.LINK_IDENTIY ) ; d . center () ; }
@ java.lang.Override public void addRelatedLink ( java.lang.String issueId , java.net.URL relatedUrl , java.lang.String description ) throws java.io.IOException { if ( log . isDebugEnabled () ) { log . debug ( STRING_CONSTANT , issueId , relatedUrl , description ) ; } }
@ java.lang.Override public void onDraftPublished ( com.google.gerrit.extensions.events.DraftPublishedListener.Event event ) { com.google.gerrit.extensions.common.ChangeInfo c = event . getChange () ; onEvent ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c.project ) , c._number , event . getWho () ) ; }
public void setFieldReference ( final com.google.gwtorm.schema.ColumnModel cm ) { col = cm ; ( columnIdx ) ++ ; }
public static long parseSortKey ( java.lang.String sortKey ) { if ( STRING_CONSTANT . equals ( sortKey ) ) { return java.lang.Long.MAX_VALUE ; } return java.lang.Long . parseLong ( sortKey , NUMBER_CONSTANT ) ; }
protected static boolean isNotSignedIn ( java.lang.Throwable caught ) { return ( com.google.gerrit.client.rpc.RestApi . isNotSignedIn ( caught ) ) || ( ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . equals ( NotSignedInException.MESSAGE ) ) ) ; }
@ java.lang.Override public com.google.gerrit.extensions.api.changes.FileApi file ( java.lang.String path ) { return fileApi . create ( files . parse ( revision , com.google.gerrit.extensions.restapi.IdString . fromDecoded ( path ) ) ) ; }
protected org.eclipse.jgit.lib.ObjectInserter getObjectInserter ( ) throws java.io.IOException { initRepository () ; return inserter ; }
public void delete ( com.google.gerrit.reviewdb.client.Change.Id id ) throws java.io.IOException ;
public static java.lang.String getPluginName ( java.io.File srcFile ) throws java.io.IOException { return com.google.common.base.Objects . firstNonNull ( com.google.gerrit.server.plugins.PluginLoader . getGerritPluginName ( srcFile ) , com.google.gerrit.server.plugins.PluginLoader . nameOf ( srcFile ) ) ; }
private java.util.Map < java.lang.String , java.util.List < com.google.gitiles.blame.BlameServletTest.RegionJsonData > > getBlameJson ( java.lang.String path ) throws java.lang.Exception { return buildJson ( new com.google.gson.reflect.TypeToken < java.util.Map < java.lang.String , java.util.List < com.google.gitiles.blame.BlameServletTest.RegionJsonData > > > () {} , path ) ; }
boolean visibleForReplication () { return ( ( user ) instanceof com.google.gerrit.server.ReplicationUser ) && ( ( ( com.google.gerrit.server.ReplicationUser ) ( user ) ) . isEverythingVisible () ) ; }
public static java.lang.String toSideBySide ( com.google.gerrit.reviewdb.client.PatchSet.Id diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , diffBase , revision , fileName , null , NUMBER_CONSTANT ) ; }
public static java.lang.String toEditScreen ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName , int line ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , project , com.google.gerrit.client.DiffObject . base () , revision , fileName , null , line ) ; }
public com.google.gerrit.common.data.GroupList get () { return createGroupList ( filterGroups ( groupCache . all () ) ) ; }
@ java.lang.Override public void onEvent ( com.google.gerrit.server.events.Event event ) { if ( event instanceof com.google.gerrit.server.events.ProjectEvent ) { pool . execute ( new com.ericsson.gerrit.plugins.eventslog.EventHandler.StoreEventTask ( ( ( com.google.gerrit.server.events.ProjectEvent ) ( event ) ) ) ) ; } }
private void display ( final com.google.gerrit.client.projects.ProjectMap result ) { projects . display ( result ) ; projects . finishDisplay () ; }
public void setName ( final java.lang.String name ) { this . name = name ; }
void replace ( org.apache.lucene.index.Term term , org.apache.lucene.document.Document doc ) throws java.io.IOException { writer . updateDocument ( term , doc ) ; }
protected boolean matches ( com.google.gwtorm.nosql.IndexFunction < T > f , T obj , byte [] exp ) { return ( f . includes ( obj ) ) && ( java.util.Arrays . equals ( exp , indexRowKey ( f , obj ) ) ) ; }
@ java.lang.Override public synchronized void start () { com.google.gerrit.server.plugins.PluginLoader.log . info ( ( STRING_CONSTANT + ( pluginsDir . getAbsolutePath () ) ) ) ; rescan ( false ) ; if ( ( scanner ) != null ) { scanner . start () ; } }
@ java.lang.Override public void onResize ( com.google.gwt.event.logical.shared.ResizeEvent event ) { resizeCodeMirror () ; }
@ java.lang.Override public void onSuccess ( java.lang.String result ) { com.google.gerrit.client.change.EditFileAction edit = new com.google.gerrit.client.change.EditFileAction ( id , result , path , style , editButton , replyButton ) ; edit . onEdit () ; }
private void saveProjectConfig ( com.google.gerrit.server.git.ProjectConfig cfg ) throws java.lang.Exception { try ( com.google.gerrit.server.git.MetaDataUpdate md = metaDataUpdateFactory . create ( project ) ) { cfg . commit ( md ) ; } }
private static java.lang.String getBaseName ( java.lang.String project ) { return project . substring ( ( ( project . lastIndexOf ( CHAR_CONS ) ) + NUMBER_CONSTANT ) ) ; }
@ com.google.gerrit.common.audit.Audit @ com.google.gerrit.common.auth.SignInRequired void submit ( com.google.gerrit.reviewdb.client.PatchSet.Id patchSetId , com.google.gwtjsonrpc.common.AsyncCallback < com.google.gerrit.common.data.ChangeDetail > callback ) ;
@ com.google.gwtorm.client.PrimaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Branch get ( com.google.gerrit.client.reviewdb.Branch.NameKey name ) throws com.google.gwtorm.client.OrmException ;
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { rights . showInherited ( showInherited . getValue () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public com.google.gerrit.server.group.PutMembers.PutMember create ( final com.google.gerrit.server.group.GroupResource group , final java.lang.String id ) { return new com.google.gerrit.server.group.PutMembers.PutMember ( put , com.google.gerrit.server.util.Url . decode ( id ) ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public com.google.gerrit.server.change.ChangeEdits.Create create ( com.google.gerrit.server.change.ChangeResource parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.RestApiException { return createFactory . create ( id . get () ) ; }
public final native boolean value ( ) ;
@ java.lang.Override protected void onLoad () { super . onLoad () ; display () ; refresh ( false ) ; }
@ java.lang.Override protected java.util.concurrent.Callable < java.lang.Void > indexTask ( com.google.gerrit.server.query.change.ChangeData cd ) { return new com.google.gerrit.server.index.ChangeIndexerImpl.Task ( cd , false ) ; }
protected java.lang.String getQueryPattern ( final java.lang.String query ) { return query ; }
@ org.junit.Test public void testDefaultBehaviour () { com.google.gerrit.common.data.GitWebType gitWebType = com.google.gerrit.common.data.GitWebType . fromName ( null ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , gitWebType . replacePathSeparator ( STRING_CONSTANT ) ) ; }
public com.google.gerrit.reviewdb.client.Change change ( ) throws com.google.gwtorm.server.OrmException { if ( ( change ) == null ) { change = db . changes () . get ( legacyId ) ; } return change ; }
static boolean parseBoolean ( java.lang.String s ) { return ( s != null ) && ( ( ( s . equals ( STRING_CONSTANT ) ) || ( s . equalsIgnoreCase ( STRING_CONSTANT ) ) ) || ( java.lang.Boolean . parseBoolean ( s ) ) ) ; }
@ java.lang.Override public void onSignIn () { super . onSignIn () ; if ( refreshOnSignIn ) { refresh () ; } if ( ( starChange ) != null ) { starChange . setVisible ( true ) ; } }
static org.apache.lucene.index.Term idTerm ( com.google.gerrit.reviewdb.client.Change.Id id ) { return com.google.gerrit.lucene.QueryBuilder . intTerm ( com.google.gerrit.server.index.change.ChangeField.LEGACY_ID . getName () , id . get () ) ; }
@ java.lang.Override public void remove () { m . remove ( name . value () , commandProvider ) ; }
public Project.NameKey getProjectKey () { return name ; }
@ java.lang.Override public com.google.gerrit.server.permissions.PermissionBackend.ForChange change ( com.google.gerrit.server.query.change.ChangeData cd ) { try { return cd . changeControl () . forUser ( getUser () ) . asForChange ( cd , db ) ; } catch ( com.google.gwtorm.server.OrmException e ) { return com.google.gerrit.server.permissions.FailedPermissionBackend . change ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public com.google.gerrit.extensions.client.ChangeKind getChangeKind ( @ com.google.gerrit.common.Nullable org.eclipse.jgit.lib.Repository repo , @ com.google.gerrit.common.Nullable org.eclipse.jgit.revwalk.RevWalk rw , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) { return com.google.gerrit.server.change.ChangeKindCacheImpl . getChangeKindInternal ( this , repo , rw , cd , patch ) ; }
@ java.lang.Override protected java.util.concurrent.Callable < java.lang.Void > deleteTask ( com.google.gerrit.server.query.change.ChangeData cd ) { return new com.google.gerrit.server.index.ChangeIndexerImpl.Task ( cd , true ) ; }
public boolean canSeeGroup () { return canSeeMembers () ; }
private java.lang.String getProjectName () { return control . getProjectControl () . getProjectState () . getName () ; }
@ java.lang.Override public java.lang.String toString () { return format () ; }
@ java.lang.Override public void updateRepo ( com.google.gerrit.server.update.RepoContext ctx ) throws java.lang.Exception { ctx . addRefUpdate ( masterCommit . getId () , branchCommit . getId () , STRING_CONSTANT ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.rpc.NativeMap < com.google.gwt.core.client.JsArray < com.google.gerrit.client.changes.CommentInfo > > result ) { r . add ( result ) ; }
public Change.Key getChangeKey () { return new com.google.gerrit.reviewdb.client.Change.Key ( change . get () . id ) ; }
private < S extends java.lang.Comparable < > > com.google.common.collect.Ordering < S > createOrdering () { if ( nullsLast ) { return com.google.common.collect.Ordering . natural () . nullsLast () ; } return com.google.common.collect.Ordering . natural () . nullsFirst () ; }
@ java.lang.Override void onShow () { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , changeId ) ) ; }
private static com.google.gerrit.server.group.GroupResource check ( java.lang.String id , com.google.gerrit.server.account.GroupControl ctl ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { if ( ctl . isVisible () ) { return new com.google.gerrit.server.group.GroupResource ( ctl ) ; } throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException ( id ) ; }
public static void ensureAllPatchSetsLoaded ( com.google.inject.Provider < com.google.gerrit.reviewdb.server.ReviewDb > db , java.lang.Iterable < com.google.gerrit.server.query.change.ChangeData > changes ) throws com.google.gwtorm.server.OrmException { for ( com.google.gerrit.server.query.change.ChangeData cd : changes ) { cd . patches () ; } }
static com.google.gerrit.server.patch.PatchListEntry empty ( final java.lang.String fileName ) { return new com.google.gerrit.server.patch.PatchListEntry ( com.google.gerrit.reviewdb.client.Patch.ChangeType.MODIFIED , com.google.gerrit.reviewdb.client.Patch.PatchType.UNIFIED , null , fileName , com.google.gerrit.server.patch.PatchListEntry.EMPTY_HEADER , java.util.Collections . < org.eclipse.jgit.diff.Edit > emptyList () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public com.google.gerrit.server.patch.PatchListEntry get ( final java.lang.String fileName ) { final int index = search ( fileName ) ; return NUMBER_CONSTANT <= index ? patches . get ( index ) : com.google.gerrit.server.patch.PatchListEntry . empty ( fileName ) ; }
@ org.junit.Test public void onlyDateNoTime ( ) throws java.lang.Exception { query = queryMaker . formQueryFromRequestParameters ( com.google.common.collect.ImmutableMap . of ( com.ericsson.gerrit.plugins.eventslog.sql.QueryMakerTest.T1 , STRING_CONSTANT , com.ericsson.gerrit.plugins.eventslog.sql.QueryMakerTest.T2 , STRING_CONSTANT ) ) ; com.google.common.truth.Truth . assertThat ( query ) . isNotEqualTo ( defaultQuery ) ; }
public static < T > com.google.gerrit.rules.StoredValue < T > create ( java.lang.Class < T > clazz ) { return new com.google.gerrit.rules.StoredValue < T > ( clazz ) ; }
@ java.lang.Override public void close ( ) ;
public void onFailure ( java.lang.Throwable err ) { if ( com.google.gerrit.client.changes.SubmitFailureDialog . isConflict ( err ) ) { new com.google.gerrit.client.changes.SubmitFailureDialog ( err . getMessage () ) . center () ; } else { super . onFailure ( err ) ; } redisplay () ; }
private GitilesView.Builder parseNoCommand ( java.lang.String repoName ) { return com.google.gitiles.GitilesView . repositoryIndex () . setRepositoryName ( repoName ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private static com.google.inject.Binding < com.google.gerrit.util.cli.OptionHandlerFactory < > > cast ( com.google.inject.Binding < > e ) { return ( ( com.google.inject.Binding < com.google.gerrit.util.cli.OptionHandlerFactory < > > ) ( e ) ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.pgm.util.ConsoleUI . class ) . toInstance ( init.ui ) ; bind ( com.google.gerrit.pgm.init.InitFlags . class ) . toInstance ( init.flags ) ; bind ( com.google.gerrit.server.git.GitRepositoryManager . class ) . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager . class ) ; }
protected PushOneCommit.Result createChange ( org.eclipse.jgit.api.Git git ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , admin . getIdent () , git ) ; return push . to ( STRING_CONSTANT ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onReply ( com.google.gwt.event.dom.client.ClickEvent e ) { onReply () ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; }
@ org.junit.Test public void listTagsOfNonVisibleProject ( ) throws java.lang.Exception { blockRead ( STRING_CONSTANT ) ; userSession . get ( ( ( STRING_CONSTANT + ( project . get () ) ) + STRING_CONSTANT ) ) . assertNotFound () ; }
public static com.google.inject.Key < org.apache.sshd.server.CommandFactory.Command > key ( final java.lang.String name ) { return com.google.gerrit.server.ssh.Commands . key ( com.google.gerrit.server.ssh.Commands . named ( name ) ) ; }
public java.util.List < com.google.gerrit.reviewdb.client.PatchSetApproval > approvals ( ) throws com.google.gwtorm.server.OrmException { return com.google.common.collect.ImmutableList . copyOf ( approvalsMap () . values () ) ; }
@ java.lang.Override public void show () { com.google.gwtexpui.user.client.UserAgent . fireDialogVisible ( this , true ) ; super . show () ; }
public final native int to ( ) ;
private PushOneCommit.Result createDraft ( ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , admin . getIdent () , git ) ; return push . to ( STRING_CONSTANT ) ; }
private int getContext () { final int sel = context . getSelectedIndex () ; if ( NUMBER_CONSTANT <= sel ) { return java.lang.Short . parseShort ( context . getValue ( sel ) ) ; } return getValue () . context ; }
public static com.google.gerrit.client.changes.QueryScreen forQuery ( java.lang.String query ) { return com.google.gerrit.client.changes.QueryScreen . forQuery ( query , NUMBER_CONSTANT ) ; }
@ java.lang.Override public void onChangeIndexed ( int id ) { executeIndexTask ( id , false ) ; }
private com.google.gerrit.reviewdb.AccountDiffPreference.Whitespace getIgnoreWhitespace () { final int sel = ignoreWhitespace . getSelectedIndex () ; if ( NUMBER_CONSTANT <= sel ) { return com.google.gerrit.reviewdb.AccountDiffPreference.Whitespace . valueOf ( ignoreWhitespace . getValue ( sel ) ) ; } return value . getIgnoreWhitespace () ; }
private static boolean autoReindexIfStale ( org.eclipse.jgit.lib.Config cfg ) { return cfg . getBoolean ( STRING_CONSTANT , null , STRING_CONSTANT , false ) ; }
public com.google.gerrit.server.notedb.ChangeNotes create ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) { return new com.google.gerrit.server.notedb.ChangeNotes ( repoManager , migration , allUsersProvider , change ) ; }
public static org.eclipse.jgit.lib.Config loadDefault ( javax.servlet.FilterConfig filterConfig ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { org.eclipse.jgit.storage.file.FileBasedConfig config = new org.eclipse.jgit.storage.file.FileBasedConfig ( com.google.gitiles.GitilesConfig . defaultFile ( filterConfig ) , org.eclipse.jgit.util.FS.DETECTED ) ; config . load () ; return config ; }
public static org.eclipse.jgit.internal.storage.dfs.InMemoryRepository newRepository ( com.google.gerrit.reviewdb.client.Project.NameKey name ) { return new com.google.gerrit.testutil.InMemoryRepositoryManager.Repo ( name ) ; }
private com.google.common.util.concurrent.ListeningExecutorService newExecutor () { if ( ( threads ) > NUMBER_CONSTANT ) { return com.google.common.util.concurrent.MoreExecutors . listeningDecorator ( workQueue . createQueue ( threads , STRING_CONSTANT ) ) ; } return com.google.common.util.concurrent.MoreExecutors . newDirectExecutorService () ; }
@ com.google.gwtorm.client.PrimaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Project get ( com.google.gerrit.client.reviewdb.Project.NameKey name ) throws com.google.gwtorm.client.OrmException ;
public void onSuccess ( final java.util.List < com.google.gerrit.client.account.AccountProjectWatchInfo > result ) { watches . display ( result ) ; }
private final native int get ( java.lang.String n , int d ) ;
private void setNew ( com.google.gerrit.reviewdb.Change c , com.google.gerrit.reviewdb.ChangeMessage msg ) { sendMergeFail ( c , msg , true ) ; }
@ org.junit.Test public void testHashCodeWhenNull () { final com.google.gwtorm.client.StringKeyTestCase.Parent p = new com.google.gwtorm.client.StringKeyTestCase.Parent ( null ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , p . hashCode () ) ; }
public java.lang.Short value () { return value ; }
private void loadDefaults () { approvals = com.google.common.collect.ImmutableListMultimap . of () ; reviewers = com.google.common.collect.ImmutableSetMultimap . of () ; submitRecords = com.google.common.collect.ImmutableList . of () ; changeMessages = com.google.common.collect.ImmutableListMultimap . of () ; }
private void blockCreateReference ( ) throws java.lang.Exception { com.google.gerrit.server.git.ProjectConfig cfg = projectCache . checkedGet ( project ) . getConfig () ; com.google.gerrit.server.project.Util . block ( cfg , Permission.CREATE , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS , STRING_CONSTANT ) ; saveProjectConfig ( project , cfg ) ; }
private com.google.gerrit.client.diff.DraftBox addNewDraft ( net.codemirror.lib.CodeMirror cm , int line ) { return addDraftBox ( com.google.gerrit.client.changes.CommentInfo . create ( path , getSideFromCm ( cm ) , ( line + NUMBER_CONSTANT ) , null , null ) ) ; }
@ java.lang.Override public java.util.Set < com.google.gerrit.reviewdb.Account.Id > missing ( final java.lang.String key ) { return java.util.Collections . emptySet () ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > indexAsync ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.IndexTask ( project , id ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
java.lang.String asText () { return asText ( STRING_CONSTANT , STRING_CONSTANT , queriesByName ) ; }
@ org.junit.Test public void singleHeadText ( ) throws java.lang.Exception { setUpSimpleRefs () ; com.google.gitiles.FakeHttpServletResponse res = buildText ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( res . getActualBodyString () ) . isEqualTo ( ( ( id ( STRING_CONSTANT ) ) + STRING_CONSTANT ) ) ; }
public static void deleteEdit ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gerrit.client.changes.ChangeApi . edit ( project , id ) . delete ( cb ) ; }
@ org.junit.Test public void copyAllScoresIfNoChange ( ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit.Result patchSet = readyPatchSetForNoChangeRebase () ; rebase ( patchSet ) ; assertApproval ( patchSet , NUMBER_CONSTANT ) ; }
public void delete ( com.google.gerrit.reviewdb.client.Change change ) throws java.io.IOException { delete ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; }
private void asScript ( final org.w3c.dom.Element scriptNode ) { scriptNode . removeAttribute ( STRING_CONSTANT ) ; scriptNode . setAttribute ( STRING_CONSTANT , STRING_CONSTANT ) ; scriptNode . setAttribute ( STRING_CONSTANT , STRING_CONSTANT ) ; }
void onChangeIndexed ( int id ) ;
@ java.lang.Override protected void configure () { cache ( com.googlesource.gerrit.plugins.uploadvalidator.BlockedKeywordValidator.CACHE_NAME , java.lang.String . class , java.util.regex.Pattern . class ) . loader ( com.googlesource.gerrit.plugins.uploadvalidator.BlockedKeywordValidator.Loader . class ) ; }
public java.lang.String getText () { java.lang.String s = nameTxtBox . getText () ; return s == null ? STRING_CONSTANT : s ; }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { topic . onEdit () ; }
public static java.nio.file.FileSystem newZipFileSystem ( java.nio.file.Path zip ) throws java.io.IOException { return java.nio.file.FileSystems . newFileSystem ( java.net.URI . create ( ( STRING_CONSTANT + ( zip . toUri () ) ) ) , java.util.Collections . < java.lang.String , java.lang.String > emptyMap () ) ; }
public void run () { try { synchronized ( list ) { list . add ( cmd ) ; } runImp () ; } finally { synchronized ( list ) { list . remove ( cmd ) ; } } }
private void logDebug ( java.lang.String msg , java.lang.Object . . . args ) { if ( com.google.gerrit.server.git.GitModules.log . isDebugEnabled () ) { com.google.gerrit.server.git.GitModules.log . debug ( ( ( submissionId ) + msg ) , args ) ; } }
@ java.lang.Override com.google.gerrit.server.mail.RestoredSender create ( com.google.gerrit.reviewdb.client.Change.Id id ) ;
public boolean isContextLine () { return ! ( isModifiedLine () ) ; }
protected com.google.gerrit.server.notedb.ChangeNotes newNotes ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( args , c . getProject () , c ) . load () ; }
@ java.lang.Override public com.google.gerrit.server.update.RepoView getRepoView ( ) throws java.io.IOException { return this . getRepoView () ; }
@ java.lang.Override public void preDisplay ( final java.util.List < com.google.gerrit.reviewdb.client.AccountGroup > result ) { groups . display ( result ) ; }
void removeAll () { if ( ! ( skipBars . isEmpty () ) ) { for ( com.google.gerrit.client.diff.SkipBar bar : skipBars ) { bar . expandSideAll () ; } line0 = null ; } }
public static com.google.gerrit.server.index.IndexConfig createDefault () { return com.google.gerrit.server.index.IndexConfig . create ( NUMBER_CONSTANT ) ; }
public com.google.gitiles.GitilesView.Builder setOldRevision ( com.google.gitiles.Revision revision ) { switch ( type ) { case DIFF : case LOG : this . oldRevision = revision ; return this ; default: throw new java.lang.IllegalStateException ( java.lang.String . format ( STRING_CONSTANT , type ) ) ; } }
@ org.junit.Test public void testIndexPredicate ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( rewrite ( in ) ) . isEqualTo ( query ( in ) ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.api.projects.TagInfo > get ( ) throws com.google.gerrit.extensions.restapi.RestApiException { return listTags ( this ) ; }
@ java.lang.Override public void hide ( final boolean autoClosed ) { com.google.gwtexpui.user.client.UserAgent . fireDialogVisible ( this , false ) ; super . hide ( autoClosed ) ; }
public boolean isOk () { return problems . isEmpty () ; }
private void removePushFromRefsTags ( ) throws java.lang.Exception { removePermission ( project , STRING_CONSTANT , Permission.PUSH ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.common.AccountExternalIdInfo > getExternalIds ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return getExternalIds . apply ( account ) ; } catch ( java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
public final void update ( final java.lang.Iterable < E > instances ) throws com.google.gwtorm.client.OrmException { doUpdate ( instances ) ; }
public java.util.List < org.eclipse.jgit.revwalk.FooterLine > commitFooters ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( commitFooters ) == null ) { loadCommitData () ; } return commitFooters ; }
public static org.eclipse.jgit.revwalk.RevCommit makeCommit ( org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.dircache.DirCacheEntry [] entries , org.eclipse.jgit.junit.TestRepository < org.eclipse.jgit.lib.Repository > repo ) throws java.lang.Exception { return com.googlesource.gerrit.plugins.uploadvalidator.TestUtils . makeCommit ( rw , entries , repo , ( ( org.eclipse.jgit.revwalk.RevCommit [] ) ( null ) ) ) ; }
public void putApproval ( java.lang.String label , short value ) { putApprovalFor ( getAccountId () , label , value ) ; }
private static javax.net.ssl.SSLSocketFactory sslFactory ( final boolean verify ) { if ( verify ) { return ( ( javax.net.ssl.SSLSocketFactory ) ( javax.net.ssl.SSLSocketFactory . getDefault () ) ) ; } return ( ( javax.net.ssl.SSLSocketFactory ) ( com.google.gerrit.util.ssl.BlindSSLSocketFactory . getDefault () ) ) ; }
@ java.lang.Override public void doRefUpdatedHook ( com.google.gerrit.reviewdb.client.Branch.NameKey refName , org.eclipse.jgit.lib.RefUpdate refUpdate , com.google.gerrit.reviewdb.client.Account account ) { doRefUpdatedHook ( refName , refUpdate . getOldObjectId () , refUpdate . getNewObjectId () , account ) ; }
public final native java.lang.String project ( ) ;
@ java.lang.Override public void run () {}
java.lang.Class < > create ( com.google.gwtorm.server.GeneratedClassLoader loader , com.google.gwtorm.schema.RelationModel rm ) throws com.google.gwtorm.client.OrmException ;
@ org.junit.Test public void abandonReviewableChangeNotifyOwner ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageReviewableChange () ; abandon ( sc.changeId , sc.owner , com.google.gerrit.extensions.api.changes.NotifyHandling.OWNER ) ; assertThat ( sender ) . notSent () ; }
public java.lang.String getName () { return getAccount () . getName ( anonymousCowardName ) ; }
@ java.lang.Override public void updateRepo ( com.google.gerrit.server.update.RepoContext ctx ) throws java.lang.Exception { ctx . addRefUpdate ( edit . getEditCommit () . copy () , org.eclipse.jgit.lib.ObjectId . zeroId () , edit . getRefName () ) ; }
public void checkCustom ( org.bouncycastle.openpgp.PGPPublicKey key , java.util.List < java.lang.String > problems ) {}
private java.lang.String newChange ( org.eclipse.jgit.api.Git git , org.eclipse.jgit.lib.PersonIdent ident ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , ident , git , PushOneCommit.SUBJECT , com.google.gerrit.acceptance.edit.ChangeEditIT.FILE_NAME , new java.lang.String ( com.google.gerrit.acceptance.edit.ChangeEditIT.CONTENT_OLD ) ) ; return push . to ( STRING_CONSTANT ) . getChangeId () ; }
private void addLabelDelta ( java.lang.String name , short value ) { labelDelta . add ( com.google.gerrit.server.util.LabelVote . create ( name , value ) . format () ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onRevert ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { com.google.gerrit.client.change.RevertAction . call ( revert , changeId , project , revision , subject ) ; }
@ java.lang.Override protected void configure () { if ( recheckMergeable ) { install ( new com.google.gerrit.pgm.Reindex.MergeabilityModule () ) ; } }
private boolean inProject ( final com.google.gerrit.reviewdb.client.Change change ) { if ( ( projectControl ) == null ) { return true ; } return projectControl . getProject () . getNameKey () . equals ( change . getProject () ) ; }
public static void createDraft ( com.google.gerrit.reviewdb.client.PatchSet.Id id , com.google.gerrit.client.changes.CommentInfo content , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.CommentInfo > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( id , STRING_CONSTANT ) . put ( content , cb ) ; }
public static java.lang.String toGroup ( com.google.gerrit.reviewdb.client.AccountGroup.Id id ) { return ( com.google.gerrit.common.PageLinks.ADMIN_GROUPS ) + ( id . toString () ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { admin = accounts . create ( STRING_CONSTANT , STRING_CONSTANT ) ; session = new com.google.gerrit.acceptance.RestSession ( server , admin ) ; db = reviewDbProvider . open () ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onRebaseEdit ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { com.google.gerrit.client.change.EditActions . rebaseEdit ( getProject () , changeId , publishEdit , rebaseEdit , deleteEdit ) ; }
static void markPrivate ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id , com.google.gwt.user.client.ui.Button . . . draftButtons ) { com.google.gerrit.client.changes.ChangeApi . markPrivate ( project . get () , id . get () , com.google.gerrit.client.change.ChangeActions . cs ( project , id , draftButtons ) ) ; }
static com.google.gerrit.server.patch.PatchListEntry empty ( final java.lang.String fileName ) { return new com.google.gerrit.server.patch.PatchListEntry ( com.google.gerrit.reviewdb.Patch.ChangeType.MODIFIED , com.google.gerrit.reviewdb.Patch.PatchType.UNIFIED , null , fileName , com.google.gerrit.server.patch.PatchListEntry.EMPTY_HEADER , java.util.Collections . < org.eclipse.jgit.diff.Edit > emptyList () , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
public static void updateImpl ( final java.lang.String token ) { com.google.gwt.user.client.History . newItem ( token , false ) ; com.google.gerrit.client.Gerrit . dispatchHistoryHooks ( token ) ; }
public void checkChanges ( java.lang.Iterable < com.google.gerrit.reviewdb.client.Change.Id > changeIds ) throws java.lang.Exception { checkActual ( readExpected ( changeIds ) , new java.util.ArrayList < java.lang.String > () ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.config.ServerInfo info ) { com.google.gerrit.client.Gerrit.myServerInfo = info ; }
protected boolean isPatchSet () { return false ; }
@ java.lang.Override public org.eclipse.jgit.lib.Repository getRepository ( ) throws java.io.IOException { return this . getRepository () ; }
@ org.junit.Test public void hashWithoutHashtag ( ) throws java.lang.Exception { java.lang.String commitMessage = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( commitMessage ) ) . isEmpty () ; }
@ java.lang.Override public void run () { openIndex . close () ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet patchset ) { patchset . setDraft ( false ) ; return patchset ; }
protected void submitWithConflict ( java.lang.String changeId , java.lang.String expectedError ) throws java.lang.Exception { submit ( changeId , new com.google.gerrit.extensions.api.changes.SubmitInput () , com.google.gerrit.extensions.restapi.ResourceConflictException . class , expectedError ) ; }
protected void setDownloadHeaders ( javax.servlet.http.HttpServletResponse res , java.lang.String filename , java.lang.String contentType ) { res . setContentType ( contentType ) ; res . setHeader ( com.google.common.net.HttpHeaders.CONTENT_DISPOSITION , ( STRING_CONSTANT + filename ) ) ; setCacheHeaders ( res ) ; }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , new com.google.gerrit.client.documentation.DocScreen ( com.google.gerrit.client.Dispatcher . skip ( token ) ) ) ; }
public void display ( final java.lang.String commitMessage ) { display ( null , null , false , commitMessage ) ; }
public abstract com.google.gerrit.client.patches.PatchScreen.Type getPatchScreenType ( ) ;
private com.google.gerrit.server.git.ChangeSet getForOpenChange ( com.google.gerrit.reviewdb.client.Change c , com.google.gerrit.server.CurrentUser user ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return mergeSuperSet . completeChangeSet ( dbProvider . get () , c , user ) ; }
@ java.lang.Override public void run ( ) throws java.lang.Exception { this . service () ; }
public final native void path ( java.lang.String p ) ;
static void delete ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id , com.google.gwt.user.client.ui.Button . . . draftButtons ) { com.google.gerrit.client.changes.ChangeApi . deleteChange ( project . get () , id . get () , com.google.gerrit.client.change.ChangeActions . mine ( draftButtons ) ) ; }
public static void detail ( int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.ChangeInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . detail ( id ) . get ( cb ) ; }
@ java.lang.Override protected void onOpenRow ( final int row ) { if ( row > NUMBER_CONSTANT ) { movePointerTo ( row ) ; } com.google.gwt.user.client.History . newItem ( getRowItem ( row ) . url () ) ; }
@ org.junit.Test @ com.google.gerrit.acceptance.GerritConfig ( name = STRING_CONSTANT , value = STRING_CONSTANT ) public void suggestReviewersNoResult1 ( ) throws java.lang.Exception { java.lang.String changeId = createChange () . getChangeId () ; java.util.List < com.google.gerrit.extensions.common.SuggestedReviewerInfo > reviewers = suggestReviewers ( changeId , name ( STRING_CONSTANT ) , NUMBER_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( reviewers ) . isEmpty () ; }
@ org.kohsuke.args4j.Option ( name = STRING_CONSTANT , aliases = STRING_CONSTANT , usage = STRING_CONSTANT , metaVar = STRING_CONSTANT ) void addLabel ( final java.lang.String token ) { com.google.gerrit.server.util.LabelVote v = com.google.gerrit.server.util.LabelVote . parseWithEquals ( token ) ; com.google.gerrit.common.data.LabelType . checkName ( v . label () ) ; customLabels . put ( v . label () , v . value () ) ; }
@ java.lang.Override public java.lang.String call ( ) throws java.lang.Exception { log . debug ( STRING_CONSTANT , comment , issueKey ) ; client () . addComment ( issueKey , comment ) ; log . debug ( STRING_CONSTANT , comment , issueKey ) ; return issueKey ; }
private static final native void init ( java.lang.String d , java.lang.String e , java.lang.String t , java.lang.String r , java.lang.String o ) ;
public com.google.gerrit.server.notedb.ChangeNotes notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = notesFactory . create ( db , project () , legacyId ) ; } return notes ; }
public com.google.common.collect.ImmutableMultimap < com.google.gerrit.reviewdb.client.Change.Id , java.lang.String > getProblems () { return com.google.common.collect.ImmutableMultimap . copyOf ( problems ) ; }
public com.google.gerrit.server.project.ChangeControl validateFor ( final com.google.gerrit.reviewdb.client.Change change ) throws com.google.gerrit.server.project.NoSuchChangeException , com.google.gwtorm.server.OrmException { return com.google.gerrit.server.project.ChangeControl.Factory . validate ( controlFor ( change ) , db . get () ) ; }
private java.lang.String formatLabelValue ( short value ) { if ( value > NUMBER_CONSTANT ) { return STRING_CONSTANT + value ; } else { return java.lang.Short . toString ( value ) ; } }
public org.eclipse.jgit.lib.ObjectId getRevision () { return ( revision ) != null ? revision . copy () : null ; }
protected abstract T updateProjectConfig ( com.google.gerrit.server.git.ProjectConfig config , com.google.gerrit.server.git.MetaDataUpdate md , boolean parentProjectUpdate ) throws com.google.gerrit.common.errors.PermissionDeniedException , com.google.gerrit.server.permissions.PermissionBackendException , com.google.gerrit.server.project.NoSuchProjectException , com.google.gwtorm.server.OrmException , java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException ;
protected PushOneCommit.Result pushTo ( java.lang.String ref ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , admin . getIdent () , git ) ; return push . to ( ref ) ; }
public static com.google.gwtjsonrpc.client.event.Type < com.google.gwtjsonrpc.client.event.RpcStartHandler > getType () { if ( ( com.google.gwtjsonrpc.client.event.RpcStartEvent.TYPE ) == null ) { com.google.gwtjsonrpc.client.event.RpcStartEvent.TYPE = new com.google.gwtjsonrpc.client.event.Type () ; com.google.gwtjsonrpc.client.event.RpcStartEvent.INSTANCE = new com.google.gwtjsonrpc.client.event.RpcStartEvent () ; } return com.google.gwtjsonrpc.client.event.RpcStartEvent.TYPE ; }
public boolean isVisible ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ( change . getStatus () ) == ( Change.Status.DRAFT ) ) && ( ! ( isDraftVisible ( db , null ) ) ) ) { return false ; } return isRefVisible () ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . setTopic ( com.google.common.base.Strings . emptyToNull ( newTopicName ) ) ; return change ; }
protected java.nio.file.attribute.FileTime getLastModifiedTime ( java.nio.file.Path p ) throws java.io.IOException { return java.nio.file.Files . getLastModifiedTime ( p ) ; }
@ java.lang.Override public void formatChange ( ) throws com.google.gerrit.server.mail.EmailException { appendText ( velocifyFile ( STRING_CONSTANT ) ) ; }
public static java.lang.String getToken ( final javax.servlet.http.HttpServletRequest req ) { java.lang.String token = req . getPathInfo () ; if ( com.google.common.base.Strings . isNullOrEmpty ( token ) ) { return com.google.gerrit.httpd.LoginUrlToken.DEFAULT_TOKEN ; } return com.google.common.base.CharMatcher . is ( CHAR_CONS ) . trimLeadingFrom ( token ) ; }
public void evict ( final com.google.gerrit.client.reviewdb.Account.Id accountId ) { self . remove ( accountId ) ; }
@ java.lang.Override public T open ( ) throws com.google.gwtorm.server.OrmException { return implFactory . open () ; }
com.google.gerrit.sshd.DispatchCommand create ( java.util.Map < java.lang.String , com.google.inject.Provider < org.apache.sshd.server.Command > > map ) ;
private java.lang.String group ( java.lang.String name ) throws java.io.IOException { name = name ( name ) ; com.google.gerrit.server.group.CreateGroup.Input in = new com.google.gerrit.server.group.CreateGroup.Input () ; adminSession . put ( ( STRING_CONSTANT + name ) , in ) . consume () ; return name ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.reviewdb.client.ChangeMessage input ) { return ( input . getAuthor () ) == null ; }
public static com.google.gerrit.common.data.SubmitTypeRecord OK ( com.google.gerrit.extensions.client.SubmitType type ) { return new com.google.gerrit.common.data.SubmitTypeRecord ( com.google.gerrit.common.data.SubmitTypeRecord.Status.OK , type , null ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository < org.eclipse.jgit.internal.storage.dfs.DfsRepository > ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . getRepository () ) ; }
private com.google.gerrit.server.project.RefControl getRefControl () { return refControl ; }
public void setAccessKey ( char key ) { if ( ( focusy ) != null ) { focusy . setAccessKey ( key ) ; } }
@ java.lang.Override public void run () { resizePaddingOnOtherSide ( side , instance . getLineNumber ( handle ) ) ; }
public final com.google.gerrit.server.index.SiteIndexer < K , V , I > getSiteIndexer () { return siteIndexer . get () ; }
public void onSuccess ( final java.util.List < com.google.gerrit.client.reviewdb.AccountSshKey > result ) { keys . display ( result ) ; if ( result . isEmpty () ) { showAddKeyBlock ( true ) ; } }
@ java.lang.Override public com.google.gerrit.extensions.restapi.Response < > apply ( com.google.gerrit.server.change.ChangeResource rsrc , com.google.gerrit.server.change.Index.Input input ) throws java.io.IOException { indexer . index ( db . get () , rsrc . getChange () ) ; return com.google.gerrit.extensions.restapi.Response . none () ; }
private static java.lang.String getPrefixedName ( java.lang.String prefix , java.lang.String name ) { return prefix + name ; }
public com.google.gerrit.common.data.PermissionRange getRange ( java.lang.String permission ) { if ( com.google.gerrit.common.data.Permission . isLabel ( permission ) ) { return toRange ( permission , access ( permission ) ) ; } return null ; }
private boolean checkConnection () { com.ericsson.gerrit.plugins.eventslog.sql.SQLStore.log . debug ( STRING_CONSTANT ) ; try { eventsDb . queryOne () ; return true ; } catch ( java.sql.SQLException e ) { com.ericsson.gerrit.plugins.eventslog.sql.SQLStore.log . error ( STRING_CONSTANT , e ) ; return false ; } }
public void evict ( java.lang.String username ) { if ( username != null ) { self . remove ( username ) ; } }
private void removeChangeIdLock ( com.google.gerrit.reviewdb.client.Change.Id id ) { synchronized ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexChangeRestApiServlet.changeIdLocks ) { if ( ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexChangeRestApiServlet.changeIdLocks . get ( id ) . get () ) == NUMBER_CONSTANT ) { com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexChangeRestApiServlet.changeIdLocks . remove ( id ) ; } } }
@ com.google.gwtorm.client.SecondaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Project get ( com.google.gerrit.client.reviewdb.Project.Id id ) throws com.google.gwtorm.client.OrmException ;
@ java.lang.Override protected Project.NameKey getProjectName () { return getChange () . getProject () ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; Util.GROUP_SVC . groupDetail ( groupId , new com.google.gerrit.client.rpc.ScreenLoadCallback < com.google.gerrit.client.admin.AccountGroupDetail > ( this ) { @ java.lang.Override protected void preDisplay ( final com.google.gerrit.client.admin.AccountGroupDetail result ) { display ( result ) ; } } ) ; }
public static boolean canRead ( final com.google.gerrit.client.reviewdb.Account.Id who , final com.google.gerrit.client.reviewdb.Project.NameKey projectKey ) { return com.google.gerrit.client.rpc.BaseServiceImplementation . canRead ( who , com.google.gerrit.client.rpc.Common . getProjectCache () . get ( projectKey ) ) ; }
private com.google.gerrit.extensions.api.changes.DraftInput newDraft ( java.lang.String path , com.google.gerrit.extensions.client.Side side , int line , java.lang.String message ) { com.google.gerrit.extensions.api.changes.DraftInput d = new com.google.gerrit.extensions.api.changes.DraftInput () ; return com.google.gerrit.acceptance.server.change.CommentsIT . populate ( d , path , side , null , line , message ) ; }
@ java.lang.Override protected void onLoad ( ) throws java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { org.eclipse.jgit.lib.Config cfg = readConfig ( com.google.gerrit.server.account.WatchConfig.WATCH_CONFIG ) ; projectWatches = com.google.gerrit.server.account.WatchConfig . parse ( accountId , cfg , this ) ; }
public void mergeReview ( com.google.gerrit.extensions.common.ChangeInfo info ) throws java.lang.Exception { submitter . apply ( getRevisionResource ( info.project , info._number ) , new com.google.gerrit.extensions.api.changes.SubmitInput () ) ; }
private void assertProblems ( com.google.gerrit.gpg.PublicKeyChecker checker , com.google.gerrit.gpg.testutil.TestKey k , java.lang.String . . . expected ) { com.google.gerrit.gpg.CheckResult result = checker . check ( k . getPublicKey () ) ; org.junit.Assert . assertEquals ( java.util.Arrays . asList ( expected ) , result . getProblems () ) ; }
public static boolean isMagicBranch ( java.lang.String refName ) { return ( ( refName . startsWith ( com.google.gerrit.server.util.MagicBranch.NEW_DRAFT_CHANGE ) ) || ( refName . startsWith ( com.google.gerrit.server.util.MagicBranch.NEW_PUBLISH_CHANGE ) ) ) || ( refName . startsWith ( com.google.gerrit.server.util.MagicBranch.NEW_CHANGE ) ) ; }
@ java.lang.Override public com.google.inject.Module create ( ) throws com.google.gerrit.server.plugins.InvalidPluginException { com.google.common.base.Preconditions . checkState ( ( ( command ) != null ) , STRING_CONSTANT ) ; return ! ( commands . isEmpty () ) ? this : null ; }
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { addBranch . setEnabled ( true ) ; super . onFailure ( caught ) ; }
private void redisplay () { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( changeId ) ) ; }
public static java.lang.String cacheNameOf ( java.lang.String plugin , java.lang.String name ) { if ( STRING_CONSTANT . equals ( plugin ) ) { return name ; } return ( plugin + STRING_CONSTANT ) + name ; }
private void save () { try { saveSecure ( sec ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
public void setAction ( com.google.gerrit.common.data.PermissionRule.Action action ) { if ( action == null ) { throw new java.lang.NullPointerException ( STRING_CONSTANT ) ; } this . action = action ; }
private void validateReindexerNotRunning ( ) throws com.google.gerrit.lucene.ReindexerAlreadyRunningException { if ( ( ( reindexer ) != null ) && ( reindexer . isRunning () ) ) { throw new com.google.gerrit.lucene.ReindexerAlreadyRunningException () ; } }
@ java.lang.Override public void onRevisionCreated ( com.google.gerrit.extensions.events.RevisionCreatedListener.Event event ) { com.google.gerrit.extensions.common.ChangeInfo c = event . getChange () ; onEvent ( new com.google.gerrit.reviewdb.client.Project.NameKey ( c.project ) , c._number ) ; }
private com.google.gerrit.server.query.change.InternalChangeQuery query () { java.util.Set < java.lang.String > fields = com.google.common.collect.ImmutableSet . of ( ChangeField.CHANGE . getName () , ChangeField.PATCH_SET . getName () ) ; return queryProvider . get () . setRequestedFields ( fields ) ; }
private boolean canForgeCommitter () { if ( ( canForgeCommitter ) == null ) { canForgeCommitter = canPerform ( Permission.FORGE_COMMITTER ) ; } return canForgeCommitter ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onFollowUp ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { if ( ( followUpAction ) == null ) { followUpAction = new com.google.gerrit.client.change.FollowUpAction ( followUp , project . get () , branch , topic , key ) ; } followUpAction . show () ; }
public boolean canRebase () { return ( ( isOwner () ) || ( getRefControl () . canSubmit () ) ) || ( getRefControl () . canRebase () ) ; }
private boolean canRegisterNewEmail () { return com.google.gerrit.client.Gerrit . info () . auth () . canEdit ( Account.FieldName.REGISTER_NEW_EMAIL ) ; }
public static com.google.gerrit.client.rpc.RestApi change ( int id ) { return new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . id ( java.lang.String . valueOf ( id ) ) ; }
@ java.lang.Override protected void preDisplay ( final com.google.gerrit.common.data.PatchSetPublishDetail result ) { send . setEnabled ( true ) ; this . preDisplay ( result , this ) ; }
@ java.lang.Override public com.google.gerrit.server.notedb.NoteDbUpdateManager.Result rebuild ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change.Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return rebuild ( db , changeId , true ) ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( com.google.gerrit.client.Gerrit . isSignedIn () ) { com.google.gerrit.client.Gerrit . display ( PageLinks.MINE ) ; } else { com.google.gerrit.client.Gerrit . display ( PageLinks.ALL_OPEN ) ; } }
@ java.lang.Override com.google.gerrit.server.query.change.ChangeData convert ( com.google.gerrit.reviewdb.client.PatchSet t ) { return factory . create ( db . get () , t . getId () . getParentKey () ) ; }
@ org.junit.Test public void testDiffDeserializer () { org.junit.Assert . assertNotNull ( STRING_CONSTANT , new org.eclipse.jgit.diff.EditDeserializer () ) ; }
protected java.io.PrintWriter startRenderText ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res ) throws java.io.IOException { setApiHeaders ( res , com.google.gitiles.FormatType.TEXT ) ; return res . getWriter () ; }
protected com.google.gerrit.acceptance.AcceptanceTestRequestScope.Context setApiUserAnonymous () { return atrScope . set ( atrScope . newContext ( reviewDbProvider , null , anonymousUser . get () ) ) ; }
private javax.servlet.http.HttpServletRequest enrichAuthenticatedRequest ( javax.servlet.http.HttpServletRequest httpRequest , com.googlesource.gerrit.plugins.github.oauth.OAuthCookie authCookie ) { httpRequest = ( authCookie == null ) ? httpRequest : new com.googlesource.gerrit.plugins.github.oauth.AuthenticatedHttpRequest ( httpRequest , config.httpHeader , authCookie.user ) ; return httpRequest ; }
@ java.lang.Override public com.googlesource.gerrit.plugins.findowners.OwnersDb call () { com.googlesource.gerrit.plugins.findowners.Cache.log . trace ( ( STRING_CONSTANT + key ) ) ; return new com.googlesource.gerrit.plugins.findowners.OwnersDb ( key , repository , project , branch , files ) ; }
@ java.lang.Override public Change.Id apply ( com.google.gerrit.server.query.change.ChangeData cd ) { return cd . getId () ; }
boolean get ( org.eclipse.jgit.lib.ObjectId commit , org.eclipse.jgit.lib.Ref intoRef , com.google.gerrit.extensions.client.SubmitType submitType , java.lang.String mergeStrategy , com.google.gerrit.reviewdb.client.Branch.NameKey dest , org.eclipse.jgit.lib.Repository repo ) ;
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { project2 = new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ; createProject ( project2 . get () ) ; }
@ org.junit.Test public void getOpenChange_NotFound ( ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit.Result r = pushFactory . create ( db , admin . getIdent () , git ) . to ( STRING_CONSTANT ) ; r . assertOkStatus () ; assertNotFound ( r . getCommitId () ) ; }
@ java.lang.Override public synchronized com.google.gerrit.metrics.Counter0 newCounter ( java.lang.String name , com.google.gerrit.metrics.Description desc ) { com.google.gerrit.metrics.dropwizard.DropWizardMetricMaker . checkCounterDescription ( name , desc ) ; define ( name , desc ) ; return newCounterImpl ( name , desc . isRate () ) ; }
public static com.google.gerrit.server.git.validators.CommitValidationResult newFailure ( java.lang.String message ) { return new com.google.gerrit.server.git.validators.CommitValidationResult ( false , message ) ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.BinaryResult patch ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return getPatch . apply ( revision ) ; } catch ( java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public void set ( java.lang.String newValue ) { uuid = newValue ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.Response < > apply ( com.google.gerrit.server.change.ChangeResource rsrc , com.google.gerrit.server.change.ChangeEdits.DeleteFile.Input in ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.extensions.restapi.ResourceConflictException , com.google.gerrit.server.permissions.PermissionBackendException , com.google.gwtorm.server.OrmException , java.io.IOException { return deleteContent . apply ( rsrc , path ) ; }
void setPrivate ( boolean value , @ com.google.gerrit.common.Nullable java.lang.String message ) throws com.google.gerrit.extensions.restapi.RestApiException ;
@ java.lang.Override public com.google.gerrit.extensions.common.CommentInfo apply ( com.google.gerrit.server.change.CommentResource rsrc ) throws com.google.gwtorm.server.OrmException { return commentJson . get () . format ( rsrc . getComment () ) ; }
@ java.lang.Override public void replace ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException {}
public void index ( com.google.gerrit.reviewdb.client.Account.Id id ) throws java.io.IOException { for ( com.google.gerrit.server.index.Index < , com.google.gerrit.server.account.AccountState > i : getWriteIndexes () ) { i . replace ( byIdCache . get ( id ) ) ; } }
private com.google.gerrit.server.notedb.ChangeNotes getNotes () { return notes ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public com.google.gerrit.server.plugins.InstallPlugin create ( com.google.gerrit.extensions.restapi.TopLevelResource parent , java.lang.String id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { return new com.google.gerrit.server.plugins.InstallPlugin ( loader , com.google.gerrit.server.util.Url . decode ( id ) , true ) ; }
public abstract com.google.gerrit.server.git.MergeTip run ( com.google.gerrit.server.git.CodeReviewCommit currentTip , java.util.Collection < com.google.gerrit.server.git.CodeReviewCommit > toMerge ) throws com.google.gerrit.server.git.IntegrationException ;
public final native java.lang.String url ( ) ;
@ java.lang.Override public com.google.gerrit.server.project.FileResource parse ( com.google.gerrit.server.project.CommitResource parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { return new com.google.gerrit.server.project.FileResource ( parent . getProject () , parent . getCommit () , id . get () ) ; }
private com.google.gerrit.common.data.PermissionRule rule ( com.google.gerrit.server.git.ProjectConfig config , com.google.gerrit.reviewdb.client.AccountGroup group ) { return new com.google.gerrit.common.data.PermissionRule ( config . resolve ( group ) ) ; }
com.google.gitiles.CommitSoyData setRevWalk ( @ javax.annotation.Nullable org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = walk ; return this ; }
@ java.lang.Override public void registerKeys () { super . registerKeys () ; regNavigation = com.google.gwtexpui.globalkey.client.GlobalKey . add ( this , keysNavigation ) ; regAction = com.google.gwtexpui.globalkey.client.GlobalKey . add ( this , keysAction ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.account.DiffPreferences result ) { com.google.gerrit.extensions.client.DiffPreferencesInfo p = new com.google.gerrit.extensions.client.DiffPreferencesInfo () ; result . copyTo ( p ) ; com.google.gerrit.client.Gerrit . setDiffPreferences ( p ) ; }
public java.util.List < com.google.gerrit.reviewdb.client.PatchSetApproval > allApprovals ( ) throws com.google.gwtorm.server.OrmException { return com.google.common.collect.ImmutableList . copyOf ( allApprovalsMap () . values () ) ; }
public com.google.gerrit.reviewdb.client.PatchSetApproval.LabelId getLabelId () { return new com.google.gerrit.reviewdb.client.PatchSetApproval.LabelId ( name ) ; }
@ java.lang.Override public void stop () { executor . shutdown () ; executor = null ; }
public java.lang.String getName () { return name ; }
protected com.google.gerrit.server.CurrentUser getUser () { return user ; }
@ java.lang.Override public com.google.gerrit.server.query.Predicate < T > copy ( final java.util.Collection < ? extends com.google.gerrit.server.query.Predicate < T > > children ) { return new com.google.gerrit.server.query.OrPredicate ( children ) ; }
boolean canPerform ( java.lang.String permissionName ) { return canPerform ( permissionName , false ) ; }
private static boolean eq ( final java.lang.String a , final java.lang.String b ) { if ( ( a == null ) && ( b == null ) ) { return true ; } return ( a != null ) && ( a . equals ( b ) ) ; }
private com.google.gerrit.reviewdb.client.Change getChange () { return notes . getChange () ; }
private java.util.List < com.google.gerrit.server.query.change.ChangeData > getForOpenChange ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException , java.io.IOException { com.google.gerrit.server.git.ChangeSet cs = mergeSuperSet . completeChangeSet ( dbProvider . get () , c ) ; return cs . changes () . asList () ; }
public void invalidate ( final com.google.gerrit.client.reviewdb.Project p ) { if ( p != null ) { auto . remove ( p . getNameKey () ) ; } }
@ java.lang.Override public java.lang.Object getUserKey () { com.google.gerrit.server.CurrentUser user = userProvider . get () ; if ( user instanceof com.google.gerrit.server.IdentifiedUser ) { return ( ( com.google.gerrit.server.IdentifiedUser ) ( user ) ) . getAccountId () ; } return anonymousCowardName ; }
@ java.lang.Override public void onSignOut () { super . onSignOut () ; if ( ( starChange ) != null ) { starChange . setVisible ( false ) ; } }
protected com.google.gerrit.server.change.ChangeInserter newChange ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo ) throws java.lang.Exception { return newChange ( repo , null , null , null , null ) ; }
@ java.lang.Override public void stop () { if ( ( graphiteReporter ) != null ) { graphiteReporter . stop () ; } }
private void initCodeRepo ( ) throws java.io.IOException { if ( ( codeRepo ) == null ) { codeRepo = openRepo ( projectName ) ; } }
public void remove ( com.google.gerrit.common.data.AccessSection section ) { if ( section != null ) { accessSections . remove ( section . getName () ) ; } }
private static int nextFunction () { return ++ ( com.google.gwtjsonrpc.client.CallbackHandle.callbackId ) ; }
@ java.lang.Override public com.google.gerrit.extensions.api.accounts.Accounts accounts () { return accounts ; }
private static com.google.gerrit.server.query.change.RegexPathPredicate predicate ( java.lang.String pattern ) { return new com.google.gerrit.server.query.change.RegexPathPredicate ( pattern ) ; }
public void setSHA1 ( final java.lang.String sha1 ) { this . sha1 = sha1 ; }
@ java.lang.Override public java.lang.Object apply ( com.google.gerrit.extensions.restapi.TopLevelResource resource ) { format = com.google.gerrit.server.OutputFormat.JSON ; return display ( null ) ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( ( event . getCharCode () ) == ( com.google.gwt.event.dom.client.KeyCodes.KEY_ENTER ) ) { event . preventDefault () ; form . submit () ; } }
public Change.Id getId () { return change . getId () ; }
public static java.lang.String toProjectAdmin ( final com.google.gerrit.client.reviewdb.Project.NameKey n , final java.lang.String tab ) { return ( ( STRING_CONSTANT + ( n . toString () ) ) + STRING_CONSTANT ) + tab ; }
@ java.lang.Override public void onShowView () { super . onShowView () ; if ( ( cmA ) != null ) { cmA . refresh () ; } if ( ( cmB ) != null ) { cmB . refresh () ; } }
private java.util.List < com.google.gerrit.server.patch.PatchListEntry > getPatches ( org.eclipse.jgit.lib.ObjectId revisionIdA , org.eclipse.jgit.lib.ObjectId revisionIdB ) throws com.google.gerrit.server.patch.PatchListNotAvailableException { return patchListCache . get ( getKey ( revisionIdA , revisionIdB ) , project ) . getPatches () ; }
@ java.lang.Override protected void onLoad () { enableForm ( false , false , false ) ; saveProject . setEnabled ( false ) ; super . onLoad () ; refresh () ; }
public java.lang.String getParameter ( int i ) { return ( chopped.length ) > i ? chopped [ i ] : STRING_CONSTANT ; }
private native void panel ( java.lang.String i , com.google.gwt.core.client.JavaScriptObject e , java.lang.String n ) ;
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus () . isOpen () ) { change . setStatus ( Change.Status.SUBMITTED ) ; change . setLastUpdatedOn ( timestamp ) ; return change ; } return null ; }
boolean isVisible () { if ( ( isVisible ) == null ) { isVisible = ( getUser () . isInternalUser () ) || ( canPerform ( Permission.READ ) ) ; } return isVisible ; }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , ( edit ? new com.google.gerrit.client.editor.EditScreen ( id , line ) : new com.google.gerrit.client.diff.SideBySide ( baseId , id . getParentKey () , id . get () , side , line ) ) ) ; }
public void put ( com.google.gerrit.reviewdb.client.Account.Id id , com.google.gerrit.extensions.auth.oauth.OAuthToken accessToken ) { cache . put ( id , encrypt ( com.google.common.base.Preconditions . checkNotNull ( accessToken ) ) ) ; }
private java.lang.String getUrl () { return gerritConfig . getString ( pluginName , null , com.googlesource.gerrit.plugins.hooks.jira.JiraItsFacade.GERRIT_CONFIG_URL ) ; }
private org.eclipse.jgit.lib.Repository openRepository ( com.google.gerrit.server.project.ProjectState project ) throws java.io.IOException , org.eclipse.jgit.errors.RepositoryNotFoundException { return repoManager . openRepository ( project . getNameKey () ) ; }
public static void getDefault ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.dashboards.DashboardInfo > callback ) { com.google.gerrit.client.dashboards.DashboardList . base ( project ) . view ( STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . get ( callback ) ; }
private boolean canEditAssignee () { return ( ( ( isOwner () ) || ( getProjectControl () . isOwner () ) ) || ( getRefControl () . canEditAssignee () ) ) || ( isAssignee () ) ; }
@ java.lang.Override public void onSuccess ( final java.util.List < com.google.gerrit.reviewdb.Project > result ) { projectsTab . display ( result ) ; if ( firstPopupLoad ) { firstPopupLoad = false ; displayPopup () ; } }
@ java.lang.Override public void onSend () { Util.MANAGE_SVC . revertChange ( patchSet . getId () , getMessageText () , createCallback () ) ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < java.lang.Void > apply ( java.util.List < > input ) { mpm . end () ; return com.google.common.util.concurrent.Futures . immediateFuture ( null ) ; }
@ java.lang.Override protected void configure () { listener () . to ( CachePool.Lifecycle . class ) ; listener () . to ( WorkQueue.Lifecycle . class ) ; listener () . to ( com.google.gerrit.server.config.GerritGlobalModule.VelocityLifecycle . class ) ; }
public void setMaxDatabaseSize ( int size ) { if ( ( engine.internalDB ) != null ) engine.internalDB.maxContents = size ; else engine.internalDB = new com.googlecode.prolog_cafe.lang.InternalDatabase ( size ) ; }
@ org.junit.Test public void testNonIndexPredicates ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( in , rewrite ( in ) ) ; }
public void addPatchSets ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.data.ChangeAttribute a , java.util.Collection < com.google.gerrit.reviewdb.client.PatchSet > ps , com.google.gerrit.common.data.LabelTypes labelTypes ) { addPatchSets ( db , a , ps , null , false , null , labelTypes ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public java.lang.String getRefName () { return null ; }
@ java.lang.Override public void cancel () { synchronized ( this ) { final com.google.gerrit.sshd.SshScope.Context old = com.google.gerrit.sshd.SshScope . set ( context ) ; try { onExit ( com.google.gerrit.sshd.BaseCommand.STATUS_CANCEL ) ; } finally { com.google.gerrit.sshd.SshScope . set ( old ) ; } } }
private void deleteDraftComment ( com.google.gerrit.reviewdb.client.PatchLineComment c ) throws com.google.gwtorm.server.OrmException { createDraftUpdateIfNull () ; draftUpdate . deleteComment ( c ) ; }
void setLineNumberEmpty ( com.google.gerrit.client.diff.DisplaySide side , int cmLine ) { setLineNumber ( side , cmLine , null , UnifiedTable.style . unifiedLineNumberEmpty () ) ; }
@ java.lang.Override com.google.gerrit.server.query.change.ChangeData convert ( com.google.gerrit.reviewdb.client.Change t ) { return factory . create ( db . get () , t ) ; }
private void clear () { setRegisterKeys ( false ) ; body . clear () ; patchSetPanels . clear () ; }
@ java.lang.Override public void onClick ( final com.google.gwt.event.dom.client.ClickEvent event ) { doSave ( null ) ; }
public com.google.gerrit.reviewdb.Project.SubmitType getSubmitType () { return submitType ; }
@ org.junit.Test public void shouldIndexInRemoteOnChangeIndexedEvent ( ) throws java.lang.Exception { org.easymock.EasyMock . expect ( restClientMock . index ( com.ericsson.gerrit.plugins.syncindex.IndexEventHandlerTest.CHANGE_ID ) ) . andReturn ( true ) ; replayAll () ; indexEventHandler . onChangeIndexed ( id . get () ) ; verifyAll () ; }
private static void resetDomainValidator ( ) throws java.lang.Exception { java.lang.Class < > c = java.lang.Class . forName ( STRING_CONSTANT ) ; java.lang.reflect.Field f = c . getDeclaredField ( STRING_CONSTANT ) ; f . setAccessible ( true ) ; f . setBoolean ( c , false ) ; }
@ java.lang.Override public void modifyFile ( java.lang.String filePath , com.google.gerrit.extensions.restapi.RawInput newContent ) throws com.google.gerrit.extensions.restapi.RestApiException { try { changeEditsPut . apply ( changeResource , filePath , newContent ) ; } catch ( java.lang.Exception e ) { throw com.google.gerrit.server.api.ApiUtil . asRestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , new com.google.gerrit.client.diff.SideBySide ( baseId , id . getParentKey () , id . get () , side , line ) ) ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.RestView < com.google.gerrit.server.project.ProjectResource > list ( ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { return list . get () ; }
@ org.junit.Test public void flushAll_Forbidden ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = userSession . post ( STRING_CONSTANT , new com.google.gerrit.server.config.PostCaches.Input ( com.google.gerrit.server.config.PostCaches.Operation.FLUSH_ALL ) ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_FORBIDDEN ) ; }
@ java.lang.Override protected void configureServlets () { filter ( STRING_CONSTANT ) . through ( com.google.gerrit.server.http.RequestCleanupFilter . class ) ; }
public int getChangeId () { return changeId . get () ; }
public static java.lang.String publicKey ( com.jcraft.jsch.KeyPair sshKey , java.lang.String comment ) throws java.io.UnsupportedEncodingException { java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream () ; sshKey . writePublicKey ( out , comment ) ; return out . toString ( java.nio.charset.StandardCharsets.US_ASCII . name () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ org.junit.Before public void setUp ( ) throws java.lang.Exception { synchronized ( java.util.TimeZone . class ) { systemTimeZone = java.util.TimeZone . getDefault () ; java.util.TimeZone . setDefault ( java.util.TimeZone . getTimeZone ( STRING_CONSTANT ) ) ; format = new java.text.SimpleDateFormat ( STRING_CONSTANT ) ; } }
public void setSubmitType ( final com.google.gerrit.reviewdb.Project.SubmitType type ) { submitType = type ; }
@ org.junit.Test @ com.google.gerrit.acceptance.GerritConfig ( name = STRING_CONSTANT , value = STRING_CONSTANT ) public void suggestReviewersNoResult3 ( ) throws java.lang.Exception { java.lang.String changeId = createChange () . getChangeId () ; java.util.List < com.google.gerrit.server.change.SuggestReviewers.SuggestedReviewerInfo > reviewers = suggestReviewers ( changeId , STRING_CONSTANT , NUMBER_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( reviewers ) . isEmpty () ; }
@ java.lang.Override public com.google.gerrit.client.admin.PermissionEditor create ( int index ) { com.google.gerrit.client.admin.PermissionEditor subEditor = new com.google.gerrit.client.admin.PermissionEditor ( projectAccess , readOnly , value , projectAccess . getLabelTypes () ) ; permissionContainer . insert ( subEditor , index ) ; return subEditor ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { walk . close () ; }
@ java.lang.Override public com.google.gerrit.server.data.AccountAttribute get () { return account != null ? eventFactory . asAccountAttribute ( new com.google.gerrit.reviewdb.client.Account.Id ( account._accountId ) ) : null ; }
private com.google.gerrit.acceptance.AcceptanceTestRequestScope.Context newRequestContext ( com.google.gerrit.acceptance.TestAccount account ) { return atrScope . newContext ( reviewDbProvider , new com.google.gerrit.acceptance.SshSession ( server , account ) , identifiedUserFactory . create ( account . getId () ) ) ; }
private com.google.common.collect.SetMultimap < com.google.gerrit.reviewdb.client.Project.NameKey , com.google.gerrit.server.index.RefState > parseStates ( com.google.gerrit.server.query.change.ChangeData cd ) { return com.google.gerrit.server.index.RefState . parseStates ( cd . getRefStates () ) ; }
@ org.junit.Test public void basicTextFormattingWorks ( ) throws java.io.IOException { java.lang.String raw = STRING_CONSTANT ; java.lang.String formatted = STRING_CONSTANT ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , org.apache.commons.lang.StringUtils . countMatches ( formatter . format ( null , null , null , null , cfg , raw ) , formatted ) ) ; }
private void blockCreateReference ( ) throws java.lang.Exception { block ( Permission.CREATE , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS , STRING_CONSTANT ) ; }
@ java.lang.Override protected void preDisplay ( final java.util.List < com.google.gerrit.client.reviewdb.Project > result ) { projects . display ( result ) ; projects . finishDisplay () ; }
public static com.google.gerrit.elasticsearch.ElasticIndexModule latestVersionWithOnlineUpgrade () { return new com.google.gerrit.elasticsearch.ElasticIndexModule ( null , NUMBER_CONSTANT , true ) ; }
private java.util.List < com.google.gerrit.common.data.SubmitRecord > invalidResult ( com.googlecode.prolog_cafe.lang.Term rule , com.googlecode.prolog_cafe.lang.Term record , com.google.gerrit.server.query.change.ChangeData cd ) { return invalidResult ( rule , record , null , cd ) ; }
private static java.lang.String replace ( java.lang.String project , java.lang.String input ) { return input . replace ( STRING_CONSTANT , project ) ; }
@ java.lang.Override protected void configure () { factory ( PrologEnvironment.Factory . class ) ; }
@ java.lang.Override public < K , V > com.google.common.cache.Cache < K , V > build ( com.google.gerrit.server.cache.CacheBinding < K , V > def ) { return create ( def , false ) . build () ; }
@ org.junit.Before public void setUp () { listenerMock = createMock ( com.google.gerrit.common.EventListener . class ) ; com.google.gerrit.extensions.registration.DynamicSet < com.google.gerrit.common.EventListener > listeners = com.google.gerrit.extensions.registration.DynamicSet . emptySet () ; listeners . add ( listenerMock ) ; broker = new com.ericsson.gerrit.plugins.syncevents.SyncEventBroker ( null , listeners , null , null , null ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus () ) == ( Change.Status.DRAFT ) ) { change . setStatus ( Change.Status.NEW ) ; com.google.gerrit.server.ChangeUtil . updated ( change ) ; } return change ; }
public com.google.gerrit.server.ReviewerSet reviewers ( ) throws com.google.gwtorm.server.OrmException { if ( ( reviewers ) == null ) { reviewers = approvalsUtil . getReviewers ( notes () , approvals () . values () ) ; } return reviewers ; }
@ java.lang.Override public void sendBytes ( byte [] what ) { sendBytes ( what , NUMBER_CONSTANT , what.length ) ; }
public com.google.gerrit.server.query.change.ChangeData getChange ( ) throws com.google.gwtorm.server.OrmException { return com.google.common.collect.Iterables . getOnlyElement ( queryProvider . get () . byKeyPrefix ( changeId ) ) ; }
java.lang.String plugins ( ) ;
@ java.lang.Override public void run () { int w = cm . getGutterElement () . getOffsetWidth () ; getElement () . getStyle () . setPaddingLeft ( w , Unit.PX ) ; }
private static com.google.gerrit.client.ui.LinkMenuItem addLink ( final com.google.gerrit.client.ui.LinkMenuBar m , final java.lang.String text , final java.lang.String historyToken ) { com.google.gerrit.client.ui.LinkMenuItem i = new com.google.gerrit.client.ui.LinkMenuItem ( text , historyToken ) ; m . addItem ( i ) ; return i ; }
public static void unmarkPrivate ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . post ( com.google.gerrit.client.changes.ChangeApi.PrivateInput . create () , cb ) ; }
private java.lang.String newChange2 ( org.eclipse.jgit.api.Git git , org.eclipse.jgit.lib.PersonIdent ident ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , ident , git , PushOneCommit.SUBJECT , com.google.gerrit.acceptance.edit.ChangeEditIT.FILE_NAME , new java.lang.String ( com.google.gerrit.acceptance.edit.ChangeEditIT.CONTENT_OLD ) ) ; return push . rm ( STRING_CONSTANT ) . getChangeId () ; }
@ java.lang.Override public void close () {}
public boolean allRefsAreVisible () { return allRefsAreVisible ( java.util.Collections . < java.lang.String > emptySet () ) ; }
public com.google.gerrit.server.project.ChangeControl validateFor ( final com.google.gerrit.reviewdb.client.Change.Id id ) throws com.google.gerrit.server.project.NoSuchChangeException , com.google.gwtorm.server.OrmException { return com.google.gerrit.server.project.ChangeControl.Factory . validate ( controlFor ( id ) , db . get () ) ; }
com.google.gerrit.server.api.projects.ProjectApiImpl create ( com.google.gerrit.server.project.ProjectResource project ) ;
public static java.lang.String encode ( java.lang.String component ) { if ( component != null ) { try { return java.net.URLEncoder . encode ( component , STRING_CONSTANT ) ; } catch ( java.io.UnsupportedEncodingException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } } return null ; }
@ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { save . setEnabled ( true ) ; registerNewEmail . setEnabled ( true ) ; super . onFailure ( caught ) ; }
private com.google.gerrit.server.account.AuthResult auth ( final com.google.gerrit.reviewdb.Account account ) { if ( account != null ) { return new com.google.gerrit.server.account.AuthResult ( account . getId () , null , false ) ; } return null ; }
@ java.lang.Override public synchronized java.io.PrintWriter getWriter () { com.google.common.base.Preconditions . checkState ( ( ( outputStream ) == null ) , STRING_CONSTANT ) ; if ( ( writer ) == null ) { writer = new java.io.PrintWriter ( actualBody ) ; } return writer ; }
public static boolean isNotSignedIn ( final java.lang.Throwable caught ) { if ( caught instanceof com.google.gerrit.client.rpc.NotSignedInException ) { return true ; } return ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . equals ( NotSignedInException.MESSAGE ) ) ; }
private boolean sshdOff () { return new com.google.gerrit.server.ssh.SshAddressesModule () . getListenAddresses ( config ) . isEmpty () ; }
private void blockForcePush ( ) throws java.lang.Exception { com.google.gerrit.server.git.ProjectConfig cfg = projectCache . checkedGet ( project ) . getConfig () ; com.google.gerrit.server.project.Util . block ( cfg , Permission.PUSH , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS , STRING_CONSTANT ) . setForce ( true ) ; saveProjectConfig ( project , cfg ) ; }
private java.lang.String getPassword () { return gerritConfig . getString ( pluginName , null , com.googlesource.gerrit.plugins.its.jira.JiraItsFacade.GERRIT_CONFIG_PASSWORD ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onExpandAfter ( com.google.gwt.event.dom.client.ClickEvent e ) { expandAfter () ; otherBar . expandAfter () ; cm . focus () ; }
public org.kohsuke.github.GitHub getHub ( ) throws java.io.IOException { if ( ( token ) == null ) { return null ; } return org.kohsuke.github.GitHub . connectUsingOAuth ( config.gitHubApiUrl , token.accessToken ) ; }
private static com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > commit ( java.lang.String id ) { return new com.google.gerrit.server.query.change.CommitPredicate ( id ) ; }
public org.eclipse.jgit.revwalk.RevCommit commit ( com.google.gerrit.server.git.MetaDataUpdate update ) throws java.io.IOException { try ( com.google.gerrit.server.git.VersionedMetaData.BatchMetaDataUpdate batch = openUpdate ( update ) ) { batch . write ( update . getCommitBuilder () ) ; return batch . commit () ; } }
com.google.gerrit.server.mail.send.AddReviewerSender create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id id ) ;
@ org.junit.Test public void newPatchSetByOtherOnReviewableChangeNotifyOwner ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageReviewableChange () ; pushTo ( sc , STRING_CONSTANT , other ) ; assertThat ( sender ) . notSent () ; }
private java.util.Optional < java.lang.String > getUserName ( com.google.gerrit.reviewdb.client.Account.Id accountId ) { return accountCache . get ( accountId ) . map ( AccountState : : getUserName ) . orElse ( java.util.Optional . empty () ) ; }
public void setChangeId ( java.lang.String changeId ) { java.lang.String old = getChange () . getKey () . get () ; com.google.common.base.Preconditions . checkArgument ( old . equals ( changeId ) , STRING_CONSTANT , old , changeId ) ; this . changeId = changeId ; }
@ java.lang.Override public boolean supportsTeamMembershipChanges () { return false ; }
private static org.eclipse.jgit.lib.ObjectId emptyTreeId ( org.eclipse.jgit.lib.ObjectInserter inserter ) throws java.io.IOException { return inserter . insert ( new org.eclipse.jgit.lib.TreeFormatter () ) ; }
private static com.google.gerrit.client.rpc.RestApi call ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String action ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( action ) ; }
com.google.gerrit.server.git.SubmoduleOp create ( com.google.gerrit.reviewdb.client.Branch.NameKey destBranch , org.eclipse.jgit.revwalk.RevCommit mergeTip , org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.Repository db , com.google.gerrit.reviewdb.client.Project destProject , java.util.List < com.google.gerrit.reviewdb.client.Change > submitted , java.util.Map < com.google.gerrit.reviewdb.client.Change.Id , com.google.gerrit.server.git.CodeReviewCommit > commits , com.google.gerrit.reviewdb.client.Account account ) ;
public RefUpdate.Result restoreFile ( com.google.gerrit.server.edit.ChangeEdit edit , java.lang.String file ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.server.project.InvalidChangeOperationException , java.io.IOException { return modify ( com.google.gerrit.server.edit.ChangeEditModifier.TreeOperation.RESTORE_ENTRY , edit , file , null , null ) ; }
@ java.lang.Override protected void configure () { factory ( DeleteExternalIds.Factory . class ) ; factory ( ExternalIdDetailFactory.Factory . class ) ; }
private static java.util.Set < java.lang.String > getLabelNames ( com.google.gerrit.client.info.ChangeInfo change ) { return new java.util.TreeSet ( change . labels () ) ; }
@ java.lang.Override public java.lang.String getRefName () { return com.google.gerrit.reviewdb.client.RefNames . fullName ( change . get () . branch ) ; }
@ java.lang.Override public java.lang.String getHeader ( java.lang.String name ) { java.lang.String headerValue = headers . get ( name ) ; if ( headerValue != null ) { return headerValue ; } return super . getHeader ( name ) ; }
public java.lang.String getPluginName ( java.io.File srcFile ) throws java.io.IOException { return com.google.common.base.Objects . firstNonNull ( getGerritPluginName ( srcFile ) , com.google.gerrit.server.plugins.PluginLoader . nameOf ( srcFile ) ) ; }
private void assertProblems ( com.google.gerrit.gpg.testutil.TestKey tk , java.lang.String . . . expected ) throws java.lang.Exception { assertProblems ( tk . getPublicKey () , expected ) ; }
private org.eclipse.jgit.lib.PersonIdent newRefLogIdent () { com.google.gerrit.server.CurrentUser u = user . get () ; if ( u . isIdentifiedUser () ) { return u . asIdentifiedUser () . newRefLogIdent () ; } return serverIdent . get () ; }
@ java.lang.Override public java.util.Map < java.lang.String , org.eclipse.jgit.lib.Ref > filter ( java.util.Map < java.lang.String , org.eclipse.jgit.lib.Ref > refs , org.eclipse.jgit.lib.Repository repo , com.google.gerrit.server.permissions.PermissionBackend.RefFilterOptions opts ) throws com.google.gerrit.server.permissions.PermissionBackendException { return refFilterFactory . create ( this ) . filter ( refs , repo , opts ) ; }
void addFileCommentBox ( com.google.gerrit.client.diff.CommentBox box ) { diffTable . addFileCommentBox ( box ) ; }
public void setRevision ( final java.lang.String pattern ) { revision = pattern ; }
private boolean canRestore ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( canAbandon ( db ) ) && ( getRefControl () . canUpload () ) ; }
public static java.lang.String toAccountDashboard ( final com.google.gerrit.client.reviewdb.Account.Id acct ) { return STRING_CONSTANT + ( acct . toString () ) ; }
public static java.lang.String messageUUID ( final com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { final byte [] raw = new byte [ NUMBER_CONSTANT ] ; com.google.gerrit.server.ChangeUtil . fill ( raw , db ) ; return org.eclipse.jgit.util.Base64 . encodeBytes ( raw ) ; }
public static void draft ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String draftId , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.CommentInfo > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( project , id , STRING_CONSTANT ) . id ( draftId ) . get ( cb ) ; }
public static com.google.gerrit.server.query.change.InternalChangeQuery query ( com.google.gerrit.server.query.change.InternalChangeQuery q ) { return q . setRequestedFields ( ChangeField.CHANGE , ChangeField.PATCH_SET , ChangeField.MERGEABLE ) ; }
private boolean canRestore ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( canAbandon ( db ) ) && ( refControl . asForRef () . testOrFalse ( RefPermission.CREATE_CHANGE ) ) ; }
@ java.lang.Override protected void onUnload () { super . onUnload () ; if ( ( headerClick ) != null ) { headerClick . removeHandler () ; headerClick = null ; } }
public com.google.gerrit.server.account.AccountState state () { if ( ( state ) == null ) { state = accountCache . get ( getAccountId () ) ; } return state ; }
@ java.lang.Override public com.google.gerrit.extensions.client.SubmitType testSubmitType ( com.google.gerrit.extensions.common.TestSubmitRuleInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return testSubmitType . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ org.junit.Test public void emptyExceptSubject ( ) throws java.lang.Exception { com.google.gerrit.server.notedb.ChangeUpdate update = newUpdate ( newChange () , changeOwner ) ; update . setSubjectForCommit ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( update . commit () ) . isNotNull () ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.reviewdb.client.PatchSetApproval input ) { return user . equals ( input . getAccountId () ) ; }
@ com.google.gwtorm.client.SecondaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Account bySshUserName ( java.lang.String userName ) throws com.google.gwtorm.client.OrmException ;
protected abstract boolean writeChanges ( ) ;
private static boolean isCodeReview ( com.google.gerrit.reviewdb.client.PatchSetApproval.LabelId id ) { return STRING_CONSTANT . equalsIgnoreCase ( id . get () ) ; }
public com.google.gerrit.client.diff.DiffApi base ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { if ( id != null ) { call . addParameter ( STRING_CONSTANT , id . get () ) ; } return this ; }
void select ( com.google.gerrit.client.change.ReplyBox.LabelRadioButton b ) { selected = b ; labelsTable . setText ( row , labelHelpColumn , b.text ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { new com.google.gerrit.testutil.InMemoryModule () . inject ( this ) ; }
@ java.lang.Override public void onSuccess ( java.lang.String result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , psId ) ) ; }
public java.lang.String getName () { return getAccount () . getName () ; }
public boolean isOwnerAnyRef () { return ( canPerformOnAnyRef ( Permission.OWNER ) ) || ( user . getCapabilities () . canAdministrateServer () ) ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; display () ; refresh () ; }
@ org.junit.Test public void parseInvalidTimestamps () { com.google.gwtjsonrpc.common.JavaSqlTimestampHelperTest . assertInvalid ( STRING_CONSTANT ) ; com.google.gwtjsonrpc.common.JavaSqlTimestampHelperTest . assertInvalid ( STRING_CONSTANT ) ; com.google.gwtjsonrpc.common.JavaSqlTimestampHelperTest . assertInvalid ( STRING_CONSTANT ) ; com.google.gwtjsonrpc.common.JavaSqlTimestampHelperTest . assertInvalid ( STRING_CONSTANT ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.groups.GroupMap result ) { groups . display ( result , subname ) ; groups . finishDisplay () ; }
private void setupDefaultOperations () { new org.eclipse.example.calc.internal.operations.Equals () ; new org.eclipse.example.calc.internal.operations.Minus () ; new org.eclipse.example.calc.internal.operations.Plus () ; new org.eclipse.example.calc.internal.operations.Square () ; }
com.google.gson.JsonElement call ( java.lang.String method , java.lang.String token ) throws com.googlesource.gerrit.plugins.its.phabricator.conduit.ConduitException { return call ( method , new java.util.HashMap < java.lang.String , java.lang.Object > () , token ) ; }
protected static boolean isInvalidXSRF ( final java.lang.Throwable caught ) { return ( caught instanceof com.google.gwt.user.client.rpc.InvocationException ) && ( caught . getMessage () . equals ( JsonConstants.ERROR_INVALID_XSRF ) ) ; }
public void setProject ( final java.lang.String pattern ) { project = pattern ; }
@ java.lang.Override protected void configure () { bind ( ProjectControl.GenericFactory . class ) ; factory ( ProjectControl.AssistedFactory . class ) ; bind ( ChangeControl.Factory . class ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , id ) ) ; hide () ; }
protected static java.lang.String describe ( com.google.gerrit.server.CurrentUser user ) { if ( user . isIdentifiedUser () ) { return user . getAccountId () . toString () ; } return user . toString () ; }
@ org.junit.Test public void testNonIndexPredicates ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( in ) . isEqualTo ( rewrite ( in ) ) ; }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , ( edit ? new com.google.gerrit.client.editor.EditScreen ( baseId , id , line ) : new com.google.gerrit.client.diff.SideBySide ( baseId , id . getParentKey () , id . get () , side , line ) ) ) ; }
private void logWarn ( java.lang.String msg ) { if ( com.google.gerrit.server.git.MergeOp.log . isWarnEnabled () ) { com.google.gerrit.server.git.MergeOp.log . warn ( ( ( submissionId ) + msg ) ) ; } }
public static org.apache.lucene.index.Term idTerm ( com.google.gerrit.reviewdb.client.Change.Id id ) { return com.google.gerrit.lucene.QueryBuilder . intTerm ( com.google.gerrit.lucene.QueryBuilder.ID_FIELD , id . get () ) ; }
com.google.gerrit.server.patch.PatchListKey toPatchListKey () { return new com.google.gerrit.server.patch.PatchListKey ( oldId , parentNum , newId , whitespace ) ; }
@ java.lang.Override public void run () { for ( ; ; ) { try { if ( done . await ( checkFrequencyMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ) { return; } } catch ( java.lang.InterruptedException e ) {} loader . rescan () ; } }
@ java.lang.Override public void execute () { file . setFocus ( true ) ; }
@ org.junit.Test public void testExclamationMark () { com.google.gerrit.common.data.GitWebType gitWebType = com.google.gerrit.common.data.GitWebType . fromName ( null ) ; gitWebType . setPathSeparator ( CHAR_CONS ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , gitWebType . replacePathSeparator ( STRING_CONSTANT ) ) ; }
@ java.lang.Override protected boolean writeChanges () { return writeChanges ; }
protected com.google.gerrit.reviewdb.client.PatchSet updateChangeImpl ( com.google.gerrit.server.git.BatchUpdate.ChangeContext ctx ) throws java.lang.Exception { return null ; }
public void setMessage ( final java.lang.String message ) {}
protected void submit ( java.lang.String changeId , com.google.gerrit.extensions.api.changes.SubmitInput input ) throws java.lang.Exception { submit ( changeId , input , null , null ) ; }
public void remove ( com.google.gerrit.common.data.AccessSection section ) { if ( section != null ) { accessSections . remove ( section . getRefPattern () ) ; } }
@ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { rebuild ( change , changeRepo ) ; return null ; }
private static java.lang.String getAbbrRevId ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId revId ) throws java.io.IOException { try ( org.eclipse.jgit.lib.ObjectReader reader = repo . newObjectReader () ) { return reader . abbreviate ( revId ) . name () ; } }
@ java.lang.Override public void review ( com.google.gerrit.extensions.api.changes.ReviewInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { review . apply ( revision , in ) ; } catch ( com.google.gwtorm.server.OrmException | com.google.gerrit.server.git.UpdateException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public com.google.gwtorm.client.SchemaFactory < com.google.gerrit.reviewdb.ReviewDb > get () { return ds . get () ; }
private void removeAllChildren ( com.google.gwt.user.client.Element el ) { for ( int i = ( com.google.gwt.user.client.DOM . getChildCount ( el ) ) - NUMBER_CONSTANT ; i >= NUMBER_CONSTANT ; i -- ) { el . removeChild ( com.google.gwt.user.client.DOM . getChild ( el , i ) ) ; } }
@ java.lang.Override public void doChangeRestoredHook ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account account , com.google.gerrit.reviewdb.client.PatchSet patchSet , java.lang.String reason , com.google.gerrit.reviewdb.server.ReviewDb db ) {}
void onEdit () { if ( canEdit ) { com.google.gwt.user.client.ui.UIObject . setVisible ( form , true ) ; input . setText ( text . getText () ) ; input . setFocus ( true ) ; } }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change () ; return ( change != null ) && ( ( change . getSortKey () . compareTo ( getValue () ) ) > NUMBER_CONSTANT ) ; }
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { super . onFailure ( caught ) ; enable ( true ) ; }
@ org.junit.Test public void listOneGroupMember ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( GET_ONE ( STRING_CONSTANT ) . name ) . isEqualTo ( admin.fullName ) ; }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = cd . change () ; return ( change != null ) && ( ( change . getSortKey () . compareTo ( getValue () ) ) < NUMBER_CONSTANT ) ; }
@ java.lang.Override public int getCost () { return NUMBER_CONSTANT ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ReadViewBinder < R > get ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ReadViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.GET , STRING_CONSTANT ) ) ; }
public boolean isDraftVisible ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( ( isOwner () ) || ( isReviewer ( db , cd ) ) ) || ( getRefControl () . canViewDrafts () ) ; }
@ java.lang.Override public void info ( java.lang.String msg ) { java.lang.System.err . println ( msg ) ; java.lang.System.err . flush () ; }
@ java.lang.Override public T call ( ) throws java.lang.Exception { if ( callerContext == ( local . getContext () ) ) { return callable . call () ; } return wrapped . call () ; }
@ java.lang.Override public void onSuccess ( final com.google.gerrit.client.projects.ProjectMap result ) { projectsTab . display ( result , subname ) ; if ( firstPopupLoad ) { firstPopupLoad = false ; displayPopup () ; } }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onAddGroupByClick ( com.google.gwt.event.dom.client.ClickEvent event ) { addGroup () ; }
@ java.lang.Override public void onSuccess ( final com.google.gwtjsonrpc.client.VoidResult result ) { if ( ( ++ ( done ) ) == ( commentEditors . size () ) ) { onSend2 ( submit ) ; } }
@ java.lang.SafeVarargs public static < T > com.google.gerrit.server.query.Predicate < T > and ( final com.google.gerrit.server.query.Predicate < T > . . . that ) { if ( ( that.length ) == NUMBER_CONSTANT ) { return that [ NUMBER_CONSTANT ] ; } return new com.google.gerrit.server.query.AndPredicate ( that ) ; }
void moveUp ( int row ) { if ( row > NUMBER_CONSTANT ) { swap ( ( row - NUMBER_CONSTANT ) , row ) ; } }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.extensions.api.GerritApi . class ) . to ( com.google.gerrit.server.api.GerritApiImpl . class ) ; install ( new com.google.gerrit.server.api.Module () ) ; install ( new com.google.gerrit.server.api.Module () ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( ( change . getStatus () ) == ( Change.Status.NEW ) ) { change . setStatus ( Change.Status.SUBMITTED ) ; com.google.gerrit.server.ChangeUtil . updated ( change ) ; } return change ; }
@ java.lang.Override public void requestSuggestions ( com.google.gerrit.client.ui.Request req , com.google.gerrit.client.ui.Callback cb ) { com.google.gerrit.client.ui.RemoteSuggestOracle.Query q = new com.google.gerrit.client.ui.RemoteSuggestOracle.Query ( req , cb ) ; if ( ( query ) == null ) { query = q ; q . start () ; } else { query = q ; } }
private void readGroupList ( ) throws java.io.IOException { groupList = com.google.gerrit.server.git.GroupList . parse ( projectName , readUTF8 ( GroupList.FILE_NAME ) , this ) ; }
@ org.junit.Test public void testThreeLevelTreeWithAllIndexPredicates ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( rewrite . rewrite ( in , NUMBER_CONSTANT , com.google.gerrit.common.data.GlobalCapability.DEFAULT_MAX_QUERY_LIMIT ) ) . isEqualTo ( query ( in ) ) ; }
public void addPatchSets ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.data.ChangeAttribute a , java.util.Collection < com.google.gerrit.reviewdb.client.PatchSet > ps , com.google.gerrit.common.data.LabelTypes labelTypes ) { addPatchSets ( db , a , ps , null , false , null , labelTypes ) ; }
public static com.google.gerrit.client.rpc.RestApi hashtag ( @ com.google.gerrit.common.Nullable java.lang.String project , int changeId , java.lang.String hashtag ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , changeId ) . view ( STRING_CONSTANT ) . id ( hashtag ) ; }
public com.google.gerrit.server.IdentifiedUser create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , realm , anonymousCowardName , canonicalUrl , accountCache , groupBackend , disableReverseDnsLookup , remotePeerProvider , id , null ) ; }
private com.google.gerrit.extensions.common.ChangeInput newChangeInput () { com.google.gerrit.extensions.common.ChangeInput in = new com.google.gerrit.extensions.common.ChangeInput () ; in.branch = STRING_CONSTANT ; in.subject = STRING_CONSTANT ; in.project = project . get () ; return in ; }
java.lang.String getAvatarUrl ( int size ) throws com.google.gerrit.extensions.restapi.RestApiException ;
@ java.lang.Override public java.lang.String getUrl ( java.lang.String project ) { return STRING_CONSTANT + project ; }
public final native void go ( java.lang.String token ) ;
public void setTabIndex ( int index ) { if ( ( focusy ) != null ) { focusy . setTabIndex ( index ) ; } }
private void blockForcePush ( ) throws java.lang.Exception { block ( STRING_CONSTANT , Permission.PUSH , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS ) . setForce ( true ) ; }
public com.google.gerrit.server.change.PatchSetInserter setMessage ( java.lang.String message ) { this . message = message ; return this ; }
@ java.lang.Override public void onHeadUpdated ( com.google.gerrit.extensions.events.HeadUpdatedListener.Event event ) { updateHead ( new com.google.gerrit.reviewdb.client.Project.NameKey ( event . getProjectName () ) , event . getNewHeadName () ) ; }
boolean contains ( int idx ) ;
@ java.lang.Override public com.google.gerrit.extensions.restapi.RestView < com.google.gerrit.server.config.ConfigResource > list () { return list ; }
@ java.lang.Override public com.google.gerrit.extensions.common.DiffInfo diff ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return getDiff . apply ( file ) . value () ; } catch ( java.io.IOException | com.google.gerrit.server.project.InvalidChangeOperationException | com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
protected void logDebug ( java.lang.String msg , java.lang.Throwable t ) { if ( ( ( requestId ) != null ) && ( com.google.gerrit.server.update.BatchUpdate.log . isDebugEnabled () ) ) { com.google.gerrit.server.update.BatchUpdate.log . debug ( ( ( requestId ) + msg ) , t ) ; } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ChangeInfo info ) { info . init () ; loadConfigInfo ( info , base ) ; }
public void onFailure ( java.lang.Throwable caught ) {}
public static java.lang.String toPatch ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.client.DiffObject diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , project , diffBase , revision , fileName , null , NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void preDisplay ( final com.google.gerrit.common.data.ProjectList result ) { projects . display ( result . getProjects () ) ; projects . finishDisplay () ; }
@ java.lang.Override public void close () { tw . close () ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; initUUID () ; initName () ; initOwner () ; initDescription () ; initGroupOptions () ; }
public static boolean skipField ( java.lang.reflect.Field field ) { int modifiers = field . getModifiers () ; return ( java.lang.reflect.Modifier . isFinal ( modifiers ) ) || ( java.lang.reflect.Modifier . isTransient ( modifiers ) ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JavaScriptObject result ) { if ( screen . isCurrentView () ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( screen . getProject () , changeId ) ) ; } }
@ java.lang.Override public void postUpdate ( com.google.gerrit.server.git.BatchUpdate.Context ctx ) { if ( ( change ) != null ) { topicEdited . fire ( change , ctx . getAccount () , oldTopicName , ctx . getWhen () ) ; } }
com.google.gerrit.extensions.restapi.RestModifyView < P , > delete ( P parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.RestApiException ;
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo info ) { info . init () ; loadConfigInfo ( info , base ) ; }
private void setupDefaultOperations () { new org.eclipse.example.calc.internal.operations.Equals () ; new org.eclipse.example.calc.internal.operations.Minus () ; new org.eclipse.example.calc.internal.operations.Plus () ; new org.eclipse.example.calc.internal.Divide () ; new org.eclipse.example.calc.internal.operations.Square () ; }
public com.google.gerrit.server.git.validators.CommitValidators forMergedCommits ( com.google.gerrit.server.project.RefControl refControl ) { return new com.google.gerrit.server.git.validators.CommitValidators ( com.google.common.collect.ImmutableList . of ( new com.google.gerrit.server.git.validators.CommitValidators.UploadMergesPermissionValidator ( refControl ) , new com.google.gerrit.server.git.validators.CommitValidators.AuthorUploaderValidator ( refControl , canonicalWebUrl ) , new com.google.gerrit.server.git.validators.CommitValidators.CommitterUploaderValidator ( refControl , canonicalWebUrl ) ) ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onDeleteChange ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { if ( com.google.gwt.user.client.Window . confirm ( Resources.C . deleteChange () ) ) { com.google.gerrit.client.change.ChangeActions . delete ( project , changeId , deleteChange ) ; } }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public boolean updateChange ( com.google.gerrit.server.git.BatchUpdate.ChangeContext ctx ) throws java.lang.Exception { return false ; }
@ org.junit.Test public void testThreeLevelTreeWithAllIndexPredicates ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( query ( parse ( STRING_CONSTANT ) ) , rewrite . rewrite ( in ) ) ; }
static boolean dryRun ( com.google.gerrit.server.git.strategy.SubmitDryRun.Arguments args , org.eclipse.jgit.lib.Repository repo , com.google.gerrit.server.git.CodeReviewCommit mergeTip , com.google.gerrit.server.git.CodeReviewCommit toMerge ) throws com.google.gerrit.server.git.IntegrationException { return ( ! ( args.mergeUtil . hasMissingDependencies ( args.mergeSorter , toMerge ) ) ) && ( args.mergeUtil . canMerge ( args.mergeSorter , repo , mergeTip , toMerge ) ) ; }
public static com.google.gerrit.server.account.externalids.ExternalId create ( com.google.gerrit.server.account.externalids.ExternalId.Key key , com.google.gerrit.reviewdb.client.Account.Id accountId , @ com.google.gerrit.common.Nullable java.lang.String email , @ com.google.gerrit.common.Nullable java.lang.String hashedPassword ) { return com.google.gerrit.server.account.externalids.ExternalId . create ( key , accountId , com.google.common.base.Strings . emptyToNull ( email ) , com.google.common.base.Strings . emptyToNull ( hashedPassword ) , null ) ; }
public java.lang.String getCoverLetter () { if ( ( changeMessage ) != null ) { final java.lang.String txt = changeMessage . getMessage () ; if ( txt != null ) { return txt . trim () ; } } return STRING_CONSTANT ; }
protected final void logDebug ( java.lang.String msg , java.lang.Object . . . args ) { if ( com.google.gerrit.server.git.strategy.SubmitStrategyOp.log . isDebugEnabled () ) { com.google.gerrit.server.git.strategy.SubmitStrategyOp.log . debug ( ( ( this . args . submissionId ) + msg ) , args ) ; } }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.ssh.SshInfo . class ) . to ( com.google.gerrit.server.ssh.NoSshInfo . class ) ; }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > reviewedBy = cd . reviewedBy () ; return ! ( reviewedBy . isEmpty () ) ? reviewedBy . contains ( id ) : id . equals ( com.google.gerrit.server.query.change.IsReviewedPredicate.NOT_REVIEWED ) ; }
public static com.google.gerrit.client.config.ServerInfo info () { return com.google.gerrit.client.Gerrit.myServerInfo ; }
private void removeIdLock ( T id ) { synchronized ( idLocks ) { if ( ( idLocks . get ( id ) . get () ) == NUMBER_CONSTANT ) { idLocks . remove ( id ) ; } } }
private java.util.Optional < com.google.gerrit.server.group.InternalGroup > toInternalGroup ( org.apache.lucene.document.Document doc ) { com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid = new com.google.gerrit.reviewdb.client.AccountGroup.UUID ( doc . getField ( com.google.gerrit.server.index.group.GroupField.UUID . getName () ) . stringValue () ) ; return groupCache . get () . get ( uuid ) ; }
public void put ( final com.google.gerrit.server.patch.DiffCacheKey k , final com.google.gerrit.server.patch.DiffCacheContent c ) { self . put ( k , c ) ; }
@ java.lang.Override public java.util.List < com.google.gitiles.blame.Region > load ( com.google.gitiles.blame.BlameCacheImpl.Key key ) throws java.io.IOException { return com.google.gitiles.blame.BlameCacheImpl . loadBlame ( key ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { com.google.gerrit.acceptance.TestAccount admin = accounts . create ( STRING_CONSTANT , STRING_CONSTANT ) ; session = new com.google.gerrit.acceptance.RestSession ( server , admin ) ; }
public java.util.List < com.google.gerrit.reviewdb.client.ChangeMessage > messages ( ) throws com.google.gwtorm.server.OrmException { if ( ( messages ) == null ) { messages = cmUtil . byChange ( db , notes () ) ; } return messages ; }
@ java.lang.Override public void configure () { factory ( OnlineReindexer.Factory . class ) ; listener () . to ( com.google.gerrit.lucene.LuceneVersionManager . class ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; allowGlobalCapabilities ( com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS , GlobalCapability.CREATE_GROUP ) ; allowGlobalCapabilities ( com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS , GlobalCapability.CREATE_PROJECT ) ; }
public final java.io.File getCommentPath ( java.lang.String fileName ) { return new java.io.File ( templatesPath . getPath () , fileName ) ; }
@ java.lang.Override public void evict ( com.google.gerrit.reviewdb.client.Account.Id accountId ) throws java.io.IOException { if ( accountId != null ) { byId . invalidate ( accountId ) ; index ( accountId ) ; } }
public void assertEquals ( java.lang.String str ) { printWriter . flush () ; org.junit.Assert . assertEquals ( stringWriter . toString () , str ) ; }
void unstarChange ( java.lang.String changeId ) throws com.google.gerrit.extensions.restapi.RestApiException ;
public void onSuccess ( final java.util.List < com.google.gerrit.client.data.ChangeInfo > result ) { starred . display ( result ) ; table . finishDisplay ( true ) ; }
@ com.google.gwtorm.client.PrimaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Account get ( com.google.gerrit.client.reviewdb.Account.Id key ) throws com.google.gwtorm.client.OrmException ;
@ org.junit.Test public void nullCommitMessage ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( null ) ) . isEmpty () ; }
private void addComment ( com.google.gerrit.acceptance.PushOneCommit.Result r , java.lang.String message ) throws java.lang.Exception { addComment ( r , message , false , false ) ; }
@ java.lang.Override public boolean required () { return false ; }
private void open ( java.lang.String path ) { hide () ; com.google.gerrit.client.Gerrit . display ( com.google.gerrit.client.Dispatcher . toEditScreen ( project , new com.google.gerrit.reviewdb.client.PatchSet.Id ( changeId , revision . _number () ) , path ) ) ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.server.git.ReceiveCommits.CreateRequest input ) { return ( input.change ) != null ; }
private PatchSet.Id getPatchSetId ( com.google.gerrit.acceptance.GitUtil.Commit c ) throws com.google.gwtorm.server.OrmException { return getChange ( c ) . change () . currentPatchSetId () ; }
@ java.lang.Override public com.google.gerrit.server.patch.PatchList createEntry ( final com.google.gerrit.server.patch.PatchListKey key ) throws java.lang.Exception { final org.eclipse.jgit.lib.Repository repo = repoManager . openRepository ( key.projectKey ) ; try { return readPatchList ( key , repo ) ; } finally { repo . close () ; } }
private com.google.gerrit.acceptance.AcceptanceTestRequestScope.Context newRequestContext ( com.google.gerrit.acceptance.TestAccount account ) { return atrScope . newContext ( reviewDbProvider , new com.google.gerrit.acceptance.SshSession ( server , account ) , identifiedUserFactory . create ( com.google.inject.util.Providers . of ( db ) , account . getId () ) ) ; }
void downloadOptional () { this . required = false ; download () ; }
@ java.lang.Override protected void configure () { bind ( org.eclipse.jgit.lib.Config . class ) . annotatedWith ( com.google.gerrit.server.config.GerritServerConfig . class ) . toInstance ( new org.eclipse.jgit.lib.Config () ) ; bind ( com.google.gerrit.reviewdb.SystemConfig . class ) . toInstance ( systemConfig ) ; bind ( com.google.gerrit.server.config.AuthConfig . class ) ; }
@ java.lang.Override protected final com.google.gerrit.server.mail.ProjectWatch.Watchers getWatchers ( com.google.gerrit.reviewdb.client.AccountProjectWatch.NotifyType type ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.server.mail.ProjectWatch watch = new com.google.gerrit.server.mail.ProjectWatch ( args , branch . getParentKey () , projectState , changeData ) ; return watch . getWatchers ( type ) ; }
private void openLine ( final com.google.gwtexpui.safehtml.client.SafeHtmlBuilder m ) { m . openTr () ; m . setAttribute ( STRING_CONSTANT , STRING_CONSTANT ) ; m . openTd () ; m . setStyleName ( com.google.gerrit.client.patches.S_ICON_CELL ) ; m . closeTd () ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.BinaryResult apply ( com.google.gerrit.server.project.FileResource rsrc ) throws com.google.gerrit.extensions.restapi.BadRequestException , com.google.gerrit.extensions.restapi.ResourceNotFoundException , java.io.IOException { return fileContentUtil . getContent ( rsrc . getProjectState () , rsrc . getRev () , rsrc . getPath () , null ) ; }
public void execute () { assert ( selfWidget ) != null ; assert ( widgetManager ) != null ; selfWidget . changed () ; widgetManager . resizePaddingWidget () ; }
private java.lang.String comparePattern () { if ( getName () . startsWith ( com.google.gerrit.common.data.AccessSection.REGEX_PREFIX ) ) { return getName () . substring ( com.google.gerrit.common.data.AccessSection.REGEX_PREFIX . length () ) ; } return getName () ; }
com.google.gerrit.server.change.ReviewerResource create ( com.google.gerrit.server.change.ChangeResource change , com.google.gerrit.reviewdb.client.Account.Id id ) ;
private void insertEmptyLines ( net.codemirror.lib.CodeMirror cm , int nextLine , int cnt ) { addPaddingWidget ( cm , diffTable.style . padding () , ( nextLine - NUMBER_CONSTANT ) , cnt , Unit.EM , null ) ; }
public static java.lang.String refsDraftCommentsPrefix ( com.google.gerrit.reviewdb.client.Change.Id changeId ) { return com.google.gerrit.reviewdb.client.RefNames . buildRefsPrefix ( com.google.gerrit.reviewdb.client.RefNames.REFS_DRAFT_COMMENTS , changeId . get () ) . toString () ; }
@ org.junit.Test public void testReplaceEscaping () { org.junit.Assert . assertEquals ( STRING_CONSTANT , new com.google.gwtexpui.safehtml.client.LinkFindReplace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT ) ) ; }
@ net.codemirror.mode.Source ( value = STRING_CONSTANT ) @ com.google.gwt.resources.client.DataResource.DoNotEmbed com.google.gwt.resources.client.DataResource sql ( ) ;
@ java.lang.Override public com.google.gerrit.server.notedb.NoteDbUpdateManager.Result rebuildEvenIfReadOnly ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change.Id changeId ) throws com.google.gwtorm.server.OrmException , java.io.IOException { return rebuild ( db , changeId , false ) ; }
private com.google.gerrit.server.account.WatchConfig.NotifyValue parseNotifyValue ( java.lang.String notifyValue ) { return com.google.gerrit.server.account.WatchConfig.NotifyValue . parse ( new com.google.gerrit.reviewdb.client.Account.Id ( NUMBER_CONSTANT ) , STRING_CONSTANT , notifyValue , this ) ; }
public com.google.gerrit.server.notedb.ChangeNotes createForNew ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( args , change ) . load () ; }
public final native void setPath ( java.lang.String path ) ;
public com.google.gerrit.server.project.ProjectState getParentState () { if ( isAllProjects ) { return null ; } return projectCache . get ( getProject () . getParent ( allProjectsName ) ) ; }
public com.google.gerrit.server.IdentifiedUser create ( java.net.SocketAddress remotePeer , com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , anonymousCowardName , canonicalUrl , realm , accountCache , groupBackend , com.google.inject.util.Providers . of ( remotePeer ) , null , id , null ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JavaScriptObject result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , id ) ) ; }
public boolean canRebase ( com.google.gerrit.server.change.RevisionResource r ) { return canRebase ( r . getPatchSet () , r . getChange () . getDest () ) ; }
@ java.lang.Override public com.google.gerrit.server.query.change.ChangeData apply ( com.google.gerrit.server.notedb.ChangeNotes notes ) { return changeDataFactory . create ( db , notes ) ; }
@ org.junit.Test public void getTagOfNonVisibleProjectWithApi ( ) throws java.lang.Exception { blockRead ( STRING_CONSTANT ) ; exception . expect ( com.google.gerrit.extensions.restapi.ResourceNotFoundException . class ) ; gApi . projects () . name ( project . get () ) . tag ( STRING_CONSTANT ) . get () ; }
@ java.lang.Override public int getCost () { return NUMBER_CONSTANT ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; com.google.gerrit.client.changes.ChangeList . query ( query , ChangeTable.OPTIONS , loadCallback () , start , pageSize ) ; }
@ java.lang.Override public com.google.gerrit.server.permissions.PermissionBackend.ForChange change ( com.google.gerrit.server.notedb.ChangeNotes notes ) { return new com.google.gerrit.server.permissions.FailedPermissionBackend.FailedChange ( message , cause ) ; }
@ org.junit.Before public void setUp () { storeMock = easyMock . createMock ( com.ericsson.gerrit.plugins.eventslog.EventStore . class ) ; }
public static < T > com.google.gerrit.server.query.Predicate < T > not ( final com.google.gerrit.server.query.Predicate < T > that ) { if ( that instanceof com.google.gerrit.server.query.NotPredicate ) { return that . getChild ( NUMBER_CONSTANT ) ; } return new com.google.gerrit.server.query.NotPredicate ( that ) ; }
public java.lang.String getManifestProject ( ) throws org.eclipse.jgit.errors.ConfigInvalidException { java.lang.String manifestProject = getConfig () . getString ( STRING_CONSTANT , null , STRING_CONSTANT ) ; if ( manifestProject == null ) { throw new org.eclipse.jgit.errors.ConfigInvalidException ( STRING_CONSTANT ) ; } return manifestProject ; }
private static long upperLimit ( long unit ) { return unit + ( unit / NUMBER_CONSTANT ) ; }
@ java.lang.Override public void publish ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { publish . apply ( revision , new com.google.gerrit.server.change.Publish.Input () ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
private com.google.gerrit.server.patch.PatchListKey getKey ( org.eclipse.jgit.lib.ObjectId revisionIdA , org.eclipse.jgit.lib.ObjectId revisionIdB ) { return new com.google.gerrit.server.patch.PatchListKey ( revisionIdA , revisionIdB , com.google.gerrit.reviewdb.client.AccountDiffPreference.Whitespace.IGNORE_NONE ) ; }
private com.google.gerrit.reviewdb.server.ReviewDb db () { if ( ( db ) != null ) { return db . get () ; } else if ( ( cd ) != null ) { return cd . db () ; } else { return null ; } }
public void setDeny () { action = com.google.gerrit.common.data.PermissionRule.Action.DENY ; }
private void initSignatures () { setSignatureFactories ( java.util.Arrays . < org.apache.sshd.common.NamedFactory < org.apache.sshd.common.Signature > > asList ( new org.apache.sshd.common.signature.SignatureDSA.Factory () , new org.apache.sshd.common.signature.SignatureRSA.Factory () ) ) ; }
public com.google.gwtorm.schema.SchemaModel getSchemaModel () { return schemaModel ; }
private static void assertExpectedIdsUsed ( java.sql.PreparedStatement ps , int . . . ids ) throws java.sql.SQLException { for ( int id : ids ) { org.mockito.Mockito . verify ( ps ) . setInt ( NUMBER_CONSTANT , id ) ; } }
protected void setTitleText ( final java.lang.String text ) { headerText . setText ( text ) ; }
public void removeApproval ( java.lang.String label ) { removeApprovalFor ( getAccountId () , label ) ; }
@ java.lang.Override public boolean canRebase () { return rebaseChange . canRebase ( revision ) ; }
com.google.gerrit.server.project.SubmitRuleEvaluator create ( com.google.gerrit.server.query.change.ChangeData cd ) ;
public final native void id ( java.lang.String i ) ;
com.google.gitiles.CommitJsonData setRevWalk ( @ javax.annotation.Nullable org.eclipse.jgit.revwalk.RevWalk walk ) { this . walk = walk ; return this ; }
private void logError ( java.lang.String msg ) { logError ( msg , null ) ; }
public static java.lang.String toProjectDashboard ( com.google.gerrit.reviewdb.client.Project.NameKey name , java.lang.String id ) { return ( ( ( com.google.gerrit.common.PageLinks.PROJECTS ) + ( name . get () ) ) + ( com.google.gerrit.common.PageLinks.DASHBOARDS ) ) + id ; }
public boolean canSeeMember ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( ( user . isIdentifiedUser () ) && ( user . getAccountId () . equals ( id ) ) ) { return true ; } return canSeeMembers () ; }
@ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < > index ( com.google.gerrit.server.query.change.ChangeData cd ) { return com.google.common.util.concurrent.Futures . immediateFuture ( null ) ; }
private static void h ( final java.lang.StringBuilder r , final com.google.gerrit.client.reviewdb.PatchSet ps ) { com.google.gerrit.client.data.GitwebLink . var ( r , STRING_CONSTANT , ps . getRevision () . get () ) ; }
public void consume ( ) throws java.io.IOException , java.lang.IllegalStateException { java.io.Reader reader = getReader () ; if ( reader != null ) { while ( ( reader . read () ) != ( - NUMBER_CONSTANT ) ) {} } }
public com.google.gerrit.reviewdb.client.AccountSshKey addKey ( com.google.gerrit.reviewdb.client.Account.Id accountId , java.lang.String pub ) throws com.google.gerrit.common.errors.InvalidSshKeyException , java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { com.google.gerrit.server.account.VersionedAuthorizedKeys authorizedKeys = read ( accountId ) ; com.google.gerrit.reviewdb.client.AccountSshKey key = authorizedKeys . addKey ( pub ) ; commit ( authorizedKeys ) ; return key ; }
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , new com.google.gerrit.extensions.api.changes.SubmitInput () , null , null , true ) ; }
public java.lang.String getChangeId () { return changeId ; }
void merge ( com.google.gerrit.reviewdb.client.Branch.NameKey branch ) ;
public void setPatchSetId ( com.google.gerrit.reviewdb.client.PatchSet.Id psId ) { com.google.common.base.Preconditions . checkArgument ( ( ( psId == null ) || ( psId . getParentKey () . equals ( ctl . getId () ) ) ) ) ; this . psId = psId ; }
public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , select () ) ; }
@ java.lang.Override public void deleteAll ( ) throws java.io.IOException { writer . deleteAll () ; }
private boolean error ( java.lang.String msg , java.lang.Throwable t ) { problem ( msg ) ; warn ( t ) ; return false ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( boolean publishOnPatchSetCreated ) throws java.lang.Exception { return getConfig ( STRING_CONSTANT , publishOnPatchSetCreated , true , true , true ) ; }
public boolean contains ( int b , int e , char c ) { for ( ; b < e ; b ++ ) { if ( ( charAt ( b ) ) == c ) { return true ; } } return false ; }
public void index ( com.google.gerrit.reviewdb.client.Change change ) throws java.io.IOException { index ( new com.google.gerrit.server.query.change.ChangeData ( change ) ) ; }
public static com.google.gerrit.reviewdb.client.Account.Id parseAfterShardedRefPart ( java.lang.String name ) { java.lang.Integer id = com.google.gerrit.reviewdb.client.RefNames . parseAfterShardedRefPart ( name ) ; return id != null ? new com.google.gerrit.reviewdb.client.Account.Id ( id ) : null ; }
com.google.gerrit.server.change.ChangeKind getChangeKind ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patch ) ;
protected boolean beforeInit ( com.google.gerrit.pgm.BaseInit.SiteInit init ) throws java.lang.Exception { return false ; }
@ org.junit.Test public void multipleHashtags ( ) throws java.lang.Exception { java.lang.String commitMessage = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( commitMessage ) ) . containsExactlyElementsIn ( com.google.common.collect.Sets . newHashSet ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
private java.util.Iterator < org.bouncycastle.openpgp.PGPSignature > getSignaturesForId ( org.bouncycastle.openpgp.PGPPublicKey key , java.lang.String userId ) { java.util.Iterator < org.bouncycastle.openpgp.PGPSignature > result = key . getSignaturesForID ( userId ) ; return result != null ? result : java.util.Collections . emptyIterator () ; }
@ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { new com.google.gerrit.client.ErrorDialog ( caught . getMessage () ) . center () ; enableForm ( true ) ; }
public boolean enabled () { return ( writeChanges () ) || ( readChanges () ) ; }
static com.google.gerrit.server.query.change.ChangeData createForTest ( com.google.gerrit.reviewdb.client.Change.Id id ) { return new com.google.gerrit.server.query.change.ChangeData ( null , null , null , null , null , null , null , null , id ) ; }
public int compare ( final com.google.gerrit.reviewdb.client.PatchSetApproval a , final com.google.gerrit.reviewdb.client.PatchSetApproval b ) { return a . getGranted () . compareTo ( b . getGranted () ) ; }
public final void addLineClass ( int line , net.codemirror.lib.CodeMirror.LineClassWhere where , java.lang.String className ) { addLineClassNative ( line , where . value () , className ) ; }
@ java.lang.Deprecated public void setId ( java.lang.String id ) { this . id = com.google.gerrit.common.data.LabelType . checkId ( id ) ; }
private com.google.gerrit.server.git.MergeTip cherryPickUnbornRoot ( com.google.gerrit.server.git.CodeReviewCommit n ) { com.google.gerrit.server.git.MergeTip mergeTip = new com.google.gerrit.server.git.MergeTip ( n , com.google.common.collect.Lists . newArrayList ( n ) ) ; n . setStatusCode ( CommitMergeStatus.CLEAN_MERGE ) ; return mergeTip ; }
@ java.lang.Override public com.google.gerrit.server.project.ProjectResource parse ( com.google.gerrit.extensions.restapi.TopLevelResource parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException , java.io.IOException { com.google.gerrit.server.project.ProjectResource rsrc = _parse ( id . get () , true ) ; if ( rsrc == null ) { throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException ( id ) ; } return rsrc ; }
private static boolean autoReindexIfStale ( org.eclipse.jgit.lib.Config cfg ) { return cfg . getBoolean ( STRING_CONSTANT , null , STRING_CONSTANT , true ) ; }
@ java.lang.Override public void printJson ( final java.lang.StringBuilder sb , final com.google.gwtjsonrpc.client.VoidResult o ) { sb . append ( STRING_CONSTANT ) ; }
@ java.lang.Override protected void onOpenItem ( final com.google.gerrit.client.data.ChangeInfo c ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.client.Link . toChange ( c ) , new com.google.gerrit.client.changes.ChangeScreen ( c ) ) ; }
public com.google.gerrit.extensions.common.ChangeInfo format ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return format ( cd , com.google.common.base.Optional . < com.google.gerrit.reviewdb.client.PatchSet.Id > absent () , true ) ; }
private void blockForcePush ( ) throws java.lang.Exception { block ( Permission.PUSH , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS , STRING_CONSTANT ) . setForce ( true ) ; }
private void saveProjectConfig ( com.google.gerrit.server.git.ProjectConfig cfg ) throws java.lang.Exception { com.google.gerrit.server.git.MetaDataUpdate md = metaDataUpdateFactory . create ( project ) ; try { cfg . commit ( md ) ; } finally { md . close () ; } }
@ org.junit.Test public void listOneIncludeMember ( ) throws java.lang.Exception { group ( STRING_CONSTANT , STRING_CONSTANT ) ; group ( STRING_CONSTANT , STRING_CONSTANT ) ; PUT ( STRING_CONSTANT ) ; PUT ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( GET_ONE ( STRING_CONSTANT ) . name ) . isEqualTo ( STRING_CONSTANT ) ; }
public java.lang.String getSecure ( java.lang.String name ) { return flags.sec . get ( section , subsection , name ) ; }
protected abstract java.lang.String getNextSequenceValueSql ( java.lang.String seqname ) ;
static java.lang.String get ( final java.lang.String name ) { return com.google.gwtjsonrpc.server.JsonServlet . < com.google.gwtjsonrpc.server.ActiveCall > getCurrentCall () . getCookie ( name ) ; }
@ org.junit.Test public void mergeByOtherNotifyNone ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageChange () ; merge ( sc.changeId , other , com.google.gerrit.extensions.api.changes.NotifyHandling.NONE ) ; assertThat ( sender ) . notSent () ; }
public void error ( com.google.gerrit.server.git.ValidationError error ) { if ( ( validationErrors ) == null ) { validationErrors = new java.util.ArrayList <> ( NUMBER_CONSTANT ) ; } validationErrors . add ( error ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( com.google.gitiles.HostIndexServletTest.NAME ) ) ) ; servlet = com.google.gitiles.TestGitilesServlet . create ( repo ) ; }
private boolean inProject ( com.google.gerrit.server.project.ProjectControl projectControl , com.google.gerrit.reviewdb.client.Project project ) { if ( projectControl != null ) { return projectControl . getProject () . getNameKey () . equals ( project . getNameKey () ) ; } return true ; }
@ org.junit.Test public void defaultDashboardDoesNotExist ( ) throws java.lang.Exception { exception . expect ( com.google.gerrit.extensions.restapi.ResourceNotFoundException . class ) ; project () . defaultDashboard () . get () ; }
@ org.junit.Test public void createProjectFoo ( ) throws java.lang.Exception { java.lang.String name = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( name ) . isEqualTo ( gApi . projects () . create ( name ) . get () . name ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onFollowUp ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { if ( ( followUpAction ) == null ) { followUpAction = new com.google.gerrit.client.change.FollowUpAction ( followUp , project , branch , topic , key ) ; } followUpAction . show () ; }
@ java.lang.Override protected void configureServlets () { install ( new com.google.gerrit.httpd.rpc.RpcServletModule ( com.google.gerrit.httpd.rpc.UiRpcModule.PREFIX ) { @ java.lang.Override protected void configureServlets () { rpc ( com.google.gerrit.httpd.auth.ldap.UserPassAuthServiceImpl . class ) ; } } ) ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; refresh () ; }
protected static com.google.gerrit.server.group.db.AuditLogFormatter getAuditLogFormatter () { return com.google.gerrit.server.group.db.AuditLogFormatter . create ( com.google.gerrit.server.group.db.AbstractGroupTest : : getAccount , com.google.gerrit.server.group.db.AbstractGroupTest : : getGroup , com.google.gerrit.server.group.db.AbstractGroupTest.SERVER_ID ) ; }
@ java.lang.Override public void submit ( ) throws com.google.gerrit.extensions.restapi.RestApiException { com.google.gerrit.extensions.api.changes.SubmitInput in = new com.google.gerrit.extensions.api.changes.SubmitInput () ; submit ( in ) ; }
private static java.lang.StackTraceElement [] getTrace ( com.google.gwt.core.client.JavaScriptException err ) { if ( ( err . getStackTrace () . length ) == NUMBER_CONSTANT ) { err . fillInStackTrace () ; } return err . getStackTrace () ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser getUser () { if ( ! ( ReviewAssistant.realUser ) ) { return pluginUser ; } return identifiedUserFactory . create ( change . getOwner () ) ; }
private static java.lang.String resolveHttpUrl ( java.lang.String remoteUrl ) { if ( remoteUrl == null ) { return null ; } return com.google.gitiles.PathServlet.VERBATIM_SUBMODULE_URL_PATTERN . matcher ( remoteUrl ) . matches () ? remoteUrl : null ; }
public com.google.gerrit.extensions.api.plugins.Plugins.ListRequest all () { this . all = true ; return this ; }
public void addChangeMessage ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.notedb.ChangeUpdate update , com.google.gerrit.reviewdb.client.ChangeMessage changeMessage ) throws com.google.gwtorm.server.OrmException { update . setChangeMessage ( changeMessage . getMessage () ) ; db . changeMessages () . insert ( java.util.Collections . singleton ( changeMessage ) ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { admins = groupCache . get ( new com.google.gerrit.reviewdb.client.AccountGroup.NameKey ( STRING_CONSTANT ) ) . getGroupUUID () ; setUpPermissions () ; setUpChanges () ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.Response < com.google.gerrit.extensions.common.ChangeInfo > apply ( com.google.gerrit.server.change.ChangeResource rsrc ) throws com.google.gerrit.extensions.restapi.RestApiException , com.google.gwtorm.server.OrmException { return com.google.gerrit.extensions.restapi.Response . withMustRevalidate ( newChangeJson () . format ( rsrc ) ) ; }
public void removeProjectEvents ( java.lang.String project ) throws java.sql.SQLException { execute ( java.lang.String . format ( STRING_CONSTANT , com.ericsson.gerrit.plugins.eventslog.sql.SQLTable.TABLE_NAME , project ) ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onExpandAllComments ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . expandAllComments ( e . getValue () ) ; if ( ( view ) != null ) { view . getCommentManager () . setExpandAllComments ( prefs . expandAllComments () ) ; } }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , changeId ) ) ; }
@ java.lang.Override protected void removeCookie ( final java.lang.String name ) { com.google.gwtjsonrpc.server.JsonServlet . getCurrentCall () . removeCookie ( name ) ; }
@ java.lang.Override public java.lang.String toString () { return toHeaderString () ; }
@ org.junit.Test public void noVerificationTest ( ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit.Result c = createChange () ; java.util.Map < java.lang.String , com.googlesource.gerrit.plugins.verifystatus.common.VerificationInfo > infos = getVerifications ( c , null ) ; com.google.common.truth.Truth . assertThat ( infos ) . hasSize ( NUMBER_CONSTANT ) ; }
@ java.lang.Override protected java.lang.String getNextSequenceValueSql ( final java.lang.String seqname ) { return ( STRING_CONSTANT + seqname ) + STRING_CONSTANT ; }
@ java.lang.Override protected void onUnload () { super . onUnload () ; com.google.gerrit.client.changes.PublishCommentScreen.lastState = ( saveStateOnUnload ) ? new com.google.gerrit.client.changes.PublishCommentScreen.SavedState ( this ) : null ; }
@ java.lang.Override public Project.NameKey getProjectName () { return draftsProject ; }
private void checkProjectInSource ( org.eclipse.jgit.lib.ProgressMonitor pm ) throws com.google.gerrit.extensions.restapi.BadRequestException , java.io.IOException { pm . beginTask ( STRING_CONSTANT , NUMBER_CONSTANT ) ; api . getProject ( srcProject . get () ) ; com.googlesource.gerrit.plugins.importer.ProgressMonitorUtil . updateAndEnd ( pm ) ; }
private com.google.gerrit.server.git.GroupList readGroupList ( ) throws java.io.IOException { return com.google.gerrit.server.git.GroupList . parse ( new com.google.gerrit.reviewdb.client.Project.NameKey ( project ) , readUTF8 ( GroupList.FILE_NAME ) , com.google.gerrit.server.git.GroupList . createLoggerSink ( GroupList.FILE_NAME , com.google.gerrit.pgm.init.api.AllProjectsConfig.log ) ) ; }
java.util.Set < com.google.gerrit.server.account.externalids.ExternalId > all ( org.eclipse.jgit.lib.ObjectId rev ) throws java.io.IOException { checkReadEnabled () ; try ( org.eclipse.jgit.lib.Repository repo = repoManager . openRepository ( allUsersName ) ) { return all ( repo , rev ) ; } }
public void execute ( com.google.gerrit.server.git.BatchUpdate.Listener listener ) throws com.google.gerrit.extensions.restapi.RestApiException , com.google.gerrit.server.git.UpdateException { com.google.gerrit.server.git.BatchUpdate . execute ( com.google.common.collect.ImmutableList . of ( this ) , listener , requestId , false ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { lifecycle = new com.google.gerrit.lifecycle.LifecycleManager () ; new com.google.gerrit.testutil.InMemoryModule () . inject ( this ) ; lifecycle . start () ; }
private com.google.gerrit.server.account.AuthResult auth ( com.google.gerrit.reviewdb.client.Account.Id account ) { if ( account != null ) { return new com.google.gerrit.server.account.AuthResult ( account , null , false ) ; } return null ; }
void postEvent ( com.google.gerrit.server.events.Event event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ;
public static com.google.gitiles.BaseServlet notFoundServlet () { return new com.google.gitiles.BaseServlet ( null , null ) { private static final long serialVersionUID = NUMBER_CONSTANT ; @ java.lang.Override public void service ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res ) { res . setStatus ( javax.servlet.http.HttpServletResponse.SC_NOT_FOUND ) ; } } ; }
abstract com.google.gerrit.httpd.raw.BuildSystem.Label gwtZipLabel ( java.lang.String agent ) ;
@ org.junit.Test ( expected = com.google.gerrit.extensions.restapi.ResourceNotFoundException . class ) public void getNonExistingAccount_NotFound ( ) throws java.lang.Exception { gApi . accounts () . id ( STRING_CONSTANT ) . get () ; }
@ org.junit.Test public void listTagsOfNonVisibleProject_NotFound ( ) throws java.lang.Exception { blockRead ( project , STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( userSession . get ( ( ( STRING_CONSTANT + ( project . get () ) ) + STRING_CONSTANT ) ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
@ org.junit.Test public void indexChangeOnNonVisibleBranch ( ) throws java.lang.Exception { java.lang.String changeId = createChange () . getChangeId () ; blockRead ( STRING_CONSTANT ) ; userSession . post ( ( ( STRING_CONSTANT + changeId ) + STRING_CONSTANT ) ) . assertNotFound () ; }
public java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > getCcOnly () { final java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > cc = new java.util.HashSet ( this . cc ) ; cc . removeAll ( reviewers ) ; return java.util.Collections . unmodifiableSet ( cc ) ; }
protected void approve ( java.lang.String id ) throws java.lang.Exception { gApi . changes () . id ( id ) . revision ( STRING_CONSTANT ) . review ( com.google.gerrit.extensions.api.changes.ReviewInput . approve () ) ; }
@ java.lang.Override public Project.NameKey getProjectName () { return projectControl . getProjectState () . getNameKey () ; }
public void save ( ) throws java.io.IOException { cfg . save () ; }
com.google.gerrit.reviewdb.client.Project getProject () { return project ; }
private com.google.gerrit.server.index.IndexedChangeQuery query ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p , int limit ) throws com.google.gerrit.server.query.QueryParseException { return new com.google.gerrit.server.index.IndexedChangeQuery ( null , index , p , limit ) ; }
private static com.google.gerrit.server.notedb.ChangeNotesParser.ApprovalKey create ( com.google.gerrit.reviewdb.client.PatchSet.Id psId , com.google.gerrit.reviewdb.client.Account.Id accountId , java.lang.String label ) { return new com.google.gerrit.server.notedb.AutoValue_ChangeNotesParser_ApprovalKey ( psId , accountId , label ) ; }
protected void renderHtml ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res , java.lang.String templateName , java.util.Map < java.lang.String , > soyData ) throws java.io.IOException { renderer . render ( req , res , templateName , startHtmlResponse ( req , res , soyData ) ) ; }
protected org.eclipse.jgit.revwalk.RevCommit getRemoteHead ( ) throws java.io.IOException { try ( org.eclipse.jgit.lib.Repository repo = repoManager . openRepository ( project ) ) { return getHead ( repo , STRING_CONSTANT ) ; } }
protected boolean canPerform ( final com.google.gerrit.client.data.ProjectCache.Entry project , final com.google.gerrit.client.reviewdb.ApprovalCategory.Id actionId , final short val ) { return com.google.gerrit.client.rpc.BaseServiceImplementation . canPerform ( getGroups () , project , actionId , val ) ; }
public java.util.Set < java.lang.String > getMyOrganisationsLogins ( ) throws java.io.IOException { if ( isLoggedIn () ) { return getHub () . getMyOrganizations () . keySet () ; } return java.util.Collections . emptySet () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { db = new com.google.gwtorm.nosql.heap.MemoryDatabase ( com.google.gwtorm.data.PhoneBookDb . class ) ; openSchemas = new java.util.ArrayList <> () ; }
private void display ( final com.google.gerrit.client.data.SingleListChangeInfo result ) { table . setAccountInfoCache ( result . getAccounts () ) ; drafts . display ( result . getChanges () ) ; table . finishDisplay ( true ) ; }
public static void edit ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.info.ChangeInfo.EditInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . edit ( project , id ) . get ( cb ) ; }
private void fastForwardTagToNewCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , java.lang.String tagName , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { pushTag ( tagType , tagName , true , false , expectedStatus ) ; }
void postEvent ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.server.events.ChangeEvent event ) throws com.google.gwtorm.server.OrmException ;
public void patchSetPublishDetail ( final com.google.gerrit.client.reviewdb.PatchSet.Id id , final com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.PatchSetPublishDetail > callback ) { patchSetPublishDetail . create ( id ) . to ( callback ) ; }
@ java.lang.Override public void deleteWatchedProjects ( java.util.List < com.google.gerrit.extensions.client.ProjectWatchInfo > in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { deleteWatchedProjects . apply ( account , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override protected java.lang.Object createServiceHandle ( ) throws java.lang.Exception { return new com.google.gerrit.client.ui.SuggestServiceImpl () ; }
@ org.junit.Test public void testToString () { org.junit.Assert . assertEquals ( STRING_CONSTANT , com.google.gerrit.server.query.Predicate . not ( com.google.gerrit.server.query.NotPredicateTest . f ( STRING_CONSTANT , STRING_CONSTANT ) ) . toString () ) ; }
@ org.junit.Test public void testDefaultIsMIXED () { org.junit.Assert . assertTrue ( ( ( create () ) instanceof com.google.gerrit.server.mail.FromAddressGeneratorProvider.PatternGen ) ) ; }
private synchronized com.google.gitiles.Linkifier linkifier () { if ( ( linkifier ) == null ) { com.google.common.base.Preconditions . checkState ( ( ( urls ) != null ) , STRING_CONSTANT ) ; linkifier = new com.google.gitiles.Linkifier ( urls , config ) ; } return linkifier ; }
public java.lang.String commitMessage ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( commitMessage ) == null ) { if ( ! ( loadCommitData () ) ) { return null ; } } return commitMessage ; }
@ com.google.inject.Provides @ com.google.inject.Singleton @ com.google.inject.name.Named ( value = com.google.gerrit.httpd.raw.StaticModule.POLYGERRIT_INDEX_SERVLET ) javax.servlet.http.HttpServlet getPolyGerritUiIndexServlet ( @ com.google.inject.name.Named ( value = com.google.gerrit.httpd.raw.StaticModule.CACHE ) com.google.common.cache.Cache < java.nio.file.Path , com.google.gerrit.httpd.raw.ResourceServlet.Resource > cache ) { return new com.google.gerrit.httpd.raw.SingleFileServlet ( cache , polyGerritBasePath () . resolve ( STRING_CONSTANT ) , getPaths () . isDev () , false ) ; }
public static void createDraft ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , com.google.gerrit.client.changes.CommentInfo content , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.CommentInfo > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( project , id , STRING_CONSTANT ) . put ( content , cb ) ; }
@ java.lang.Override public boolean match ( final com.google.gerrit.server.query.change.ChangeData object ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = object . change ( dbProvider ) ; return ( change != null ) && ( ( change . getLastUpdatedOn () . getTime () ) <= ( cut ) ) ; }
private boolean isHidden () { return getProject () . getState () . equals ( com.google.gerrit.extensions.client.ProjectState.HIDDEN ) ; }
@ java.lang.Override public com.google.gerrit.client.data.GerritConfig get () { return create () ; }
static void noCache ( javax.servlet.http.HttpServletResponse res ) { res . setHeader ( STRING_CONSTANT , STRING_CONSTANT ) ; res . setHeader ( STRING_CONSTANT , STRING_CONSTANT ) ; res . setHeader ( STRING_CONSTANT , STRING_CONSTANT ) ; res . setHeader ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { toggleReviewed () . run () ; }
public final void panel ( com.google.gerrit.client.GerritUiExtensionPoint extensionPoint , com.google.gerrit.plugin.client.extension.Panel.EntryPoint entry , java.lang.String name ) { panel ( extensionPoint . name () , com.google.gerrit.plugin.client.Plugin . wrap ( entry ) , name ) ; }
static com.google.gerrit.client.changes.ChangeApi.Input create () { return ( ( com.google.gerrit.client.changes.ChangeApi.Input ) ( createObject () ) ) ; }
@ com.google.common.annotations.VisibleForTesting public org.eclipse.jgit.lib.ObjectId getChangeMetaId () { return changeMetaId ; }
@ org.junit.Test public void listEmptyGroupIncludes ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( GET ( STRING_CONSTANT ) ) . isEmpty () ; }
public void setValue ( final short v ) { value = v ; }
@ java.lang.Override public void onLoad ( com.google.gerrit.plugin.client.extension.Panel panel ) { com.google.gerrit.client.info.ChangeInfo.RevisionInfo rev = panel . getObject ( GerritUiExtensionPoint.Key.REVISION_INFO ) . cast () ; if ( rev . isEdit () ) { return; } panel . setWidget ( new com.googlesource.gerrit.plugins.verifystatus.client.JobsPanel ( panel , info ) ) ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; if ( ( name ) != null ) { setPageTitle ( Util.M . project ( name . get () ) ) ; } }
@ java.lang.Override protected void configure () { listener () . to ( CachePool.Lifecycle . class ) ; listener () . to ( com.google.gerrit.server.config.GerritGlobalModule.VelocityLifecycle . class ) ; }
private void reject ( final org.eclipse.jgit.transport.ReceiveCommand cmd ) { reject ( cmd , STRING_CONSTANT ) ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > deleteAsync ( com.google.gerrit.reviewdb.client.Change change ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( new com.google.gerrit.server.query.change.ChangeData ( change ) , true ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
public static com.google.gerrit.client.rpc.RestApi reviewer ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , int reviewer ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . id ( reviewer ) ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser get () { final com.google.gerrit.client.reviewdb.Account.Id id = call . get () . getAccountId () ; return id != null ? identified . create ( id ) : anonymous ; }
private com.google.gerrit.server.account.AccountState toAccountState ( com.google.gson.JsonElement element ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( element . getAsJsonObject () . get ( com.google.gerrit.server.index.account.AccountField.ID . getName () ) . getAsInt () ) ; return accountCache . get () . get ( id ) ; }
@ java.lang.Override protected void preDisplay ( com.google.gerrit.common.data.GroupList result ) { groups . display ( result . getGroups () ) ; groups . finishDisplay () ; }
public com.google.gerrit.server.account.CapabilityControl getCapabilities () { if ( ( capabilities ) == null ) { capabilities = capabilityControlFactory . create ( this ) ; } return capabilities ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . setCurrentPatchSet ( patchSetInfoFactory . get ( newCommit , ps . getId () ) ) ; return change ; }
public static boolean isOAuthFinal ( javax.servlet.http.HttpServletRequest request ) { return ( com.google.common.base.Strings . emptyToNull ( request . getParameter ( STRING_CONSTANT ) ) ) != null ; }
public static com.google.gerrit.lucene.LuceneIndexModule singleVersionAllLatest ( int threads ) { return new com.google.gerrit.lucene.LuceneIndexModule ( com.google.common.collect.ImmutableMap . < java.lang.String , java.lang.Integer > of () , threads , false ) ; }
private boolean allRefsAreVisible ( java.util.Set < java.lang.String > ignore ) { return ( user . isInternalUser () ) || ( canPerformOnAllRefs ( Permission.READ , ignore ) ) ; }
protected static long lastUpdatedMs ( com.google.gerrit.reviewdb.client.Change c ) { return c . getLastUpdatedOn () . getTime () ; }
public java.lang.String getShortName () { return name . getShortName () ; }
public static com.google.gerrit.server.util.RegexListSearcher < java.lang.String > ofStrings ( java.lang.String re ) { return new com.google.gerrit.server.util.RegexListSearcher <> ( re , ( in ) - > in ) ; }
public boolean isHidden () { return getProject () . getState () . equals ( com.google.gerrit.extensions.client.ProjectState.HIDDEN ) ; }
public com.google.gerrit.server.project.ProjectResource parse ( java.lang.String id ) throws com.google.gerrit.extensions.restapi.UnprocessableEntityException , java.io.IOException { return parse ( id , true ) ; }
private org.eclipse.jgit.lib.ObjectId createCommit ( com.google.gerrit.server.IdentifiedUser me , org.eclipse.jgit.lib.ObjectInserter inserter , org.eclipse.jgit.revwalk.RevCommit revision , org.eclipse.jgit.lib.ObjectId tree ) throws java.io.IOException { return createCommit ( me , inserter , revision , tree , revision . getFullMessage () ) ; }
private com.google.gerrit.metrics.dropwizard.MetricJson toJson ( java.lang.String q , com.codahale.metrics.Metric m ) { return new com.google.gerrit.metrics.dropwizard.MetricJson ( m , metrics . getAnnotations ( q ) , dataOnly ) ; }
@ org.kohsuke.args4j.Option ( name = STRING_CONSTANT , usage = STRING_CONSTANT ) void setDisableHttpd ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) boolean arg ) { httpd = false ; }
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { if ( ( rpcSequence ) == rpcseq ) { super . onFailure ( caught ) ; } }
@ java.lang.Override public java.util.concurrent.atomic.AtomicLong load ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { try ( org.eclipse.jgit.lib.Repository git = gitManager . openRepository ( project ) ) { return new java.util.concurrent.atomic.AtomicLong ( com.googlesource.gerrit.plugins.quota.MaxRepositorySizeQuota.Loader . getDiskUsage ( git . getDirectory () ) ) ; } }
public static java.lang.String refsDraftComments ( com.google.gerrit.reviewdb.client.Change.Id changeId , com.google.gerrit.reviewdb.client.Account.Id accountId ) { java.lang.StringBuilder r = com.google.gerrit.reviewdb.client.RefNames . buildRefsPrefix ( com.google.gerrit.reviewdb.client.RefNames.REFS_DRAFT_COMMENTS , changeId . get () ) ; r . append ( accountId . get () ) ; return r . toString () ; }
public static void parentCandidates ( com.google.gwtjsonrpc.common.AsyncCallback < com.google.gerrit.client.projects.ProjectMap > callback ) { new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . addParameterRaw ( STRING_CONSTANT , STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . get ( com.google.gerrit.client.rpc.NativeMap . copyKeysIntoChildren ( callback ) ) ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byCommit ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.change.InternalChangeQuery . commit ( id ) ) ; }
@ java.lang.Override public Project.NameKey apply ( com.google.gerrit.extensions.common.ProjectInfo in ) { return new com.google.gerrit.reviewdb.client.Project.NameKey ( in.name ) ; }
protected void doCreateTable ( java.sql.Statement stmt ) throws java.sql.SQLException { stmt . executeUpdate ( ( STRING_CONSTANT + ( ( ( ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) ) ) ; }
private static com.google.gerrit.client.reviewdb.ApprovalCategoryValue value ( final com.google.gerrit.client.reviewdb.ApprovalCategory cat , final int value , final java.lang.String name ) { return new com.google.gerrit.client.reviewdb.ApprovalCategoryValue ( new com.google.gerrit.client.reviewdb.ApprovalCategoryValue.Id ( cat . getId () , ( ( short ) ( value ) ) ) , name ) ; }
private void log ( final int rc ) { if ( logged . compareAndSet ( false , true ) ) { log . onExecute ( cmd , rc ) ; } }
public void setPreviewText ( final java.lang.String text ) { if ( ( textLabel ) != null ) { textLabel . setText ( text ) ; } }
@ java.lang.Override public java.util.List < java.lang.String > getUsernamesForRepositoryRole ( java.lang.String role ) { return null ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { walk . release () ; }
@ com.google.inject.Provides @ com.google.inject.Singleton @ com.ericsson.gerrit.plugins.highavailability.SharedDirectory java.nio.file.Path getSharedDirectory ( ) throws java.io.IOException { java.nio.file.Path sharedDirectoryPath = config . main () . sharedDirectory () ; java.nio.file.Files . createDirectories ( sharedDirectoryPath ) ; return sharedDirectoryPath ; }
private java.lang.String newChange2 ( org.eclipse.jgit.api.Git git , org.eclipse.jgit.lib.PersonIdent ident ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , ident , PushOneCommit.SUBJECT , com.google.gerrit.acceptance.edit.ChangeEditIT.FILE_NAME , new java.lang.String ( com.google.gerrit.acceptance.edit.ChangeEditIT.CONTENT_OLD ) ) ; return push . rm ( git , STRING_CONSTANT ) . getChangeId () ; }
@ java.lang.Override public void printJson ( final java.lang.StringBuffer sb , final java.lang.String o ) { sb . append ( escapeString ( o ) ) ; }
public com.google.common.collect.SetMultimap < com.google.gerrit.server.notedb.ReviewerState , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return com.google.gerrit.server.ApprovalsUtil . getReviewers ( approvals () ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; }
public boolean canRemoveMember () { return isOwner () ; }
@ java.lang.Override com.google.gerrit.server.mail.AbandonedSender create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id change ) ;
public final native java.lang.String path ( ) ;
public static com.google.gerrit.server.patch.PatchListKey againstParentNum ( int parentNum , org.eclipse.jgit.lib.AnyObjectId newId , com.google.gerrit.extensions.client.DiffPreferencesInfo.Whitespace ws ) { return new com.google.gerrit.server.patch.PatchListKey ( parentNum , newId , ws ) ; }
@ java.lang.Override public void evaluate ( ) throws java.lang.Throwable { boolean mem = ( description . getAnnotation ( com.google.gerrit.acceptance.UseLocalDisk . class ) ) == null ; beforeTest ( config ( description ) , mem ) ; base . evaluate () ; afterTest () ; }
@ com.google.gerrit.common.audit.Audit @ com.google.gerrit.common.auth.SignInRequired void updateContact ( java.lang.String fullName , java.lang.String emailAddr , com.google.gwtjsonrpc.common.AsyncCallback < com.google.gerrit.reviewdb.client.Account > callback ) ;
@ java.lang.Override public void markReady ( boolean ready ) throws java.io.IOException { com.google.gerrit.lucene.AbstractLuceneIndex . setReady ( sitePaths , name , schema . getVersion () , ready ) ; }
protected final < T > org.easymock.Capture < T > createCapture () { return new org.easymock.Capture () ; }
protected < T > T buildJson ( java.lang.Class < T > classOfT , java.lang.String path ) throws java.lang.Exception { return buildJson ( classOfT , path , null ) ; }
public com.google.gerrit.server.change.PatchSetInserter setCheckAddPatchSetPermission ( boolean checkAddPatchSetPermission ) { this . checkAddPatchSetPermission = checkAddPatchSetPermission ; return this ; }
private java.util.Map < java.lang.String , com.google.gitiles.RefServlet.RefJsonData > buildRefJson ( java.lang.String path ) throws java.lang.Exception { return buildJson ( new com.google.gson.reflect.TypeToken < java.util.Map < java.lang.String , com.google.gitiles.RefServlet.RefJsonData > > () {} , path ) ; }
private void allowTagDeletion ( ) throws java.lang.Exception { removePushFromRefsTags () ; grant ( project , STRING_CONSTANT , Permission.DELETE , true , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS ) ; }
public static com.google.gerrit.reviewdb.client.Account.Id fromRefPart ( java.lang.String name ) { java.lang.Integer id = com.google.gerrit.reviewdb.client.RefNames . parseShardedRefPart ( name ) ; return id != null ? new com.google.gerrit.reviewdb.client.Account.Id ( id ) : null ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.config.AuthConfig . class ) . in ( com.google.inject.Scopes.SINGLETON ) ; }
void showTable () { myBody . clear () ; myBody . add ( table ) ; table . finishDisplay () ; }
@ org.junit.Before public void createTempDirectory ( ) throws java.lang.Exception { sitePath = com.google.gerrit.testutil.TempFileUtil . createTempDirectory () ; }
private void failAndThrow ( com.google.gerrit.reviewdb.client.Project.NameKey project , java.lang.Error e ) { fail ( project , e ) ; throw e ; }
public static com.google.gerrit.client.rpc.RestApi drafts ( @ com.google.gerrit.common.Nullable java.lang.String project , int id ) { return com.google.gerrit.client.changes.ChangeApi . call ( project , id , STRING_CONSTANT ) ; }
public com.google.gerrit.server.project.ChangeControl validateFor ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change.Id changeId , com.google.gerrit.server.CurrentUser user ) throws com.google.gerrit.server.project.NoSuchChangeException , com.google.gwtorm.server.OrmException { com.google.gerrit.server.project.ChangeControl ctl = changeFinder . findOne ( changeId , user ) ; return validateFor ( db , ctl . getChange () , user ) ; }
private void index ( com.google.gerrit.reviewdb.client.AccountGroup group ) throws java.io.IOException { indexCollection . getSearchIndex () . replace ( group ) ; }
@ org.junit.Test public void deleteAllowedWithForcePushPermission ( ) throws java.lang.Exception { grant ( project , STRING_CONSTANT , Permission.PUSH , true ) ; assertDeleteRef ( org.eclipse.jgit.transport.RemoteRefUpdate.Status.OK ) ; }
public void onRpcComplete () { if ( ( -- ( activeCalls ) ) == NUMBER_CONSTANT ) { loading . setVisible ( false ) ; } }
public static com.google.gwtexpui.safehtml.client.PrettyFormatter newFormatter ( java.lang.String lang ) { return new com.google.gwtexpui.safehtml.client.PrettyFormatter.Pretty ( lang ) ; }
int getCookieAge ( final com.google.gerrit.httpd.WebSessionManager.Val val ) { if ( val . isPersistentCookie () ) { return ( ( int ) ( java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( sessionMaxAgeMillis ) ) ) ; } return - NUMBER_CONSTANT ; }
@ java.lang.Override public com.google.gerrit.server.ssh.DispatchCommand get () { return factory . create ( dispatcherName , getMap () ) ; }
protected static boolean isNoSuchAccount ( final java.lang.Throwable caught ) { return ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . startsWith ( NoSuchAccountException.MESSAGE ) ) ; }
private final native void setCh ( int ch ) ;
public com.google.gerrit.server.IdentifiedUser create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return create ( ( ( java.net.SocketAddress ) ( null ) ) , id ) ; }
@ java.lang.Override public void message ( java.lang.String message ) {}
public void asyncExec ( final java.lang.Runnable task ) { executor . submit ( task ) ; }
private void display ( final com.google.gerrit.client.data.SingleListChangeInfo result ) { table . setAccountInfoCache ( result . getAccounts () ) ; drafts . display ( result . getChanges () ) ; table . finishDisplay () ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ReviewInput result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , psId ) ) ; }
public com.google.gerrit.server.IdentifiedUser getUser () { return ( ( com.google.gerrit.server.IdentifiedUser ) ( ctl . getUser () ) ) ; }
public static com.google.gerrit.server.patch.PatchListKey againstDefaultBase ( org.eclipse.jgit.lib.AnyObjectId newId , com.google.gerrit.extensions.client.DiffPreferencesInfo.Whitespace ws ) { return new com.google.gerrit.server.patch.PatchListKey ( null , newId , ws ) ; }
public java.lang.String getRemoteAddressAsString () { return remoteAsString ; }
@ java.lang.Override public void configure () { listener () . to ( com.google.gerrit.elasticsearch.ElasticVersionManager . class ) ; if ( onlineUpgrade ) { listener () . to ( com.google.gerrit.server.index.OnlineUpgrader . class ) ; } }
private void fastForwardTagToExistingCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , java.lang.String tagName , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { pushTag ( tagType , tagName , false , false , expectedStatus ) ; }
public int weigh () { return ( resource . length () ) * NUMBER_CONSTANT ; }
void setJarUrl ( final java.lang.String url ) { this . jarUrl = url ; }
@ org.junit.Test ( expected = com.google.gerrit.extensions.restapi.RestApiException . class ) public void createProjectFooBar ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = name ( STRING_CONSTANT ) ; gApi . projects () . name ( STRING_CONSTANT ) . create ( in ) ; }
private void assertProblems ( com.google.gerrit.gpg.testutil.TestKey tk , java.lang.String . . . expected ) throws java.lang.Exception { com.google.gerrit.gpg.CheckResult result = new com.google.gerrit.gpg.PublicKeyChecker () . check ( tk . getPublicKey () ) ; org.junit.Assert . assertEquals ( java.util.Arrays . asList ( expected ) , result . getProblems () ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; repository = createWorkRepository () ; }
@ java.lang.Override public void onSuccess ( java.lang.String result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( psId ) ) ; }
java.lang.Runnable toggleA () { return ( ) - > setVisibleA ( ( ! ( isVisibleA () ) ) ) ; }
public static java.lang.String toEditScreen ( com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toEditScreen ( revision , fileName , NUMBER_CONSTANT ) ; }
@ java.lang.Override public com.google.gerrit.server.change.ChangeKind getChangeKind ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patch ) { return com.google.gerrit.server.change.ChangeKindCacheImpl . getChangeKindInternal ( this , db , change , patch , changeDataFactory , projectCache , repoManager ) ; }
private void upsertDraftComment ( com.google.gerrit.reviewdb.client.PatchLineComment c ) { createDraftUpdateIfNull () ; draftUpdate . upsertComment ( c ) ; }
public void autoFlush ( ) throws java.io.IOException { if ( autoCommit ) { manualFlush () ; } }
private com.google.gerrit.server.git.CodeReviewCommit parse ( org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.ObjectId id ) throws java.io.IOException , org.eclipse.jgit.errors.IncorrectObjectTypeException , org.eclipse.jgit.errors.MissingObjectException { return ( ( com.google.gerrit.server.git.CodeReviewCommit ) ( rw . parseCommit ( id ) ) ) ; }
@ java.lang.SafeVarargs @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private static com.google.gerrit.server.index.Schema < com.google.gerrit.server.query.change.ChangeData > developer ( com.google.gerrit.server.index.FieldDef < com.google.gerrit.server.query.change.ChangeData , > . . . fields ) { return new com.google.gerrit.server.index.Schema ( false , java.util.Arrays . asList ( fields ) ) ; }
public static boolean useRecursiveMerge ( org.eclipse.jgit.lib.Config cfg ) { return cfg . getBoolean ( STRING_CONSTANT , null , STRING_CONSTANT , true ) ; }
@ org.junit.Test public void testParentHashCode () { final long id = NUMBER_CONSTANT ; final com.google.gwtorm.client.LongKeyTestCase.Parent p = new com.google.gwtorm.client.LongKeyTestCase.Parent ( id ) ; org.junit.Assert . assertEquals ( ( ( int ) ( id ) ) , p . hashCode () ) ; }
private static com.google.gerrit.extensions.api.changes.ReviewInput.CommentInput newComment ( java.lang.String path , com.google.gerrit.extensions.client.Side side , int line , java.lang.String message ) { com.google.gerrit.extensions.api.changes.ReviewInput.CommentInput c = new com.google.gerrit.extensions.api.changes.ReviewInput.CommentInput () ; return com.google.gerrit.acceptance.server.change.CommentsIT . populate ( c , path , side , null , line , message ) ; }
com.google.gerrit.server.change.ChangeJson create ( java.util.Set < com.google.gerrit.extensions.client.ListChangesOption > options ) ;
@ org.junit.Test public void testAppend_double () { final com.google.gwtexpui.safehtml.client.SafeHtmlBuilder b = new com.google.gwtexpui.safehtml.client.SafeHtmlBuilder () ; org.junit.Assert . assertSame ( b , b . append ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , b . asString () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public java.lang.String getRefName () { return null ; }
@ java.lang.Override public com.google.gerrit.extensions.common.AccountInfo setAssignee ( com.google.gerrit.extensions.api.changes.AssigneeInput input ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return putAssignee . apply ( change , input ) . value () ; } catch ( com.google.gerrit.server.git.UpdateException | java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
private org.eclipse.jgit.lib.Repository openRepository ( final com.google.gerrit.reviewdb.client.Project.NameKey name ) { try { return repoManager . openRepository ( name ) ; } catch ( java.io.IOException err ) { com.google.gerrit.common.ChangeHookRunner.log . warn ( ( STRING_CONSTANT + ( name . get () ) ) , err ) ; return null ; } }
public final native void refresh ( ) ;
@ java.lang.Override protected void configureServlets () { rpc ( com.google.gerrit.httpd.rpc.SystemInfoServiceImpl . class ) ; install ( new com.google.gerrit.httpd.rpc.project.ProjectModule () ) ; }
private static java.nio.file.Path getZipPath ( java.nio.file.Path buckOut ) { if ( buckOut == null ) { return null ; } return buckOut . resolve ( STRING_CONSTANT ) . resolve ( STRING_CONSTANT ) . resolve ( STRING_CONSTANT ) . resolve ( STRING_CONSTANT ) ; }
public static com.google.gerrit.client.rpc.RestApi revision ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String revision ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . id ( revision ) ; }
public static void updated ( com.google.gerrit.reviewdb.client.Change c ) { c . setLastUpdatedOn ( com.google.gerrit.common.TimeUtil . nowTs () ) ; }
void setSHA1 ( final java.lang.String sha1 ) { this . sha1 = sha1 ; }
com.google.gerrit.server.rpc.project.ProjectDetailFactory create ( com.google.gerrit.client.reviewdb.Project.NameKey name ) ;
@ java.lang.Override public void printJson ( final java.lang.StringBuilder sb , final java.lang.String o ) { sb . append ( escapeString ( o ) ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JavaScriptObject result ) { if ( screen . isCurrentView () ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( changeId ) ) ; } }
void setText ( final java.lang.String query ) { searchBox . setText ( query ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( c . getStatus () . isOpen () ) { c . setStatus ( Change.Status.NEW ) ; com.google.gerrit.server.ChangeUtil . updated ( c ) ; } return c ; }
@ org.junit.Before public void init ( ) throws java.io.IOException { repoFolder = java.io.File . createTempFile ( STRING_CONSTANT , STRING_CONSTANT ) ; repoFolder . delete () ; repo = com.googlesource.gerrit.plugins.uploadvalidator.TestUtils . createNewRepository ( repoFolder ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { change . nextPatchSetId () ; return change ; }
@ java.lang.Override public void run ( ) throws java.lang.Exception { validate () ; setAccount () ; }
@ java.lang.Override public boolean dryRun ( com.google.gerrit.server.git.CodeReviewCommit mergeTip , com.google.gerrit.server.git.CodeReviewCommit toMerge ) throws com.google.gerrit.server.git.MergeException { return args.mergeUtil . canMerge ( args.mergeSorter , args.repo , mergeTip , toMerge ) ; }
public static void drafts ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.rpc.NativeMap < com.google.gwt.core.client.JsArray < com.google.gerrit.client.changes.CommentInfo > > > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( project , id , STRING_CONSTANT ) . get ( cb ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo c ) { project . setInnerText ( c . project () ) ; com.google.gwtexpui.safehtml.client.SafeHtml . setInnerHTML ( filePath , com.google.gerrit.client.diff.Header . formatPath ( path ) ) ; }
private java.lang.String readContentFromJson ( com.google.gerrit.acceptance.RestResponse r ) throws java.lang.Exception { return readContentFromJson ( r , java.lang.String . class ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { com.google.gerrit.client.admin.EditConfigAction . call ( editConfig , getProjectKey () ) ; }
private static com.google.gerrit.client.rpc.RestApi editFile ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String path ) { return com.google.gerrit.client.changes.ChangeApi . edit ( project , id ) . id ( path ) ; }
com.google.gerrit.extensions.client.ChangeKind getChangeKind ( @ com.google.gerrit.common.Nullable org.eclipse.jgit.lib.Repository repo , @ com.google.gerrit.common.Nullable org.eclipse.jgit.revwalk.RevWalk rw , com.google.gerrit.server.query.change.ChangeData cd , com.google.gerrit.reviewdb.client.PatchSet patch ) ;
public com.google.common.collect.ListMultimap < com.google.gerrit.reviewdb.client.PatchSet.Id , com.google.gerrit.reviewdb.client.PatchSetApproval > approvals ( ) throws com.google.gwtorm.server.OrmException { if ( ( allApprovals ) == null ) { allApprovals = approvalsUtil . byChange ( db , notes () ) ; } return allApprovals ; }
@ java.lang.Override public void close () { if ( ( walk () ) != null ) { walk () . close () ; } }
private com.google.gerrit.server.project.ProjectControl getProjectControl () { return getRefControl () . getProjectControl () ; }
private boolean canUploadMerges () { return projectControl . controlForRef ( ( STRING_CONSTANT + ( refName ) ) ) . canPerform ( Permission.PUSH_MERGE ) ; }
com.googlesource.gerrit.plugins.importer.GerritApi create ( java.lang.String url , java.lang.String user , java.lang.String pass ) { if ( url == null ) { return localApi ; } return new com.googlesource.gerrit.plugins.importer.RemoteApi ( url , user , pass ) ; }
@ java.lang.Override public void run () { openIndex . close () ; }
private void grantOwner ( ) throws java.lang.Exception { allow ( STRING_CONSTANT , Permission.OWNER , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS ) ; }
@ java.lang.Override protected void onCellSingleClick ( int row , int column ) { super . onCellSingleClick ( row , column ) ; if ( ( column == NUMBER_CONSTANT ) || ( column == NUMBER_CONSTANT ) ) { onCellDoubleClick ( row , column ) ; } }
boolean setToRetry () { retrying = true ; ( retryCount ) ++ ; return ( ( maxRetries ) == NUMBER_CONSTANT ) || ( ( retryCount ) <= ( maxRetries ) ) ; }
@ org.junit.Test public void returnDefaultforNullMap ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.ericsson.gerrit.plugins.eventslog.QueryMakerTest.queryMaker . formQueryFromRequestParameters ( null ) ) . isEqualTo ( com.ericsson.gerrit.plugins.eventslog.QueryMakerTest.defaultQuery ) ; }
@ java.lang.Override public com.google.gerrit.extensions.common.ChangeInfo check ( com.google.gerrit.extensions.api.changes.FixInput fix ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return check . apply ( change , fix ) . value () ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public com.google.gwtjsonrpc.server.MethodHandle getMethod () { if ( ( com.google.gerrit.httpd.rpc.GerritJsonServlet.currentMethod . get () ) == null ) { return super . getMethod () ; } return com.google.gerrit.httpd.rpc.GerritJsonServlet.currentMethod . get () ; }
private boolean canEditUserName () { return com.google.gerrit.client.Gerrit . info () . auth () . canEdit ( Account.FieldName.USER_NAME ) ; }
public static com.jcraft.jsch.KeyPair genSshKey ( ) throws com.jcraft.jsch.JSchException { com.jcraft.jsch.JSch jsch = new com.jcraft.jsch.JSch () ; return com.jcraft.jsch.KeyPair . genKeyPair ( jsch , KeyPair.RSA ) ; }
public abstract void encode ( T obj , com.google.protobuf.CodedOutputStream out ) ;
@ org.junit.Test public void nonExistingConfig () { com.google.gerrit.server.project.ProjectState state = projectCache . get ( project ) ; com.google.common.truth.Truth . assertThat ( state . getConfig ( STRING_CONSTANT ) . get () . toText () ) . isEqualTo ( STRING_CONSTANT ) ; }
private static boolean isInvalidXSRF ( final java.lang.Throwable caught ) { return ( caught instanceof com.google.gwt.user.client.rpc.InvocationException ) && ( caught . getMessage () . equals ( JsonUtil.ERROR_INVALID_XSRF ) ) ; }
@ java.lang.Override public boolean handles ( com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid ) { return isLdapUUID ( uuid ) ; }
private static int find ( java.util.List < java.lang.String > list , java.lang.String p ) { int r = java.util.Collections . binarySearch ( list , p ) ; return r < NUMBER_CONSTANT ? - ( r + NUMBER_CONSTANT ) : r ; }
@ org.junit.Test @ com.google.gerrit.acceptance.TestProjectInput ( createEmptyCommit = false ) public void submitToEmptyRepo ( ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit.Result change = createChange () ; submit ( change . getChangeId () ) ; com.google.common.truth.Truth . assertThat ( getRemoteHead () . getId () ) . isEqualTo ( change . getCommitId () ) ; }
private void logWarn ( java.lang.String msg ) { if ( com.google.gerrit.server.git.MergeOp.log . isWarnEnabled () ) { com.google.gerrit.server.git.MergeOp.log . warn ( ( ( submissionId ) + msg ) ) ; } }
@ java.lang.Override protected void onLoad () { super . onLoad () ; Util.ACCOUNT_SVC . myAgreements ( new com.google.gerrit.client.rpc.GerritCallback < com.google.gerrit.client.account.AgreementInfo > () { public void onSuccess ( final com.google.gerrit.client.account.AgreementInfo result ) { agreements . display ( result ) ; } } ) ; }
@ java.lang.Override public void onReloadPlugin ( com.google.gerrit.server.plugins.Plugin oldPlugin , com.google.gerrit.server.plugins.Plugin newPlugin ) { install ( newPlugin ) ; }
public void movePointerTo ( final com.google.gerrit.reviewdb.client.Patch.Key k ) { if ( ( myTable ) != null ) { myTable . movePointerTo ( k ) ; } }
void downloadOptional () { required = false ; download () ; }
private java.util.List < com.google.gerrit.extensions.api.projects.DashboardInfo > dashboards ( ) throws java.lang.Exception { return project () . dashboards () . get () ; }
public static java.lang.String toPatch ( java.lang.String type , com.google.gerrit.reviewdb.client.PatchSet.Id diffBase , com.google.gerrit.reviewdb.client.Patch.Key id ) { return com.google.gerrit.client.Dispatcher . toPatch ( type , diffBase , id . getParentKey () , id . get () , null , NUMBER_CONSTANT ) ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser get () { final com.google.gerrit.client.reviewdb.Account.Id id = call . getAccountId () ; return id != null ? factory . create ( id ) : CurrentUser.ANONYMOUS ; }
void setCurrentCommand ( com.google.gerrit.client.download.DownloadCommandLink cmd ) { currentCommand = cmd ; }
public static com.google.gerrit.server.patch.PatchListKey againstCommit ( org.eclipse.jgit.lib.AnyObjectId otherCommitId , org.eclipse.jgit.lib.AnyObjectId newId , com.google.gerrit.extensions.client.DiffPreferencesInfo.Whitespace whitespace ) { return new com.google.gerrit.server.patch.PatchListKey ( otherCommitId , newId , whitespace ) ; }
private com.google.gerrit.server.index.PredicateWrapper wrap ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p ) { try { return new com.google.gerrit.server.index.PredicateWrapper ( p , index ) ; } catch ( com.google.gerrit.server.query.QueryParseException e ) { throw new java.lang.IllegalStateException ( ( ( STRING_CONSTANT + p ) + STRING_CONSTANT ) , e ) ; } }
@ com.google.gerrit.client.rpc.SignInRequired void addRight ( com.google.gerrit.client.reviewdb.Project.NameKey projectName , com.google.gerrit.client.reviewdb.ApprovalCategory.Id categoryId , java.lang.String groupName , short min , short max , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.admin.ProjectDetail > callback ) ;
@ com.google.gwtorm.client.Query ( value = STRING_CONSTANT ) com.google.gwtorm.client.ResultSet < com.google.gerrit.client.reviewdb.AccountProjectWatch > notifySubmittedChanges ( com.google.gerrit.client.reviewdb.Project.NameKey name ) throws com.google.gwtorm.client.OrmException ;
@ java.lang.Override public boolean get ( org.eclipse.jgit.lib.ObjectId commit , org.eclipse.jgit.lib.Ref intoRef , com.google.gerrit.extensions.client.SubmitType submitType , java.lang.String mergeStrategy , com.google.gerrit.reviewdb.client.Branch.NameKey dest , org.eclipse.jgit.lib.Repository repo ) { throw new java.lang.UnsupportedOperationException ( STRING_CONSTANT ) ; }
public com.google.gerrit.server.project.ListProjects setFormat ( com.google.gerrit.server.OutputFormat fmt ) { format = fmt ; return this ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; initUUID () ; initName () ; initOwner () ; initDescription () ; initGroupOptions () ; initGroupType () ; }
public com.google.gerrit.reviewdb.client.Change getChange () { return update . getChange () ; }
private void removeAccountIdLock ( com.google.gerrit.reviewdb.client.Account.Id id ) { synchronized ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServlet.accountIdLocks ) { if ( ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServlet.accountIdLocks . get ( id ) . get () ) == NUMBER_CONSTANT ) { com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServlet.accountIdLocks . remove ( id ) ; } } }
@ java.lang.Override public java.lang.String apply ( com.google.gerrit.reviewdb.client.Project.NameKey in ) { return in . get () ; }
@ java.lang.Override public java.lang.String call ( ) throws java.lang.Exception { if ( check . equals ( Check.ACCESS ) ) return healthCheckAccess () ; return healthCheckSysinfo () ; }
public final void delete ( final java.lang.Iterable < E > instances ) throws com.google.gwtorm.client.OrmException { doDelete ( instances ) ; }
public synchronized int getStatus () { return status ; }
private void display ( final com.google.gerrit.client.projects.ProjectMap result ) { projects . display ( result ) ; projects . finishDisplay () ; }
public void display ( java.lang.String commitMessage , com.google.gerrit.client.ui.CommentLinkProcessor commentLinkProcessor ) { display ( null , null , null , false , commitMessage , commentLinkProcessor ) ; }
public java.util.List < org.eclipse.jgit.revwalk.FooterLine > commitFooters ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException { if ( ( commitFooters ) == null ) { if ( ! ( loadCommitData () ) ) { return null ; } } return commitFooters ; }
public com.google.gerrit.server.IdentifiedUser create ( com.google.inject.Provider < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , anonymousCowardName , canonicalUrl , realm , accountCache , groupBackend , null , db , id ) ; }
public boolean isPatchVisible ( com.google.gerrit.reviewdb.client.PatchSet ps , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { if ( ( ps . isDraft () ) && ( ! ( isDraftVisible ( db , null ) ) ) ) { return false ; } return isVisible ( db ) ; }
@ org.junit.Before public void startEventRecorder () { eventRecorder = eventRecorderFactory . create ( admin ) ; }
private boolean isDraftVisible ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( isOwner () ) || ( isReviewer ( db , cd ) ) ; }
com.google.gerrit.server.notedb.rebuild.Event addDep ( com.google.gerrit.server.notedb.rebuild.Event e ) { deps . add ( e ) ; return this ; }
private void initAllUsersRepo ( ) throws java.io.IOException { if ( ( allUsersRepo ) == null ) { allUsersRepo = openRepo ( allUsersName , true ) ; } }
public final native boolean showLineEndings ( ) ;
private void assertError ( java.lang.String expectedError , java.lang.String response ) { com.google.common.truth.Truth . assertThat ( response ) . contains ( expectedError ) ; }
public static java.lang.String createCommit ( org.eclipse.jgit.api.Git git , org.eclipse.jgit.lib.PersonIdent i , java.lang.String msg ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { return com.google.gerrit.acceptance.git.GitUtil . createCommit ( git , i , msg , true , false ) ; }
protected com.google.gerrit.server.notedb.ChangeNotes newNotes ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( args , c ) . load () ; }
private void cancel ( final javax.servlet.http.HttpServletRequest req , final javax.servlet.http.HttpServletResponse rsp ) throws java.io.IOException { callback ( false , req , rsp ) ; }
void message ( java.lang.String message ) ;
private static java.util.List < org.eclipse.jgit.diff.Edit > asList ( org.eclipse.jgit.diff.Edit [] l ) { return java.util.Collections . unmodifiableList ( java.util.Arrays . asList ( l ) ) ; }
@ java.lang.Override public com.google.gerrit.gpg.server.GpgKeys.ListGpgKeys list ( ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.extensions.restapi.ResourceNotFoundException { return new com.google.gerrit.gpg.server.GpgKeys.ListGpgKeys () ; }
public org.eclipse.jgit.lib.Config getProjectPluginConfigWithInheritance ( com.google.gerrit.server.project.ProjectState projectState , java.lang.String pluginName ) { return projectState . getConfig ( ( pluginName + ( com.google.gerrit.server.config.PluginConfigFactory.EXTENSION ) ) ) . getWithInheritance ( false ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.webui.TopMenu.MenuEntry > apply ( com.google.gerrit.server.config.ConfigResource resource ) { java.util.List < com.google.gerrit.extensions.webui.TopMenu.MenuEntry > entries = new java.util.ArrayList <> () ; for ( com.google.gerrit.extensions.webui.TopMenu extension : extensions ) { entries . addAll ( extension . getEntries () ) ; } return entries ; }
private java.util.Set < java.security.PublicKey > getPeerKeys () { com.google.gerrit.sshd.DatabasePubKeyAuth.PeerKeyCache p = peerKeyCache ; if ( ! ( p . isCurrent () ) ) { p = p . reload () ; peerKeyCache = p ; } return p.keys ; }
public static java.lang.String toChange ( final com.google.gerrit.client.reviewdb.Change.Id c ) { return STRING_CONSTANT + ( c . toString () ) ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byCommit ( org.eclipse.jgit.lib.ObjectId id ) throws com.google.gwtorm.server.OrmException { return byCommit ( id . name () ) ; }
@ java.lang.Override public void configure () { install ( dbInjector . getInstance ( com.google.gerrit.pgm.util.BatchProgramModule . class ) ) ; install ( new com.google.gerrit.pgm.util.BatchGitModule () ) ; install ( new com.google.gerrit.server.notedb.NoteDbModule () ) ; }
PatchSet.Id getPatchSetIdFromSide ( com.google.gerrit.client.diff.DisplaySide side ) { if ( ( ( side == ( DisplaySide.A ) ) && ( ( base ) != null ) ) && ( ( base . get () ) >= NUMBER_CONSTANT ) ) { return base ; } return revision ; }
@ org.junit.Test public void testReplaceEscaping () { com.google.common.truth.Truth . assertThat ( new com.google.gwtexpui.safehtml.client.LinkFindReplace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT ) ) . isEqualTo ( STRING_CONSTANT ) ; }
@ com.google.gwtorm.client.SecondaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.Branch get ( com.google.gerrit.client.reviewdb.Branch.Id id ) throws com.google.gwtorm.client.OrmException ;
@ java.lang.Override protected void configureServlets () { bind ( com.googlesource.gerrit.plugins.manager.AvailablePluginsCollection . class ) ; serve ( STRING_CONSTANT ) . with ( com.googlesource.gerrit.plugins.manager.PluginManagerRestApiServlet . class ) ; filterRegex ( STRING_CONSTANT ) . through ( com.googlesource.gerrit.plugins.manager.XAuthFilter . class ) ; }
int size () { return ( src ) != null ? src . size () : NUMBER_CONSTANT ; }
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > deleteAsync ( com.google.gerrit.reviewdb.client.Change.Id id ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( id , true ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
private com.google.gerrit.extensions.api.changes.NotifyHandling defaultNotify ( com.google.gerrit.reviewdb.client.Change change ) { return change . hasReviewStarted () ? com.google.gerrit.extensions.api.changes.NotifyHandling.ALL : com.google.gerrit.extensions.api.changes.NotifyHandling.OWNER ; }
public int getMaxAge () { return ( maxAge ) > NUMBER_CONSTANT ? ( maxAge ) * NUMBER_CONSTANT : maxAge ; }
void manualFlush ( ) throws java.io.IOException { flush () ; if ( autoCommit ) { commit () ; } }
@ java.lang.Override public com.google.gerrit.reviewdb.Project.NameKey getProjectNameKey () { return projectName ; }
@ java.lang.Override public com.google.gerrit.common.data.ReviewerResult call ( ) throws java.lang.Exception { com.google.gerrit.common.data.ReviewerResult result = removeReviewerFactory . create ( changeId , java.util.Collections . singleton ( reviewerId ) ) . call () ; result . setChange ( changeDetailFactory . create ( changeId ) . call () ) ; return result ; }
@ java.lang.Override public boolean isEnabled ( java.lang.String project , java.lang.String branch ) { return true ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( ) throws java.lang.Exception { return getConfig ( true , true , true ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > put ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.PUT , STRING_CONSTANT ) ) ; }
private static void assertChildren ( java.lang.String o , com.google.gerrit.server.query.Predicate < java.lang.String > p , final java.util.List < com.google.gerrit.server.query.Predicate < java.lang.String > > l ) { org.junit.Assert . assertEquals ( ( o + STRING_CONSTANT ) , l , p . getChildren () ) ; }
private void stop () { synchronized ( lock ) { if ( ( manager ) != null ) { manager . shutdown () ; } } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.VoidResult result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChangeInEditMode ( project , changeId ) ) ; }
private java.lang.String pushTagForNewCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { return pushTag ( tagType , null , true , false , expectedStatus ) ; }
java.lang.String getToken () { return isSignedIn () ? key . getToken () : null ; }
@ java.lang.Override public int hashCode () { return NUMBER_CONSTANT + ( id ) ; }
public com.google.gerrit.server.notedb.ChangeNotes create ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id changeId ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.reviewdb.client.Change change = db . changes () . get ( changeId ) ; return new com.google.gerrit.server.notedb.ChangeNotes ( repoManager , migration , allUsersProvider , project , change ) ; }
@ org.junit.Test public void nameEscaperDoesNotEscapeSlashes ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.google.gitiles.GitilesUrls.NAME_ESCAPER . apply ( STRING_CONSTANT ) ) . isEqualTo ( STRING_CONSTANT ) ; }
@ java.lang.Override public void run () {}
public final boolean isOpen () { switch ( getStatus () ) { case NEW : case DRAFT : return true ; default: return false ; } }
private com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > rewrite ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in ) throws com.google.gerrit.server.query.QueryParseException { return rewrite . rewrite ( in , NUMBER_CONSTANT ) ; }
private static void assertDeleted ( java.lang.String expectedNewName , com.google.gerrit.server.patch.PatchListEntry e ) { com.google.gerrit.acceptance.server.change.PatchListCacheIT . assertName ( expectedNewName , e ) ; com.google.common.truth.Truth . assertThat ( e . getChangeType () ) . isEqualTo ( ChangeType.DELETED ) ; }
public static com.google.gerrit.client.rpc.RestApi edit ( @ com.google.gerrit.common.Nullable java.lang.String project , int id ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) ; }
@ org.junit.Test public void testParentHashCode () { final java.lang.String str = STRING_CONSTANT ; final com.google.gwtorm.client.StringKeyTestCase.Parent p = new com.google.gwtorm.client.StringKeyTestCase.Parent ( str ) ; org.junit.Assert . assertEquals ( str . hashCode () , p . hashCode () ) ; }
protected void logDebug ( java.lang.String msg , java.lang.Object . . . args ) { if ( ( ( requestId ) != null ) && ( com.google.gerrit.server.update.BatchUpdate.log . isDebugEnabled () ) ) { com.google.gerrit.server.update.BatchUpdate.log . debug ( ( ( requestId ) + msg ) , args ) ; } }
@ java.lang.Override public java.lang.String usage () { return usage ; }
protected void submit ( java.lang.String changeId ) throws java.lang.Exception { submit ( changeId , HttpStatus.SC_OK , null ) ; }
@ java.lang.Override public com.google.gerrit.client.reviewdb.com.google.gwtorm [] members () { return new com.google.gwtorm.client.Key < > [] { projectName } ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( c . getStatus () . isOpen () ) { c . setStatus ( Change.Status.NEW ) ; com.google.gerrit.server.ChangeUtil . updated ( c ) ; } return c ; }
private void ensureOptionsInitialized () { if ( ( optionsList ) == null ) { help = new com.google.gerrit.util.cli.CmdLineParser.HelpOption () ; optionsList = new java.util.ArrayList <> () ; addOption ( help , help ) ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { db = new com.google.gwtorm.nosql.heap.MemoryDatabase < com.google.gwtorm.data.PhoneBookDb > ( com.google.gwtorm.data.PhoneBookDb . class ) ; openSchemas = new java.util.ArrayList < com.google.gwtorm.data.PhoneBookDb > () ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onMarkPrivate ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { com.google.gerrit.client.change.ChangeActions . markPrivate ( project , changeId , markPrivate ) ; }
@ java.lang.Override public java.lang.String permissionName () { return name ; }
@ java.lang.Override protected void configure () { bind ( com.googlesource.gerrit.plugins.verifystatus.server.schema.SchemaVersion . class ) . to ( SchemaVersion.C ) ; }
protected com.google.gerrit.client.reviewdb.ReviewDb openReviewDb ( ) throws com.google.gerrit.server.ssh.AbstractCommand.Failure { try { return com.google.gerrit.client.rpc.Common . getSchemaFactory () . open () ; } catch ( com.google.gwtorm.client.OrmException e ) { throw new com.google.gerrit.server.ssh.AbstractCommand.Failure ( NUMBER_CONSTANT , STRING_CONSTANT , e ) ; } }
public org.eclipse.jgit.revwalk.RevCommit getCommit () { return commit ; }
@ java.lang.Override public void onClick ( final com.google.gwt.event.dom.client.ClickEvent event ) { doSave () ; }
public abstract java.lang.String getCommand ( java.lang.String url , java.lang.String ref ) ;
@ java.lang.Override public com.google.gerrit.extensions.restapi.Response < java.lang.String > apply ( com.google.gerrit.server.account.AccountResource rsrc , com.google.gerrit.server.account.PutActive.Input input ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException , com.google.gwtorm.server.OrmException , java.io.IOException , org.eclipse.jgit.errors.ConfigInvalidException { return setInactiveFlag . activate ( rsrc . getUser () . getAccountId () ) ; }
@ java.lang.Override public void go () { com.google.gerrit.client.Gerrit . display ( getTargetHistoryToken () ) ; }
public static boolean isDefaultDashboard ( @ com.google.gerrit.common.Nullable java.lang.String id ) { return com.google.gerrit.server.project.DashboardsCollection.DEFAULT_DASHBOARD_NAME . equals ( id ) ; }
public static com.google.gerrit.client.rpc.RestApi editWithCommands ( @ com.google.gerrit.common.Nullable java.lang.String project , int id ) { return com.google.gerrit.client.changes.ChangeApi . edit ( project , id ) . addParameterTrue ( STRING_CONSTANT ) ; }
private static boolean isNoSuchAccount ( final java.lang.Throwable caught ) { return ( caught instanceof com.google.gwtjsonrpc.client.RemoteJsonException ) && ( caught . getMessage () . startsWith ( NoSuchAccountException.MESSAGE ) ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { db = com.google.gerrit.testutil.InMemoryDatabase . newDatabase () ; }
public void setUUID ( com.google.gerrit.reviewdb.AccountGroup.UUID newUUID ) { uuid = ( newUUID != null ) ? newUUID . get () : null ; }
public static java.util.List < java.lang.String > names ( com.google.gerrit.acceptance.TestAccount . . . accounts ) { return com.google.gerrit.acceptance.TestAccount . names ( java.util.Arrays . asList ( accounts ) ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > delete ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.DELETE , STRING_CONSTANT ) ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onExpandAll ( com.google.gwt.event.dom.client.ClickEvent e ) { expandAll () ; manager . remove ( this , otherBar ) ; cm . focus () ; }
@ java.lang.Override public void setUserAccountId ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new com.google.gerrit.httpd.WebSessionManager.Key ( ( STRING_CONSTANT + id ) ) ; val = new com.google.gerrit.httpd.WebSessionManager.Val ( id , NUMBER_CONSTANT , false , null , NUMBER_CONSTANT , null , null ) ; }
public final native void setLine ( int line ) ;
@ java.lang.Override public void configure () { factory ( ReviewDbBatchUpdate.AssistedFactory . class ) ; }
public static com.google.gerrit.client.rpc.RestApi hashtags ( @ com.google.gerrit.common.Nullable java.lang.String project , int changeId ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , changeId ) . view ( STRING_CONSTANT ) ; }
private static int find ( java.util.List < java.lang.String > files , java.lang.String p ) { int r = java.util.Collections . binarySearch ( files , p ) ; return r < NUMBER_CONSTANT ? - ( r + NUMBER_CONSTANT ) : r ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.server.git.ReceiveCommits.CreateRequest input ) { return ( input . getChange () ) != null ; }
private com.google.gerrit.server.index.IndexedChangeQuery query ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p , int limit ) throws com.google.gerrit.server.query.QueryParseException { return new com.google.gerrit.server.index.IndexedChangeQuery ( index , p , limit ) ; }
public static void includedIn ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.info.ChangeInfo.IncludedInInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . call ( project , id , STRING_CONSTANT ) . get ( cb ) ; }
public void assertMessage ( java.lang.String expectedMessage ) { org.eclipse.jgit.transport.RemoteRefUpdate refUpdate = result . getRemoteUpdate ( ref ) ; com.google.common.truth.Truth . assertThat ( message ( refUpdate ) . toLowerCase () ) . contains ( expectedMessage . toLowerCase () ) ; }
@ com.google.gwtorm.client.SecondaryKey ( value = STRING_CONSTANT ) com.google.gerrit.client.reviewdb.AccountGroup get ( com.google.gerrit.client.reviewdb.AccountGroup.Id id ) throws com.google.gwtorm.client.OrmException ;
public static < T > com.google.gerrit.extensions.registration.DynamicSet < T > emptySet () { return new com.google.gerrit.extensions.registration.DynamicSet ( java.util.Collections . < java.util.concurrent.atomic.AtomicReference < com.google.inject.Provider < T > > > emptySet () ) ; }
private com.google.gitiles.doc.MarkdownToHtml file ( java.lang.String path ) { return new com.google.gitiles.doc.MarkdownToHtml ( com.google.gitiles.GitilesView . doc () . copyFrom ( view ) . setPathPart ( path ) . build () , config , path ) ; }
public com.google.gerrit.server.patch.PatchList get ( com.google.gerrit.server.patch.PatchListKey key , com.google.gerrit.reviewdb.client.Project.NameKey project ) throws com.google.gerrit.server.patch.PatchListNotAvailableException ;
@ java.lang.Override public boolean exists ( final java.lang.String issueKey ) throws java.io.IOException { return execute ( ( ) - > client () . issueExists ( issueKey ) ) ; }
@ java.lang.Override public boolean isVisibleToAll () { return false ; }
private void setNew ( com.google.gerrit.reviewdb.Change c , com.google.gerrit.reviewdb.ChangeMessage msg ) { sendMergeFail ( c , msg , true , true ) ; }
@ java.lang.Override protected java.lang.String prettify ( java.lang.String html , java.lang.String type ) { return com.google.gerrit.prettify.client.ClientSideFormatter . go ( com.google.gerrit.prettify.client.ClientSideFormatter.prettify . getContext () , html , type ) ; }
public boolean isUseSignedOffBy () { return getInheritableBoolean ( Project : : getUseSignedOffBy ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.rpc.NativeMap < com.google.gwt.core.client.JsArray < com.google.gerrit.client.changes.CommentInfo > > result ) { displayComments ( result ) ; post . setEnabled ( true ) ; }
@ java.lang.Override public boolean isBatch () { return true ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo info ) { info . init () ; addExtensionPoints ( info , initCurrentRevision ( info ) ) ; loadConfigInfo ( info , base ) ; }
synchronized com.google.gerrit.sshd.SshScope.Context subContext ( com.google.gerrit.sshd.SshSession newSession , java.lang.String newCommandLine ) { com.google.gerrit.sshd.SshScope.Context ctx = new com.google.gerrit.sshd.SshScope.Context ( this , newSession , newCommandLine ) ; ctx.cleanup . add ( cleanup ) ; return ctx ; }
static com.google.gerrit.server.project.SectionMatcher wrap ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.common.data.AccessSection section ) { java.lang.String ref = section . getName () ; if ( com.google.gerrit.common.data.AccessSection . isValid ( ref ) ) { return com.google.gerrit.server.project.SectionMatcher . wrap ( project , ref , section ) ; } else { return null ; } }
private native void copy ( java.util.Map < java.lang.String , V > r , com.google.gwt.core.client.JavaScriptObject jsObject ) ;
public void addPatchSets ( com.google.gerrit.server.events.ChangeAttribute a , java.util.Collection < com.google.gerrit.reviewdb.PatchSet > ps ) { addPatchSets ( a , ps , null , false , null ) ; }
public com.google.gerrit.server.notedb.ChangeNotes notes ( ) throws com.google.gwtorm.server.OrmException { if ( ( notes ) == null ) { notes = notesFactory . create ( db , change () ) ; } return notes ; }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , new com.google.gerrit.client.diff.Unified ( project , base , com.google.gerrit.client.DiffObject . patchSet ( id . getParentKey () ) , id . get () , side , line ) ) ; }
public static void parentCandidates ( com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.projects.ProjectMap > callback ) { com.google.gerrit.client.projects.ProjectMap . projects () . addParameterRaw ( STRING_CONSTANT , STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . get ( com.google.gerrit.client.rpc.NativeMap . copyKeysIntoChildren ( callback ) ) ; }
private org.eclipse.jgit.lib.ObjectInserter getObjectInserter ( ) throws java.io.IOException { initRepository () ; return inserter ; }
@ java.lang.Override @ org.junit.Before public void init ( ) throws java.io.IOException { super . init () ; testRepo = new org.eclipse.jgit.junit.TestRepository ( repo ) ; validator = new com.googlesource.gerrit.plugins.uploadvalidator.DuplicatePathnameValidator ( null , null , null , null ) ; validator . setLocale ( java.util.Locale.ENGLISH ) ; }
@ java.lang.Override public void go () { com.google.gerrit.client.Dispatcher . patch ( getTargetHistoryToken () , base , patchKey , patchIndex , patchSetDetail , parentPatchTable , topView ) ; }
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; com.google.reviewit.app.Change change = getApp () . getCurrentChange () ; setTitle ( getString ( R.string.restore_change_title , change.info._number ) ) ; init ( change ) ; }
@ org.junit.Test public void emptySoy ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( buildBranchesSoyData () ) . isEmpty () ; com.google.common.truth.Truth . assertThat ( buildTagsSoyData () ) . isEmpty () ; }
@ java.lang.Override public java.lang.String getCookie ( com.gitblit.models.UserModel model ) { return null ; }
public void onPreReceive ( final org.spearce.jgit.transport.ReceivePack arg0 , final java.util.Collection < org.spearce.jgit.transport.ReceiveCommand > commands ) { parseCommands ( commands ) ; createNewChanges () ; appendPatchSets () ; }
private com.google.gerrit.extensions.api.changes.ChangeApi changeApi ( com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws com.google.gerrit.extensions.restapi.RestApiException { return gApi . changes () . id ( patchSet . getId () . getParentKey () . get () ) ; }
java.lang.String patchSet ( ) ;
public void addPatchSets ( com.google.gerrit.server.events.ChangeAttribute ca , java.util.Collection < com.google.gerrit.reviewdb.client.PatchSet > ps , java.util.Map < com.google.gerrit.reviewdb.client.PatchSet.Id , java.util.Collection < com.google.gerrit.reviewdb.client.PatchSetApproval > > approvals ) { addPatchSets ( ca , ps , approvals , false , null ) ; }
public com.google.gerrit.server.events.AccountAttribute asAccountAttribute ( final com.google.gerrit.reviewdb.client.Account account ) { com.google.gerrit.server.events.AccountAttribute who = new com.google.gerrit.server.events.AccountAttribute () ; who.name = account . getFullName () ; who.email = account . getPreferredEmail () ; return who ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change c ) { if ( psInfo != null ) { c . setCurrentPatchSet ( psInfo ) ; } com.google.gerrit.server.ChangeUtil . updated ( c ) ; return c ; }
@ java.lang.Deprecated public void setStarredBy ( java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > starredByUser ) { this . starredByUser = starredByUser ; }
@ java.lang.Override public void run () { openIndex . close () ; }
protected void submit ( java.lang.String changeId , com.google.gerrit.extensions.api.changes.SubmitInput input ) throws java.lang.Exception { submit ( changeId , input , null , null , true ) ; }
@ java.lang.Override public com.google.gerrit.server.account.GroupMembership membershipsOf ( com.google.gerrit.server.IdentifiedUser user ) { return groupMembershipFactory . create ( user ) ; }
private java.util.Map < java.lang.String , com.google.gerrit.extensions.common.LabelInfo > getChangeLabels ( java.lang.String changeId ) throws java.lang.Exception { return gApi . changes () . id ( changeId ) . get ( com.google.gerrit.extensions.client.ListChangesOption.DETAILED_LABELS ) . labels ; }
java.util.Optional < com.google.gerrit.server.account.AccountState > get ( com.google.gerrit.reviewdb.client.Account.Id accountId ) ;
java.lang.Runnable toggleReviewed () { return ( ) - > reviewed . setValue ( ( ! ( reviewed . getValue () ) ) , true ) ; }
private void assertMyMetaData ( java.lang.String ref , int expectedValue , java.lang.String . . . expectedLog ) throws java.lang.Exception { com.google.gerrit.server.git.VersionedMetaDataTest.MyMetaData d = load ( ref , expectedValue ) ; com.google.common.truth.Truth . assertThat ( log ( d ) ) . containsExactlyElementsIn ( java.util.Arrays . asList ( expectedLog ) ) . inOrder () ; }
@ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { enableButtons ( true ) ; super . onFailure ( caught ) ; }
@ java.lang.Override protected void preDisplay ( final com.google.gerrit.client.admin.AccountGroupDetail result ) { display ( result ) ; }
@ java.lang.Override protected void configure () { com.google.gerrit.extensions.registration.DynamicSet . setOf ( binder () , com.google.gerrit.extensions.events.GitReferenceUpdatedListener . class ) ; com.google.gerrit.extensions.registration.DynamicSet . setOf ( binder () , com.google.gerrit.server.git.validators.CommitValidationListener . class ) ; install ( new com.google.gerrit.server.git.GitModule () ) ; }
private static void initDisableUnwantedKeys () { for ( java.lang.String s : new java.lang.String [] { STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT } ) { net.codemirror.lib.CodeMirror . disableUnwantedKey ( STRING_CONSTANT , s ) ; } }
private void onReply () { if ( com.google.gerrit.client.Gerrit . isSignedIn () ) { replyAction . onReply ( null ) ; } else { com.google.gerrit.client.Gerrit . doSignIn ( getToken () ) ; } }
public void display ( java.lang.String commitMessage , com.google.gerrit.client.ui.CommentLinkProcessor commentLinkProcessor ) { display ( null , null , null , commitMessage , commentLinkProcessor ) ; }
@ java.lang.Override public com.google.gerrit.server.project.RefControl create ( final com.google.gerrit.server.project.ProjectControl projectControl , final java.lang.String ref ) { return new com.google.gerrit.server.project.RefControl ( projectControl , ref ) ; }
@ java.lang.Override public void onExit ( int rc ) { exit . onExit ( translateExit ( rc ) ) ; log ( rc ) ; }
public void setUserAccountId ( com.google.gerrit.reviewdb.client.Account.Id id ) ;
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JavaScriptObject result ) { if ( screen . isCurrentView () ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( psId ) ) ; } }
@ java.lang.Override protected void configureCommands () { command ( com.googlesource.gerrit.plugins.replication.StartCommand . class ) ; }
@ org.junit.Test public void testValidPathSeparator () { for ( char c : com.google.gerrit.httpd.GitWebConfigTest.VALID_CHARACTERS . toCharArray () ) { org.junit.Assert . assertTrue ( ( STRING_CONSTANT + c ) , com.google.gerrit.httpd.GitWebConfig . isValidPathSeparator ( c ) ) ; } }
@ java.lang.Override public int compareTo ( com.google.gerrit.client.diff.SideBySideCommentGroup o ) { if ( ( side ) == ( o.side ) ) { return ( line ) - ( o.line ) ; } throw new java.lang.IllegalStateException ( STRING_CONSTANT ) ; }
@ java.lang.Override public void deleteDocuments ( org.apache.lucene.index.Term . . . term ) throws java.io.IOException { super . deleteDocuments ( term ) ; autoFlush () ; }
@ java.lang.Override public com.google.gerrit.server.group.GetGroup.GroupInfo apply ( com.google.gerrit.server.group.IncludedGroupResource rsrc ) { return new com.google.gerrit.server.group.GetGroup.GroupInfo ( rsrc . getGroup () ) ; }
@ java.lang.Override public com.googlecode.prolog_cafe.lang.NumberTerm not () { throw new com.googlecode.prolog_cafe.exceptions.IllegalTypeException ( STRING_CONSTANT , this ) ; }
public abstract com.google.gerrit.server.mail.receive.MailMessage.Builder id ( java.lang.String val ) ;
private java.lang.String getUsername () { return gerritConfig . getString ( pluginName , null , com.googlesource.gerrit.plugins.hooks.jira.JiraItsFacade.GERRIT_CONFIG_USERNAME ) ; }
protected com.google.gerrit.server.notedb.ChangeNotes newNotes ( com.google.gerrit.reviewdb.client.Change c ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( repoManager , com.google.gerrit.server.notedb.AbstractChangeNotesTest.MIGRATION , allUsers , c . getProject () , c ) . load () ; }
private com.google.gerrit.server.patch.PatchList listFor ( final com.google.gerrit.server.patch.PatchListKey key ) throws com.google.gerrit.server.patch.PatchListNotAvailableException { return patchListCache . get ( key , project ) ; }
@ java.lang.Override public java.lang.String getDisplayString () { return branch . ref () ; }
protected < P extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ChildCollectionBinder < P > child ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < P > > type , java.lang.String name ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ChildCollectionBinder ( view ( type , com.google.gerrit.extensions.restapi.RestApiModule.GET , name ) ) ; }
@ java.lang.Override protected void preDisplay ( final com.google.gerrit.client.data.ChangeDetail r ) { display ( r ) ; }
@ java.lang.Override public void configure () { listener () . to ( com.google.gerrit.lucene.LuceneVersionManager . class ) ; }
@ org.junit.Before public void setTimeForTesting () { resetTimeWithClockStep ( NUMBER_CONSTANT , java.util.concurrent.TimeUnit.MILLISECONDS ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { cm . setCursor ( net.codemirror.lib.LineCharacter . create ( line ) ) ; cm . scrollToY ( ( height - ( NUMBER_CONSTANT * scrollbarHeight ) ) ) ; cm . focus () ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byTopicOpen ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.Predicate . and ( topic ( topic ) , com.google.gerrit.server.query.change.ChangeStatusPredicate . open () ) ) ; }
private void testCopyLocal () { org.easymock.EasyMock . expect ( cfgMock . getCopyLocal () ) . andReturn ( true ) . once () ; }
public com.google.gerrit.server.IdentifiedUser create ( com.google.inject.Provider < com.google.gerrit.reviewdb.server.ReviewDb > db , com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , anonymousCowardName , canonicalUrl , realm , accountCache , groupBackend , null , db , id , null ) ; }
protected void fireEventForUnrestrictedListeners ( com.google.gerrit.server.events.Event event ) { for ( com.google.gerrit.common.EventListener listener : unrestrictedListeners ) { listener . onEvent ( event ) ; } }
@ java.lang.Override public void index ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { index . apply ( change , new com.google.gerrit.server.change.Index.Input () ) ; } catch ( java.io.IOException | com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
public static com.google.gerrit.client.diff.DiffApi diff ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path ) { return new com.google.gerrit.client.diff.DiffApi ( com.google.gerrit.client.changes.ChangeApi . revision ( project , id ) . view ( STRING_CONSTANT ) . id ( path ) . view ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public boolean match ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { return ( cd . change () . getLastUpdatedOn () . getTime () ) >= ( cut . getTime () ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return com.google.gerrit.reviewdb.client.RefNames . refsDraftComments ( getId () , accountId ) ; }
public void setBranch ( final java.lang.String pattern ) { branch = pattern ; }
public io.fd.maintainer.plugin.service.dto.PluginBranchSpecificSettings.PluginSettingsBuilder setFileRef ( final java.lang.String fileRef ) { this . fileRef = fileRef ; return this ; }
public com.google.common.collect.SetMultimap < com.google.gerrit.server.notedb.ReviewerState , com.google.gerrit.reviewdb.client.Account.Id > reviewers ( ) throws com.google.gwtorm.server.OrmException { return approvalsUtil . getReviewers ( notes () , approvals () . values () ) ; }
public com.google.gerrit.common.data.GroupReference resolve ( com.google.gerrit.reviewdb.client.AccountGroup group ) { return resolve ( com.google.gerrit.common.data.GroupReference . forGroup ( group ) ) ; }
public void setChange ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id changeId ) { this . project = project ; this . changeId = changeId ; }
protected void submitWithConflict ( java.lang.String changeId , java.lang.String expectedError ) throws java.lang.Exception { submit ( changeId , new com.google.gerrit.extensions.api.changes.SubmitInput () , com.google.gerrit.extensions.restapi.ResourceConflictException . class , expectedError , true ) ; }
private java.util.Map < java.lang.String , org.eclipse.jgit.lib.Ref > listRemote ( org.eclipse.jgit.transport.Transport tn ) throws org.eclipse.jgit.errors.NotSupportedException , org.eclipse.jgit.errors.TransportException { try ( org.eclipse.jgit.transport.FetchConnection fc = tn . openFetch () ) { return fc . getRefsMap () ; } }
private void log ( final int rc ) { synchronized ( this ) { if ( ! ( logged ) ) { log . onExecute ( rc ) ; logged = true ; } } }
protected com.google.gerrit.server.notedb.AbstractChangeNotes.LoadHandle openHandle ( org.eclipse.jgit.lib.Repository repo , org.eclipse.jgit.lib.ObjectId id ) { return com.google.gerrit.server.notedb.AbstractChangeNotes.LoadHandle . create ( com.google.gerrit.server.notedb.ChangeNotesCommit . newRevWalk ( repo ) , id ) ; }
public char charAt ( int idx ) { return content . charAt ( idx ) ; }
com.google.gerrit.extensions.client.ChangeKind getChangeKind ( com.google.gerrit.reviewdb.client.Project.NameKey project , @ com.google.gerrit.common.Nullable org.eclipse.jgit.lib.Repository repo , @ com.google.gerrit.common.Nullable org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.lib.ObjectId prior , org.eclipse.jgit.lib.ObjectId next ) ;
private com.google.gerrit.server.project.ChangeControl control ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.Account.Id id ) throws com.google.gerrit.server.project.NoSuchChangeException { try { return changeControlFactory . controlFor ( db , change , genericUserFactory . create ( id ) ) ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.server.project.NoSuchChangeException ( change . getId () ) ; } }
public com.google.gerrit.server.project.ChangeControl controlFor ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return changeControlFactory . create ( controlForRef ( change . getDest () ) , change . getProject () , change . getId () ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.PatchSetApproval apply ( com.google.gerrit.reviewdb.client.PatchSetApproval in ) { if ( in . getPatchSetId () . equals ( psId ) ) { return in ; } return new com.google.gerrit.reviewdb.client.PatchSetApproval ( psId , in ) ; }
void clearRange () { if ( ( rangeMarker ) != null ) { rangeMarker . clear () ; rangeMarker = null ; } }
@ org.junit.AfterClass public static void stopCommonServer ( ) throws java.lang.Exception { if ( ( com.google.gerrit.acceptance.AbstractDaemonTest.commonServer ) != null ) { try { com.google.gerrit.acceptance.AbstractDaemonTest.commonServer . stop () ; } finally { com.google.gerrit.acceptance.AbstractDaemonTest.commonServer = null ; } } com.google.gerrit.testutil.TempFileUtil . cleanup () ; }
boolean usePool ( ) ;
public final boolean isHttpPasswordSettingsEnabled () { return ( gitBasicAuthPolicy () ) != ( com.google.gerrit.extensions.client.GitBasicAuthPolicy.LDAP ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onRevert ( com.google.gwt.event.dom.client.ClickEvent e ) { com.google.gerrit.client.change.RevertAction . call ( revert , changeId , revision , subject ) ; }
protected com.google.gerrit.server.change.ChangeInserter newChangeWithTopic ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo , java.lang.String topic ) throws java.lang.Exception { return newChange ( repo , null , null , null , topic ) ; }
@ java.lang.Override public int run ( ) throws java.lang.Exception { final com.google.gerrit.server.GerritServer gs = com.google.gerrit.server.GerritServer . getInstance () ; gs . getSchemaFactory () . open () . close () ; java.lang.System.out . println ( STRING_CONSTANT ) ; return NUMBER_CONSTANT ; }
public static PatchSet.Id toPsId ( com.google.gerrit.reviewdb.client.Change.Id id , java.lang.String psIdStr ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id , ( psIdStr . equals ( STRING_CONSTANT ) ? NUMBER_CONSTANT : java.lang.Integer . parseInt ( psIdStr ) ) ) ; }
private java.lang.String trimUpToChar ( java.lang.String string , char ch ) { if ( ( string . indexOf ( ch ) ) >= NUMBER_CONSTANT ) { return string . substring ( NUMBER_CONSTANT , string . indexOf ( ch ) ) ; } return string ; }
private java.util.List < com.google.gerrit.reviewdb.RefRight > getLocalRights ( com.google.gerrit.reviewdb.ApprovalCategory.Id actionId ) { return filter ( getProjectState () . getLocalRights ( actionId ) ) ; }
public static java.lang.String nameOf ( java.io.File jar ) { return com.google.gerrit.server.plugins.PluginLoader . nameOf ( jar . getName () ) ; }
public com.google.gerrit.extensions.registration.DynamicSet < T > get () { return new com.google.gerrit.extensions.registration.DynamicSet ( com.google.gerrit.extensions.registration.DynamicSetProvider . find ( injector , type ) ) ; }
public static java.lang.String toPatchUnified ( final com.google.gerrit.client.reviewdb.Patch.Key id ) { return com.google.gerrit.client.Link . toPatch ( STRING_CONSTANT , id ) ; }
public static void updated ( final com.google.gerrit.reviewdb.client.Change c ) { c . resetLastUpdatedOn () ; com.google.gerrit.server.ChangeUtil . computeSortKey ( c ) ; }
protected void add ( final com.google.gerrit.server.mail.RecipientType rt , final com.google.gerrit.reviewdb.client.Account.Id to ) { if ( ( ! ( emailOnlyAuthors ) ) || ( authors . contains ( to ) ) ) { super . add ( rt , to ) ; } }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.httpd.GerritOptions . class ) . toInstance ( new com.google.gerrit.httpd.GerritOptions ( false , false ) ) ; }
@ org.junit.Test public void listNonExistingGroupMembers_NotFound ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( adminSession . get ( STRING_CONSTANT ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; walk = new org.eclipse.jgit.revwalk.RevWalk ( repo . getRepository () ) ; }
@ com.google.gerrit.client.rpc.SignInRequired void projectDetail ( com.google.gerrit.client.reviewdb.Project.NameKey projectName , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.admin.ProjectDetail > callback ) ;
@ java.lang.Override public void run () { database . storeEvent ( event ) ; }
void evict ( com.google.gerrit.reviewdb.client.AccountGroup.UUID groupUuid ) ;
public boolean isBlocked ( java.lang.String permissionName ) { return ! ( doCanPerform ( permissionName , false , true ) ) ; }
@ java.lang.Override public synchronized void start () { com.google.gerrit.server.plugins.PluginLoader.log . info ( ( STRING_CONSTANT + ( pluginsDir . getAbsolutePath () ) ) ) ; rescan ( false ) ; scanner . start () ; }
@ java.lang.Override public void delete ( com.google.gerrit.reviewdb.client.Change.Id id ) throws java.io.IOException {}
protected void onExit ( final int rc ) { exit . onExit ( rc ) ; if ( ( cleanup ) != null ) { cleanup . run () ; } }
private static final native void init ( java.lang.String d , java.lang.String e , java.lang.String m , java.lang.String t , java.lang.String r , java.lang.String o ) ;
public static java.lang.String toPatchSideBySide ( final com.google.gerrit.reviewdb.Patch.Key id ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , null , id ) ; }
public com.google.gerrit.client.ui.ListenableValue < com.google.gerrit.common.data.ChangeInfo > getChangeInfoCache () { if ( ( info ) == null ) { info = new com.google.gerrit.client.ui.ListenableValue () ; } return info ; }
@ org.junit.Test public void createProjectFooWithGitSuffix ( ) throws java.lang.Exception { java.lang.String name = name ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( name ) . isEqualTo ( gApi . projects () . create ( ( name + STRING_CONSTANT ) ) . get () . name ) ; }
public static java.lang.String toPatch ( com.google.gerrit.reviewdb.client.PatchSet.Id diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , diffBase , revision , fileName , null , NUMBER_CONSTANT ) ; }
public static java.lang.String toPatch ( com.google.gerrit.reviewdb.client.PatchSet.Id diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName , com.google.gerrit.client.diff.DisplaySide side , int line ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , diffBase , revision , fileName , side , line ) ; }
java.lang.String changeScreenTitleId ( java.lang.String changeId ) ;
@ java.lang.Override public void upsert ( java.lang.Iterable < T > instances ) throws com.google.gwtorm.client.OrmException { for ( T obj : instances ) { upsertOne ( obj , false ) ; } }
@ java.lang.Override public com.google.gerrit.extensions.restapi.RestView < com.google.gerrit.server.change.RevisionResource > list ( ) throws com.google.gerrit.extensions.restapi.AuthException { checkIdentifiedUser () ; return list ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { index = new com.google.gerrit.server.index.FakeIndex ( FakeIndex.V2 ) ; com.google.gerrit.server.index.IndexCollection indexes = new com.google.gerrit.server.index.IndexCollection () ; indexes . setSearchIndex ( index ) ; queryBuilder = new com.google.gerrit.server.index.FakeQueryBuilder ( indexes ) ; }
@ org.junit.Test public void testEscapeFirstChar () { org.junit.Assert . assertEquals ( com.google.gerrit.server.StringUtil . escapeString ( STRING_CONSTANT ) , STRING_CONSTANT ) ; }
private void setColumnHeader ( final int col , final java.lang.String text ) { table . setText ( NUMBER_CONSTANT , col , text ) ; setStyleName ( NUMBER_CONSTANT , col , STRING_CONSTANT ) ; }
@ java.lang.Override public com.google.gerrit.extensions.common.MergeableInfo mergeable ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return mergeable . apply ( revision ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
public java.util.List < com.google.gerrit.server.git.ValidationError > getValidationErrors () { if ( ( validationErrors ) != null ) { return java.util.Collections . unmodifiableList ( validationErrors ) ; } return java.util.Collections . emptyList () ; }
private java.lang.String formatLabelValue ( short value ) { if ( value > NUMBER_CONSTANT ) { return STRING_CONSTANT + value ; } return java.lang.Short . toString ( value ) ; }
protected < K , V > com.google.gerrit.server.cache.UnnamedCacheBinding < K , V > core ( final com.google.inject.TypeLiteral < com.google.gerrit.server.cache.Cache < K , V > > type ) { return core ( com.google.inject.Key . get ( type ) , type ) ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.Response < > apply ( com.google.gerrit.server.change.ChangeResource resource , com.google.gerrit.server.change.ChangeEdits.Put.Input input ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.extensions.restapi.ResourceConflictException , com.google.gerrit.server.permissions.PermissionBackendException , com.google.gwtorm.server.OrmException , java.io.IOException { putEdit . apply ( resource , path , input.content ) ; return com.google.gerrit.extensions.restapi.Response . none () ; }
private long getDiskUsage ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws java.io.IOException { org.eclipse.jgit.lib.Repository git = gitManager . openRepository ( project ) ; try { return getDiskUsage ( git . getDirectory () ) ; } finally { git . close () ; } }
@ java.lang.Override public boolean accept ( java.io.File pathname ) { return ( pathname . getName () . endsWith ( STRING_CONSTANT ) ) && ( pathname . isFile () ) ; }
void sendError ( int status , java.lang.String message ) throws java.io.IOException { sendError ( status , new com.googlesource.gerrit.plugins.lfs.locks.LfsLocksContext.Error ( message ) ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ChangeList result ) { com.google.gwt.core.client.JsArray < com.google.gerrit.client.changes.ChangeList > wrapped = com.google.gwt.core.client.JsArray . createArray ( NUMBER_CONSTANT ) . cast () ; wrapped . set ( NUMBER_CONSTANT , result ) ; callback . onSuccess ( wrapped ) ; }
@ java.lang.Override public void index ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { index . apply ( account , new com.google.gerrit.server.account.Index.Input () ) ; } catch ( java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override public void onSuccess ( final com.google.gerrit.common.data.ProjectDetail result ) { display ( result ) ; }
@ java.lang.Override public void onFailure ( final java.lang.Throwable caught ) { text . setReadOnly ( false ) ; save . setEnabled ( true ) ; cancel . setEnabled ( true ) ; discard . setEnabled ( true ) ; super . onFailure ( caught ) ; }
@ java.lang.SuppressWarnings ( value = { STRING_CONSTANT , STRING_CONSTANT } ) private static < K , V > com.google.common.cache.CacheBuilder < K , V > newCacheBuilder () { return ( ( com.google.common.cache.CacheBuilder < K , V > ) ( com.google.common.cache.CacheBuilder . newBuilder () ) ) ; }
java.lang.String getRemoteUser ( javax.servlet.http.HttpServletRequest req ) { java.lang.String remoteUser = com.google.gerrit.httpd.RemoteUserUtil . getRemoteUser ( req , loginHeader ) ; return ( userNameToLowerCase ) && ( remoteUser != null ) ? remoteUser . toLowerCase ( java.util.Locale.US ) : remoteUser ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.rpc.NativeString result ) { cb . onSuccess ( ( result != null ? result . asString () : null ) ) ; }
public com.google.gerrit.server.project.ChangeControl controlFor ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return changeControlFactory . create ( controlForRef ( change . getDest () ) , db , change . getProject () , change . getId () ) ; }
@ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { loadSubmitType ( status , canSubmit ) ; }
@ java.lang.Override public void printJson ( final java.lang.StringBuilder sb , final java.sql.Date o ) { sb . append ( CHAR_CONS ) ; sb . append ( o ) ; sb . append ( CHAR_CONS ) ; }
private java.util.List < com.google.gerrit.reviewdb.client.ChangeMessage > buildAllMessages () { return com.google.common.collect.Lists . reverse ( allChangeMessages ) ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.RestView < com.google.gerrit.server.project.ProjectResource > list () { return list . get () ; }
private java.nio.file.Path getDeveloperBuckOut () { try { return com.google.gerrit.launcher.GerritLauncher . getDeveloperBuckOut () ; } catch ( java.io.FileNotFoundException e ) { return null ; } }
protected Account.Id getAccountId () { com.google.gerrit.server.CurrentUser u = currentUser . get () ; return u . isIdentifiedUser () ? u . getAccountId () : null ; }
abstract void setHideEmptyPane ( boolean hide ) ;
public void remove ( com.google.gerrit.reviewdb.client.Account.Id id ) { cache . invalidate ( id ) ; }
protected com.google.gerrit.acceptance.StandaloneSiteTest.ServerContext startServer ( ) throws java.lang.Exception { return startServer ( null ) ; }
private void loadPatchSets ( ) throws com.google.gwtorm.client.OrmException { detail . setPatchSets ( db . patchSets () . byChange ( changeId ) . toList () ) ; }
public static java.lang.String getGerritJarPluginName ( java.io.File srcFile ) throws java.io.IOException { try ( java.util.jar.JarFile jarFile = new java.util.jar.JarFile ( srcFile ) ) { return jarFile . getManifest () . getMainAttributes () . getValue ( STRING_CONSTANT ) ; } }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > query ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p ) throws com.google.gwtorm.server.OrmException { try { return qp . queryChanges ( p ) . changes () ; } catch ( com.google.gerrit.server.query.QueryParseException e ) { throw new com.google.gwtorm.server.OrmException ( e ) ; } }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo result ) { sent = true ; hide () ; com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , id ) ) ; }
public static net.codemirror.lib.LineCharacter create ( int line , int ch ) { net.codemirror.lib.LineCharacter lineCh = createObject () . cast () ; lineCh . setLine ( line ) ; lineCh . setCh ( ch ) ; return lineCh ; }
@ org.junit.Test public void testExclamationMark () { com.google.gerrit.common.data.GitWebType gitWebType = new com.google.gerrit.common.data.GitWebType () ; gitWebType . setPathSeparator ( CHAR_CONS ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , gitWebType . replacePathSeparator ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public int getCost () { return NUMBER_CONSTANT ; }
@ java.lang.Override public void doPatchsetCreatedHook ( com.google.gerrit.reviewdb.client.Change change , com.google.gerrit.reviewdb.client.PatchSet patchSet , com.google.gerrit.reviewdb.server.ReviewDb db ) {}
@ org.junit.Test @ com.google.gerrit.acceptance.TestProjectInput ( createEmptyCommit = false ) public void listBranchesOfEmptyProject ( ) throws java.lang.Exception { com.google.gerrit.acceptance.rest.project.BranchAssert . assertBranches ( com.google.common.collect.ImmutableList . of ( com.google.gerrit.acceptance.rest.project.ListBranchesIT . branch ( STRING_CONSTANT , null , false ) ) , list () . get () ) ; }
public com.google.gerrit.acceptance.PushOneCommit.Result to ( java.lang.String ref ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.GitUtil . add ( git , fileName , content ) ; return execute ( ref ) ; }
protected Project.NameKey createProject ( java.lang.String nameSuffix , com.google.gerrit.reviewdb.client.Project.NameKey parent ) throws com.google.gerrit.extensions.restapi.RestApiException { return createProject ( nameSuffix , parent , true , null ) ; }
@ java.lang.Override public com.google.common.base.Optional < com.google.gerrit.server.plugins.PluginEntry > getEntry ( java.lang.String resourcePath ) throws java.io.IOException { return webScanner . getEntry ( resourcePath ) ; }
private java.lang.String pushTagForNewCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { return pushTag ( tagType , null , true , expectedStatus ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.httpd.GerritOptions . class ) . toInstance ( new com.google.gerrit.httpd.GerritOptions ( config , false , false , false ) ) ; }
public void addRefUpdate ( org.eclipse.jgit.transport.ReceiveCommand cmd ) { commands . add ( cmd ) ; }
private static boolean match ( java.lang.String value , java.lang.String pattern , boolean refMatcher ) { if ( refMatcher ) { return com.google.gerrit.server.project.RefPatternMatcher . getMatcher ( pattern ) . match ( value , null ) ; } return java.util.regex.Pattern . matches ( pattern , value ) ; }
@ org.junit.Test public void testWikify_OneLine1 () { final com.google.gwtexpui.safehtml.client.SafeHtml o = com.google.gwtexpui.safehtml.client.SafeHtml_WikifyTest . html ( STRING_CONSTANT ) ; final com.google.gwtexpui.safehtml.client.SafeHtml n = o . wikify () ; org.junit.Assert . assertNotSame ( o , n ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , n . asString () ) ; }
public void run ( ) throws java.lang.Exception { parseCommandLine () ; this . run () ; }
private java.lang.String pushTagForExistingCommit ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType , org.eclipse.jgit.transport.RemoteRefUpdate.Status expectedStatus ) throws java.lang.Exception { return pushTag ( tagType , null , false , expectedStatus ) ; }
private com.google.gerrit.server.IdentifiedUser reloadUser () { accountCache . evict ( userId ) ; user = userFactory . create ( userId ) ; return user ; }
private static com.google.gerrit.client.rpc.RestApi group ( java.lang.String group ) { return new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . id ( group ) ; }
com.google.gerrit.server.change.ChangeInserter create ( com.google.gerrit.server.project.RefControl ctl , com.google.gerrit.reviewdb.client.Change c , org.eclipse.jgit.revwalk.RevCommit rc ) ;
public final void addLineClass ( int line , net.codemirror.lib.CodeMirror.LineClassWhere where , java.lang.String className ) { addLineClassNative ( line , where . value () , className ) ; }
@ java.lang.Override public void onChangeDeleted ( int id ) { executeIndexTask ( id , true ) ; }
public void setJarUrl ( final java.lang.String url ) { this . jarUrl = url ; }
public void evict ( final java.lang.String email ) { self . remove ( email ) ; }
public void execute () { com.google.gerrit.client.Gerrit . doSignIn () ; }
private java.util.Set < com.google.gerrit.reviewdb.client.AccountGroup.UUID > groupsOf ( com.google.gerrit.reviewdb.client.Account.Id account ) { return userFactory . create ( account ) . getEffectiveGroups () . getKnownGroups () ; }
private com.google.gerrit.common.data.SubmitTypeRecord typeError ( java.lang.String err ) { return typeError ( err , null ) ; }
private java.lang.String trimFromChar ( java.lang.String string , char ch ) { if ( ( string . lastIndexOf ( ch ) ) >= NUMBER_CONSTANT ) { return string . substring ( ( ( string . lastIndexOf ( ch ) ) + NUMBER_CONSTANT ) ) ; } return string ; }
void close () { if ( ( update ) != null ) { update . close () ; } ins . close () ; rw . close () ; repo . close () ; }
@ java.lang.Override public void stop () {}
public static void all ( com.google.gwtjsonrpc.common.AsyncCallback < com.google.gerrit.client.plugins.PluginMap > callback ) { new com.google.gerrit.client.rpc.RestApi ( STRING_CONSTANT ) . addParameterTrue ( STRING_CONSTANT ) . get ( com.google.gerrit.client.rpc.NativeMap . copyKeysIntoChildren ( callback ) ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.git.GitRepositoryManager . class ) . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager . class ) ; listener () . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager.Lifecycle . class ) ; }
@ java.lang.Override public java.lang.Void call ( ) throws java.io.IOException { for ( com.google.gerrit.server.index.change.ChangeIndex i : getWriteIndexes () ) { i . delete ( id ) ; } fireChangeDeletedFromIndexEvent ( id . get () ) ; return null ; }
public static void deleteAssignee ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.info.AccountInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . delete ( cb ) ; }
com.google.gerrit.server.git.NotesBranchUtil create ( com.google.gerrit.reviewdb.client.Project.NameKey project , org.eclipse.jgit.lib.Repository db , org.eclipse.jgit.lib.ObjectInserter inserter ) ;
com.google.gerrit.extensions.client.Side getStoredSideFromDisplaySide ( com.google.gerrit.client.diff.DisplaySide side ) { if ( ( side == ( DisplaySide.A ) ) && ( ( ( base ) == null ) || ( ( base . get () ) < NUMBER_CONSTANT ) ) ) { return com.google.gerrit.extensions.client.Side.PARENT ; } return com.google.gerrit.extensions.client.Side.REVISION ; }
@ java.lang.Override public java.lang.String apply ( com.google.gerrit.server.account.AccountResource rsrc ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.extensions.restapi.ResourceNotFoundException { return rsrc . getUser () . getUserName () . orElseThrow ( ResourceNotFoundException : : new ) ; }
private com.google.gerrit.reviewdb.client.PatchSetApproval copy ( com.google.gerrit.reviewdb.client.PatchSetApproval src ) { return new com.google.gerrit.reviewdb.client.PatchSetApproval ( src . getPatchSetId () , src ) ; }
@ com.google.inject.Provides @ com.google.inject.Singleton com.google.gerrit.lucene.LuceneChangeIndex getIndex ( com.google.gerrit.lucene.LuceneChangeIndex.Factory factory ) { com.google.gerrit.server.index.Schema < com.google.gerrit.server.query.change.ChangeData > schema = ( ( singleVersion ) != null ) ? com.google.gerrit.server.index.ChangeSchemas . get ( singleVersion ) : com.google.gerrit.server.index.ChangeSchemas . getLatest () ; return factory . create ( schema , base ) ; }
void invalidUserName () { userNameTxt . setFocus ( true ) ; new com.google.gerrit.client.ErrorDialog ( Util.C . invalidUserName () ) . center () ; }
private com.google.reviewit.app.Gerrit getGerrit () { if ( ( gerrit ) == null ) { gerrit = new com.google.reviewit.app.Gerrit ( this , getConfigManager () ) ; } return gerrit ; }
private static java.util.List < com.google.gwtorm.schema.RelationModel > sortRelations ( java.util.Collection < com.google.gwtorm.schema.RelationModel > rels ) { java.util.ArrayList < com.google.gwtorm.schema.RelationModel > list = new java.util.ArrayList ( rels ) ; java.util.Collections . sort ( list , com.google.gwtorm.schema.java.ProtoFileGenerator.RELATION_COMPARATOR ) ; return list ; }
@ java.lang.Override protected com.google.gerrit.client.patches.SideBySideTable createContentTable () { return new com.google.gerrit.client.patches.SideBySideTable () ; }
@ org.junit.Test public void testNoAdvance () { com.google.gerrit.client.diff.CodeMirrorDemo.EditIterator iter = new com.google.gerrit.client.diff.CodeMirrorDemo.EditIterator ( lines , NUMBER_CONSTANT ) ; assertLineChsEqual ( net.codemirror.lib.LineCharacter . create ( NUMBER_CONSTANT ) , iter . advance ( NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { sugestParent . setText ( getRowItem ( row ) . name () ) ; }
public static java.lang.String getGerritPluginName ( java.io.File srcFile ) throws java.io.IOException { java.util.jar.JarFile jarFile = new java.util.jar.JarFile ( srcFile ) ; try { return jarFile . getManifest () . getMainAttributes () . getValue ( STRING_CONSTANT ) ; } finally { jarFile . close () ; } }
com.google.gerrit.server.git.EmailMerge create ( com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.Change.Id changeId , com.google.gerrit.reviewdb.client.Account.Id submitter ) ;
@ java.lang.Override public com.google.gerrit.server.config.ConfigResource parse ( com.google.gerrit.extensions.restapi.TopLevelResource root , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { if ( id . get () . equals ( STRING_CONSTANT ) ) { return new com.google.gerrit.server.config.ConfigResource () ; } throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException ( id ) ; }
private static org.eclipse.jgit.revwalk.RevCommit lookupCommit ( org.eclipse.jgit.lib.Repository repository , com.google.gerrit.reviewdb.client.PatchSet patchSet ) throws java.io.IOException { org.eclipse.jgit.lib.ObjectId patchSetCommitId = com.google.gerrit.server.edit.ChangeEditModifier . getPatchSetCommitId ( patchSet ) ; return com.google.gerrit.server.edit.ChangeEditModifier . lookupCommit ( repository , patchSetCommitId ) ; }
@ org.junit.Test public void testOwnerGroupsWhenNotConfigured () { com.google.common.truth.Truth . assertThat ( repoCfg . getOwnerGroups ( new com.google.gerrit.reviewdb.client.Project.NameKey ( STRING_CONSTANT ) ) ) . isEmpty () ; }
void setSubmitEnabled () { submit . setVisible ( canSubmit ) ; }
public void onSuccess ( final com.google.gerrit.client.admin.ProjectDetail result ) { enableForm ( true ) ; display ( result ) ; }
@ java.lang.Override protected void configureServlets () { rpc ( com.google.gerrit.httpd.rpc.patch.PatchDetailServiceImpl . class ) ; }
public static PatchSet.Id nextPatchSetId ( com.google.gerrit.reviewdb.client.PatchSet.Id id ) { return new com.google.gerrit.reviewdb.client.PatchSet.Id ( id . getParentKey () , ( ( id . get () ) + NUMBER_CONSTANT ) ) ; }
public static void query ( java.lang.String query , java.util.Set < com.google.gerrit.extensions.client.ListChangesOption > options , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.ChangeList > callback ) { com.google.gerrit.client.changes.ChangeList . query ( query , options , callback , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
protected abstract com.google.inject.Injector createInjector ( ) ;
public void loadGerritConfig ( final com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.data.GerritConfig > callback ) { callback . onSuccess ( config ) ; }
com.google.gerrit.server.project.ProjectState create ( com.google.gerrit.reviewdb.Project project , java.util.Collection < com.google.gerrit.reviewdb.RefRight > localRights ) ;
private boolean match ( java.lang.String destBranch , java.lang.String refPattern ) { return com.google.gerrit.server.project.RefPatternMatcher . getMatcher ( refPattern ) . match ( destBranch , getUser () ) ; }
private InternalGroupCreation.Builder getPrefilledGroupCreationBuilder () { return com.google.gerrit.server.group.db.InternalGroupCreation . builder () . setGroupUUID ( groupUuid ) . setNameKey ( groupName ) . setId ( groupId ) ; }
public Change.Key getChangeKey () { return new com.google.gerrit.reviewdb.client.Change.Key ( change.id ) ; }
@ java.lang.Override public void unstarChange ( java.lang.String changeId ) throws com.google.gerrit.extensions.restapi.RestApiException { throw new com.google.gerrit.extensions.restapi.NotImplementedException () ; }
@ java.lang.Override public void run ( ) throws java.lang.Exception { impl . display ( stdout ) ; }
private boolean nameEqualsAbbreviated ( org.eclipse.jgit.lib.ObjectId other ) { return ( org.eclipse.jgit.lib.AbbreviatedObjectId . isId ( name ) ) && ( ( org.eclipse.jgit.lib.AbbreviatedObjectId . fromString ( name ) . prefixCompare ( other ) ) == NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.lang.String changeClosed ( com.google.gerrit.server.git.ChangeReportFormatter.Input input ) { return java.lang.String . format ( STRING_CONSTANT , com.google.gerrit.server.ChangeUtil . formatChangeUrl ( canonicalWebUrl , input . change () ) ) ; }
public static com.google.gerrit.client.rpc.RestApi detail ( int id ) { return com.google.gerrit.client.changes.ChangeApi . call ( id , STRING_CONSTANT ) ; }
@ java.lang.Override protected Project.NameKey getProjectName () { return getChange () . getProject () ; }
@ java.lang.Override public com.googlesource.gerrit.plugins.github.oauth.GitHubLogin get ( javax.servlet.http.HttpServletRequest request ) { return super . get ( request ) ; }
private void assertIsUnhealthy ( ) throws java.io.IOException { javax.servlet.http.HttpServletResponse responseMock = org.mockito.Mockito . mock ( javax.servlet.http.HttpServletResponse . class ) ; servlet . doGet ( null , responseMock ) ; org.mockito.Mockito . verify ( responseMock ) . sendError ( javax.servlet.http.HttpServletResponse.SC_SERVICE_UNAVAILABLE ) ; }
private GitilesView.Builder parseRefsCommand ( java.lang.String repoName , java.lang.String path ) { return com.google.gitiles.GitilesView . refs () . setRepositoryName ( repoName ) . setPathPart ( path ) ; }
com.google.gerrit.server.changedetail.RestoreChange create ( com.google.gerrit.reviewdb.client.Change.Id changeId , java.lang.String changeComment ) ;
@ java.lang.Override public java.lang.String getUrl ( java.lang.String project ) { return project ; }
private void display ( final com.google.gerrit.client.projects.ProjectMap result ) { projectsTab . display ( result ) ; if ( firstPopupLoad ) { firstPopupLoad = false ; displayPopup () ; } }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { gotoSibling ( NUMBER_CONSTANT ) ; }
public void copy ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.server.project.ChangeControl ctl , com.google.gerrit.reviewdb.client.PatchSet ps ) throws com.google.gwtorm.server.OrmException { db . patchSetApprovals () . insert ( getForPatchSet ( db , ctl , ps ) ) ; }
public java.util.List < com.google.gerrit.common.data.SubmitRecord > canSubmit ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return canSubmit ( db , patchSet , null , false , false , false ) ; }
private void assertCanSubmit ( java.lang.String ref , com.google.gerrit.server.project.ProjectControl u ) { com.google.common.truth.Truth . assertThat ( u . controlForRef ( ref ) . canSubmit ( false ) ) . named ( ( STRING_CONSTANT + ref ) ) . isTrue () ; }
protected abstract java.lang.String prettify ( java.lang.String html , java.lang.String type ) ;
@ java.lang.Override public Project.NameKey getProjectName () { return project ; }
@ java.lang.Override public void postEvent ( com.google.gerrit.server.events.Event event , com.google.gerrit.reviewdb.server.ReviewDb db ) {}
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > deleteAsync ( com.google.gerrit.reviewdb.client.Change change ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( change , true ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
private Account.Id id ( int n ) { return new com.google.gerrit.reviewdb.client.Account.Id ( n ) ; }
private boolean canSkipValidation ( com.google.gerrit.server.config.PluginConfig config , java.lang.String validatorOp ) { return matchCriteria ( config , STRING_CONSTANT , validatorOp , false , false ) ; }
public void onSuccess ( final com.google.gerrit.client.reviewdb.Account result ) { if ( result != null ) { com.google.gerrit.client.Gerrit . postSignIn ( result , null ) ; } else { com.google.gwt.user.client.Cookies . removeCookie ( com.google.gerrit.client.Gerrit.ACCOUNT_COOKIE ) ; com.google.gerrit.client.Gerrit . refreshMenuBar () ; } showInitialScreen () ; }
private static java.lang.String id ( final int id ) { return com.google.gerrit.server.util.IdGenerator . format ( id ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public com.google.common.util.concurrent.ListenableFuture < java.lang.Object > apply ( java.lang.Boolean indexUpdated ) throws java.lang.Exception { if ( ! indexUpdated ) { return ( ( com.google.common.util.concurrent.ListenableFuture < java.lang.Object > ) ( indexer . indexAsync ( id ) ) ) ; } return com.google.common.util.concurrent.Futures . immediateFuture ( null ) ; }
private java.util.Map < java.lang.String , org.eclipse.jgit.lib.Ref > filter ( java.util.Map < java.lang.String , org.eclipse.jgit.lib.Ref > refs ) { return filter ( refs , false ) ; }
public static void editWithFiles ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.info.ChangeInfo.EditInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . edit ( project , id ) . addParameterTrue ( STRING_CONSTANT ) . get ( cb ) ; }
public void beforeTest ( ) throws java.lang.Exception { notesMigration = new com.google.gerrit.testutil.TestNotesMigration () ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; Util.LIST_SVC . myStarredChanges ( loadCallback () ) ; }
private void assertNoIncludes ( java.lang.String group ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( gApi . groups () . id ( group ) . includedGroups () ) . isEmpty () ; }
private void deletePatchSet ( java.lang.String changeId , com.google.gerrit.reviewdb.client.PatchSet ps ) throws java.lang.Exception { deletePatchSet ( changeId , ps . getId () . get () ) ; }
@ java.lang.Override public void configure () { bind ( com.google.gerrit.server.CurrentUser . class ) . toInstance ( user ) ; }
public void setEmail ( java.lang.String email ) { this . email = email ; }
@ org.junit.Test public void commentOnReviewableChangeByOwnerCcingSelfNotifyOwner ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageReviewableChange ( com.google.gerrit.server.account.WatchConfig.NotifyType.ALL_COMMENTS ) ; setEmailStrategy ( sc.owner , com.google.gerrit.extensions.client.GeneralPreferencesInfo.EmailStrategy.CC_ON_OWN_COMMENTS ) ; review ( sc.owner , sc.changeId , com.google.gerrit.extensions.client.GeneralPreferencesInfo.EmailStrategy.ENABLED , com.google.gerrit.extensions.api.changes.NotifyHandling.OWNER ) ; assertThat ( sender ) . notSent () ; }
private void initDownloadAction ( com.google.gerrit.client.changes.ChangeInfo info , java.lang.String revision ) { downloadAction = new com.google.gerrit.client.change.DownloadAction ( info , revision , style , headerLine , download ) ; }
public com.google.gerrit.common.data.LabelType byLabel ( com.google.gerrit.reviewdb.client.PatchSetApproval.LabelId labelId ) { return byLabel () . get ( labelId . get () . toLowerCase () ) ; }
@ org.junit.Test public void includeExistingGroup_OK ( ) throws java.lang.Exception { group ( STRING_CONSTANT ) ; PUT ( STRING_CONSTANT ) . consume () ; com.google.common.truth.Truth . assertThat ( PUT ( STRING_CONSTANT ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_OK ) ; }
public void clearStarredChanges () { abortStarredChanges () ; starredChanges = null ; }
java.util.List < com.google.gerrit.extensions.common.ChangeInfo > submittedTogether ( ) throws com.google.gerrit.extensions.restapi.RestApiException ;
private java.util.Collection < com.google.gerrit.extensions.common.AccountInfo > suggestAccounts ( com.google.gerrit.server.change.SuggestReviewers suggestReviewers , com.google.gerrit.server.ReviewersUtil.VisibilityControl visibilityControl ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.server.index.account.AccountIndex searchIndex = indexes . getSearchIndex () ; if ( searchIndex != null ) { return suggestAccountsFromIndex ( suggestReviewers , visibilityControl ) ; } return suggestAccountsFromDb ( suggestReviewers , visibilityControl ) ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( boolean publishOnPatchSetCreated ) throws java.lang.Exception { return getConfig ( STRING_CONSTANT , publishOnPatchSetCreated , true , true , true ) ; }
private boolean canRunUploadPack () { for ( com.google.gerrit.reviewdb.client.AccountGroup.UUID group : uploadGroups ) { if ( match ( group ) ) { return true ; } } return false ; }
@ java.lang.Override public void merge ( com.google.gerrit.reviewdb.client.Branch.NameKey branch ) { if ( start ( branch ) ) { mergeImpl ( branch ) ; } }
@ java.lang.Override public java.lang.String format ( java.lang.String projectName , java.lang.String revision , com.googlesource.gerrit.plugins.xdocs.ConfigSection cfg , java.lang.String raw ) { return ( STRING_CONSTANT + ( org.apache.commons.lang.StringEscapeUtils . escapeHtml ( raw ) ) ) + STRING_CONSTANT ; }
public static com.google.gerrit.client.reviewdb.Patch.Key parse ( final java.lang.String str ) { final com.google.gerrit.client.reviewdb.Patch.Key r = new com.google.gerrit.client.reviewdb.Patch.Key () ; r . fromString ( str ) ; return r ; }
private java.util.List < com.google.gerrit.server.query.change.ChangeData > byTopicOpen ( java.lang.String topic ) throws com.google.gwtorm.server.OrmException { return queryProvider . get () . byTopicOpen ( topic ) ; }
@ java.lang.Override public void addReviewer ( com.google.gerrit.extensions.api.changes.AddReviewerInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { postReviewers . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | com.google.gerrit.common.errors.EmailException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
private void cancel ( final javax.servlet.http.HttpServletRequest req , final javax.servlet.http.HttpServletResponse rsp ) throws java.io.IOException { callback ( req , rsp ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onIgnoreWhitespace ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ChangeEvent e ) { prefs . ignoreWhitespace ( com.google.gerrit.reviewdb.client.AccountDiffPreference.Whitespace . valueOf ( ignoreWhitespace . getValue ( ignoreWhitespace . getSelectedIndex () ) ) ) ; if ( ( view ) != null ) { view . reloadDiffInfo () ; } }
private com.google.gerrit.server.git.strategy.SubmitStrategy createStrategy ( com.google.gerrit.extensions.client.SubmitType submitType ) throws com.google.gerrit.server.git.MergeException , com.google.gerrit.server.project.NoSuchProjectException { return submitStrategyFactory . create ( submitType , db , repo , rw , inserter , canMergeFlag , getAlreadyAccepted ( branchTip ) , destBranch ) ; }
public void addPatchSets ( com.google.gerrit.server.events.ChangeAttribute a , java.util.Collection < com.google.gerrit.reviewdb.client.PatchSet > ps ) { addPatchSets ( a , ps , null , false , null ) ; }
private boolean isLdapUUID ( com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid ) { return uuid . get () . startsWith ( com.google.gerrit.server.auth.ldap.Helper.LDAP_UUID ) ; }
@ java.lang.Override void operation ( java.lang.Runnable apply ) { cmA . operation ( ( ) - > cmB . operation ( apply : : run ) ) ; }
@ java.lang.Override public void onSuccess ( com.google.gwt.core.client.JsArrayString result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( project , psId . getParentKey () , java.lang.String . valueOf ( psId . get () ) ) ) ; }
@ org.junit.Test public void testHashCodeWhenNull () { final com.google.gwtorm.client.IntKeyTestCase.Parent p = new com.google.gwtorm.client.IntKeyTestCase.Parent ( NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , p . hashCode () ) ; }
private static com.google.gerrit.server.account.AccountState newState ( com.google.gerrit.reviewdb.client.Account account ) { return new com.google.gerrit.server.account.AccountState ( new com.google.gerrit.server.config.AllUsersName ( com.google.gerrit.server.config.AllUsersNameProvider.DEFAULT ) , account , com.google.common.collect.ImmutableSet . of () , new java.util.HashMap <> () ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { project2 = createProject ( STRING_CONSTANT ) ; project3 = createProject ( STRING_CONSTANT ) ; }
@ java.lang.Override void onRefReplicatedToAllNodes ( java.lang.String project , java.lang.String ref , int nodesCount ) { postEvent ( new com.googlesource.gerrit.plugins.replication.RefReplicationDoneEvent ( project , ref , nodesCount ) ) ; }
private void generateProxyMethods ( final com.google.gwt.user.rebind.SourceWriter srcWriter ) { final com.google.gwt.core.ext.typeinfo.JMethod [] methodList = svcInf . getOverridableMethods () ; for ( final com.google.gwt.core.ext.typeinfo.JMethod m : methodList ) { generateProxyMethod ( m , srcWriter ) ; } }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byCommit ( java.lang.String hash ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.change.InternalChangeQuery . commit ( hash ) ) ; }
private void clearActiveLine ( net.codemirror.lib.CodeMirror cm ) { if ( cm . hasActiveLine () ) { net.codemirror.lib.CodeMirror.LineHandle activeLine = cm . activeLine () ; cm . removeLineClass ( activeLine , LineClassWhere.WRAP , DiffTable.style . activeLine () ) ; cm . activeLine ( null ) ; } }
public void add ( final com.google.gwtexpui.globalkey.client.KeyCommand k ) { assert ! ( map . containsKey ( k.keyMask ) ) ; if ( ! ( map . containsKey ( k.keyMask ) ) ) { map . put ( k.keyMask , k ) ; } }
@ org.junit.Test public void getTask_NotFound ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = userSession . get ( ( STRING_CONSTANT + ( getLogFileCompressorTaskId () ) ) ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
com.google.gerrit.extensions.restapi.RestModifyView < P , > create ( P parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.RestApiException ;
@ java.lang.Override public com.google.gerrit.server.account.AccountInfo apply ( com.google.gerrit.server.group.MemberResource resource , com.google.gerrit.server.group.AddMembers.PutMember.Input input ) throws com.google.gwtorm.server.OrmException { return get . apply ( resource ) ; }
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { com.google.gerrit.client.Gerrit . display ( event . getValue () ) ; }
public void setActive ( boolean active ) { this . active = active ; if ( ( myTable ) != null ) { myTable . setActive ( active ) ; } }
private static com.google.gerrit.client.rpc.RestApi call ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , java.lang.String commit , java.lang.String action ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) . id ( commit ) . view ( action ) ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.server.project.ProjectState input ) { return input . getProject () . getNameKey () . equals ( ctl . getProject () . getNameKey () ) ; }
com.google.gerrit.acceptance.server.mail.StagedChange stage ( ) throws java.lang.Exception ;
private static final native void init ( java.lang.String d , java.lang.String e , java.lang.String r , java.lang.String o ) ;
public com.google.common.util.concurrent.CheckedFuture < , java.io.IOException > indexAsync ( com.google.gerrit.reviewdb.client.Change change ) { return ( executor ) != null ? submit ( new com.google.gerrit.server.index.ChangeIndexer.Task ( new com.google.gerrit.server.query.change.ChangeData ( change ) , false ) ) : com.google.common.util.concurrent.Futures . < java.lang.Object , java.io.IOException > immediateCheckedFuture ( null ) ; }
public static com.google.gerrit.index.query.Predicate < com.google.gerrit.reviewdb.client.AccountGroup > name ( java.lang.String name ) { return new com.google.gerrit.server.query.group.GroupPredicates.GroupPredicate ( com.google.gerrit.server.index.group.GroupField.NAME , GroupQueryBuilder.FIELD_NAME , name ) ; }
private java.lang.String getImageUrl () { return ( STRING_CONSTANT + ( pluginName ) ) + STRING_CONSTANT ; }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { gotoSibling ( ( - NUMBER_CONSTANT ) ) ; }
private com.google.gerrit.server.notedb.ChangeNotesParser newParser ( org.eclipse.jgit.lib.ObjectId tip ) throws java.lang.Exception { com.google.gerrit.reviewdb.client.Change c = newChange () ; return new com.google.gerrit.server.notedb.ChangeNotesParser ( c . getProject () , c . getId () , tip , walk , repoManager ) ; }
@ java.lang.Override protected void init ( ) throws com.google.gerrit.common.errors.EmailException { super . init () ; ccAllApprovals () ; bccStarredBy () ; includeWatchers ( NotifyType.ABANDONED_CHANGES ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { com.google.gwtorm.client.KeyUtil . setEncoderImpl ( new com.google.gwtorm.server.StandardKeyEncoder () ) ; }
public final native void matchBrackets ( boolean m ) ;
@ org.junit.Test public void repeatedHashtag ( ) throws java.lang.Exception { java.lang.String commitMessage = STRING_CONSTANT ; com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( commitMessage ) ) . containsExactlyElementsIn ( com.google.common.collect.Sets . newHashSet ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ) ; }
@ java.lang.Override protected java.lang.Object createServiceHandle ( ) throws java.lang.Exception { return new com.google.gerrit.server.AccountServiceImpl ( server ) ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.common.PageLinks . toChange ( revision . getParentKey () , revision . getId () ) ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return com.google.gerrit.server.notedb.ChangeNoteUtil . changeRefName ( getId () ) ; }
void setName ( final java.lang.String name ) { this . name = name ; }
private boolean canUploadMerges () { return ( projectControl . controlForRef ( ( STRING_CONSTANT + ( getRefName () ) ) ) . canPerform ( Permission.PUSH_MERGE ) ) && ( isProjectStatePermittingWrite () ) ; }
@ org.junit.Test public void testNonIndexPredicate ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertSame ( in , rewrite ( in ) ) ; }
public void onCellClicked ( com.google.gwt.user.client.ui.SourcesTableEvents sender , int row , int cell ) { if ( row > NUMBER_CONSTANT ) { movePointerTo ( row ) ; } }
@ java.lang.Override protected void preDisplay ( java.lang.Void result ) { initEditor ( content ) ; content = null ; renderLinks ( editFileInfo , diffLinks ) ; editFileInfo = null ; diffLinks = null ; }
public static java.lang.String toPatch ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.client.DiffObject diffBase , com.google.gerrit.reviewdb.client.PatchSet.Id revision , java.lang.String fileName , com.google.gerrit.client.diff.DisplaySide side , int line ) { return com.google.gerrit.client.Dispatcher . toPatch ( STRING_CONSTANT , project , diffBase , revision , fileName , side , line ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.changes.ChangeInfo info ) { info . init () ; loadConfigInfo ( info , base ) ; }
@ java.lang.Override public boolean isVisibleTo ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.server.IdentifiedUser who = identifiedUserFactory . create ( dbProvider , account ) ; return rsrc . getControl () . forUser ( who ) . isRefVisible () ; }
@ java.lang.Override public com.google.gerrit.server.change.Description getDescription ( com.google.gerrit.server.change.ChangeResource rsrc ) { return new com.google.gerrit.extensions.webui.UiAction.Description () . setLabel ( STRING_CONSTANT ) . setTitle ( STRING_CONSTANT ) . setVisible ( isMuteable ( rsrc ) ) ; }
private void onPatchSetCreated ( final com.google.gerrit.server.events.PatchSetCreatedEvent event ) { com.google.gerrit.server.data.ChangeAttribute change = event.change . get () ; if ( atomicityHelper . isAtomicReview ( change ) ) { processNewAtomicPatchSet ( change ) ; } }
static int mix ( int in ) { return com.google.gerrit.server.util.IdGenerator . mix ( com.google.gerrit.server.util.IdGenerator.salt , in ) ; }
public static boolean isInternalGroup ( com.google.gerrit.reviewdb.client.AccountGroup.UUID uuid ) { return uuid . get () . matches ( STRING_CONSTANT ) ; }
public static void addOptions ( com.google.gerrit.client.rpc.RestApi call , java.util.Set < com.google.gerrit.extensions.client.ListChangesOption > s ) { call . addParameterRaw ( STRING_CONSTANT , java.lang.Integer . toHexString ( com.google.gerrit.extensions.client.ListChangesOption . toBits ( s ) ) ) ; }
@ java.lang.Override public void setPrivate ( boolean value , @ com.google.gerrit.common.Nullable java.lang.String message ) { throw new com.google.gerrit.extensions.restapi.NotImplementedException () ; }
private java.lang.String nullToEmpty ( @ javax.annotation.Nullable java.lang.String str ) { return str == null ? STRING_CONSTANT : str ; }
java.lang.String patchSets ( int currentlyViewedPatchSet , int currentPatchSet ) ;
private java.lang.String url ( com.google.gerrit.client.changes.ChangeInfo.RevisionInfo r ) { return com.google.gerrit.common.PageLinks . toChange ( changeId , r . id () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gerrit.server.project.ChangeControl create ( com.google.gerrit.server.project.RefControl refControl , com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return create ( refControl , notesFactory . create ( db , change ) ) ; }
public com.google.gerrit.server.project.ProjectState getParentState () { if ( isAllProjects ) { return null ; } return projectCache . get ( getProject () . getParent ( allProjectsName ) ) ; }
private static void addApproval ( com.google.gerrit.extensions.common.LabelInfo label , com.google.gerrit.extensions.common.ApprovalInfo approval ) { if ( ( label.all ) == null ) { label.all = new java.util.ArrayList <> () ; } label.all . add ( approval ) ; }
@ org.junit.Test public void addToNonExistingGroup_NotFound ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( PUT ( STRING_CONSTANT ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { block ( STRING_CONSTANT , Permission.PUSH , com.google.gerrit.server.group.SystemGroupBackend.ANONYMOUS_USERS ) ; }
@ java.lang.Override public java.lang.String [] aliases () { return new java.lang.String [ NUMBER_CONSTANT ] ; }
@ org.junit.Test public void testCreateProjectWithNonExistingOwner_UnprocessableEntity ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = name ( STRING_CONSTANT ) ; in.owners = java.util.Collections . singletonList ( STRING_CONSTANT ) ; assertCreateFails ( in , com.google.gerrit.extensions.restapi.UnprocessableEntityException . class ) ; }
@ java.lang.Override public java.lang.String render ( java.lang.Integer object ) { if ( NUMBER_CONSTANT <= object ) { return STRING_CONSTANT + object ; } return java.lang.String . valueOf ( object ) ; }
public static com.google.gerrit.index.query.Predicate < com.google.gerrit.server.account.AccountState > cansee ( com.google.gerrit.server.query.account.AccountQueryBuilder.Arguments args , com.google.gerrit.server.notedb.ChangeNotes changeNotes ) { return new com.google.gerrit.server.query.account.CanSeeChangePredicate ( args.db , args.permissionBackend , changeNotes ) ; }
public com.google.gerrit.client.reviewdb.Account run ( com.google.gerrit.client.reviewdb.ReviewDb db ) throws com.google.gwtorm.client.OrmException { return db . accounts () . get ( com.google.gerrit.client.rpc.RpcUtil . getAccountId () ) ; }
@ java.lang.Override public void execute () { lgtm . run () ; }
public com.google.gerrit.gpg.PublicKeyChecker disableTrust () { trusted = null ; return this ; }
@ java.lang.Override public void run () { com.google.gerrit.pgm.Daemon.log . info ( STRING_CONSTANT ) ; stop () ; }
private java.util.Map < java.lang.String , java.util.List < com.google.gitiles.blame.BlameServletTest.RegionJsonData > > getBlameJson ( java.lang.String path ) throws java.lang.Exception { return buildJson ( path , new com.google.gson.reflect.TypeToken < java.util.Map < java.lang.String , java.util.List < com.google.gitiles.blame.BlameServletTest.RegionJsonData > > > () {} ) ; }
public static void query ( java.lang.String query , java.util.Set < com.google.gerrit.extensions.client.ListChangesOption > options , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.ChangeList > callback ) { com.google.gerrit.client.rpc.RestApi call = com.google.gerrit.client.changes.ChangeList . newQuery ( query ) ; com.google.gerrit.client.changes.ChangeList . addOptions ( call , options ) ; call . get ( callback ) ; }
public static com.criteo.gerrit.plugins.automerge.Change from ( com.google.gerrit.server.data.ChangeAttribute changeAttribute ) { return new com.criteo.gerrit.plugins.automerge.Change ( changeAttribute.project , changeAttribute.number , changeAttribute.id , changeAttribute.topic , changeAttribute.branch ) ; }
private static com.google.gerrit.client.rpc.RestApi editMessage ( @ com.google.gerrit.common.Nullable java.lang.String project , int id ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) ; }
void setLineNumber ( com.google.gerrit.client.diff.DisplaySide side , int cmLine , int line ) { setLineNumber ( side , cmLine , line , UnifiedTable.style . unifiedLineNumber () ) ; }
private boolean canUpload () { return projectControl . controlForRef ( ( STRING_CONSTANT + ( refName ) ) ) . canPerform ( Permission.PUSH ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { local = new com.google.gerrit.server.git.ProjectConfig ( localKey ) ; local . createInMemory () ; util . add ( local ) ; }
private static boolean matchPrefix ( java.lang.String want , java.lang.String token ) { if ( token . startsWith ( want ) ) { com.google.gerrit.client.Dispatcher.prefixlen = want . length () ; return true ; } return false ; }
public java.util.List < com.google.gerrit.common.data.SubmitRecord > canSubmit ( com.google.gerrit.reviewdb.server.ReviewDb db , com.google.gerrit.reviewdb.client.PatchSet patchSet ) { return canSubmit ( db , patchSet , null , false ) ; }
@ java.lang.Override protected void onInitUI () { super . onInitUI () ; groups = new com.google.gerrit.client.admin.GroupTable ( true ) ; add ( groups ) ; }
@ org.junit.Test public void getNonExistingChildProject_NotFound ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( GET ( ( ( STRING_CONSTANT + ( allProjects . get () ) ) + STRING_CONSTANT ) ) . getStatusCode () ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.Change update ( com.google.gerrit.reviewdb.client.Change change ) { if ( change . getStatus () . isOpen () ) { change . nextPatchSetId () ; change . setLastSha1MergeTested ( null ) ; return change ; } else { return null ; } }
@ java.lang.Override protected void configure () { listener () . to ( WorkQueue.Lifecycle . class ) ; }
@ java.lang.Override public boolean isGenericAddress ( com.google.gerrit.reviewdb.Account.Id fromId ) { return false ; }
public static < T > com.google.gerrit.rules.StoredValue < T > create () { return new com.google.gerrit.rules.StoredValue < T > () ; }
protected com.google.gitiles.FakeHttpServletResponse buildText ( java.lang.String path ) throws java.lang.Exception { com.google.gitiles.FakeHttpServletResponse res = buildResponse ( path , STRING_CONSTANT , javax.servlet.http.HttpServletResponse.SC_OK ) ; com.google.common.truth.Truth . assertThat ( res . getHeader ( com.google.common.net.HttpHeaders.CONTENT_TYPE ) ) . isEqualTo ( STRING_CONSTANT ) ; return res ; }
@ java.lang.Override public java.lang.String format ( java.lang.String projectName , com.googlesource.gerrit.plugins.xdocs.ConfigSection cfg , java.lang.String raw ) throws java.io.IOException { return Asciidoctor.Factory . create ( com.googlesource.gerrit.plugins.xdocs.formatter.AsciidoctorFormatter . class . getClassLoader () ) . convert ( raw , new java.util.HashMap < java.lang.String , java.lang.Object > () ) ; }
private java.util.List < com.google.gerrit.server.patch.PatchListEntry > getCurrentPatches ( java.lang.String changeId ) throws com.google.gerrit.extensions.restapi.RestApiException , com.google.gerrit.server.patch.PatchListNotAvailableException { return patchListCache . get ( getKey ( null , getCurrentRevisionId ( changeId ) ) , project ) . getPatches () ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { com.google.gerrit.testutil.InMemoryDatabase . drop ( db ) ; }
@ java.lang.Override public void start () { if ( ( graphiteReporter ) != null ) { graphiteReporter . start ( rate , com.googlesource.gerrit.plugins.metricsreporters.GerritGraphiteReporter.DEFAULT_RATE_UNIT ) ; } }
public org.eclipse.jgit.revwalk.RevCommit commit ( ) throws java.io.IOException { return commit ( com.google.common.base.Preconditions . checkNotNull ( updateFactory , STRING_CONSTANT ) . create ( change . getProject () , user ) ) ; }
private void addExternalId ( java.lang.String scheme , java.lang.String id , java.lang.String email ) throws java.lang.Exception { externalIdsUpdateFactory . create () . insert ( com.google.gerrit.server.account.externalids.ExternalId . createWithEmail ( scheme , id , user . getAccountId () , email ) ) ; reloadUser () ; }
T get ( I input , com.google.gerrit.server.index.FieldDef.FillArgs args ) throws com.google.gwtorm.server.OrmException , java.io.IOException ;
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.RequestCleanup . class ) . in ( com.google.inject.servlet.RequestScoped . class ) ; bind ( com.google.gerrit.server.config.RequestScopedReviewDbProvider . class ) ; bind ( IdentifiedUser.RequestFactory . class ) . in ( com.google.inject.Scopes.SINGLETON ) ; }
@ java.lang.Override protected void onOpenRow ( final int row ) { super . onOpenRow ( row ) ; nameBox . setText ( getRowItem ( row ) . name () ) ; doAddNew () ; }
public void valid ( final com.google.gerrit.common.data.LabelType lt , final boolean v ) { valid . put ( lt . getName () , v ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onCancel ( com.google.gwt.event.dom.client.ClickEvent e ) { setEdit ( false ) ; }
void postEvent ( com.google.gerrit.server.events.Event event , com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException ;
public void clear () { set ( null ) ; }
@ java.lang.Override public Project.NameKey getProjectNameKey () { return new com.google.gerrit.reviewdb.client.Project.NameKey ( refUpdate . get () . project ) ; }
public com.google.gerrit.server.mail.MergedSender create ( com.google.gerrit.reviewdb.client.Change.Id id ) ;
@ org.junit.Test public void testPushForMaster ( ) throws com.google.gwtorm.server.OrmException , java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.git.PushOneCommit.Result r = pushTo ( STRING_CONSTANT ) ; r . assertOkStatus () ; r . assertChange ( Change.Status.NEW , null ) ; }
@ org.junit.Test public void createProjectFoo ( ) throws java.lang.Exception { java.lang.String name = name ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( name ) . isEqualTo ( gApi . projects () . create ( name ) . get () . name ) ; }
@ java.lang.Override public java.util.List < com.google.gerrit.server.git.validators.CommitValidationMessage > onCommitReceived ( com.google.gerrit.server.events.CommitReceivedEvent receiveEvent ) throws com.google.gerrit.server.git.validators.CommitValidationException { throw new com.google.gerrit.server.git.validators.CommitValidationException ( message ) ; }
private void loadAccountsSection ( org.eclipse.jgit.lib.Config rc ) { accountsSection = new com.google.gerrit.server.git.AccountsSection () ; accountsSection . setSameGroupVisibility ( loadPermissionRules ( rc , com.google.gerrit.server.git.ProjectConfig.ACCOUNTS , null , com.google.gerrit.server.git.ProjectConfig.KEY_SAME_GROUP_VISIBILITY , groupsByName , false ) ) ; }
@ org.junit.Test public void testFirstParentAltersId ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) , call ( STRING_CONSTANT ) ) ; setHEAD () ; org.junit.Assert . assertEquals ( ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) , call ( STRING_CONSTANT ) ) ; }
public com.google.gerrit.server.git.WorkQueue.Executor createQueue ( int poolsize , java.lang.String prefix ) { final com.google.gerrit.server.git.WorkQueue.Executor r = new com.google.gerrit.server.git.WorkQueue.Executor ( poolsize , prefix ) ; r . setContinueExistingPeriodicTasksAfterShutdownPolicy ( false ) ; r . setExecuteExistingDelayedTasksAfterShutdownPolicy ( true ) ; queues . add ( r ) ; return r ; }
@ java.lang.Override public void merge ( final com.google.gerrit.client.reviewdb.Branch.NameKey branch ) { if ( start ( branch ) ) { mergeImpl ( branch ) ; } }
private void initChangeRepo ( ) throws java.io.IOException { if ( ( changeRepo ) == null ) { changeRepo = openRepo ( projectName ) ; } }
public boolean canRestore ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( canAbandon ( db ) ) && ( getRefControl () . canUpload () ) ; }
@ java.lang.Override public void run () { cmA . setHeight ( height ) ; cmB . setHeight ( height ) ; cmA . refresh () ; cmB . refresh () ; }
public com.google.gerrit.client.reviewdb.Change.Id getId () { return changeId ; }
public java.util.List < com.google.gerrit.server.query.change.ChangeData > byProjectOpen ( com.google.gerrit.reviewdb.client.Project.NameKey project ) throws com.google.gwtorm.server.OrmException { return query ( com.google.gerrit.server.query.Predicate . and ( com.google.gerrit.server.query.change.InternalChangeQuery . project ( project ) , com.google.gerrit.server.query.change.ChangeStatusPredicate . open () ) ) ; }
private java.lang.String newChange ( org.eclipse.jgit.api.Git git , org.eclipse.jgit.lib.PersonIdent ident ) throws java.lang.Exception { com.google.gerrit.acceptance.PushOneCommit push = pushFactory . create ( db , ident , PushOneCommit.SUBJECT , com.google.gerrit.acceptance.edit.ChangeEditIT.FILE_NAME , new java.lang.String ( com.google.gerrit.acceptance.edit.ChangeEditIT.CONTENT_OLD ) ) ; return push . to ( git , STRING_CONSTANT ) . getChangeId () ; }
private void setNew ( com.google.gerrit.server.git.CodeReviewCommit c , com.google.gerrit.reviewdb.client.ChangeMessage msg ) { sendMergeFail ( c . notes () , msg , true ) ; }
@ java.lang.Override public com.google.gerrit.server.account.GroupMembership membershipsOf ( com.google.gerrit.server.IdentifiedUser user ) { java.lang.String username = user . getUserName () ; if ( com.google.common.base.Strings . isNullOrEmpty ( username ) ) { return com.google.gerrit.server.account.GroupMembership.EMPTY ; } else { return ghMembershipProvider . get ( username ) ; } }
public void onSuccess ( final com.google.gerrit.common.data.PatchSetDetail result ) { fileList . display ( result ) ; }
public static com.google.gerrit.server.git.ValidationError.Sink createLoggerSink ( java.lang.String message , org.slf4j.Logger log ) { return ( error ) - > log . error ( ( message + ( error . getMessage () ) ) ) ; }
@ java.lang.Override public void message ( java.lang.String message ) { java.lang.System.err . println ( message ) ; java.lang.System.err . flush () ; }
@ org.junit.Test @ com.google.gerrit.acceptance.GerritConfig ( name = STRING_CONSTANT , value = STRING_CONSTANT ) public void suggestReviewersNoResult3 ( ) throws java.io.IOException , java.lang.Exception , org.eclipse.jgit.api.errors.GitAPIException { java.lang.String changeId = createChange () . getChangeId () ; java.util.List < com.google.gerrit.server.change.SuggestReviewers.SuggestedReviewerInfo > reviewers = suggestReviewers ( changeId , STRING_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( reviewers . size () , NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.util.Optional < com.google.gerrit.server.account.AccountState > load ( com.google.gerrit.reviewdb.client.Account.Id who ) throws java.lang.Exception { return accounts . get ( who ) ; }
private com.google.gerrit.client.ui.Screen createScreen () { return ( info ) != null ? new com.google.gerrit.client.changes.ChangeScreen ( info ) : new com.google.gerrit.client.changes.ChangeScreen ( id ) ; }
protected org.eclipse.jgit.lib.Repository getRepository ( ) throws java.io.IOException { initRepository () ; return repo ; }
@ java.lang.Override public java.lang.Object apply ( com.google.gerrit.server.change.ChangeResource rsrc , com.google.gerrit.server.change.Index.Input input ) throws java.io.IOException { indexer . index ( rsrc . getChange () ) ; return com.google.gerrit.extensions.restapi.Response . none () ; }
java.lang.String publishComments ( java.lang.String changeId , int ps ) ;
com.google.gerrit.server.api.projects.DashboardApiImpl create ( com.google.gerrit.server.project.ProjectResource project , java.lang.String id ) ;
public com.google.gerrit.server.events.AccountAttribute asAccountAttribute ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( id == null ) { return null ; } return asAccountAttribute ( accountCache . get ( id ) . getAccount () ) ; }
@ java.lang.Override public void onTimeout ( org.eclipse.jetty.continuation.Continuation self ) { executor . remove ( this ) ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onCancel ( com.google.gwt.event.dom.client.ClickEvent e ) { input . setFocus ( false ) ; com.google.gwt.user.client.ui.UIObject . setVisible ( form , false ) ; }
@ java.lang.Override public boolean updateChange ( com.google.gerrit.server.git.BatchUpdate.ChangeContext ctx ) { ctx . getUpdate ( psId ) . setTopic ( magicBranch.topic ) ; return true ; }
private java.util.Optional < com.google.gerrit.common.data.GroupReference > loadGroup ( com.google.gerrit.reviewdb.client.AccountGroup.NameKey groupName ) throws java.lang.Exception { return com.google.gerrit.server.group.db.GroupNameNotes . loadGroup ( repo , groupName ) ; }
public void setPushCertificate ( java.lang.String cert ) { pushCert = cert ; }
protected static com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > onePredicate ( com.google.gerrit.server.query.change.LabelPredicate.Args args , java.lang.String label , int expVal ) { if ( expVal != NUMBER_CONSTANT ) { return com.google.gerrit.server.query.change.LabelPredicate . equalsLabelPredicate ( args , label , expVal ) ; } return com.google.gerrit.server.query.change.LabelPredicate . noLabelQuery ( args , label ) ; }
@ java.lang.Override public void run () { openIndex . close () ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( ( event . getCharCode () ) == ( com.google.gwt.event.dom.client.KeyCodes.KEY_ENTER ) ) { doSearch () ; } }
private void assertGone ( javax.servlet.http.HttpServletRequest req ) throws java.lang.Exception { com.google.gitiles.FakeHttpServletResponse res = new com.google.gitiles.FakeHttpServletResponse () ; servlet . service ( req , res ) ; com.google.common.truth.Truth . assertThat ( res . getStatus () ) . isEqualTo ( javax.servlet.http.HttpServletResponse.SC_GONE ) ; }
public static java.lang.String cleanupHashtag ( java.lang.String hashtag ) { hashtag = com.google.gerrit.server.change.HashtagsUtil.LEADER . trimLeadingFrom ( hashtag ) ; hashtag = com.google.common.base.CharMatcher.WHITESPACE . trimTrailingFrom ( hashtag ) ; return hashtag ; }
@ java.lang.Override public void insert ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException {}
@ java.lang.Override protected void writeOne ( java.lang.CharSequence line ) throws java.io.IOException { writer . append ( line ) ; }
private static com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > commit ( java.lang.String id ) { return new com.google.gerrit.server.query.change.ExactCommitPredicate ( id ) ; }
public java.lang.String format ( java.lang.String projectName , java.lang.String revision , com.googlesource.gerrit.plugins.xdocs.ConfigSection cfg , java.lang.String raw ) throws java.io.IOException ;
@ org.junit.Test public void abandonReviewableChangeNotifyOwnerCcingSelf ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageReviewableChange () ; abandon ( sc.changeId , sc.owner , com.google.gerrit.extensions.client.GeneralPreferencesInfo.EmailStrategy.CC_ON_OWN_COMMENTS , com.google.gerrit.extensions.api.changes.NotifyHandling.OWNER ) ; assertThat ( sender ) . notSent () ; }
public void setPrologClassLoader ( com.googlecode.prolog_cafe.lang.PrologClassLoader cl ) { engine.pcl = cl ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onAdd ( @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) com.google.gwt.event.dom.client.ClickEvent e ) { addReviewer ( suggestBox . getText () , false ) ; }
@ java.lang.Override public void onSuccess () { com.google.gerrit.client.Gerrit . display ( token , new com.google.gerrit.client.editor.EditScreen ( project , id , line ) ) ; }
private void loadConfig ( java.lang.String configFilename ) throws java.lang.Exception { pushConfig ( configFilename ) ; configLoader = new com.googlesource.gerrit.plugins.automerger.ConfigLoader ( gApi , allProjectsName , STRING_CONSTANT , canonicalWebUrl , cfgFactory , user ) ; }
private boolean canForgeGerritServerIdentity () { return canPerform ( Permission.FORGE_SERVER ) ; }
@ java.lang.Override protected java.lang.String decode ( final int s , int e ) { if ( ( charset ) == null ) { charset = com.google.gerrit.server.patch.Text . charset ( content , null ) ; } return org.eclipse.jgit.util.RawParseUtils . decode ( charset , content , s , e ) ; }
public void addTo ( org.eclipse.jgit.lib.BatchRefUpdate bru ) { for ( org.eclipse.jgit.transport.ReceiveCommand cmd : commands . values () ) { bru . addCommand ( cmd ) ; } }
protected void createFileCommentEditorOnSideA () { createCommentEditor ( ( ( R_HEAD ) + NUMBER_CONSTANT ) , com.google.gerrit.client.patches.SideBySideTable.A , com.google.gerrit.client.patches.R_HEAD , com.google.gerrit.client.patches.FILE_SIDE_A ) ; }
@ java.lang.Override protected void runImpl ( ) throws java.io.IOException { final org.spearce.jgit.transport.UploadPack up = new org.spearce.jgit.transport.UploadPack ( repo ) ; up . upload ( in , out , err ) ; }
protected org.eclipse.jgit.junit.TestRepository < > createProjectWithPush ( java.lang.String name , @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey parent ) throws java.lang.Exception { return createProjectWithPush ( name , parent , true , getSubmitType () ) ; }
@ java.lang.Override public java.util.List < com.gitblit.models.TeamModel > getAllTeams () { return null ; }
public org.eclipse.jgit.lib.Config getProjectPluginConfigWithInheritance ( com.google.gerrit.reviewdb.client.Project.NameKey projectName , java.lang.String pluginName ) throws com.google.gerrit.server.project.NoSuchProjectException { return getPluginConfig ( projectName , pluginName ) . getWithInheritance ( false ) ; }
@ org.junit.Test public void abandon ( ) throws com.google.gerrit.extensions.restapi.RestApiException , java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException { com.google.gerrit.acceptance.PushOneCommit.Result r = createChange () ; gApi . changes () . id ( r . getChangeId () ) . abandon () ; }
com.google.gerrit.server.mail.CommentSender create ( com.google.gerrit.reviewdb.client.Change.Id id ) ;
public void setUserAccountId ( com.google.gerrit.reviewdb.client.Account.Id id ) { key = new com.google.gerrit.httpd.WebSessionManager.Key ( ( STRING_CONSTANT + id ) ) ; val = new com.google.gerrit.httpd.WebSessionManager.Val ( id , NUMBER_CONSTANT , false , null , NUMBER_CONSTANT , null ) ; }
void setReviewed ( boolean reviewed ) { checkBox . setValue ( reviewed , true ) ; }
@ org.junit.Test public void removeFromNonExistingGroup_NotFound ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( DELETE ( STRING_CONSTANT ) ) . isEqualTo ( HttpStatus.SC_NOT_FOUND ) ; }
@ java.lang.Override public com.google.gerrit.extensions.common.WebLinkInfo apply ( com.google.gerrit.extensions.webui.WebLink webLink ) { return ( ( com.google.gerrit.extensions.webui.PatchSetWebLink ) ( webLink ) ) . getPathSetWebLink ( project . get () , commit ) ; }
java.lang.String changeWithNoRevisions ( int changeId ) ;
private com.google.gitiles.doc.MarkdownToHtml readme ( com.google.gitiles.GitilesView v , java.lang.String path ) { return new com.google.gitiles.doc.MarkdownToHtml ( v , config , path ) ; }
public org.kohsuke.github.GHMyself getMyself ( ) throws java.io.IOException { if ( isLoggedIn () ) { return getHub () . getMyself () ; } return null ; }
public static void deleteChange ( @ com.google.gerrit.common.Nullable java.lang.String project , int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gwt.core.client.JavaScriptObject > cb ) { com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . delete ( cb ) ; }
@ org.junit.Test ( expected = com.google.gerrit.extensions.restapi.ResourceConflictException . class ) public void createProjectDuplicate ( ) throws java.lang.Exception { com.google.gerrit.extensions.api.projects.ProjectInput in = new com.google.gerrit.extensions.api.projects.ProjectInput () ; in.name = name ( STRING_CONSTANT ) ; gApi . projects () . create ( in ) ; gApi . projects () . create ( in ) ; }
@ org.junit.Test public void testInvalidSchemeInReplace () { try { new com.google.gwtexpui.safehtml.client.LinkFindReplace ( STRING_CONSTANT , STRING_CONSTANT ) . replace ( STRING_CONSTANT ) ; org.junit.Assert . fail ( STRING_CONSTANT ) ; } catch ( java.lang.IllegalArgumentException expected ) {} }
@ org.junit.Test public void messagesNotReturnedByDefault ( ) throws java.lang.Exception { java.lang.String changeId = createChange () . getChangeId () ; postMessage ( changeId , STRING_CONSTANT ) ; com.google.gerrit.extensions.common.ChangeInfo c = info ( changeId ) ; org.junit.Assert . assertNull ( c.messages ) ; }
@ org.junit.After public void cleanup () { db . close () ; }
@ java.lang.Override protected void onUnload () { if ( ( regSignOut ) != null ) { regSignOut . removeHandler () ; regSignOut = null ; } super . onUnload () ; }
protected < T > T buildJson ( java.lang.String path , java.lang.reflect.Type typeOfT ) throws java.lang.Exception { return buildJson ( path , typeOfT , STRING_CONSTANT ) ; }
private void touchChange () { try { com.google.gerrit.server.ChangeUtil . touch ( change , db ) ; } catch ( com.google.gwtorm.server.OrmException e ) {} }
public com.google.gerrit.server.notedb.ChangeNotes notes () { return notes ; }
@ java.lang.Override protected void doStart ( ) throws java.lang.Exception { setClassLoader ( new com.google.gerrit.gwtdebug.GerritDebugLauncher.MyWebAppContext.MyLoader ( this ) ) ; super . doStart () ; }
public com.google.gerrit.server.data.AccountAttribute asAccountAttribute ( com.google.gerrit.reviewdb.client.Account.Id id ) { if ( id == null ) { return null ; } return asAccountAttribute ( accountCache . get ( id ) ) ; }
public abstract Project.NameKey getProjectName ( ) ;
@ org.junit.Test public void testEmptyQuery ( ) throws com.google.gwtorm.schema.QueryParseException { org.junit.Assert . assertNull ( parse ( STRING_CONSTANT ) ) ; }
private static com.google.gerrit.common.data.LabelType category ( java.lang.String name , com.google.gerrit.common.data.LabelValue . . . values ) { return new com.google.gerrit.common.data.LabelType ( name , java.util.Arrays . asList ( values ) ) ; }
private static com.google.gerrit.server.query.change.RegexFilePredicate predicate ( java.lang.String pattern ) { return new com.google.gerrit.server.query.change.RegexFilePredicate ( pattern ) ; }
@ org.junit.Test public void emptyCommitMessage ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( STRING_CONSTANT ) ) . isEmpty () ; }
@ java.lang.Override public boolean apply ( com.google.gerrit.reviewdb.client.PatchSet.Id in ) { return ( upToCurrent . apply ( in ) ) && ( patchSets . containsKey ( in ) ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > put ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType , java.lang.String name ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.PUT , name ) ) ; }
public final native void message ( java.lang.String m ) ;
@ java.lang.Override public void resetHtml ( com.google.gwtexpui.safehtml.client.SafeHtml body ) { currentRow = - NUMBER_CONSTANT ; super . resetHtml ( body ) ; }
@ java.lang.Override protected void onLoad () { super . onLoad () ; display () ; refresh ( false , false ) ; }
public com.google.gerrit.reviewdb.client.Change getChange () { return change . getChange () ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { com.google.gerrit.acceptance.GitUtil . fetch ( testRepo , ( ( com.google.gerrit.reviewdb.client.RefNames.REFS_CONFIG ) + STRING_CONSTANT ) ) ; testRepo . reset ( STRING_CONSTANT ) ; }
private static void assertRef ( int changeId , java.lang.String refName ) { com.google.common.truth.Truth . assertThat ( Change.Id . fromRef ( refName ) ) . isEqualTo ( new com.google.gerrit.reviewdb.client.Change.Id ( changeId ) ) ; }
public static com.google.gerrit.extensions.common.GitPersonSubject assertThat ( com.google.gerrit.extensions.common.GitPerson gitPerson ) { return com.google.common.truth.Truth . assertAbout ( com.google.gerrit.extensions.common.GitPersonSubject : : new ) . that ( gitPerson ) ; }
private com.google.gerrit.server.account.AccountState toAccountState ( org.apache.lucene.document.Document doc ) { com.google.gerrit.reviewdb.client.Account.Id id = new com.google.gerrit.reviewdb.client.Account.Id ( doc . getField ( com.google.gerrit.server.index.account.AccountField.ID . getName () ) . numericValue () . intValue () ) ; return accountCache . get () . get ( id ) ; }
@ java.lang.Override public void delete ( com.google.gerrit.server.query.change.ChangeData cd ) throws java.io.IOException {}
@ java.lang.Override protected void configure () { factory ( AgreementInfoFactory.Factory . class ) ; factory ( DeleteExternalIds.Factory . class ) ; factory ( ExternalIdDetailFactory.Factory . class ) ; factory ( RegisterNewEmailSender.Factory . class ) ; }
@ java.lang.Override protected com.google.gwtjsonrpc.server.SignedToken createXsrfSignedToken () { return server . getXsrfToken () ; }
@ org.junit.Before public void setUpMocks () { servlet = new com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServlet ( indexerMock ) ; id = new com.google.gerrit.reviewdb.client.Account.Id ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServletTest.ACCOUNT_NUMBER ) ; org.mockito.Mockito . when ( requestMock . getPathInfo () ) . thenReturn ( ( STRING_CONSTANT + ( com.ericsson.gerrit.plugins.highavailability.forwarder.rest.IndexAccountRestApiServletTest.ACCOUNT_NUMBER ) ) ) ; }
@ com.google.gerrit.client.rpc.SignInRequired void addBranch ( com.google.gerrit.client.reviewdb.Project.NameKey projectName , java.lang.String branchName , java.lang.String startingRevision , com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < com.google.gerrit.client.reviewdb.Branch > > callback ) ;
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onRenderEntireFile ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > e ) { prefs . renderEntireFile ( e . getValue () ) ; if ( ( view ) != null ) { view . updateRenderEntireFile () ; } }
public RefUpdate.Result modifyFile ( com.google.gerrit.server.edit.ChangeEdit edit , java.lang.String file , com.google.gerrit.extensions.restapi.RawInput content ) throws com.google.gerrit.extensions.restapi.AuthException , com.google.gerrit.server.project.InvalidChangeOperationException , java.io.IOException { return modify ( com.google.gerrit.server.edit.ChangeEditModifier.TreeOperation.CHANGE_ENTRY , edit , file , null , content ) ; }
private com.google.gerrit.acceptance.RestResponse POST ( java.lang.String endPoint ) throws java.io.IOException { com.google.gerrit.acceptance.RestResponse r = adminSession . post ( endPoint ) ; r . consume () ; return r ; }
@ java.lang.Override public com.google.gerrit.server.permissions.PermissionBackend.ForChange user ( com.google.gerrit.server.CurrentUser user ) { return getUser () . equals ( user ) ? this : forUser ( user ) . asForChange ( cd , db ) ; }
@ com.google.inject.Provides @ com.google.inject.Singleton com.google.gerrit.testutil.InMemoryDatabase getInMemoryDatabase ( com.google.gerrit.server.schema.SchemaCreator schemaCreator ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.testutil.InMemoryDatabase ( schemaCreator ) ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.rpc.NativeMap < com.google.gwt.core.client.JsArray < com.google.gerrit.client.changes.CommentInfo > > result ) { publishedBase = sort ( result . get ( path ) ) ; }
private void setClean ( boolean clean ) { save . setEnabled ( ( ! clean ) ) ; close . setEnabled ( true ) ; dirty . getStyle () . setVisibility ( ( ! clean ? com.google.gwt.dom.client.Style.Visibility.VISIBLE : com.google.gwt.dom.client.Style.Visibility.HIDDEN ) ) ; }
@ java.lang.Override public com.google.gerrit.reviewdb.client.PatchSet update ( com.google.gerrit.reviewdb.client.PatchSet patchset ) { if ( patchset . isDraft () ) { patchset . setDraft ( false ) ; return patchset ; } return null ; }
static org.apache.lucene.index.Term intTerm ( java.lang.String name , int value ) { org.apache.lucene.util.BytesRefBuilder builder = new org.apache.lucene.util.BytesRefBuilder () ; org.apache.lucene.util.NumericUtils . intToPrefixCodedBytes ( value , NUMBER_CONSTANT , builder ) ; return new org.apache.lucene.index.Term ( name , builder . get () ) ; }
@ java.lang.Override public com.google.gerrit.extensions.api.changes.Changes changes () { return changes ; }
@ java.lang.Override public void run () { expandText () ; }
@ java.lang.Override public void onSuccess ( com.google.gerrit.client.info.ChangeInfo result ) { com.google.gerrit.client.Gerrit . display ( com.google.gerrit.client.Dispatcher . toEditScreen ( project , new com.google.gerrit.reviewdb.client.PatchSet.Id ( result . legacyId () , NUMBER_CONSTANT ) , STRING_CONSTANT ) ) ; }
public void testCreateSchema_DefaultAccess_Administrators ( ) throws com.google.gwtorm.client.OrmException { db . create () ; final com.google.gerrit.reviewdb.SystemConfig config = db . getSystemConfig () ; assertDefaultRight ( config.adminGroupId , ApprovalCategory.READ , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
private net.sf.ehcache.constructs.blocking.SelfPopulatingCache startCacheSshKeys () { final net.sf.ehcache.Cache dc = com.google.gerrit.server.GerritServer.cacheMgr . getCache ( STRING_CONSTANT ) ; final net.sf.ehcache.constructs.blocking.SelfPopulatingCache r ; r = new net.sf.ehcache.constructs.blocking.SelfPopulatingCache ( dc , new com.google.gerrit.server.ssh.SshKeyCacheEntryFactory ( db ) ) ; com.google.gerrit.server.GerritServer.cacheMgr . replaceCacheWithDecoratedCache ( dc , r ) ; return r ; }
private void writeToResponse ( javax.servlet.http.HttpServletResponse res , java.io.InputStream inputStream ) throws java.io.IOException { try ( java.io.InputStream in = inputStream ; java.io.OutputStream out = res . getOutputStream () ) { com.google.common.io.ByteStreams . copy ( in , out ) ; } }
public abstract java.lang.String readString ( java.lang.String def , java.lang.String fmt , java.lang.Object . . . args ) ;
java.util.Set < com.google.gerrit.server.change.SuggestedReviewer > suggestReviewers ( com.google.gerrit.reviewdb.client.Project.NameKey project , @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Change.Id changeId , @ com.google.gerrit.common.Nullable java.lang.String query , java.util.Set < com.google.gerrit.reviewdb.client.Account.Id > candidates ) ;
public void stop () { if ( ( manager ) != null ) { manager . stop () ; manager = null ; sysInjector = null ; sshInjector = null ; } }
private static void addFooter ( java.lang.StringBuilder sb , org.eclipse.jgit.revwalk.FooterKey footer , java.lang.Object . . . values ) { com.google.gerrit.server.notedb.ChangeUpdate . addFooter ( sb , footer ) ; for ( java.lang.Object value : values ) { sb . append ( value ) ; } sb . append ( CHAR_CONS ) ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.RestView < com.google.gerrit.server.config.ConfigResource > list ( ) throws com.google.gerrit.extensions.restapi.ResourceNotFoundException { return list ; }
private void initAllUsersRepo ( ) throws java.io.IOException { if ( ( allUsersRepo ) == null ) { allUsersRepo = openRepo ( allUsersName ) ; } }
private com.google.gerrit.client.change.RelatedChangesTab getTab () { if ( ( conflictingChangesTab ) == null ) { conflictingChangesTab = createTab ( Resources.C . conflictingChanges () , Resources.C . conflictingChangesTooltip () ) ; } return conflictingChangesTab ; }
@ java.lang.Override public com.google.gerrit.pgm.init.LibraryDownloader get () { return new com.google.gerrit.pgm.init.LibraryDownloader ( ui , site ) ; }
@ java.lang.Override public java.lang.String name () { return name ; }
public com.google.gerrit.server.notedb.ChangeNotes createForBatchUpdate ( com.google.gerrit.reviewdb.client.Change change ) throws com.google.gwtorm.server.OrmException { return new com.google.gerrit.server.notedb.ChangeNotes ( args , change , false , null ) . load () ; }
public static boolean isRefsEdit ( java.lang.String ref ) { return ( ( ref != null ) && ( ref . startsWith ( com.google.gerrit.reviewdb.client.RefNames.REFS_USERS ) ) ) && ( ref . contains ( com.google.gerrit.reviewdb.client.RefNames.EDIT_PREFIX ) ) ; }
public com.google.gerrit.server.IdentifiedUser create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , anonymousCowardName , canonicalUrl , realm , accountCache , groupBackend , remotePeerProvider , dbProvider , id , null ) ; }
@ org.junit.Test public void mergeByOtherCcingSelfNotifyNone ( ) throws java.lang.Exception { com.google.gerrit.acceptance.server.mail.StagedChange sc = stageChange () ; setEmailStrategy ( other , EmailStrategy.CC_ON_OWN_COMMENTS ) ; merge ( sc.changeId , other , com.google.gerrit.extensions.api.changes.NotifyHandling.NONE ) ; assertThat ( sender ) . notSent () ; }
private com.google.gerrit.client.change.RelatedChangesTab getTab () { if ( ( cherryPicksTab ) == null ) { cherryPicksTab = createTab ( Resources.C . cherryPicks () , Resources.C . cherryPicksTooltip () ) ; cherryPicksTab . setShowBranches ( true ) ; } return cherryPicksTab ; }
@ java.lang.Override public int run ( ) throws java.lang.Exception { com.google.gerrit.server.GerritServer . getInstance ( false ) ; com.google.gerrit.client.rpc.Common . getSchemaFactory () . open () . close () ; java.lang.System.out . println ( STRING_CONSTANT ) ; return NUMBER_CONSTANT ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof com.ericsson.gerrit.plugins.highavailability.index.IndexEventHandler.IndexGroupTask ) ) { return false ; } com.ericsson.gerrit.plugins.highavailability.index.IndexEventHandler.IndexGroupTask other = ( ( com.ericsson.gerrit.plugins.highavailability.index.IndexEventHandler.IndexGroupTask ) ( obj ) ) ; return groupUUID . equals ( other.groupUUID ) ; }
@ java.lang.Override protected com.google.gerrit.extensions.restapi.RestModifyView < com.google.gerrit.server.change.RevisionResource , com.google.gerrit.extensions.common.TestSubmitRuleInput > createView () { return view ; }
public static void get ( @ com.google.gerrit.common.Nullable com.google.gerrit.reviewdb.client.Project.NameKey project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String path , com.google.gerrit.client.rpc.HttpCallback < com.google.gerrit.client.rpc.NativeString > cb ) { com.google.gerrit.client.changes.ChangeEditApi . get ( project , id , path , false , cb ) ; }
public java.util.Collection < com.google.gerrit.server.index.ChangeIndex > getWriteIndexes () { return java.util.Collections . unmodifiableCollection ( writeIndexes ) ; }
private void addComment ( com.google.gerrit.acceptance.PushOneCommit.Result r , java.lang.String message ) throws java.lang.Exception { addComment ( r , message , false , false , null ) ; }
private java.lang.String format ( java.lang.String s ) { if ( ( s . length () ) < ( permissionGroupWidth ) ) { return s ; } return s . substring ( NUMBER_CONSTANT , permissionGroupWidth ) ; }
public void putComment ( com.google.gerrit.reviewdb.client.PatchLineComment c ) { verifyComment ( c ) ; com.google.common.base.Preconditions . checkArgument ( ( ( c . getStatus () ) == ( PatchLineComment.Status.DRAFT ) ) , STRING_CONSTANT ) ; put . add ( c ) ; }
private com.google.gerrit.extensions.common.ChangeInfo getWithLabels ( com.google.gerrit.acceptance.PushOneCommit.Result r ) throws java.lang.Exception { return getWithLabels ( r . getChangeId () ) ; }
public com.google.gerrit.metrics.Timer0.Context start () { return new com.google.gerrit.metrics.Timer0.Context ( this ) ; }
public static com.google.gerrit.client.reviewdb.SystemConfig create () { final com.google.gerrit.client.reviewdb.SystemConfig r = new com.google.gerrit.client.reviewdb.SystemConfig () ; r.singleton = new com.google.gerrit.client.reviewdb.SystemConfig.Key () ; return r ; }
public static java.lang.String toPatch ( final java.lang.String type , final com.google.gerrit.client.reviewdb.Patch.Key id ) { return ( ( STRING_CONSTANT + type ) + STRING_CONSTANT ) + ( id . toString () ) ; }
private void hookDoesNotModify ( final java.lang.String in ) throws java.lang.Exception { org.junit.Assert . assertEquals ( in , call ( in ) ) ; }
void start () { oracle . requestSuggestions ( request , this ) ; }
void insert ( org.apache.lucene.document.Document doc ) throws java.io.IOException { writer . addDocument ( doc ) ; }
public java.util.List < com.google.gerrit.reviewdb.client.AccountGroup > get () { return filterGroups ( groupCache . all () ) ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser getCurrentUser () { return session . get () . getCurrentUser () ; }
@ java.lang.Override public void restore ( com.google.gerrit.extensions.api.changes.RestoreInput in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { restore . apply ( change , in ) ; } catch ( com.google.gwtorm.server.OrmException | java.io.IOException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository < org.eclipse.jgit.internal.storage.dfs.DfsRepository > ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; }
@ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { enableForm () ; super . onFailure ( caught ) ; }
@ org.junit.Test public void testReplaceSortKeyPredicate_NoSortKey ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertSame ( p , com.google.gerrit.server.index.IndexedChangeQuery . replaceSortKeyPredicates ( p , STRING_CONSTANT ) ) ; }
@ java.lang.Override public void deleteFile ( java.lang.String filePath ) throws com.google.gerrit.extensions.restapi.RestApiException { try { changeEditDeleteContent . apply ( changeResource , filePath ) ; } catch ( java.lang.Exception e ) { throw com.google.gerrit.server.api.ApiUtil . asRestApiException ( STRING_CONSTANT , e ) ; } }
private void assertMessage ( java.lang.String expected , java.lang.String actual ) { com.google.common.truth.Truth . assertThat ( actual ) . isEqualTo ( ( STRING_CONSTANT + expected ) ) ; }
private static com.google.gerrit.server.index.Schema < com.google.gerrit.server.query.change.ChangeData > release ( java.util.Collection < com.google.gerrit.server.index.FieldDef < com.google.gerrit.server.query.change.ChangeData , > > fields ) { return new com.google.gerrit.server.index.Schema ( true , fields ) ; }
private com.google.inject.Module createIndexModule () { switch ( indexType ) { case LUCENE : return com.google.gerrit.lucene.LuceneIndexModule . latestVersionWithOnlineUpgrade ( false ) ; case ELASTICSEARCH : return com.google.gerrit.elasticsearch.ElasticIndexModule . latestVersionWithOnlineUpgrade ( false ) ; default: throw new java.lang.IllegalStateException ( ( STRING_CONSTANT + ( indexType ) ) ) ; } }
private com.googlesource.gerrit.plugins.uploadvalidator.ValidatorConfig getConfig ( java.lang.String defaultConfig ) throws org.eclipse.jgit.errors.ConfigInvalidException { com.googlesource.gerrit.plugins.uploadvalidator.ValidatorConfig config = new com.googlesource.gerrit.plugins.uploadvalidator.ValidatorConfig ( new com.googlesource.gerrit.plugins.uploadvalidator.FakeConfigFactory ( projectName , defaultConfig ) , new com.googlesource.gerrit.plugins.uploadvalidator.FakeGroupCacheUUIDByName () ) ; return config ; }
@ java.lang.Override public java.lang.Boolean call ( ) throws com.google.gerrit.server.permissions.PermissionBackendException , com.google.gerrit.server.project.NoSuchProjectException { return shouldReplicate ( project ) ; }
private static java.lang.String replace ( java.lang.String project , java.lang.String input ) { return input == null ? input : input . replace ( STRING_CONSTANT , project ) ; }
public void onSuccess ( final com.google.gwtjsonrpc.client.VoidResult result ) { com.google.gerrit.client.Gerrit . display ( nextToken ) ; }
private void initChangeRepo ( ) throws java.io.IOException { if ( ( changeRepo ) == null ) { changeRepo = openRepo ( projectName , true ) ; } }
@ com.google.common.annotations.VisibleForTesting public abstract void handleEmails ( ) ;
private com.google.gerrit.server.IdentifiedUser addUser ( java.lang.String name ) throws java.lang.Exception { com.google.gerrit.server.account.AuthRequest req = com.google.gerrit.server.account.AuthRequest . forUser ( name ) ; com.google.gerrit.reviewdb.client.Account.Id id = accountManager . authenticate ( req ) . getAccountId () ; return userFactory . create ( id ) ; }
static com.google.gerrit.server.patch.PatchListEntry empty ( final java.lang.String fileName ) { return new com.google.gerrit.server.patch.PatchListEntry ( com.google.gerrit.reviewdb.client.Patch.ChangeType.MODIFIED , com.google.gerrit.reviewdb.client.Patch.PatchType.UNIFIED , null , fileName , com.google.gerrit.server.patch.PatchListEntry.EMPTY_HEADER , java.util.Collections . < org.eclipse.jgit.diff.Edit > emptyList () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ java.lang.Override public boolean isVisibleTo ( com.google.gerrit.reviewdb.client.Account.Id account ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.server.IdentifiedUser who = identifiedUserFactory . create ( account ) ; return rsrc . getControl () . forUser ( who ) . isVisible () ; }
@ java.lang.Override public void onSuccess ( java.lang.String result ) { com.google.gerrit.client.change.EditFileAction edit = new com.google.gerrit.client.change.EditFileAction ( id , result , path , style , editButton , replyButton ) ; edit . onEdit () ; }
private org.eclipse.jgit.lib.BatchRefUpdate getBatchRefUpdate ( ) throws java.io.IOException { initRepository () ; if ( ( batchRefUpdate ) == null ) { batchRefUpdate = repo . getRefDatabase () . newBatchUpdate () ; } return batchRefUpdate ; }
private void deactivate () { if ( ( activePatchSetId ) != null ) { com.google.gerrit.client.changes.PatchSetComplexDisclosurePanel patchSetPanel = patchSetPanels . get ( activePatchSetId ) ; patchSetPanel . setActive ( false ) ; activePatchSetId = null ; } }
private com.google.gwt.user.client.ui.Panel getButtonPanel () { if ( ( buttons ) == null ) { buttons = new com.google.gwt.user.client.ui.FlowPanel () ; buttons . setStyleName ( Gerrit.RESOURCES . css () . commentPanelButtons () ) ; content . add ( buttons ) ; } return buttons ; }
@ java.lang.Override public com.google.gerrit.extensions.restapi.BinaryResult submitPreview ( java.lang.String format ) throws com.google.gerrit.extensions.restapi.RestApiException { submitPreview . setFormat ( format ) ; return submitPreview . apply ( revision ) ; }
@ org.junit.Test public void testGetComment ( ) throws java.lang.Exception { assertGetComment ( revRes1 , plc1 , plc1 . getKey () . get () ) ; assertGetComment ( revRes1 , null , STRING_CONSTANT ) ; }
public com.google.gerrit.server.mail.CommentSender create ( com.google.gerrit.extensions.api.changes.ReviewInput.NotifyHandling notify , com.google.gerrit.reviewdb.client.Change.Id id ) ;
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.eclipse.jgit.internal.storage.dfs.DfsRepository r = new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ; repo = new org.eclipse.jgit.junit.TestRepository ( r ) ; servlet = com.google.gitiles.TestGitilesServlet . create ( repo ) ; }
void registerKeys ( boolean on ) { register = on ; if ( ( table ) != null ) { table . setRegisterKeys ( on ) ; } }
@ java.lang.Override protected java.lang.String prettify ( java.lang.String html , java.lang.String type ) { return prettyPrintOne ( html , type , settings ) ; }
com.google.gerrit.extensions.auth.oauth.OAuthToken getAccessToken ( com.google.gerrit.extensions.auth.oauth.OAuthVerifier verifier ) ;
@ java.lang.Override public com.google.gerrit.extensions.client.EditPreferencesInfo setEditPreferences ( com.google.gerrit.extensions.client.EditPreferencesInfo in ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return setEditPreferences . apply ( account , in ) ; } catch ( java.io.IOException | org.eclipse.jgit.errors.ConfigInvalidException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
java.lang.String getAuthorizationUrl ( ) ;
public java.lang.String format ( java.lang.String projectName , com.googlesource.gerrit.plugins.xdocs.ConfigSection cfg , java.lang.String raw ) throws java.io.IOException ;
private com.google.gerrit.reviewdb.client.PatchSetApproval copy ( com.google.gerrit.reviewdb.client.PatchSetApproval src , com.google.gerrit.server.project.ChangeControl ctl ) { return new com.google.gerrit.reviewdb.client.PatchSetApproval ( src . getPatchSetId () , src ) ; }
private static final native void init ( java.lang.String e , java.lang.String r , java.lang.String o ) ;
protected com.google.gerrit.server.change.ChangeInserter newChangeForCommit ( org.eclipse.jgit.junit.TestRepository < com.google.gerrit.testutil.InMemoryRepositoryManager.Repo > repo , org.eclipse.jgit.revwalk.RevCommit commit ) throws java.lang.Exception { return newChange ( repo , commit , null , null , null ) ; }
private static com.google.gerrit.reviewdb.AuthType toType ( final org.eclipse.jgit.lib.Config cfg ) { return com.google.gerrit.server.config.ConfigUtil . getEnum ( cfg , STRING_CONSTANT , null , STRING_CONSTANT , AuthType.OPENID ) ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { repo = new org.eclipse.jgit.junit.TestRepository < org.eclipse.jgit.internal.storage.dfs.DfsRepository > ( new org.eclipse.jgit.internal.storage.dfs.InMemoryRepository ( new org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription ( STRING_CONSTANT ) ) ) ; servlet = com.google.gitiles.TestGitilesServlet . create ( repo ) ; }
public com.google.gerrit.server.notedb.DraftCommentNotes create ( com.google.gerrit.reviewdb.client.Change.Id changeId , com.google.gerrit.reviewdb.client.Account.Id accountId ) { return new com.google.gerrit.server.notedb.DraftCommentNotes ( repoManager , draftsProject , changeId , accountId ) ; }
public static void updateDraft ( @ com.google.gerrit.common.Nullable java.lang.String project , com.google.gerrit.reviewdb.client.PatchSet.Id id , java.lang.String draftId , com.google.gerrit.client.changes.CommentInfo content , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.CommentInfo > cb ) { com.google.gerrit.client.changes.CommentApi . revision ( project , id , STRING_CONSTANT ) . id ( draftId ) . put ( content , cb ) ; }
private boolean isDraftVisible ( com.google.gerrit.reviewdb.server.ReviewDb db ) throws com.google.gwtorm.server.OrmException { return ( isOwner () ) || ( isReviewer ( db ) ) ; }
@ com.google.inject.Provides @ com.google.inject.Singleton @ com.ericsson.gerrit.plugins.highavailability.SharedDirectory java.nio.file.Path getSharedDirectory ( ) throws java.io.IOException { java.nio.file.Path sharedDirectoryPath = java.nio.file.Paths . get ( config . main () . sharedDirectory () ) ; java.nio.file.Files . createDirectories ( sharedDirectoryPath ) ; return sharedDirectoryPath ; }
private static void a ( final java.lang.StringBuilder r , final java.lang.String where ) { com.google.gerrit.client.data.GitwebLink . var ( r , STRING_CONSTANT , where ) ; }
@ org.junit.Test public void testIndexPredicate ( ) throws java.lang.Exception { com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > in = parse ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( query ( in ) , rewrite ( in ) ) ; }
@ org.junit.Test public void allRefsVisibleWithRefsMetaConfig ( ) throws java.lang.Exception { allow ( Permission.READ , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS , STRING_CONSTANT ) ; allow ( Permission.READ , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS , STRING_CONSTANT ) ; assertRefs ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.server.git.GitRepositoryManager . class ) . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager . class ) ; listener () . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager . class ) ; listener () . to ( com.google.gerrit.server.git.LocalDiskRepositoryManager.Lifecycle . class ) ; }
private void allowTagCreation ( com.google.gerrit.acceptance.rest.project.PushTagIT.TagType tagType ) throws java.lang.Exception { grant ( project , STRING_CONSTANT , tagType.createPermission , false , com.google.gerrit.server.group.SystemGroupBackend.REGISTERED_USERS ) ; }
private com.google.gerrit.server.index.PredicateWrapper wrap ( com.google.gerrit.server.query.Predicate < com.google.gerrit.server.query.change.ChangeData > p ) throws com.google.gerrit.server.query.QueryParseException { return new com.google.gerrit.server.index.PredicateWrapper ( p , index ) ; }
public static java.lang.String toChangeQuery ( java.lang.String query , java.lang.String page ) { return ( ( STRING_CONSTANT + ( com.google.gwtorm.client.KeyUtil . encode ( query ) ) ) + STRING_CONSTANT ) + page ; }
public void onSuccess ( final com.google.gerrit.common.data.HostPageData result ) { com.google.gerrit.client.Gerrit.myConfig = result.config ; if ( ( result.account ) != null ) { com.google.gerrit.client.Gerrit.myAccount = result.account ; com.google.gerrit.client.Gerrit . applyUserPreferences () ; } onModuleLoad2 ( gStarting ) ; }
@ java.lang.Override public boolean allowsEdit ( com.google.gerrit.reviewdb.client.Account.FieldName field ) { return editableAccountFields . contains ( field ) ; }
private boolean isStarred ( final com.google.gerrit.reviewdb.client.Change ac ) { return control . getCurrentUser () . getStarredChanges () . contains ( ac . getId () ) ; }
void downloadRequired () { this . required = true ; download () ; }
public static void edit ( int id , com.google.gwt.user.client.rpc.AsyncCallback < com.google.gerrit.client.changes.ChangeInfo.EditInfo > cb ) { com.google.gerrit.client.changes.ChangeApi . edit ( id ) . get ( cb ) ; }
public com.google.gerrit.server.change.PatchSetInserter setSshInfo ( com.google.gerrit.server.ssh.SshInfo sshInfo ) { this . sshInfo = sshInfo ; return this ; }
private void checkNotUsed ( final java.lang.String n ) throws com.google.gwtorm.server.OrmException { if ( allNames . contains ( n ) ) { throw new com.google.gwtorm.server.OrmException ( ( ( STRING_CONSTANT + n ) + STRING_CONSTANT ) ) ; } }
com.google.gitiles.CommitSoyData setArchiveFormat ( @ javax.annotation.Nullable com.google.gitiles.ArchiveFormat archiveFormat ) { this . archiveFormat = archiveFormat ; return this ; }
public boolean isConnectivityRequested ( java.lang.String url ) { return ui . yesno ( false , STRING_CONSTANT , url ) ; }
protected abstract java.util.concurrent.Callable < > indexTask ( com.google.gerrit.server.query.change.ChangeData cd ) ;
@ java.lang.Override public java.util.List < com.google.gerrit.extensions.common.AccountInfo > getPastAssignees ( ) throws com.google.gerrit.extensions.restapi.RestApiException { try { return getPastAssignees . apply ( change ) . value () ; } catch ( com.google.gwtorm.server.OrmException e ) { throw new com.google.gerrit.extensions.restapi.RestApiException ( STRING_CONSTANT , e ) ; } }
public static com.google.gerrit.server.index.IndexConfig createDefault () { return com.google.gerrit.server.index.IndexConfig . create ( NUMBER_CONSTANT , NUMBER_CONSTANT , com.google.gerrit.server.index.IndexConfig.DEFAULT_MAX_TERMS ) ; }
private com.cisco.gerrit.plugins.slack.config.ProjectConfig getConfig ( boolean publishOnPatchSetCreated ) throws java.lang.Exception { return getConfig ( STRING_CONSTANT , publishOnPatchSetCreated , true ) ; }
@ java.lang.Override protected java.lang.String prettify ( java.lang.String html , java.lang.String type ) { return com.google.gerrit.prettify.client.ClientSideFormatter . go ( html , type , settings . getTabSize () ) ; }
public static com.google.gerrit.client.rpc.RestApi reviewers ( @ com.google.gerrit.common.Nullable java.lang.String project , int id ) { return com.google.gerrit.client.changes.ChangeApi . change ( project , id ) . view ( STRING_CONSTANT ) ; }
public com.google.gerrit.server.IdentifiedUser create ( com.google.gerrit.reviewdb.client.Account.Id id ) { return new com.google.gerrit.server.IdentifiedUser ( capabilityControlFactory , authConfig , anonymousCowardName , canonicalUrl , realm , accountCache , groupBackend , remotePeerProvider , dbProvider , id ) ; }
public void onSuccess ( com.google.gerrit.common.data.ChangeDetail result ) { changeScreen . update ( result ) ; }
public static com.google.gerrit.server.account.externalids.ExternalId create ( java.lang.String scheme , java.lang.String id , com.google.gerrit.reviewdb.client.Account.Id accountId ) { return com.google.gerrit.server.account.externalids.ExternalId . create ( com.google.gerrit.server.account.externalids.ExternalId.Key . create ( scheme , id ) , accountId , null , null ) ; }
private void assertIsHealthy () { javax.servlet.http.HttpServletResponse responseMock = org.mockito.Mockito . mock ( javax.servlet.http.HttpServletResponse . class ) ; servlet . doGet ( null , responseMock ) ; org.mockito.Mockito . verify ( responseMock ) . setStatus ( javax.servlet.http.HttpServletResponse.SC_NO_CONTENT ) ; }
private static void mainImpl ( final java.lang.String [] argv ) throws com.google.gwtjsonrpc.server.XsrfException , com.google.gwtorm.client.OrmException { com.google.gerrit.server.GerritServer . getInstance ( false ) ; com.google.gerrit.client.rpc.Common . getSchemaFactory () . open () . close () ; java.lang.System.out . println ( STRING_CONSTANT ) ; }
@ org.junit.Test public void nullCommitMessage ( ) throws java.lang.Exception { com.google.common.truth.Truth . assertThat ( com.google.gerrit.server.change.HashtagsUtil . extractTags ( ( ( java.lang.String ) ( null ) ) ) ) . isEmpty () ; }
com.google.gerrit.server.change.ReviewerResource create ( com.google.gerrit.server.change.ChangeResource change , com.google.gerrit.reviewdb.client.Account.Id id ) ;
public static com.criteo.gerrit.plugins.automerge.Change from ( com.google.gerrit.extensions.common.ChangeInfo changeInfo ) { return new com.criteo.gerrit.plugins.automerge.Change ( changeInfo.project , changeInfo._number , changeInfo.id , changeInfo.topic , changeInfo.branch ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public com.google.gerrit.extensions.restapi.RestModifyView < com.google.gerrit.server.project.ProjectResource , > create ( com.google.gerrit.server.project.ProjectResource parent , com.google.gerrit.extensions.restapi.IdString id ) throws com.google.gerrit.extensions.restapi.RestApiException { if ( id . toString () . equals ( STRING_CONSTANT ) ) { return createDefault . get () ; } throw new com.google.gerrit.extensions.restapi.ResourceNotFoundException ( id ) ; }
private boolean can ( com.google.gerrit.server.permissions.LabelPermission perm ) { return ! ( label ( perm . permissionName () . get () ) . isEmpty () ) ; }
@ java.lang.Override protected void configureCommands () { command ( STRING_CONSTANT ) . to ( com.google.gerrit.plugins.PrintHelloWorldCommand . class ) ; }
public void onSuccess ( final com.google.gerrit.client.account.ExternalIdDetail result ) { identites . display ( result ) ; }
@ java.lang.Override protected void configure () { factory ( SaveDraft.Factory . class ) ; }
protected void onCellSingleClick ( int row , int column ) { movePointerTo ( row ) ; }
@ java.lang.Override public com.google.gerrit.server.CurrentUser getUser () { if ( ( submitter ) != null ) { return identifiedUserFactory . create ( submitter ) . getRealUser () ; } throw new com.google.inject.OutOfScopeException ( STRING_CONSTANT ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { setOpen ( ( ! ( isOpen () ) ) ) ; }
com.google.gerrit.reviewdb.client.PatchSetApproval getSubmitter ( com.google.gerrit.server.git.CodeReviewCommit c ) { return approvalsUtil . getSubmitter ( db . get () , c . notes () , c.patchsetId ) ; }
public static java.lang.String fullName ( java.lang.String ref ) { return ref . startsWith ( com.google.gerrit.reviewdb.client.RefNames.REFS ) ? ref : ( com.google.gerrit.reviewdb.client.RefNames.REFS_HEADS ) + ref ; }
@ java.lang.Override public com.google.gerrit.server.query.change.SortKeyPredicate.After copy ( java.lang.String newValue ) { return new com.google.gerrit.server.query.change.SortKeyPredicate.After ( schema , dbProvider , newValue ) ; }
@ java.lang.Override protected void configure () { bind ( ProjectControl.GenericFactory . class ) ; factory ( ProjectControl.AssistedFactory . class ) ; bind ( ChangeControl.GenericFactory . class ) ; bind ( ChangeControl.Factory . class ) ; }
@ java.lang.Override protected java.lang.String getRefName () { return com.google.gerrit.server.notedb.ChangeNoteUtil . changeRefName ( ctl . getId () ) ; }
@ java.lang.Override protected void configure () { bind ( com.google.gerrit.extensions.api.accounts.Accounts . class ) . to ( com.google.gerrit.server.api.accounts.AccountsImpl . class ) ; factory ( AccountApiImpl.Factory . class ) ; }
@ java.lang.Override protected java.lang.Integer getValueInt ( com.google.gerrit.server.query.change.ChangeData changeData ) throws com.google.gwtorm.server.OrmException { return ChangeField.UNRESOLVED_COMMENT_COUNT . get ( changeData ) ; }
private void renderInput ( org.asciidoctor.Options options , java.io.File inputFile ) { org.asciidoctor.Asciidoctor asciidoctor = org.asciidoctor.internal.JRubyAsciidoctor . create () ; asciidoctor . renderFile ( inputFile , options ) ; }
protected < R extends com.google.gerrit.extensions.restapi.RestResource > com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder < R > delete ( com.google.inject.TypeLiteral < com.google.gerrit.extensions.restapi.RestView < R > > viewType , java.lang.String name ) { return new com.google.gerrit.extensions.restapi.RestApiModule.ModifyViewBinder ( view ( viewType , com.google.gerrit.extensions.restapi.RestApiModule.DELETE , name ) ) ; }
@ org.junit.Test public void testCreateProjectWhenProjectAlreadyExists_Conflict ( ) throws java.lang.Exception { com.google.gerrit.acceptance.RestResponse r = adminSession . put ( STRING_CONSTANT ) ; com.google.common.truth.Truth . assertThat ( r . getStatusCode () ) . isEqualTo ( HttpStatus.SC_CONFLICT ) ; }
public void setCommands ( java.util.List < com.google.gerrit.common.data.UiCommandDetail > cmds ) { commands = ( cmds . isEmpty () ) ? null : cmds ; }
com.google.gerrit.extensions.client.Side getStoredSideFromDisplaySide ( com.google.gerrit.client.diff.DisplaySide side ) { if ( ( side == ( DisplaySide.A ) ) && ( ( base . isBaseOrAutoMerge () ) || ( base . isParent () ) ) ) { return com.google.gerrit.extensions.client.Side.PARENT ; } return com.google.gerrit.extensions.client.Side.REVISION ; }
private com.google.gerrit.extensions.common.SubmitType getSubmitType ( com.google.gerrit.server.query.change.ChangeData cd ) throws com.google.gwtorm.server.OrmException { com.google.gerrit.common.data.SubmitTypeRecord r = new com.google.gerrit.server.project.SubmitRuleEvaluator ( cd ) . getSubmitType () ; if ( ( r.status ) != ( SubmitTypeRecord.Status.OK ) ) { return null ; } return r.type ; }
@ java.lang.Override public int compare ( @ javax.annotation.Nullable org.eclipse.jgit.lib.Ref left , @ javax.annotation.Nullable org.eclipse.jgit.lib.Ref right ) { int l = ( isHead ( left ) ) ? NUMBER_CONSTANT : NUMBER_CONSTANT ; int r = ( isHead ( right ) ) ? NUMBER_CONSTANT : NUMBER_CONSTANT ; return r - l ; }
@ java.lang.Override public void onKeyPress ( final com.google.gwt.event.dom.client.KeyPressEvent event ) { com.google.gerrit.client.Gerrit . display ( PageLinks.ALL_MERGED ) ; }
void evictAfterRename ( com.google.gerrit.reviewdb.client.AccountGroup.NameKey oldName ) throws java.io.IOException ;
private org.ovirt.engine.core.bll.network.cluster.UpdateNetworkClusterValidator createNetworkClusterValidator () { return new org.ovirt.engine.core.bll.network.cluster.UpdateNetworkClusterValidator ( interfaceDao , networkDao , org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getNetworkCluster () , getOldNetworkCluster () ) ; }
public void setStoragePoolId ( org.ovirt.engine.core.compat.Guid storagePoolId ) { getStoragePoolIsoMapData () . setstorage_pool_id ( storagePoolId ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createVlan ( java.lang.String baseIfaceName , int vlanId , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , ( ( baseIfaceName + STRING_CONSTANT ) + vlanId ) , false , null , vlanId , networkName , true , null ) ; }
protected void updateCurrentCd ( java.lang.String cdPath ) { cdPath = ( org.apache.commons.lang.StringUtils . isEmpty ( cdPath ) ) ? null : cdPath ; vmHandler . updateCurrentCd ( org.ovirt.engine.core.bll.RunVmCommand . getVm () , cdPath ) ; }
@ org.junit.Test public void excuteCommandTest () { command . executeCommand () ; org.junit.Assert . assertEquals ( AuditLogType.USER_UPDATED_AFFINITY_GROUP , command . getAuditLogTypeValue () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getName () . equals ( iface . getNetworkName () ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return java.lang.Integer . valueOf ( NUMBER_CONSTANT ) ; } return source ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpQueryExpectations ( query , failure , StorageDomainType.Data ) ; }
@ java.lang.Override public final int getIntValue ( java.lang.String name , java.lang.String defaultValue ) { return ( ( java.lang.Integer ) ( getValue ( DataType.Int , name , defaultValue ) ) ) . intValue () ; }
protected void onNicsChanged () { operationFactory = new org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkOperationFactory ( getNetworks () , getNics () ) ; validate () ; getNetworksChangedEvent () . raise ( this , EventArgs.EMPTY ) ; }
@ javax.ws.rs.GET org.ovirt.engine.api.model.Disk get ( ) ;
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getId () { return ( getStorageStaticData () ) == null ? null : getStorageStaticData () . getId () ; }
public org.ovirt.engine.core.utils.NetworkInSyncWithVdsNetworkInterface createTestedInstance () { return new org.ovirt.engine.core.utils.NetworkInSyncWithVdsNetworkInterface ( iface , network , networkQos , testedNetworkAttachment , cluster ) ; }
@ org.junit.Test public void checkRemoveNotExistingConnection () { parameters . setStorageServerConnection ( NFSConnection ) ; org.mockito.Mockito . when ( storageServerConnectionDao . get ( NFSConnection . getId () ) ) . thenReturn ( null ) ; org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_CONNECTION_NOT_EXIST ) ; }
public void InternalSetVmStatus ( org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VMStatus status ) { InternalSetVmStatus ( vm , status , VmExitStatus.Normal , StringUtils.EMPTY , VmExitReason.Unknown ) ; }
private static org.ovirt.engine.core.common.businessentities.storage.DiskImage createDiskImage ( long sizeInGigabytes ) { org.ovirt.engine.core.common.businessentities.storage.DiskImage image = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; image . setSizeInGigabytes ( sizeInGigabytes ) ; return image ; }
protected abstract java.lang.Object getValue ( org.ovirt.engine.core.common.config.DataType type , java.lang.String name , java.lang.String defaultValue ) ;
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query ) throws java.lang.Exception { assertEquals ( STRING_CONSTANT , query ) ; setUpGetEntityExpectations ( true ) ; }
@ java.lang.Override protected void configure () {}
private org.ovirt.engine.core.common.businessentities.Provider < > getDeletedProvider () { if ( ( deletedProvider ) == null ) { deletedProvider = org.ovirt.engine.core.bll.provider.RemoveProviderCommand . getProviderDao () . get ( org.ovirt.engine.core.bll.provider.RemoveProviderCommand . getParameters () . getProvider () . getId () ) ; } return deletedProvider ; }
@ org.junit.Test public void diskSnapshotsDontExist () { org.junit.Assert . assertThat ( validator . diskSnapshotsNotExist ( java.util.Arrays . asList ( org.ovirt.engine.core.compat.Guid . newGuid () ) ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( VdcBllMessages.ACTION_TYPE_FAILED_DISK_SNAPSHOTS_NOT_EXIST ) ) ; }
protected boolean updateVmInSpm () { return org.ovirt.engine.core.bll.VmCommand . updateVmInSpm ( getVm () . getStoragePoolId () , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.VM [] { getVm () } ) ) ) ; }
@ java.lang.Override public void importVms ( org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runMultipleAction ( VdcActionType.ImportVmFromOva , buildImportVmFromOvaParameters () , true , callback , null ) ; }
private boolean isEntityModelEmpty ( org.ovirt.engine.ui.uicommonweb.models.EntityModel model ) { return ! ( ( ( model . getEntity () ) != null ) && ( ! ( model . getEntity () . equals ( STRING_CONSTANT ) ) ) ) ; }
@ org.junit.Test public void testValidateGatewayWhenGatewayIsNotSpecified () { doTestValidateGateway ( STRING_CONSTANT , false , true , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
@ org.junit.jupiter.api.BeforeEach public void before () { for ( org.ovirt.engine.core.vdsbroker.monitoring.VmTestPairs data : org.ovirt.engine.core.vdsbroker.monitoring.VmTestPairs . values () ) { data . reset () ; } }
public void endStepJob ( org.ovirt.engine.core.common.job.Step step ) { getJobRepository () . updateStep ( step ) ; org.ovirt.engine.core.bll.job.ExecutionContext finalContext = org.ovirt.engine.core.bll.job.ExecutionHandler . createFinalizingContext ( step . getId () ) ; org.ovirt.engine.core.bll.job.ExecutionHandler . endTaskJob ( finalContext , isTaskSuccess ( step . getStatus () ) ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . getByName ( existingPool . getname () ) ; assertGetResult ( result ) ; }
@ java.lang.Override public java.lang.String toString () { return uuid . toString () ; }
@ java.lang.Override public void updateAllInBatch ( java.lang.String procedureName , java.util.Collection < T > paramValues , org.ovirt.engine.core.dal.dbbroker.MapSqlParameterMapper < T > mapper ) { org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . getCallsHandler () . executeStoredProcAsBatch ( ( procedureName == null ? org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . getProcedureNameForUpdate () : procedureName ) , paramValues , mapper ) ; }
@ com.google.gwt.i18n.client.Messages.DefaultMessage ( value = STRING_CONSTANT ) java.lang.String rebalanceFileSizeGb ( java.lang.String size ) ;
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public org.ovirt.engine.core.bll.ValidationResult imageProvidedForOvirtNode ( java.lang.String image ) { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.VDS_CANNOT_INSTALL_MISSING_IMAGE_FILE ) . when ( ( ( ( host . getVdsType () ) == ( org.ovirt.engine.core.common.businessentities.VDSType.oVirtNode ) ) && ( org.apache.commons.lang.StringUtils . isBlank ( image ) ) ) ) ; }
public org.ovirt.engine.core.compat.NGuid getStorageDomainId () { if ( ( _storageDomain ) != null ) { return _storageDomain . getId () ; } return _storageDomainId ; }
public org.ovirt.engine.core.common.interfaces.VDSBrokerFrontend getResourceManager () { return org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () ; }
public java.util.Date getLastModified () { return getImage () . getLastModified () ; }
protected void saveDiskImageDynamic ( org.ovirt.engine.core.common.businessentities.DiskImage disk ) { org.ovirt.engine.core.common.businessentities.DiskImageDynamic diskDynamic = new org.ovirt.engine.core.common.businessentities.DiskImageDynamic () ; diskDynamic . setId ( disk . getImageId () ) ; diskDynamic . setactual_size ( disk . getactual_size () ) ; getDiskImageDynamicDAO () . save ( diskDynamic ) ; }
public void runMultipleQueries ( final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryType > queryTypeList , final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryParametersBase > queryParamsList , final org.ovirt.engine.ui.uicompat.IFrontendMultipleQueryAsyncCallback callback ) { runMultipleQueries ( queryTypeList , queryParamsList , callback , null ) ; }
public static org.ovirt.engine.core.compat.Guid getGuidValue ( org.ovirt.engine.core.compat.Guid id ) { return id ; }
public void setSearchString ( java.lang.String value ) { setSearchString ( value , true ) ; }
@ org.junit.Test public void getFreeVfNoVfs () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertNull ( networkDeviceHelper . getFreeVf ( nic , null ) ) ; }
@ org.junit.Test public void testRemoveIfUnusedWithUsed () { dao . removeIfUnused ( FixturesTool.SMALL_ICON_ID ) ; final org.ovirt.engine.core.common.businessentities.VmIcon survivor = dao . get ( FixturesTool.SMALL_ICON_ID ) ; org.junit.Assert . assertEquals ( FixturesTool.SMALL_ICON_ID , survivor . getId () ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
protected javax.ws.rs.core.Response actionSuccess ( org.ovirt.engine.api.model.Action action ) { action . setStatus ( CreationStatus.COMPLETE . value () ) ; return javax.ws.rs.core.Response . ok () . entity ( action ) . build () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { context.clusterList = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; SetDefaultNames4 () ; }
@ java.lang.Override protected boolean validate () { addCustomValue ( STRING_CONSTANT , org.ovirt.engine.core.bll.aaa.AddUserCommand . getParameters () . getUserToAdd () . getLoginName () ) ; return true ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { if ( model != null ) { model . stopProgress () ; } if ( result . getReturnValue () . getSucceeded () ) { cancel () ; } }
@ org.junit.Test public void toByteArray () { final byte [] byteArray = org.ovirt.engine.core.utils.GuidUtils . toByteArray ( java.util.UUID . randomUUID () ) ; org.junit.Assert . assertNotNull ( byteArray ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , byteArray.length ) ; }
private org.ovirt.engine.core.common.businessentities.Cluster getCluster () { org.ovirt.engine.core.common.businessentities.Cluster cluster = new org.ovirt.engine.core.common.businessentities.Cluster () ; cluster . setId ( clusterId ) ; cluster . setVirtService ( true ) ; cluster . setGlusterService ( true ) ; return cluster ; }
public static boolean OpEquality ( org.ovirt.engine.core.compat.Version v1 , org.ovirt.engine.core.compat.Version v2 ) { if ( v1 == null ) { return v2 == null ; } return v1 . equals ( v2 ) ; }
org.ovirt.engine.core.compat.Guid persistAsyncTaskPlaceHolder ( ) ;
private org.ovirt.engine.core.bll.ValidationResult networkClusterAttachmentExists () { return ( org.ovirt.engine.core.bll.UpdateNetworkOnClusterCommand . getNetworkClusterDAO () . get ( getNetworkCluster () . getId () ) ) == null ? new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.dal.VdcBllMessages.NETWORK_NOT_EXISTS_IN_CURRENT_CLUSTER ) : ValidationResult.VALID ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase endAction ( org.ovirt.engine.core.common.action.VdcActionType actionType , org.ovirt.engine.core.common.action.VdcActionParametersBase parameters , org.ovirt.engine.core.bll.context.CommandContext context ) { return org.ovirt.engine.core.bll.CommandsFactory . createCommand ( actionType , parameters , context ) . endAction () ; }
@ java.lang.Override public javax.ws.rs.core.Response resetAllOptions ( org.ovirt.engine.api.model.Action action ) { return resetOption ( action , null , null , ( action . isSetForce () ? action . isForce () : false ) ) ; }
@ org.junit.Test public void testDumpRepoToString () { java.lang.String actual = OsRepositoryImpl.INSTANCE . toString () ; java.lang.String expected = OsRepositoryImpl.INSTANCE . name () ; org.junit.Assert . assertNotSame ( expected , actual ) ; }
private static org.ovirt.engine.core.common.businessentities.StoragePool createStoragePoolLocalFS () { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; pool . setstorage_pool_type ( StorageType.LOCALFS ) ; return pool ; }
@ java.lang.Override public java.util.List < T > getSelectedItems () { java.util.List < T > selectedItems = new java.util.ArrayList < T > () ; selectedItems . add ( selectionModel . getSelectedObject () ) ; return selectedItems ; }
@ java.lang.Override protected void initLinked () { getLinked () . setEntity ( getNic () . isLinked () ) ; }
@ java.lang.Override protected java.util.ArrayList < org.ovirt.engine.core.common.businessentities.storage.DiskImage > getNodeObjects ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { return new java.util.ArrayList ( template . getDiskImageMap () . values () ) ; }
@ org.junit.Before public void mockVdsDao () { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS () ; vds . setVdsType ( VDSType.oVirtVintageNode ) ; org.mockito.Mockito . when ( vdsDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( vds ) ; }
public boolean validate ( boolean validateCpu ) { return validate ( true , validateCpu ) ; }
protected org.ovirt.engine.core.compat.Guid getEntityGuid () { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getEntityGuid ( getEntity () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Host get () { return getVdsByVdsId () ; }
void processOnClientIpChange ( org.ovirt.engine.core.compat.Guid vmId , java.lang.String newClientIp ) ;
@ java.lang.Override public void onSystemTreeSelectionChange ( org.ovirt.engine.ui.webadmin.uicommon.model.SystemTreeSelectionChangeEvent event ) { if ( ( event . getSelectedItem () ) != null ) { manager . invokePluginsNow ( STRING_CONSTANT , org.ovirt.engine.ui.webadmin.plugin.jsni.JsArrayHelper . createMixedArray ( org.ovirt.engine.ui.webadmin.plugin.entity.SystemTreeItemObject . from ( event . getSelectedItem () ) ) ) ; } }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { return group ; }
protected void setModelProvider ( com.google.inject.Provider < ? extends org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmFromExportDomainModel > importModelProvider ) { this . importModelProvider = importModelProvider ; }
@ org.junit.Test public void nonPassthroughProfileContainsPortMirroringAndQos () { passthroughProfileContainsSupportedPropertiesTest ( false , true , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.DEFAULT_GUID , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.VALID_NETWORK_FILTER_ID ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
private org.ovirt.engine.core.bll.validator.NetworkAttachmentValidator createNetworkAttachmentValidator ( org.ovirt.engine.core.common.businessentities.network.NetworkAttachment attachment ) { return new org.ovirt.engine.core.bll.validator.NetworkAttachmentValidator ( attachment , host , vmInterfaceManager , networkClusterDaoMock , networkDaoMock , vdsDaoMock , vmDao ) ; }
@ org.junit.Test public void setAndValidateSingleProfileTest () { diskImage . setDiskProfileId ( diskProfile_a . getId () ) ; map . put ( diskImage , org.ovirt.engine.core.bll.profiles.DiskProfileHelperTest.STORAGE_DOMAIN_1 ) ; org.junit.Assert . assertEquals ( ValidationResult.VALID , diskProfileHelper . setAndValidateDiskProfiles ( map , dbUser ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.AddVmCommand < org.ovirt.engine.core.common.action.AddVmParameters > createCommand () { initVM () ; return new org.ovirt.engine.core.bll.AddVmCommand ( new org.ovirt.engine.core.common.action.AddVmParameters ( vm ) , null ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < java.lang.String > ) ( source ) ) . size () ) > NUMBER_CONSTANT ; } return false ; }
public static void checkStatusAndLockVm ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VmDynamic vmDynamic = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmDynamicDao () . get ( vmId ) ; org.ovirt.engine.core.bll.VmHandler . checkStatusBeforeLock ( vmDynamic . getStatus () ) ; org.ovirt.engine.core.bll.VmHandler . LockVm ( vmId ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetVdsGroupByVdsGroupIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVdsGroupDao () . get ( org.ovirt.engine.core.bll.GetVdsGroupByVdsGroupIdQuery . getParameters () . getVdsGroupId () ) ) ; }
private org.ovirt.engine.core.common.businessentities.storage_domains mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId ) { return mockStorageDomain ( storageId , NUMBER_CONSTANT , NUMBER_CONSTANT , StorageType.UNKNOWN , new org.ovirt.engine.core.compat.Version () ) ; }
public static void adjustDisplayData ( org.ovirt.engine.api.restapi.resource.BackendResource res , org.ovirt.engine.api.model.Template template ) { org.ovirt.engine.api.restapi.util.DisplayHelper . adjustDisplayDataInternal ( res , template , null , false ) ; }
public org.ovirt.engine.core.config.entity.ConfigKey generateBlankConfigKey ( java.lang.String keyName , java.lang.String keyType ) { return new org.ovirt.engine.core.config.entity.ConfigKey ( keyType , STRING_CONSTANT , STRING_CONSTANT , keyName , STRING_CONSTANT , null , STRING_CONSTANT , getHelperByType ( keyType ) , false , false ) ; }
private void mockStorageDomainDaoGetAllStoragesForPool ( int domainSpaceGB ) { org.mockito.Mockito . when ( sdDAO . getAllForStoragePool ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( java.util.Arrays . asList ( createStorageDomain ( domainSpaceGB ) ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.apache.commons.lang.StringUtils . equals ( i . getNetworkName () , net . getName () ) ; }
@ java.lang.Override @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public < U extends T > javax.enterprise.inject.Instance < U > select ( java.lang.Class < U > aClass , java.lang.annotation.Annotation . . . annotations ) { return new org.ovirt.engine.core.di.InjectorRule.SimpleInstanceIdGenerator <> ( ( ( U ) ( org.ovirt.engine.core.di.InjectorRule.beansCache . get ( aClass ) ) ) ) ; }
private boolean statusChanged ( org.ovirt.engine.core.common.businessentities.VmDynamic dbVm , org.ovirt.engine.core.common.businessentities.VmDynamic vdsmVm ) { return ( dbVm == null ) || ( ( dbVm . getStatus () ) != ( vdsmVm . getStatus () ) ) ; }
protected boolean performImagesChecks () { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > diskImagesToCheck = org.ovirt.engine.core.bll.ImagesHandler . filterImageDisks ( getImagesList () , true , false , true ) ; org.ovirt.engine.core.bll.validator.DiskImagesValidator diskImagesValidator = new org.ovirt.engine.core.bll.validator.DiskImagesValidator ( diskImagesToCheck ) ; return validate ( diskImagesValidator . diskImagesNotLocked () ) ; }
private org.ovirt.engine.core.bll.AddQuotaCommand createCommand () { org.ovirt.engine.core.common.action.QuotaCRUDParameters param = new org.ovirt.engine.core.common.action.QuotaCRUDParameters ( mockGeneralStorageQuota () ) ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.AddQuotaCommand ( param , null ) ) ; org.mockito.Mockito . doReturn ( quotaDao ) . when ( command ) . getQuotaDao () ; return command ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) { setCommandExecutionAllowedForProvider ( ( ( org.ovirt.engine.core.common.businessentities.Provider ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue () ) ) ) ; }
private void createDummyPolicyUnit () { dummyPolicyUnit = new org.ovirt.engine.core.common.scheduling.PolicyUnit () ; dummyPolicyUnit . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; dummyPolicyUnit . setName ( STRING_CONSTANT ) ; }
@ org.junit.Test public void testIsNetworkInSyncWhenIfaceQosIsNullIfaceQosOverridden ( ) throws java.lang.Exception { iface . setQos ( null ) ; org.junit.Assert . assertThat ( createTestedInstanceWithSameNonQosValues () . isNetworkInSync () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
@ java.lang.Override public abstract < T > T getValue ( org.ovirt.engine.core.common.config.ConfigValues configValue , java.lang.String version ) ;
public void setnum_of_sockets ( int value ) { this . mVmStatic . setnum_of_sockets ( value ) ; }
private java.lang.String getPublicCollection ( java.lang.String collectionName ) { if ( this . entitiesMap . containsKey ( collectionName . toLowerCase () ) ) { return this . entitiesMap . get ( collectionName . toLowerCase () ) ; } return null ; }
public void setUsedDiskSize ( java.lang.Integer usedDiskSize ) { getStorageDynamicData () . setUsedDiskSize ( usedDiskSize ) ; UpdateTotalDiskSize () ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel value ) { return value . isPool () ? org.ovirt.engine.ui.userportal.section.main.view.tab.extended.SideTabExtendedVirtualMachineView.constants . returnVmLabel () : org.ovirt.engine.ui.userportal.section.main.view.tab.extended.SideTabExtendedVirtualMachineView.constants . shutDownVm () ; }
public void updateMinAllocatedMemory () {}
private org.ovirt.engine.core.aaa.DirectoryGroup mapGroup ( org.ovirt.engine.core.common.businessentities.LdapGroup ldapGroup ) { return new org.ovirt.engine.core.aaa.DirectoryGroup ( this . getName () , ldapGroup . getid () , ldapGroup . getname () ) ; }
public void setupMocks () { setupMocks ( true ) ; }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { return runMultipleActionsImpl ( actionType , parameters , true , false , false ) ; }
private org.ovirt.engine.core.common.action.SetupNetworksParameters createParametersForSync ( java.lang.String network , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface . . . nics ) { org.ovirt.engine.core.common.action.SetupNetworksParameters params = createParametersForNics ( nics ) ; params . setNetworksToSync ( java.util.Collections . singletonList ( network ) ) ; return params ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.HostDevice device ) { return vfsNames . contains ( device . getDeviceName () ) ; }
private void localize () { isPluggedEditor . setLabel ( constants . activateVmDiskPopup () ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpBasicUriExpectations () ; setUriInfo ( uriInfo ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testNetworkLinks ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Network network = new org.ovirt.engine.api.model.Network () ; network . setId ( org.ovirt.engine.api.restapi.util.LinkHelperTest.NETWORK_ID ) ; org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( network ) ; assertEquals ( org.ovirt.engine.api.restapi.util.LinkHelperTest.NETWORK_HREF , network . getHref () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase doWith ( final org.ovirt.engine.core.common.businessentities.StorageDomain arg ) { final org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase params = new org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase ( arg . getId () , new org.ovirt.engine.core.compat.Guid ( arg . getstorage_pool_id () . getUuid () ) ) ; params . setRunSilent ( true ) ; return params ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { clusterSnapshotConfigModel . getClusters () . setItems ( returnValue , cluster ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.Quota quota ) { java.lang.String tooltipContent = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( quota . getQuotaEnforcementType () ) ; return tooltipContent ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.providers.ExternalNetwork model ) { return model . getNetwork () . getProvidedBy () . getExternalId () ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmNicsServer getNicsResource () { return new org.ovirt.engine.api.v3.servers.V3VmNicsServer ( id , delegate . getNicsResource () ) ; }
private javax.ws.rs.core.Response fence ( org.ovirt.engine.api.model.Action action , org.ovirt.engine.core.common.action.VdcActionType vdcAction ) { return doAction ( vdcAction , new org.ovirt.engine.core.common.action.FenceVdsActionParameters ( guid ) , action ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addSoundDevice ( org.ovirt.engine.core.common.businessentities.VmBase vmBase ) { return addSoundDevice ( vmBase . getId () , vmBase . getOsId () , org.ovirt.engine.core.bll.utils.ClusterUtils . getCompatibilityVersion ( vmBase ) ) ; }
public java.lang.String getVdsGroupName () { if ( ( getVdsGroup () ) != null ) { return getVdsGroup () . getname () ; } return STRING_CONSTANT ; }
private void initDcNetworkParams () { for ( org.ovirt.engine.core.common.businessentities.network.Network network : allNetworks ) { netTodcParams . put ( network . getName () , new org.ovirt.engine.ui.uicommonweb.models.hosts.DcNetworkParams ( network ) ) ; } }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.users.VdcUser result ) { org.ovirt.engine.ui.frontend.Frontend.logger . finer ( STRING_CONSTANT ) ; callback . onSuccess ( result ) ; }
private java.lang.Object getMemberId ( org.ovirt.engine.core.common.businessentities.IVdcQueryable member ) { if ( member != null ) { return member . getQueryableId () ; } return null ; }
protected org.ovirt.engine.core.compat.Guid createTask ( org.ovirt.engine.core.compat.Guid taskId , org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo asyncTaskCreationInfo , org.ovirt.engine.core.common.action.VdcActionType parentCommand ) { return createTask ( taskId , asyncTaskCreationInfo , parentCommand , null , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.VdcObjectType > () ) ; }
@ java.lang.Override public abstract void onLogout ( ) ;
public void setAutoStartup ( boolean value ) { vmStatic . setAutoStartup ( value ) ; }
protected boolean removeMemoryVolume ( java.lang.String memoryVolumes ) { if ( isMemoryStateRemovable ( memoryVolumes ) ) { return removeMemoryVolumes ( memoryVolumes ) ; } return true ; }
public void setEntity ( org.ovirt.engine.core.common.businessentities.network.Network value ) { super . setEntity ( value ) ; }
@ java.lang.Override public java.lang.String getReplacementStringNullSafe ( org.ovirt.engine.core.common.businessentities.network.VnicProfileView profile ) { return profile == VnicProfileView.EMPTY ? org.ovirt.engine.ui.common.widget.profile.ProfileEditor.messages . emptyProfile () . asString () : org.ovirt.engine.ui.common.widget.profile.ProfileEditor.messages . profileAndNetworkSelected ( profile . getName () , profile . getNetworkName () ) ; }
@ org.junit.Test public void invalidVersion () { createCommandWithInvalidVersion () ; cpuExists () ; cpuManufacturersMatch () ; canDoActionFailedWithReason ( VdcBllMessages.ACTION_TYPE_FAILED_GIVEN_VERSION_NOT_SUPPORTED ) ; }
public final boolean isLinuxBridge () { return false ; }
private boolean isIsoVersionSupported ( java.lang.String isoVersion ) { java.lang.String supported = org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.OvirtInitialSupportedIsoVersion ) ; return ( org.ovirt.engine.core.common.utils.RpmVersionUtils . compareRpmParts ( isoVersion , supported ) ) >= NUMBER_CONSTANT ; }
@ java.lang.Override public org.ovirt.engine.api.model.Role get () { return performGet ( VdcQueryType.GetRoleById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
protected boolean shouldDiskBePlugged () { return ( ( org.ovirt.engine.core.bll.AddDiskCommand . getVm () . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VMStatus.Down ) ) && ( ! ( java.lang.Boolean.FALSE . equals ( org.ovirt.engine.core.bll.AddDiskCommand . getParameters () . getPlugDiskToVm () ) ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . getNetworkName () ) != null ) { return i . getNetworkName () . equals ( getParameters () . getNetwork () . getName () ) ; } return false ; }
@ org.junit.Test public void testJsonNullDiskDescription ( ) throws java.io.IOException { java.lang.String jsonDescription = org.ovirt.engine.core.bll.ImagesHandler . getJsonDiskDescription ( STRING_CONSTANT , null ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , jsonDescription ) ; }
private void mockJobDao ( org.ovirt.engine.core.common.job.Job job ) { org.mockito.Mockito . when ( jobDao . get ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( job ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { getCompensationContext () . snapshotEntityStatus ( diskImage . getImage () ) ; getCompensationContext () . stateChanged () ; setImageStatus ( ImageStatus.LOCKED ) ; return null ; }
public void setTitle ( java.lang.String title ) { getCell () . setTitle ( title ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ org.junit.Test public void testSubCollectionInjection ( ) throws java.lang.Exception { injectSubCollectionAndTest () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > searchStorageDomain () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getStorageDomainDao () , true ) ; }
protected org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType determineSnapshotType () { return org.ovirt.engine.core.bll.snapshots.CreateAllSnapshotsFromVmCommand . isInternalExecution () ? org.ovirt.engine.core.bll.snapshots.CreateAllSnapshotsFromVmCommand . getParameters () . getSnapshotType () : org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType.REGULAR ; }
public synchronized org.ovirt.engine.api.model.RSDL getRSDL ( ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( ( org.ovirt.engine.api.restapi.resource.BackendApiResource.rsdl ) == null ) { org.ovirt.engine.api.restapi.resource.BackendApiResource.rsdl = org.ovirt.engine.api.rsdl.RsdlManager . loadRsdl ( getCurrent () . get ( org.ovirt.engine.core.common.mode.ApplicationMode . class ) ) ; } return org.ovirt.engine.api.restapi.resource.BackendApiResource.rsdl ; }
public static java.lang.String getI18NPrefix () { if ( ( org.ovirt.engine.core.common.config.Config . getConfigUtils () ) == null ) return STRING_CONSTANT ; else return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.DBI18NPrefix ) ; }
protected void verifyActionResponse ( javax.ws.rs.core.Response r , java.lang.String baseUri , boolean async ) throws java.lang.Exception { verifyActionResponse ( r , baseUri , async , null ) ; }
@ java.lang.Override public java.lang.String getText ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . getname () ; }
@ org.junit.Test public void getUsbPolicyNullUsb () { org.ovirt.engine.api.model.Usb usb = null ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) , UsbPolicy.DISABLED ) ; }
@ java.lang.Override public java.lang.String getTooltip ( java.lang.Object object ) { java.lang.String superTooltip = super . getTooltip ( object ) ; if ( superTooltip == null ) { return org.ovirt.engine.ui.webadmin.section.main.view.popup.storage.backup.ImportVmFromExportDomainPopupView.constants . importAllocationModifiedCollapse () ; } return superTooltip ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . getName () ; }
public void createPool ( org.ovirt.engine.core.common.businessentities.MacPool macPool ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock lock = writeLockResource () ) { createPoolWithoutLocking ( macPool ) ; } }
@ org.junit.Test public void getOneSnapshotsByMemory () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , dao . getNumOfSnapshotsByMemory ( org.ovirt.engine.core.dao.SnapshotDaoTest.EXISTING_MEMORY_VOLUME ) ) ; }
private boolean allowDuplicate () { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.AllowDuplicateMacAddresses ) ; }
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum > getQuotaEnforcmentTypes () { return new java.util.ArrayList ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum [] { org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum.DISABLED , org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum.SOFT_ENFORCEMENT , org.ovirt.engine.core.common.businessentities.QuotaEnforcementTypeEnum.HARD_ENFORCEMENT } ) ) ; }
public org.ovirt.engine.core.compat.Guid persistAsyncTaskPlaceHolder ( org.ovirt.engine.core.common.action.VdcActionType parentCommand ) { return persistAsyncTaskPlaceHolder ( parentCommand , org.ovirt.engine.core.bll.CommandBase.DEFAULT_TASK_KEY ) ; }
protected boolean shouldUpdateReadOnly () { return ! ( vmDeviceForVm . getIsReadOnly () . equals ( getNewDisk () . getReadOnly () ) ) ; }
@ java.lang.Override public com.google.gwt.resources.client.ImageResource getValue ( java.lang.Object vm ) { if ( problematicItems . contains ( vm ) ) { return getApplicationResources () . alertImage () ; } return null ; }
private void testNonActiveVdsExecution ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus status ) { createStorageDomain ( status ) ; createUpStoragePool () ; createCommand () ; }
private org.ovirt.engine.core.compat.Guid ensureIconInDatabase ( java.nio.file.Path dir , java.lang.String osName ) { try { return ensureIconInDatabaseUnchecked ( dir , osName ) ; } catch ( java.lang.RuntimeException e ) { org.ovirt.engine.core.bll.IconLoader.log . warn ( e . toString () ) ; return null ; } }
protected void vdsNonOperational ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason , java.util.Map < java.lang.String , java.lang.String > customLogValues ) { getEventListener () . vdsNonOperational ( vds . getId () , reason , true , Guid.Empty , customLogValues ) ; }
@ java.lang.Override protected void beforeUiCommonInitEvent ( org.ovirt.engine.ui.uicommonweb.models.LoginModel loginModel ) { org.ovirt.engine.ui.common.uicommon.model.CommonModelManager . init ( eventBus ) ; }
public void removeUsbSlots ( org.ovirt.engine.core.compat.Guid vmId , int numberOfSlotsToRemove ) { removeVmDevices ( getUsbSlots ( vmId ) , numberOfSlotsToRemove ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.ovirt.engine.core.utils.NetworkUtils . interfaceBasedOn ( bond , i . getBondName () ) ; }
public org.ovirt.engine.core.bll.ValidationResult statusSupportedForHostUpgradeInternal () { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.VDS_CANNOT_INSTALL_STATUS_ILLEGAL ) . when ( ( ( host . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VDSStatus.Maintenance ) ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDS getValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object ; }
public void unlockImageInDb () { final org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage = ( ( org.ovirt.engine.core.common.businessentities.storage.DiskImage ) ( getOldDisk () ) ) ; diskImage . setImageStatus ( ImageStatus.OK ) ; org.ovirt.engine.core.bll.ImagesHandler . updateImageStatus ( diskImage . getImageId () , ImageStatus.OK ) ; }
protected java.lang.String clusterVersion () { return java.lang.String . format ( STRING_CONSTANT , version ) ; }
public void removePool ( org.ovirt.engine.core.compat.Guid macPoolId ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock lock = writeLockResource () ) { removeWithoutLocking ( macPoolId ) ; } }
@ java.lang.Override public javax.ws.rs.core.Response deactivate ( org.ovirt.engine.api.model.Action action ) { org.ovirt.engine.core.common.action.HotPlugDiskToVmParameters params = new org.ovirt.engine.core.common.action.HotPlugDiskToVmParameters ( vmId , guid ) ; return doAction ( VdcActionType.HotUnPlugDiskFromVm , params , action ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; existingSnapshot = dao . getById ( org.ovirt.engine.core.dao.gluster.GlusterVolumeSnapshotDaoTest.EXISTING_SNAPSHOT_ID ) ; existingSnapshot1 = dao . getById ( org.ovirt.engine.core.dao.gluster.GlusterVolumeSnapshotDaoTest.EXISTING_SNAPSHOT_ID_1 ) ; }
@ java.lang.Override public boolean entityNameExpected () { return true ; }
public static java.lang.Integer getMaxVmNameLengthWin () { java.lang.Integer maxVmNameLengthWindows = ( ( java.lang.Integer ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getConfigValuePreConverted ( ConfigurationValues.MaxVmNameLengthWindows ) ) ) ; if ( maxVmNameLengthWindows == null ) { return NUMBER_CONSTANT ; } return maxVmNameLengthWindows ; }
protected org.ovirt.engine.core.common.businessentities.aaa.LdapUser populateUserData ( org.ovirt.engine.core.common.businessentities.aaa.LdapUser user , java.lang.String domain ) { return populateUserData ( user , domain , true , true ) ; }
protected java.lang.String getToggleFullScreenKeys () { return ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ConsoleToggleFullScreenKeys ) ) ) ; }
@ java.lang.Override public boolean isQosOverridden () { return ( networkAttachmentModel . getQosOverridden () ) != null ? networkAttachmentModel . getQosOverridden () . getEntity () : false ; }
@ org.junit.Test public void testGetAll () { java.util.List < org.ovirt.engine.core.common.businessentities.CommandEntity > cmds = dao . getAll () ; org.junit.Assert . assertNotNull ( cmds ) ; org.junit.Assert . assertTrue ( ( ( cmds . size () ) > NUMBER_CONSTANT ) ) ; }
public static void adjustPopupLocationToFitScreenAndShow ( final com.google.gwt.user.client.ui.PopupPanel popup , com.google.gwt.user.client.ui.UIObject relativeObject ) { org.ovirt.engine.ui.common.utils.PopupUtils . adjustPopupLocationToFitScreenAndShow ( popup , relativeObject . getAbsoluteLeft () , relativeObject . getAbsoluteTop () , relativeObject . getOffsetWidth () , relativeObject . getOffsetHeight () , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testValidateStoragePoolRandomStoragePoolId () { command . setStoragePoolId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertFalse ( command . validate () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . assertValidationMessages ( STRING_CONSTANT , command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_POOL_NOT_EXIST ) ; }
@ org.junit.Test public void testGetAllNamesPinnedToHostReturnsNothingForHostButNotPinned ( ) throws java.lang.Exception { org.junit.Assert . assertTrue ( dao . getAllNamesPinnedToHost ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) . isEmpty () ) ; }
@ org.junit.Test public void testISCSIEmptyIqn () { org.ovirt.engine.core.common.businessentities.StorageServerConnections newISCSIConnection = createISCSIConnection ( STRING_CONSTANT , StorageType.ISCSI , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; parameters . setStorageServerConnection ( newISCSIConnection ) ; parameters . setVdsId ( Guid.Empty ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.VALIDATION_STORAGE_CONNECTION_EMPTY_IQN ) ; }
public void setWin2kHackEnable ( java.lang.Boolean value ) { _win2kHackEnable = value ; }
protected void removeCommand () { javax.transaction.Transaction transaction = org.ovirt.engine.core.utils.transaction.TransactionSupport . suspend () ; try { org.ovirt.engine.core.bll.tasks.TaskManagerUtil . removeCommand ( getCommandId () ) ; } finally { if ( transaction != null ) { org.ovirt.engine.core.utils.transaction.TransactionSupport . resume ( transaction ) ; } } }
void addColumnWithHtmlHeader ( com.google.gwt.user.cellview.client.Column < T , > column , com.google.gwt.safehtml.shared.SafeHtml headerHtml , java.lang.String width ) ;
protected java.lang.Integer getStoragePoolNameSizeLimit () { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.StoragePoolNameSizeLimit ) ; }
public boolean getRefreshStatistics () { if ( ( vmsRefresher ) == null ) { return false ; } return vmsRefresher . getRefreshStatistics () ; }
public synchronized org.ovirt.engine.core.compat.Guid CreateTask ( org.ovirt.engine.core.common.asynctasks.AsyncTaskType taskType , org.ovirt.engine.core.common.asynctasks.AsyncTaskParameters taskParameters ) { org.ovirt.engine.core.bll.SPMAsyncTask task = org.ovirt.engine.core.bll.AsyncTaskFactory . Construct ( taskType , taskParameters ) ; AddTaskToManager ( task ) ; return task == null ? org.ovirt.engine.core.compat.Guid.Empty : task . getTaskID () ; }
public org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator build () { return new org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator ( host , params , existingInterfaces , existingAttachments , new org.ovirt.engine.core.common.businessentities.BusinessEntityMap ( networks ) , managementNetworkUtil , networkClusterDaoMock , networkDaoMock , vdsDaoMock , new org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidatorHelper () , vmDao ) ; }
public org.ovirt.engine.core.bll.network.macpoolmanager.Range addRange ( long rangeStart , long rangeEnd ) { return addRange ( new org.ovirt.engine.core.bll.network.macpoolmanager.Range ( rangeStart , rangeEnd ) ) ; }
@ org.junit.Test public void testValidateCommand ( ) throws java.lang.Exception { org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( command ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Roles list () { return mapCollection ( getBackendCollection ( VdcQueryType.GetPermissionsByAdElementId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( principalId ) ) ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( object ) ) . getName () ; }
private void syncStorageDevices () { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runAction ( VdcActionType.SyncStorageDevices , new org.ovirt.engine.core.common.action.VdsActionParameters ( getEntity () . getId () ) , null , true , true ) ; }
@ org.junit.Test public void moveShareableDisk () { initializeCommand ( ImageOperation.Move , new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initSrcStorageDomain () ; initDestStorageDomain ( StorageType.NFS ) ; initVmDiskImage ( true ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ org.junit.Test @ java.lang.Override public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; setUpQueryExpectations ( STRING_CONSTANT ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( sshd ) != null ) { sshd . stop () ; } }
@ java.lang.Override protected org.ovirt.engine.api.model.VmPool deprecatedPopulate ( org.ovirt.engine.api.model.VmPool pool , org.ovirt.engine.api.model.VmPool entity ) { return parent . deprecatedPopulate ( pool , entity ) ; }
protected void startPollingAsyncTasks () { startPollingAsyncTasks ( getReturnValue () . getTaskIdList () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ! ( isHostNetworkUnreacable ( vds ) ) ) && ( vds . getStoragePoolId () . equals ( _vds . getStoragePoolId () ) ) ; }
public java.lang.String getUuid () { return utils . getUuid () ; }
@ java.lang.Override public java.lang.Void runInTransaction () { jobDao . update ( job ) ; stepDao . updateJobStepsCompleted ( job . getId () , job . getStatus () , job . getEndTime () ) ; return null ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.AuditLog x , org.ovirt.engine.core.common.businessentities.AuditLog y ) { long xid = x . getAuditLogId () ; long yid = y . getAuditLogId () ; return java.lang.Long . compare ( xid , yid ) ; }
protected boolean ignoreFailure ( final java.lang.Throwable caught ) { if ( ( caught instanceof com.google.gwt.user.client.rpc.StatusCodeException ) && ( ( ( ( com.google.gwt.user.client.rpc.StatusCodeException ) ( caught ) ) . getStatusCode () ) == NUMBER_CONSTANT ) ) { return true ; } return false ; }
@ org.junit.Test public void updateWithCpuLowerThanHost () { createSimpleCommand () ; cpuExists () ; cpuManufacturersMatch () ; clusterHasVds () ; cpuFlagsMissing () ; canDoActionFailedWithReason ( VdcBllMessages.VDS_GROUP_CANNOT_UPDATE_CPU_WITH_LOWER_HOSTS ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { publicAttachedActions = returnValue . getReturnValue () ; setAttachedActionGroups ( publicAttachedActions ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml statusWithAlertTemplate ( com.google.gwt.safehtml.shared.SafeHtml statusImage , com.google.gwt.safehtml.shared.SafeHtml alertImage , java.lang.String id , java.lang.String status ) ;
@ java.lang.Override public java.util.List < java.lang.String > allocateMacAddresses ( int numberOfAddresses ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . writeLock () ) ) { return allocateNewMacsWithoutLocking ( numberOfAddresses ) ; } }
@ org.junit.Test public void testGetAllNetworkQos () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , dao . getAllForStoragePoolId ( FixturesTool.STORAGE_POOL_MIXED_TYPES ) . size () ) ; }
@ java.lang.Override protected boolean validate () { if ( ( org.ovirt.engine.core.bll.RemoveBookmarkCommand . getBookmark () ) == null ) { addInvalidIdErrorMessages ( EngineMessage.VAR__ACTION__UPDATE ) ; return false ; } return true ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterServerHook > getGlusterServerHooks ( org.ovirt.engine.core.compat.Guid hookId ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoImpl.glusterServerHookRowMapper , createIdParameterMapper ( hookId ) ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendDataCenterNetworkResource ( STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
protected void performLogin ( T loginModel ) { org.ovirt.engine.core.common.businessentities.aaa.DbUser loggedUser = loginModel . getLoggedUser () ; beforeLogin () ; frontend . initLoggedInUser ( loggedUser ) ; user . login () ; afterLogin () ; performPlaceTransition () ; }
@ java.lang.Override public void OnSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel.maxDiskSize = ( ( java.lang.Integer ) ( returnValue ) ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.HostNIC populate ( org.ovirt.engine.api.model.HostNIC model , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface entity ) { return addStatistics ( model , entity , uriInfo , httpHeaders ) ; }
@ org.junit.Test public void testGetAll () { java.util.List < org.ovirt.engine.core.common.scheduling.ClusterPolicy > result = dao . getAll ( java.util.Collections . emptyMap () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.ClusterPolicyDaoTest.NUMBER_OF_CLUSTER_POLICIES , result . size () ) ; }
public java.lang.String getHostFingerprint ( ) throws java.lang.Exception { return getHostFingerprint ( null ) ; }
private void simulateNicExists () { org.mockito.Mockito . when ( interfaceDao . get ( org.ovirt.engine.core.bll.validator.VfsConfigValidatorTest.NIC_ID ) ) . thenReturn ( nic ) ; org.mockito.Mockito . when ( nic . getName () ) . thenReturn ( org.ovirt.engine.core.bll.validator.VfsConfigValidatorTest.NIC_NAME ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyNativeGotEnabledNotSetLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setType ( UsbType.LEGACY ) ; assertEquals ( UsbPolicy.ENABLED_LEGACY , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_NATIVE ) ) ; }
public void setId ( org.ovirt.engine.core.compat.Guid id ) { Id = id ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { cachedMaxPriority = returnValue ; postUpdatePriority ( callbacks ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.util.Map.Entry < java.lang.String , java.lang.String > object ) { return object . getValue () ; }
@ java.lang.Override public void postDisconnect () {}
public static < S , D > void build ( S source , D destination , org.ovirt.engine.ui.uicommonweb.builders.SyncBuilder < S , D > . . . builders ) { new org.ovirt.engine.ui.uicommonweb.builders.BuilderExecutor ( builders ) . build ( source , destination ) ; }
public static < T > T getValue ( org.ovirt.engine.core.common.config.ConfigValues value , java.lang.String version ) { return org.ovirt.engine.core.common.config.Config . getConfigUtils () . < T > getValue ( value , version ) ; }
private void vmTypeChanged () { behavior . vmTypeChanged ( getVmType () . getSelectedItem () ) ; }
public void run () { checkVdsClusterChangeSucceeded ( searchString , parameterList , activateVdsParameterList ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer result ) { setMaxNameLength ( result ) ; }
@ org.ovirt.engine.ui.userportal.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml vmNameCellItem ( java.lang.String id , java.lang.String name ) ;
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.NEUTRON_SETUP ) public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( ( ( org.ovirt.ovirt_host_deploy.constants.OpenStackEnv.NEUTRON_CONFIG_PREFIX ) + STRING_CONSTANT ) , STRING_CONSTANT ) ; return true ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getName () . equals ( bond . getName () ) ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.ListModel < org.ovirt.engine.core.common.businessentities.StoragePool > getValue ( org.ovirt.engine.ui.uicommonweb.models.providers.ExternalNetwork network ) { return network . getDataCenters () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return i . getName () . equals ( nic ) ; }
protected boolean cpuExists () { return ( ( cluster . getCpuName () ) == null ) || ( cpuFlagsManagerHandler . checkIfCpusExist ( cluster . getCpuName () , cluster . getCompatibilityVersion () ) ) ; }
@ java.lang.Override public void onKeyPress ( com.google.gwt.event.dom.client.KeyPressEvent event ) { if ( ( com.google.gwt.event.dom.client.KeyCodes.KEY_ENTER ) == ( event . getNativeEvent () . getKeyCode () ) ) { setInModel ( ctx , editor , editor . getValue () ) ; } }
public void setpm_port ( java.lang.Integer value ) { mVdsStatic . setpm_port ( value ) ; }
@ org.junit.Test public void validateSucceeds () { command . getParameters () . setAuditLogId ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_3 ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
private org.ovirt.engine.core.aaa.DirectoryUser getDirectoryUser ( int index ) { return new org.ovirt.engine.core.aaa.DirectoryUser ( DOMAIN , org.ovirt.engine.api.restapi.resource.aaa.BackendUsersResourceTest.NAMESPACE , EXTERNAL_IDS [ index ] , NAMES [ index ] , NAMES [ index ] ) ; }
protected void doExecute () { startProgress () ; }
public static org.ovirt.engine.core.compat.Guid asGuid ( byte [] guid ) { try { return new org.ovirt.engine.core.compat.Guid ( guid ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new org.ovirt.engine.api.restapi.utils.MalformedIdException ( e ) ; } }
protected void endStepJobCommitted () { endStepJob ( JobExecutionStatus.FINISHED , getStepMessageMap ( JobExecutionStatus.FINISHED , null ) , true ) ; }
public java.lang.String getString () { return toString () ; }
@ org.junit.Test public void add () { runAddAndVerify ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () , false , org.mockito.Mockito . times ( NUMBER_CONSTANT ) , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.OS_ID ) ; }
org.ovirt.engine.core.bll.network.cluster.UpdateClusterNetworkClusterValidator createManagementNetworkClusterValidator () { return new org.ovirt.engine.core.bll.network.cluster.UpdateClusterNetworkClusterValidator ( interfaceDao , networkDao , managementNetworkCluster ) ; }
public void initializeModel ( org.ovirt.engine.ui.uicommonweb.models.hosts.FenceProxyModel model ) { if ( ! ( model . isInitialized () ) ) { model . setInitialized () ; initializeModelHandlers ( model ) ; } }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.apache.commons.lang.StringUtils . equals ( i . getNetworkName () , net . getname () ) ; }
@ org.junit.jupiter.api.Test @ org.ovirt.engine.core.utils.MockedConfig ( value = STRING_CONSTANT ) public void testConfigVmIdPolicy () { assertSerialNumber ( org.ovirt.engine.core.vdsbroker.vdsbroker.VmSerialNumberBuilderTest.VM_ID . toString () ) ; }
@ java.lang.Override public java.lang.Object getQueryableId () { return getId () ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testInvalidParse () { org.ovirt.engine.core.compat.TimeSpan . Parse ( STRING_CONSTANT ) ; }
public void remove () { if ( ( getWindow () ) != null ) { return; } org.ovirt.engine.ui.uicommonweb.models.profiles.RemoveDiskProfileModel model = new org.ovirt.engine.ui.uicommonweb.models.profiles.RemoveDiskProfileModel ( this , getSelectedItems () ) ; setWindow ( model ) ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.RemoveGlusterServerCommand ( new org.ovirt.engine.core.common.action.gluster.RemoveGlusterServerParameters ( org.ovirt.engine.core.bll.gluster.RemoveGlusterServerCommandTest.CLUSTER_ID , null , false ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
private boolean isHostAvailable ( org.ovirt.engine.core.common.businessentities.VDS host ) { boolean isStatusUp = ( host . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VDSStatus.Up ) ; return isStatusUp ; }
@ java.lang.Override public java.lang.String encodedId ( org.ovirt.engine.core.compat.Guid id ) { return id . toString () ; }
@ org.junit.Test public void replace_emptyBuilder () { runAndCheck ( new java.lang.String () , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override protected void endVmCommand () { org.ovirt.engine.core.bll.RestoreAllSnapshotsCommand . getSnapshotDao () . updateStatus ( org.ovirt.engine.core.bll.RestoreAllSnapshotsCommand . getParameters () . getSnapshotId () , SnapshotStatus.OK ) ; super . endVmCommand () ; }
@ java.lang.Override protected void getNics ( final org.ovirt.engine.ui.frontend.AsyncQuery getNicsQuery , final org.ovirt.engine.core.compat.Guid vmId , final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel unitVmModel ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getTemplateNicList ( getNicsQuery , vmId ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel clusterGuideModel = ( ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterGuideModel ) ( target ) ) ; isAnyHostUpInCluster = ( ( java.lang.Boolean ) ( returnValue ) ) ; clusterGuideModel . UpdateOptionsNonLocalFS () ; }
private void mockMaxPciSlots () { org.ovirt.engine.core.common.utils.SimpleDependencyInjector . getInstance () . bind ( org.ovirt.engine.core.common.osinfo.OsRepository . class , osRepository ) ; org.mockito.Mockito . doReturn ( org.ovirt.engine.core.bll.AddVmFromTemplateCommandTest.MAX_PCI_SLOTS ) . when ( osRepository ) . getMaxPciDevices ( org.mockito.ArgumentMatchers . anyInt () , org.mockito.ArgumentMatchers . any () ) ; }
@ org.junit.Test public void testGetByNameForUnprivilegedUser () { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . getByName ( existingVdsGroup . getName () , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.junit.Assert . assertNull ( result ) ; }
private static org.ovirt.engine.core.bll.validator.storage.StorageDomainValidator mockStorageDomainValidator () { return org.mockito.Mockito . mock ( org.ovirt.engine.core.bll.validator.storage.StorageDomainValidator . class ) ; }
private void initAllModels ( boolean fetchFromBackend ) { if ( fetchFromBackend ) { startProgress () ; queryLabels () ; } else { initLabelModels () ; initNetworkModels () ; initNicModels () ; } }
private void removeWidget ( V widget ) { contentPanel . remove ( getEntry ( widget ) ) ; }
@ org.junit.Test public void getUsbPolicySetDisabled () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) , UsbPolicy.DISABLED ) ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.VDSGroup source ) { return ( ( java.lang.Boolean ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.SupportCustomDeviceProperties , source . getcompatibility_version () . getValue () ) ) ) ; }
@ org.junit.Test public void vnicProfileNotExist ( ) throws java.lang.Exception { vnicProfileValidationTest ( org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( VdcBllMessages.ACTION_TYPE_FAILED_VNIC_PROFILE_NOT_EXISTS ) , false , false ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.common.businessentities.Provider provider = getProvider () ; org.ovirt.engine.core.bll.provider.ProviderProxy proxy = org.ovirt.engine.core.bll.provider.ProviderProxyFactory . getInstance () . create ( provider ) ; org.ovirt.engine.core.bll.GetProviderCertificateChainQuery . getQueryReturnValue () . setReturnValue ( proxy . getCertificateChain () ) ; }
void provisionHost ( org.ovirt.engine.core.common.businessentities.VDS host , org.ovirt.engine.core.common.businessentities.ExternalHostGroup hg , org.ovirt.engine.core.common.businessentities.ExternalComputeResource computeResource , java.lang.String mac , java.lang.String discoverName , java.lang.String rootPassword , java.lang.String ip ) ;
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { return org.ovirt.engine.core.bll.VdsGroupOperationCommandBase . getParameters () . getVdsGroup () ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getClusterId () { return getEntity () . getId () ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.validator.NetworkValidator validatorNew = new org.ovirt.engine.core.bll.validator.NetworkValidator ( vmDao , getNetwork () ) ; return validate ( validatorNew . networkIsSet () ) ; }
void bindInfrastructure () { bindCommonInfrastructure ( org.ovirt.engine.ui.userportal.place.UserPortalPlaceManager . class ) ; bind ( org.ovirt.engine.ui.userportal.auth.LoggedInExtendedPlaceGatekeeper . class ) . in ( com.google.inject.Singleton . class ) ; bind ( org.ovirt.engine.ui.userportal.auth.CurrentUserRole . class ) . in ( com.google.inject.Singleton . class ) ; }
@ org.junit.Test public void serializeNetwork () { org.ovirt.engine.core.common.businessentities.network.Network net = new org.ovirt.engine.core.common.businessentities.network.Network () ; org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer serialezer = new org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer () ; junit.framework.Assert . assertTrue ( ( ( serialezer . serialize ( net ) . length () ) > NUMBER_CONSTANT ) ) ; }
@ java.lang.Override protected java.lang.String extractNameFromEntity ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getName () ; }
public void addChildCommandInfo ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.common.action.VdcActionType vdcActionType , org.ovirt.engine.core.common.action.VdcActionParametersBase parameters ) { childCommandInfoMap . put ( id , new org.ovirt.engine.core.common.utils.Pair ( vdcActionType , parameters ) ) ; }
@ java.lang.Override protected void handleEnterKey () { if ( ! ( getView () . handleEnterKeyDisabled () ) ) { super . handleEnterKey () ; } }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > score ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { return super . score ( cluster , hosts , vm , parameters ) ; }
@ org.junit.Test public void validateSucceeds () { cmd = org.mockito.Mockito . spy ( createTestCommand ( volumeId2 ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { disksViewRadioGroup . setDiskStorageType ( getModel () . getDiskViewType () . getEntity () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { allBonds = returnValue . getReturnValue () ; initNetworkModels () ; initNicModels () ; stopProgress () ; }
private void initListBoxEditors () { serverEditor = new org.ovirt.engine.ui.common.widget.editor.ListModelListBoxEditor ( new org.ovirt.engine.ui.common.widget.renderer.NullSafeRenderer < org.ovirt.engine.core.common.businessentities.VDS > () { @ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . getHostName () ; } } ) ; }
org.ovirt.engine.core.vdsbroker.vdsbroker.LUNListReturnForXmlRpc getDeviceList ( int storageType ) ;
private static void handleNotLoggedInEvent ( java.lang.String errorMessage ) { if ( STRING_CONSTANT . equals ( errorMessage ) ) { org.ovirt.engine.ui.frontend.Frontend.frontendNotLoggedInEvent . raise ( org.ovirt.engine.ui.frontend.Frontend . class , EventArgs.Empty ) ; } }
@ org.junit.Test public void testCheckGlusterQuorumWithoutBricks () { org.ovirt.engine.core.common.businessentities.Cluster cluster = getCluster ( true ) ; java.lang.Iterable < org.ovirt.engine.core.compat.Guid > hostIds = java.util.Arrays . asList ( org.ovirt.engine.core.bll.gluster.GlusterHostValidatorTest.DUMMY_SERVER_ID , org.ovirt.engine.core.bll.gluster.GlusterHostValidatorTest.SERVER_ID_1 ) ; org.junit.Assert . assertTrue ( hostValidator . checkGlusterQuorum ( cluster , hostIds ) . isEmpty () ) ; }
private org.ovirt.engine.core.bll.validator.StorageDomainValidator getValidator ( org.ovirt.engine.core.compat.Guid imageId , org.ovirt.engine.core.compat.Guid domainId ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = getDiskImageById ( imageId ) ; return new org.ovirt.engine.core.bll.validator.StorageDomainValidator ( getStorageDomainById ( domainId , diskImage . getStoragePoolId () . getValue () ) ) ; }
protected org.ovirt.engine.core.bll.storage.disk.image.TransferDiskImageCommand < org.ovirt.engine.core.common.action.TransferDiskImageParameters > spyCommand () { return new org.ovirt.engine.core.bll.storage.disk.image.TransferDiskImageCommand ( new org.ovirt.engine.core.common.action.TransferDiskImageParameters () , null ) ; }
public void CancelConfirmFocusPM () { org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel hostModel = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel ) ( getWindow () ) ) ; hostModel . setIsPowerManagementTabSelected ( true ) ; setConfirmWindow ( null ) ; }
@ org.junit.Test public void testNoIsoDomain () { org.ovirt.engine.core.bll.validator.RunVmValidatorTest . validateResult ( runVmValidator . validateBootSequence ( new org.ovirt.engine.core.common.businessentities.VM () , BootSequence.CD , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > () , null ) , false , VdcBllMessages.VM_CANNOT_RUN_FROM_CD_WITHOUT_ACTIVE_STORAGE_DOMAIN_ISO ) ; }
protected boolean setAndValidateCpuProfile () { return validate ( org.ovirt.engine.core.bll.profiles.CpuProfileHelper . setAndValidateCpuProfile ( org.ovirt.engine.core.bll.VmManagementCommandBase . getParameters () . getVm () . getStaticData () , org.ovirt.engine.core.bll.VmManagementCommandBase . getVdsGroup () . getCompatibilityVersion () , org.ovirt.engine.core.bll.VmManagementCommandBase . getUserId () ) ) ; }
public void setPreviousStatus ( org.ovirt.engine.core.common.businessentities.VDSStatus value ) { previousStatus = value ; }
@ java.lang.Override public void onSuccess ( java.util.Map < java.lang.String , java.util.List < java.lang.String > > result ) { namespacesMap = result ; populateProfiles ( getProfileEntries () ) ; }
public void updateCallBackNotified ( final org.ovirt.engine.core.compat.Guid commandId ) { commandsCache . updateCallBackNotified ( commandId ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.StorageDomain map ( org.ovirt.engine.api.model.StorageDomain entity , org.ovirt.engine.api.model.StorageDomain template ) { return parent . map ( entity , template ) ; }
@ org.junit.Test public void testDisksUsages () { java.lang.Object [] disksUsages = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . initDisksUsageData () ; java.util.Map < java.lang.String , java.lang.Object > map = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . setDisksUsageInXmlRpc ( disksUsages ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . validateDisksUsagesList ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectBuilderTest . getVmStatistics () , disksUsages , map ) ; }
private void addVolumeToDb ( final org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity createdVolume ) { createdVolume . setClusterId ( getVdsGroupId () ) ; getGlusterVolumeDao () . save ( createdVolume ) ; }
@ org.junit.Test public void testExecuteQueryWithFilteringLUNsEnabled () { lunsExpected = java.util.Collections . emptyList () ; internalExecuteQuery () ; }
public static java.lang.Integer tryParse ( java.lang.String text ) { try { return java.lang.Integer . valueOf ( text ) ; } catch ( java.lang.NumberFormatException e ) { return null ; } }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT ) ; org.ovirt.engine.api.model.Disk disk = resource . get () ; verifyModelSpecific ( disk , NUMBER_CONSTANT ) ; verifyLinks ( disk ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getExistingEntityId () { return new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ; }
@ java.lang.Override protected void onSelectedItemChanged () { super . onSelectedItemChanged () ; updateActionAvailability () ; updateAlerts () ; }
@ java.lang.Override public void run () { org.ovirt.engine.core.bll.network.MacPoolManager . getInstance () . initialize () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Disk > searchDisk () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getDiskDao () , true ) ; }
public void setNonOperationalReason ( org.ovirt.engine.core.common.businessentities.NonOperationalReason nonOperationalReason ) { this . nonOperationalReason = ( nonOperationalReason == null ) ? NonOperationalReason.NONE : nonOperationalReason ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { setIsUsbEnabled ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; }
protected org.ovirt.engine.core.common.businessentities.network.Network getNetwork () { return org.ovirt.engine.core.bll.network.cluster.AttachNetworkToVdsGroupCommand . getParameters () . getNetwork () ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SimpleActionPanel < org.ovirt.engine.core.common.businessentities.Bookmark > createActionPanel ( org.ovirt.engine.ui.webadmin.uicommon.model.BookmarkModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SimpleActionPanel ( modelProvider , modelProvider . getSelectionModel () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getCurrentVdsId () { return ( getVdsDestinationId () ) != null ? getVdsDestinationId () : super . getCurrentVdsId () ; }
public org.ovirt.engine.sdk.web.ConnectionsPoolBuilder username ( java.lang.String username ) { this . username = username ; return this ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getVdsInterfaces ( org.ovirt.engine.core.compat.Guid vdsId ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > interfaces = getInterfaceDAO () . getAllInterfacesForVds ( vdsId ) ; return interfaces == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > () : interfaces ; }
@ org.junit.Test public void validateNonExistingStepFails ( ) throws java.lang.Exception { parameters . setId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.nonExistingStepId ) ; parameters . setJobId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.jobId ) ; org.junit.Assert . assertTrue ( ( ! ( command . validate () ) ) ) ; }
protected boolean saveDiskIfNotExists ( org.ovirt.engine.core.common.businessentities.DiskImage image ) { if ( ! ( getBaseDiskDao () . exists ( image . getId () ) ) ) { getBaseDiskDao () . save ( image ) ; return true ; } return false ; }
@ java.lang.Override protected void PostDiscoverTargets ( java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.storage.SanTargetModel > newItems ) { super . PostDiscoverTargets ( newItems ) ; InitializeItems ( newItems ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.VmTemplateStatus getRawValue ( org.ovirt.engine.core.common.businessentities.VmTemplate object ) { return object . getStatus () ; }
public java.lang.String getVmName () { if ( ( ( mVmName ) == null ) && ( ( getVm () ) != null ) ) { mVmName = getVm () . getVmName () ; } return mVmName ; }
public void getHostList ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { getHostListByStatus ( aQuery , null ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel () . getIsVirtioScsiEnabled () . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; }
private static org.ovirt.engine.api.model.UsbType getUsbType ( org.ovirt.engine.api.model.Usb usb ) { return usb . isSetType () ? usb . getType () : null ; }
private org.ovirt.engine.core.common.businessentities.Network createNetwork () { network = new org.ovirt.engine.core.common.businessentities.Network () ; network . setname ( STRING_CONSTANT ) ; return network ; }
@ org.junit.Test public void canCreateLessNumaNodesAsVirtualCores () { final org.ovirt.engine.core.bll.numa.vm.AddVmNumaNodesCommand command = mockedCommandWithVmFromDb () ; vm . setNumOfSockets ( NUMBER_CONSTANT ) ; vm . setCpuPerSocket ( NUMBER_CONSTANT ) ; org.assertj.core.api.Assertions . assertThat ( command . validate () ) . isTrue () ; }
public void setVdsGroupCompatibilityVersion ( org.ovirt.engine.core.compat.Version value ) { vdsGroupCompatibilityVersion = value ; }
@ org.junit.Test public void testValidStatusForEnrollCertificate () { mockHostForActivation ( VDSStatus.Maintenance ) ; org.junit.Assert . assertThat ( validator . validateStatusForEnrollCertificate () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . getDiskMap () . size () ) ; }
protected javax.net.ssl.SSLEngine createSSLEngine ( boolean clientMode ) { final javax.net.ssl.SSLEngine engine = this . sslContext . createSSLEngine () ; engine . setUseClientMode ( clientMode ) ; return engine ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > templatesChain ) { initTemplateWithVersion ( templatesChain , templateId , useLatest ) ; }
@ org.junit.Test public void getUserName () { b . setUserName ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.NAME ) ; final java.lang.String n = b . getUserName () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.NAME , n ) ; }
@ org.junit.Test public void canRunVmPassStatelessWhenVmHAwithNegativeStatelessParam () { canRunStatelessVmTest ( true , false , java.lang.Boolean.FALSE , true ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendStorageDomainVmResource ( null , STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.NEUTRON_SETUP ) public java.lang.Boolean call ( ) throws java.lang.Exception { _setCliEnvironmentIfNecessary ( ( ( org.ovirt.ovirt_host_deploy.constants.OpenStackEnv.NEUTRON_CONFIG_PREFIX ) + STRING_CONSTANT ) , _openStackAgentProperties . getAgentConfiguration () . getQpidConfiguration () . getAddress () ) ; return true ; }
public void validate () { validateCommon () ; }
private native boolean detectXpiPlugin ( ) ;
static org.ovirt.engine.api.model.Vm getModelClearingPayloads () { org.ovirt.engine.api.model.Vm model = org.ovirt.engine.api.restapi.resource.BackendVmsResourceTest . getModel ( NUMBER_CONSTANT ) ; model . setPayloads ( new org.ovirt.engine.api.model.Payloads () ) ; return model ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network network ) { return network . getname () . equals ( networkName ) ; }
public void setused_disk_size ( java.lang.Integer value ) { getStorageDynamicData () . setused_disk_size ( value ) ; UpdateTotalDiskSize () ; }
private void prepareMocks () { org.mockito.Mockito . doReturn ( getUpServers () ) . when ( glusterUtils ) . getAllUpServers ( org.mockito.ArgumentMatchers . any () ) ; }
protected java.lang.String getVmPoolName () { return ( getVmPool () ) != null ? getVmPool () . getName () : null ; }
@ org.junit.Test public void getClusterDefault () { final org.ovirt.engine.core.common.businessentities.Cluster g = b . getCluster () ; org.junit.Assert . assertNull ( g ) ; }
public boolean isManagemet () { return org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkModel.ENGINE_NETWORK . equals ( getNetwork () . getName () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) {}
public static int getCdDeviceIndex ( java.lang.String cdInterface ) { switch ( cdInterface ) { case STRING_CONSTANT : case STRING_CONSTANT : case STRING_CONSTANT : return NUMBER_CONSTANT ; default: return - NUMBER_CONSTANT ; } }
@ java.lang.Override public void save ( org.ovirt.engine.core.common.businessentities.AuditLog event ) { getCallsHandler () . executeModification ( STRING_CONSTANT , getSqlMapper ( event ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.network.Ipv4BootProtocol getIpv4BootProtocol () { return nic . getIpv4BootProtocol () ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final java.lang.Object state ) { runMultipleAction ( actionType , parameters , false , callback , state , true ) ; }
protected boolean isTypeOpenStackNetwork () { return ( ( org.ovirt.engine.core.common.businessentities.ProviderType ) ( getType () . getSelectedItem () ) ) == ( org.ovirt.engine.core.common.businessentities.ProviderType.OPENSTACK_NETWORK ) ; }
private void setupExpectations ( org.ovirt.engine.core.common.mode.ApplicationMode appMode ) { current . setApplicationMode ( appMode ) ; resource . setUriInfo ( setUpUriInfo () ) ; setUpGetSystemVersionExpectations () ; setUpGetSystemStatisticsExpectations () ; }
@ java.lang.Override protected boolean validate () { return sessionDataContainer . isSessionExists ( org.ovirt.engine.core.bll.aaa.LogoutSessionCommand . getParameters () . getSessionId () ) ; }
@ java.lang.Override public boolean validate () { return super . validate () ; }
@ java.lang.Override protected void endWithFailure () { removeNetwork () ; removeImages () ; org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmTemplateDao () . remove ( getVmTemplateId () ) ; setSucceeded ( true ) ; }
@ org.junit.Test public void testOneKeyVal () { java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtils . string2Map ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtilsTest.ONE_KEY_VAL ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , map . size () ) ; }
@ org.junit.Test public void testGetManagedInterfaceForVdsFilteringDisabledForUnpriviligedUser () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface result = dao . getManagedInterfaceForVds ( org.ovirt.engine.core.dao.InterfaceDAOTest.VDS_ID , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , false ) ; org.ovirt.engine.core.dao.InterfaceDAOTest . assertCorrectGetManagedInterfaceForVdsResult ( result ) ; }
private org.ovirt.engine.core.bll.exportimport.ImportVmTemplateCommand createImportVmTemplateCommandSpy ( final org.ovirt.engine.core.common.action.ImportVmTemplateParameters parameters ) { return org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.exportimport.ImportVmTemplateCommand ( parameters , org.ovirt.engine.core.bll.context.CommandContext . createContext ( parameters . getSessionId () ) ) ) ; }
@ org.junit.Test public void validateFailsWithEmptyBricksList () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( volumeWithoutRemoveBricksTask , new java.util.ArrayList <> () ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { if ( ( getGlusterHook () ) != null ) { setVdsGroupId ( getGlusterHook () . getClusterId () ) ; } return super . getVdsGroup () ; }
@ org.junit.Test public void testUnknownQuery ( ) throws java.lang.Exception { org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery query = new org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , VdcQueryType.Unknown , org.ovirt.engine.core.bll.TestHelperQueriesCommandType . getQueryTypeFieldValue ( query ) ) ; }
protected org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updateEntity ( org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates ) { return updateEntity ( updates , false ) ; }
@ org.junit.Before public void setUp () { disk = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; }
@ java.lang.Override public void init ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkManageModel model ) { super . init ( model ) ; }
public void getVmWatchdogTypes ( int osId , org.ovirt.engine.core.compat.Version version , org.ovirt.engine.ui.frontend.AsyncQuery asyncQuery ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.OsRepository , new org.ovirt.engine.core.common.queries.OsQueryParameters ( org.ovirt.engine.core.common.queries.OsQueryParameters.OsRepositoryVerb.GetVmWatchdogTypes , osId , version ) , asyncQuery ) ; }
protected abstract org.ovirt.engine.core.common.businessentities.network.Network getNetwork ( ) ;
private void initTabAvailabilityListeners () { highAvailabilityTab . setVisible ( false ) ; isStatelessEditor . setVisible ( true ) ; numOfMonitorsEditor . setVisible ( true ) ; }
public void dismissAlert ( org.ovirt.engine.core.common.businessentities.AuditLog auditLog ) { org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters params = new org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters ( auditLog . getAuditLogId () ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runAction ( VdcActionType.RemoveAuditLogById , params ) ; }
@ java.lang.Override protected void setActionMessageParameters () { addValidationMessage ( EngineMessage.VAR__ACTION__COPY ) ; addValidationMessage ( EngineMessage.VAR__TYPE__VM_TEMPLATE ) ; }
public void setSupportedEngines ( java.lang.String value ) { this . mVdsDynamic . setSupportedEngines ( value ) ; }
public java.lang.String getDisplayIp () { return this . vmDynamic . getDisplayIp () ; }
@ java.lang.Override public org.ovirt.engine.api.model.OpenStackVolumeProvider update ( org.ovirt.engine.api.model.OpenStackVolumeProvider incoming ) { return performUpdate ( incoming , new org.ovirt.engine.api.restapi.resource.openstack.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetProviderById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateProvider , new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackVolumeProviderResource.UpdateParametersProvider () ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyNativeGotEnabledNativePolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( true ) ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_NATIVE ) , UsbPolicy.ENABLED_NATIVE ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { return org.ovirt.engine.core.bll.ChangeFloppyCommand . getSucceeded () ? STRING_CONSTANT . equals ( mCdImagePath ) ? org.ovirt.engine.core.common.AuditLogType.USER_EJECT_VM_FLOPPY : org.ovirt.engine.core.common.AuditLogType.USER_CHANGE_FLOPPY_VM : org.ovirt.engine.core.common.AuditLogType.USER_FAILED_CHANGE_FLOPPY_VM ; }
@ org.junit.Test public void selectionAlgoNotNone () { createCommandWithPowerSaveVdsGroup () ; oldGroupIsDetachedDefault () ; storagePoolIsLocalFS () ; cpuExists () ; cpuManufacturersMatch () ; allQueriesEmpty () ; canDoActionFailedWithReason ( VdcBllMessages.VDS_GROUP_SELECTION_ALGORITHM_MUST_BE_SET_TO_NONE_ON_LOCAL_STORAGE ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.NetworkAttachment update ( org.ovirt.engine.api.model.NetworkAttachment resource ) { return performUpdate ( resource , new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetNetworkAttachmentById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateNetworkAttachment , new UpdateParametersProvider () ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < > ) ( source ) ) . isEmpty () ) ; } return false ; }
private org.ovirt.engine.core.common.businessentities.network.Network createNetwork ( boolean vmNetwork , int mtu , java.lang.Integer vlanId ) { org.ovirt.engine.core.common.businessentities.network.Network network = new org.ovirt.engine.core.common.businessentities.network.Network () ; network . setVmNetwork ( vmNetwork ) ; network . setMtu ( mtu ) ; network . setVlanId ( vlanId ) ; return network ; }
@ java.lang.Override public org.ovirt.engine.core.utils.ISingleAsyncOperation createSingleAsyncOperation () { return new org.ovirt.engine.core.bll.storage.pool.RefreshStoragePoolAndDisconnectAsyncOperation ( getVdss () , getStorageDomain () , getStoragePool () ) ; }
public java.lang.String getPrincipalName ( java.lang.String sessionId ) { return ( ( java.lang.String ) ( getData ( sessionId , org.ovirt.engine.core.bll.aaa.SessionDataContainer.PRINCIPAL_PARAMETER_NAME , false ) ) ) ; }
private void initVds () { vds = new org.ovirt.engine.core.common.businessentities.VDS () ; vds . setId ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) ; }
protected java.lang.String getUserDefinedVMProperties () { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.UserDefinedVMProperties , org.ovirt.engine.core.bll.GetVmCustomPropertiesQuery.Version3_0 ) ; }
@ org.junit.Test public void formatStringTest () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result ) ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.VmDevice > getVirtioScsiControllers ( org.ovirt.engine.core.compat.Guid vmId ) { return getVirtioScsiControllers ( vmId , null , false ) ; }
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { updateIsMemorySnapshotSupported ( value ) ; updateIsLiveMergeSupported ( value ) ; super . setEntity ( value ) ; updateIsCloneVmSupported () ; updateVmActiveDisks () ; }
public void InternalSetVmStatus ( org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VMStatus status ) { InternalSetVmStatus ( vm , status , VmExitStatus.Normal ) ; }
private void updateActionAvailability () { org.ovirt.engine.core.common.businessentities.VDS vds = getEntity () ; if ( vds != null ) { getSyncStorageDevicesCommand () . setIsExecutionAllowed ( ( ( vds . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VDSStatus.Up ) ) ) ; } }
private void closeChannel () { try { if ( ( this . channel ) != null ) { this . channel . close () ; } } catch ( java.io.IOException e ) {} finally { this . channel = null ; } }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUpGetEntityExpectations ( NUMBER_CONSTANT ) ; setUriInfo ( setUpBasicUriExpectations () ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public void setVdsName ( final java.lang.String value ) { vdsName = value ; }
@ java.lang.Override public final java.lang.String getPathValue ( java.lang.String name , java.lang.String defaultValue ) { return ( ( java.lang.String ) ( getValue ( DataType.String , name , defaultValue ) ) ) ; }
protected void addCanDoActionMessage ( java.lang.String message ) { getReturnValue () . getCanDoActionMessages () . add ( message ) ; }
@ java.lang.Override public void postDisconnect () { if ( ( this . nioEngine ) != null ) { this . nioEngine . clearBuff () ; } this . nioEngine = null ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.validator.IscsiBondValidator validator = new org.ovirt.engine.core.bll.validator.IscsiBondValidator () ; return validate ( validator . isIscsiBondExist ( getIscsiBond () ) ) ; }
@ org.junit.Test public void sameBondNameSentTwice () { org.ovirt.engine.core.common.businessentities.VdsNetworkInterface bond = createBond ( org.ovirt.engine.core.bll.SetupNetworksHelperTest.BOND_NAME , null ) ; mockExistingIfaces ( bond ) ; org.ovirt.engine.core.bll.SetupNetworksHelper helper = createHelper ( createParametersForNics ( bond , bond ) ) ; validateAndExpectViolation ( helper , VdcBllMessages.NETWORK_INTERFACES_ALREADY_SPECIFIED , bond . getName () ) ; }
@ org.junit.Test public void testGetAllByStoragePoolAndConnectionWithInvalidStoragePool () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllByStoragePoolAndConnection ( org.ovirt.engine.core.compat.Guid . newGuid () , org.ovirt.engine.core.dao.StorageDomainDaoTest.EXISTING_CONNECTION ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
private org.ovirt.engine.core.vdsbroker.VmsMonitoring getVmsMonitoring () { return new org.ovirt.engine.core.vdsbroker.VmsMonitoring ( vdsManager , auditLogDirector , isTimeToRefreshStatistics () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid GetPoolId () { org.ovirt.engine.core.bll.UpdateVmPoolWithVmsCommand . getVmPoolDAO () . update ( org.ovirt.engine.core.bll.UpdateVmPoolWithVmsCommand . getVmPool () ) ; return org.ovirt.engine.core.bll.UpdateVmPoolWithVmsCommand . getVmPool () . getvm_pool_id () ; }
@ java.lang.Override public void edit ( final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel object ) { super . edit ( object ) ; if ( object . getIsNew () ) { object . getNumOfDesktops () . setEntity ( NUMBER_CONSTANT ) ; prestartedVmsEditor . setEnabled ( false ) ; } }
@ java.lang.Override protected boolean validate () { return ( ( org.ovirt.engine.core.bll.VdsPowerDownCommand . getVds () . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VDSStatus.Maintenance ) ) && ( super . validate () ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsUnmanagedNetwork ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertManaged ( iface , false , null ) ; }
private void cancel () { cancelConfirmation () ; setWindow ( null ) ; updateActionAvailability () ; }
protected org.ovirt.engine.api.model.Network getEntity ( int index ) { return org.ovirt.engine.api.restapi.resource.AbstractBackendNetworksResourceTest . setUpEntityExpectations ( control . createMock ( org.ovirt.engine.api.model.Network . class ) , false , false , index ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs args ) { java.lang.String propName = args.propertyName ; if ( STRING_CONSTANT . equals ( propName ) ) { modelBoundWidgetChange () ; } }
private org.ovirt.engine.core.aaa.DirectoryGroup mapGroup ( org.ovirt.engine.core.common.businessentities.LdapGroup ldapGroup ) { return new org.ovirt.engine.core.aaa.DirectoryGroup ( this . getName () , ldapGroup . getid () , ldapGroup . getname () ) ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.IPTABLES_OVERRIDE ) public java.lang.Object call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.IPTABLES_RULES , _iptables . split ( STRING_CONSTANT ) ) ; return null ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool storagePool ) { setDataCenterVersion ( storagePool . getCompatibilityVersion () ) ; }
private void checkJson ( java.lang.String json ) { @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) final java.util.Map < java.lang.String , java.lang.Boolean > map = new org.ovirt.engine.core.utils.serialization.json.JsonObjectDeserializer () . deserialize ( json , java.util.HashMap . class ) ; org.junit.Assert . assertTrue ( map . get ( STRING_CONSTANT ) ) ; }
@ java.lang.Override protected void executeCommand () { getMacPoolDao () . remove ( getMacPoolId () ) ; org.ovirt.engine.core.bll.network.macpoolmanager.MacPoolPerDcSingleton . getInstance () . removePool ( getMacPoolId () ) ; getReturnValue () . setSucceeded ( true ) ; }
@ java.lang.Override public void syncWithBackend () { super . syncWithBackend () ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.bll.utils.PermissionSubject > getPermissionCheckSubjects () { return java.util.Collections . singletonList ( new org.ovirt.engine.core.bll.utils.PermissionSubject ( getParameters () . getId () , org.ovirt.engine.core.common.VdcObjectType.Quota , getActionType () . getActionGroup () ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue result ) { org.ovirt.engine.core.common.businessentities.aaa.DbUser dbUser = result . getReturnValue () ; if ( dbUser != null ) { setCreatedByUser ( getUserName ( dbUser ) ) ; } }
@ java.lang.Override protected void initPortMirroring () { getPortMirroring () . setEntity ( getNic () . isPortMirroring () ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel value ) { return org.ovirt.engine.ui.userportal.section.main.view.tab.extended.SideTabExtendedVirtualMachineView.constants . openConsoleLabel () ; }
protected void initAllowConsoleReconnect () { getAllowConsoleReconnect () . setEntity ( true ) ; }
public org.ovirt.engine.core.dao.StorageDomainOvfInfoDao getStorageDomainOvfInfoDao () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainOvfInfoDao () ; }
@ java.lang.Override protected void setActionMessageParameters () { addCanDoActionMessage ( EngineMessage.VAR__ACTION__ADD ) ; addCanDoActionMessage ( EngineMessage.VAR__TYPE__VM ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.StoragePool dc ) { return dc . getName () ; }
public void cancel () { setWindow ( null ) ; setConfirmWindow ( null ) ; }
protected java.util.List < org.ovirt.engine.api.restapi.resource.StorageDomain > getVolumeGroups () { return getBackendCollection ( org.ovirt.engine.core.common.businessentities.StorageDomain . class , VdcQueryType.GetVgList , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( hostId ) ) ) ; }
@ org.junit.Test public void testQuery () { java.util.List < org.ovirt.engine.api.model.Statistic > statistics = query . getStatistics ( getDisk () ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , statistics . size () ) ; for ( org.ovirt.engine.api.model.Statistic statistic : statistics ) { verifyStatistic ( statistic ) ; } }
@ org.junit.Test public void testRemoveWithParam () { container . SetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_VALUE ) ; container . removeSession ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , container . GetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; }
public org.ovirt.engine.ui.uicommonweb.models.Model setIsChangeable ( boolean value ) { return setIsChangeable ( value , null ) ; }
public void setData ( java.lang.Object [] data ) { this . data = data ; }
@ java.lang.Override public void onSucceeded ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { endAction ( getCommand ( cmdId ) , childCmdIds , true ) ; }
@ java.lang.Override protected boolean validate () { return ( ( ( networkNotAttachedToCluster () ) && ( clusterExists () ) ) && ( logicalNetworkExists () ) ) && ( validateAttachment () ) ; }
protected abstract boolean validateImageTransfer ( ) ;
@ java.lang.Override protected java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface network ) { return network . getName () ; }
@ org.junit.Test public void passthroughProfileContainsQos () { passthroughProfileContainsSupportedPropertiesTest ( true , false , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.DEFAULT_GUID , null ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties ( false ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_PASSTHROUGH_PROFILE_CONTAINS_NOT_SUPPORTED_PROPERTIES ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid runInTransaction () { getCompensationContext () . resetCompensation () ; return createTaskInCurrentTransaction ( ret1 . getCreationInfo () , VdcActionType.HibernateVm , VdcObjectType.Storage , getStorageDomainId () ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.AuditLog x , org.ovirt.engine.core.common.businessentities.AuditLog y ) { long xid = x . getaudit_log_id () ; long yid = y . getaudit_log_id () ; return java.lang.Long . valueOf ( xid ) . compareTo ( yid ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface bond ) { return org.apache.commons.lang.StringUtils . equals ( bond . getBondName () , nic . getName () ) ; }
@ java.lang.Override public void updateAllInBatch ( java.util.Collection < T > entities ) { if ( entities . isEmpty () ) { return; } updateAllInBatch ( org.ovirt.engine.core.dao.MassOperationsGenericDao . getProcedureNameForUpdate () , entities , getBatchMapper () ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; diskDao = dbFacade . getBaseDiskDao () ; existingTemplate = dao . get ( org.ovirt.engine.core.dao.FixturesTool.TEMPLATE_IMAGE_ID ) ; }
public static boolean isRangeValid ( java.lang.String start , java.lang.String end ) { return ! ( org.ovirt.engine.core.utils.MacAddressRangeUtils . innerInitRange ( start , end , NUMBER_CONSTANT ) . isEmpty () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { getDefaultConfigurationVersion ( target ) ; }
public static java.lang.String getEngineNetwork () { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.ManagementNetwork ) ; }
public static org.ovirt.engine.api.model.Statistic setDatum ( org.ovirt.engine.api.model.Statistic statistic , java.lang.Double datum ) { if ( datum != null ) { return org.ovirt.engine.api.restapi.utils.StatisticResourceUtils . setDatum ( statistic , new java.math.BigDecimal ( datum , new java.math.MathContext ( NUMBER_CONSTANT ) ) ) ; } return statistic ; }
public boolean IsDisplayTypeSupported ( org.ovirt.engine.core.common.businessentities.DisplayType displayType ) { switch ( displayType ) { case vnc : return true ; case qxl : return true ; } return false ; }
public java.lang.String getVdsDestination () { if ( ( getDestinationVds () ) != null ) { return getDestinationVds () . getName () ; } else { return null ; } }
@ org.junit.Test @ java.lang.Override public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; setUpQueryExpectations ( STRING_CONSTANT ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
public org.ovirt.engine.core.common.utils.ansible.AnsibleReturnValue runCommand ( org.ovirt.engine.core.common.utils.ansible.AnsibleCommandBuilder command ) throws java.io.IOException , java.lang.InterruptedException { return runCommand ( command , org.ovirt.engine.core.common.utils.ansible.AnsibleExecutor.ANSIBLE_PLAYBOOK_TIMEOUT ) ; }
@ java.lang.Override public void initialize () { super . initialize () ; startProgress () ; initMessages () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.storage.DiskImage > getDiskSnapshotsForVmSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId ) { return diskImageDao . getAllSnapshotsForVmSnapshot ( snapshotId ) ; }
@ java.lang.Override protected void syncSearch () { org.ovirt.engine.core.common.queries.SearchParameters tempVar = new org.ovirt.engine.core.common.queries.SearchParameters ( getSearchString () , org.ovirt.engine.core.common.interfaces.SearchType.GlusterVolume , isCaseSensitiveSearch () ) ; tempVar . setMaxCount ( getSearchPageSize () ) ; super . syncSearch ( VdcQueryType.Search , tempVar ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterServerService > returnValue ) { setItems ( returnValue ) ; updateActionAvailability () ; }
@ java.lang.Override protected void selectionChanged ( java.lang.Boolean value ) { for ( org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel networkClusterModel : getClustersTableItems () ) { networkClusterModel . setRequired ( value ) ; } refreshClustersTable () ; }
public static void sort ( java.util.List source , java.util.Comparator comparer ) { java.util.Collections . sort ( source , comparer ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkModel o1 , org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkModel o2 ) { return o1 . getCluster () . getName () . compareTo ( o2 . getCluster () . getName () ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain createDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; domain . setStorageName ( STRING_CONSTANT ) ; return domain ; }
public VmRngDevice.Source getUrandomOrRandomRngSource () { return VmRngDevice.Source . getUrandomOrRandomFor ( getModel () . getCompatibilityVersion () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.ovirt.engine.core.utils.NetworkUtils . interfaceBasedOn ( bond . getName () , i . getBondName () ) ; }
void vdsNonOperational ( org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.businessentities.NonOperationalReason type , boolean logCommand , org.ovirt.engine.core.compat.Guid domainId , java.util.Map < java.lang.String , java.lang.String > customLogValues ) ;
private org.ovirt.engine.api.model.Template getFromDataDomain () { return performGet ( VdcQueryType.GetVmTemplate , new org.ovirt.engine.core.common.queries.GetVmTemplateParameters ( guid ) ) ; }
@ org.junit.Test public void testDiskAttachedToAnyNonDownVM () { org.junit.Assert . assertThat ( validator . isDiskPluggedToAnyNonDownVm ( false ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
public void setksm_state ( java.lang.Boolean value ) { this . mVdsStatistics . setksm_state ( value ) ; }
protected org.ovirt.engine.core.common.businessentities.storage.Disk getNewDisk () { return org.ovirt.engine.core.bll.UpdateVmDiskCommand . getParameters () . getDiskInfo () ; }
protected int extractIntFromListModel ( org.ovirt.engine.ui.uicommonweb.models.ListModel model ) { return ( model . getSelectedItem () ) != null ? java.lang.Integer . parseInt ( model . getSelectedItem () . toString () ) : NUMBER_CONSTANT ; }
@ org.junit.Test public void testValidateImageHasParent () { diskImage . setParentId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( cmd , EngineMessage.ACTION_TYPE_FAILED_DISK_CONFIGURATION_NOT_SUPPORTED ) ; }
@ org.junit.Test public void testGetStorageDomainWithNoStatus () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getStorageDomain ( FixturesTool.STORAGE_POOL_NFS_INACTIVE_ISO , StorageDomainType.ISO , null ) ; org.junit.Assert . assertEquals ( FixturesTool.STORAGE_DOMAIN_NFS_INACTIVE_ISO , result . getId () ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
@ org.junit.Test public void canDoActionSucceeds () { cmd = createTestCommand ( volumeId2 , NUMBER_CONSTANT ) ; org.junit.Assert . assertTrue ( cmd . canDoAction () ) ; }
@ java.lang.Override public int hashCode () { int hashCode = NUMBER_CONSTANT ; hashCode = ( hashCode * NUMBER_CONSTANT ) + ( java.lang.Integer . valueOf ( refreshRate ) . hashCode () ) ; return hashCode ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.DbUser get ( org.ovirt.engine.core.compat.Guid id ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance , parameterSource ) ; }
private boolean CanFindAnyVds ( java.util.List < java.lang.String > messages , boolean isMigrate ) { return CanFindVdsToRun ( messages , isMigrate , org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVdsDAO () . getAllOfTypes ( new org.ovirt.engine.core.common.businessentities.VDSType [] { org.ovirt.engine.core.common.businessentities.VDSType.VDS , org.ovirt.engine.core.common.businessentities.VDSType.oVirtNode } ) ) ; }
@ java.lang.Override protected boolean validate () { Q validator = getProfileValidator () ; return ( ( validate ( validator . profileIsSet () ) ) && ( validate ( validator . profileExists () ) ) ) && ( validate ( validator . isLastProfileInParentEntity () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.RolesCommandBase < org.ovirt.engine.core.common.action.RolesParameterBase > generateCommand () { return new org.ovirt.engine.core.bll.RolesCommandBase < org.ovirt.engine.core.common.action.RolesParameterBase > ( getParams () ) { @ java.lang.Override protected void executeCommand () {} } ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final java.lang.Object state ) { runMultipleAction ( actionType , parameters , false , callback , state ) ; }
public static void toStringBuilder ( java.util.Map [] map , java.lang.StringBuilder builder ) { if ( map == null ) { return; } for ( java.util.Map entry : map ) { org.ovirt.engine.core.vdsbroker.ObjectDescriptor . toStringBuilder ( entry , builder ) ; } }
private static boolean isUser ( org.ovirt.engine.core.common.businessentities.DbUser user ) { return ( user != null ) && ( ! ( user . getIsGroup () ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.Bookmark get ( org.ovirt.engine.core.compat.Guid id ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = new org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkSqlParameterSource ( id ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkRowMapper.instance , parameterSource ) ; }
private void initGraphicsData () { org.ovirt.engine.core.bll.ImportUtils . updateGraphicsDevices ( org.ovirt.engine.core.bll.ImportVmCommand . getVm () . getStaticData () , org.ovirt.engine.core.bll.ImportVmCommand . getVdsGroup () . getCompatibilityVersion () ) ; }
private void mockFenceSuccess () { org.ovirt.engine.core.common.vdscommands.VDSReturnValue returnValue = new org.ovirt.engine.core.common.vdscommands.VDSReturnValue () ; returnValue . setSucceeded ( true ) ; org.mockito.Mockito . when ( vdsBrokerFrontend . RunVdsCommand ( org.mockito.Matchers . eq ( VDSCommandType.FenceVds ) , org.mockito.Matchers . any ( org.ovirt.engine.core.common.vdscommands.GetDeviceListVDSCommandParameters . class ) ) ) . thenReturn ( returnValue ) ; }
private static void assertCorrectGetManagedInterfaceForVdsResult ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface result ) { org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertTrue ( result . getIsManagement () ) ; }
private org.ovirt.engine.core.common.utils.SubnetUtils getsSubnetUtilsInstance () { return org.ovirt.engine.core.common.utils.SubnetUtils . getInstance () ; }
private void setNetwork ( org.ovirt.engine.ui.uicommonweb.models.ListModel < org.ovirt.engine.core.common.businessentities.network.NetworkView > network ) { this . network = network ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model1 , java.lang.Object result1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > clusterNetworks = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( result1 ) ) ; profilesQuery . setModel ( clusterNetworks ) ; org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getVnicProfilesByDcId ( profilesQuery , dcId ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . intValue () : - NUMBER_CONSTANT ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.compat.Version object ) { return object . toString () ; }
@ org.junit.Test public void shouldNotElectActiveHostedEngineDomain () { prepareStorageDomainForElection ( StorageDomainStatus.Active , org.ovirt.engine.core.bll.storage.domain.StorageDomainCommandBaseTest.HE_STORAGE_DOMAIN_NAME , true ) ; org.junit.Assert . assertNull ( cmd . electNewMaster () ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel model ) { return model . getName () ; }
private boolean templateExists () { if ( ( ( org.ovirt.engine.core.bll.ImportVmCommand . getVmTemplate () ) == null ) && ( ! ( org.ovirt.engine.core.bll.ImportVmCommand . getParameters () . getCopyCollapse () ) ) ) { return failCanDoAction ( EngineMessage.ACTION_TYPE_FAILED_TEMPLATE_DOES_NOT_EXIST ) ; } return true ; }
public static boolean supportedInConfig ( org.ovirt.engine.core.common.config.ConfigValues feature , org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > GetValue ( feature , version . getValue () ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.AddVdsSpmIdCommand . getVds () . getStoragePoolId () . toString () , LockingGroup.REGISTER_VDS . name () ) ; }
@ java.lang.Override public void store ( org.ovirt.engine.ui.uicompat.IFrontendActionAsyncCallback callback ) {}
@ org.junit.Test public void testGetAsyncTaskEntitiesById () { java.util.List < org.ovirt.engine.core.common.businessentities.AsyncTask > tasks = dao . getTasksByEntity ( FixturesTool.ENTITY_WITH_TASKS_ID ) ; org.junit.Assert . assertNotNull ( tasks ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , tasks . size () ) ; }
@ java.lang.Override protected boolean isMemoryStateRemovable ( java.lang.String memoryVolume ) { return ( ! ( memoryVolume . isEmpty () ) ) && ( ( getSnapshotDao () . getNumOfSnapshotsByMemory ( memoryVolume ) ) == NUMBER_CONSTANT ) ; }
public void setEntityIds ( java.util.List < org.ovirt.engine.core.compat.Guid > entityIds ) { this . entityIds = entityIds ; if ( entityIds == null ) { this . entityIds = new java.util.ArrayList <> () ; } }
@ java.lang.Override protected boolean validate () { return org.ovirt.engine.core.bll.storage.pool.SetStoragePoolStatusCommand . checkStoragePool () ; }
public void setversion_name ( java.lang.String value ) { this . versionName = value ; }
public void setExplanation ( java.lang.String text ) { infoIcon . setTitle ( text ) ; }
protected void mockFenceResult ( org.ovirt.engine.core.bll.pm.FenceActionExecutor executor , org.ovirt.engine.core.common.businessentities.pm.FenceOperationResult result ) { org.mockito.Mockito . doReturn ( result ) . when ( executor ) . fence ( org.mockito.ArgumentMatchers . any () ) ; }
protected org.ovirt.engine.core.dao.network.InterfaceDao getInterfaceDao () { return org.ovirt.engine.core.bll.gluster.GlusterCommandBase . getDbFacade () . getInterfaceDao () ; }
private void mockClusterDao () { org.mockito.Mockito . when ( clusterDao . get ( clusterId ) ) . thenReturn ( cluster ) ; }
private org.ovirt.engine.core.common.businessentities.network.NetworkCluster createManagementNetworkCluster ( org.ovirt.engine.core.common.businessentities.network.Network managementNetwork ) { final org.ovirt.engine.core.common.businessentities.network.NetworkCluster networkCluster = new org.ovirt.engine.core.common.businessentities.network.NetworkCluster ( org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getVdsGroup () . getId () , managementNetwork . getId () , org.ovirt.engine.core.common.businessentities.network.NetworkStatus.OPERATIONAL , true , true , true , true , false ) ; return networkCluster ; }
private boolean isMaintenanceCommandExecuted ( java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { org.ovirt.engine.core.compat.Guid maintenanceCommandId = getMaintenanceCmdId ( childCmdIds ) ; org.ovirt.engine.core.common.businessentities.CommandEntity maintenanceCmd = org.ovirt.engine.core.bll.tasks.CommandCoordinatorUtil . getCommandEntity ( maintenanceCommandId ) ; return ( maintenanceCmd != null ) && ( maintenanceCmd . isExecuted () ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) com.google.gwt.safehtml.shared.SafeHtml tagItem ( com.google.gwt.safehtml.shared.SafeHtml imageHtml , java.lang.String text , java.lang.String backgroundColor , java.lang.String borderColor , java.lang.String id ) ;
@ java.lang.Override public java.lang.String getEntityNewName () { return org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getParameters () . getVdsGroup () . getName () ; }
public void setEntity ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity value ) { super . setEntity ( value ) ; updateActionAvailability ( value ) ; }
public static boolean networkLinkingSupported ( java.lang.String version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > GetValue ( ConfigValues.NetworkLinkingSupported , version ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.storage.StorageModel storageModel = ( ( org.ovirt.engine.ui.uicommonweb.models.storage.StorageModel ) ( model ) ) ; java.lang.Iterable < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.lang.Iterable < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; storageModel . postUpdateHost ( hosts ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > () ; }
public void setHighlyAvailableScore ( int value ) { this . mVdsStatistics . setHighlyAvailableScore ( value ) ; }
public org.ovirt.engine.ui.uicommonweb.models.profiles.VnicProfileModel getDefaultProfile () { return defaultProfile ; }
void vdsMovedToMaintanance ( org.ovirt.engine.core.common.businessentities.VDS vds ) ;
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createVlan ( java.lang.String baseIfaceName , int vlanId , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , ( ( baseIfaceName + STRING_CONSTANT ) + vlanId ) , false , null , vlanId , networkName , true , null , null ) ; }
private void setAllListModelsUnavailable () { for ( org.ovirt.engine.ui.uicommonweb.models.ListModel m : getItems () ) { m . setIsAvailable ( false ) ; } }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback ) { runMultipleAction ( actionType , parameters , callback , null ) ; }
protected org.ovirt.engine.core.common.businessentities.AsyncTaskStatus getTaskStatus () { org.ovirt.engine.core.common.businessentities.AsyncTaskStatus status = new org.ovirt.engine.core.common.businessentities.AsyncTaskStatus () ; status . setStatus ( AsyncTaskStatusEnum.finished ) ; status . setResult ( AsyncTaskResultEnum.success ) ; return status ; }
@ java.lang.Override public void cleanup () { getValue () . cleanup () ; getValues () . cleanup () ; super . cleanup () ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
public void setSize ( long size ) { getImage () . setSize ( size ) ; }
public boolean getDomainEnabled () { if ( isWindowsOS ) { return ! ( org.ovirt.engine.core.compat.StringHelper . isNullOrEmpty ( getSysprepDomain () . getSelectedItem () ) ) ; } return false ; }
public void setModel ( org.ovirt.engine.ui.uicommonweb.models.hosts.numa.VNodeModel nodeModel ) { virtualNodeName . setText ( org.ovirt.engine.ui.common.view.popup.numa.VirtualNumaPanel.messages . vNumaName ( nodeModel . getVm () . getName () , nodeModel . getIndex () ) ) ; setStatusIcon ( nodeModel ) ; setTypeIcon ( nodeModel ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
@ org.junit.Test public void testGetAllForQuotaId () { java.util.List < org.ovirt.engine.core.common.businessentities.Permission > result = dao . getConsumedPermissionsForQuotaId ( FixturesTool.QUOTA_GENERAL ) ; org.junit.Assert . assertEquals ( FixturesTool.USER_EXISTING_ID , result . get ( NUMBER_CONSTANT ) . getAdElementId () ) ; }
@ org.junit.Test public void testExecuteQueryAdminConfigFiltered () { assertQueryExecution ( ConfigValues.DiscardAfterDeleteSupported , true ) ; }
protected org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType queryType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase queryParams ) { queryParams . setFiltered ( isFiltered () ) ; return backend . runQuery ( queryType , sessionize ( queryParams ) ) ; }
@ org.junit.Test public void testGetByClusterIdAndServiceType () { org.ovirt.engine.core.common.businessentities.gluster.GlusterClusterService service = dao . getByClusterIdAndServiceType ( org.ovirt.engine.core.dao.gluster.GlusterClusterServiceDaoTest.CLUSTER_ID , ServiceType.GLUSTER ) ; org.junit.Assert . assertNotNull ( service ) ; org.junit.Assert . assertTrue ( ( ( service . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.gluster.GlusterServiceStatus.RUNNING ) ) ) ; }
@ java.lang.Override public void setMainTabSelectedItem ( org.ovirt.engine.core.common.businessentities.VDS selectedItem ) { hostInterfaceForm = new org.ovirt.engine.ui.webadmin.widget.host.HostInterfaceForm ( getDetailModel () , selectedItem ) ; contentPanel . remove ( ( ( contentPanel . getWidgetCount () ) - NUMBER_CONSTANT ) ) ; contentPanel . add ( hostInterfaceForm ) ; }
protected void doTestGlusterOnlyGet () { setupExpectations ( ApplicationMode.GlusterOnly ) ; verifyResponseGlusterOnly ( resource . get () ) ; }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.EventResource getEventSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendEventResource ( id ) ) ; }
@ java.lang.Override protected void executeCommand () { org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getBookmarkDao () . remove ( org.ovirt.engine.core.bll.RemoveBookmarkCommand . getBookmark () . getId () ) ; org.ovirt.engine.core.bll.RemoveBookmarkCommand . setSucceeded ( true ) ; }
private void closeChannel () { try { this . channel . close () ; } catch ( java.io.IOException e ) {} finally { this . channel = null ; } }
protected void initAllowConsoleReconnect () { getAllowConsoleReconnect () . setEntity ( true ) ; }
void mockSessionDataContainer () { org.mockito.Mockito . doReturn ( org.ovirt.engine.core.bll.ConfigureConsoleOptionsQueryTest.SSO_TOKEN ) . when ( sessionDataContainer ) . getSsoAccessToken ( org.mockito.ArgumentMatchers . any () ) ; }
protected void vdsNonOperational ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason , java.util.Map < java.lang.String , java.lang.String > customLogValues ) { org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () . getEventListener () . vdsNonOperational ( vds . getId () , reason , true , Guid.Empty , customLogValues ) ; }
@ java.lang.Override protected boolean isFeatureSupported ( org.ovirt.engine.core.compat.Version clusterVersion ) { return ( mockCompatibilityVersion . compareTo ( Version.v3_5 ) ) >= NUMBER_CONSTANT ; }
@ java.lang.Override protected void selectedItemsChanged () { super . selectedItemsChanged () ; updateActionAvailability ( getEntity () ) ; }
@ org.junit.Test public void testMonitoringStrategyFactoryVirtStrategy () { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS () ; org.ovirt.engine.core.vdsbroker.MonitoringStrategy monitoringStrategy = org.ovirt.engine.core.vdsbroker.MonitoringStrategyFactory . getMonitoringStrategyForVds ( vds ) ; org.junit.Assert . assertTrue ( ( monitoringStrategy instanceof org.ovirt.engine.core.vdsbroker.VirtMonitoringStrategy ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.apache.commons.lang.StringUtils . equals ( i . getNetworkName () , getParameters () . getNetwork () . getname () ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.Erratum erratum ) { return erratum . getId () ; }
public org.ovirt.engine.core.bll.ValidationResult hostWasInstalled () { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.CANNOT_UPGRADE_HOST_WITHOUT_OS ) . when ( ( ( host . getHostOs () ) == null ) ) ; }
protected java.lang.String getSupportedStorageFormats ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.SupportedStorageFormats , version . toString () ) ; }
@ javax.ws.rs.DELETE @ javax.ws.rs.Consumes ( value = { ApiMediaType.APPLICATION_XML , ApiMediaType.APPLICATION_JSON } ) javax.ws.rs.core.Response remove ( ) ;
public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > getImagesParameters () { return imagesParameters ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendTagResource ( STRING_CONSTANT , null ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.ExternalComputeResource > computeResources ) { org.ovirt.engine.ui.uicommonweb.models.ListModel externalComputeResourceListModel = getExternalComputeResource () ; externalComputeResourceListModel . setItems ( computeResources ) ; externalComputeResourceListModel . setIsChangeable ( true ) ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . executeCommand ( command ) ; if ( command == ( getDismissCommand () ) ) { dismissAlert () ; } else if ( command == ( getClearAllCommand () ) ) { clearAllDismissedAlerts () ; } }
@ org.junit.Test public void getUsbTypeEnabledNative () { org.ovirt.engine.core.common.businessentities.UsbPolicy usbPolicy = org.ovirt.engine.core.common.businessentities.UsbPolicy.ENABLED_NATIVE ; org.junit.Assert . assertEquals ( UsbType.NATIVE , org.ovirt.engine.api.restapi.utils.UsbMapperUtils . getUsbType ( usbPolicy ) ) ; }
@ org.junit.Test public void compareWhenSizesAreNotEqual () { int availableDiskSize = getRandomNumberForTest () ; setStorageDomainsAvailableDiskSize ( ( availableDiskSize / NUMBER_CONSTANT ) , availableDiskSize ) ; assertBiggerThan ( storageDomain1 , storageDomain2 ) ; assertSmallerThan ( storageDomain2 , storageDomain1 ) ; }
private void initConditions () { org.mockito.Mockito . when ( dbFacade . getInterfaceDao () ) . thenReturn ( interfaceDao ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.StorageDomain sp ) { java.lang.String tooltipContent = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( sp . getStatus () ) ; return tooltipContent ; }
public org.ovirt.engine.core.common.businessentities.Erratum getSelectedErratum () { @ java.lang.SuppressWarnings ( value = { STRING_CONSTANT , STRING_CONSTANT } ) com.google.gwt.view.client.SingleSelectionModel < org.ovirt.engine.core.common.businessentities.Erratum > selectionModel = ( ( com.google.gwt.view.client.SingleSelectionModel ) ( errataTable . getSelectionModel () ) ) ; return selectionModel . getSelectedObject () ; }
@ org.junit.Test public void testAttrAndElement () { org.ovirt.engine.api.types.V4Vm object = objectFromXml ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , object . id () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , object . name () ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.DiskImage > returnValue ) { initTemplateDisks ( returnValue ) ; }
@ java.lang.Override protected boolean canDoAction () { return ( validate ( networkClusterAttachmentExists () ) ) && ( validateAttachment () ) ; }
@ org.junit.Test public void passthroughProfileContainsQos () { passthroughProfileContainsSupportedPropertiesTest ( true , false , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.DEFAULT_GUID , null ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_PASSTHROUGH_PROFILE_CONTAINS_NOT_SUPPORTED_PROPERTIES ) ) ; }
@ org.junit.Test public void testGetByNameAndCluster () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByNameAndCluster ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME , cluster ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME , result . getName () ) ; }
private void dbFacadeThrowOnNetworkClusterSave () { org.mockito.Mockito . doThrow ( new org.springframework.dao.DataIntegrityViolationException ( STRING_CONSTANT ) ) . when ( mockNetworkClusterDao ) . save ( org.mockito.ArgumentMatchers . any () ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData object ) { return ( java.lang.String . valueOf ( object . getVm () . getVmMemSizeMb () ) ) + STRING_CONSTANT ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , org.ovirt.engine.core.common.businessentities.VM vm , org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotStatus snapshotStatus , java.lang.String memoryVolume , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addActiveSnapshot ( snapshotId , vm , snapshotStatus , memoryVolume , null , compensationContext ) ; }
public org.ovirt.engine.core.common.businessentities.VMStatus getStatus () { return this . vmDynamic . getStatus () ; }
private org.ovirt.engine.core.bll.GetVmConfigurationBySnapshotQuery < org.ovirt.engine.core.common.queries.IdQueryParameters > setupQueryBySnapshotId ( org.ovirt.engine.core.compat.Guid snapshotId ) { org.ovirt.engine.core.common.queries.IdQueryParameters queryParams = getQueryParameters () ; org.mockito.Mockito . when ( queryParams . getId () ) . thenReturn ( snapshotId ) ; return getQuery () ; }
private void logException ( java.lang.RuntimeException ex ) { log . errorFormat ( STRING_CONSTANT , org.ovirt.engine.core.vdsbroker.VDSCommandBase . getCommandName () , org.apache.commons.lang.exception.ExceptionUtils . getMessage ( ex ) ) ; }
void mockSessionDataContainer ( org.ovirt.engine.core.bll.ConfigureConsoleOptionsQuery query ) { org.mockito.Mockito . doReturn ( org.ovirt.engine.core.bll.ConfigureConsoleOptionsQueryTest.SSO_TOKEN ) . when ( sessionDataContainer ) . getSsoAccessToken ( org.mockito.Matchers . anyString () ) ; }
protected void initWidget ( T widget ) { super . initWidget ( widget ) ; widget . setModal ( true ) ; widget . setGlassEnabled ( true ) ; widget . addStyleName ( resources . dialogBoxStyle () . getName () ) ; }
@ com.google.inject.Inject public final void setEventBus ( com.google.gwt.event.shared.EventBus eventBus ) { this . eventBus = eventBus ; registerHandlers () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel () . getIsSoundcardEnabled () . setEntity ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; initTemplate () ; initCdImage () ; }
private java.lang.String getRunActionErrorMessage ( final java.util.List < java.lang.String > messages ) { if ( ( messages . size () ) < NUMBER_CONSTANT ) { return STRING_CONSTANT ; } else { return messages . iterator () . next () ; } }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.compat.RpmVersion version ) { return version . getRpmName () ; }
public void cancel () { cancelConfirmation () ; setGuideContext ( null ) ; setWindow ( null ) ; updateActionAvailability () ; }
private boolean isLiveSnapshotEnabled () { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.LiveSnapshotEnabled , org.ovirt.engine.core.bll.CreateAllSnapshotsFromVmCommand . getStoragePool () . getcompatibility_version () . getValue () ) ; }
@ java.lang.Override public void onResizeEnd ( com.google.gwt.user.cellview.client.Column < T , > column , com.google.gwt.dom.client.Element headerElement ) { super . onResizeEnd ( column , headerElement ) ; table . redraw () ; }
@ java.lang.Override protected void endSuccessfully () { checkTrustedService () ; endActionOnAllImageGroups () ; org.ovirt.engine.core.bll.VmHandler . unLockVm ( org.ovirt.engine.core.bll.ImportVmCommand . getVm () ) ; org.ovirt.engine.core.bll.ImportVmCommand . setSucceeded ( true ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > getNetworkList () { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > () ; list . add ( network ) ; return list ; }
public static void RunMultipleQueries ( final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryType > queryTypeList , final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryParametersBase > queryParamsList , final org.ovirt.engine.ui.uicompat.IFrontendMultipleQueryAsyncCallback callback ) { org.ovirt.engine.ui.frontend.Frontend . RunMultipleQueries ( queryTypeList , queryParamsList , callback , null ) ; }
private static org.ovirt.engine.core.common.businessentities.storage.DiskImage createShareableDiskImage () { org.ovirt.engine.core.common.businessentities.storage.DiskImage image = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; image . setShareable ( true ) ; return image ; }
@ org.junit.Test public void validateFailureOnMovingVmLunDisk () { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.LunDisk () ) ; vmDevice . setSnapshotId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_NOT_SUPPORTED_DISK_STORAGE_TYPE ) ; }
protected org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity getHookEntity () { org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity hook = new org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity () ; hook . setClusterId ( org.ovirt.engine.core.bll.gluster.GlusterHookCommandTest.CLUSTER_ID ) ; hook . setId ( org.ovirt.engine.core.bll.gluster.GlusterHookCommandTest.HOOK_ID ) ; hook . setServerHooks ( getGlusterServerHooks () ) ; return hook ; }
private void mockConfigSizeDefaults () { int requiredSpaceBufferInGB = NUMBER_CONSTANT ; mockConfigSizeRequirements ( requiredSpaceBufferInGB ) ; }
@ org.junit.Test public void testValidate () { org.ovirt.engine.core.bll.UpdateRngDeviceCommand command = mockCommand () ; org.junit.Assert . assertEquals ( true , command . validate () ) ; }
protected boolean validateSnapshotType () { org.ovirt.engine.core.common.businessentities.Snapshot snapshot = org.ovirt.engine.core.bll.RemoveSnapshotCommand . getSnapshotDao () . get ( org.ovirt.engine.core.bll.RemoveSnapshotCommand . getParameters () . getSnapshotId () ) ; return validate ( createSnapshotValidator () . snapshotTypeSupported ( snapshot , java.util.Collections . singletonList ( Snapshot.SnapshotType.REGULAR ) ) ) ; }
private void mockSameNameQuery ( boolean result ) { org.mockito.Mockito . doReturn ( result ) . when ( command ) . isVmWithSameNameExists ( org.mockito.ArgumentMatchers . anyString () , org.mockito.ArgumentMatchers . any () ) ; }
public org.ovirt.engine.api.rsdl.RsdlBuilder.LinkBuilder responseType ( final java.lang.String responseType ) { org.ovirt.engine.api.model.Response response = new org.ovirt.engine.api.model.Response () ; response . setType ( responseType ) ; link . setResponse ( response ) ; return this ; }
protected void cleanupModelItems () { if ( ( modelItems ) != null ) { for ( T item : modelItems ) { if ( item instanceof org.ovirt.engine.ui.uicommonweb.HasCleanup ) { ( ( org.ovirt.engine.ui.uicommonweb.HasCleanup ) ( item ) ) . cleanup () ; } } } }
@ org.junit.Test public void invalidLowMTU () { java.util.Set < javax.validation.ConstraintViolation < org.ovirt.engine.core.common.utils.MTUValidatorTest.MtuContainer > > validate = validate ( new org.ovirt.engine.core.common.utils.MTUValidatorTest.MtuContainer ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertTrue ( ( ! ( validate . isEmpty () ) ) ) ; }
@ java.lang.Override protected boolean validate () { return validate ( validator . isIscsiBondExist ( getIscsiBond () ) ) ; }
@ org.junit.Before public void setUp () { comp = new org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter () ; }
private boolean deviceExists ( org.ovirt.engine.core.common.businessentities.VmDeviceGeneralType generalType , org.ovirt.engine.core.common.utils.VmDeviceType deviceType ) { return ! ( vmDeviceDao . getVmDeviceByVmIdTypeAndDevice ( org.ovirt.engine.core.bll.UpdateVmVersionCommand . getVmTemplateId () , generalType , deviceType ) . isEmpty () ) ; }
public void runQuery ( final org.ovirt.engine.core.common.queries.VdcQueryType queryType , final org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters , final org.ovirt.engine.ui.frontend.AsyncQuery callback ) { runQuery ( queryType , parameters , callback , false ) ; }
@ org.junit.Test public void testMapConfigurationType () { org.ovirt.engine.api.model.ConfigurationType configurationTypeBll = org.ovirt.engine.api.restapi.types.VmMapper . map ( ConfigurationType.OVF , null ) ; assertEquals ( org.ovirt.engine.api.model.org.ovirt.engine.core.common.businessentities.ConfigurationType , configurationTypeBll ) ; org.ovirt.engine.api.model.ConfigurationType configurationTypeApi = org.ovirt.engine.api.restapi.types.VmMapper . map ( org.ovirt.engine.api.model.org.ovirt.engine.core.common.businessentities.ConfigurationType , null ) ; assertEquals ( ConfigurationType.OVF , configurationTypeApi ) ; }
@ java.lang.Override protected boolean validate () { return ( validate ( hostExists () ) ) && ( ( org.ovirt.engine.core.bll.RefreshHostInfoCommandBase . isInternalExecution () ) || ( validate ( hostStatusValid () ) ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VdsStatic getByHostName ( java.lang.String host ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsStaticDAODbFacadeImpl.VdsStaticRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , host ) ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { processOldImageFromDb () ; addDiskImageToDb ( newDiskImage , getCompensationContext () , java.lang.Boolean.TRUE ) ; setActionReturnValue ( newDiskImage ) ; setSucceeded ( true ) ; return null ; }
@ org.junit.Test public void testGetWithInvalidId () { org.ovirt.engine.core.common.businessentities.VdsStatistics result = dao . get ( org.ovirt.engine.core.compat.Guid . NewGuid () ) ; org.junit.Assert . assertNull ( result ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendClusterNetworkResource ( STRING_CONSTANT , null ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.Override public void onResizeStart ( com.google.gwt.user.cellview.client.Column < T , > column , com.google.gwt.dom.client.Element headerElement ) {}
private org.ovirt.engine.core.compat.Guid getVmSnapshotIdForType ( org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType type ) { return org.ovirt.engine.core.bll.RestoreStatelessVmCommand . getSnapshotDao () . getId ( org.ovirt.engine.core.bll.RestoreStatelessVmCommand . getVmId () , type ) ; }
@ org.junit.Test public void testCDAStoragePoolValid () { vds . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertFalse ( STRING_CONSTANT , command . canDoAction () ) ; org.ovirt.engine.core.bll.CommandAssertUtils . checkMessagesContains ( command , VdcBllMessages.CANNOT_FORCE_SELECT_SPM_VDS_NOT_IN_POOL ) ; }
protected void init () { struct . put ( VdsProperties.vm_guid , org.ovirt.engine.core.vdsbroker.vdsbroker.HotPlugNicVDSCommand . getParameters () . getVm () . getId () . toString () ) ; struct . put ( VdsProperties.VM_NETWORK_INTERFACE , initNicStructure () ) ; }
private boolean networkExists () { return ( org.ovirt.engine.core.bll.network.cluster.AttachNetworkToVdsGroupCommand . getNetworkClusterDAO () . get ( org.ovirt.engine.core.bll.network.cluster.AttachNetworkToVdsGroupCommand . getNetworkCluster () . getId () ) ) != null ; }
public double getAllocated () { return ( ( virtualTotal ) / ( ( physicalTotal ) == NUMBER_CONSTANT ? NUMBER_CONSTANT : physicalTotal ) ) * NUMBER_CONSTANT ; }
private static void setHref ( org.ovirt.engine.api.model.BaseResource model ) { org.ovirt.engine.api.restapi.util.LinkHelper . setHref ( model , null ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid extractStoragePoolIdNullSafe ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getStoragePoolId () ; }
@ java.lang.Override public javax.ws.rs.core.Response allocateVm ( org.ovirt.engine.api.model.Action action ) { return doAction ( VdcActionType.AttachUserToVmFromPoolAndRun , new org.ovirt.engine.core.common.action.AttachUserToVmFromPoolAndRunParameters ( guid , getCurrent () . getUser () . getId () ) , action , new org.ovirt.engine.api.restapi.resource.BackendVmPoolResource.VmQueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetVmByVmId , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) ) ; }
public java.lang.String getName () { return name ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.RemoveVdsCommand . getParameters () . getVdsId () . toString () , LockingGroup.VDS . name () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { getConnectivityTimeout () . setEntity ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; postOnSetupNetworks () ; }
@ java.lang.Override public java.util.Collection < java.lang.String > findProblematicMacs ( org.ovirt.engine.core.common.businessentities.VM vm ) { vm . setClusterId ( clusterId ) ; return externalVmMacsFinder . findExternalMacAddresses ( vm ) ; }
private boolean isEditConsoleEnabled ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel item ) { return ( ( item != null ) && ( ( item . getVM () ) != null ) ) && ( item . getVM () . isRunningOrPaused () ) ; }
private void mockStorageDomainStatic ( org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { final org.ovirt.engine.core.common.businessentities.StorageDomainStatic domain = new org.ovirt.engine.core.common.businessentities.StorageDomainStatic () ; domain . setStorageType ( storageType ) ; org.mockito.Mockito . when ( storageDomainStaticDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( domain ) ; }
public void getManagementNetworkName ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { getConfigFromCache ( new org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ( org.ovirt.engine.core.common.queries.ConfigurationValues.ManagementNetwork , getDefaultConfigurationVersion () ) , aQuery ) ; }
@ org.junit.AfterClass public static void cleanUp () { if ( ( org.ovirt.engine.core.utils.ssh.TransferTest.local1 ) != null ) { if ( ! ( org.ovirt.engine.core.utils.ssh.TransferTest.local1 . delete () ) ) {} org.ovirt.engine.core.utils.ssh.TransferTest.local1 = null ; } org.ovirt.engine.core.utils.ssh.TestCommon . terminate () ; }
public void setVms ( java.util.Map < java.lang.String , org.ovirt.engine.sdk.entities.VM > vms ) { this . vms = vms ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.network.cluster.UpdateNetworkClusterValidator createValidator () { return new org.ovirt.engine.core.bll.network.cluster.UpdateNetworkClusterValidator ( interfaceDao , networkDao , networkCluster , oldNetworkCluster ) ; }
@ java.lang.Override protected void executeQuery ( org.ovirt.engine.core.bll.adbroker.DirectorySearcher directorySearcher ) { PopulateUsers () ; setSucceeded ( true ) ; }
public int getConnectionId () { return this . client . getConnectionId () ; }
@ org.junit.Test public void canDetachMaintenanceDomain () { setStorageDomainStatus ( StorageDomainStatus.Inactive ) ; storagePoolExists () ; masterDomainIsUp () ; canDetachDomain () ; org.junit.Assert . assertTrue ( cmd . canDetachDomain ( false , false ) ) ; }
@ java.lang.Override protected java.lang.String transform ( org.ovirt.engine.core.common.businessentities.storage.RepoImage repoImage ) { return ( org.ovirt.engine.ui.uicommonweb.dataprovider.ImagesDataProvider.ISO_PREFIX ) + ( super . transform ( repoImage ) ) ; }
private void initDcNetworkParams () { for ( org.ovirt.engine.core.common.businessentities.network.Network network : allNetworks ) { netTodcParams . put ( network . getname () , new org.ovirt.engine.ui.uicommonweb.models.hosts.DcNetworkParams ( network ) ) ; } }
@ java.lang.Override public org.ovirt.api.metamodel.tool.JavaClassName getInterfaceName ( org.ovirt.api.metamodel.concepts.Type type ) { return getTypeName ( type , javaPackages . getTypesPackageName () , null , null ) ; }
public static boolean isNulOrEmpty ( java.lang.String string ) { return ( string == null ) || ( STRING_CONSTANT . equals ( string ) ) ; }
private void mockBackend () { org.mockito.Mockito . when ( backend . runAction ( org.mockito.ArgumentMatchers . any ( org.ovirt.engine.core.common.action.VdcActionType . class ) , org.mockito.ArgumentMatchers . any ( org.ovirt.engine.core.common.action.CpuProfileParameters . class ) ) ) . thenReturn ( new org.ovirt.engine.core.common.action.VdcReturnValueBase () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain storage_domain ) { return ( storage_domain . getstorage_domain_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainType.Master ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByName ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.network.NetworkDaoTest.EXISTING_NETWORK_NAME , result . getName () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { spice . setUsbAutoShare ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; }
public static void getGlusterVolumeBrickDetails ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid clusterId , org.ovirt.engine.core.compat.Guid volumeId , org.ovirt.engine.core.compat.Guid brickId ) { org.ovirt.engine.core.common.queries.gluster.GlusterVolumeAdvancedDetailsParameters parameters = new org.ovirt.engine.core.common.queries.gluster.GlusterVolumeAdvancedDetailsParameters ( clusterId , volumeId , brickId , true ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetGlusterVolumeAdvancedDetails , parameters , aQuery ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createBond ( java.lang.String name , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , name , true , null , null , networkName , true , null , null ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.ServerCpu object ) { return object . getCpuName () ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > () : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; }
public static org.ovirt.engine.core.common.businessentities.VmDynamic buildVMDynamicData ( java.util.Map < java.lang.String , java.lang.Object > xmlRpcStruct ) { org.ovirt.engine.core.common.businessentities.VmDynamic vmdynamic = new org.ovirt.engine.core.common.businessentities.VmDynamic () ; org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . updateVMDynamicData ( vmdynamic , xmlRpcStruct ) ; return vmdynamic ; }
public void setnum_of_monitors ( int value ) { this . mVmStatic . setnum_of_monitors ( value ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetQuotaByStoragePoolIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getQuotaDao () . getQuotaByStoragePoolGuid ( org.ovirt.engine.core.bll.GetQuotaByStoragePoolIdQuery . getParameters () . getId () ) ) ; }
private void mockVds () { mockGetStorageDomainList ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
protected boolean isSetParent ( org.ovirt.engine.api.model.Tag tag ) { return ( tag . isSetParent () ) && ( tag . getParent () . isSetId () ) ; }
@ java.lang.Override public void render ( com.google.gwt.cell.client.Cell.Context context , java.lang.Boolean value , com.google.gwt.safehtml.shared.SafeHtmlBuilder sb , java.lang.String id ) { super . render ( context , value , sb , id ) ; sb . append ( title ) ; }
protected org.ovirt.engine.core.common.queries.VdcQueryReturnValue getAllDisksByStorageDomain ( org.ovirt.engine.core.compat.Guid domainId ) { return org.ovirt.engine.core.bll.storage.GetVmsByStorageDomainQuery . getBackend () . RunQuery ( VdcQueryType.GetAllDisksByStorageDomainId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( domainId ) ) ; }
public org.ovirt.engine.core.dao.network.VmNicDao getVmNicDao () { return getDbFacade () . getVmNicDao () ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetGraphicsExpectations ( NUMBER_CONSTANT ) ; setUpGetEntityExpectations ( NUMBER_CONSTANT ) ; setUpGetBallooningExpectations () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
protected void initTableColumns () { hostsTable . addColumn ( new org.ovirt.engine.ui.common.widget.table.column.AbstractEntityModelTextColumn < java.lang.String > () { @ java.lang.Override public java.lang.String getText ( java.lang.String hostAddress ) { return hostAddress ; } } , org.ovirt.engine.ui.webadmin.section.main.view.popup.gluster.DetachGlusterHostsPopupView.constants . detachGlusterHostsHostAddress () ) ; }
public static void adjustDisplayData ( org.ovirt.engine.api.restapi.resource.BackendResource res , org.ovirt.engine.api.model.Template template ) { org.ovirt.engine.api.restapi.util.DisplayHelper . adjustDisplayDataInternal ( res , template , null ) ; }
public java.util.Collection < org.ovirt.engine.core.compat.Guid > getGroupIds () { if ( ( groupIds ) == null ) { groupIds = java.util.Collections . emptyList () ; } return new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( groupIds ) ; }
void localize ( org.ovirt.engine.ui.common.CommonApplicationConstants constants ) { searchButton . setLabel ( constants . goPermissionsPopup () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase behavior = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase ) ( target ) ) ; cachedMaxPriority = ( ( java.lang.Integer ) ( returnValue ) ) ; behavior . PostUpdatePriority () ; }
public void setVdsId ( org.ovirt.engine.core.compat.Guid vdsId ) { this . vdsId = vdsId ; this . statistics . setVdsId ( vdsId ) ; }
protected java.util.concurrent.Callable < org.ovirt.engine.core.common.businessentities.pm.FenceOperationResult > createTask ( final org.ovirt.engine.core.bll.pm.FenceActionExecutor executor , final org.ovirt.engine.core.common.businessentities.pm.FenceActionType fenceAction ) { return ( ) - > executor . fence ( fenceAction ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain getStorageDomain ( org.ovirt.engine.core.compat.Guid domainId ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainDao () . getForStoragePool ( domainId , vmTemplate . getStoragePoolId () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer result ) { ApplySearchPageSize ( result ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.VM v ) { return ( v . getMigrationSupport () ) == ( org.ovirt.engine.core.common.businessentities.MigrationSupport.MIGRATABLE ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void constructorInvariants_capacityLowerBound () { new org.ovirt.engine.ui.common.utils.AddOnlyRingBuffer ( NUMBER_CONSTANT , new org.ovirt.engine.ui.common.utils.AddOnlyRingBufferTest.StringArrayBuffer () ) ; }
@ java.lang.Override protected void setActionMessageParameters () { switch ( getParameters () . getAction () ) { case START : addCanDoActionMessage ( VdcBllMessages.VAR__ACTION__START ) ; break; default: break; } addCanDoActionMessage ( VdcBllMessages.VAR__TYPE__GLUSTER_BRICK ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.ActionGroupsToRoleParameter generateParameters () { org.ovirt.engine.core.compat.Guid roleId = org.ovirt.engine.core.compat.Guid . newGuid () ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.ActionGroup > groups = new java.util.ArrayList ( java.util.Arrays . asList ( ActionGroup.DELETE_HOST , ActionGroup.CONFIGURE_ENGINE ) ) ; return new org.ovirt.engine.core.common.action.ActionGroupsToRoleParameter ( roleId , groups ) ; }
private static java.lang.Integer getLowDiskSpaceThreshold () { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.FreeSpaceCriticalLowInGB ) ; }
@ org.junit.Test public void vmTemplateName () { b . setVmTemplateName ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.NAME ) ; final java.lang.String nm = b . getVmTemplateName () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.NAME , nm ) ; }
private static boolean isVlan ( org.ovirt.engine.core.common.businessentities.network.Network net ) { return ( net . getvlan_id () ) != null ; }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.List < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { return runMultipleActionsImpl ( actionType , parameters , true , false , false , null ) ; }
public void setavailable_disk_size ( java.lang.Integer value ) { getStorageDynamicData () . setavailable_disk_size ( value ) ; UpdateTotalDiskSize () ; UpdateOverCommitPercent () ; }
@ org.junit.Test public void testList ( ) throws java.lang.Exception { setUpGetVmHostDevicesExpectations () ; verifyHostDevices ( resource . list () . getHostDevices () ) ; }
@ org.junit.Test public void testGetVirtOnly () { doTestGet ( ApplicationMode.VirtOnly ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyDisabledGotDisabledLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; usb . setType ( UsbType.LEGACY ) ; assertEquals ( UsbPolicy.DISABLED , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.DISABLED ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runPublicQuery ( org.ovirt.engine.core.common.queries.VdcQueryType queryType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase params ) { org.ovirt.engine.ui.frontend.server.gwt.GenericApiGWTServiceImpl.log . debug ( ( STRING_CONSTANT + queryType ) ) ; debugQuery ( queryType , params ) ; return getBackend () . runPublicQuery ( queryType , params ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { org.ovirt.engine.ui.common.utils.WebUtils . openUrlInNewWindow ( windowName , guideUrl ) ; }
protected org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updateEntity ( org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates ) { return updateEntity ( updates , false ) ; }
public org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > getUserName () { return privateUserName ; }
@ org.junit.Test public void testPartialUpdate () { existingPool . setdescription ( STRING_CONSTANT ) ; existingPool . setQuotaEnforcementType ( QuotaEnforcementTypeEnum.HARD_ENFORCEMENT ) ; dao . updatePartial ( existingPool ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () ) ; assertGetResult ( result ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hostList ) { hostList . add ( NUMBER_CONSTANT , null ) ; getHostList () . setItems ( hostList ) ; }
public org.ovirt.engine.core.common.businessentities.DisplayType getDisplayType () { org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.DisplayType > entityModel = getDisplayProtocol () . getSelectedItem () ; if ( entityModel == null ) { return null ; } return entityModel . getEntity () ; }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { return runMultipleActionsImpl ( actionType , parameters , true , false , false , null ) ; }
public static void getWatchdogByVmId ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetWatchdog , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; }
@ java.lang.Override public void initialize () { super . initialize () ; behavior . initialize () ; initDataCenter () ; }
@ org.junit.Test public void canDoActionSucceeds () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.DisableGlusterHookCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterHookParameters ( HOOK_ID ) ) ) ; setupMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . canDoAction () ) ; }
private org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap getStoragePoolIsoMap () { return org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStoragePoolIsoMapDAO () . get ( new org.ovirt.engine.core.common.businessentities.StoragePoolIsoMapId ( org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStorageDomain () . getId () , org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStoragePoolId () ) ) ; }
@ java.lang.Override public java.lang.Integer getIpv6Prefix () { return ( networkAttachmentModel . getIpv6Prefix () ) != null ? networkAttachmentModel . getIpv6Prefix () . getEntity () : null ; }
@ org.junit.Test public void testSave () { dao . save ( newPool ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . getByName ( newPool . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( newPool , result ) ; }
@ java.lang.Override protected org.ovirt.engine.core.aaa.DirectoryUser getEntity ( int index ) { return new org.ovirt.engine.core.aaa.DirectoryUser ( DOMAIN , NAMESPACE , org.ovirt.engine.api.restapi.utils.DirectoryEntryIdUtils . decode ( EXTERNAL_IDS [ index ] ) , NAMES [ index ] , NAMES [ index ] ) ; }
@ java.lang.Override public boolean isDeviceNetworkFree ( org.ovirt.engine.core.common.businessentities.HostDevice hostDevice ) { org.ovirt.engine.core.common.businessentities.HostDevice firstChild = getFirstChildDevice ( hostDevice , null ) ; if ( ( firstChild == null ) || ( ! ( isNetworkDevice ( firstChild ) ) ) ) { return true ; } return isNetworkDeviceFree ( hostDevice ) ; }
public org.ovirt.engine.core.dao.VdsStaticDAO getVdsStaticDao () { return org.ovirt.engine.core.bll.gluster.GlusterCommandBase . getDbFacade () . getVdsStaticDao () ; }
@ java.lang.Override protected void initSelectedType () { getNicType () . setSelectedItem ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getDefaultNicType () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.CommandEntity > getChildCmdsByRootCmdId ( org.ovirt.engine.core.compat.Guid cmdId ) { return commandsRepository . getChildCmdsByParentCmdId ( cmdId ) ; }
public static void addDisksLink ( javax.ws.rs.core.Response response ) { java.lang.Object entity = response . getEntity () ; if ( entity instanceof org.ovirt.engine.api.v3.types.V3Template ) { org.ovirt.engine.api.v3.helpers.V3TemplateHelper . addDisksLink ( ( ( org.ovirt.engine.api.v3.types.V3Template ) ( entity ) ) ) ; } }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < org.ovirt.engine.core.common.businessentities.Provider > providers = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider > ) ( result ) ) ; getExternalProviders () . setItems ( providers ) ; selectExternalProvider () ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmServer getVmResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) { return new org.ovirt.engine.api.v3.servers.V3VmServer ( id , delegate . getVmResource ( id ) ) ; }
private void _nextTerminationEntry ( ) throws java.lang.Exception { try { if ( _terminationDialog . get ( _terminationIndex ) . call () ) { ( _terminationIndex ) ++ ; } } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
public boolean checkVmNeedsDirectPassthrough ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( ( vm . getDedicatedVmForVdsList () . size () ) > NUMBER_CONSTANT ) && ( checkVmNeedsDirectPassthrough ( vm . getId () ) ) ; }
public java.lang.String getName () { return name ; }
public static org.ovirt.engine.core.compat.Guid getGuid ( java.sql.ResultSet resultSet , java.lang.String columnName ) throws java.sql.SQLException { return org.ovirt.engine.core.dao.BaseDAODbFacade . getGuid ( resultSet , columnName , null ) ; }
public java.util.List < org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel > getDataStorageModels () { java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel > models = new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel > () ; models . addAll ( getFileDataStorageModels () ) ; models . addAll ( getBlockDataStorageModels () ) ; return models ; }
public void setbookmark_name ( java.lang.String name ) { this . name = name ; }
@ org.junit.Test public void canRunVmFailStatelessWhenVmHA () { canRunStatelessVmTest ( true , false , java.lang.Boolean.TRUE , false ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getname () . equals ( getInterface () . getNetworkName () ) ; }
public void setNetConfigDirty ( java.lang.Boolean value ) { mVdsDynamic . setNetConfigDirty ( value ) ; }
public void importVms ( org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback ) { startProgress ( null ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runMultipleAction ( VdcActionType.ImportVm , buildImportVmParameters () , callback , this ) ; }
private void vdsNonOperational ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason ) { org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () . getEventListener () . vdsNonOperational ( vds . getId () , reason , true , Guid.Empty , null ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.network.NetworkStatus getStatus () { return ( getEntity () . getCluster () ) == null ? null : getEntity () . getCluster () . getStatus () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return ( ( storageDomain . getstorage_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageType.ISCSI ) ) || ( ( storageDomain . getstorage_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageType.FCP ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { return org.ovirt.engine.core.common.AuditLogType.UNASSIGNED ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , org.ovirt.engine.core.common.businessentities.VM vm , org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotStatus snapshotStatus , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addActiveSnapshot ( snapshotId , vm , snapshotStatus , STRING_CONSTANT , null , compensationContext ) ; }
public void setUtcDiff ( java.lang.Integer value ) { this . vmDynamic . setUtcDiff ( value ) ; }
@ java.lang.Override protected void onFadeInComplete () { setStylePrimaryName ( foregroundStyle ) ; this . setStylePrimaryName ( backgroundStyle ) ; }
private static < T > void excludeExceptions ( T dstobj ) { for ( java.lang.String field : org.ovirt.engine.sdk.mapping.Mapper.MAPPING_EXCEPTIONS ) { try { org.apache.commons.beanutils.PropertyUtils . setProperty ( dstobj , field , null ) ; } catch ( java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException | java.lang.NoSuchMethodException e ) {} } }
private org.ovirt.engine.core.compat.Guid getStorageDomainId ( org.ovirt.engine.core.compat.Guid poolId , org.ovirt.engine.core.common.businessentities.StorageDomainType type ) { return getStorageDomainId ( poolId , type , null ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Events list () { return mapCollection ( getBackendCollection () ) ; }
private static org.ovirt.engine.core.common.businessentities.storage.DiskImage createPreallocDiskImage () { org.ovirt.engine.core.common.businessentities.storage.DiskImage image = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; image . setVolumeType ( VolumeType.Preallocated ) ; image . setSizeInGigabytes ( NUMBER_CONSTANT ) ; return image ; }
public void setCountThreadsAsCores ( boolean value ) { countThreadsAsCores = value ; }
@ java.lang.Override protected void doEdit ( org.ovirt.engine.ui.uicommonweb.models.vms.VmImportGeneralModel model ) { driver . edit ( model ) ; monitorCount . setValue ( java.lang.Integer . toString ( getModel () . getMonitorCount () ) ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; createInputLUNs () ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity getVolumeWithRemoveBricksTask ( org.ovirt.engine.core.compat.Guid volumeId ) { org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity volume = getVolume ( volumeId ) ; org.ovirt.engine.core.common.asynctasks.gluster.GlusterAsyncTask asyncTask = new org.ovirt.engine.core.common.asynctasks.gluster.GlusterAsyncTask () ; asyncTask . setStatus ( JobExecutionStatus.STARTED ) ; asyncTask . setType ( GlusterTaskType.REMOVE_BRICK ) ; volume . setAsyncTask ( asyncTask ) ; return volume ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false , false , false ) ; control . replay () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public static boolean getIsUsbEnabled ( org.ovirt.engine.core.common.businessentities.UsbPolicy usbPolicy ) { boolean enabled = false ; if ( usbPolicy != null ) { enabled = usbPolicy . equals ( UsbPolicy.ENABLED_NATIVE ) ; } return enabled ; }
private org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator createHostSetupNetworksValidator ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > networks , org.ovirt.engine.core.common.action.HostSetupNetworksParameters params ) { return new org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidatorTest.HostSetupNetworksValidatorBuilder () . setHost ( host ) . setParams ( params ) . setNetworkBusinessEntityMap ( new org.ovirt.engine.core.common.businessentities.BusinessEntityMap ( networks ) ) . build () ; }
public boolean getRootPasswordEnabled () { return ! ( org.ovirt.engine.core.compat.StringHelper . isNullOrEmpty ( getRootPassword () . getEntity () ) ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Tags > returnValue ) { allAttachedTags . addAll ( returnValue ) ; ( selectedItemsCounter ) ++ ; if ( ( selectedItemsCounter ) == ( getSelectedItems () . size () ) ) { postGetAttachedTags ( model ) ; } }
protected void updateVmGuestAgentVersion ( org.ovirt.engine.core.common.businessentities.VM vm ) { org.ovirt.engine.core.bll.VmHandler . updateVmGuestAgentVersion ( vm ) ; }
@ org.junit.Test public void validateFailureOnMovingVmLunDisk () { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.LunDisk () , null ) ; vmDevice . setSnapshotId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_NOT_SUPPORTED_DISK_STORAGE_TYPE ) ; }
public javax.ws.rs.core.Response remove () { get () ; org.ovirt.engine.api.model.CpuProfile cpuProfile = getCpuProfile ( id ) ; return performAction ( VdcActionType.RemoveCpuProfile , new org.ovirt.engine.core.common.action.CpuProfileParameters ( cpuProfile ) ) ; }
private static void validateInvalidResult ( org.ovirt.engine.core.bll.ValidationResult validationResult , org.ovirt.engine.core.common.errors.EngineMessage message ) { org.ovirt.engine.core.bll.snapshots.SnapshotsValidatorTest . validateResult ( validationResult , false , message ) ; }
private org.ovirt.engine.core.common.businessentities.Provider < > getDeletedProvider () { if ( ( deletedProvider ) == null ) { deletedProvider = getProviderDao () . get ( org.ovirt.engine.core.bll.provider.RemoveProviderCommand . getParameters () . getProvider () . getId () ) ; } return deletedProvider ; }
private org.ovirt.engine.core.common.action.ActionReturnValue verifyCalled ( org.ovirt.engine.core.common.action.ActionType actionType , org.mockito.verification.VerificationMode times ) { return org.mockito.Mockito . verify ( backend , times ) . runInternalAction ( org.mockito.ArgumentMatchers . eq ( actionType ) , org.mockito.ArgumentMatchers . any () ) ; }
public void onEditSnapshotSchedule () { final org.ovirt.engine.ui.uicommonweb.models.gluster.GlusterVolumeSnapshotModel snapshotModel = ( ( org.ovirt.engine.ui.uicommonweb.models.gluster.GlusterVolumeSnapshotModel ) ( getWindow () ) ) ; if ( ! ( snapshotModel . validate ( false ) ) ) { return; } scheduleSnapshot ( snapshotModel , true ) ; }
public static boolean isInWhiteList ( org.ovirt.engine.core.common.businessentities.VmDeviceGeneralType type , java.lang.String device ) { java.lang.String expr = org.ovirt.engine.core.common.utils.VmDeviceCommonUtils . getDeviceTypeSearchExpr ( type , device ) ; java.lang.String whiteList = org.ovirt.engine.core.common.config.Config . getValue ( ConfigValues.ManagedDevicesWhiteList ) ; return ( whiteList . indexOf ( expr ) ) >= NUMBER_CONSTANT ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel createActionPanel ( org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel ( modelProvider , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendMultipleActionAsyncResult result ) { setWindow ( null ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
@ java.lang.Override public void reportCompleted () { try { super . reportCompleted () ; } finally { if ( ( getVdsDestinationId () ) != null ) { decreasePendingVms ( getVdsDestinationId () ) ; } } }
@ java.lang.Override public java.lang.Boolean convert ( java.lang.Object source ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; }
@ org.junit.Test public void testGetApplicationModeObject () { org.codehaus.jackson.node.ObjectNode result = testServlet . getApplicationModeObject ( java.lang.Integer . valueOf ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result . get ( STRING_CONSTANT ) . asText () ) ; }
private org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand < org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters > createCommand ( org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters params ) { org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand < org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters > command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand ( params , null ) ) ; org.mockito.Mockito . doReturn ( vdsDao ) . when ( command ) . getVdsDao () ; return command ; }
@ org.junit.Test public void testEmptyDisksUsages () { java.lang.Object [] disksUsages = new java.lang.Object [ NUMBER_CONSTANT ] ; java.util.Map < java.lang.String , java.lang.Object > xml = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilderTest . setDisksUsage ( disksUsages ) ; validateDisksUsagesList ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilderTest . getVmStatistics () , disksUsages , xml ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase doWith ( final org.ovirt.engine.core.common.businessentities.StorageDomain arg ) { final org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase params = new org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase ( arg . getId () , arg . getStoragePoolId () ) ; params . setRunSilent ( true ) ; return params ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; config = new org.ovirt.engine.core.dal.dbbroker.generic.DBConfigUtils ( true ) ; org.ovirt.engine.core.common.config.Config . setConfigUtils ( config ) ; }
protected void removeMemoryVolumes ( java.util.Set < java.lang.String > memoryVolumes ) { for ( java.lang.String memoryVols : memoryVolumes ) { removeMemoryVolume ( memoryVols ) ; } }
@ org.junit.jupiter.api.BeforeEach public void init () { vmHandler . init () ; mockVmPropertiesUtils () ; }
@ java.lang.Override public void execute () { org.ovirt.engine.ui.common.presenter.popup.numa.UpdatedVnumaEvent . fire ( this , nodeModel . getVm () . getId () , true , nodeModel . getIndex () , nodeIndex ) ; org.ovirt.engine.ui.common.view.popup.numa.DraggableVirtualNumaPanel.menuPopup . hide () ; }
@ java.lang.Override protected boolean canDoAction () { return CanPauseVm ( org.ovirt.engine.core.bll.PauseVmCommand . getParameters () . getVmId () , org.ovirt.engine.core.bll.PauseVmCommand . getReturnValue () . getCanDoActionMessages () ) ; }
public static void addDiskImage ( org.ovirt.engine.core.common.businessentities.DiskImage image , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.bll.ImagesHandler . addDiskImage ( image , image . getactive () , new org.ovirt.engine.core.common.businessentities.image_storage_domain_map ( image . getImageId () , image . getstorage_ids () . get ( NUMBER_CONSTANT ) ) , vmId ) ; }
@ org.junit.Test public void testGetMessagesBundleLocale () { java.util.List < java.util.ResourceBundle > bundle = testTheme . getMessagesBundle ( java.util.Locale.FRENCH ) ; org.junit.Assert . assertNotNull ( STRING_CONSTANT , bundle ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , bundle . get ( NUMBER_CONSTANT ) . getString ( STRING_CONSTANT ) ) ; }
public java.util.Collection < org.ovirt.engine.core.compat.Guid > getRoleIds () { if ( ( roleIds ) == null ) { roleIds = java.util.Collections . emptySet () ; } return new java.util.HashSet ( roleIds ) ; }
@ org.junit.Test public void networkNull ( ) throws java.lang.Exception { validator = new org.ovirt.engine.core.bll.validator.NetworkValidator ( null ) ; org.junit.Assert . assertThat ( validator . networkIsSet ( org.ovirt.engine.core.compat.Guid . newGuid () ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.NETWORK_HAVING_ID_NOT_EXISTS ) ) ; }
private void init () { setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getConstants () . newLogicalNetworkTitle () ) ; setHashName ( STRING_CONSTANT ) ; }
@ org.ovirt.engine.api.restapi.types.Mapping ( from = org.ovirt.engine.api.model.InstanceType . class , to = org.ovirt.engine.core.common.businessentities.VmStatic . class ) public static org.ovirt.engine.core.common.businessentities.VmStatic map ( org.ovirt.engine.api.model.InstanceType entity , org.ovirt.engine.core.common.businessentities.VmStatic vmStatic , org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.api.restapi.types.VmMapper . doMapVmBaseHwPartToVmStatic ( ( ( org.ovirt.engine.core.common.businessentities.VmBase ) ( entity ) ) , ( vmStatic != null ? vmStatic : new org.ovirt.engine.core.common.businessentities.VmStatic () ) , version ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyNativeGotEnabledNotSetLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_NATIVE ) , UsbPolicy.ENABLED_LEGACY ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final boolean showErrorDialog , final boolean waitForResult ) { runMultipleAction ( actionType , parameters , false , callback , null , showErrorDialog , waitForResult ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain getStorageDomain ( int idx ) { org.ovirt.engine.core.common.businessentities.StorageDomain dom = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; dom . setId ( GUIDS [ idx ] ) ; return dom ; }
protected org.ovirt.engine.core.common.utils.Pair < T , V > addGhostEntry () { T value = createGhostValue () ; V widget = addEntry ( value , true ) ; return new org.ovirt.engine.core.common.utils.Pair ( value , widget ) ; }
protected org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface getEntity ( int index , java.lang.String networkName ) { return setUpEntityExpectations ( control . createMock ( org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface . class ) , control . createMock ( org.ovirt.engine.core.common.businessentities.network.VmNetworkStatistics . class ) , index , networkName ) ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( null , getBricks ( volumeWithRemoveBricksTaskCompleted ) ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { dragImage . setVisible ( false ) ; this . onAction () ; }
public org.ovirt.engine.core.common.businessentities.AutoNumaBalanceStatus getAutoNumaBalancing () { return autoNumaBalancing ; }
@ org.junit.Test public void currentUserNull () { final org.ovirt.engine.core.common.businessentities.aaa.DbUser u = null ; b . setCurrentUser ( u ) ; final org.ovirt.engine.core.common.businessentities.aaa.DbUser cu = b . getCurrentUser () ; org.junit.Assert . assertEquals ( u , cu ) ; }
public void setVdsName ( java.lang.String value ) { name = value ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface ) { return ( ( iface . getBondName () ) != null ) && ( iface . getBondName () . equals ( bond . getName () ) ) ; }
public void setKdumpStatus ( org.ovirt.engine.core.common.businessentities.KdumpStatus kdumpStatus ) { this . kdumpStatus = kdumpStatus ; }
@ java.lang.Override public org.ovirt.engine.api.model.User get () { return performGet ( VdcQueryType.GetDbUserByUserId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) , org.ovirt.engine.api.model.BaseResource . class ) ; }
public boolean getIsPlugged () { return isPlugged ; }
protected boolean isSystemSuperUser () { org.ovirt.engine.core.common.businessentities.permissions superUserPermission = org.ovirt.engine.core.bll.PermissionsCommandBase . getPermissionDAO () . getForRoleAndAdElementAndObjectWithGroupCheck ( PredefinedRoles.SUPER_USER . getId () , org.ovirt.engine.core.bll.PermissionsCommandBase . getCurrentUser () . getId () , MultiLevelAdministrationHandler.SYSTEM_OBJECT_ID ) ; return superUserPermission != null ; }
public void osTypeChanged ( java.lang.Integer selectedItem ) { isWindowsOS = org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isWindowsOsType ( selectedItem ) ; }
public void addHost ( java.lang.String policyUnit , org.ovirt.engine.core.compat.Guid host , java.lang.Integer score ) { hostsWithScores . add ( new org.ovirt.engine.core.bll.scheduling.external.WeightResultEntry ( host , score , policyUnit ) ) ; }
public void setConsoleUserName ( java.lang.String consoleUserName ) { if ( ! ( java.util.Objects . equals ( this . consoleUserName , consoleUserName ) ) ) { this . consoleUserName = consoleUserName ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } }
private static void setHref ( org.ovirt.engine.api.model.BaseResource model , java.lang.String path ) { if ( path != null ) { model . setHref ( path ) ; } }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateReportsAvailability () ; }
@ org.junit.Test public void getClusterId () { b . setClusterId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.compat.Guid g = b . getClusterId () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , g ) ; }
protected boolean setAndValidateCpuProfile () { return validate ( org.ovirt.engine.core.bll.profiles.CpuProfileHelper . setAndValidateCpuProfileForUser ( org.ovirt.engine.core.bll.VmManagementCommandBase . getParameters () . getVm () . getStaticData () , org.ovirt.engine.core.bll.VmManagementCommandBase . getUserId () ) ) ; }
@ java.lang.Override public void setStoragePoolId ( org.ovirt.engine.core.compat.Guid storagePoolId ) { this . storagePoolId = storagePoolId ; }
public static void adjustPopupLocationToFitScreenAndShow ( final com.google.gwt.user.client.ui.PopupPanel popup , int left , int top ) { org.ovirt.engine.ui.common.utils.PopupUtils . adjustPopupLocationToFitScreenAndShow ( popup , left , top , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testMapOriginTypeRhev () { java.lang.String s = org.ovirt.engine.api.restapi.types.VmBaseMapper . map ( OriginType.RHEV , null ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , s ) ; org.ovirt.engine.core.common.businessentities.OriginType s2 = org.ovirt.engine.api.restapi.types.VmMapper . map ( s , OriginType.RHEV ) ; org.junit.Assert . assertEquals ( OriginType.RHEV , s2 ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testParseStrayColons () { org.ovirt.engine.api.restapi.util.FenceOptionsParser . parse ( STRING_CONSTANT , STRING_CONSTANT ) ; }
protected java.util.Map < org.ovirt.engine.core.common.businessentities.GraphicsType , org.ovirt.engine.core.common.businessentities.GraphicsInfo > extractGraphicsInofs ( org.ovirt.engine.core.common.businessentities.VM vm ) { return vm . getGraphicsInfos () ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > createDiskList () { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > () { { add ( new org.ovirt.engine.core.common.businessentities.DiskImage () { { setId ( GUIDS [ NUMBER_CONSTANT ] ) ; } } ) ; } } ; }
@ java.lang.Override protected void onEntityChanged () { super . onEntityChanged () ; if ( ( getEntity () ) != null ) { updateDataCenterVersion () ; getSearchCommand () . execute () ; } updateActionAvailability () ; }
@ java.lang.Override public javax.ws.rs.core.Response detach ( org.ovirt.engine.api.model.Action action ) { return doAction ( VdcActionType.RemoveVmFromPool , new org.ovirt.engine.core.common.action.RemoveVmFromPoolParameters ( guid , true , true ) , action ) ; }
private java.lang.String createShortMacAddress () { return org.ovirt.engine.core.common.businessentities.VmNetworkInterfaceValidationTest.VALID_MAC_ADDRESS . substring ( ( ( random . nextInt ( ( ( org.ovirt.engine.core.common.businessentities.VmNetworkInterfaceValidationTest.VALID_MAC_ADDRESS . length () ) - NUMBER_CONSTANT ) ) ) + NUMBER_CONSTANT ) ) ; }
protected boolean formatStorage ( org.ovirt.engine.core.common.businessentities.StorageDomain dom , org.ovirt.engine.core.common.businessentities.VDS vds ) { return getVdsBroker () . RunVdsCommand ( VDSCommandType.FormatStorageDomain , new org.ovirt.engine.core.common.vdscommands.FormatStorageDomainVDSCommandParameters ( vds . getId () , dom . getId () ) ) . getSucceeded () ; }
@ org.junit.Test public void auditLogTypeValue () { final org.ovirt.engine.core.common.AuditLogType t = b . getAuditLogTypeValue () ; org.junit.Assert . assertEquals ( AuditLogType.UNASSIGNED , t ) ; }
public org.ovirt.engine.core.compat.Guid getImageId () { return this . id . getImageId () ; }
@ java.lang.Override public boolean isEnabled () { for ( org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel networkClusterModel : getClustersTableItems () ) { if ( networkClusterModel . getIsChangable () ) { return true ; } } return false ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.network.Network nwk ) { java.lang.String tooltipContent = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( nwk . getCluster () . getStatus () ) ; return tooltipContent ; }
@ java.lang.Override public void runningSucceded ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.IVdsAsyncCommand command = org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () . GetAsyncCommandForVm ( vmId ) ; if ( command != null ) { command . runningSucceded () ; } }
private org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase parameters ) { return org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () . runVdsCommand ( commandType , parameters ) ; }
@ java.lang.Override public void setupEnvironment ( java.util.Hashtable env , java.lang.String userDn , java.lang.String password ) throws javax.naming.NamingException { env . put ( javax.naming.Context.SECURITY_AUTHENTICATION , org.ovirt.engine.core.bll.adbroker.GSSAPIDirContextAuthenticationStrategy.GSS_API_AUTHENTICATION ) ; java.lang.String qopValue = org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.SASL_QOP ) ; env . put ( STRING_CONSTANT , qopValue ) ; }
@ java.lang.Override public void initialize () { super . initialize () ; setHash ( ( ( getHashName () ) + ( new java.util.Date () ) ) ) ; behavior . setHash ( getHash () ) ; behavior . initialize () ; initDataCenter () ; }
public void runMultipleActions ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final java.util.List < org.ovirt.engine.ui.uicompat.IFrontendActionAsyncCallback > callbacks ) { runMultipleActions ( actionType , parameters , callbacks , null , true ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface createBaseNic () { return new org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface ( getNic () ) ; }
@ java.lang.Override protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > filterClusters ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > clusters ) { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . filterClustersWithoutArchitecture ( clusters ) ; }
@ java.lang.Override protected void buildVmVideoCards () { createInfo . put ( VdsProperties.display , vm . getDisplayType () . toString () ) ; createInfo . put ( VdsProperties.num_of_monitors , java.lang.String . valueOf ( vm . getNumOfMonitors () ) ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendVmResource ( STRING_CONSTANT , new org.ovirt.engine.api.restapi.resource.BackendVmsResource () ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
protected void fillImagesMapBasedOnTemplate () { org.ovirt.engine.core.bll.ImagesHandler . fillImagesMapBasedOnTemplate ( vmDisksSource , getPoolDomains () , diskInfoDestinationMap , destStorages ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VMStatus getRawValue ( org.ovirt.engine.core.common.businessentities.VM object ) { return object . getStatus () ; }
@ org.junit.jupiter.api.Test @ org.ovirt.engine.core.utils.MockedConfig ( value = STRING_CONSTANT ) public void testClusterAppliedBeforeConfig () { setupClusterWithSerialNumber ( SerialNumberPolicy.VM_ID , null ) ; assertSerialNumber ( org.ovirt.engine.core.vdsbroker.vdsbroker.VmSerialNumberBuilderTest.VM_ID . toString () ) ; }
@ java.lang.Override @ org.junit.Test public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; setUpMacPoolsQueryExpectations ( null ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
private void setDisksToBeAttached ( org.ovirt.engine.core.common.businessentities.VM vmFromConfiguration ) { vmDisksToAttach = vmFromConfiguration . getDiskMap () . values () ; org.ovirt.engine.core.bll.ImportVmFromConfigurationCommand . clearVmDisks ( vmFromConfiguration ) ; org.ovirt.engine.core.bll.ImportVmFromConfigurationCommand . getParameters () . setCopyCollapse ( true ) ; }
void onSuccess ( T result ) ;
@ java.lang.Override public boolean connectStorageToDomainByVdsId ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId ) { return runConnectionStorageToDomain ( storageDomain , vdsId , VDSCommandType.ConnectStorageServer . getValue () ) ; }
public byte nextByte ( byte b ) { return ( ( byte ) ( nextInt ( b ) ) ) ; }
protected java.util.List < org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.common.businessentities.VM , org.ovirt.engine.core.common.businessentities.VmDevice > > getVmsWithVmDeviceInfoForDiskId () { if ( ( cachedVmsDeviceInfo ) == null ) { cachedVmsDeviceInfo = org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getVmDAO () . getVmsWithPlugInfo ( org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getImage () . getId () ) ; } return cachedVmsDeviceInfo ; }
public java.lang.Object getConfigValuePreConverted ( org.ovirt.engine.core.common.queries.ConfigurationValues configValue , java.lang.String version ) { org.ovirt.engine.core.compat.KeyValuePairCompat < org.ovirt.engine.core.common.queries.ConfigurationValues , java.lang.String > key = new org.ovirt.engine.core.compat.KeyValuePairCompat ( configValue , version ) ; return cachedConfigValuesPreConvert . get ( key ) ; }
public static org.ovirt.engine.core.compat.Guid createGuidFromString ( java.lang.String candidate ) { if ( candidate == null ) { return null ; } else { return new org.ovirt.engine.core.compat.Guid ( candidate ) ; } }
@ org.junit.Test public void testGetAllForStorageDomain () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStorageDomain ( existingDomain . getId () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertFalse ( result . isEmpty () ) ; }
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > getDiskInfoList () { return diskInfoList ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.network.Network o1 , org.ovirt.engine.core.common.businessentities.network.Network o2 ) { return HostInterfaceListModel.ENGINE_NETWORK_NAME . equals ( o1 . getname () ) ? - NUMBER_CONSTANT : o1 . getname () . compareTo ( o2 . getname () ) ; }
@ org.junit.Test public void testGetByLargeIconId () { final java.util.List < org.ovirt.engine.core.common.businessentities.VmIconDefault > result = dao . getByLargeIconId ( FixturesTool.LARGE_ICON_ID ) ; org.junit.Assert . assertTrue ( result . contains ( org.ovirt.engine.core.dao.VmIconDefaultDaoTest.OTHER_OS_VM_ICON_DEFAULT ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface bond ) { return org.apache.commons.lang.StringUtils . equals ( bond . getBondName () , i . getName () ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.gluster.StorageDevice device ) { if ( device . getCanCreateBrick () ) { return null ; } return org.ovirt.engine.ui.webadmin.widget.table.column.StorageDeviceStatusColumn.constants . deviceIsAlreadyUsed () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . getNetworkName () ) != null ) { return i . getNetworkName () . equals ( getParameters () . getOldNetworkName () ) ; } return false ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VdsStatic > getAllForVdsGroup ( org.ovirt.engine.core.compat.Guid vdsGroup ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsStaticDAODbFacadeImpl.VdsStaticRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vdsGroup ) ) ; }
protected boolean isISO ( org.ovirt.engine.core.common.businessentities.StorageDomain dom ) { return ( dom . getstorage_domain_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainType.ISO ) ; }
public void setOriginalReturnValue ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue originalReturnValue ) { this . originalReturnValue = originalReturnValue ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.StoragePool item , java.lang.Object value ) { context.localStorageHostByDataCenterMap . put ( item , ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( value ) ) ) ; return false ; }
public static < T > org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor < T > mockConfig ( org.ovirt.engine.core.common.config.ConfigValues value , java.lang.String version , T returnValue ) { return new org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor ( value , version , returnValue ) ; }
protected boolean updateVmImSpm () { return org.ovirt.engine.core.bll.VmCommand . updateVmInSpm ( org.ovirt.engine.core.bll.MoveVmCommand . getVm () . getStoragePoolId () , java.util.Arrays . asList ( org.ovirt.engine.core.bll.MoveVmCommand . getVm () ) ) ; }
@ org.junit.Test public void logRenamedEntityNotRename () { command . logRenamedEntity () ; }
@ java.lang.Override public void onSucceeded ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { endAction ( getCommand ( cmdId ) , true ) ; }
public boolean canConnectToConsole () { return ( selectedProtocol ) == null ? false : consoleModels . get ( selectedProtocol ) . canConnect () ; }
@ org.junit.Test public void validateFailsOnNonExistingEvent () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.RemoveAuditLogByIdCommand ( new org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_1 ) , null ) ) ; prepareMocks ( command ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.AUDIT_LOG_CANNOT_REMOVE_AUDIT_LOG_NOT_EXIST ) ; }
private static org.ovirt.engine.core.common.action.AddDiskParameters createParameters () { org.ovirt.engine.core.common.businessentities.DiskImage image = new org.ovirt.engine.core.common.businessentities.DiskImage () ; image . setDiskInterface ( DiskInterface.IDE ) ; org.ovirt.engine.core.common.action.AddDiskParameters parameters = new org.ovirt.engine.core.common.action.AddDiskParameters ( org.ovirt.engine.core.compat.Guid . NewGuid () , image ) ; return parameters ; }
@ org.junit.Test public void testRemoveNotFound ( ) throws java.lang.Exception { setUpEntityQueryExpectations ( true ) ; try { resource . remove () ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.Override public void setSpiceProxyOverrideExplanation ( java.lang.String explanation ) { spiceProxyEnabledCheckboxWithInfoIcon . setExplanation ( explanation ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.interfaces.BackendInternal getBackend () { return super . getBackend () ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel createActionPanel ( org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel < org.ovirt.engine.core.common.businessentities.DiskImage > ( modelProvider , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
public static org.ovirt.engine.core.utils.vmproperties.VmPropertiesUtils getInstance () { return org.ovirt.engine.core.utils.vmproperties.VmPropertiesUtils.vmPropertiesUtils ; }
@ org.junit.Test public void validateSucceeds () { mockVdsWithOsVersion ( org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommandTest.VALID_OVIRT_VERSION ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
private int getNumOfVfs ( org.ovirt.engine.core.common.businessentities.HostDevice pciDevice , java.util.List < org.ovirt.engine.core.common.businessentities.HostDevice > deviceList ) { java.util.List < org.ovirt.engine.core.common.businessentities.HostDevice > vfs = getVfs ( pciDevice , deviceList ) ; return vfs . size () ; }
@ java.lang.Override public int getKeyboardSelectedRow () { if ( ( selectionModel . getLastSelectedRow () ) == ( - NUMBER_CONSTANT ) ) { return super . getKeyboardSelectedRow () ; } return selectionModel . getLastSelectedRow () ; }
private void initSpyCommand () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.storage.disk.MoveDisksCommand ( new org.ovirt.engine.core.common.action.MoveDisksParameters ( new java.util.ArrayList <> () ) , null ) ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : NUMBER_CONSTANT ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; }
private java.lang.String getkeyForCheck () { return STRING_CONSTANT . equals ( getTimeoutObjectId () ) ? getKey () : getTimeoutObjectId () ; }
@ org.junit.Before public void setupMocks () { setUpCommand () ; mockVds () ; mockDbDao () ; command . init () ; }
private void clearReferences () { if ( ( currentItems ) != null ) { for ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel itemModel : currentItems ) { itemModel . clearReferences () ; } } }
public void setVdsStrength ( int value ) { vdsStrength = ( value < NUMBER_CONSTANT ) ? NUMBER_CONSTANT : value > NUMBER_CONSTANT ? NUMBER_CONSTANT : value ; }
public void setGlusterVolumeId ( org.ovirt.engine.core.compat.Guid glusterVolumeId ) { this . glusterVolumeId = glusterVolumeId ; }
@ java.lang.Override public boolean validate () { return true ; }
public org.ovirt.engine.core.common.businessentities.ArchitectureType getArchitectureByCpuName ( java.lang.String cpuName ) { org.ovirt.engine.core.common.businessentities.ServerCpu cpu = getServerCpuByName ( cpuName ) ; if ( cpu != null ) { return cpu . getArchitecture () ; } return org.ovirt.engine.core.common.businessentities.ArchitectureType.undefined ; }
@ org.junit.Test public void getFreeVfNoFreeVf () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertNull ( hostNicVfsConfigHelper . getFreeVf ( nic , null ) ) ; }
public int getVlanId () { java.lang.Integer vlanId = getEntity () . getvlan_id () ; return vlanId == null ? - NUMBER_CONSTANT : vlanId ; }
public java.lang.String translateVdcFault ( final org.ovirt.engine.core.common.errors.VdcFault fault ) { return getVdsmErrorsTranslator () . TranslateErrorTextSingle ( ( ( fault . getError () ) == null ? fault . getMessage () : fault . getError () . toString () ) ) ; }
public void setupMocks ( boolean hookFound ) { setupMocks ( hookFound , getHookEntity () ) ; }
private org.ovirt.engine.core.dao.scheduling.ClusterPolicyDao getClusterPolicyDao () { return dbFacade . getClusterPolicyDao () ; }
@ org.junit.Test public void getUserIdVdcUserDefault () { final org.ovirt.engine.core.common.businessentities.aaa.DbUser u = new org.ovirt.engine.core.common.businessentities.aaa.DbUser () ; b . setCurrentUser ( u ) ; final org.ovirt.engine.core.compat.Guid g = b . getUserId () ; org.junit.Assert . assertNull ( g ) ; }
void addColumn ( com.google.gwt.user.cellview.client.Column < T , > column , org.ovirt.engine.ui.common.widget.table.header.SafeHtmlHeader header , java.lang.String width ) ;
@ java.lang.Override public void rollback () { super . rollback () ; org.ovirt.engine.core.bll.MacPoolManager . getInstance () . freeMac ( getMacAddress () ) ; }
public boolean isQcowFormat () { return ( VolumeFormat.COW ) == ( getImage () . getVolumeFormat () ) ; }
void loadFromLocalStorage ( org.ovirt.engine.ui.uicommonweb.models.HasConsoleModel model ) ;
@ java.lang.Override public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) { return runQueryImpl ( actionType , parameters , true , null ) ; }
@ org.junit.runners.Parameterized.Parameters public static java.util.Collection < java.lang.Object [] > data () { return java.util.Arrays . asList ( new java.lang.Object [] [] { new java.lang.Object [] { org.ovirt.engine.core.common.businessentities.storage.ImageFileType.ISO } , new java.lang.Object [] { org.ovirt.engine.core.common.businessentities.storage.ImageFileType.Floppy } } ) ; }
private static java.lang.String getSysprepDir () { return ( ( org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.DataDir ) ) + ( java.io.File.separator ) ) + STRING_CONSTANT ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getCollection () { return getBackendCollection ( VdcQueryType.GetVdsInterfacesByVdsId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( hostId ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.StorageDevice > devices ) { java.util.Collections . sort ( devices , new org.ovirt.engine.ui.uicommonweb.Linq.StorageDeviceComparer () ) ; setItems ( devices ) ; }
protected void fillImagesMapBasedOnTemplate () { org.ovirt.engine.core.bll.ImagesHandler . fillImagesMapBasedOnTemplate ( org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () , org.ovirt.engine.core.bll.AddVmCommand . getStorageDomainDAO () . getAllForStoragePool ( org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () . getStoragePoolId () ) , diskInfoDestinationMap , destStorages , false ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackVolumeProviderResource ( STRING_CONSTANT , resource . getParent () ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.Override protected boolean canDoAction () { return checkAddEditValidations () ; }
private static java.lang.String nullSafeGetVmName ( org.ovirt.engine.core.common.businessentities.VM vm ) { return vm == null ? STRING_CONSTANT : vm . getName () ; }
public void setpriority ( int value ) { mVmStatic . setpriority ( value ) ; }
@ org.junit.Test public void sparsifyNotSupportedWhenDiskIsPreallocated () { createStorageDomainForDisk ( StorageType.NFS ) ; disk . getImage () . setVolumeType ( VolumeType.Preallocated ) ; org.junit.Assert . assertThat ( validator . isSparsifySupported () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_DISK_SPARSIFY_NOT_SUPPORTED_FOR_PREALLOCATED ) ) ; }
public static void updateAllDiskImageSnapshotsStatus ( org.ovirt.engine.core.compat.Guid diskId , org.ovirt.engine.core.common.businessentities.ImageStatus status ) { org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getImageDao () . updateStatusOfImagesByImageGroupId ( diskId , status ) ; }
public boolean validate () { getHostList () . setIsValid ( ( ( getHostList () . getSelectedItem () ) != null ) ) ; return getHostList () . getIsValid () ; }
protected boolean updateVmImSpm () { return org.ovirt.engine.core.bll.VmCommand . updateVmInSpm ( org.ovirt.engine.core.bll.ExportVmCommand . getVm () . getStoragePoolId () , java.util.Arrays . asList ( org.ovirt.engine.core.bll.ExportVmCommand . getVm () ) , org.ovirt.engine.core.bll.ExportVmCommand . getParameters () . getStorageDomainId () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.network.HostNetworkQos getHostNetworkQos () { return ( networkAttachmentModel . getQosModel () ) != null ? networkAttachmentModel . getQosModel () . getEntity () : null ; }
@ java.lang.Override @ org.junit.Test public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = org.ovirt.engine.api.restapi.resource.AbstractBackendDiskProfilesResourceTest . setUpUriExpectations ( null ) ; setUpDiskProfilesQueryExpectations ( null ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( org.ovirt.engine.api.restapi.resource.AbstractBackendDiskProfilesResourceTest . getCollection () ) ; }
@ org.junit.Test public void testForValue () { org.junit.Assert . assertEquals ( ( STRING_CONSTANT + ( value ) ) , value , org.ovirt.engine.core.common.queries.ConfigurationValues . forValue ( value . getValue () ) ) ; }
@ java.lang.Override protected void init () { setVdsId ( org.ovirt.engine.core.bll.storage.domain.ImportHostedEngineStorageDomainCommand . getParameters () . getVdsId () ) ; fetchStorageDomainInfo () ; }
public static org.ovirt.engine.core.dal.dbbroker.DbFacade getDbFacadeInstance () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () ; }
@ java.lang.Override public org.ovirt.engine.core.bll.ValidationResult hasSpaceForSnapshots () { return org.ovirt.engine.core.bll.ValidationResult.VALID ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs args ) { updateMessages ( object ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmModelBehaviorBase behavior = this ; behavior.maxCpusPerSocket = ( ( java.lang.Integer ) ( returnValue ) ) ; behavior . totalCpuCoresChanged () ; }
private static org.ovirt.engine.core.common.businessentities.storage.DiskImage createSparseDiskImage () { org.ovirt.engine.core.common.businessentities.storage.DiskImage image = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; image . setVolumeType ( VolumeType.Sparse ) ; return image ; }
@ java.lang.Override protected void executeVmCommand () { initVdss () ; perform () ; org.ovirt.engine.core.bll.MigrateVmCommand . setSucceeded ( true ) ; }
protected void updateVmDevicesOnRun () { org.ovirt.engine.core.bll.RunVmCommand . getVmDeviceUtils () . updateVmDevicesOnRun ( org.ovirt.engine.core.bll.RunVmCommand . getVm () ) ; }
private void load ( ) throws org.ovirt.engine.core.extensions.mgr.ConfigurationException { for ( java.io.File directory : org.ovirt.engine.core.utils.EngineLocalConfig . getInstance () . getExtensionsDirectories () ) { load ( directory ) ; } activate () ; }
private void attachFloppy_EntityChanged () { getFloppyImage () . setIsChangable ( getAttachFloppy () . getEntity () ) ; updateInitialRunFields () ; }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.EventResource getEventSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendEventResource ( id , this ) ) ; }
private org.ovirt.engine.core.vdsbroker.monitoring.VmStatsRefresher getRefresherForVds ( org.ovirt.engine.core.vdsbroker.VdsManager vdsManager ) { return new org.ovirt.engine.core.vdsbroker.monitoring.EventVmStatsRefresher ( vdsManager ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel diskModel = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( returnValue ) ) ; diskModel . getStorageDomain () . setSelectedItem ( storageDomain ) ; }
@ java.lang.Override public void freeMac ( java.lang.String mac ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . writeLock () ) ) { macsStorage . freeMac ( org.ovirt.engine.core.utils.MacAddressRangeUtils . macToLong ( mac ) ) ; } }
@ org.junit.Before public void setupCommand () { initSpyCommand () ; mockDaos () ; mockSnapshotValidator () ; mockVm () ; }
@ org.junit.Test public void renameVmdkImage () { java.lang.String alias = org.ovirt.engine.core.bll.exportimport.ImportVmFromExternalProviderCommand . renameDiskAlias ( OriginType.VMWARE , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , alias ) ; }
private java.util.Set < java.lang.String > getInterfaceNetworkNames () { if ( ( cachedInterfaceNetworkNames ) == null ) { cachedInterfaceNetworkNames = org.ovirt.engine.core.common.businessentities.Entities . vmInterfacesByNetworkName ( vm . getInterfaces () ) . keySet () ; } return cachedInterfaceNetworkNames ; }
private static org.ovirt.engine.core.common.action.InstallVdsParameters createParameters () { org.ovirt.engine.core.common.action.InstallVdsParameters param = new org.ovirt.engine.core.common.action.InstallVdsParameters ( org.ovirt.engine.core.compat.Guid . newGuid () , null ) ; param . setIsReinstallOrUpgrade ( true ) ; return param ; }
protected void removeVmStatic ( boolean removePermissions ) { vmStaticDao . remove ( org.ovirt.engine.core.bll.VmCommand . getVmId () , removePermissions ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : java.lang.Boolean.TRUE ; }
public java.lang.String getTemplate ( java.lang.String type , java.lang.String name ) { org.ovirt.engine.sdk.codegen.utils.StringTemplateWrapper templateWrapper = new org.ovirt.engine.sdk.codegen.utils.StringTemplateWrapper ( getTemplate () ) ; templateWrapper . set ( STRING_CONSTANT , type ) ; templateWrapper . set ( STRING_CONSTANT , name ) ; return templateWrapper . toString () ; }
@ org.junit.Test public void validateNonExistingJobFails ( ) throws java.lang.Exception { org.mockito.Mockito . when ( jobDaoMock . get ( org.ovirt.engine.core.bll.EndExternalJobCommandTest.jobId ) ) . thenReturn ( null ) ; org.junit.Assert . assertTrue ( ( ! ( commandMock . validate () ) ) ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.StorageServerConnections > getStorageServerConnectionsByDomain ( org.ovirt.engine.core.common.businessentities.StorageDomainStatic storageDomain ) { return new java.util.ArrayList ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.StorageServerConnections [] { org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageServerConnectionDao () . get ( storageDomain . getStorage () ) } ) ) ; }
private void initHostWithOneVfsConfig ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > passthroughVnics , int numOfVfs , boolean allNetworksAllowed , boolean networkInSriovConfig , boolean labelInSriovConfig , boolean hasFreeVf ) { initHostWithOneVfsConfig ( passthroughVnics , numOfVfs , allNetworksAllowed , networkInSriovConfig , labelInSriovConfig , hasFreeVf , false , false ) ; }
private org.ovirt.engine.core.common.action.SyncLunsInfoForBlockStorageDomainParameters createParameters () { org.ovirt.engine.core.common.action.SyncLunsInfoForBlockStorageDomainParameters params = new org.ovirt.engine.core.common.action.SyncLunsInfoForBlockStorageDomainParameters ( org.ovirt.engine.core.compat.Guid . newGuid () , org.ovirt.engine.core.compat.Guid . newGuid () ) ; return params ; }
@ org.junit.Test public void storageDomainNameDefault () { final java.lang.String s = b . getStorageDomainName () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , s ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData object ) { return java.lang.String . valueOf ( object . getVm () . getNumOfCpus () ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.SSH_USER , _vds . getSshUsername () ) ; return true ; }
@ java.lang.Override protected void executeQueryCommand () { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.StorageDevice > storageDevices = org.ovirt.engine.core.bll.gluster.GetGlusterStorageDevicesQuery . getDbFacade () . getStorageDeviceDao () . getStorageDevicesInHost ( org.ovirt.engine.core.bll.gluster.GetGlusterStorageDevicesQuery . getParameters () . getId () ) ; org.ovirt.engine.core.bll.gluster.GetGlusterStorageDevicesQuery . getQueryReturnValue () . setReturnValue ( filterStorageDevices ( storageDevices ) ) ; }
protected boolean checkIfCpusExist () { return org.ovirt.engine.core.bll.CpuFlagsManagerHandler . checkIfCpusExist ( org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getVdsGroup () . getcpu_name () , org.ovirt.engine.core.bll.UpdateVdsGroupCommand . getVdsGroup () . getcompatibility_version () ) ; }
@ java.lang.Deprecated @ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.ListModel model ) { edit ( model , defaultProfile ) ; }
@ java.lang.Override protected boolean removeMemoryVolume ( java.lang.String memoryVolumes ) { return super . removeMemoryVolume ( org.ovirt.engine.core.bll.memory.MemoryUtils . changeStorageDomainAndPoolInMemoryState ( memoryVolumes , storageDomainId , storagePoolId ) ) ; }
@ java.lang.Override protected void init () { super . init () ; resource . getParent () . mappingLocator = resource.mappingLocator ; resource . getParent () . httpHeaders = httpHeaders ; }
@ java.lang.Override public void run ( ) throws java.lang.Exception { action . execute ( this ) ; }
private java.lang.String defaultClusterRngSourcesCsv ( org.ovirt.engine.core.compat.Version ver ) { java.lang.String srcs = ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ClusterRequiredRngSourcesDefault , ver . toString () ) ) ) ; return srcs == null ? STRING_CONSTANT : srcs ; }
protected void childCommandsExecutionEnded ( org.ovirt.engine.core.bll.CommandBase < > command , boolean anyFailed , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds , org.ovirt.engine.core.compat.backendcompat.CommandExecutionStatus status , int completedChildren ) {}
public java.lang.String getTemplate ( java.lang.String realUrlParamName , java.lang.String headerParamName ) { org.ovirt.engine.sdk.codegen.utils.StringTemplateWrapper templateWrapper = new org.ovirt.engine.sdk.codegen.utils.StringTemplateWrapper ( getTemplate () ) ; templateWrapper . set ( STRING_CONSTANT , realUrlParamName ) ; templateWrapper . set ( STRING_CONSTANT , headerParamName ) ; return templateWrapper . toString () ; }
@ org.junit.Test public void testExecuteQueryWithFilteringLUNsDisabled () { org.ovirt.engine.core.bll.storage.GetDeviceListQueryTest.mcr . mockConfigValue ( ConfigValues.FilteringLUNsEnabled , Version.v3_1 , false ) ; lunsExpected = lunsInput ; internalExecuteQuery () ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageServerConnections connection ) { setExportPath ( ( connection == null ? null : connection . getConnection () ) ) ; stopProgress () ; }
protected org.ovirt.engine.core.bll.storage.IStorageHelper getStorageHelper ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return org.ovirt.engine.core.bll.storage.StorageHelperDirector . getInstance () . getItem ( storageDomain . getstorage_type () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getstorage_domain_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainType.Data ) ; }
private void setupNetworkDao () { org.mockito.Mockito . when ( networkDaoMock . get ( networkId ) ) . thenReturn ( network ) ; }
@ org.junit.Test public void testAddWithClonePermissionsClone ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Vm model = createModel ( null ) ; doTestAddWithClonePermissions ( model , true ) ; }
protected org.ovirt.engine.core.vdsbroker.VdsManager getVdsManager () { return getResourceManager () . getVdsManager ( org.ovirt.engine.core.bll.ConvertVmCommand . getVdsId () ) ; }
public static void updateVmDevicesBootOrder ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < org.ovirt.engine.core.common.businessentities.VmDevice > devices ) { org.ovirt.engine.core.common.utils.VmDeviceCommonUtils . updateVmDevicesBootOrder ( vm , vm . getDefaultBootSequence () , devices ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter () { return cpuPolicyUnit . filter ( cluster , java.util.Arrays . asList ( vdsWithInvalidCpuInfo , vdsWithCores ) , vm , null , org.mockito.Mockito . mock ( org.ovirt.engine.core.common.scheduling.PerHostMessages . class ) ) ; }
public void setIsBrickProvisioningSupported () { getShowBricksList () . setIsAvailable ( true ) ; getShowBricksList () . setEntity ( true ) ; }
protected void clearSelection () { if ( ( getTable () ) != null ) { getTable () . getSelectionModel () . clear () ; } }
public java.lang.Boolean getKsmState () { return ksmState ; }
protected org.ovirt.engine.core.common.utils.Pair < T , V > addGhostEntry () { T value = createGhostValue () ; V widget = addEntry ( value , true ) ; return new org.ovirt.engine.core.common.utils.Pair < T , V > ( value , widget ) ; }
@ java.lang.Override protected com.google.gwt.user.client.ui.TreeItem getNodeItem ( org.ovirt.engine.core.common.businessentities.storage.Disk disk ) { return getDiskNode ( new java.util.ArrayList ( java.util.Arrays . asList ( disk ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { postUpdateHost ( hosts ) ; }
@ java.lang.Override protected void executeCommand () { setStorageDomainId ( org.ovirt.engine.core.bll.storage.disk.cinder.RestoreFromCinderSnapshotCommand . getParameters () . getStorageDomainId () ) ; removeCinderVolume () ; org.ovirt.engine.core.bll.storage.disk.cinder.RestoreFromCinderSnapshotCommand . setSucceeded ( true ) ; }
private static java.lang.String getDeviceType ( java.util.Map device ) { return ( ( java.lang.String ) ( device . get ( VdsProperties.Device ) ) ) ; }
protected void setupForStorageTests () { org.mockito.Mockito . doReturn ( multipleSdValidator ) . when ( command ) . getStorageDomainsValidator ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . anySet () ) ; }
@ org.junit.Test public void testGetUserAndSetUserWithSessionParam () { org.ovirt.engine.core.common.interfaces.IVdcUser user = org.mockito.Mockito . mock ( org.ovirt.engine.core.common.interfaces.IVdcUser . class ) ; container . setUser ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , user ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , user , container . getUser ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID , false ) ) ; }
@ java.lang.Override public void edit ( final org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceModel iface ) { driver . edit ( iface ) ; hideMacWhenNotEnabled ( iface ) ; }
@ java.lang.Override protected com.google.gwt.user.cellview.client.CellTree createDataDisplayWidget ( org.ovirt.engine.ui.webadmin.uicommon.model.TagModelProvider modelProvider ) { com.google.gwt.user.cellview.client.CellTree display = new org.ovirt.engine.ui.common.widget.tree.ElementIdCellTree ( modelProvider , null , org.ovirt.engine.ui.webadmin.widget.tags.TagList.res ) ; display . setAnimationEnabled ( true ) ; display . setKeyboardSelectionPolicy ( KeyboardSelectionPolicy.BOUND_TO_SELECTION ) ; return display ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { postGetHostList ( hosts ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.Disk > disks ) { updateOptions ( ( ! ( disks . isEmpty () ) ) ) ; }
@ java.lang.Override public java.lang.String getIpv4Netmask () { return ( networkAttachmentModel . getIpv4Subnet () ) != null ? networkAttachmentModel . getIpv4Subnet () . getEntity () : null ; }
@ java.lang.Override public com.google.gwt.safehtml.shared.SafeHtml getTooltip ( org.ovirt.engine.core.common.businessentities.storage.Disk object ) { if ( ( object . getNumberOfVms () ) < NUMBER_CONSTANT ) { return null ; } return com.google.gwt.safehtml.shared.SafeHtmlUtils . fromString ( java.lang.String . join ( STRING_CONSTANT , object . getVmNames () ) ) ; }
public java.util.List < java.lang.Class < ? extends java.lang.Exception > > getExceptions () { return this . exceptions ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network net ) { return net . getname () . equals ( getNetworkName () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.String returnValue ) { hostModel . setPmProxyPreferences ( returnValue ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { if ( handleItemsChangedEvent () ) { updateData () ; } }
private static java.lang.String emptyGuidToEmptyString ( org.ovirt.engine.core.compat.Guid guid ) { return ( guid == null ) || ( Guid.Empty . equals ( guid ) ) ? STRING_CONSTANT : guid . toString () ; }
static org.ovirt.engine.api.model.Nic getModel ( int index ) { org.ovirt.engine.api.model.Nic model = new org.ovirt.engine.api.model.Nic () ; model . setName ( NAMES [ index ] ) ; model . setInterface ( NicInterface.RTL8139_VIRTIO ) ; return model ; }
protected void writeBuffer ( java.nio.ByteBuffer buff ) throws java.io.IOException , org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { if ( ! ( isOpen () ) ) { connect () ; } write ( buff ) ; }
@ java.lang.Override public org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter getFieldValueAutoCompleter ( java.lang.String fieldName ) { org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter retval = null ; if ( STRING_CONSTANT . equals ( fieldName ) ) { retval = new org.ovirt.engine.core.searchbackend.BitValueAutoCompleter () ; } else {} return retval ; }
public boolean isSetLogicalUnits () { return ( this . logicalUnits ) != null ; }
protected void updateEntity ( org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates , boolean clearResourceId ) { imageTransferUpdater . updateEntity ( updates , org.ovirt.engine.core.bll.storage.disk.image.TransferImageCommand . getCommandId () , clearResourceId ) ; }
public void setStatus ( org.ovirt.engine.core.common.businessentities.NetworkStatus value ) { cluster . setstatus ( value ) ; }
private void updateVolumeFormat ( org.ovirt.engine.core.common.businessentities.VolumeType volumeType , org.ovirt.engine.core.common.businessentities.StorageType storageType ) { setVolumeFormat ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getDiskVolumeFormat ( volumeType , storageType ) ) ; }
private void stubDaos () { mockVdsDao () ; }
@ org.junit.Test public void noVdsGroup () { simulateVdsGroupDoesNotExist () ; assertCanDoActionFailure ( VdcBllMessages.VDS_CLUSTER_IS_NOT_VALID . toString () ) ; }
public org.ovirt.engine.core.common.businessentities.NetworkStatus getStatus () { return ( cluster ) == null ? null : org.ovirt.engine.core.common.businessentities.NetworkStatus . forValue ( cluster . getstatus () ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getname () . equals ( getParameters () . getNetwork () . getname () ) ; }
public void runAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final org.ovirt.engine.core.common.action.VdcActionParametersBase parameters , final org.ovirt.engine.ui.uicompat.IFrontendActionAsyncCallback callback ) { runAction ( actionType , parameters , callback , null ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VmTemplate object ) { return object . getName () ; }
@ java.lang.Override protected void updateDataProvider ( java.util.List < org.ovirt.engine.ui.uicommonweb.models.SystemTreeItemModel > items ) { if ( ! ( items . isEmpty () ) ) { super . updateDataProvider ( items ) ; selectionModel . setSelected ( getModel () . getSelectedItem () , true ) ; } }
public int nextInt ( int min , int max ) { if ( min > max ) { throw new java.lang.IllegalArgumentException ( org.ovirt.engine.core.utils.RandomUtils.MIN_MAX_ERROR ) ; } return min + ( nextInt ( ( ( max - min ) + NUMBER_CONSTANT ) ) ) ; }
protected org.ovirt.engine.core.bll.validator.storage.DiskValidator createDiskValidator ( org.ovirt.engine.core.common.businessentities.storage.DiskImage disk ) { return new org.ovirt.engine.core.bll.validator.storage.DiskValidator ( disk ) ; }
@ org.junit.Test public void isNotISCSIConnectionAndDomain () { connection . setStorageType ( StorageType.NFS ) ; domain . setStorageType ( StorageType.NFS ) ; org.junit.Assert . assertEquals ( EngineMessage.ACTION_TYPE_FAILED_ACTION_IS_SUPPORTED_ONLY_FOR_ISCSI_DOMAINS , validator . isISCSIConnectionAndDomain ( domain ) . getMessage () ) ; }
public void onUserLogin ( org.ovirt.engine.core.common.users.VdcUser loggedUser ) { setUserName ( loggedUser . getUserName () ) ; setUserId ( loggedUser . getUserId () . toString () ) ; setLoggedIn ( true ) ; fireLoginChangeEvent () ; }
public void setRoundedElapsedTime ( java.lang.Double value ) { this . mVmStatistics . setRoundedElapsedTime ( value ) ; }
@ org.junit.Test public void getClusterWithId () { b . setClusterId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.common.businessentities.Cluster g = b . getCluster () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , g . getId () ) ; }
private void mockValidateCustomProperties () { org.mockito.Mockito . doReturn ( true ) . when ( command ) . validateCustomProperties ( org.mockito.Matchers . any ( org.ovirt.engine.core.common.businessentities.VmStatic . class ) , org.mockito.Matchers . any ( java.util.ArrayList . class ) ) ; }
@ org.junit.Test public void formatStringTest4 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , result ) ; }
public void tRunJob_1_error ( java.lang.Exception exception , java.lang.String errorComponent , final java.util.Map < java.lang.String , java.lang.Object > globalMap ) throws ovirt_engine_dwh.dailytimekeepingjob_3_6.DailyTimeKeepingJob.TalendException { end_Hash . put ( errorComponent , java.lang.System . currentTimeMillis () ) ; tRunJob_1_onSubJobError ( exception , errorComponent , globalMap ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm , vm . getstatus () ) ; vm . setstatus ( VMStatus.Down ) ; org.ovirt.engine.core.bll.VmHandler . UnLockVm ( vm ) ; compensationContext . stateChanged () ; return null ; }
@ org.junit.Test public void testMulKeyVal () { java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtils . string2Map ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtilsTest.MUL_KEY_VAL ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , map . size () ) ; }
protected java.lang.String getValueObject ( final java.lang.String value ) { org.codehaus.jackson.node.ObjectNode node = mapper . createObjectNode () ; node . put ( STRING_CONSTANT , value ) ; return node . toString () ; }
private void assertValidateMsgCount ( java.util.List < java.lang.String > validationMessages , java.lang.String msg , int count ) { org.junit.Assert . assertEquals ( java.util.Collections . frequency ( validationMessages , msg ) , count ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { spmDefaultPriorityValue = ( ( java.lang.Integer ) ( returnValue ) ) ; updateSpmPriorityValues () ; updateSpmPriority () ; }
@ org.junit.Test public void getUsbPolicyIsSetDisabled () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; assertEquals ( UsbPolicy.DISABLED , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) ) ; }
public static org.ovirt.engine.core.common.businessentities.storage.DiskImage createHibernationMetadataDisk ( org.ovirt.engine.core.common.businessentities.VM vm ) { org.ovirt.engine.core.common.businessentities.storage.DiskImage image = org.ovirt.engine.core.bll.memory.MemoryUtils . createMetadataDisk ( null ) ; image . setDiskAlias ( org.ovirt.engine.core.bll.memory.MemoryUtils . generateHibernationMetadataDiskAlias ( vm . getName () ) ) ; image . setDescription ( org.ovirt.engine.core.bll.memory.MemoryUtils.VM_HIBERNATION_METADATA_DISK_DESCRIPTION ) ; return image ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.ManageGlusterServiceCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterServiceParameters ( null , null , org.ovirt.engine.core.common.businessentities.gluster.ServiceType.NFS , org.ovirt.engine.core.common.constants.gluster.GlusterConstants.MANAGE_GLUSTER_SERVICE_ACTION_TYPE_START ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public boolean isValid ( java.lang.Integer value , javax.validation.ConstraintValidatorContext context ) { return ( value == NUMBER_CONSTANT ) || ( value >= NUMBER_CONSTANT ) ; }
protected org.ovirt.engine.core.common.businessentities.StoragePool getStoragePool ( org.ovirt.engine.core.compat.Guid id ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; pool . setId ( id ) ; return pool ; }
private void CleanConnection ( org.ovirt.engine.core.common.businessentities.StorageServerConnections connection , org.ovirt.engine.core.compat.Guid hostId ) { org.ovirt.engine.ui.frontend.Frontend . RunAction ( VdcActionType.DisconnectStorageServerConnection , new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase ( connection , hostId ) , null , this ) ; }
@ java.lang.Override public void updateVisibility () { super . updateVisibility () ; messageLabel . setVisible ( false ) ; publicUseEditor . setVisible ( true ) ; }
public static java.util.List < org.ovirt.engine.core.aaa.DirectoryGroup > findGroupsByQuery ( final org.ovirt.engine.core.extensions.mgr.ExtensionProxy extension , final java.lang.String namespace , final java.lang.String query ) { return org.ovirt.engine.core.aaa.AuthzUtils . queryGroups ( extension , namespace , org.ovirt.engine.core.aaa.SearchQueryParsingUtils . generateQueryMap ( query , Authz.QueryEntity.GROUP ) , false , false ) ; }
public int getPendingVmemSize () { return mVdsDynamic . getPendingVmemSize () ; }
@ org.junit.Test public void testFetchAllIsoDomainInSystemNoDuplicate () { java.util.List < org.ovirt.engine.core.common.businessentities.storage.RepoImage > listOfAllIsoFiles = repoFileMetaDataDao . getAllRepoFilesForAllStoragePools ( StorageDomainType.ISO , StoragePoolStatus.Up , StorageDomainStatus.Active , VDSStatus.Up ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , listOfAllIsoFiles . size () ) ; }
public void logoutUser ( final org.ovirt.engine.ui.frontend.communication.UserCallback < > callback ) { loggedIn = false ; processor . logoutUser ( callback ) ; }
protected void initBackendResource ( org.ovirt.engine.api.restapi.resource.BackendResource resource ) { resource . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.network.VnicProfileView > getAllForDataCenter ( org.ovirt.engine.core.compat.Guid id ) { return getAllForDataCenter ( id , null , false ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getId () . equals ( getNetwork () . getId () ) ; }
@ java.lang.Override public void oSType_SelectedItemChanged () { java.lang.Integer osType = getModel () . getOSType () . getSelectedItem () ; if ( osType != null ) { updateVirtioScsiEnabled ( vm . getId () , osType ) ; } }
protected java.util.List < > getSelectedItems () { return ( getTable () ) != null ? getTable () . getSelectionModel () . getSelectedList () : null ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.storage.Disk object ) { if ( object . getReadOnly () ) { return org.ovirt.engine.ui.common.widget.uicommon.disks.DisksViewColumns.constants . readOnly () ; } return null ; }
public void RemoveVds ( org.ovirt.engine.core.compat.Guid vdsId , boolean newHost ) { org.ovirt.engine.core.vdsbroker.VdsManager vdsManager = GetVdsManager ( vdsId , newHost ) ; if ( vdsManager != null ) { vdsManager . dispose () ; vdsManagersDict . remove ( vdsId ) ; } }
@ org.junit.Test public void storagePoolWithId () { b . setStoragePoolId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.common.businessentities.StoragePool p = b . getStoragePool () ; org.junit.Assert . assertNotNull ( p ) ; }
@ org.junit.Test public void insufficientDiskSpace () { setupVolumeFormatAndTypeTest ( VolumeFormat.RAW , VolumeType.Preallocated , StorageType.NFS ) ; org.mockito.Mockito . doReturn ( false ) . when ( command ) . validateSpaceRequirements ( org.mockito.Matchers . anyList () ) ; org.junit.Assert . assertFalse ( command . validate () ) ; }
private org.ovirt.engine.api.model.Template getRestModel ( int index ) { return org.ovirt.engine.api.restapi.resource.BackendTemplatesResourceTest . getModel ( index ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.UpdateVmPoolCommand < org.ovirt.engine.core.common.action.AddVmPoolParameters > createCommand () { org.ovirt.engine.core.common.action.AddVmPoolParameters param = new org.ovirt.engine.core.common.action.AddVmPoolParameters ( vmPools , testVm , VM_COUNT ) ; param . setStorageDomainId ( firstStorageDomainId ) ; return new org.ovirt.engine.core.bll.UpdateVmPoolCommand ( param , null ) ; }
private void initCinderDisk () { org.ovirt.engine.core.common.businessentities.storage.Disk cinderDisk = new org.ovirt.engine.core.common.businessentities.storage.CinderDisk () ; org.mockito.Mockito . when ( diskDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( cinderDisk ) ; }
@ java.lang.Override public void update ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { getCallsHandler () . executeModification ( STRING_CONSTANT , getClusterParamSource ( cluster ) ) ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpEntityQueryExpectations ( VdcQueryType.GetErrataForEngine , org.ovirt.engine.core.common.queries.GetErrataCountsParameters . class , new java.lang.String [] {} , new java.lang.Object [] {} , getErrataData () , failure ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.storage.disk.HotUnPlugDiskFromVmCommand < org.ovirt.engine.core.common.action.HotPlugDiskToVmParameters > createCommand () { return new org.ovirt.engine.core.bll.storage.disk.HotUnPlugDiskFromVmCommand ( createParameters () , null ) ; }
private org.ovirt.engine.core.common.businessentities.network.IPv4Address getIpv4PrimaryAddress () { return networkDataCenterIpConfigurationDefinition . getIpv4PrimaryAddress () ; }
private void providers_SelectedItemChanged () { org.ovirt.engine.core.common.businessentities.Provider provider = getProviders () . getSelectedItem () ; setEnableSearchHost ( ( provider != null ) ) ; }
protected void preSearchCalled ( org.ovirt.engine.core.common.businessentities.VM vm ) { setSearchString ( ( STRING_CONSTANT + ( vm . getName () ) ) ) ; }
public java.util.Set < org.ovirt.engine.core.common.errors.EngineError > getExpectedEngineErrors () { return expectedEngineErrors ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageDomainStatus getRawValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getStatus () ; }
public org.ovirt.engine.core.common.businessentities.NetworkStatus getStatus () { return ( cluster ) == null ? null : cluster . getstatus () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { if ( ( _vdsGroup ) == null ) { _vdsGroup = org.ovirt.engine.core.bll.VdsGroupCommandBase . getVdsGroupDAO () . get ( org.ovirt.engine.core.bll.VdsGroupCommandBase . getParameters () . getVdsGroupId () ) ; } return _vdsGroup ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyDisabledGotEnabledNativePolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( true ) ; usb . setType ( UsbType.NATIVE ) ; assertEquals ( UsbPolicy.ENABLED_NATIVE , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.DISABLED ) ) ; }
@ org.junit.Test public void testGet () { org.ovirt.engine.core.common.scheduling.ClusterPolicy result = dao . get ( existingPolicy . getId () , java.util.Collections . emptyMap () ) ; org.junit.Assert . assertEquals ( result , existingPolicy ) ; }
public void setSmartcardEnabled ( boolean isSmartcardEnabled ) { mVmStatic . setSmartcardEnabled ( isSmartcardEnabled ) ; }
@ java.lang.Override protected void unlockEntities () { getSnapshotDao () . updateStatus ( sourceSnapshotId , SnapshotStatus.OK ) ; org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getVmDynamicDao () . updateStatus ( org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getVmId () , VMStatus.Down ) ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpEntityQueryExpectations ( VdcQueryType.GetAffinityGroupById , org.ovirt.engine.core.common.queries.IdQueryParameters . class , new java.lang.String [] {} , new java.lang.Object [] {} , null , failure ) ; }
@ org.junit.Test public void testIsNetworkInSyncWhenNetworkQosIsNull ( ) throws java.lang.Exception { networkQos = null ; org.junit.Assert . assertThat ( createTestedInstanceWithSameNonQosValues () . isNetworkInSync () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { createReourceWithBadGuid () ; org.ovirt.engine.api.restapi.resource.AbstractBackendNetworkAttachmentResourceTest . fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getStoragePoolId () { return ( getEntity () ) != null ? getEntity () . getStoragePoolId () : null ; }
public org.ovirt.engine.ui.common.idhandler.CellWithElementId < C > getCell () { return ( ( org.ovirt.engine.ui.common.idhandler.CellWithElementId < C > ) ( super . getCell () ) ) ; }
protected org.ovirt.engine.core.bll.validator.storage.DiskImagesValidator getDiskImagesValidator ( org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage ) { return new org.ovirt.engine.core.bll.validator.storage.DiskImagesValidator ( diskImage ) ; }
public boolean hasTaskHandlers () { return ( getTaskHandlers () ) != null ; }
@ org.junit.Test public void testMarkHostDevicesUsedByVmId () { dao . markHostDevicesUsedByVmId ( org.ovirt.engine.core.dao.HostDeviceDaoTest.EXISTING_VM_ID , org.ovirt.engine.core.dao.HostDeviceDaoTest.EXISTING_HOST_ID ) ; org.ovirt.engine.core.common.businessentities.HostDevice hostDevice = dao . getHostDeviceByHostIdAndDeviceName ( org.ovirt.engine.core.dao.HostDeviceDaoTest.EXISTING_HOST_ID , org.ovirt.engine.core.dao.HostDeviceDaoTest.EXISTING_DEVICE_NAME ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.HostDeviceDaoTest.EXISTING_VM_ID , hostDevice . getVmId () ) ; }
protected org.ovirt.engine.core.dao.QuotaDAO getQuotaDAO () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getQuotaDao () ; }
protected void setSoundcard ( org.ovirt.engine.api.model.VM model ) { model . setSoundcardEnabled ( ( ! ( org.ovirt.engine.api.restapi.util.VmHelper . getSoundDevicesForEntity ( this , new org.ovirt.engine.core.compat.Guid ( model . getId () ) ) . isEmpty () ) ) ) ; }
@ org.junit.Test public void testGetDataAndSetDataWithEmptySession () { org.junit.Assert . assertNull ( STRING_CONSTANT , container . getData ( STRING_CONSTANT , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; }
protected boolean isVdsGroupUnique ( java.lang.String vdsGroupName ) { org.ovirt.engine.core.dao.VdsGroupDAO vdsGroupDao = org.ovirt.engine.core.bll.VdsGroupOperationCommandBase . getVdsGroupDAO () ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > vdsGroups = vdsGroupDao . getByName ( vdsGroupName , true ) ; return ( vdsGroups == null ) || ( vdsGroups . isEmpty () ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.AssignedPermissionsResource getPermissionsResource () { return super . getPermissionsResource () ; }
@ org.junit.Test public void removeForExistingVds () { org.ovirt.engine.core.compat.Guid vdsId = new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ; dao . remove ( vdsId ) ; org.ovirt.engine.core.common.businessentities.VdsKdumpStatus found = dao . get ( vdsId ) ; org.junit.Assert . assertNull ( found ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) com.google.gwt.safehtml.shared.SafeHtml lineChartWithoutImage ( int textWidth , java.lang.String textColor , java.lang.String fontWeight ) ;
public java.lang.String toString () { return ( STRING_CONSTANT + ( ( mVdsStatic ) == null ? STRING_CONSTANT : mVdsStatic . getName () ) ) + STRING_CONSTANT ; }
private void logFailureMessage ( java.lang.String messagePrefix , java.lang.RuntimeException ex ) { org.ovirt.engine.core.vdsbroker.VdsUpdateRunTimeInfo.log . error ( STRING_CONSTANT , messagePrefix , _vds . getName () , _vds . getId () , ex . getMessage () ) ; }
private org.ovirt.engine.ui.uicommonweb.UICommand getOnSaveCommand () { return org.ovirt.engine.ui.uicommonweb.UICommand . createDefaultOkUiCommand ( STRING_CONSTANT , this ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid persistAsyncTaskPlaceHolder () { return super . persistAsyncTaskPlaceHolder ( getActionType () ) ; }
@ java.lang.Override protected java.lang.Integer getProgressValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return ( object . getvm_active () ) != null ? java.lang.Math . min ( object . getvm_active () , NUMBER_CONSTANT ) : NUMBER_CONSTANT ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmInterfaceType > returnValue ) { setSupportedVnicTypes ( returnValue ) ; postNicInit () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > getDevicesCollection ( org.ovirt.engine.core.compat.Guid vmId ) { return getBackendCollection ( org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface . class , VdcQueryType.GetVmGuestAgentInterfacesByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ) ; }
public java.util.List < org.ovirt.engine.core.aaa.DirectoryGroup > getGroups () { if ( ( groups ) == null ) { groups = new java.util.ArrayList < org.ovirt.engine.core.aaa.DirectoryGroup > () ; } return groups ; }
@ javax.ws.rs.PUT @ javax.ws.rs.Consumes ( value = { STRING_CONSTANT , STRING_CONSTANT } ) public org.ovirt.engine.api.v3.types.V3Template update ( org.ovirt.engine.api.v3.types.V3Template template ) { template = adaptUpdate ( getDelegate () : : update , template ) ; org.ovirt.engine.api.v3.helpers.V3TemplateHelper . addDisksLink ( template ) ; return template ; }
@ org.junit.Test @ java.lang.Override public void testQuery ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( org.ovirt.engine.api.restapi.resource.QUERY ) ; setUpQueryExpectations ( org.ovirt.engine.api.restapi.resource.QUERY ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
private void writeJaxbProperty ( java.lang.String value ) { writeJaxbCustomization ( STRING_CONSTANT , STRING_CONSTANT , value ) ; }
@ java.lang.Override protected void setActionMessageParameters () { super . setActionMessageParameters () ; addCanDoActionMessage ( VdcBllMessages.VAR__ACTION__REMOVE ) ; }
private void invokeCommands ( java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > returnValues ) { if ( canRunActions ( returnValues ) ) { if ( isWaitForResult ) { invokeSyncCommands () ; } else { invokeCommands () ; } } }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , org.ovirt.engine.core.bll.job.ExecutionContext executionContext ) { return runMultipleActionsImpl ( actionType , parameters , true , false , executionContext ) ; }
@ java.lang.Override public java.lang.String serialize ( java.lang.Object payload ) throws org.ovirt.engine.core.utils.SerializationExeption { if ( payload == null ) { return null ; } else { return writeJsonAsString ( payload , org.ovirt.engine.core.utils.serialization.json.JsonObjectSerializer.formattedMapper ) ; } }
@ org.junit.Test @ java.lang.Override public void testList ( ) throws java.lang.Exception { collection . setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( null ) ; verifyCollection ( getCollection () ) ; }
@ org.junit.Test public void testCheckGlusterQuorumTwoServersUp () { org.ovirt.engine.core.common.businessentities.Cluster cluster = getCluster ( true ) ; java.lang.Iterable < org.ovirt.engine.core.compat.Guid > hostIds = java.util.Arrays . asList ( org.ovirt.engine.core.bll.gluster.GlusterHostValidatorTest.SERVER_ID_1 ) ; org.junit.Assert . assertTrue ( hostValidator . checkGlusterQuorum ( cluster , hostIds ) . isEmpty () ) ; }
private org.ovirt.engine.core.bll.gluster.GlusterVolumeRemoveBricksCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.GlusterVolumeRemoveBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( volumeId , getBricks ( volumeId , NUMBER_CONSTANT ) , NUMBER_CONSTANT ) , null ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml statusTemplate ( com.google.gwt.safehtml.shared.SafeHtml statusImage , java.lang.String id , java.lang.String status ) ;
public org.ovirt.optimizer.solver.test.TestOptimizer enablePolicyUnit ( org.ovirt.optimizer.solver.facts.PolicyUnit unit ) { bestSolution . getFixedFacts () . add ( new org.ovirt.optimizer.solver.facts.PolicyUnitEnabled ( unit . getUuid () , NUMBER_CONSTANT ) ) ; return this ; }
public org.ovirt.engine.core.compat.Guid getMigratingToVds () { return this . vmDynamic . getMigratingToVds () ; }
public int getSshPort () { return sshPort ; }
@ java.lang.SuppressWarnings ( value = { STRING_CONSTANT , STRING_CONSTANT } ) @ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SimpleActionPanel < org.ovirt.engine.ui.uicommonweb.models.SystemTreeModel > createActionPanel ( org.ovirt.engine.ui.webadmin.uicommon.model.SystemTreeModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SimpleActionPanel ( modelProvider , modelProvider . getSelectionModel () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
@ org.junit.Test public void testExecuteQueryUserConfigNotFiltered () { assertQueryExecution ( ConfigValues.PredefinedVMProperties , false ) ; }
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.StorageDomain value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity () ) ) ) ) { super . setEntity ( value ) ; } }
@ org.junit.Test public void testGet () { org.ovirt.engine.core.common.scheduling.PolicyUnit result = dao . get ( FixturesTool.POLICY_UNIT_MIGRATION ) ; org.junit.Assert . assertEquals ( result , existingPolicyUnit ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetVmsByDiskGuidQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.bll.GetVmsByDiskGuidQuery . getDbFacade () . getVmDao () . getForDisk ( org.ovirt.engine.core.bll.GetVmsByDiskGuidQuery . getParameters () . getId () ) ) ; }
@ java.lang.Override protected java.lang.String [] getRequiredAddFields () { return new java.lang.String [] { STRING_CONSTANT } ; }
@ java.lang.Override public java.util.List < T > getSelectedItems () { return selectionModel . getSelectedList () ; }
public java.lang.Integer getDisplay () { return this . vmDynamic . getDisplay () ; }
public boolean isInSync () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface.NetworkImplementationDetails details = getNetworkImplementationDetails () ; return ( details == null ) || ( details . isInSync () ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addInterface ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid deviceId , boolean plugged , boolean hostDev ) { return addInterface ( vmId , deviceId , plugged , hostDev , null ) ; }
public void setstatus ( org.ovirt.engine.core.common.businessentities.VmTemplateStatus value ) { status = value ; }
private boolean checkVmNeedsHostDevices ( org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < org.ovirt.engine.core.common.businessentities.VmDevice > vfs = vmDeviceDao . getVmDeviceByVmIdTypeAndDevice ( vmId , VmDeviceGeneralType.INTERFACE , VmDeviceType.HOST_DEVICE ) ; return ( ! ( vfs . isEmpty () ) ) || ( checkVmNeedsDirectPassthrough ( vmId ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { refreshCustomProperties ( currentLoadBalance , false ) ; currentLoadBalance = ( ( org.ovirt.engine.core.common.scheduling.PolicyUnit ) ( getLoadBalanceList () . getSelectedItem () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.GlusterVolume addParents ( org.ovirt.engine.api.model.GlusterVolume model ) { model . setId ( id ) ; parent . addParents ( model ) ; return model ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.NewVmModelBehavior behavior = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.NewVmModelBehavior ) ( target ) ) ; behavior . PostInitTemplate ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ) ; }
@ org.junit.Test public void test () { underTest . getHead () . process ( actual ) ; org.junit.Assert . assertEquals ( expected , actual ) ; }
public static org.ovirt.engine.api.model.WatchdogModel map ( org.ovirt.engine.core.common.businessentities.VmWatchdogType model ) { switch ( model ) { case i6300esb : return org.ovirt.engine.api.model.WatchdogModel.I6300ESB ; default: return null ; } }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getBusinessEntitySnapshotDao () ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Quota > getQuotaByStoragePoolGuid ( org.ovirt.engine.core.compat.Guid storagePoolId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , storagePoolId ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , getQuotaFromResultSet () , parameterSource ) ; }
public static java.lang.String getDisplayStringForPluginName ( java.lang.String pluginName ) { try { return org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . get ( org.ovirt.engine.core.common.businessentities.OpenstackNetworkPluginType . valueOf ( pluginName ) ) ; } catch ( java.lang.Exception e ) { return pluginName == null ? STRING_CONSTANT : pluginName ; } }
private void initEditors () { hostsTable = new org.ovirt.engine.ui.common.widget.editor.EntityModelCellTable ( org.ovirt.engine.ui.common.widget.editor.EntityModelCellTable.SelectionMode.SINGLE , true ) ; useCommonPasswordEditor = new org.ovirt.engine.ui.common.widget.editor.generic.EntityModelCheckBoxEditor ( org.ovirt.engine.ui.common.widget.Align.RIGHT ) ; configureFirewallEditor = new org.ovirt.engine.ui.common.widget.editor.generic.EntityModelCheckBoxEditor ( org.ovirt.engine.ui.common.widget.Align.LEFT ) ; configureFirewallEditor . setAccessible ( true ) ; }
public org.ovirt.engine.core.bll.network.macpoolmanager.MacPoolManagerStrategy getMacPool () { return poolPerDc . poolForDataCenter ( getStoragePoolId () ) ; }
public static org.ovirt.engine.core.common.utils.customprop.VmPropertiesUtils getInstance () { return org.ovirt.engine.core.common.utils.customprop.VmPropertiesUtils.instance ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterServerHook getGlusterServerHook ( org.ovirt.engine.core.compat.Guid hookId , org.ovirt.engine.core.compat.Guid serverId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoImpl.glusterServerHookRowMapper , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , hookId ) . addValue ( STRING_CONSTANT , serverId ) ) ; }
@ java.lang.Override protected void endSuccessfully () { org.ovirt.engine.core.bll.ImportVmFromExternalProviderCommand . endActionOnDisks () ; org.ovirt.engine.core.bll.ImportVmFromExternalProviderCommand . freeLock () ; convert () ; org.ovirt.engine.core.bll.ImportVmFromExternalProviderCommand . setSucceeded ( true ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getId () . equals ( getParameters () . getNetwork () . getId () ) ; }
@ java.lang.Override protected void onEntityChanged () { super . onEntityChanged () ; org.ovirt.engine.ui.uicommonweb.models.configure.scheduling.affinity_groups.list.AffinityGroupListModel . getSearchCommand () . execute () ; }
private boolean isNicToConfigureContainTheLabel ( java.lang.String nicName , java.lang.String label ) { java.util.Set < java.lang.String > labelsToConfigure = getLabelsToConfigureOnNic ( nicName ) ; return ( labelsToConfigure != null ) && ( labelsToConfigure . contains ( label ) ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendMultipleActionAsyncResult result ) { model . stopProgress () ; setConfirmWindow ( null ) ; }
private void setUpVds () { vds . setId ( org.ovirt.engine.core.bll.pm.FenceAgentExecutorTest.FENCECD_HOST_ID ) ; }
@ org.junit.Test public void testGetByOperatingSystemIdExisting () { final org.ovirt.engine.core.common.businessentities.VmIconDefault vmIconDefault = dao . getByOperatingSystemId ( org.ovirt.engine.core.dao.VmIconDefaultDaoTest.OTHER_OS_VM_ICON_DEFAULT . getOsId () ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.VmIconDefaultDaoTest.OTHER_OS_VM_ICON_DEFAULT , vmIconDefault ) ; }
public static boolean isFieldsUpdated ( org.ovirt.engine.core.common.businessentities.VdsStatic source , org.ovirt.engine.core.common.businessentities.VdsStatic destination , java.lang.Iterable < java.lang.String > list ) { return org.ovirt.engine.core.bll.VdsHandler.updateVdsStatic . isFieldsUpdated ( source , destination , list ) ; }
@ java.lang.Override public java.lang.Boolean convert ( java.lang.Object source ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; return storageDomains . isEmpty () ; } return false ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.VdcActionParametersBase getActionParameters () { org.ovirt.engine.core.common.action.VnicProfileParameters parameters = new org.ovirt.engine.core.common.action.VnicProfileParameters ( getProfile () ) ; parameters . setPublicUse ( getPublicUse () . getEntity () ) ; return parameters ; }
public boolean hasGraphicsDevice ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.common.businessentities.GraphicsType type ) { return ! ( getGraphicsDevices ( vmId , type ) . isEmpty () ) ; }
private static void setNonOperationl ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason , java.util.Map < java.lang.String , java.lang.String > customLogValues ) { org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () . getEventListener () . vdsNonOperational ( vds . getId () , reason , true , Guid.Empty , customLogValues ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final java.lang.Object state ) { runMultipleAction ( actionType , parameters , false , callback , state ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.aaa.AuthenticationProfile o1 , org.ovirt.engine.core.aaa.AuthenticationProfile o2 ) { return java.lang.Integer . compare ( o1 . getNegotiationPriority () , o2 . getNegotiationPriority () ) ; }
public java.lang.String getStoragePoolName () { if ( ( getStoragePool () ) != null ) { return getStoragePool () . getname () ; } return STRING_CONSTANT ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.VdsDAODbFacadeImpl.VdsRowMapper.instance ) ; }
@ java.lang.Override public java.lang.String toString () { return java.lang.String . format ( STRING_CONSTANT , ( ( TotalMilliseconds ) < NUMBER_CONSTANT ? STRING_CONSTANT : STRING_CONSTANT ) , Days , Hours , Minutes , Seconds , Milliseconds ) ; }
@ java.lang.Override public void cleanup () { driver . cleanup () ; }
protected org.ovirt.engine.core.compat.Guid getUserID () { if ( ( user ) == null ) { return null ; } return user . getId () ; }
protected static org.dbunit.dataset.IDataSet initDataSet ( ) throws java.lang.Exception { return new org.dbunit.dataset.xml.XmlDataSet ( org.ovirt.engine.core.dao.BaseDAOTestCase . class . getResourceAsStream ( STRING_CONSTANT ) ) ; }
@ java.lang.Deprecated public static void RunMultipleActions ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendActionAsyncCallback successCallback ) { org.ovirt.engine.ui.frontend.Frontend . RunMultipleActions ( actionType , parameters , successCallback , null ) ; }
private void mockSameNameQuery ( boolean result ) { org.mockito.Mockito . doReturn ( result ) . when ( command ) . isVmWithSameNameExists ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . any () ) ; }
@ java.lang.Override protected void handleRootDSEFailure ( org.ovirt.engine.core.bll.adbroker.DirectorySearcher directorySearcher ) { java.lang.Exception ex = directorySearcher . getException () ; handleDirectorySearcherException ( ex ) ; }
public void setCurrentRefreshRate ( int newRefreshRate ) { getModelTimer () . setRefreshRate ( newRefreshRate ) ; saveRefreshRate ( newRefreshRate ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createNic ( java.lang.String nicName , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , nicName , false , null , null , null , networkName , true , null , false , null ) ; }
private org.ovirt.engine.core.bll.GetVmConfigurationBySnapshotQuery < org.ovirt.engine.core.common.queries.IdQueryParameters > setupQueryBySnapshotId ( org.ovirt.engine.core.compat.Guid snapshotId ) { org.ovirt.engine.core.common.queries.IdQueryParameters queryParams = getQueryParameters () ; org.mockito.Mockito . when ( queryParams . getId () ) . thenReturn ( snapshotId ) ; org.ovirt.engine.core.bll.GetVmConfigurationBySnapshotQuery < org.ovirt.engine.core.common.queries.IdQueryParameters > query = getQuery () ; return query ; }
private java.lang.String resolveMessage ( java.lang.String message , java.util.Map < java.lang.String , java.lang.String > variables ) { org.apache.commons.lang.text.StrSubstitutor sub = new org.apache.commons.lang.text.StrSubstitutor ( variables ) ; return sub . replace ( message ) ; }
private void analyzeHostedEngineVm () { if ( ( ( dbVm ) != null ) && ( ( dbVm . getOrigin () ) == ( org.ovirt.engine.core.common.businessentities.OriginType.HOSTED_ENGINE ) ) ) { hostedEngineUnmanaged = true ; } }
protected java.util.List < org.ovirt.engine.api.model.Network > getEntityList () { return getEntities ( false , false , false ) ; }
@ java.lang.Override protected void onReveal () { super . onReveal () ; modelProvider . onSubTabSelected () ; }
@ java.lang.Override public org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.compat.Guid , java.lang.String > mapRow ( java.sql.ResultSet rs , int arg1 ) throws java.sql.SQLException { return new org.ovirt.engine.core.common.utils.Pair ( getGuid ( rs , STRING_CONSTANT ) , rs . getString ( STRING_CONSTANT ) ) ; }
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; }
private boolean allowedNetworkLabelManipulation () { boolean labelNotChanged = ! ( labelChanged () ) ; return ( ! ( org.ovirt.engine.core.bll.network.dc.UpdateNetworkCommand . getNetwork () . isExternal () ) ) && ( labelNotChanged || ( labelAdded () ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { getCdImage () . setIsChangable ( getCdAttached () . getEntity () ) ; }
public org.ovirt.engine.core.common.businessentities.StorageDomainStatus getStatus () { if ( ( persistentStorageDomainStatus ) == null ) { return null ; } return org.ovirt.engine.core.common.businessentities.StorageDomainStatus . forValue ( persistentStorageDomainStatus ) ; }
private org.ovirt.engine.core.common.businessentities.IscsiBond getIscsiBondWithNoMatchingNetworks () { org.ovirt.engine.core.common.businessentities.IscsiBond iscsiBond = new org.ovirt.engine.core.common.businessentities.IscsiBond () ; iscsiBond . setId ( org.ovirt.engine.api.restapi.resource.BackendIscsiBondNetworkResourceTest.ISCSI_BOND_ID ) ; iscsiBond . getNetworkIds () . add ( GUIDS [ NUMBER_CONSTANT ] ) ; return iscsiBond ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getAllImageSnapshots ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return org.ovirt.engine.core.bll.ImagesHandler . getAllImageSnapshots ( diskImage . getImageId () ) ; }
private void load ( ) throws org.ovirt.engine.core.extensions.mgr.ConfigurationException { for ( java.io.File directory : org.ovirt.engine.core.utils.EngineLocalConfig . getInstance () . getExtensionsDirectories () ) { load ( directory ) ; } activate () ; }
@ java.lang.Override public javax.ws.rs.core.Response remove () { get () ; org.ovirt.engine.core.common.businessentities.StorageServerConnections connection = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; connection . setId ( id ) ; org.ovirt.engine.core.compat.Guid hostId = org.ovirt.engine.core.compat.Guid.Empty ; org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase parameters = new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase ( connection , hostId ) ; return performAction ( VdcActionType.RemoveStorageServerConnection , parameters ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Network getEntity ( int index ) { return org.ovirt.engine.api.restapi.resource.AbstractBackendNetworksResourceTest . setUpEntityExpectations ( control . createMock ( org.ovirt.engine.api.model.Network . class ) , false , false , false , index ) ; }
public java.lang.String getId () { return this . id ; }
private void initDestStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain destDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; destDomain . setstatus ( StorageDomainStatus.Active ) ; destDomain . setstorage_type ( StorageType.NFS ) ; org.mockito.Mockito . doReturn ( destDomain ) . when ( command ) . getStorageDomain () ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.IPTABLES_OVERRIDE ) public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.IPTABLES_ENABLE , true ) ; return true ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public void setvds_group_compatibility_version ( org.ovirt.engine.core.compat.Version value ) { if ( org.ovirt.engine.core.compat.Version . OpInequality ( getvds_group_compatibility_version () , value ) ) { this . vds_group_compatibility_versionField = value ; } }
@ java.lang.Override protected boolean canDoAction () { return canMigrateVm ( org.ovirt.engine.core.bll.MigrateVmCommand . getVm () ) ; }
@ java.lang.Override protected void init () { parent . setMappingLocator ( mapperLocator ) ; parent . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
private org.ovirt.engine.core.bll.ValidationResult validateNetworkExclusiveOnNics ( java.util.Collection < org.ovirt.engine.core.common.businessentities.network.NetworkAttachment > attachmentsToConfigure ) { org.ovirt.engine.core.bll.validator.NetworkAttachmentsValidator validator = new org.ovirt.engine.core.bll.validator.NetworkAttachmentsValidator ( attachmentsToConfigure , networkBusinessEntityMap , networkExclusivenessValidator ) ; return validator . validateNetworkExclusiveOnNics () ; }
@ org.junit.Test public void testPatternBasedNameFails () { cmd . getParameters () . getVm () . setName ( STRING_CONSTANT ) ; org.junit.Assert . assertFalse ( STRING_CONSTANT , cmd . validateInputs () ) ; }
@ java.lang.Override protected void getHostListByCluster ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VdcQueryType.GetHostsByClusterId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( cluster . getId () ) , query ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { context.storageList = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; SetDefaultNames8 () ; }
void processOnVmPoweringUp ( org.ovirt.engine.core.compat.Guid vmId ) ;
private java.util.List < org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > filter ( final org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VDS . . . hosts ) { return inClusterUpgradeWeightPolicyUnit . score ( new org.ovirt.engine.core.common.businessentities.VDSGroup () , java.util.Arrays . asList ( hosts ) , vm , null ) ; }
@ java.lang.Override protected void buildChildCommandInfos () { for ( org.ovirt.engine.core.common.businessentities.DiskImage image : getDisksList () ) { addChildCommandInfo ( image . getImageId () , VdcActionType.CreateSnapshot , buildCreateSnapshotParameters ( image ) ) ; } }
public void setStoragePoolId ( org.ovirt.engine.core.compat.Guid storagePoolId ) { getStoragePoolIsoMapData () . setStoragePoolId ( storagePoolId ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return org.apache.commons.lang.StringUtils . equals ( i . getNetworkName () , getParameters () . getNetwork () . getName () ) ; }
@ java.lang.Override protected boolean isGhost ( org.ovirt.engine.ui.uicommonweb.models.macpool.MacRangeModel value ) { return false ; }
private org.ovirt.engine.core.common.action.AttachDetachVmDiskParameters buildDetachDetachVmDiskParameters ( org.ovirt.engine.core.common.businessentities.storage.DiskImage activeDiskSnapshot ) { return new org.ovirt.engine.core.common.action.AttachDetachVmDiskParameters ( new org.ovirt.engine.core.common.businessentities.storage.DiskVmElement ( activeDiskSnapshot . getId () , org.ovirt.engine.core.bll.RestoreStatelessVmCommand . getVmId () ) , false ) ; }
@ java.lang.Override public void buildVmSoundDevices () { buildVmDevicesFromDb ( VmDeviceGeneralType.SOUND , true , null ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { if ( ! ( getSucceeded () ) ) { return ( errorType ) == null ? org.ovirt.engine.core.common.AuditLogType.GLUSTER_VOLUME_CREATE_FAILED : errorType ; } return super . getAuditLogTypeValue () ; }
private void cancelUpload () { org.ovirt.engine.ui.uicommonweb.models.storage.UploadImageModel . showCancelUploadDialog ( this , HelpTag.cancel_upload_image , getSelectedItems () ) ; }
@ java.lang.Override protected void initQuery ( org.ovirt.engine.core.bll.GetAllRolesQuery < org.ovirt.engine.core.common.queries.VdcQueryParametersBase > query ) { super . initQuery ( query ) ; org.mockito.Mockito . doReturn ( java.lang.Boolean.TRUE ) . when ( query ) . isAdminUser () ; }
@ java.lang.Override public void Search () { if ( ( getEntity () ) != null ) { super . Search () ; } }
void addDetail ( java.lang.String detailName , java.lang.String detailValue ) { org.ovirt.engine.core.utils.collections.MultiValueMapUtils . addToMap ( detailName , detailValue , details , new org.ovirt.engine.core.utils.collections.MultiValueMapUtils.LinkedHashSetCreator () ) ; }
public static java.util.List < org.ovirt.engine.core.aaa.DirectoryUser > findPrincipalsByQuery ( final org.ovirt.engine.core.extensions.mgr.ExtensionProxy extension , final java.lang.String namespace , final java.lang.String query ) { return org.ovirt.engine.core.aaa.AuthzUtils . queryPrincipals ( extension , namespace , org.ovirt.engine.core.aaa.SearchQueryParsingUtils . generateQueryMap ( query , Authz.QueryEntity.PRINCIPAL ) , false , false ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { getStorageDomain () . setSelectedItem ( storageDomain ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.DbUser > getAllWithQuery ( java.lang.String query ) { return new org.springframework.jdbc.core.simple.SimpleJdbcTemplate ( jdbcTemplate ) . query ( query , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance ) ; }
private org.ovirt.engine.core.bll.network.macpool.MacPool getMacPool () { return org.ovirt.engine.core.di.Injector . get ( org.ovirt.engine.core.bll.network.macpool.MacPoolPerDc . class ) . getMacPoolForDataCenter ( getStoragePoolId () ) ; }
@ java.lang.Override public boolean Match ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return id . equals ( source . getId () ) ; }
public static void AddVdsAlert ( org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.AuditLogType type , org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase alert ) { alert . setVdsId ( vdsId ) ; org.ovirt.engine.core.dal.dbbroker.auditloghandling.AlertDirector . Alert ( alert , type ) ; }
public static java.util.Map < java.lang.String , java.lang.Integer > getVgaVideoDeviceSettings () { return java.util.Collections . singletonMap ( VdsProperties.VIDEO_VRAM , org.ovirt.engine.core.bll.utils.VideoDeviceSettings.VgamemVideoSettings.BASE_RAM_SIZE ) ; }
public void setGroupIds ( java.util.Collection < org.ovirt.engine.core.compat.Guid > groupIds ) { this . groupIds = new java.util.HashSet ( groupIds ) ; }
@ java.lang.Override public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; }
@ org.junit.Test public void getUserIdDefault () { final org.ovirt.engine.core.compat.Guid g = b . getUserId () ; org.junit.Assert . assertEquals ( Guid.Empty , g ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.SSH_KEY , org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils . getEngineSSHPublicKey () . replace ( STRING_CONSTANT , STRING_CONSTANT ) ) ; return true ; }
@ javax.ws.rs.PUT @ javax.ws.rs.Consumes ( value = { ApiMediaType.APPLICATION_XML , ApiMediaType.APPLICATION_JSON } ) org.ovirt.engine.api.model.Nic update ( org.ovirt.engine.api.model.Nic device ) ;
@ org.junit.Before public void setUp () { org.mockito.Mockito . doReturn ( snapshotDao ) . when ( validator ) . getSnapshotDao () ; }
protected org.ovirt.engine.api.model.Clusters mapCollection ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > entities ) { org.ovirt.engine.api.model.Clusters collection = new org.ovirt.engine.api.model.Clusters () ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup entity : entities ) { collection . getClusters () . add ( addLinks ( map ( entity ) ) ) ; } return collection ; }
public org.ovirt.engine.core.bll.validator.MultipleStorageDomainsValidator createMultipleStorageDomainsValidator ( java.util.Collection < org.ovirt.engine.core.common.businessentities.DiskImage > diskImages ) { return new org.ovirt.engine.core.bll.validator.MultipleStorageDomainsValidator ( params . getStoragePoolId () , org.ovirt.engine.core.bll.ImagesHandler . getAllStorageIdsForImageIds ( diskImages ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.String returnValue ) { glusterMetaVolumeName = returnValue ; }
private void deleteV2VJob () { getVdsManager () . removeV2VJobInfoForVm ( org.ovirt.engine.core.bll.ConvertVmCommand . getVmId () ) ; runVdsCommand ( VDSCommandType.DeleteV2VJob , new org.ovirt.engine.core.common.vdscommands.VdsAndVmIDVDSParametersBase ( org.ovirt.engine.core.bll.ConvertVmCommand . getVdsId () , org.ovirt.engine.core.bll.ConvertVmCommand . getVmId () ) ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { hostDeviceDao . removeAllInBatch ( removedDevices ) ; hostDeviceDao . saveAllInBatch ( newDevices ) ; hostDeviceDao . updateAllInBatch ( changedDevices ) ; handleHostNicVfsConfigUpdate ( newDevices , changedDevices , removedDevices ) ; vmDeviceDao . removeAllInBatch ( removedVmDevices ) ; return null ; }
public static boolean IsActiveStorageDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean isActive = ( ( storageDomain . getStatus () ) != null ) && ( ( storageDomain . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ; return isActive ; }
@ org.junit.Test public void validate_vmNotExists_Test () { org.mockito.Mockito . doReturn ( null ) . when ( vmStaticDao ) . get ( org.mockito.ArgumentMatchers . any () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_INVALID_ENTITY_FOR_AFFINITY_GROUP ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : NUMBER_CONSTANT ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { if ( _isNode ) { _isLegacyNode = ( ( java.lang.Boolean ) ( _parser . cliEnvironmentGet ( VdsmEnv.OVIRT_NODE_HAS_OWN_BRIDGES ) ) ) ; } else { _parser . cliNoop () ; } return true ; }
public void setWidth ( java.lang.String width , boolean isFixedLayout ) { table . setWidth ( width , isFixedLayout ) ; tableHeader . setWidth ( width , isFixedLayout ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.StorageDomain map ( org.ovirt.engine.api.model.StorageDomain entity , org.ovirt.engine.api.model.StorageDomain template ) { org.ovirt.engine.api.restapi.resource.BackendStorageDomainsResource resource = new org.ovirt.engine.api.restapi.resource.BackendStorageDomainsResource () ; inject ( resource ) ; return resource . map ( entity , template ) ; }
@ java.lang.Override @ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > getAllWithQuery ( java.lang.String query ) { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > glusterHooks = jdbcTemplate . query ( query , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoDbFacadeImpl.glusterHookRowMapper ) ; return glusterHooks ; }
@ java.lang.Override org.ovirt.engine.ui.uicommonweb.models.vms.ImportEntityData < org.ovirt.engine.core.common.businessentities.VmTemplate > createImportEntityData ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return new org.ovirt.engine.ui.uicommonweb.models.vms.ImportTemplateData ( entity ) ; }
@ org.junit.Test public void bondWithNoSlaves () { org.ovirt.engine.core.common.businessentities.VdsNetworkInterface bond = createBond ( org.ovirt.engine.core.bll.SetupNetworksHelperTest.BOND_NAME , null ) ; mockExistingIfaces ( bond ) ; org.ovirt.engine.core.bll.SetupNetworksHelper helper = createHelper ( createParametersForNics ( bond ) ) ; validateAndExpectViolation ( helper , VdcBllMessages.NETWORK_BONDS_INVALID_SLAVE_COUNT , bond . getName () ) ; }
@ org.junit.Before public void initVds () { org.mockito.Mockito . when ( vds . getId () ) . thenReturn ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) ; }
protected abstract boolean showTransportProperties ( org.ovirt.engine.core.common.businessentities.VDS vds ) ;
public void setPriority ( int value ) { vmStatic . setPriority ( value ) ; }
private org.ovirt.engine.core.bll.SearchQuery < org.ovirt.engine.core.common.queries.SearchParameters > spySearchQuery ( org.ovirt.engine.core.common.queries.SearchParameters searchParam ) { org.ovirt.engine.core.bll.SearchQuery < org.ovirt.engine.core.common.queries.SearchParameters > searchQuery = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.SearchQuery ( searchParam ) ) ; mockInjections ( searchQuery ) ; return searchQuery ; }
@ java.lang.Override public void initTable () { org.ovirt.engine.ui.common.widget.uicommon.permissions.PermissionListModelTable . getTable () . enableColumnResizing () ; addTypeColumn () ; addUserColumn () ; addAuthzColumn () ; addNameSpaceColumn () ; addRoleColumn () ; addCreationDateColum () ; }
@ java.lang.Override public void template_SelectedItemChanged () { getModel () . setIsDisksAvailable ( true ) ; }
@ org.junit.Test public void getJobsByCorrelationID () { java.util.List < org.ovirt.engine.core.common.job.Job > jobsList = dao . getJobsByCorrelationId ( org.ovirt.engine.core.dao.JobDaoTest.EXISTING_CORRELATION_ID ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , org.ovirt.engine.core.dao.JobDaoTest.NUMBER_OF_JOBS_FOR_EXISTING_CORRELATION_ID , jobsList . size () ) ; }
@ org.junit.Test public void areAllVfsFreeTrue () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertTrue ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
protected void doTestGlusterOnlyGet () { setupExpectations ( ApplicationMode.GlusterOnly , org.ovirt.engine.api.restapi.resource.BackendApiResourceTest.relationshipsGlusterOnly ) ; verifyResponseGlusterOnly ( resource . get () ) ; }
@ org.junit.Test public void testRemoveNotFound ( ) throws java.lang.Exception { setUpEntityQueryExpectations ( NUMBER_CONSTANT , NUMBER_CONSTANT , true ) ; try { resource . remove () ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( STRING_CONSTANT , _correlationId ) ; return true ; }
@ java.lang.Override protected void onLogin ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalLoginModel loginModel ) { super . onLogin ( loginModel ) ; loginModel . updateIsENGINEUser ( loginModel . getLoggedUser () ) ; }
@ org.junit.Test public void key () { final java.lang.String s = b . getKey () ; org.junit.Assert . assertEquals ( AuditLogType.UNASSIGNED . toString () , s ) ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , java.lang.String description , org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType snapshotType , org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String memoryVolume , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addSnapshot ( snapshotId , description , SnapshotStatus.LOCKED , snapshotType , vm , true , memoryVolume , null , compensationContext ) ; }
@ java.lang.Override protected void failedToRunVm () { if ( ( org.ovirt.engine.core.bll.MigrateVmCommand . getVm () . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VMStatus.Up ) ) { super . failedToRunVm () ; } }
@ org.junit.Test public void nameNotUsed () { org.junit.Assert . assertThat ( validator . nameNotUsed () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
public boolean getStatus () { return this . status ; }
protected void onNicsChanged () { operationFactory = new org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkOperationFactory ( getNetworks () , getNics () ) ; validate () ; }
@ java.lang.Override public void initialize () { commonInitialize () ; }
@ org.junit.Test public void testGetAllNamesPinnedToHostReturnsVmNameForHostPinned ( ) throws java.lang.Exception { java.util.List < java.lang.String > namesPinnedToHost = dao . getAllNamesPinnedToHost ( org.ovirt.engine.core.dao.VmStaticDAOTest.VDS_STATIC_ID ) ; org.junit.Assert . assertFalse ( namesPinnedToHost . isEmpty () ) ; org.junit.Assert . assertTrue ( namesPinnedToHost . contains ( existingVmStatic . getName () ) ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < > ) ( source ) ) . isEmpty () ) ; } return false ; }
protected boolean verifyAddVM ( java.util.List < java.lang.String > reasons , int vmPriority ) { return org.ovirt.engine.core.bll.VmHandler . VerifyAddVm ( reasons , getVmInterfaces () . size () , vmPriority ) ; }
void updateHibernationMemory ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid memoryDumpDiskId , org.ovirt.engine.core.compat.Guid memoryMetadataDiskId ) ;
@ java.lang.Override @ org.junit.Test public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = org.ovirt.engine.api.restapi.resource.AbstractBackendNetworkAttachmentsResourceTest . setUpUriExpectations ( null ) ; setUpNetworkAttachmentsQueryExpectations ( null ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.VDS returnValue ) { context.hostFoundById = returnValue ; rollback3 () ; }
@ org.junit.Before public void initializeCommand () { org.ovirt.engine.core.common.action.IdParameters parameters = createParameters () ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.aaa.RemoveGroupCommand ( parameters ) ) ; }
private static java.util.List < org.ovirt.engine.core.aaa.DirectoryGroup > queryGroups ( org.ovirt.engine.core.extensions.mgr.ExtensionProxy extension , final org.ovirt.engine.api.extensions.ExtMap filter ) { return org.ovirt.engine.core.aaa.AuthzUtils . populateGroups ( extension , new org.ovirt.engine.api.extensions.ExtMap () . mput ( Authz.InvokeKeys.QUERY_ENTITY , Authz.QueryEntity.GROUP ) . mput ( Authz.InvokeKeys.QUERY_FILTER , filter ) ) ; }
@ java.lang.Override public void persistCommandAssociatedEntities ( java.util.Collection < org.ovirt.engine.core.common.businessentities.CommandAssociatedEntity > cmdAssociatedEntities ) { commandsRepository . persistCommandAssociatedEntities ( cmdAssociatedEntities ) ; }
@ java.lang.Override public final boolean getBoolValue ( java.lang.String name , java.lang.String defaultValue ) { return ( ( java.lang.Boolean ) ( getValue ( DataType.Bool , name , defaultValue ) ) ) . booleanValue () ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.LockProperties applyLockProperties ( org.ovirt.engine.core.common.action.LockProperties lockProperties ) { return lockProperties . withScope ( Scope.Execution ) . withWait ( true ) ; }
private void localize () {}
@ java.lang.Override protected java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () ; }
public abstract org.ovirt.engine.core.aaa.NegotiationResult negotiate ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) ;
public void setis_readonly ( boolean value ) { this . readOnly = value ; }
@ org.junit.Test public void lowerVersionMgmtNetworkSupportedFeatures () { storagePoolWithLowerVersion () ; addNonDefaultClusterToPool () ; addManagementNetworksToPool ( NUMBER_CONSTANT ) ; setupNetworkValidator ( true ) ; org.junit.Assert . assertTrue ( cmd . canDoAction () ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { addInterfaceToDb ( getInterface () ) ; addInterfaceDeviceToDb () ; getCompensationContext () . stateChanged () ; return null ; }
static com.google.gwt.event.shared.EventBus getEventBus () { return org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ; }
protected void cancel () { sourceModel . setWindow ( null ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addConsoleDevice ( org.ovirt.engine.core.compat.Guid vmId ) { return addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.CONSOLE , VmDeviceType.CONSOLE , getConsoleDeviceSpecParams () , true , false ) ; }
@ java.lang.Override public void onMainTabSelected () { super . onMainTabSelected () ; getModel () . getDiskViewType () . setEntity ( null ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VmInit get ( org.ovirt.engine.core.compat.Guid id ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.VmInitDaoImpl.VMInitRowMapper.instance , getIdParamterSource ( id ) ) ; }
@ java.lang.Override public void setElementId ( java.lang.String elementId ) { this . elementId = elementId ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter ( @ javax.validation.constraints.NotNull org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , org.ovirt.engine.core.common.scheduling.PerHostMessages messages ) { org.ovirt.engine.core.bll.scheduling.PolicyUnitImpl.log . error ( STRING_CONSTANT , getPolicyUnit () . getName () ) ; return hosts ; }
public static void getGlusterRebalanceStatus ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid clusterId , org.ovirt.engine.core.compat.Guid volumeId ) { aQuery . setHandleFailure ( true ) ; org.ovirt.engine.core.common.queries.gluster.GlusterVolumeQueriesParameters parameters = new org.ovirt.engine.core.common.queries.gluster.GlusterVolumeQueriesParameters ( clusterId , volumeId ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetGlusterVolumeRebalanceStatus , parameters , aQuery ) ; }
protected static boolean canAttachPrestartedVmToUser ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < java.lang.String > messages ) { return ( ! ( org.ovirt.engine.core.bll.VmPoolCommandBase . vmAssignedToUser ( vmId , messages ) ) ) && ( org.ovirt.engine.core.bll.VmPoolCommandBase . vmIsRunningStateless ( vmId ) ) ; }
@ java.lang.Override protected void HandleError () { addCanDoActionMessage ( VdcBllMessages.VDS_FENCE_OPERATION_FAILED ) ; addCanDoActionMessage ( VdcBllMessages.VAR__TYPE__HOST ) ; addCanDoActionMessage ( VdcBllMessages.VAR__ACTION__RESTART ) ; log . errorFormat ( STRING_CONSTANT , org.ovirt.engine.core.bll.RestartVdsCommand . getVdsName () ) ; }
protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpEntityQueryExpectations ( NUMBER_CONSTANT , failure ) ; }
public void setvNumaNodeList ( java.util.List < org.ovirt.engine.core.common.businessentities.VmNumaNode > vNumaNodeList ) { if ( vNumaNodeList != null ) { this . vNumaNodeList = vNumaNodeList ; } else { this . vNumaNodeList = new java.util.ArrayList <> () ; } }
public org.ovirt.engine.ui.common.widget.uicommon.popup.vm.PopupWidgetConfigMap getAlwaysHidden () { return filter ( ( config ) - > config . isAlwaysHidden () ) ; }
private void createCommandWithOlderVersion () { createCommand ( org.ovirt.engine.core.bll.UpdateClusterCommandTest . createClusterWithOlderVersion ( true , false ) ) ; }
protected org.ovirt.engine.core.compat.Guid getStoragePoolIdFromSourceImageContainer () { return org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () . getStoragePoolId () ; }
public void setvm_os ( org.ovirt.engine.core.common.businessentities.VmOsType value ) { this . mVmStatic . setos ( value ) ; }
@ org.junit.Test public void canDoActionFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.CommitRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( volumeWithRemoveBricksTaskNull , getBricks ( volumeWithRemoveBricksTaskNull ) ) ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
public void setName ( java.lang.String name ) { nameLabel . setText ( name ) ; }
public static < V > java.util.concurrent.ExecutorCompletionService < V > createCompletionService () { return new java.util.concurrent.ExecutorCompletionService < V > ( org.ovirt.engine.core.utils.threadpool.ThreadPoolUtil.es ) ; }
private void setAllContentHeaderExpectation () { java.util.List < java.lang.String > allContentHeaders = new java.util.ArrayList <> () ; allContentHeaders . add ( STRING_CONSTANT ) ; org.mockito.Mockito . when ( httpHeaders . getRequestHeader ( STRING_CONSTANT ) ) . thenReturn ( allContentHeaders ) ; }
public void setEntity ( org.ovirt.engine.core.common.businessentities.Network value ) { super . setEntity ( value ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.tags > getAllVmTagsWithIds ( java.lang.String ids ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , ids ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.TagDAODbFacadeImpl.TagRowMapper.instance , parameterSource ) ; }
public static java.util.UUID instantiate ( com.google.gwt.user.client.rpc.SerializationStreamReader streamReader ) throws com.google.gwt.user.client.rpc.SerializationException { long l = streamReader . readLong () ; long m = streamReader . readLong () ; return new java.util.UUID ( m , l ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network network ) { return network . getname () . equals ( getNetworkName () ) ; }
public boolean validateBrickCount () { return org.ovirt.engine.ui.uicommonweb.models.gluster.VolumeBrickModel . validateBrickCount ( ( ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeType ) ( getTypeList () . getSelectedItem () ) ) , getBricks () , getReplicaCountValue () , getStripeCountValue () , true ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.webadmin.section.main.view.tab.MainTabHostView view = ( ( org.ovirt.engine.ui.webadmin.section.main.view.tab.MainTabHostView ) ( target ) ) ; view.maxSpmPriority = ( ( java.lang.Integer ) ( returnValue ) ) ; InitSpmPriorities1 () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { context.dataCenterFoundByName = org.ovirt.engine.ui.uicommonweb.Linq . FirstOrDefault ( ( ( java.lang.Iterable < org.ovirt.engine.core.common.businessentities.storage_pool > ) ( returnValue ) ) ) ; prepare2 () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object ReturnValue ) { setItems ( ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( ReturnValue ) ) . getReturnValue () ) ) ) ; }
@ org.junit.Test public void removeNonExistentVariable () { dao . remove ( STRING_CONSTANT ) ; }
public void RemoveVds ( org.ovirt.engine.core.compat.Guid vdsId ) { RemoveVds ( vdsId , false ) ; }
@ java.lang.Override public java.lang.String getComment () { return comment ; }
java.lang.String sizeUnitString ( java.lang.String size , java.lang.String sizeUnit ) ;
public void createPool ( org.ovirt.engine.core.bll.network.macpool.MacPool macPool ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock lock = writeLockResource () ) { createPoolInternal ( macPool , false ) ; } }
@ org.junit.Before public void setUp () { org.mockito.Mockito . doReturn ( mockNetworkClusterDao ) . when ( underTest ) . getNetworkClusterDao () ; org.mockito.Mockito . doReturn ( mockNetworkDao ) . when ( underTest ) . getNetworkDao () ; }
private void logException ( java.lang.RuntimeException ex ) { log . errorFormat ( STRING_CONSTANT , this , org.apache.commons.lang.exception.ExceptionUtils . getMessage ( ex ) ) ; if ( log . isDebugEnabled () ) { log . debugFormat ( STRING_CONSTANT , ex ) ; } }
protected org.ovirt.engine.core.common.businessentities.network.Network createNetworkEntity () { return new org.ovirt.engine.core.common.businessentities.network.Network () ; }
public boolean isSingleSelectionOnly () { return true ; }
private org.ovirt.engine.api.model.Vm getFromExportDomain () { org.ovirt.engine.api.restapi.resource.VM entity = getEntity () ; return addLinks ( populate ( map ( entity , null ) , entity ) , null , new java.lang.String [ NUMBER_CONSTANT ] ) ; }
protected java.lang.String getProtocol () { return urlobj . getProtocol () ; }
@ java.lang.Override protected void executeCommand () { super . executeCommand () ; if ( getSucceeded () ) { vmSlaPolicyUtils . refreshRunningVmsWithStorageQos ( getQosId () , getQos () ) ; } }
public static void RunAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final org.ovirt.engine.core.common.action.VdcActionParametersBase parameters , final org.ovirt.engine.ui.uicompat.IFrontendActionAsyncCallback callback , final java.lang.Object state ) { org.ovirt.engine.ui.frontend.Frontend . runActionImpl ( actionType , parameters , ( callback != null ? callback : org.ovirt.engine.ui.frontend.Frontend.NULLABLE_ASYNC_CALLBACK ) , state , true ) ; }
private static double truncatePercentage ( double value ) { return java.lang.Math . min ( NUMBER_CONSTANT , value ) ; }
@ org.junit.Test public void testEmptyKeyVal () { java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtils . string2Map ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtilsTest.EMPTY_KEY_VAL ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , map . size () ) ; }
public void finalize ( ) throws java.lang.Exception { shutdown () ; }
@ java.lang.Override protected void beforeLogin ( org.ovirt.engine.ui.uicommonweb.models.LoginModel loginModel ) {}
@ org.junit.Test public void testGetFilteredWithPermissions () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () , org.ovirt.engine.core.dao.PRIVILEGED_USER_ID , true ) ; assertGetResult ( result ) ; }
@ java.lang.Override public void onFailed ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { endAction ( cmdId , false ) ; }
private void localize () { checkConnectivity . setLabel ( constants . checkConHostPopup () ) ; commitChanges . setLabel ( constants . saveNetConfigHostPopup () ) ; }
private boolean isExceedMaxBlockDiskSize () { if ( org.ovirt.engine.core.bll.AddDiskCommand . getStorageDomain () . getStorageType () . isBlockDomain () ) { return ( getRequestDiskSpace () ) > ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.MaxBlockDiskSize ) ) ; } return false ; }
@ org.junit.Test public void validate_vmNameExists_Test () { org.mockito.Mockito . doReturn ( new org.ovirt.engine.core.common.scheduling.AffinityGroup () ) . when ( affinityGroupDao ) . getByName ( org.mockito.Matchers . any () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_AFFINITY_GROUP_NAME_EXISTS ) ; }
private static java.lang.String getOvirtIsoPrefix () { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.OvirtIsoPrefix ) ; }
private void initStorageConnectionsPanel () { com.google.gwt.user.client.ui.VerticalPanel panel = new com.google.gwt.user.client.ui.VerticalPanel () ; connectionsTable = new org.ovirt.engine.ui.common.widget.editor.ListModelObjectCellTable ( true ) ; panel . add ( connectionsTable ) ; storageTargetsPanel . setWidget ( panel ) ; }
protected org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updateEntityPhase ( org.ovirt.engine.core.common.businessentities.storage.ImageTransferPhase phase ) { org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates = new org.ovirt.engine.core.common.businessentities.storage.ImageTransfer ( org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand . getCommandId () ) ; updates . setPhase ( phase ) ; return updateEntity ( updates ) ; }
private static java.lang.Double assignDoubleValueWithNullProtection ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStruct input , java.lang.String name ) { java.lang.Double doubleValue = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . AssignDoubleValue ( input , name ) ; return doubleValue == null ? java.lang.Double . valueOf ( NUMBER_CONSTANT ) : doubleValue ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Network > getNetworkList () { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Network > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Network > () ; list . add ( network ) ; return list ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel itemModel ) { java.lang.String osName = org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getOsName ( itemModel . getOsId () ) ; return osName ; }
private void logFailureMessage ( java.lang.String messagePrefix , java.lang.RuntimeException ex ) { org.ovirt.engine.core.vdsbroker.VdsUpdateRunTimeInfo.log . errorFormat ( STRING_CONSTANT , messagePrefix , org.apache.commons.lang.exception.ExceptionUtils . getMessage ( ex ) , _vds . getId () , _vds . getName () ) ; }
private boolean isAtLeastOneVmIsNotDown ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vmsDiskPluggedTo ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : vmsDiskPluggedTo ) { if ( ( vm . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.VMStatus.Down ) ) { return true ; } } return false ; }
private org.ovirt.engine.core.common.businessentities.network.NetworkCluster createManagementNetworkCluster () { return new org.ovirt.engine.core.common.businessentities.network.NetworkCluster ( org.ovirt.engine.core.bll.AddClusterCommand . getClusterId () , getManagementNetwork () . getId () , org.ovirt.engine.core.common.businessentities.network.NetworkStatus.OPERATIONAL , true , true , true , true , false , true ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.StoragePool dc ) { java.lang.String tooltipContent = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( dc . getStatus () ) ; return tooltipContent ; }
@ java.lang.Override protected java.lang.String getClusterName () { return getEntity () . getVdsGroupName () ; }
public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return this . id . getStoragePoolId () ; }
private void mockValidateCustomProperties () { org.mockito.Mockito . doReturn ( true ) . when ( command ) . validateCustomProperties ( org.mockito.ArgumentMatchers . any () ) ; }
@ org.junit.Test public void areAllVfsFreeFalseNoNic () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertFalse ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
protected void updateWipeAfterDeleteChangeability () { getIsWipeAfterDelete () . setIsChangeable ( ( ! ( isVmAttachedToPool () ) ) ) ; }
private void createUpVds () { org.mockito.Mockito . when ( vdsDao . getAllForStoragePoolAndStatus ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . eq ( VDSStatus.Up ) ) ) . thenReturn ( java.util.Collections . singletonList ( new org.ovirt.engine.core.common.businessentities.VDS () ) ) ; }
@ org.junit.Test public void canDoActionFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( null , getBricks ( volumeWithRemoveBricksTaskCompleted ) ) ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Permission get () { return performGet ( VdcQueryType.GetPermissionById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) , suggestedParentType ) ; }
protected org.ovirt.engine.core.common.businessentities.VDSGroup lookupClusterById ( java.lang.String id ) { return getEntity ( org.ovirt.engine.core.common.businessentities.VDSGroup . class , VdcQueryType.GetVdsGroupById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( org.ovirt.engine.core.compat.Guid . createGuidFromString ( id ) ) , id ) ; }
public boolean isStatusUp () { return org.ovirt.engine.core.common.businessentities.VM . isStatusUp ( getStatus () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.AddVmFromTemplateCommand < org.ovirt.engine.core.common.action.AddVmParameters > createCommand () { return new org.ovirt.engine.core.bll.AddVmFromTemplateCommand ( new org.ovirt.engine.core.common.action.AddVmParameters ( vm ) , null ) ; }
@ java.lang.Override public java.lang.String getIpv4Address () { return ( networkAttachmentModel . getIpv4Address () ) != null ? networkAttachmentModel . getIpv4Address () . getEntity () : null ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return ( java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . getmem_size_mb () ) ) + STRING_CONSTANT ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { cachedMaxPriority = ( ( java.lang.Integer ) ( returnValue ) ) ; updatePriority ( ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean isCliScheduleEnabled ) { snapshotModel . getDisableCliSchedule () . setEntity ( isCliScheduleEnabled ) ; snapshotModel . stopProgress () ; }
public void SetDefaultNames ( org.ovirt.engine.core.common.businessentities.VDS host ) { context.host = host ; setCommonName ( ( ( host . getName () . replace ( CHAR_CONS , CHAR_CONS ) ) + STRING_CONSTANT ) ) ; SetDefaultNames1 () ; }
@ java.lang.Override public java.lang.String getName () { return this . mVdsStatic . getName () ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.ArchitectureType getArchitectureFromItem ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { return template . getClusterArch () ; }
private void handleException ( java.lang.Exception e ) { if ( e instanceof java.lang.RuntimeException ) { throw ( ( java.lang.RuntimeException ) ( e ) ) ; } else { throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override public org.ovirt.engine.api.model.OpenstackVolumeAuthenticationKey update ( org.ovirt.engine.api.model.OpenstackVolumeAuthenticationKey resource ) { validateEnums ( org.ovirt.engine.api.model.OpenstackVolumeAuthenticationKey . class , resource ) ; return performUpdate ( resource , new org.ovirt.engine.api.restapi.resource.openstack.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetLibvirtSecretById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateLibvirtSecret , new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackVolumeAuthenticationKeyResource.UpdateParametersProvider () ) ; }
public static org.ovirt.engine.core.common.network.SwitchType getDefaultSwitchType ( org.ovirt.engine.core.compat.Version clusterCompatibilityVersion ) { return SwitchType.LEGACY ; }
private org.ovirt.engine.core.common.businessentities.StorageDomainStatic getStorageDomainStatic ( int idx ) { org.ovirt.engine.api.restapi.resource.StorageDomainStatic dom = new org.ovirt.engine.api.restapi.resource.StorageDomainStatic () ; dom . setId ( GUIDS [ idx ] ) ; return dom ; }
private void updateLUNConnectionsInfo ( org.ovirt.engine.core.common.businessentities.storage.LUNs lun ) { lun . setLunConnections ( new java.util.ArrayList ( org.ovirt.engine.core.bll.AbstractDiskVmCommand . getDbFacade () . getStorageServerConnectionDao () . getAllForLun ( lun . getLUN_id () ) ) ) ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) com.google.gwt.safehtml.shared.SafeHtml glusterCapcityProgressBar ( int progress , java.lang.String sizeString , java.lang.String color , java.lang.String toolTip , java.lang.String id ) ;
@ java.lang.Override public void onPowerringUp () { decreasePendingVm ( vmStaticDao . get ( org.ovirt.engine.core.bll.RunVmCommand . getVmId () ) ) ; }
private java.lang.String getOuterClassNames () { java.util.Set < java.lang.String > classNames = new java.util.LinkedHashSet <> () ; classNames . add ( org.ovirt.engine.ui.common.widget.tooltip.TooltipConfig.Defaults.TEMPLATE_CLASS_OUTER ) ; classNames . addAll ( extraTooltipClassNames ) ; return java.lang.String . join ( STRING_CONSTANT , classNames ) ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.datacenters.EditNetworkModel flush () { return driver . flush () ; }
private org.ovirt.engine.core.common.businessentities.storage_domains mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId , int availableSize , int usedSize ) { return mockStorageDomain ( storageId , availableSize , usedSize , StorageType.UNKNOWN , new org.ovirt.engine.core.compat.Version () ) ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.IPTABLES_OVERRIDE ) public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.IPTABLES_RULES , _iptables . split ( STRING_CONSTANT ) ) ; return true ; }
public static org.ovirt.engine.core.common.businessentities.network.NetworkAttachment newNetworkAttachment ( org.ovirt.engine.core.common.businessentities.network.Network network , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface baseNic , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface vlanDevice , java.util.Set < java.lang.String > networksToSync ) { return org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkOperation . newNetworkAttachment ( network , baseNic , vlanDevice , null , networksToSync , null , null ) ; }
@ org.junit.Test public void testConvertFieldEnumValueToActualValue () { org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , comp . convertFieldEnumValueToActualValue ( STRING_CONSTANT ) ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , comp . convertFieldEnumValueToActualValue ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public com.google.gwt.editor.ui.client.adapters.ValueBoxEditor < T > asEditor () { if ( ( editor ) == null ) { editor = new org.ovirt.engine.ui.common.widget.editor.generic.ObservableValueBoxEditor ( this ) ; } return editor ; }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml statusTemplate ( com.google.gwt.safehtml.shared.SafeHtml statusImage , java.lang.String id ) ;
@ java.lang.Override public boolean isMacInUse ( java.lang.String mac ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . readLock () ) ) { return macsStorage . isMacInUse ( org.ovirt.engine.core.utils.MacAddressRangeUtils . macToLong ( mac ) ) ; } }
public void setMaxVdsMemoryOverCommit ( int value ) { maxVdsMemoryOverCommit = value ; }
@ org.junit.Test public void testVmFailNoDisks () { org.ovirt.engine.core.bll.validator.RunVmValidatorTest . validateResult ( runVmValidator . validateBootSequence ( new org.ovirt.engine.core.common.businessentities.VM () , new java.util.ArrayList <> () , null ) , false , EngineMessage.VM_CANNOT_RUN_FROM_DISK_WITHOUT_DISK ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.VM object ) { if ( getDetailModel () . isDiskPluggedToVm ( object ) ) { return org.ovirt.engine.ui.webadmin.section.main.view.tab.disk.SubTabDiskVmView.constants . active () ; } return org.ovirt.engine.ui.webadmin.section.main.view.tab.disk.SubTabDiskVmView.constants . inactive () ; }
public void registerProfile ( org.ovirt.engine.core.aaa.AuthenticationProfile profile ) { profiles . put ( profile . getName () , profile ) ; }
public void setQuota ( org.ovirt.engine.ui.uicommonweb.models.ListModel quota ) { this . quota = quota ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsManagedNetwork ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertManaged ( iface , true , createNetwork ( iface . isBridged () , iface . getMtu () , iface . getVlanId () ) ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByName ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME , result . getname () ) ; }
@ java.lang.Override protected boolean validate () { return ( validate ( networkClusterAttachmentExists () ) ) && ( validateAttachment () ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getId () { return id ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue ) { model . getIsVirtioScsiEnabled () . setEntity ( returnValue ) ; callAfterUpdates () ; }
public void stopRefresh () { getTimer () . stop () ; }
public static org.ovirt.engine.core.compat.Guid createGuidFromString ( java.lang.String candidate ) { if ( candidate == null ) { return null ; } return new org.ovirt.engine.core.compat.Guid ( candidate ) ; }
protected org.ovirt.engine.core.common.businessentities.storage.Disk getDisk () { if ( ( diskToScan ) == null ) { diskToScan = org.ovirt.engine.core.bll.GetDiskAlignmentCommand . getDiskDao () . get ( ( ( org.ovirt.engine.core.compat.Guid ) ( org.ovirt.engine.core.bll.GetDiskAlignmentCommand . getParameters () . getDiskId () ) ) ) ; } return diskToScan ; }
protected void updateActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId ) { org.ovirt.engine.core.bll.ImportVmCommand . getSnapshotDao () . update ( new org.ovirt.engine.core.common.businessentities.Snapshot ( snapshotId , org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotStatus.OK , org.ovirt.engine.core.bll.ImportVmCommand . getVm () . getId () , null , org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType.ACTIVE , STRING_CONSTANT , new java.util.Date () , null ) ) ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.IPTABLES_OVERRIDE ) public java.lang.Object call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.IPTABLES_ENABLE , true ) ; return null ; }
public org.ovirt.engine.core.dao.StorageDomainDAO getStorageDomainDAO () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainDao () ; }
public void setVdsGroupCompatibilityVersion ( org.ovirt.engine.core.compat.Version value ) { this . vdsGroupCompatibilityVersion = value ; }
protected org.ovirt.engine.core.common.businessentities.storage.DiskImage getRepresentativeImage () { if ( ! ( getImages () . isEmpty () ) ) { return getImages () . get ( NUMBER_CONSTANT ) ; } return null ; }
private org.ovirt.engine.core.vdsbroker.VmsMonitoring getVmsMonitoring ( org.ovirt.engine.core.vdsbroker.VmsListFetcher fetcher , long fetchTime ) { return new org.ovirt.engine.core.vdsbroker.VmsMonitoring ( vdsManager , fetcher . getChangedVms () , auditLogDirector , fetchTime , isTimeToRefreshStatistics () ) ; }
private java.lang.String buildId ( int index ) { return new org.ovirt.engine.core.compat.Guid ( ( STRING_CONSTANT + index ) ) . toString () ; }
private java.lang.String getProxyUri () { java.lang.String scheme = ( org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.ImageProxySSLEnabled ) ) ? org.ovirt.engine.core.bll.storage.disk.image.TransferImageCommand.HTTPS_SCHEME : org.ovirt.engine.core.bll.storage.disk.image.TransferImageCommand.HTTP_SCHEME ; java.lang.String address = org.ovirt.engine.core.common.config.Config . getValue ( ConfigValues.ImageProxyAddress ) ; return scheme + address ; }
public void setis_initialized ( boolean value ) { this . mVmStatic . setis_initialized ( value ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final boolean isRunOnlyIfAllCanDoPass , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final java.lang.Object state ) { runMultipleAction ( actionType , parameters , isRunOnlyIfAllCanDoPass , callback , state , true , false ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > getClusters () { java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > list = new java.util.ArrayList <> () ; list . add ( createCluster ( Version.v3_6 , org.ovirt.engine.core.bll.gluster.StorageDeviceSyncJobTest.CLUSTER_GUID_3_6 ) ) ; return list ; }
protected void getHostListByCluster ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getHostListByCluster ( query , cluster . getName () ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyDisabledGotDisabledNativePolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.DISABLED ) , UsbPolicy.DISABLED ) ; }
public static java.util.List < org.ovirt.engine.ui.uicommonweb.models.ConsoleProtocol > getProtocolsByPriority () { java.util.List < org.ovirt.engine.ui.uicommonweb.models.ConsoleProtocol > consoleProtocols = new java.util.ArrayList ( java.util.Arrays . asList ( org.ovirt.engine.ui.uicommonweb.models.ConsoleProtocol . values () ) ) ; java.util.Collections . sort ( consoleProtocols , new org.ovirt.engine.ui.uicommonweb.models.ConsoleProtocol.PriorityComparator () ) ; return consoleProtocols ; }
@ com.google.gwt.uibinder.client.UiHandler ( value = STRING_CONSTANT ) void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { controller . setColumnVisible ( column , checkBox . getValue () ) ; }
org.ovirt.engine.ui.webadmin.widget.host.BondPanel createBondPanel ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostInterfaceLineModel lineModel , org.ovirt.engine.core.common.businessentities.VDS vds ) { org.ovirt.engine.ui.webadmin.widget.host.BondPanel panel = new org.ovirt.engine.ui.webadmin.widget.host.BondPanel ( lineModel , vds ) ; panel . setWidth ( STRING_CONSTANT ) ; panel . setHeight ( STRING_CONSTANT ) ; return panel ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.common.businessentities.storage.StorageServerConnectionExtension newConnExt = org.ovirt.engine.core.bll.storage.connection.AddStorageServerConnectionExtensionCommand . getParameters () . getStorageServerConnectionExtension () ; return validate ( org.ovirt.engine.core.bll.storage.connection.AddStorageServerConnectionExtensionCommand . getConnectionExtensionValidator () . isConnectionDoesNotExistForHostAndTarget ( newConnExt ) ) ; }
void vdsNonOperational ( org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.businessentities.NonOperationalReason type , boolean logCommand , org.ovirt.engine.core.compat.Guid domainId ) ;
@ org.junit.Test public void checkRemoveNotExistingConnection () { parameters . setStorageServerConnection ( NFSConnection ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_CONNECTION_NOT_EXIST ) ; }
private org.ovirt.engine.core.common.businessentities.Cluster getCluster ( boolean glusterEnabled ) { org.ovirt.engine.core.common.businessentities.Cluster cluster = new org.ovirt.engine.core.common.businessentities.Cluster () ; cluster . setId ( clusterId ) ; cluster . setVirtService ( false ) ; cluster . setGlusterService ( glusterEnabled ) ; return cluster ; }
@ org.junit.Test public void testEmptyStringIsValid () { doTest ( STRING_CONSTANT , false ) ; }
public org.ovirt.engine.core.bll.network.macpool.MacPool createMacPool ( org.ovirt.engine.core.bll.network.macpool.MacPool macPool ) { return new org.ovirt.engine.core.bll.network.macpool.MacPoolUsingRanges ( org.ovirt.engine.core.utils.MacAddressRangeUtils . macPoolToRanges ( macPool ) , macPool . isAllowDuplicateMacAddresses () ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsNetworkIsSync ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertSync ( iface , true , iface . getNetworkName () , iface . isBridged () , iface . getMtu () , iface . getVlanId () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.network.NetworkStatus getRawValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . getCluster () . getStatus () ; }
private void stopProgress ( java.lang.Object target ) { if ( target instanceof org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalListModel ) { org.ovirt.engine.ui.uicommonweb.models.Model window = ( ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalListModel ) ( target ) ) . getWindow () ; if ( window != null ) { window . stopProgress () ; } } }
public void setAutoNumaBalancing ( org.ovirt.engine.core.common.businessentities.AutoNumaBalanceStatus autoNumaBalancing ) { this . autoNumaBalancing = autoNumaBalancing ; }
public void setConsoleCurrentUserName ( java.lang.String consoleCurUserName ) { this . consoleCurUserName = consoleCurUserName ; }
void bindInfrastructure () { bindCommonInfrastructure ( org.ovirt.engine.ui.webadmin.place.WebAdminPlaceManager . class ) ; bind ( org.ovirt.engine.ui.webadmin.system.InternalConfiguration . class ) . asEagerSingleton () ; bind ( org.ovirt.engine.ui.webadmin.system.PostMessageDispatcher . class ) . asEagerSingleton () ; }
@ java.lang.Override protected void onAdd ( org.ovirt.engine.ui.uicommonweb.models.vms.VnicInstanceType value , org.ovirt.engine.ui.common.widget.profile.ProfileInstanceTypeEditor widget ) { super . onAdd ( value , widget ) ; ++ ( realEntryCount ) ; updateHeaderLabel () ; }
public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return getStoragePoolIsoMapData () . getStoragePoolId () ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ java.lang.Override protected void executeVmCommand () { if ( GetRunningOnVds () ) { Perform () ; return; } setActionReturnValue ( ( ( org.ovirt.engine.core.bll.VmOperationCommandBase . getVm () ) != null ? org.ovirt.engine.core.bll.VmOperationCommandBase . getVm () . getStatus () : org.ovirt.engine.core.common.businessentities.VMStatus.Down ) ) ; }
private void mockConfigSizeRequirements ( int requiredSpaceBufferInGB ) { mcr . mockConfigValue ( ConfigValues.FreeSpaceCriticalLowInGB , requiredSpaceBufferInGB ) ; }
private org.ovirt.engine.core.compat.Guid getQuotaId () { return org.ovirt.engine.core.bll.AddVmCommand . getParameters () . getVmStaticData () . getQuotaId () ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.RolesCommandBase < org.ovirt.engine.core.common.action.RolesParameterBase > generateCommand () { return new org.ovirt.engine.core.bll.RolesCommandBase < org.ovirt.engine.core.common.action.RolesParameterBase > ( getParams () , null ) { @ java.lang.Override protected void executeCommand () {} } ; }
@ java.lang.Override public void setMainTabSelectedItem ( org.ovirt.engine.core.common.businessentities.VDS selectedItem ) { hostInterfaceForm = new org.ovirt.engine.ui.webadmin.widget.host.HostInterfaceForm ( getDetailModel () ) ; contentPanel . remove ( ( ( contentPanel . getWidgetCount () ) - NUMBER_CONSTANT ) ) ; contentPanel . add ( hostInterfaceForm ) ; }
private void setupNetworkDao () { org.mockito.Mockito . when ( networkDaoMocked . get ( networkId ) ) . thenReturn ( networkMocked ) ; }
private void initTree () { tree = new org.ovirt.engine.ui.webadmin.widget.editor.EntityModelCellTree ( org.ovirt.engine.ui.webadmin.section.main.view.popup.user.ManageEventsPopupView.res ) ; }
private org.ovirt.engine.core.common.config.IConfigUtilsInterface initConfigUtils () { validator = org.ovirt.engine.core.common.utils.ValidationUtils . getValidator () ; org.ovirt.engine.core.common.config.IConfigUtilsInterface configUtils = org.mockito.Mockito . mock ( org.ovirt.engine.core.common.config.IConfigUtilsInterface . class ) ; org.mockito.Mockito . when ( configUtils . getValue ( ConfigValues.vdsTimeout , ConfigCommon.defaultConfigurationVersion ) ) . thenReturn ( org.ovirt.engine.core.common.utils.ConfiguredRangeValidatorTest.TEST_MAX_RANGE ) ; return configUtils ; }
protected org.ovirt.engine.core.common.asynctasks.AsyncTaskType getTaskType () { throw new java.lang.UnsupportedOperationException () ; }
public org.ovirt.engine.core.bll.CommandMultiAsyncTasks GetCommandMultiAsyncTasks () { org.ovirt.engine.core.bll.CommandMultiAsyncTasks entityInfo = null ; synchronized ( org.ovirt.engine.core.bll.tasks.CommandAsyncTask._lockObject ) { entityInfo = org.ovirt.engine.core.bll.tasks.CommandAsyncTask._multiTasksByCommandIds . get ( getCommandId () ) ; } return entityInfo ; }
void initListBoxEditors () { vncKeyboardLayoutEditor = new org.ovirt.engine.ui.common.widget.editor.ListModelListBoxEditor ( new org.ovirt.engine.ui.common.widget.editor.VncKeyMapRenderer () ) ; }
@ org.junit.Test public void testIsConnectionDoesNotExistForHostAndTargetSucceeds () { org.junit.Assert . assertTrue ( validator . isConnectionDoesNotExistForHostAndTarget ( conn ) . isValid () ) ; }
@ java.lang.Override public void init ( final org.ovirt.engine.ui.uicommonweb.models.hosts.HostModel model ) { super . init ( model ) ; addUpdateHostsListener ( model ) ; addPowerManagementListener ( model ) ; addHostProviderListener ( model ) ; addRadioButtonsListeners ( model ) ; }
@ java.lang.Override public void cleanup () { if ( ( getCommand () ) != null ) { getCommand () . getPropertyChangedEvent () . removeListener ( listener ) ; } }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageDomainStatus getRawValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getStatus () ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testIllegalRpmSplitNoDashes () { org.ovirt.engine.core.common.utils.RpmVersionUtils . splitRpmToParts ( STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.Object runInTransaction () { org.ovirt.engine.core.common.businessentities.StoragePool pool = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStoragePoolDao () . get ( storagePool . getId () ) ; pool . setspm_vds_id ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStoragePoolDao () . update ( pool ) ; return null ; }
public org.w3c.dom.NodeList getChildNodes () { return node . getChildNodes () ; }
@ org.junit.Test public void testNetworkAttachmentIsSetWhenAttachmentIsNull () { org.ovirt.engine.core.common.errors.EngineMessage engineMessage = org.ovirt.engine.core.common.errors.EngineMessage.NETWORK_ATTACHMENT_NOT_EXISTS ; org.junit.Assert . assertThat ( createNetworkAttachmentValidator ( null ) . networkAttachmentIsSet () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( engineMessage , org.ovirt.engine.core.utils.ReplacementUtils . getVariableAssignmentString ( engineMessage , null ) ) ) ; }
public void setStatus ( org.ovirt.engine.core.common.businessentities.network.InterfaceStatus value ) { status = value ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { disk . getIsInternal () . setEntity ( true ) ; revealDiskPanel ( disk ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsNetworkIsSyncWithMtuUnset ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertSync ( iface , true , iface . getNetworkName () , iface . isBridged () , NUMBER_CONSTANT , iface . getVlanId () ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Disk doPopulate ( org.ovirt.engine.api.model.Disk model , org.ovirt.engine.api.model.Disk entity ) { return collection . doPopulate ( model , entity ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyDisabledGotNullUsb () { org.ovirt.engine.api.model.Usb usb = null ; org.ovirt.engine.core.common.businessentities.UsbPolicy currentPolicy = org.ovirt.engine.core.common.businessentities.UsbPolicy.DISABLED ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , currentPolicy ) , currentPolicy ) ; }
java.lang.String getCustomDeviceProperties ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.CustomDeviceProperties , version . getValue () ) ; }
@ org.junit.Test public void validateFailsOnNonExistingEvent () { command . getParameters () . setAuditLogId ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_1 ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.AUDIT_LOG_CANNOT_REMOVE_AUDIT_LOG_NOT_EXIST ) ; }
public java.lang.String translateErrorTextSingle ( java.lang.String errorMsg ) { return translateErrorTextSingle ( errorMsg , true ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup () { return super . getVdsGroup () ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hashCode ( nicId ) ; }
public org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter getFieldValueAutoCompleter ( java.lang.String obj , java.lang.String fieldName ) { final org.ovirt.engine.core.searchbackend.IConditionFieldAutoCompleter curConditionFieldAC = getFieldAutoCompleter ( obj ) ; if ( curConditionFieldAC != null ) { return curConditionFieldAC . getFieldValueAutoCompleter ( fieldName ) ; } return null ; }
@ java.lang.Override protected boolean validateDiscardAfterDeleteLegal ( org.ovirt.engine.core.bll.validator.storage.StorageDomainValidator storageDomainValidator ) { if ( org.ovirt.engine.core.bll.storage.domain.AddStorageDomainCommon . getStorageDomain () . getDiscardAfterDelete () ) { return failValidation ( EngineMessage.ACTION_TYPE_FAILED_DISCARD_AFTER_DELETE_SUPPORTED_ONLY_BY_BLOCK_DOMAINS ) ; } return true ; }
public boolean validate () { getEmail () . validateEntity ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.NotEmptyValidation () , new org.ovirt.engine.ui.uicommonweb.validation.EmailValidation () } ) ; return getEmail () . getIsValid () ; }
protected org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId ) { return snapshotsManager . addActiveSnapshot ( snapshotId , org.ovirt.engine.core.bll.ImportVmCommand . getVm () , getMemoryVolumeForNewActiveSnapshot () , org.ovirt.engine.core.bll.ImportVmCommand . getCompensationContext () ) ; }
@ java.lang.Override public java.lang.String getText ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . getName () ; }
@ java.lang.Override public org.ovirt.engine.api.model.Groups list () { return mapDbGroupsCollection ( getGroupsCollection ( SearchType.DBUser , getSearchPattern () ) ) ; }
private org.ovirt.engine.core.common.businessentities.LocationInfo buildImageLocationInfo ( org.ovirt.engine.core.compat.Guid domId , org.ovirt.engine.core.compat.Guid imageGroupId , org.ovirt.engine.core.compat.Guid imageId ) { return new org.ovirt.engine.core.common.businessentities.VdsmImageLocationInfo ( domId , imageGroupId , imageId , null ) ; }
public void setStaticData ( final org.ovirt.engine.core.common.businessentities.VmStatic value ) { vmStatic = ( value == null ) ? new org.ovirt.engine.core.common.businessentities.VmStatic () : value ; }
protected java.util.List < org.ovirt.engine.api.model.Network > getEntityList () { return getEntities ( false , false , false , false ) ; }
void revealActiveMainModelPresenter () { org.ovirt.engine.ui.common.uicommon.model.MainModelSelectionChangeEvent . fire ( this , org.ovirt.engine.ui.common.uicommon.model.CommonModelManager . instance () . getSelectedItem () ) ; }
@ java.lang.Override protected void init () { parent . setBackend ( backend ) ; parent . setMappingLocator ( mapperLocator ) ; parent . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
public void parse ( java.lang.String [] args ) { validateNonEmpty ( args ) ; parseAction ( args ) ; parseArguments ( args ) ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( commandId , phase , type , lastUpdated , message , vdsId , diskId , imagedTicketId , proxyUri , signedTicket , bytesSent , bytesTotal ) ; }
public boolean isManagemet () { return org.ovirt.engine.core.compat.StringHelper . stringsEqual ( getNetwork () . getName () , org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkModel.ENGINE_NETWORK ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeSnapshotEntity getByName ( org.ovirt.engine.core.compat.Guid volumeId , java.lang.String snapshotName ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterVolumeSnapshotDaoImpl.snapshotRowMapper , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , volumeId ) . addValue ( STRING_CONSTANT , snapshotName ) ) ; }
private void assertLunIdInList ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > luns , java.lang.String requestedLunId ) { org.junit.Assert . assertEquals ( luns . stream () . map ( LUNs : : getLUNId ) . findAny () . orElse ( null ) , requestedLunId ) ; }
@ org.junit.Test public void getFreeVfNoFreeVf () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertNull ( hostNicVfsConfigHelper . getFreeVf ( nic ) ) ; }
private void pauseUpload () { if ( ( getWindow () ) != null ) { return; } org.ovirt.engine.ui.uicommonweb.models.storage.UploadImageModel . pauseUploads ( getSelectedItems () ) ; }
@ org.junit.Test public void testExecuteQueryUserConfigFiltered () { assertQueryExecution ( ConfigValues.PredefinedVMProperties , true ) ; }
protected void addCanDoActionMessage ( org.ovirt.engine.core.common.errors.EngineMessage message ) { super . addCanDoActionMessage ( message ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.VmTemplateStatus getRawValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VmTemplate > object ) { return object . getSecond () . getStatus () ; }
protected boolean isMemoryStateRemovable ( java.lang.String memoryVolume ) { return ! ( memoryVolume . isEmpty () ) ; }
@ java.lang.Override protected void AsyncSearch () { super . AsyncSearch () ; setAsyncResult ( org.ovirt.engine.ui.frontend.Frontend . RegisterQuery ( VdcQueryType.GetTemplateInterfacesByTemplateId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntityStronglyTyped () . getId () ) ) ) ; setItems ( getAsyncResult () . getData () ) ; }
public static org.ovirt.engine.core.compat.Guid generateDeviceId ( org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface vmGuestAgentInterface ) { return org.ovirt.engine.api.restapi.utils.GuidUtils . asGuid ( ( ( vmGuestAgentInterface . getInterfaceName () ) + ( vmGuestAgentInterface . getMacAddress () ) ) . getBytes () ) ; }
@ org.junit.Test public void canRunVmPassStatelessWhenVmHAandStatelessFalse () { canRunStatelessVmTest ( true , true , java.lang.Boolean.FALSE , true ) ; }
private void handlePaused ( final org.ovirt.engine.core.bll.storage.disk.image.TransferImageCommand < T > . StateContext context ) { periodicPauseLog ( context.entity , context.iterationTimestamp ) ; }
@ java.lang.Override public void onFailed ( org.ovirt.engine.core.compat.Guid cmdId , java.util.List < org.ovirt.engine.core.compat.Guid > childCmdIds ) { org.ovirt.engine.core.bll.CommandBase < > commandBase = getCommand ( cmdId ) ; commandBase . getParameters () . setTaskGroupSuccess ( false ) ; endAction ( commandBase , false ) ; }
private org.ovirt.engine.core.common.action.VdcReturnValueBase getErrorCommandReturnValue ( org.ovirt.engine.core.common.errors.EngineMessage message ) { org.ovirt.engine.core.common.action.VdcReturnValueBase returnValue = new org.ovirt.engine.core.common.action.VdcReturnValueBase () ; returnValue . setCanDoAction ( false ) ; returnValue . getCanDoActionMessages () . add ( message . toString () ) ; return returnValue ; }
@ org.junit.Test public void storagePoolDefault () { final org.ovirt.engine.core.common.businessentities.StoragePool p = b . getStoragePool () ; org.junit.Assert . assertNull ( p ) ; }
protected boolean checkImageConfiguration () { return org.ovirt.engine.core.bll.ImagesHandler . checkImageConfiguration ( org.ovirt.engine.core.bll.AddDiskCommand . getStorageDomain () . getStorageStaticData () , getDiskImageInfo () , org.ovirt.engine.core.bll.AddDiskCommand . getReturnValue () . getCanDoActionMessages () ) ; }
@ java.lang.Override protected boolean canEdit ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData model ) { return model . getClone () . getIsChangable () ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue value ) { setDiskProfilesList ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.profiles.DiskProfile > ) ( value . getReturnValue () ) ) ) ; }
private org.ovirt.engine.core.dao.network.InterfaceDao getInterfaceDao () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getInterfaceDao () ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue ) { management = returnValue ; }
@ java.lang.Override public java.lang.Void runInTransaction () { hostDeviceDao . saveAllInBatch ( newDevices ) ; hostDeviceDao . updateAllInBatch ( changedDevices ) ; hostDeviceDao . removeAllInBatch ( removedDevices ) ; handleHostNicVfsConfigUpdate () ; vmDeviceDao . removeAllInBatch ( removedVmDevices ) ; return null ; }
@ org.junit.Test public void snapshotNameEmpty () { final java.lang.String e = STRING_CONSTANT ; b . setSnapshotName ( e ) ; final java.lang.String s = b . getSnapshotName () ; org.junit.Assert . assertEquals ( e , s ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Role > getAllForUserAndGroups ( org.ovirt.engine.core.compat.Guid id , java.lang.String groupIds ) { java.lang.Integer appMode = org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.ApplicationMode ) ; return getAllForUserAndGroups ( id , groupIds , appMode . intValue () ) ; }
@ java.lang.Override protected void executeCommand () { org.ovirt.engine.core.bll.provider.ProviderProxy proxy = org.ovirt.engine.core.bll.provider.ProviderProxyFactory . getInstance () . create ( org.ovirt.engine.core.bll.provider.TestProviderConnectivityCommand . getParameters () . getProvider () ) ; proxy . testConnection () ; org.ovirt.engine.core.bll.provider.TestProviderConnectivityCommand . setSucceeded ( true ) ; }
@ org.junit.Test public void getVmTemplateWithId () { b . setVmTemplate ( null ) ; b . setVmTemplateId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.common.businessentities.VmTemplate t = b . getVmTemplate () ; org.junit.Assert . assertNotNull ( t ) ; }
private org.ovirt.engine.core.common.businessentities.VdsNetworkInterface createNic ( java.lang.String nicName , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . NewGuid () , nicName , false , null , null , networkName , true ) ; }
@ org.junit.Before public void setUpBase () { org.mockito.MockitoAnnotations . initMocks ( this ) ; org.ovirt.engine.core.bll.BaseCommandTest.injectorRule . bind ( javax.transaction.TransactionManager . class , transactionManager ) ; }
private void totalCPUCores_EntityChanged ( java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { removeCPUListeners () ; behavior . totalCpuCoresChanged () ; addCPUListeners () ; }
@ java.lang.Override protected void HandleError () { log . errorFormat ( STRING_CONSTANT , org.ovirt.engine.core.bll.StartVdsCommand . getVdsName () ) ; }
protected void updateEntity ( org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates ) { updateEntity ( updates , false ) ; }
private boolean validateDestStorage ( org.ovirt.engine.core.compat.Guid imageId , org.ovirt.engine.core.compat.Guid destDomainId ) { org.ovirt.engine.core.bll.validator.StorageDomainValidator validator = getValidator ( imageId , destDomainId ) ; return ( validateSourceStorageDomain ( imageId , destDomainId ) ) && ( validate ( validator . domainIsValidDestination () ) ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsEmptyNetworkName ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; iface . setNetworkName ( STRING_CONSTANT ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , org.ovirt.engine.core.utils.NetworkUtils . calculateNetworkImplementationDetails ( null , null , iface ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VM getVm () { if ( getParameters () . isImportAsNewEntity () ) { return getParameters () . getVm () ; } return super . getVm () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getstorage_domain_type () ) == type ; }
@ java.lang.Override public void onSuccess ( java.lang.Object result ) { setGuestAgentData ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > ) ( result ) ) ) ; org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceListModel . super . syncSearch ( VdcQueryType.GetVmInterfacesByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.network.HostNetworkQos > getParameters () { org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.network.HostNetworkQos > parameters = new org.ovirt.engine.core.common.action.QosParametersBase () ; parameters . setQos ( getQos () ) ; return parameters ; }
@ java.lang.Override public org.ovirt.engine.api.resource.StatisticsResource getStatisticsResource () { org.ovirt.engine.api.restapi.resource.StepStatisticalQuery query = new org.ovirt.engine.api.restapi.resource.StepStatisticalQuery ( new org.ovirt.engine.api.restapi.resource.BackendStepResource.TaskQueryResolver < org.ovirt.engine.core.compat.Guid > () , newModel ( id ) ) ; return inject ( new org.ovirt.engine.api.restapi.resource.BackendStatisticsResource ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeTaskStatusEntity . class , guid , query ) ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.network.NetworkView > searchNetworks () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getNetworkViewDao () , true ) ; }
@ java.lang.Override public void render ( org.ovirt.engine.ui.common.widget.table.cell.Context context , java.lang.String value , com.google.gwt.safehtml.shared.SafeHtmlBuilder sb , java.lang.String id ) { delegate . render ( context , value , sb ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback ) { runMultipleAction ( actionType , parameters , callback , null ) ; }
@ java.lang.Override public void Search () { if ( ( getEntity () ) != null ) { setSearchString ( ( STRING_CONSTANT + ( getEntity () . getName () ) ) ) ; super . Search () ; } }
public static org.ovirt.engine.core.utils.EngineLocalConfig getInstance () { return org.ovirt.engine.core.utils.EngineLocalConfig . getInstance ( null ) ; }
@ org.junit.Test public void vnicProfileExist ( ) throws java.lang.Exception { vnicProfileValidationTest ( org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () , true , true ) ; }
protected < T > java.util.Set < org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor < T > > getExtraConfigDescriptors () { return java.util.Collections . emptySet () ; }
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { return runMultipleActionsImpl ( actionType , parameters , true , false ) ; }
protected org.ovirt.engine.core.common.queries.VdcQueryReturnValue runInternalQuery ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) { return getBackend () . runInternalQuery ( actionType , parameters , getEngineContext () ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { logAndFailTaskOfCommandWithEmptyVdsmId ( task , STRING_CONSTANT ) ; return null ; }
@ org.junit.Test public void testSubResourceLocatorBadGuid ( ) throws java.lang.Exception { try { resource . getApplicationResource ( STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
public void onUserLogin () { setLoggedIn ( true ) ; fireLoginChangeEvent () ; }
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.storage.DiskInterface > getDiskInterfaceList () { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.storage.DiskInterface > diskInterfaces = new java.util.ArrayList ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.storage.DiskInterface [] { org.ovirt.engine.core.common.businessentities.storage.DiskInterface.IDE , org.ovirt.engine.core.common.businessentities.storage.DiskInterface.VirtIO , org.ovirt.engine.core.common.businessentities.storage.DiskInterface.VirtIO_SCSI , org.ovirt.engine.core.common.businessentities.storage.DiskInterface.SPAPR_VSCSI } ) ) ; return diskInterfaces ; }
private void initTableOverhead () { userTypes = new org.ovirt.engine.ui.common.widget.uicommon.users.UsersTypeRadioGroup () ; userTypes . addChangeHandler ( this ) ; getTable () . setTableOverhead ( userTypes ) ; }
@ java.lang.Override protected boolean canDoAction () { return ( checkRemoveEditValidations () ) && ( checkAddEditValidations () ) ; }
public org.ovirt.engine.sdk.entities.Boot getBoot () { return boot ; }
protected void clean () { headerBuffer = java.nio.ByteBuffer . allocate ( org.ovirt.vdsm.jsonrpc.client.reactors.stomp.BUFFER_SIZE ) ; this . ibuff = null ; this . message = null ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyLegacyGotEnabledNotSetLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_LEGACY ) , UsbPolicy.ENABLED_LEGACY ) ; }
protected boolean isEnabled ( T value ) { org.ovirt.engine.ui.uicommonweb.UICommand command = resolveCommand ( value ) ; return command != null ? command . getIsExecutionAllowed () : true ; }
public void setEditPolicyCommand ( org.ovirt.engine.ui.uicommonweb.UICommand value ) { privateEditPolicyCommand = value ; }
private void mockDbFacades () { mockVdsGroupDao () ; mockVmDao () ; mockAuditLogDao () ; mockVdsDao () ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > getByClusterId ( org.ovirt.engine.core.compat.Guid clusterId ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoImpl.glusterHookRowMapper , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , clusterId ) ) ; }
@ org.junit.Test public void testGetAll () { java.util.List < org.ovirt.engine.core.common.scheduling.PolicyUnit > result = dao . getAll () ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.PolicyUnitDaoTest.NUMBER_OF_POLICY_UNITS , result . size () ) ; }
@ java.lang.Override public void saveAllInBatch ( java.util.Collection < T > entities ) { if ( entities . isEmpty () ) { return; } org.ovirt.engine.core.dao.MassOperationsGenericDao . getCallsHandler () . executeStoredProcAsBatch ( org.ovirt.engine.core.dao.MassOperationsGenericDao . getProcedureNameForSave () , entities , getBatchMapper () ) ; }
@ org.junit.Test public void clusterAlreadyInLocalFs () { prepareManagementNetworkMocks () ; createCommandWithDefaultCluster () ; oldGroupIsDetachedDefault () ; storagePoolIsLocalFS () ; setupCpu () ; storagePoolAlreadyHasCluster () ; architectureIsUpdatable () ; validateFailedWithReason ( EngineMessage.CLUSTER_CANNOT_ADD_MORE_THEN_ONE_HOST_TO_LOCAL_STORAGE ) ; }
public void setSupportedClusterLevels ( java.lang.String value ) { supportedClusterLevels = value ; }
@ org.junit.Test public void discardFieldsAreParsed () { testDiscardFieldsParsing ( Version.v4_1 , NUMBER_CONSTANT , false ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid extractStoragePoolIdNullSafe ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getStoragePoolId () . getValue () ; }
@ java.lang.Override public void updateAll ( java.lang.String procedureName , java.util.Collection < T > entities ) { if ( procedureName == null ) { procedureName = org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . getProcedureNameForUpdate () ; } for ( T entity : entities ) { org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . update ( entity , procedureName ) ; } }
protected boolean shouldDestroyOnClose () { return true ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.pm.FenceAgent > getFenceAgents () { return getBackendCollection ( QueryType.GetFenceAgentsByVdsId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( hostId ) ) ; }
@ java.lang.Override protected boolean runConnectionStorageToDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId , int type ) { return runConnectionStorageToDomain ( storageDomain , vdsId , type , null , Guid.Empty ) ; }
protected org.ovirt.engine.core.bll.interfaces.BackendInternal getBackend () { return org.ovirt.engine.core.bll.Backend . getInstance () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.Network object ) { return object . getis_display () ? constants . displayNetwork () : constants . empty () ; }
protected boolean hasWatchdog () { return ( org.ovirt.engine.core.bll.UpdateVmCommand . getParameters () . getWatchdog () ) != null ; }
@ java.lang.Override public void setParser ( org.ovirt.engine.core.config.EngineConfigCLIParser parser ) { this . pwdValueHelper . setParser ( parser ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > getAll () { return runHostListMethod ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.ALL_HOSTS_QUERY ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SimpleActionPanel < org.ovirt.engine.core.common.businessentities.Bookmark > createActionPanel ( org.ovirt.engine.ui.webadmin.uicommon.model.BookmarkModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SimpleActionPanel < org.ovirt.engine.core.common.businessentities.Bookmark > ( modelProvider , modelProvider . getSelectionModel () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
@ java.lang.Override public org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter getFieldValueAutoCompleter ( java.lang.String fieldName ) { org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter retval = null ; if ( STRING_CONSTANT . equals ( fieldName ) ) { retval = new org.ovirt.engine.core.searchbackend.EnumValueAutoCompleter ( org.ovirt.engine.core.searchbackend.VmPoolType . class ) ; } return retval ; }
public static org.ovirt.engine.core.common.businessentities.network.IpV6Address createDefaultIpv6Address () { org.ovirt.engine.core.common.businessentities.network.IpV6Address ipv6Address = new org.ovirt.engine.core.common.businessentities.network.IpV6Address () ; ipv6Address . setBootProtocol ( Ipv6BootProtocol.NONE ) ; return ipv6Address ; }
protected void mockGetStorageDomainList () { storageDomainsList = getStorageDomainList () ; mockDiskImageDao () ; mockStorageDomainDao ( storageDomainsList ) ; }
void initComboBoxEditors () { networkListEditor = new org.ovirt.engine.ui.common.widget.editor.ListModelListBoxEditor () ; networkNameEditor = new org.ovirt.engine.ui.common.widget.editor.generic.StringEntityModelTextBoxEditor () ; networkComboBox = new org.ovirt.engine.ui.common.widget.ComboBox ( networkListEditor , networkNameEditor ) ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( getIPv4Addresses () ) ; }
public static java.util.Collection < java.lang.String > replaceWith ( java.lang.String propertyName , java.util.Collection < > items ) { return org.ovirt.engine.core.utils.ReplacementUtils . replaceWith ( propertyName , items , org.ovirt.engine.core.utils.ReplacementUtils.DEFAULT_SEPARATOR , org.ovirt.engine.core.utils.ReplacementUtils.DEFAULT_MAX_NUMBER_OF_PRINTED_ITEMS ) ; }
@ java.lang.Override protected void executeVDSCommand () { if ( ( _vdsManager ) != null ) { synchronized ( _vdsManager ) { executeVdsIdCommand () ; } } else { executeVdsIdCommand () ; } }
void clearTooltip () { tooltip . setText ( STRING_CONSTANT ) ; }
@ java.lang.Override public final java.lang.String ovirtVersionAbout () { return formatString ( org.ovirt.engine.ui.common.utils.BaseDynamicMessages.DynamicMessageKey.VERSION_ABOUT ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface getExistingIfaceByNetwork ( java.lang.String network ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface : getExistingIfaces () . values () ) { if ( network . equals ( iface . getNetworkName () ) ) { return iface ; } } return null ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.storage.GetStorageDomainByIdAndStoragePoolIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainDao () . getForStoragePool ( org.ovirt.engine.core.bll.storage.GetStorageDomainByIdAndStoragePoolIdQuery . getParameters () . getStorageDomainId () , org.ovirt.engine.core.bll.storage.GetStorageDomainByIdAndStoragePoolIdQuery . getParameters () . getStoragePoolId () ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.eventqueue.EventResult call () { org.ovirt.engine.core.vdsbroker.irsbroker.IrsBrokerCommand . clearVdsFromCache ( vds . getStoragePoolId () , vds . getId () , vds . getName () ) ; return new org.ovirt.engine.core.common.eventqueue.EventResult ( true , org.ovirt.engine.core.common.eventqueue.EventType.VDSCLEARCACHE ) ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addActiveSnapshot ( snapshotId , vm , SnapshotStatus.OK , STRING_CONSTANT , null , compensationContext ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { getCompensationContext () . snapshotEntityStatus ( snapshot ) ; getSnapshotDao () . updateStatus ( getParameters () . getSnapshotId () , SnapshotStatus.LOCKED ) ; getCompensationContext () . stateChanged () ; return null ; }
private boolean isBlankTemplate ( java.lang.Object selectedItem ) { return ( ( selectedItem != null ) && ( selectedItem instanceof org.ovirt.engine.core.common.businessentities.VmTemplate ) ) && ( NGuid.Empty . equals ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( selectedItem ) ) . getId () ) ) ; }
@ java.lang.Deprecated public static void RunMultipleAction ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { org.ovirt.engine.ui.frontend.Frontend . RunMultipleAction ( actionType , parameters , null , null ) ; }
@ org.junit.After public void tearDown () { verifyAll () ; org.ovirt.engine.api.common.invocation.CurrentManager . remove () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () . equals ( getParameters () . getNetwork () . getName () ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setGetVdsQueryExpectations ( NUMBER_CONSTANT ) ; setGetNetworksQueryExpectations ( NUMBER_CONSTANT ) ; setUpEntityQueryExpectations () ; hostNicsResource . verifyModelSpecific ( resource . get () , org.ovirt.engine.api.restapi.resource.BackendHostNicResourceTest.NIC_IDX ) ; }
@ org.junit.Test public void sameBondNameSentTwice () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface bond = createBond ( org.ovirt.engine.core.bll.network.host.SetupNetworksHelperTest.BOND_NAME , null ) ; mockExistingIfaces ( bond ) ; org.ovirt.engine.core.bll.network.host.SetupNetworksHelper helper = createHelper ( createParametersForNics ( bond , bond ) ) ; validateAndExpectViolation ( helper , VdcBllMessages.NETWORK_INTERFACES_ALREADY_SPECIFIED , bond . getName () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { setGuestAgentData ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > ) ( result ) ) ) ; org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceListModel . super . SyncSearch ( VdcQueryType.GetVmInterfacesByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId () ) ) ; }
@ org.junit.Test public void replace_callReplaceTwoTimes () { java.lang.String text = STRING_CONSTANT ; java.lang.String firstPart = runAndCheck ( text , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; runAndCheck ( firstPart , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceModel iface ) { super . edit ( iface ) ; }
private void expectGetLunsMap () { for ( java.lang.String GUID : org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.GUIDS ) { expectGetLunsMap ( GUID , GUID ) ; } }
@ org.junit.Before public void createParameters () { parameters = new org.ovirt.engine.core.common.action.AddExternalStepParameters ( org.ovirt.engine.core.bll.AddExternalStepCommandTest.jobId , STRING_CONSTANT , org.ovirt.engine.core.common.job.StepEnum.VALIDATING ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getClusterId () { return getEntity () . getClusterId () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSStatus getRawValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object . getStatus () ; }
@ org.junit.Test public void nameAvailable ( ) throws java.lang.Exception { org.junit.Assert . assertThat ( validator . nameAvailable () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
public abstract org.ovirt.engine.core.aaa.AuthenticationResult authenticate ( java.lang.String name , java.lang.String password ) ;
protected boolean areUpdatedFieldsLegal () { return VmHandler.mUpdateVmsStatic . IsUpdateValid ( org.ovirt.engine.core.bll.UpdateVmCommand . getVm () . getStaticData () , org.ovirt.engine.core.bll.UpdateVmCommand . getParameters () . getVmStaticData () , org.ovirt.engine.core.bll.UpdateVmCommand . getVm () . getStatus () ) ; }
public byte nextByte () { return ( ( byte ) ( nextInt () ) ) ; }
@ org.junit.Test public void e1000VmInterfaceTypeWhenNotIsCompatibleWithOs ( ) throws java.lang.Exception { isCompatibleWithOsTest ( org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( VdcBllMessages.ACTION_TYPE_FAILED_VM_INTERFACE_TYPE_IS_NOT_SUPPORTED_BY_OS ) , VmInterfaceType.e1000 . getValue () ) ; }
protected static org.ovirt.engine.core.compat.Guid getGuid ( java.sql.ResultSet resultSet , java.lang.String columnName ) throws java.sql.SQLException { return org.ovirt.engine.core.dao.BaseDAODbFacade . getGuid ( resultSet , columnName , null ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUpGetEntityExpectations ( NUMBER_CONSTANT , false ) ; setUriInfo ( setUpBasicUriExpectations () ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public void setQos ( org.ovirt.engine.core.common.businessentities.network.NetworkQoS qos ) { this . qos = qos ; }
@ java.lang.Override protected void removeMemoryVolume ( java.lang.String memoryVolumes ) { super . removeMemoryVolume ( org.ovirt.engine.core.bll.memory.MemoryUtils . changeStorageDomainAndPoolInMemoryState ( memoryVolumes , storageDomainId , storagePoolId ) ) ; }
@ org.junit.Test public void insufficientDiskSpace () { final org.ovirt.engine.core.bll.ImportVmTemplateCommand command = setupVolumeFormatAndTypeTest ( VolumeFormat.RAW , VolumeType.Preallocated , StorageType.NFS ) ; org.mockito.Mockito . doReturn ( false ) . when ( command ) . validateSpaceRequirements ( org.mockito.Matchers . anyList () ) ; org.junit.Assert . assertFalse ( command . validate () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.AsyncTask > getAllAsyncTasksFromDb () { return coCoAsyncTaskHelper . getAllAsyncTasksFromDb () ; }
public org.ovirt.engine.core.common.businessentities.VmInit buildCloudInitParameters ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model ) { if ( model . getVmInitEnabled () . getEntity () ) { return buildModelSpecificParameters ( model . getIsWindowsOS () ) ; } else { return null ; } }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool returnValue ) { setStoragePool ( returnValue ) ; callback . onSuccess ( returnValue ) ; }
private void WriteToAuditLog () { try { org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogDirector . log ( logable , getAuditLogTypeValue () ) ; } catch ( java.lang.RuntimeException ex ) { log . error ( STRING_CONSTANT , ex ) ; } }
@ org.junit.Test public void testUpdateStatus () { dao . updateStatus ( existingPool . getId () , StoragePoolStatus.NotOperational ) ; existingPool . setstatus ( StoragePoolStatus.NotOperational ) ; org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () ) ; assertGetResult ( result ) ; }
< T > T getValue ( org.ovirt.engine.core.common.config.ConfigValues configValue , java.lang.String version ) ;
@ java.lang.Override protected boolean validate () { return ( canDetachStorageDomainWithVmsAndDisks ( org.ovirt.engine.core.bll.storage.domain.DetachStorageDomainFromPoolCommand . getStorageDomain () ) ) && ( canDetachDomain ( org.ovirt.engine.core.bll.storage.domain.DetachStorageDomainFromPoolCommand . getParameters () . getDestroyingPool () , org.ovirt.engine.core.bll.storage.domain.DetachStorageDomainFromPoolCommand . getParameters () . getRemoveLast () , org.ovirt.engine.core.bll.storage.domain.DetachStorageDomainFromPoolCommand . isInternalExecution () ) ) ; }
@ java.lang.Override public void edit ( final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel object ) { super . edit ( object ) ; initTabAvailabilityListeners ( object ) ; if ( object . getIsNew () ) { object . getNumOfDesktops () . setEntity ( NUMBER_CONSTANT ) ; prestartedVmsEditor . setEnabled ( false ) ; } }
@ javax.ws.rs.GET public org.ovirt.engine.api.v3.types.V3Templates list () { org.ovirt.engine.api.v3.types.V3Templates templates = adaptList ( getDelegate () : : list ) ; templates . getTemplates () . forEach ( V3TemplateHelper : : addDisksLink ) ; return templates ; }
protected org.ovirt.engine.core.compat.Guid getCurrentVdsId () { org.ovirt.engine.core.common.businessentities.VDS vds = org.ovirt.engine.core.bll.RunVmCommandBase . getVds () ; return vds != null ? vds . getId () : null ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return this . storage_pool_idField ; }
@ org.junit.Test public void testSaveVmPool () { dao . save ( newVmPool ) ; org.ovirt.engine.core.common.businessentities.VmPool result = dao . getByName ( newVmPool . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( newVmPool , result ) ; }
private boolean runVm ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.utils.lock.EngineLock lock ) { return org.ovirt.engine.core.bll.Backend . getInstance () . runInternalAction ( VdcActionType.RunVm , new org.ovirt.engine.core.common.action.RunVmParams ( vmId ) , org.ovirt.engine.core.bll.job.ExecutionHandler . createInternalJobContext ( lock ) ) . getSucceeded () ; }
@ java.lang.Override protected java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > filterClusters ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > clusters ) { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . filterByArchitecture ( clusters , pool . getClusterArch () ) ; }
@ java.lang.Override protected void init () { resource . setMappingLocator ( mapperLocator ) ; resource . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface object ) { return org.ovirt.engine.ui.uicompat.external.StringUtils . join ( object . getIpv6Addresses () , STRING_CONSTANT ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getName () . equals ( getInterface () . getNetworkName () ) ; }
public org.ovirt.engine.core.common.businessentities.StorageDomainStatus getStatus () { return getStoragePoolIsoMapData () . getstatus () ; }
protected org.ovirt.engine.core.common.businessentities.IscsiBond getIscsiBond () { return getEntity ( org.ovirt.engine.core.common.businessentities.IscsiBond . class , VdcQueryType.GetIscsiBondById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( iscsiBondId ) , iscsiBondId . toString () ) ; }
@ java.lang.Override public void run () { switch ( getVdsGroup () . getMigrateOnError () ) { case YES : MigrateAllVms ( getExecutionContext () ) ; break; case HA_ONLY : MigrateAllVms ( getExecutionContext () , true ) ; break; default: break; } }
public static < T > T GetValue ( org.ovirt.engine.core.common.config.ConfigValues value , java.lang.String version ) { return org.ovirt.engine.core.common.config.Config . getConfigUtils () . < T > getValue ( value , version ) ; }
@ org.junit.Test public void testGetQuotaByAdElementId ( ) throws java.lang.Exception { java.util.List < org.ovirt.engine.core.common.businessentities.Quota > quotaByAdElementIdList = dao . getQuotaByAdElementId ( FixturesTool.USER_EXISTING_ID , FixturesTool.STORAGE_POOL_NFS , false ) ; org.junit.Assert . assertEquals ( quotaByAdElementIdList . get ( NUMBER_CONSTANT ) . getQuotaName () , STRING_CONSTANT ) ; }
public static org.ovirt.engine.core.common.queries.VdcQueryReturnValue instantiate ( com.google.gwt.user.client.rpc.SerializationStreamReader streamReader ) throws com.google.gwt.user.client.rpc.SerializationException { return new org.ovirt.engine.core.common.queries.VdcQueryReturnValue () ; }
@ java.lang.Override protected void executeCommand () { if ( ( org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand . getVds () ) == null ) { return; } vdsInitialStatus = org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand . getVds () . getStatus () ; installHost () ; }
@ org.junit.Test public void testGetAllForStoragePoolWithPermissionsUnprivilegedUser () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStoragePool ( FixturesTool.STORAGE_POOL_NFS , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
protected void handleAsynchrony ( org.ovirt.engine.core.common.action.VdcReturnValueBase result , R model ) { model . setCreationStatus ( getAsynchronousStatus ( result ) . value () ) ; linkSubResource ( model , org.ovirt.engine.api.restapi.resource.AbstractBackendCollectionResource.CREATION_STATUS_REL , asString ( result . getVdsmTaskIdList () ) ) ; }
@ org.junit.Test public void testEmptyAttr () { org.ovirt.engine.api.types.V4Vm object = objectFromXml ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , object . id () ) ; }
@ org.junit.Test public void testExecuteCommand ( ) throws java.lang.Exception { command . executeCommand () ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StartGlusterVolumeCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeActionParameters ( null , false ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public void addHost ( org.ovirt.engine.core.compat.Guid host ) { possibleHosts . add ( host ) ; }
public void deactivateAndStartProgress () { model . startProgress () ; deactivate ( new org.ovirt.engine.ui.uicommonweb.models.vms.instancetypes.InstanceTypeManager.ActivatedListener () { @ java.lang.Override public void activated () { model . stopProgress () ; } } ) ; }
@ org.junit.Test public void testCompleteParametersAlternativesSecond ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Vm vm = new org.ovirt.engine.api.model.Vm () ; vm . setName ( STRING_CONSTANT ) ; vm . setStatus ( VmStatus.UP ) ; org.ovirt.engine.api.common.util.CompletenessAssertor . validateParameters ( vm , STRING_CONSTANT , STRING_CONSTANT ) ; }
protected void setHeaderTooltipStyle ( java.lang.String tooltipText ) { if ( ( tooltipText == null ) || ( tooltipText . isEmpty () ) ) { renderedHeaderText = this . headerText ; } else { renderedHeaderText = templates . hasTooltip ( headerText ) ; } }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage ) { java.lang.String status = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( diskImage . getImageStatus () ) ; return status ; }
@ org.junit.Test public void moveShareableDisk () { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initSrcStorageDomain () ; initDestStorageDomain ( StorageType.NFS ) ; initVmDiskImage ( true ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
protected void separateCustomProperties ( org.ovirt.engine.core.common.businessentities.VmStatic parameterMasterVm ) { if ( ( org.ovirt.engine.core.bll.AddVmTemplateCommand . getVdsGroup () ) != null ) { org.ovirt.engine.core.common.utils.customprop.VmPropertiesUtils . getInstance () . separateCustomPropertiesToUserAndPredefined ( org.ovirt.engine.core.bll.AddVmTemplateCommand . getVm () . getCompatibilityVersion () , parameterMasterVm ) ; } }
@ java.lang.Override protected boolean getRefreshStatistics () { return true ; }
protected abstract org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient createConnectedClient ( org.ovirt.vdsm.jsonrpc.client.reactors.Reactor reactor , java.nio.channels.Selector selector , java.lang.String hostname , int port , java.nio.channels.SocketChannel channel ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException ;
protected abstract org.ovirt.engine.core.common.vdscommands.DeleteImageGroupVDSCommandParameters buildDeleteMemoryConfParams ( java.util.List < org.ovirt.engine.core.compat.Guid > guids ) ;
public java.util.List < org.ovirt.engine.core.compat.Guid > getMonitoredTaskIDsInDB () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStepDao () . getExternalIdsForRunningSteps ( ExternalSystemType.GLUSTER ) ; }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.openstack.OpenStackSubnetResource getOpenStackSubnet ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackSubnetResource ( providerId , networkId , id , this ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.network.Network defaultManagementNetwork ) { defaultManagementNetworkCache . put ( dataCenterId , defaultManagementNetwork ) ; setSelectedDefaultManagementNetwork ( defaultManagementNetwork ) ; }
public org.ovirt.engine.ui.uicommonweb.UICommand getCancelCommand () { return ( cancelCommand ) != null ? cancelCommand : super . getCancelCommand () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSStatus getRawValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object . getEntity () ) ) . getStatus () ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . getName () ; }
public static org.hamcrest.Matcher < org.ovirt.engine.core.bll.ValidationResult > failsWith ( org.ovirt.engine.core.common.errors.EngineMessage expectedError , java.lang.String . . . variableReplacements ) { return new org.ovirt.engine.core.bll.validator.ValidationResultMatchers.Fails ( expectedError , variableReplacements ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.VmTemplate x , org.ovirt.engine.core.common.businessentities.VmTemplate y ) { return x . getName () . compareTo ( y . getName () ) ; }
protected void getHostListByCluster ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getHostListByCluster ( query , cluster . getName () ) ; }
@ org.junit.Test public void validateFailsNullParameterForIsoFile () { mockVdsWithOsVersion ( org.ovirt.engine.core.bll.hostdeploy.UpgradeOvirtNodeInternalCommandTest.VALID_OVIRT_VERSION ) ; command . getParameters () . setoVirtIsoFile ( null ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.VDS_CANNOT_INSTALL_MISSING_IMAGE_FILE ) ; }
@ java.lang.Override public void init ( ) throws javax.servlet.ServletException { pkiResources = org.ovirt.engine.core.utils.PKIResources . getInstance () ; }
public void setbookmark_value ( java.lang.String value ) { this . value = value ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface anInterface ) { return anInterface . getName () . equals ( getParameters () . getBondName () ) ; }
void bindIntegration () { bindCommonIntegration () ; bindConfiguratorIntegration ( org.ovirt.engine.ui.userportal.uicommon.UserPortalConfigurator . class ) ; bind ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalLoginModel . class ) . in ( com.google.inject.Singleton . class ) ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String memoryVolume , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addActiveSnapshot ( snapshotId , vm , SnapshotStatus.OK , memoryVolume , null , compensationContext ) ; }
@ java.lang.Override protected void syncSearch () { super . syncSearch () ; doDataCenterSearch () ; doClusterSearch () ; doHostSearch () ; doVolumeSearch () ; doProviderSearch () ; getTimer () . stop () ; }
@ java.lang.Override public org.ovirt.engine.api.model.Quotas list () { org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) ; return mapCollection ( getBackendCollection ( VdcQueryType.GetQuotaByStoragePoolId , params ) ) ; }
public java.lang.Boolean getNetConfigDirty () { return mVdsDynamic . getNetConfigDirty () ; }
private org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters buildRemoveMemoryVolumesParameters ( java.lang.String memoryState , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters params = new org.ovirt.engine.core.common.action.RemoveMemoryVolumesParameters ( memoryState , vmId , true ) ; params . setEntityInfo ( getParameters () . getEntityInfo () ) ; return params ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { boolean reboot = ( _reboot ) && ( ! ( _isNode ) ) ; if ( reboot ) { _messages . post ( InstallerMessages.Severity.INFO , STRING_CONSTANT ) ; } _parser . cliEnvironmentSet ( org.ovirt.ovirt_host_deploy.constants.CoreEnv.FORCE_REBOOT , reboot ) ; return true ; }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { org.mockito.Mockito . when ( mockRequest . getServletContext () ) . thenReturn ( mockServletContext ) ; testFilter = new org.ovirt.engine.core.utils.servlet.LocaleFilter () ; }
@ org.junit.Test public void findActiveVmsUsingNetworks () { mockDaos ( true ) ; java.util.List < java.lang.String > vmNames = vmInterfaceManager . findActiveVmsUsingNetworks ( org.ovirt.engine.core.compat.Guid . newGuid () , java.util.Collections . singletonList ( NETWORK_NAME ) ) ; org.junit.Assert . assertTrue ( vmNames . contains ( VM_NAME ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.AttachActionGroupsToRoleCommand < ? extends org.ovirt.engine.core.common.action.ActionGroupsToRoleParameter > generateCommand () { return new org.ovirt.engine.core.bll.AttachActionGroupsToRoleCommand ( getParams () ) ; }
public static boolean interfaceBasedOn ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface proposedIface , java.lang.String iface ) { return ( ( iface != null ) && ( proposedIface != null ) ) && ( iface . equals ( org.ovirt.engine.core.utils.NetworkUtils . stripVlan ( proposedIface ) ) ) ; }
public org.ovirt.engine.core.common.job.Step addSubStep ( org.ovirt.engine.core.bll.job.ExecutionContext context , org.ovirt.engine.core.common.job.Step parentStep , org.ovirt.engine.core.common.job.StepEnum newStepName , java.lang.String description ) { return addSubStep ( context , parentStep , newStepName , description , false ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.VDSGroup object ) { return object . getName () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.ActionGroup lookupEntity ( org.ovirt.engine.core.compat.Guid id ) { return actionGroup ; }
@ java.lang.Override public java.lang.String call () { com.woorea.openstack.cinder.model.SnapshotForCreate snapshotForCreate = new com.woorea.openstack.cinder.model.SnapshotForCreate () ; snapshotForCreate . setVolumeId ( cinderDisk . getId () . toString () ) ; return proxy . createSnapshot ( snapshotForCreate ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( VdsmEnv.CERTIFICATE_ENROLLMENT , Const.CERTIFICATE_ENROLLMENT_INLINE ) ; return true ; }
private void addVmInterfaceStatisticsToList ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > list ) { if ( ( list . size () ) <= NUMBER_CONSTANT ) { return; } _vmInterfaceStatisticsToSave . put ( list . get ( NUMBER_CONSTANT ) . getVmId () , list ) ; }
@ java.lang.Override protected void syncSearch () { if ( ( getVM () ) == null ) { return; } super . syncSearch ( VdcQueryType.GetAllDisksByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getVM () . getId () ) ) ; }
public void update () { T model = getModel () ; doEdit ( model ) ; formBuilder . update ( model ) ; }
@ java.lang.Override public java.lang.String render ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds == null ? STRING_CONSTANT : vds . getName () ; }
public static boolean IsSDItemExistInList ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > items , org.ovirt.engine.core.compat.Guid id ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain b : items ) { if ( b . getId () . equals ( id ) ) { return true ; } } return false ; }
public void setDiskSize ( double value ) { _diskSize = value ; }
@ java.lang.Override public java.lang.String getTagNameAndChildrenNames ( org.ovirt.engine.core.compat.Guid tagId ) { org.ovirt.engine.core.common.businessentities.Tags tag = getTagById ( tagId ) ; java.lang.StringBuilder sb = getTagNameAndChildrenNames ( tag ) ; return sb . toString () ; }
@ java.lang.Override public void authenticate ( java.lang.String name , java.lang.String password ) {}
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase runInTransaction () { return runInternalAction ( VdcActionType.RemoveVds , new org.ovirt.engine.core.common.action.RemoveVdsParameters ( oVirtId ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { getMacPoolListModel () . setItems ( ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.MacPool > ) ( returnValue . getReturnValue () ) ) ) ; stopProgress () ; }
@ org.junit.After public void tearDown () {}
protected void setValue ( com.google.gwt.safehtml.shared.SafeHtml headerText ) { this . headerText = headerText ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeTaskStatusEntity rebalanceStatusEntity = returnValue . getReturnValue () ; if ( rebalanceStatusEntity != null ) { showStatus ( rebalanceStatusEntity ) ; } }
private java.util.List < org.ovirt.engine.core.authentication.DirectoryUser > getDomainUsers () { return asCollection ( org.ovirt.engine.core.authentication.DirectoryUser . class , getEntity ( java.util.List . class , SearchType.DirectoryUser , getSearchPattern () ) ) ; }
@ java.lang.Override public int getAvailableMacsCount () { return macsStorage . getAvailableMacsCount () ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
protected org.ovirt.engine.api.model.Disk getUpdate () { org.ovirt.engine.api.model.Disk update = new org.ovirt.engine.api.model.Disk () ; update . setWipeAfterDelete ( false ) ; update . setReadOnly ( true ) ; return update ; }
@ org.junit.Test public void testGetAllAttachableDisksByPoolWithPermissions () { java.util.List < org.ovirt.engine.core.common.businessentities.Disk > result = dao . getAllAttachableDisksByPoolId ( null , null , org.ovirt.engine.core.dao.PRIVILEGED_USER_ID , true ) ; org.ovirt.engine.core.dao.DiskDaoTest . assertFullGetAllAttachableDisksByPoolId ( result ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetStepByStepIdQuery . getQueryReturnValue () . setReturnValue ( jobRepository . getStep ( org.ovirt.engine.core.bll.GetStepByStepIdQuery . getParameters () . getId () , false ) ) ; }
@ org.junit.Test public void testValidateStatusUpForActivation () { mockHostForActivation ( VDSStatus.Up ) ; org.junit.Assert . assertThat ( validator . validateStatusForActivation () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.VDS_ALREADY_UP ) ) ; }
private void setupForLun () { lunDisk = org.ovirt.engine.core.bll.validator.storage.DiskValidatorTest . createLunDisk () ; lunValidator = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.validator.storage.DiskValidator ( lunDisk ) ) ; }
public boolean isTypeOpenStackNetwork () { return ( ( org.ovirt.engine.core.common.businessentities.ProviderType ) ( getType () . getSelectedItem () ) ) == ( org.ovirt.engine.core.common.businessentities.ProviderType.OPENSTACK_NETWORK ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public static java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > getStoragePools ( org.ovirt.engine.core.compat.Guid storageDomainId , org.ovirt.engine.api.restapi.resource.AbstractBackendResource parent ) { return parent . getEntity ( java.util.List . class , VdcQueryType.GetStoragePoolsByStorageDomainId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( storageDomainId ) , STRING_CONSTANT , true ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Role update ( org.ovirt.engine.api.model.Role role ) { validateEnums ( org.ovirt.engine.api.model.Role . class , role ) ; return performUpdate ( role , new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetRoleById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateRole , new org.ovirt.engine.api.restapi.resource.BackendRoleResource.UpdateParametersProvider () ) ; }
public boolean isStateless () { return vmStatic . isStateless () ; }
public static < T > org.ovirt.engine.ui.common.widget.editor.TakesConstrainedValueEditor < T > of ( com.google.gwt.user.client.TakesValue < T > peer , com.google.gwt.user.client.ui.HasConstrainedValue < T > peerWithConstraints , com.google.gwt.event.logical.shared.HasValueChangeHandlers < T > peerWithValueChangeHandlers ) { return new org.ovirt.engine.ui.common.widget.editor.TakesConstrainedValueEditor ( peer , peerWithConstraints , peerWithValueChangeHandlers ) ; }
@ java.lang.Override protected void init () { super . init () ; if ( ( org.ovirt.engine.core.bll.RunVmCommand . getVm () ) != null ) { needsHostDevices = hostDeviceManager . checkVmNeedsDirectPassthrough ( org.ovirt.engine.core.bll.RunVmCommand . getVm () ) ; } loadVmInit () ; }
@ org.junit.Test public void testGetAllForStorageDomain () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStorageDomain ( existingDomain . getId () ) ; org.junit.Assert . assertFalse ( result . isEmpty () ) ; }
private void mockAuditLogDao () { org.mockito.Mockito . when ( dbFacade . getAuditLogDao () ) . thenReturn ( auditLogDao ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface x ) { return x . getName () . equals ( i . getName () ) ; }
private void cancel () { setWindow ( null ) ; }
private boolean performVmRelatedChecks () { org.ovirt.engine.core.bll.validator.VmValidator vmValidator = createVmValidator () ; return ( validate ( vmValidator . vmNotRunningStateless () ) ) && ( isVmNotInPreview () ) ; }
private void prepareMocks () { org.mockito.Mockito . doReturn ( null ) . when ( command ) . findConnectionWithSameDetails ( org.mockito.Matchers . any ( org.ovirt.engine.core.common.businessentities.StorageServerConnections . class ) ) ; }
protected void doTestGet ( org.ovirt.engine.core.common.mode.ApplicationMode appMode ) { setupExpectations ( appMode ) ; verifyResponse ( resource . get () ) ; }
@ java.lang.Override public void disable ( java.lang.String disabilityHint ) { tooltip . setText ( disabilityHint ) ; setEnabled ( false ) ; }
private java.lang.String path () { return STRING_CONSTANT ; }
@ java.lang.Override public boolean getIsAvailable () { return isUserElement () ; }
@ java.lang.Override protected void ExecuteVdsBrokerCommand () { mVmReturn = org.ovirt.engine.core.vdsbroker.vdsbroker.PauseVDSCommand . getBroker () . pause ( mVmId . toString () ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.PauseVDSCommand . ProceedProxyReturnValue () ; setReturnValue ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . buildVMDynamicData ( mVmReturn.mVm ) . getStatus () ) ; }
protected void failedToMigrate () { try { determineMigrationFailureForAuditLog () ; _isRerun = false ; org.ovirt.engine.core.bll.MigrateVmCommand . setSucceeded ( false ) ; failedToRunVm () ; } finally { org.ovirt.engine.core.bll.MigrateVmCommand . freeLock () ; } }
protected boolean validateUniqueVmName () { return org.ovirt.engine.core.bll.VmHandler . isVmWithSameNameExistStatic ( org.ovirt.engine.core.bll.ImportVmCommandBase . getVm () . getName () , org.ovirt.engine.core.bll.ImportVmCommandBase . getStoragePoolId () ) ? failCanDoAction ( VdcBllMessages.VM_CANNOT_IMPORT_VM_NAME_EXISTS ) : true ; }
public void setBalloonEnabled ( boolean enableBalloon ) { balloonEnabled = enableBalloon ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageDomainType getRawValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getstorage_domain_type () ; }
public void getLatency () { try { getLatency ( ( ( long ) ( org.ovirt.vdsmfake.Utils.minimum ) ) ) ; } catch ( java.lang.Exception e ) { org.ovirt.vdsmfake.Utils.log . error ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override protected void verifyModel ( org.ovirt.engine.api.model.Vm model , int index ) { super . verifyModel ( model , index ) ; org.ovirt.engine.api.restapi.resource.BackendVmsResourceTest . verifyModelSpecific ( model ) ; }
@ org.junit.Test public void testLGetWithCustomGlobalHeader () { clusterService . get () . send () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , getLastRequestHeaders () . get ( STRING_CONSTANT ) . getFirst () ) ; }
public org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode getDefaultConsoleMode () { return org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode . valueOf ( ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ClientModeSpiceDefault ) ) ) ) ; }
@ org.junit.Test public void testGetVolumesSupportedAsStorageDomain () { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity > vols = dao . getVolumesSupportedAsStorageDomain () ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , vols . size () ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.ExternalSubnet > getSubnets () { org.ovirt.engine.core.common.queries.GetExternalSubnetsOnProviderByExternalNetworkQueryParameters parameters = new org.ovirt.engine.core.common.queries.GetExternalSubnetsOnProviderByExternalNetworkQueryParameters () ; parameters . setProviderId ( asGuid ( providerId ) ) ; parameters . setNetworkId ( networkId ) ; return getBackendCollection ( org.ovirt.engine.core.common.businessentities.network.ExternalSubnet . class , VdcQueryType.GetExternalSubnetsOnProviderByExternalNetwork , parameters ) ; }
@ org.junit.Test public void validateFileToBlockSupported () { storagePool . setCompatibilityVersion ( Version.v3_6 ) ; validateInvalidDestinationAndSourceDomainOfDifferentStorageSubtypes ( StorageType.NFS , StorageType.ISCSI ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () . equals ( getNetworkName () ) ; }
public int getClusterDefaultMemoryOverCommit () { return NUMBER_CONSTANT ; }
protected org.ovirt.engine.core.common.businessentities.permissions getPermissions ( java.lang.String id ) { return getEntity ( org.ovirt.engine.core.common.businessentities.permissions . class , VdcQueryType.GetPermissionById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( id ) ) , id ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > getCollection () { return getBackendCollection ( VdcQueryType.GetVmGuestAgentInterfacesByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.VM getEntity ( int index ) { return org.ovirt.engine.api.restapi.resource.AbstractBackendCdRomsResourceTest . setUpEntityExpectations () ; }
private org.ovirt.engine.core.common.businessentities.Provider < > getHostProvider () { return org.ovirt.engine.core.bll.AddVdsCommand . getProviderDao () . get ( org.ovirt.engine.core.bll.AddVdsCommand . getParameters () . getProviderId () ) ; }
@ java.lang.Override public void setElementId ( java.lang.String elementId ) { this . elementId = elementId ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Quota > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , getQuotaMetaDataFromResultSet () ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendDataCenterNetworkResource ( STRING_CONSTANT , null ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
public org.ovirt.engine.core.common.businessentities.VmDevice addDiskDevice ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid deviceId ) { return addDiskDevice ( vmId , deviceId , true , false , STRING_CONSTANT , false ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { if ( cluster != null ) { maintenance ( cluster . isMaintenanceReasonRequired () , cluster . supportsGlusterService () ) ; } }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.console.ConsoleOptions.WanDisableEffects > returnValue ) { spice . getOptions () . setWanDisableEffects ( returnValue ) ; }
@ java.lang.Override protected void executeVdsBrokerCommand () { connectStoragePool () ; proceedProxyReturnValue () ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.IPTABLES_OVERRIDE ) public java.lang.Object call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( NetEnv.IPTABLES_ENABLE , true ) ; return null ; }
public boolean validate () { getCluster () . validateSelectedItem ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.NotEmptyValidation () } ) ; return getCluster () . getIsValid () ; }
@ org.junit.Test public void testListWithCustomGlobalHeader () { clustersService . list () . send () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , getLastRequestHeaders () . get ( STRING_CONSTANT ) . getFirst () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase getParameters ( org.ovirt.engine.api.model.CpuProfile incoming , org.ovirt.engine.api.model.CpuProfile entity ) { org.ovirt.engine.api.model.CpuProfile map = map ( incoming , entity ) ; return new org.ovirt.engine.core.common.action.CpuProfileParameters ( map ) ; }
public java.lang.Boolean getis_display () { return ( cluster ) == null ? null : cluster . getis_display () ; }
public static java.lang.String toISO ( long time ) { return org.ovirt.engine.extension.aaa.jdbc.DateUtils.ISO . format ( new java.util.Date ( time ) ) ; }
static org.ovirt.engine.core.common.businessentities.VM setUpEntityExpectations () { return org.ovirt.engine.api.restapi.resource.AbstractBackendCdRomsResourceTest . setUpEntityExpectations ( null ) ; }
protected void setExternalHostName ( org.ovirt.engine.ui.uicommonweb.models.ListModel value ) { privateExternalHostName = value ; }
protected T getOldQos () { if ( ( oldQos ) == null ) { oldQos = getQosDao () . get ( qos . getId () ) ; } return oldQos ; }
protected org.ovirt.engine.core.utils.ovf.xml.XmlNode selectSingleNode ( org.ovirt.engine.core.utils.ovf.xml.XmlDocument doc , java.lang.String pattern , org.ovirt.engine.core.utils.ovf.xml.XmlNamespaceManager ns ) { this . lastReadEntry = pattern ; if ( ns == null ) { return doc . selectSingleNode ( pattern ) ; } return doc . selectSingleNode ( pattern , ns ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.Cluster returnValue ) { cluster = returnValue ; updateActionAvailability () ; }
@ java.lang.Override @ org.junit.Test public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; setGetQuotasExpectations () ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
@ org.junit.Test public void interfaceBasedOnNullProposedVlan () { org.junit.Assert . assertFalse ( org.ovirt.engine.core.utils.NetworkUtils . interfaceBasedOn ( ( ( java.lang.String ) ( null ) ) , org.ovirt.engine.core.utils.NetworkUtilsTest.IFACE_NAME ) ) ; }
public void setstorage_pool_id ( org.ovirt.engine.core.compat.Guid value ) { this . id . setStoragePoolId ( value ) ; }
public static synchronized boolean isExportDomain ( org.ovirt.engine.api.model.StorageDomain storageDomain ) { org.ovirt.engine.api.model.StorageDomainType type = storageDomain . getType () ; return ( type != null ) && ( type == ( org.ovirt.engine.api.model.StorageDomainType.EXPORT ) ) ? true : false ; }
@ java.lang.Override public java.lang.String render ( java.lang.Integer object ) { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getOsName ( object ) ; }
@ java.lang.Override public org.ovirt.engine.api.v3.types.V3VnicPassThrough adapt ( org.ovirt.engine.api.model.VnicPassThrough from ) { org.ovirt.engine.api.v3.types.V3VnicPassThrough to = new org.ovirt.engine.api.v3.types.V3VnicPassThrough () ; if ( from . isSetMode () ) { to . setMode ( from . getMode () . value () ) ; } return to ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.NetworkView object ) { return object . getdescription () ; }
@ java.lang.Override public void prepareConnectHostToStoragePoolServers ( org.ovirt.engine.core.common.action.ConnectHostToStoragePoolServersParameters parameters , java.util.List < org.ovirt.engine.core.common.businessentities.StorageServerConnections > connections ) {}
public M getModel () { return modelProvider . getModel () ; }
protected org.ovirt.engine.core.bll.validator.storage.DiskValidator getDiskValidator ( org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage ) { return new org.ovirt.engine.core.bll.validator.storage.DiskValidator ( diskImage ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.Bookmark result = dao . getByName ( existing_bookmark . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( existing_bookmark . getName () , result . getName () ) ; }
public static org.slf4j.Logger getLogger ( java.lang.String name ) { return new org.slf4j.Logger ( java.util.logging.Logger . getLogger ( name ) ) ; }
protected boolean validateDestStorage () { org.ovirt.engine.core.bll.validator.StorageDomainValidator validator = new org.ovirt.engine.core.bll.validator.StorageDomainValidator ( org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getStorageDomain () ) ; return ( validate ( validator . isDomainExistAndActive () ) ) && ( validate ( validator . domainIsValidDestination () ) ) ; }
@ org.junit.Test public void add () { runAddAndVerify ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () , true ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.StorageDomainStatic result = dao . getByName ( existingEntity . getStorageName () ) ; org.junit.Assert . assertEquals ( existingEntity , result ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.CpuQos > getParameters () { org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.CpuQos > qosParametersBase = new org.ovirt.engine.core.common.action.QosParametersBase () ; qosParametersBase . setQos ( getQos () ) ; qosParametersBase . setQosId ( getQos () . getId () ) ; return qosParametersBase ; }
@ org.junit.Test public void testValidPatternName () { junit.framework.Assert . assertTrue ( new org.ovirt.engine.ui.uicommonweb.validation.PoolNameValidationTest.TestablePoolNameValidation () . validate ( STRING_CONSTANT . replace ( CHAR_CONS , VmPool.MASK_CHARACTER ) ) . getSuccess () ) ; }
@ java.lang.Override public java.lang.String toString () { return org.ovirt.engine.core.common.utils.ToStringBuilder . forInstance ( this ) . append ( STRING_CONSTANT , getIPv4Addresses () ) . build () ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.PauseGlusterVolumeGeoRepSessionCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeGeoRepSessionParameters () , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public java.lang.Boolean convert ( java.lang.Object source ) { if ( source != null ) { return ! ( ( java.lang.Boolean ) ( source ) ) ; } return false ; }
@ java.lang.Override public void onKeyPress ( com.google.gwt.dom.client.NativeEvent event ) { if ( ( com.google.gwt.event.dom.client.KeyCodes.KEY_ESCAPE ) == ( event . getKeyCode () ) ) { getView () . hide () ; } }
@ java.lang.Override protected void executeVdsBrokerCommand () { setTicketUsingUpdateDevice () ; org.ovirt.engine.core.vdsbroker.vdsbroker.SetVmTicketVDSCommand . proceedProxyReturnValue () ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query ) throws java.lang.Exception { setUpEntityQueryExpectations ( NUMBER_CONSTANT ) ; }
protected boolean isBalloonEnabled () { java.lang.Boolean balloonEnabled = org.ovirt.engine.core.bll.UpdateVmCommand . getParameters () . isBalloonEnabled () ; return balloonEnabled != null ? balloonEnabled : org.ovirt.engine.core.bll.utils.VmDeviceUtils . isBalloonEnabled ( getVmId () ) ; }
@ java.lang.Override public boolean render ( org.ovirt.engine.ui.uicommonweb.models.vms.ConsoleModel value ) { if ( value instanceof org.ovirt.engine.ui.uicommonweb.models.vms.RdpConsoleModel ) { return ( ( org.ovirt.engine.ui.uicommonweb.models.vms.RdpConsoleModel ) ( value ) ) . getrdp () . getUseLocalDrives () ; } return false ; }
protected byte [] runHttpMethod ( org.ovirt.engine.core.bll.provider.BaseProviderProxy.HttpMethodType httpMethod , java.lang.String contentType , java.lang.String relativeUrl , java.lang.String body ) { return runHttpMethod ( httpMethod , contentType , relativeUrl , body , createConnection ( relativeUrl ) ) ; }
public org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator build () { return new org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator ( host , params , existingInterfaces , existingAttachments , networkBusinessEntityMap , managementNetworkUtil , networkClusterDaoMock , networkDaoMock , vdsDaoMock , new org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidatorHelper () , vmDao ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network network ) { return network . getname () . equals ( getNetworkName () ) ; }
@ java.lang.Override protected void executeCommand () { org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . getNetworkDAO () . remove ( org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . getNetwork () . getId () ) ; org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . setSucceeded ( true ) ; }
public void setVm ( org.ovirt.engine.core.common.businessentities.VM value ) { vm = null ; _vmStatic = value . getStaticData () ; }
@ java.lang.Override public org.ovirt.engine.core.common.users.VdcUser getLoggedUser () { return privateLoggedUser ; }
@ org.junit.Test public void canDoActionFailsOnNull () { cmd = createTestCommand ( null , NUMBER_CONSTANT ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
public void addLDAPServer ( java.net.URI uri ) { ldapServers . add ( uri ) ; }
@ org.junit.Test public void getAllUnfinishedKdumpStatus () { java.util.List < org.ovirt.engine.core.common.businessentities.VdsKdumpStatus > result = dao . getAllUnfinishedVdsKdumpStatus () ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , result . size () ) ; }
@ java.lang.Override public javax.ws.rs.core.Response performRemove ( java.lang.String id ) { org.ovirt.engine.core.common.action.RemoveVmFromImportExportParameters params = new org.ovirt.engine.core.common.action.RemoveVmFromImportExportParameters ( asGuid ( id ) , storageDomainId , getDataCenterId ( storageDomainId ) ) ; return performAction ( VdcActionType.RemoveVmFromImportExport , params ) ; }
@ org.junit.Test public void testUpdateIscsiServerConnection () { existingConnection . setIqn ( STRING_CONSTANT ) ; dao . update ( existingConnection ) ; org.ovirt.engine.core.common.businessentities.StorageServerConnections result = dao . get ( existingConnection . getId () ) ; org.junit.Assert . assertEquals ( existingConnection , result ) ; }
private static org.ovirt.engine.core.common.businessentities.network.NetworkCluster createNetworkClusterWithDefaultValues ( org.ovirt.engine.core.compat.Guid clusterId , org.ovirt.engine.core.common.businessentities.network.Network net ) { return new org.ovirt.engine.core.common.businessentities.network.NetworkCluster ( clusterId , net . getId () , org.ovirt.engine.core.common.businessentities.network.NetworkStatus.NON_OPERATIONAL , false , true , false , false , false , false ) ; }
public final void disconnect ( java.lang.String message ) { byte [] response = buildNetworkResponse ( message ) ; postDisconnect () ; closeChannel () ; emitOnMessageReceived ( response ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageServerConnections connection ) { getPath () . setEntity ( connection . getConnection () ) ; prepareConnectionForEditing ( connection ) ; }
@ org.junit.Test public void checkRemoveConnectionEmptyId () { org.ovirt.engine.core.common.businessentities.StorageServerConnections newNFSConnection = createNFSConnection ( STRING_CONSTANT , StorageType.NFS , NfsVersion.V4 , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; newNFSConnection . setId ( STRING_CONSTANT ) ; parameters . setStorageServerConnection ( newNFSConnection ) ; org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( command , EngineMessage.ACTION_TYPE_FAILED_STORAGE_CONNECTION_ID_EMPTY ) ; }
public void setVmId ( org.ovirt.engine.core.compat.Guid vmId ) { this . vmId = vmId ; this . statistics . setVmId ( vmId ) ; }
private void assertCanDoActionMessage ( org.ovirt.engine.core.dal.VdcBllMessages msg ) { junit.framework.Assert . assertTrue ( STRING_CONSTANT , command . getReturnValue () . getCanDoActionMessages () . contains ( msg . name () ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { spmMaxPriorityValue = ( ( java.lang.Integer ) ( returnValue ) ) ; retrieveDefaultSpmPriority () ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.NEUTRON_LINUX_BRIDGE_SETUP ) public java.lang.Boolean call ( ) throws java.lang.Exception { _setCliEnvironmentIfNecessary ( ( ( org.ovirt.ovirt_host_deploy.constants.OpenStackEnv.NEUTRON_LINUXBRIDGE_CONFIG_PREFIX ) + STRING_CONSTANT ) , _openStackAgentProperties . getAgentConfiguration () . getNetworkMappings () ) ; return true ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid createTask ( org.ovirt.engine.core.compat.Guid taskId , org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo asyncTaskCreationInfo , org.ovirt.engine.core.common.action.VdcActionType parentCommand ) { return super . createTask ( taskId , asyncTaskCreationInfo , parentCommand ) ; }
protected org.ovirt.engine.core.bll.validator.StorageDomainValidator getStorageDomainValidator ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return new org.ovirt.engine.core.bll.validator.StorageDomainValidator ( storageDomain ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageDomain getSourceDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain source = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; source . setstorage_domain_type ( StorageDomainType.ImportExport ) ; source . setstatus ( StorageDomainStatus.Active ) ; return source ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { model . stopProgress () ; if ( result . getReturnValue () . getSucceeded () ) { cancel () ; } }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList <> ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > ) ( source ) ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > () ; }
public void parseArguments ( java.util.List < java.lang.String > args ) throws java.lang.Exception ;
@ org.junit.Test public void testDisksUsages () { java.lang.Object [] disksUsages = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilderTest . initDisksUsageData () ; java.util.Map < java.lang.String , java.lang.Object > map = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilderTest . setDisksUsage ( disksUsages ) ; validateDisksUsagesList ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilderTest . getVmStatistics () , disksUsages , map ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . getStatus () ) == domainStatus ) && ( ! ( a . getId () . equals ( getStorageDomain () . getId () ) ) ) ; }
protected java.lang.String getOrganizationName () { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.OrganizationName ) ; }
protected boolean hasTaskHandlers () { return ( getTaskHandlers () ) != null ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.OriginType getRawValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData object ) { return object . getVm () . getOrigin () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VDS object ) { return object . getName () ; }
protected abstract void initSelectedNetwork ( ) ;
public java.lang.String ExportVm ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > images , org.ovirt.engine.core.compat.Version version ) { org.ovirt.engine.core.utils.ovf.OvfWriter ovf = new org.ovirt.engine.core.utils.ovf.OvfVmWriter ( vm , images , version ) ; BuildOvf ( ovf ) ; return ovf . getStringRepresentation () ; }
@ java.lang.Override public org.ovirt.engine.core.utils.ISingleAsyncOperation createSingleAsyncOperation () { return new org.ovirt.engine.core.bll.storage.pool.AfterDeactivateSingleAsyncOperation ( getVdss () , getStorageDomain () , getStoragePool () , isLastMaster , newMasterStorageDomainId ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { ( ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalTemplateListModel ) ( model ) ) . setItems ( ( ( java.lang.Iterable ) ( returnValue ) ) ) ; }
private java.lang.String getLockMessage () { return EngineMessage.ACTION_TYPE_FAILED_OBJECT_LOCKED . name () ; }
private void mockStorageDomainValidatorWithoutSpace () { org.mockito.Mockito . when ( storageDomainValidator . hasSpaceForDiskWithSnapshots ( org.mockito.ArgumentMatchers . any ( org.ovirt.engine.core.common.businessentities.storage.DiskImage . class ) ) ) . thenReturn ( new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.ACTION_TYPE_FAILED_DISK_SPACE_LOW_ON_STORAGE_DOMAIN ) ) ; }
public boolean equalValues ( org.ovirt.engine.core.common.businessentities.qos.CpuQos other ) { return org.ovirt.engine.core.common.utils.ObjectUtils . objectsEqual ( cpuLimit , other . getCpuLimit () ) ; }
public void setCommandExecuted () { javax.transaction.Transaction transaction = org.ovirt.engine.core.utils.transaction.TransactionSupport . suspend () ; try { org.ovirt.engine.core.bll.tasks.TaskManagerUtil . updateCommandExecuted ( getCommandId () ) ; } finally { if ( transaction != null ) { org.ovirt.engine.core.utils.transaction.TransactionSupport . resume ( transaction ) ; } } }
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { setUpMockQueryParameters () ; setUpSpyQuery () ; }
@ java.lang.Override public synchronized void clear () { super . clear () ; reapableMap . clear () ; while ( ( queue . poll () ) != null ) {} }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > returnValue ) { setVmsWithvNumaNodeList ( returnValue ) ; initVNumaNodes () ; modelReady () ; }
private org.ovirt.engine.core.bll.gluster.AddBricksToGlusterVolumeCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId , java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterBrickEntity > bricks , int replicaCount , int stripeCount , boolean force ) { return new org.ovirt.engine.core.bll.gluster.AddBricksToGlusterVolumeCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeBricksActionParameters ( volumeId , bricks , replicaCount , stripeCount , force ) , null ) ; }
private org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator createHostSetupNetworksValidator ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > networks ) { return createHostSetupNetworksValidator ( networks , new org.ovirt.engine.core.common.action.HostSetupNetworksParameters ( host . getId () ) ) ; }
private org.springframework.jdbc.core.namedparam.MapSqlParameterSource createVfsConfigIdParameter ( org.ovirt.engine.core.compat.Guid vfsConfigId ) { return getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vfsConfigId ) ; }
public abstract void initTable ( ) ;
@ java.lang.Override protected void removeVmSnapshots () { org.ovirt.engine.core.compat.Guid vmId = getVmId () ; java.util.Set < java.lang.String > memoryStates = snapshotsManager . removeSnapshots ( vmId ) ; for ( java.lang.String memoryState : memoryStates ) { removeMemoryVolumes ( memoryState , vmId ) ; } }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getParameters () . getSourceSnapshotId () . toString () , getClass () . getName () ) ; }
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.Object > call ( ) throws java.lang.Exception { return new org.ovirt.engine.core.vdsbroker.jsonrpc.FutureMap ( client , request , timeout , unit , true ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.AttachedStorageDomainResource getStorageDomainResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendAttachedStorageDomainResource ( id , dataCenterId ) ) ; }
@ org.junit.Test ( expected = java.lang.UnsupportedOperationException . class ) public void getFreeVfNotSriovNic () { commonIsSriovDevice ( false ) ; hostNicVfsConfigHelper . getFreeVf ( nic , null ) ; }
@ java.lang.Override protected void onAction () {}
@ java.lang.Override protected void endWithFailure () { org.ovirt.engine.core.bll.ExportVmCommand . endActionOnAllImageGroups () ; org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.bll.ExportVmCommand . getVm () ; org.ovirt.engine.core.bll.VmHandler . unLockVm ( vm ) ; org.ovirt.engine.core.bll.ExportVmCommand . setSucceeded ( true ) ; }
@ java.lang.Override public boolean Match ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getstatus () ) == ( status ) ; }
@ org.ovirt.engine.ui.common.DefaultStringValue ( value = STRING_CONSTANT ) java.lang.String template ( ) ;
@ java.lang.Override @ javax.interceptor.ExcludeClassInterceptors public java.util.List < org.ovirt.engine.core.common.action.VdcReturnValueBase > runInternalMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , org.ovirt.engine.core.bll.context.CommandContext commandContext ) { return runMultipleActionsImpl ( actionType , parameters , true , false , false , commandContext ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.storage.DisksAllocationModel model ) { org.ovirt.engine.ui.common.widget.uicommon.storage.DisksAllocationView.Driver.driver . edit ( model ) ; initListerners ( model ) ; updateColumnsAvailability ( model ) ; updateListHeader ( model ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return STRING_CONSTANT ; }
private org.ovirt.engine.core.bll.ImportVmTemplateCommand setupDiskSpaceTest ( final int extraDiskSpaceRequired ) { mcr . mockConfigValue ( ConfigValues.FreeSpaceCriticalLowInGB , extraDiskSpaceRequired ) ; return new org.ovirt.engine.core.bll.TestHelperImportVmTemplateCommand ( createParameters () ) ; }
private void reboot () { org.ovirt.engine.ui.uicompat.UIConstants constants = org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getConstants () ; powerAction ( org.ovirt.engine.ui.uicommonweb.models.vms.VmListModel.REBOOT , constants . rebootVirtualMachinesTitle () , constants . areYouSureYouWantToRebootTheFollowingVirtualMachinesMsg () , false ) ; }
@ org.junit.Test public void canDoActionFailsOnNull () { cmd = org.mockito.Mockito . spy ( createTestCommand ( null , null , NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
java.util.Set < java.lang.String > getLabelsByVfsConfigId ( org.ovirt.engine.core.compat.Guid vfsConfigId ) { return new java.util.HashSet ( getCallsHandler () . executeReadList ( STRING_CONSTANT , new org.springframework.jdbc.core.SingleColumnRowMapper () , createVfsConfigIdParameter ( vfsConfigId ) ) ) ; }
@ java.lang.Override protected void performBootstrap () { super . performBootstrap () ; com.google.gwt.user.client.Window . setTitle ( dynamicMessages . applicationTitle () ) ; }
@ org.junit.Test public void insufficientDiskSpace () { setupVolumeFormatAndTypeTest ( VolumeFormat.RAW , VolumeType.Preallocated , StorageType.NFS ) ; org.mockito.Mockito . doReturn ( false ) . when ( command ) . validateSpaceRequirements ( org.mockito.ArgumentMatchers . any () ) ; org.junit.Assert . assertFalse ( command . validate () ) ; }
@ java.lang.Override public com.google.gwt.event.dom.client.HasKeyDownHandlers getSearchInputHandlers () { return searchStringInput ; }
private void mockCommandParameters () { org.mockito.Mockito . doReturn ( diskImageDaoMock ) . when ( cmd ) . getDiskImageDao () ; }
public void setspm_status ( org.ovirt.engine.core.common.businessentities.VdsSpmStatus value ) { _spm_status = value ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Permissions > getTreeForEntity ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.common.VdcObjectType type ) { return getTreeForEntity ( id , type , ( - NUMBER_CONSTANT ) , false ) ; }
private void mockVmDaoGetVm () { org.mockito.Mockito . when ( vmDao . get ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( vm ) ; }
protected org.ovirt.engine.core.bll.storage.StoragePoolValidator createStoragePoolValidator () { return new org.ovirt.engine.core.bll.storage.StoragePoolValidator ( org.ovirt.engine.core.bll.storage.UpdateStoragePoolCommand . getStoragePool () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > getAll () { org.apache.commons.httpclient.HttpMethod method = new org.apache.commons.httpclient.methods.GetMethod ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.ALL_HOSTS_QUERY ) ; return runHostListMethod ( method ) ; }
@ org.junit.Test public void validateFailsOnNull () { org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public void setpm_password ( java.lang.String value ) { mVdsStatic . setpm_password ( value ) ; }
@ java.lang.Override public boolean canBeSelected () { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isWindowsOsType ( getEntity () . getOs () ) ; }
@ org.junit.Before public void setup () { org.mockito.Mockito . when ( dbFacade . getVdsDao () ) . thenReturn ( vdsDao ) ; mockVdsFenceOptions ( true ) ; mockFencedHost () ; }
private static int getRefreshRate ( org.ovirt.engine.core.common.config.ConfigValues refreshRateConfig ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( refreshRateConfig ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.pseudo.NetworkLabel > getHostNicLabels ( org.ovirt.engine.core.compat.Guid hostNicId ) { return getBackendCollection ( VdcQueryType.GetNetworkLabelsByHostNicId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( hostNicId ) ) ; }
private void domainsInMaintenanceCheck ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains , org.ovirt.engine.core.common.businessentities.StoragePool pool ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain domainInDb : storageDomains ) { if ( ( domainInDb . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.PreparingForMaintenance ) ) { queueDomainMaintenanceCheck ( domainInDb , pool ) ; } } }
public void addOperation ( final org.ovirt.engine.ui.frontend.communication.VdcOperation < , > operation ) { addOperationImpl ( operation ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { notifyEvent . raise ( this , new org.ovirt.engine.ui.uicommonweb.models.hosts.ValueEventArgs ( ( ( T ) ( returnValue ) ) ) ) ; }
public void setsubscriber_id ( org.ovirt.engine.core.compat.Guid value ) { this . id . subscriberId = value ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( getTemplate () ) ; org.ovirt.engine.api.model.Cdrom cdrom = resource . get () ; verifyModel ( cdrom ) ; verifyLinks ( cdrom ) ; }
@ java.lang.Override public void onLogout () { user . onUserLogout () ; }
@ org.junit.Test public void testGetAllWithPermissionsUnprivilegedUser () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAll ( org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { warningLabel . setVisible ( ( ! ( object . getMigrateData () . getEntity () ) ) ) ; }
private void initCollection () { org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setMappingLocator ( mapperLocator ) ; org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setMessageBundle ( messageBundle ) ; org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setHttpHeaders ( httpHeaders ) ; }
@ org.ovirt.engine.ui.common.widget.table.column.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml imageContainer ( java.lang.String style , com.google.gwt.safehtml.shared.SafeHtml imageHtml ) ;
@ java.lang.Override public org.ovirt.engine.core.compat.Guid runInTransaction () { getCompensationContext () . resetCompensation () ; return createTaskInCurrentTransaction ( taskId1 , ret1 . getCreationInfo () , VdcActionType.HibernateVm , VdcObjectType.Storage , getStorageDomainId () ) ; }
public void updateSmartcardDevice ( org.ovirt.engine.core.compat.Guid vmId , boolean smartcardEnabled ) { if ( smartcardEnabled ) { if ( ! ( hasSmartcardDevice ( vmId ) ) ) { addSmartcardDevice ( vmId ) ; } } else { removeSmartcardDevices ( vmId ) ; } }
public void setLoggedInUser ( final org.ovirt.engine.core.common.businessentities.aaa.DbUser loggedInUser ) { this . currentUser = loggedInUser ; }
@ java.lang.Override public org.ovirt.engine.api.model.VmPools list () { if ( isFiltered () ) { return mapCollection ( getBackendCollection ( VdcQueryType.GetAllVmPoolsAttachedToUser , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , SearchType.VmPools ) ) ; } else { return mapCollection ( getBackendCollection ( SearchType.VmPools ) ) ; } }
@ java.lang.Override protected java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.network.VnicProfileView profile ) { return profile == ( org.ovirt.engine.core.common.businessentities.network.VnicProfileView.EMPTY ) ? org.ovirt.engine.ui.webadmin.section.main.view.popup.vm.register.VnicProfileMappingPopupView.messages . emptyProfile () . asString () : org.ovirt.engine.ui.webadmin.section.main.view.popup.vm.register.VnicProfileMappingPopupView.messages . profileAndNetworkSelected ( profile . getName () , profile . getNetworkName () ) ; }
protected org.ovirt.engine.core.compat.Guid getDestinationStorageDomainId () { return ( mNewCreatedDiskImage . getStorageIds () ) != null ? mNewCreatedDiskImage . getStorageIds () . get ( NUMBER_CONSTANT ) : org.ovirt.engine.core.compat.Guid.Empty ; }
public org.ovirt.engine.core.bll.SPMAsyncTask CreateTask ( org.ovirt.engine.core.common.asynctasks.AsyncTaskType taskType , org.ovirt.engine.core.common.asynctasks.AsyncTaskParameters taskParameters ) { return org.ovirt.engine.core.bll.AsyncTaskFactory . Construct ( taskType , taskParameters ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.datacenters.NewNetworkModel object ) { super . edit ( object ) ; driver . edit ( object ) ; }
@ java.lang.Override protected boolean validate () { return checkAddEditValidations () ; }
private void mockVdsFenceOptions ( boolean agentsCompatibleWithProxy ) { vdsFenceOptions = org.mockito.Mockito . mock ( org.ovirt.engine.core.utils.pm.VdsFenceOptions . class ) ; org.mockito.Mockito . when ( vdsFenceOptions . isAgentSupported ( org.mockito.Matchers . any ( java.lang.String . class ) ) ) . thenReturn ( agentsCompatibleWithProxy ) ; }
@ org.junit.Test public void getClusterNameNullVds () { final org.ovirt.engine.core.common.businessentities.Cluster g = null ; b . setCluster ( g ) ; final java.lang.String n = b . getClusterName () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , n ) ; }
private void addViolation ( org.ovirt.engine.core.dal.VdcBllMessages violation ) { addViolation ( violation , null ) ; }
@ java.lang.Override public void setStatus ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus status ) { getStoragePoolIsoMapData () . setStatus ( status ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.aaa.DbUser user , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
private static org.ovirt.engine.core.common.businessentities.StorageServerConnections setUpConnection ( int idx ) { return new org.ovirt.engine.core.common.businessentities.StorageServerConnections ( org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.ADDRESS , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.GUIDS [ idx ] , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.IQNS [ idx ] , null , org.ovirt.engine.core.common.businessentities.storage.StorageType.ISCSI , null , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.PORT , null ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > vmTemplates ) { prefetchIcons ( vmTemplates ) ; }
private void stubDaos () { mockVmDynamic () ; mockVmStatic ( true ) ; mockVdsDao () ; }
@ java.lang.Override public org.ovirt.engine.api.model.VMs list () { if ( isFiltered () ) return mapCollection ( getBackendCollection ( VdcQueryType.GetAllVms , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , SearchType.VM ) , true ) ; else return mapCollection ( getBackendCollection ( SearchType.VM ) , false ) ; }
private void assertProgress ( java.lang.Integer expectedProgress , org.ovirt.engine.core.common.businessentities.storage.BaseDisk disk ) { org.junit.Assert . assertEquals ( STRING_CONSTANT , expectedProgress , disk . getProgress () ) ; }
private org.ovirt.engine.core.common.businessentities.network.Network getNetwork () { if ( ( network ) == null ) { network = org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getNetworkDAO () . get ( getNetworkCluster () . getnetwork_id () ) ; } return network ; }
private void mockDbFacades () { mockVdsDao () ; mockVdsDynamicDao () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network n ) { return n . getname () . equals ( network . getname () ) ; }
public void setVdsId ( org.ovirt.engine.core.compat.Guid vdsId ) { this . vdsId = vdsId ; this . statistics . setVdsId ( ( vdsId != null ? vdsId . getValue () : null ) ) ; }
private void swithAccordingToMode ( final org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model ) { org.ovirt.engine.ui.common.widget.popup.AbstractVmBasedPopupPresenterWidget . getView () . switchMode ( model . getAdvancedMode () . getEntity () ) ; }
@ java.lang.Override public void run ( org.ovirt.engine.core.common.businessentities.StoragePool item , org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getLocalStorageHost ( callback . getAsyncQuery () , item . getName () ) ; }
private void simulateNetworkExists () { org.mockito.Mockito . when ( networkDao . get ( org.ovirt.engine.core.bll.validator.VfsConfigValidatorTest.NETWORK_ID ) ) . thenReturn ( network ) ; org.mockito.Mockito . when ( network . getName () ) . thenReturn ( org.ovirt.engine.core.bll.validator.VfsConfigValidatorTest.NETWORK_NAME ) ; }
private void setMasterDomainId ( org.ovirt.engine.core.compat.Guid value ) { privateMasterDomainId = value ; }
private java.lang.String buildVmSerialNumberFromConfig ( org.ovirt.engine.core.common.businessentities.VM vm ) { final org.ovirt.engine.core.common.businessentities.SerialNumberPolicy policy = org.ovirt.engine.core.common.config.Config . getValue ( ConfigValues.DefaultSerialNumberPolicy ) ; final java.lang.String customSerialNumber = org.ovirt.engine.core.common.config.Config . getValue ( ConfigValues.DefaultCustomSerialNumber ) ; return getSerialNumberFromPolicy ( policy , customSerialNumber , vm . getId () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.utils.Pair < java.lang.Boolean , org.ovirt.engine.core.common.errors.EngineFault > runConnectionStorageToDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId , int type ) { return runConnectionStorageToDomain ( storageDomain , vdsId , type , null , storageDomain . getStoragePoolId () ) ; }
protected void raiseLoggedInEvent () { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . initCache ( this ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { if ( org.ovirt.engine.core.bll.AddVmPoolWithVmsCommand . getAddVmsSucceded () ) { return org.ovirt.engine.core.common.AuditLogType.USER_ADD_VM_POOL_WITH_VMS ; } return org.ovirt.engine.core.bll.AddVmPoolWithVmsCommand . getSucceeded () ? org.ovirt.engine.core.common.AuditLogType.USER_ADD_VM_POOL_WITH_VMS_ADD_VDS_FAILED : org.ovirt.engine.core.common.AuditLogType.USER_ADD_VM_POOL_WITH_VMS_FAILED ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < > ) ( source ) ) . isEmpty () ) ; } return false ; }
org.ovirt.engine.core.common.action.VdcReturnValueBase endAction ( org.ovirt.engine.core.bll.tasks.interfaces.SPMTask task ) ;
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml image ( com.google.gwt.safehtml.shared.SafeHtml statusImage , java.lang.String title , java.lang.String id ) ;
private void initSubtabTable () { detailTable = new org.ovirt.engine.ui.common.widget.uicommon.popup.instancetypes.InstanceTypeGeneralModelForm ( instanceTypeGeneralModelProvider ) ; }
public java.lang.String getRoleName () { org.ovirt.engine.core.common.businessentities.Role role = org.ovirt.engine.core.bll.PermissionsCommandBase . getRoleDao () . get ( org.ovirt.engine.core.bll.PermissionsCommandBase . getParameters () . getPermission () . getrole_id () ) ; return role == null ? null : role . getName () ; }
@ java.lang.Override public void storagePoolUpEvent ( org.ovirt.engine.core.common.businessentities.StoragePool storagePool , boolean isNewSpm ) { if ( isNewSpm ) { org.ovirt.engine.core.bll.AsyncTaskManager . getInstance () . StopStoragePoolTasks ( storagePool ) ; } else { org.ovirt.engine.core.bll.AsyncTaskManager . getInstance () . AddStoragePoolExistingTasks ( storagePool ) ; } }
protected org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase parameters ) throws org.ovirt.engine.core.common.errors.EngineException { return getVdsBroker () . runVdsCommand ( commandType , parameters ) ; }
@ java.lang.Override protected void configure () { super . configure () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.Disk get ( org.ovirt.engine.core.compat.Guid id ) { return get ( id , null , false ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue result ) { soundDeviceSupportMap = result . getReturnValue () ; }
@ java.lang.Override public void OnSuccess ( java.lang.Object model , java.lang.Object result ) { setGuestAgentData ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmGuestAgentInterface > ) ( result ) ) ) ; org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceListModel . super . SyncSearch ( VdcQueryType.GetVmInterfacesByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId () ) ) ; }
public boolean syntaxErrorInProperties ( java.lang.String properties ) { return ! ( VALIDATION_PATTERN . matcher ( properties ) . matches () ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth . fromInt ( ( ( java.lang.Integer ) ( source ) ) ) : org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth.depth16 ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > networks = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; allNetworks = networks ; initNetworkModels () ; initDcNetworkParams () ; queryInterfaces () ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false , false , false , false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ org.junit.Test public void getVdsDefault () { final org.ovirt.engine.core.common.businessentities.VDS v = b . getVds () ; org.junit.Assert . assertNull ( v ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( getVm () ) ; org.ovirt.engine.api.model.Cdrom cdrom = resource . get () ; verifyModel ( cdrom ) ; }
@ java.lang.Override public void initialize ( org.ovirt.engine.ui.uicommonweb.models.SystemTreeItemModel systemTreeSelectedItem ) { super . initialize ( systemTreeSelectedItem ) ; getModel () . getVmType () . setIsChangable ( true ) ; }
private boolean hasHostExternalStatus () { return ( ( getEvent () . getVdsId () ) != null ) && ( ( org.ovirt.engine.core.bll.AddExternalEventCommand . getParameters () . getExternalStatus () ) != null ) ; }
@ org.junit.Test public void testStorageDomainForMemoryIsNotValidWhenItHasNoSpaceForClonedDisks () { org.mockito.Mockito . when ( storageDomainValidator . hasSpaceForClonedDisks ( memoryDisks ) ) . thenReturn ( new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.ACTION_TYPE_FAILED_DISK_SPACE_LOW_ON_STORAGE_DOMAIN ) ) ; org.junit.Assert . assertFalse ( filter . test ( storageDomain ) ) ; }
public javax.ws.rs.core.Response performAction ( org.ovirt.engine.core.common.action.VdcActionType task , org.ovirt.engine.core.common.action.VdcActionParametersBase params , org.ovirt.engine.api.model.Action action ) { return performAction ( task , params , action , false ) ; }
public void setKvmEnabled ( java.lang.Boolean value ) { this . mVdsDynamic . setKvmEnabled ( value ) ; }
private void spice_Connected ( java.lang.Object sender ) { setIsConnected ( true ) ; }
private void mockVmDao () { org.mockito.Mockito . when ( vmDao . getAllRunningForVds ( org.mockito.Matchers . eq ( org.ovirt.engine.core.bll.pm.StartVdsCommandTest.FENCECD_HOST_ID ) ) ) . thenReturn ( new java.util.LinkedList <> () ) ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.storage.RegisterEntityModel < org.ovirt.engine.core.common.businessentities.VmTemplate > flush () { return super . flush () ; }
@ org.junit.Test public void testSubResourceLocator ( ) throws java.lang.Exception { assertTrue ( ( ( resource . getApplicationResource ( org.ovirt.engine.api.restapi.resource.BackendVmApplicationsResourceTest.VM_ID . toString () ) ) instanceof org.ovirt.engine.api.resource.VmApplicationResource ) ) ; }
public static java.util.List < java.lang.String > initRange ( java.lang.String start , java.lang.String end , int size ) { return org.ovirt.engine.core.utils.MacAddressRangeUtils . innerInitRange ( start , end , size ) ; }
@ java.lang.Override @ com.google.gwt.uibinder.client.UiChild ( tagname = STRING_CONSTANT , limit = NUMBER_CONSTANT ) public void setContent ( com.google.gwt.user.client.ui.Widget widget ) { contentPanel . setWidget ( widget ) ; }
void handleUiMode ( org.ovirt.engine.ui.webadmin.uimode.UiModeData uiModeData ) { org.ovirt.engine.core.common.mode.ApplicationMode uiMode = uiModeData . getUiMode () ; org.ovirt.engine.ui.uicommonweb.models.ApplicationModeHelper . setUiMode ( uiMode ) ; }
public static boolean isGlusterSwiftSupported ( org.ovirt.engine.core.compat.Version version ) { return false ; }
@ java.lang.Override protected boolean canDoAction () { return org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . CommonNetworkValidation ( org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . getParameters () . getNetwork () , org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . getReturnValue () . getCanDoActionMessages () ) ; }
@ java.lang.Override protected void buildVmFloppy () { if ( ! ( org.apache.commons.lang.StringUtils . isEmpty ( vm . getFloppyPath () ) ) ) { createInfo . put ( VdsProperties.Floppy , vm . getFloppyPath () ) ; } }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , final org.ovirt.engine.ui.uicompat.IFrontendMultipleActionAsyncCallback callback , final java.lang.Object state ) { runMultipleAction ( actionType , parameters , false , callback , state , true ) ; }
protected void removeVmFromDb () { org.ovirt.engine.core.bll.RemoveVmCommand . removeVmUsers () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmNetwork () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmSnapshots () ; removeVmStatic ( getParameters () . isRemovePermissions () ) ; removeIcons () ; }
@ org.junit.Test public void getUsbPolicyUsbTypeNative () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( true ) ; usb . setType ( UsbType.NATIVE ) ; assertEquals ( UsbPolicy.ENABLED_NATIVE , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) ) ; }
public void setIsExecutionAllowed ( boolean value ) { if ( ( isExecutionAllowed ) != value ) { isExecutionAllowed = value ; if ( value ) { getExecuteProhibitionReasons () . clear () ; } OnPropertyChanged ( new org.ovirt.engine.core.compat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } }
public void setPmOptionsMap ( java.util.HashMap < java.lang.String , java.lang.String > value ) { pmOptionsMap = value ; pmOptions = org.ovirt.engine.core.common.businessentities.VdsStatic . PmOptionsMapToString ( value ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Disk update ( org.ovirt.engine.api.model.Disk disk ) { return performUpdate ( disk , new org.ovirt.engine.api.restapi.resource.BackendVmDiskResource.DiskResolver () , VdcActionType.UpdateVmDisk , new org.ovirt.engine.api.restapi.resource.BackendVmDiskResource.UpdateParametersProvider () ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
public org.ovirt.engine.core.common.businessentities.network.Network getNetworkByVnicProfileId ( org.ovirt.engine.core.compat.Guid vnicProfileId ) { org.ovirt.engine.core.common.businessentities.network.VnicProfile vnicProfile = getVnicProfile ( vnicProfileId ) ; return getNetworkByVnicProfile ( vnicProfile ) ; }
public boolean hastBufferOutputComponent () { boolean hastBufferOutput = false ; hastBufferOutput = true ; return hastBufferOutput ; }
void mockSessionDataContainer () { org.mockito.Mockito . doReturn ( org.ovirt.engine.core.bll.ConfigureConsoleOptionsQueryTest.SSO_TOKEN ) . when ( sessionDataContainer ) . getSsoAccessToken ( org.mockito.Matchers . anyString () ) ; }
protected com.google.gwt.editor.client.EditorVisitor getEditorVisitor () { if ( ( visitor ) == null ) { visitor = new org.ovirt.engine.ui.common.editor.UiCommonEditorVisitor ( getEventMap () , getOwnerModels () ) ; } return visitor ; }
@ org.junit.Test public void canDoActionSucceedsOnDiskDomainCheckWhenStorageGuidInParamsMatches ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid storageId = org.ovirt.engine.core.compat.Guid . NewGuid () ; initializeCommand ( storageId ) ; mockVmWithDisk ( storageId ) ; mockStorageDomain ( storageId ) ; mockStoragePoolIsoMap () ; runAndAssertCanDoActionSuccess () ; }
public org.ovirt.engine.core.bll.ValidationResult snapshotExists ( org.ovirt.engine.core.common.businessentities.Snapshot snapshot ) { return createSnapshotExistsResult ( ( snapshot != null ) ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.AuditLog > searchAuditLogEvents () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getAuditLogDao () , false ) ; }
@ org.junit.Test public void testRemoveWithCustomGlobalHeader () { clusterService . remove () . send () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , getLastRequestHeaders () . get ( STRING_CONSTANT ) . getFirst () ) ; }
@ org.junit.Test public void testGetAsyncTaskIdsByInvalidStoragePoolId () { java.util.List < org.ovirt.engine.core.compat.Guid > guids = dao . getAsyncTaskIdsByStoragePoolId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertNotNull ( guids ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , guids . size () ) ; }
@ javax.annotation.PostConstruct public void create () { checkDBConnectivity () ; try { initialize () ; } catch ( java.lang.Exception ex ) { org.ovirt.engine.core.bll.Backend.log . error ( STRING_CONSTANT , ex ) ; throw ex ; } }
@ java.lang.Override public void onSuccess ( java.lang.Object model1 , java.lang.Object result1 ) { org.ovirt.engine.ui.uicommonweb.models.SearchableListModel.PrivateAsyncCallback privateAsyncCallback1 = ( ( org.ovirt.engine.ui.uicommonweb.models.SearchableListModel.PrivateAsyncCallback ) ( model1 ) ) ; privateAsyncCallback1 . ApplySearchPageSize ( ( ( java.lang.Integer ) ( result1 ) ) ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.DbUser > getAllTimeLeasedUsersForVm ( int vmid ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vmid ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance , parameterSource ) ; }
private void domainListNotEmpty () { org.mockito.Mockito . when ( sdList . isEmpty () ) . thenReturn ( false ) ; org.mockito.Mockito . when ( sdList . size () ) . thenReturn ( NUMBER_CONSTANT ) ; }
private void onCancelUpload () { org.ovirt.engine.ui.uicommonweb.models.storage.UploadImageModel . onCancelUpload ( ( ( org.ovirt.engine.ui.uicommonweb.models.ConfirmationModel ) ( getWindow () ) ) , getSelectedItems () ) ; }
private org.springframework.jdbc.core.namedparam.MapSqlParameterSource createLabelParametersMapper ( org.ovirt.engine.core.compat.Guid vfsConfigId , java.lang.String label ) { return getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vfsConfigId ) . addValue ( STRING_CONSTANT , label ) ; }
protected java.lang.Long asLong ( java.lang.String id ) { try { return java.lang.Long . valueOf ( id ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new org.ovirt.engine.api.restapi.utils.MalformedIdException ( e ) ; } }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.Erratum erratum ) { return erratum . getTitle () ; }
private boolean hasVolumeBricksOnServer () { if ( ( org.ovirt.engine.core.bll.RemoveVdsCommand . getGlusterBrickDao () . getGlusterVolumeBricksByServerId ( org.ovirt.engine.core.bll.RemoveVdsCommand . getVdsId () ) . size () ) > NUMBER_CONSTANT ) { return true ; } else { return false ; } }
@ java.lang.Override public void validateEnums ( org.ovirt.engine.api.model.CPU cpu ) { if ( cpu != null ) { if ( cpu . isSetArchitecture () ) { org.ovirt.engine.api.common.util.EnumValidator . validateEnum ( org.ovirt.engine.api.model.Architecture . class , cpu . getArchitecture () , true ) ; } } }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getStorageDomainDao () ; existingDomain = dao . get ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_DOMAIN_ID ) ; newStaticDomain = new org.ovirt.engine.core.common.businessentities.StorageDomainStatic () ; newStaticDomain . setstorage ( STRING_CONSTANT ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyDisabledGotEnabledNotSetPolicyNotSetUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; org.ovirt.engine.core.common.businessentities.UsbPolicy currentPolicy = org.ovirt.engine.core.common.businessentities.UsbPolicy.DISABLED ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , currentPolicy ) , currentPolicy ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.job.StepEnum getCommandStep () { return org.ovirt.engine.core.common.job.StepEnum.COPY_VOLUME ; }
org.ovirt.engine.ui.common.widget.table.SimpleActionTable < org.ovirt.engine.core.common.businessentities.AuditLog > createActionTable ( org.ovirt.engine.ui.common.uicommon.model.SearchableTabModelProvider < org.ovirt.engine.core.common.businessentities.AuditLog , > modelProvider , com.google.gwt.event.shared.EventBus eventBus , org.ovirt.engine.ui.common.system.ClientStorage clientStorage ) { return new org.ovirt.engine.ui.common.widget.table.SimpleActionTable ( modelProvider , getTableResources () , eventBus , clientStorage ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.scheduling.ClusterPolicy > list = returnValue . getReturnValue () ; java.util.Collections . sort ( list , new org.ovirt.engine.ui.uicommonweb.Linq.ClusterPolicyComparator () ) ; setItems ( list ) ; }
public void addTerminationDialog ( java.util.List < java.util.concurrent.Callable < java.lang.Boolean > > dialog ) { _terminationDialog . addAll ( dialog ) ; }
private void assertInvalidVolumeInfoCombination ( org.ovirt.engine.core.common.businessentities.storage.VolumeFormat volumeFormat , org.ovirt.engine.core.common.businessentities.storage.VolumeType volumeType , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { setupVolumeFormatAndTypeTest ( volumeFormat , volumeType , storageType ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_DISK_CONFIGURATION_NOT_SUPPORTED ) ; }
private void mockBackend () { org.mockito.Mockito . when ( backend . runAction ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( new org.ovirt.engine.core.common.action.ActionReturnValue () ) ; }
public org.ovirt.engine.core.compat.Version getCompatibilityVersion ( org.ovirt.engine.core.common.businessentities.VM vm ) { return getCompatibilityVersion ( vm . getStaticData () ) ; }
@ java.lang.Override public void markAsValid () { if ( editorStateValid ) { super . markAsValid () ; } labelTooltip . setText ( labelConfiguredTooltip ) ; setLabelTooltipStyle ( labelConfiguredTooltip ) ; contentWidgetContainerTooltip . setText ( contentWidgetContainerConfiguredTooltip ) ; }
public void enforceClone ( java.lang.String prohibitReason ) { getClone () . setEntity ( true ) ; getClone () . setIsChangeable ( false ) ; getClone () . setChangeProhibitionReason ( prohibitReason ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.network.Network x , org.ovirt.engine.core.common.businessentities.network.Network y ) { return x . getname () . compareTo ( y . getname () ) ; }
private void setVmIdOnVfsDevices ( org.ovirt.engine.core.compat.Guid vmId , java.util.Set < org.ovirt.engine.core.common.businessentities.HostDevice > vfs ) { for ( org.ovirt.engine.core.common.businessentities.HostDevice vf : vfs ) { hostDeviceDao . setVmIdOnHostDevice ( vf . getId () , vmId ) ; } }
@ java.lang.Override protected org.ovirt.engine.core.common.queries.VdcQueryParametersBase getQueryParameters () { return new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) ; }
private void mapIsEmpty ( final java.util.Map < java.lang.String , java.lang.String > map ) { junit.framework.Assert . assertEquals ( NUMBER_CONSTANT , map . size () ) ; }
protected boolean isWindows () { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isWindowsOsType ( osId ) ; }
public java.lang.String getSessionId () { if ( ( sessionid ) == null ) { sessionid = STRING_CONSTANT ; } return sessionid ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String suggestedDiskAlias = ( ( java.lang.String ) ( returnValue ) ) ; org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel diskModel = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel ) ( model ) ) ; diskModel . getAlias () . setEntity ( suggestedDiskAlias ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return ( object . getCluster () ) == null ? false : object . getCluster () . getis_display () ? constants . displayNetwork () : constants . empty () ; }
protected boolean isVersionSupportedForShareable ( org.ovirt.engine.core.common.businessentities.Disk disk , java.lang.String compVersion ) { if ( ( disk . getDiskStorageType () ) == ( org.ovirt.engine.core.common.businessentities.Disk.DiskStorageType.IMAGE ) ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.ShareableDiskEnabled , compVersion ) ; } return true ; }
private void raiseQueryStartedEvent ( final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryType > queryTypeList , final java.lang.String context ) { for ( org.ovirt.engine.core.common.queries.VdcQueryType queryType : queryTypeList ) { raiseQueryStartedEvent ( queryType , context ) ; } }
public static < TSource > TSource firstOrDefault ( java.lang.Iterable < TSource > source ) { if ( source != null ) { for ( TSource item : source ) { return item ; } } return null ; }
@ org.junit.Test public void testOnlyLoginNameWhenNoDirectorySet () { org.ovirt.engine.core.common.businessentities.aaa.DbUser user = new org.ovirt.engine.core.common.businessentities.aaa.DbUser () ; user . setLoginName ( STRING_CONSTANT ) ; user . setDomain ( STRING_CONSTANT ) ; command . setCurrentUser ( user ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , command . getConsoleUserName () ) ; }
public void removeStorageDomain ( org.ovirt.vdsmfake.domain.StorageDomain storageDomain ) { storageDomainMap . remove ( storageDomain . getId () ) ; org.ovirt.vdsmfake.domain.VdsmManager.log . info ( STRING_CONSTANT , storageDomain . getId () ) ; removeObject ( storageDomain ) ; }
@ org.junit.Test public void testGetStorageDomainWithCorrectStatus () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getStorageDomain ( FixturesTool.STORAGE_POOL_NFS_INACTIVE_ISO , StorageDomainType.ISO , StorageDomainStatus.Inactive ) ; org.junit.Assert . assertEquals ( FixturesTool.STORAGE_DOMAIN_NFS_INACTIVE_ISO , result . getId () ) ; }
@ org.junit.Test public void validateSucceeds () { org.junit.Assert . assertTrue ( cmd . validate () ) ; }
private org.ovirt.engine.core.bll.network.cluster.AttachNetworkClusterValidator createNetworkClusterValidator () { return new org.ovirt.engine.core.bll.network.cluster.AttachNetworkClusterValidator ( interfaceDao , networkDao , org.ovirt.engine.core.bll.network.cluster.AttachNetworkToClusterInternalCommand . getNetworkCluster () ) ; }
public void setVmtGuid ( org.ovirt.engine.core.compat.Guid value ) { this . vmStatic . setVmtGuid ( value ) ; }
@ java.lang.Override public void cleanup () { driver . cleanup () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > returnValue ) { allNetworks = returnValue ; queryQoss () ; }
private java.lang.String getkeyForCheck () { return STRING_CONSTANT . equals ( getTimeoutObjectId () ) ? getKey () : java.lang.String . format ( STRING_CONSTANT , getKey () , getTimeoutObjectId () ) ; }
private org.ovirt.engine.core.common.businessentities.VdsStatic getVdsStatic () { org.ovirt.engine.core.common.businessentities.VdsStatic vds = new org.ovirt.engine.core.common.businessentities.VdsStatic () ; vds . setId ( new org.ovirt.engine.core.compat.Guid () ) ; vds . setHostName ( org.ovirt.engine.core.bll.gluster.GetGlusterServersForImportQueryTest.NEW_SERVER ) ; return vds ; }
@ java.lang.Override public void setForceHelp ( java.lang.String forceHelpText ) { boolean isForceHelpNonEmpty = forceHelpText != null ; if ( isForceHelpNonEmpty ) { geoRepForceHelpIcon . setTitle ( forceHelpText ) ; } geoRepForceHelpIcon . setVisible ( isForceHelpNonEmpty ) ; }
@ org.junit.jupiter.api.Test @ org.ovirt.engine.core.utils.MockedConfig ( value = STRING_CONSTANT ) public void testConfigCustomPolicy () { assertSerialNumber ( org.ovirt.engine.core.vdsbroker.vdsbroker.VmSerialNumberBuilderTest.CUSTOM_CONFIG_SERIAL ) ; }
protected void mockBackendStatusChange ( boolean succeeded ) { mockBackendStatusChange ( succeeded , EngineError.GlusterHookEnableFailed ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getActionGroupDao () ; existingActionMap = dao . getActionVersionMapByActionType ( VdcActionType.AddVm ) ; newActionMap = new org.ovirt.engine.core.common.businessentities.ActionVersionMap ( org.ovirt.engine.core.common.action.VdcActionType.ActivateStorageDomain , STRING_CONSTANT , STRING_CONSTANT ) ; }
public static java.lang.String resolveOVirtISOsRepositoryPath () { return org.ovirt.engine.core.common.config.ConfigUtil . resolvePath ( org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.DataDir ) , org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.oVirtISOsRepositoryPath ) ) ; }
public void getGlusterVolumeBrickDetails ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid clusterId , org.ovirt.engine.core.compat.Guid volumeId , org.ovirt.engine.core.compat.Guid brickId ) { org.ovirt.engine.core.common.queries.gluster.GlusterVolumeAdvancedDetailsParameters parameters = new org.ovirt.engine.core.common.queries.gluster.GlusterVolumeAdvancedDetailsParameters ( clusterId , volumeId , brickId , true ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetGlusterVolumeAdvancedDetails , parameters , aQuery ) ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testGetValidatorWithOutKey () { org.ovirt.engine.core.config.EngineConfigMap engineConfigMap = org.mockito.Mockito . mock ( org.ovirt.engine.core.config.EngineConfigMap . class ) ; org.ovirt.engine.core.config.validation.ConfigActionType setAction = org.ovirt.engine.core.config.validation.ConfigActionType.ACTION_GET ; setAction . validate ( engineConfigMap ) ; }
private void initTabAvailabilityListeners () { highAvailabilityTab . setVisible ( false ) ; isStatelessEditor . setVisible ( true ) ; numOfMonitorsEditor . setVisible ( true ) ; allowConsoleReconnectEditor . setVisible ( true ) ; expander . setVisible ( true ) ; }
public void setModel ( java.lang.Object model ) { this . model = model ; }
private void addStorageDomainOvfInfoToDb ( org.ovirt.engine.core.compat.Guid diskId ) { org.ovirt.engine.core.common.businessentities.StorageDomainOvfInfo storageDomainOvfInfo = new org.ovirt.engine.core.common.businessentities.StorageDomainOvfInfo ( org.ovirt.engine.core.bll.CreateOvfVolumeForStorageDomainCommand . getStorageDomainId () , null , diskId , org.ovirt.engine.core.common.businessentities.StorageDomainOvfInfoStatus.DISABLED , null ) ; org.ovirt.engine.core.bll.CreateOvfVolumeForStorageDomainCommand . getStorageDomainOvfInfoDao () . save ( storageDomainOvfInfo ) ; }
@ java.lang.Override protected org.ovirt.engine.core.aaa.DirectoryUser getEntity ( int index ) { return new org.ovirt.engine.core.aaa.DirectoryUser ( DOMAIN , EXTERNAL_IDS [ index ] , NAMES [ index ] ) ; }
@ java.lang.Override public final org.ovirt.engine.core.compat.Version getVersionValue ( java.lang.String name , java.lang.String defaultValue ) { return ( ( org.ovirt.engine.core.compat.Version ) ( getValue ( DataType.Version , name , defaultValue ) ) ) ; }
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { model . setIsEveryoneSelected ( true ) ; getView () . changeStateOfElementsWhenAccessIsForEveryone ( true ) ; }
@ java.lang.Override protected void configure () { install ( new org.ovirt.engine.ui.userportal.gin.SystemModule () ) ; install ( new org.ovirt.engine.ui.userportal.gin.UiCommonModule () ) ; install ( new org.ovirt.engine.ui.userportal.gin.PresenterModule () ) ; install ( new org.ovirt.engine.ui.userportal.gin.UtilsModule () ) ; }
@ org.junit.Test public void encodeDecodeWithEmptyDiskDescription ( ) throws java.lang.Exception { disk . setDiskAlias ( STRING_CONSTANT ) ; disk . setDiskDescription ( STRING_CONSTANT ) ; assertDiskDescriptionMap ( disk , generateDiskAliasJsonEntry ( STRING_CONSTANT ) , generateDiskDescriptionJsonEntry ( STRING_CONSTANT ) ) ; assertDiskDescriptionDecoding ( disk ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { enableSinglePCI ( ( ( getModel () . getDisplayType () . getSelectedItem () ) == ( org.ovirt.engine.core.common.businessentities.DisplayType.qxl ) ) ) ; }
@ java.lang.Override protected void setUpTestServlet ( ) throws java.security.NoSuchAlgorithmException { super . setUpTestServlet () ; org.mockito.Mockito . doReturn ( new java.util.ArrayList < org.ovirt.engine.ui.frontend.server.gwt.plugin.PluginData > () ) . when ( testServlet ) . getPluginData () ; }
@ org.junit.Test public void testJsonEmptyDiskDescription ( ) throws java.io.IOException { disk . setDiskAlias ( STRING_CONSTANT ) ; disk . setDiskDescription ( STRING_CONSTANT ) ; assertDiskDescriptionMap ( disk ) ; }
public void setLastVdsRunOn ( org.ovirt.engine.core.compat.Guid value ) { this . vmDynamic . setLastVdsRunOn ( value ) ; }
private void handleResult ( org.ovirt.engine.core.common.vdscommands.VDSFenceReturnValue result ) { if ( wasSkippedDueToPolicy ( result ) ) { org.ovirt.engine.core.bll.FenceVdsBaseCommand . setCommandShouldBeLogged ( false ) ; org.ovirt.engine.core.bll.FenceVdsBaseCommand . setSucceeded ( false ) ; } else { setSucceeded ( result . getSucceeded () ) ; } setActionReturnValue ( result ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
private org.ovirt.engine.core.common.queries.VdcQueryReturnValue getErrorQueryReturnValue ( org.ovirt.engine.core.common.errors.EngineMessage errorMessage ) { org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue = new org.ovirt.engine.core.common.queries.VdcQueryReturnValue () ; returnValue . setSucceeded ( false ) ; returnValue . setExceptionString ( errorMessage . toString () ) ; return returnValue ; }
public void enablePluginInvocation () { canInvokePlugins = true ; for ( org.ovirt.engine.ui.webadmin.plugin.Plugin plugin : getPlugins () ) { initPlugin ( plugin ) ; } }
@ java.lang.Override public void markAsValid () { if ( editorStateValid ) { super . markAsValid () ; } label . setEnabled ( true ) ; contentWidgetContainerTooltip . setText ( contentWidgetContainerConfiguredTooltip ) ; }
@ org.junit.Test public void add () { runAddAndVerify ( createNewInterface () , false , org.mockito.Mockito . times ( NUMBER_CONSTANT ) , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.OS_ID , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.VERSION_3_2 ) ; }
@ org.junit.Test public void testForValue () { org.junit.Assert . assertEquals ( STRING_CONSTANT , VdcQueryType.GetAgentFenceOptions , org.ovirt.engine.core.common.queries.VdcQueryType . forValue ( VdcQueryType.GetAgentFenceOptions . getValue () ) ) ; }
private void failWith ( org.ovirt.engine.core.common.errors.EngineMessage failure ) { org.ovirt.engine.core.bll.GetErrataCountsForHostQuery . getQueryReturnValue () . setExceptionString ( failure . name () ) ; org.ovirt.engine.core.bll.GetErrataCountsForHostQuery . getQueryReturnValue () . setSucceeded ( false ) ; }
static void verifyModelSpecific ( org.ovirt.engine.api.model.VmPool model ) { assertNotNull ( model . getCluster () ) ; assertNotNull ( model . getCluster () . getId () ) ; }
public java.lang.String getMasterStorageDomainId () { return ( masterStorageDomainId ) == null ? id : masterStorageDomainId ; }
private org.ovirt.engine.core.common.businessentities.Cluster getCluster () { org.ovirt.engine.core.common.businessentities.Cluster cluster = new org.ovirt.engine.core.common.businessentities.Cluster () ; cluster . setId ( clusterId ) ; cluster . setVirtService ( false ) ; cluster . setGlusterService ( true ) ; return cluster ; }
@ java.lang.Override public void markAsValid () { valid = true ; applyCommonValidationStyles () ; getValidatedWidgetStyle () . setBorderColor ( STRING_CONSTANT ) ; }
public static java.util.List < java.lang.String > runAndAssertSetActionMessageParameters ( org.ovirt.engine.core.bll.CommandBase < > command , org.ovirt.engine.core.common.errors.EngineMessage . . . messages ) { return org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertSetActionMessageParameters ( STRING_CONSTANT , command , messages ) ; }
public abstract com.google.gwt.safehtml.shared.SafeHtml getTooltip ( T object ) ;
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { context.dataCenterList = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.storage_pool > ) ( returnValue ) ) ; SetDefaultNames5 () ; }
@ java.lang.Override protected java.lang.String getClusterName () { return getEntity () . getClusterName () ; }
@ java.lang.Override public com.google.gwt.resources.client.ImageResource getValue ( org.ovirt.engine.core.common.businessentities.Disk object ) { return ( object . getDiskStorageType () ) == ( org.ovirt.engine.core.common.businessentities.Disk.DiskStorageType.LUN ) ? org.ovirt.engine.ui.common.widget.uicommon.disks.DisksViewColumns.resources . externalDiskIcon () : null ; }
@ org.junit.Test public void testJsonNullDiskDescription ( ) throws java.io.IOException { disk . setDiskAlias ( STRING_CONSTANT ) ; disk . setDiskDescription ( null ) ; assertDiskDescriptionMap ( disk ) ; }
@ org.junit.Test public void testBadId ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackImageProviderResource ( STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
private void updateVlanTagChangeability () { getVLanTag () . setIsChangable ( getHasVLanTag () . getEntity () ) ; }
private int getDefaultOsId ( org.ovirt.engine.core.common.businessentities.ArchitectureType architecture ) { java.lang.Integer defaultArchOsId = osRepository . getDefaultOSes () . get ( architecture ) ; return defaultArchOsId == null ? NUMBER_CONSTANT : defaultArchOsId ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain createDomain ( org.ovirt.engine.core.common.businessentities.StorageDomainDynamic domainDynamic ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; domain . setStorageName ( STRING_CONSTANT ) ; return domain ; }
@ org.junit.Test public void canDoActionDiskIsOvfStore ( ) throws java.lang.Exception { initializeCommand ( ImageOperation.Move ) ; initVmDiskImage ( false ) ; command . getImage () . setOvfStore ( true ) ; org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( command , VdcBllMessages.ACTION_TYPE_FAILED_OVF_DISK_NOT_SUPPORTED ) ; }
@ java.lang.Override protected boolean canDoAction () { boolean result = isUserCanBeAuthenticated () ; if ( ! result ) { logAutheticationFailure () ; } return result ; }
public void AddDisk () { if ( ( getEntity () ) != null ) { AddDiskUpdateData () ; } }
@ org.junit.Test public void testGet64bitOss ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , OsRepositoryImpl.INSTANCE . get64bitOss () . size () ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getSourceImages () { if ( ( _sourceImages ) == null ) { _sourceImages = org.ovirt.engine.core.bll.RemoveSnapshotCommand . getDiskImageDAO () . getAllSnapshotsForVmSnapshot ( org.ovirt.engine.core.bll.RemoveSnapshotCommand . getParameters () . getSnapshotId () ) ; } return _sourceImages ; }
@ org.junit.Test ( expected = java.lang.IllegalArgumentException . class ) public void testParseMissingType () { org.ovirt.engine.api.restapi.util.FenceOptionsParser . parse ( STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { if ( RemoveVmTemplateImages () ) { setSucceeded ( true ) ; } return null ; }
protected javax.ws.rs.core.UriInfo setUpRestoreExpectations () { return setUpActionExpectations ( VdcActionType.RestoreAllSnapshots , org.ovirt.engine.core.common.action.RestoreAllSnapshotsParameters . class , new java.lang.String [] { STRING_CONSTANT , STRING_CONSTANT } , new java.lang.Object [] { org.ovirt.engine.api.restapi.resource.BackendSnapshotResourceTest.VM_ID , org.ovirt.engine.core.common.businessentities.SnapshotActionEnum.COMMIT } , true , true , null ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source == null ) || ( ( java.lang.Boolean ) ( source ) ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( ( source != null ) && ( ! ( ( ( java.util.List < > ) ( source ) ) . isEmpty () ) ) ) { return true ; } return false ; }
@ java.lang.Override public boolean Match ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getstatus () ) != ( status ) ; }
public void triggerNow () { if ( ( updateTimerJobId ) != null ) { scheduler . triggerJob ( updateTimerJobId ) ; } }
@ org.junit.Test public void areAllVfsFreeFalseHasVlanDevice () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertFalse ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
private boolean isRngDeviceSupported ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model ) { org.ovirt.engine.core.compat.Version clusterVersion = clusterVersionOrNull ( model ) ; return clusterVersion == null ? false : ( ( java.lang.Boolean ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.VirtIoRngDeviceSupported , clusterVersion . getValue () ) ) ) ; }
public void setnet_config_dirty ( java.lang.Boolean value ) { mVdsDynamic . setnet_config_dirty ( value ) ; }
@ org.junit.Before public void setupMock ( ) throws java.lang.Exception { org.mockito.Mockito . when ( jobDaoMock . get ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.jobId ) ) . thenReturn ( makeTestJob ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.jobId ) ) ; }
@ java.lang.Override public javax.ws.rs.core.Response setupNetworks ( org.ovirt.engine.api.model.Action action ) { validateParameters ( action , STRING_CONSTANT ) ; org.ovirt.engine.core.common.action.SetupNetworksParameters parameters = toParameters ( action ) ; return performAction ( org.ovirt.engine.core.common.action.VdcActionType.SetupNetworks , parameters , action ) ; }
private org.ovirt.engine.core.bll.gluster.StartRebalanceGlusterVolumeCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.StartRebalanceGlusterVolumeCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRebalanceParameters ( volumeId , false , false ) , null ) ; }
public void getAllNetworkProviders ( org.ovirt.engine.ui.frontend.AsyncQuery query ) { getAllProvidersByProvidedEntity ( query , VdcObjectType.Network ) ; }
protected java.lang.String getActiveTabHistoryToken () { return activeTabHistoryToken ; }
private static boolean vmIsRunningStateless ( org.ovirt.engine.core.compat.Guid vmId ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getSnapshotDao () . exists ( vmId , SnapshotType.STATELESS ) ; }
@ java.lang.Override public java.security.cert.X509Certificate [] getAcceptedIssuers () { return new java.security.cert.X509Certificate [] {} ; }
@ org.junit.Before public void setupMock ( ) throws java.lang.Exception { org.mockito.Mockito . doReturn ( jobDaoMock ) . when ( command ) . getJobDao () ; org.mockito.Mockito . when ( jobDaoMock . get ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.jobId ) ) . thenReturn ( makeTestJob ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.jobId ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { context.clusterFoundByName = org.ovirt.engine.ui.uicommonweb.Linq . FirstOrDefault ( ( ( java.lang.Iterable < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ) ; prepare2 () ; }
@ java.lang.Override protected void postSave () { super . postSave () ; sourceModel . updateOptions ( true ) ; }
public void setVmSnapshotId ( org.ovirt.engine.core.compat.Guid snapshotId ) { getImage () . setSnapshotId ( snapshotId ) ; }
private org.ovirt.engine.core.common.businessentities.VM initializeMock ( final int domainSizeGB ) { mockVmTemplateDaoReturnVmTemplate () ; mockStorageDomainDaoGetForStoragePool ( domainSizeGB ) ; mockStorageDomainDaoGet ( domainSizeGB ) ; mockConfig () ; return org.ovirt.engine.core.bll.AddVmCommandTest . createVm () ; }
public int getServerCount ( org.ovirt.engine.core.compat.Guid clusterId ) { return getVdsDao () . getAllForVdsGroup ( clusterId ) . size () ; }
private org.ovirt.engine.core.common.businessentities.network.NetworkCluster getOldNetworkCluster () { if ( ( oldNetworkCluster ) == null ) { oldNetworkCluster = org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getNetworkClusterDAO () . get ( org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getNetworkCluster () . getId () ) ; } return oldNetworkCluster ; }
private org.ovirt.engine.core.common.businessentities.storage_domains mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId , int availableSize , int usedSize ) { return mockStorageDomain ( storageId , NUMBER_CONSTANT , NUMBER_CONSTANT , StorageType.UNKNOWN , new org.ovirt.engine.core.compat.Version () ) ; }
@ java.lang.Override protected void PostDiscoverTargets ( java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.storage.SanTargetModel > newItems ) { super . PostDiscoverTargets ( newItems ) ; InitializeItems ( null , newItems ) ; lastDiscoveredTargets . clear () ; lastDiscoveredTargets . addAll ( newItems ) ; }
@ java.lang.Override protected void setActionMessageParameters () { addCanDoActionMessage ( VdcBllMessages.VAR__ACTION__REBALANCE_START ) ; super . setActionMessageParameters () ; }
@ java.lang.Override public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getSelectedItems () { return getSelectedItems ( false ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { getView () . setTestResultImage ( model . getTestResult () . getEntity () ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase endAction ( org.ovirt.engine.core.common.action.VdcActionType actionType , org.ovirt.engine.core.common.action.VdcActionParametersBase parameters , org.ovirt.engine.core.bll.context.CommandContext context ) { org.ovirt.engine.core.bll.CommandBase < > command = org.ovirt.engine.core.bll.CommandsFactory . CreateCommand ( actionType , parameters ) ; command . setContext ( context ) ; return command . endAction () ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.Provider < > > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.provider.ProviderDaoDbFacadeImpl.ProviderRowMapper.INSTANCE ) ; }
@ org.junit.Test public void validateSucceeds () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.RemoveGlusterServerCommand ( new org.ovirt.engine.core.common.action.gluster.RemoveGlusterServerParameters ( org.ovirt.engine.core.bll.gluster.RemoveGlusterServerCommandTest.CLUSTER_ID , org.ovirt.engine.core.bll.gluster.RemoveGlusterServerCommandTest.SERVER_NAME , false ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
@ org.junit.Test public void addWithExistingMacAddressSucceed () { runAddAndVerify ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () , false ) ; }
public void setUserId ( final org.ovirt.engine.core.compat.Guid value ) { mUserId = value . getValue () ; }
@ java.lang.Override protected void onReveal () { super . onReveal () ; modelProvider . onMainViewSelected () ; }
@ org.junit.Test public void shouldHaveNotingToMigrate () { org.mockito.Mockito . verify ( arem , org.mockito.Mockito . never () ) . migrateVM ( org.mockito.ArgumentMatchers . any () ) ; }
private void enableEditPoolFields () { descriptionEditor . setEnabled ( true ) ; prestartedVmsEditor . setEnabled ( true ) ; editPrestartedVmsEditor . setEnabled ( true ) ; incraseNumOfVmsEditor . setEnabled ( true ) ; editMaxAssignedVmsPerUserEditor . setEnabled ( true ) ; }
@ org.junit.Test public void testExecuteCommandNoUpdateNonInheritableRole () { getRole () . setAllowsViewingChildren ( false ) ; getParams () . setActionGroups ( new java.util.ArrayList ( java.util.Collections . singletonList ( ActionGroup.CREATE_VM ) ) ) ; getCommand () . executeCommand () ; verifyRoleSaving ( false ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.VmPool pool , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
private org.ovirt.engine.core.common.vdscommands.VDSReturnValue createVDSReturnValue ( org.ovirt.engine.core.compat.Guid serverId , org.ovirt.engine.core.common.businessentities.gluster.GlusterServiceStatus status ) { return createVDSReturnValue ( createServerServices ( serverId , status ) ) ; }
public static org.ovirt.engine.core.common.businessentities.network.VmInterfaceType getDefaultNicType () { return org.ovirt.engine.core.common.businessentities.network.VmInterfaceType.pv ; }
private static void generateRsdlFile ( org.ovirt.engine.api.rsdl.MetaData metadata , java.lang.String outputFileName , java.util.List < java.lang.String > rels ) throws java.io.IOException , java.lang.ClassNotFoundException { org.ovirt.engine.api.model.RSDL rsdl = org.ovirt.engine.api.rsdl.RsdlManager . buildRsdl ( metadata , rels ) ; org.ovirt.engine.api.rsdl.RsdlManager . serializeRsdl ( rsdl , outputFileName ) ; }
public java.util.Set < org.ovirt.engine.core.compat.Version > getSupportedClusterLevels () { java.util.Set < org.ovirt.engine.core.compat.Version > versions = org.ovirt.engine.core.common.config.Config . < java.util.HashSet < org.ovirt.engine.core.compat.Version > > getValue ( ConfigValues.SupportedClusterLevels ) ; return versions ; }
@ org.junit.Test public void testGetStorageTypesInPoolForSingleType () { org.ovirt.engine.core.compat.Guid poolId = FixturesTool.STORAGE_POOL_NFS ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageType > storageTypes = dao . getStorageTypesInPool ( poolId ) ; assertStorageTypes ( storageTypes , StorageType.NFS ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.compat.Guid > getCommandIdsByEntityId ( org.ovirt.engine.core.compat.Guid entityId ) { return commandsRepository . getCommandIdsByEntityId ( entityId ) ; }
protected void setImageStatus ( org.ovirt.engine.core.common.businessentities.ImageStatus imageStatus ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = getRelevantDiskImage () ; if ( diskImage != null ) { diskImage . setImageStatus ( imageStatus ) ; org.ovirt.engine.core.bll.ImagesHandler . updateImageStatus ( diskImage . getImage () . getId () , imageStatus ) ; } }
@ java.lang.Override public void update ( java.util.Observable o , java.lang.Object arg ) { createProfiles () ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { volumeSnapshotConfigModel . getClusterName () . setEntity ( cluster . getName () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VM getVm () { if ( getParameters () . isImportAsNewEntity () ) { return getParameters () . getVm () ; } return super . getVm () ; }
protected < T > void bindTypeAndImplAsSingleton ( java.lang.Class < T > type , java.lang.Class < ? extends T > impl ) { bind ( type ) . to ( impl ) ; bind ( impl ) . in ( com.google.inject.Singleton . class ) ; }
public org.ovirt.engine.core.common.businessentities.network.NetworkStatus getStatus () { return this . status ; }
@ org.junit.Test public void testGetWithInvalidId () { org.ovirt.engine.core.common.businessentities.VDS result = dao . get ( org.ovirt.engine.core.compat.Guid . NewGuid () ) ; org.junit.Assert . assertNull ( result ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity > getAllWithQuery ( java.lang.String query ) { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity > volumes = jdbcTemplate . query ( query , org.ovirt.engine.core.dao.gluster.GlusterVolumeDaoDbFacadeImpl.volumeRowMapper ) ; fetchRelatedEntities ( volumes ) ; return volumes ; }
@ java.lang.Override protected void setActionMessageParameters () { addCanDoActionMessage ( VdcBllMessages.VAR__ACTION__CREATE ) ; addCustomValue ( GlusterConstants.VOLUME_SNAPSHOT_NAME , getParameters () . getSnapshot () . getSnapshotName () ) ; super . setActionMessageParameters () ; }
public void setupMocks () { org.mockito.Mockito . when ( clusterDao . get ( org.ovirt.engine.core.bll.gluster.RefreshGlusterHooksCommandTest.CLUSTER_ID ) ) . thenReturn ( getCluster () ) ; }
public java.lang.String getDuration () { return java.lang.String . valueOf ( ( ( ( new java.util.Date () . getTime () ) - ( org.ovirt.engine.core.bll.MigrateVmCommand . getParameters () . getStartTime () . getTime () ) ) / NUMBER_CONSTANT ) ) ; }
private org.ovirt.engine.core.bll.gluster.ResetGlusterVolumeOptionsCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.ResetGlusterVolumeOptionsCommand ( new org.ovirt.engine.core.common.action.gluster.ResetGlusterVolumeOptionsParameters ( volumeId , null , false ) ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetAllAdGroupsQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getAdGroupDao () . getAll () ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpUriInfoExpectations () ) ; setUpGetEntityExpectations () ; verifyModel ( resource . get () ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.VmDevice > getWatchdogs () { return org.ovirt.engine.core.bll.AbstractVmWatchdogCommand . getVmDeviceDao () . getVmDeviceByVmIdAndType ( org.ovirt.engine.core.bll.AbstractVmWatchdogCommand . getParameters () . getId () , VmDeviceGeneralType.WATCHDOG ) ; }
private org.ovirt.engine.core.common.businessentities.StorageDomainStatus getStorageDomainStatus () { org.ovirt.engine.core.common.businessentities.StorageDomainStatus status = null ; if ( ( org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStorageDomain () ) != null ) { status = org.ovirt.engine.core.bll.storage.StorageDomainCommandBase . getStorageDomain () . getStatus () ; } return status ; }
@ java.lang.Override protected boolean validate () { return canPauseVm ( org.ovirt.engine.core.bll.PauseVmCommand . getParameters () . getVmId () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { hostModel . setPmProxyPreferences ( ( ( java.lang.String ) ( returnValue ) ) ) ; }
private java.util.Collection < org.ovirt.engine.core.common.businessentities.network.ExternalVnicProfileMapping > getVnicProfileMappings ( org.ovirt.engine.api.model.Action action ) { return org.ovirt.engine.api.restapi.types.ExternalVnicProfileMappingMapper . mapFromModel ( action . getVnicProfileMappings () ) ; }
@ org.junit.Test public void testQueryWithSameUserNoDisks () { assertExecuteQueryCommandResult ( getUser () . getId () , false , true ) ; }
protected void addVmDynamicToList ( org.ovirt.engine.core.common.businessentities.VmDynamic vmDynamic ) { vmDynamicToSave . put ( vmDynamic . getId () , vmDynamic ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StoragePoolStatus getRawValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getStatus () ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { neutronAgentPanel . setVisible ( neutronAgentModel . isPluginConfigurationAvailable () . getEntity () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.templates.CopyDiskModel copyDiskModel = ( ( org.ovirt.engine.ui.uicommonweb.models.templates.CopyDiskModel ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; copyDiskModel . onInitStorageDomains ( storageDomains ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.eventqueue.EventResult call () { return org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () . getEventListener () . masterDomainNotOperational ( masterDomainId , getParameters () . getStoragePoolId () , true ) ; }
@ org.junit.Before public void setUp () { storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; memoryDisks = new java.util.LinkedList <> () ; initFilter () ; }
@ org.junit.Before public void testSetup () { command . init () ; }
@ org.junit.Test public void formatStringTest4 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result ) ; }
protected org.ovirt.engine.core.bll.ValidationResult networkNotAttachedToCluster ( final org.ovirt.engine.core.common.businessentities.network.Network network ) { return org.ovirt.engine.core.bll.network.dc.NetworkCommon . getNetworkClusterDAO () . getAllForNetwork ( network . getId () ) . isEmpty () ? org.ovirt.engine.core.bll.ValidationResult.VALID : new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.dal.VdcBllMessages.NETWORK_CLUSTER_NETWORK_IN_USE ) ; }
private int getBlockSparseInitSizeInGB () { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.InitStorageSparseSizeInGB ) . intValue () ; }
@ java.lang.Override public void updateCommandExecuted ( org.ovirt.engine.core.compat.Guid commandId ) { commandsRepository . updateCommandExecuted ( commandId ) ; }
private java.util.Map < java.lang.String , java.lang.Object > generateMetaDataFile ( java.util.List < org.ovirt.engine.core.compat.Guid > vmAndTemplatesIds ) { java.util.Map < java.lang.String , java.lang.Object > data = new java.util.HashMap <> () ; addVmsStatus ( vmAndTemplatesIds , data ) ; return data ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { if ( ( i . getNetworkName () ) != null ) { return i . getNetworkName () . equals ( getParameters () . getNetwork () . getname () ) ; } return false ; }
@ java.lang.Override protected void executeCommand () { initConnectionList ( true ) ; for ( java.util.Map.Entry < org.ovirt.engine.core.common.businessentities.StorageType , java.util.List < org.ovirt.engine.core.common.businessentities.StorageServerConnections > > connectionToType : getConnectionsTypeMap () . entrySet () ) { disconnectStorageByType ( connectionToType . getKey () , connectionToType . getValue () ) ; } }
@ java.lang.Override public org.ovirt.engine.api.model.OpenstackVolumeAuthenticationKey update ( org.ovirt.engine.api.model.OpenstackVolumeAuthenticationKey resource ) { return performUpdate ( resource , new org.ovirt.engine.api.restapi.resource.openstack.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetLibvirtSecretById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateLibvirtSecret , new org.ovirt.engine.api.restapi.resource.openstack.BackendOpenStackVolumeAuthenticationKeyResource.UpdateParametersProvider () ) ; }
org.ovirt.engine.ui.common.widget.table.SimpleActionTable < org.ovirt.engine.core.common.businessentities.AuditLog > createActionTable ( org.ovirt.engine.ui.common.uicommon.model.SearchableTabModelProvider < org.ovirt.engine.core.common.businessentities.AuditLog , > modelProvider ) { return new org.ovirt.engine.ui.common.widget.table.SimpleActionTable < org.ovirt.engine.core.common.businessentities.AuditLog > ( modelProvider , getTableResources () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getClientStorage () ) ; }
@ java.lang.Override public void execute ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel model ) { getModel () . getEditConsoleCommand () . execute () ; }
public boolean connectToServer ( java.lang.String server , java.lang.String passwd , long timeout ) { this . server = server ; return wrapper . connect ( server , passwd , timeout ) ; }
private void RemoveVdsStaticFromDb () { getVdsStaticDao () . remove ( org.ovirt.engine.core.bll.RemoveVdsCommand . getVdsId () ) ; }
private org.ovirt.engine.core.common.job.Step generateNewEntity () { org.ovirt.engine.core.common.job.Step step = new org.ovirt.engine.core.common.job.Step ( org.ovirt.engine.core.common.job.StepEnum.EXECUTING ) ; step . setJobId ( org.ovirt.engine.core.dao.StepDaoTest.EXISTING_JOB_ID ) ; step . setStepNumber ( NUMBER_CONSTANT ) ; step . setDescription ( STRING_CONSTANT ) ; step . setCorrelationId ( STRING_CONSTANT ) ; return step ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public void setEntity ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData value ) { super . setEntity ( ( value == null ? null : value . getVm () ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeType parse ( java.lang.CharSequence text ) throws java.text.ParseException { return null ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > () : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; }
@ org.junit.Test public void getZeroSnapshotsByMemory () { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , dao . getNumOfSnapshotsByMemory ( org.ovirt.engine.core.dao.SnapshotDaoTest.NON_EXISTING_MEMORY_VOLUME ) ) ; }
public void setvm_description ( java.lang.String value ) { this . mVmStatic . setdescription ( value ) ; }
@ java.lang.Override protected void syncSearch () { if ( ( getEntity () ) == null ) { return; } super . syncSearch () ; super . syncSearch ( VdcQueryType.GetEventSubscribersBySubscriberIdGrouped , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity () . getuser_id () ) ) ; }
@ java.lang.Override public void setId ( org.ovirt.engine.core.common.businessentities.EngineBackupLogId id ) { doneAt = id . getDoneAt () ; scope = id . getScope () ; }
public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . id = id ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , null , true , null , null , org.ovirt.engine.core.bll.network.host.SetupNetworksHelperTest.DEFAULT_SPEED ) ; }
public static java.lang.String renderVmNamesList ( java.util.List < java.lang.String > names ) { return java.lang.String . join ( STRING_CONSTANT , names ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VM > getAllUsingQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.VmDAODbFacadeImpl.VMRowMapper.instance ) ; }
@ org.junit.Test public void testGetDefaultQuotaForStoragePool () { org.ovirt.engine.core.common.businessentities.Quota quota = dao . getDefaultQuotaForStoragePool ( FixturesTool.STORAGE_POOL_NFS ) ; org.junit.Assert . assertNotNull ( quota ) ; org.junit.Assert . assertEquals ( FixturesTool.STORAGE_POOL_NFS , quota . getStoragePoolId () ) ; org.junit.Assert . assertTrue ( quota . isDefault () ) ; }
@ java.lang.Override public void execute () { getRefreshCommand () . execute () ; }
@ java.lang.Override protected void toggleProfilesAvailability () { getProfiles () . setIsAvailable ( ( ( getIsVmNetwork () . getEntity () ) && ( ! ( originallyVmNetwork ) ) ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageType getEnum ( org.ovirt.engine.core.common.businessentities.StoragePool storage ) { return storage . getstorage_pool_type () ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetPermissionByRoleIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getPermissionDao () . getAllForRole ( org.ovirt.engine.core.bll.GetPermissionByRoleIdQuery . getParameters () . getId () ) ) ; }
@ org.junit.Before public void setUp () { org.mockito.Mockito . doReturn ( mockNetworkClusterDao ) . when ( underTest ) . getNetworkClusterDao () ; }
private boolean isRemovableStatus ( org.ovirt.engine.core.common.businessentities.VDSStatus status ) { switch ( status ) { case Up : case Down : return true ; default: return false ; } }
protected void toggleProfilesAvailability () { getProfiles () . setIsAvailable ( getIsVmNetwork () . getEntity () ) ; }
static java.lang.String replace ( java.lang.String sysPrepContent , java.lang.String pattern , java.lang.String value ) { return sysPrepContent . replaceAll ( java.util.regex.Pattern . quote ( pattern ) , java.util.regex.Matcher . quoteReplacement ( value ) ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > getAllWithQuery ( java.lang.String query ) { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > glusterHooks = jdbcTemplate . query ( query , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoDbFacadeImpl.glusterHookRowMapper ) ; return glusterHooks ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getAllImageSnapshots ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return org.ovirt.engine.core.bll.ImagesHandler . getAllImageSnapshots ( diskImage . getImageId () ) ; }
protected void endSuccessfullySynchronous () { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.bll.ExportVmCommand . getVm () ; org.ovirt.engine.core.bll.VmHandler . UnLockVm ( vm ) ; this . updateSnapshotOvf ( vm ) ; org.ovirt.engine.core.bll.ExportVmCommand . setSucceeded ( true ) ; }
@ org.junit.Test public void noCluster () { assertValidateFailure ( EngineMessage.VDS_CLUSTER_IS_NOT_VALID . toString () ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return storageDomain . getStorageName () ; }
public boolean remove ( java.util.Set < java.lang.String > memoryStates ) { return removeMemoryVolumes ( memoryStates ) ; }
private javax.ws.rs.core.Response actionSuccess ( org.ovirt.engine.api.model.Action action , java.lang.Object result ) { setActionItem ( action , result ) ; action . setStatus ( CreationStatus.COMPLETE . value () ) ; return javax.ws.rs.core.Response . ok () . entity ( action ) . build () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { return ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object . getEntity () ) ) . getName () ; }
public void getIrsImageList ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid storagePoolId ) { getIrsImageList ( aQuery , storagePoolId , false ) ; }
private boolean verifyCanDoActionMessagesContainMessage ( org.ovirt.engine.core.common.errors.EngineMessage message ) { return command . getReturnValue () . getCanDoActionMessages () . contains ( message . toString () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase doWith ( final org.ovirt.engine.core.common.businessentities.StorageDomain arg ) { final org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase params = new org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase ( arg . getId () , new org.ovirt.engine.core.compat.Guid ( arg . getStoragePoolId () . getUuid () ) ) ; params . setRunSilent ( true ) ; return params ; }
public void cancel () { setWindow ( null ) ; }
private void mockVds () { mockIsValidVdsCommand () ; mockGetImageDomainsListVdsCommand ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
private void assertValidVolumeInfoCombination ( org.ovirt.engine.core.common.businessentities.storage.VolumeFormat volumeFormat , org.ovirt.engine.core.common.businessentities.storage.VolumeType volumeType , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { setupVolumeFormatAndTypeTest ( volumeFormat , volumeType , storageType ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( command ) ; }
@ org.junit.Before @ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; vmID = org.ovirt.engine.core.compat.Guid . newGuid () ; }
public void runQuery ( final org.ovirt.engine.core.common.queries.VdcQueryType queryType , final org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters , final org.ovirt.engine.ui.frontend.AsyncQuery callback ) { runQuery ( queryType , parameters , callback , false ) ; }
@ org.junit.Test public void testConvertMegaBytesToTB () { long mb = ( NUMBER_CONSTANT * NUMBER_CONSTANT ) * NUMBER_CONSTANT ; int tbs = org.ovirt.engine.core.common.utils.SizeConverter . convert ( mb , SizeUnit.MiB , SizeUnit.TiB ) . intValue () ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , tbs ) ; }
private void setspice ( org.ovirt.engine.ui.uicommonweb.models.vms.ISpice value ) { privatespice = value ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getId () . equals ( getStorageDomain () . getId () ) ) && ( ( a . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ; }
@ java.lang.Override public java.lang.String getIpv4Address () { return nic . getIpv4Address () ; }
public java.util.List < java.lang.String > getFilteredId () { return new java.util.ArrayList < java.lang.String > ( this . filteredId ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.Quota getDefaultQuotaForStoragePool ( org.ovirt.engine.core.compat.Guid storagePoolId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , storagePoolId ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , getQuotaFromResultSet () , parameterSource ) ; }
public void setstorage_pool_name ( java.lang.String value ) { storage_pool_nameField = value ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > filterDataCenter ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > source ) { return org.ovirt.engine.ui.uicommonweb.Linq . where ( source , new org.ovirt.engine.ui.uicommonweb.Linq.DataCenterStatusPredicate ( org.ovirt.engine.core.common.businessentities.StoragePoolStatus.Up ) ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) { setItems ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( ReturnValue ) ) . getReturnValue () ) ) ) ; }
@ org.junit.Test public void replace_emptyBuilder () { runAndCheck ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
public org.ovirt.engine.core.common.businessentities.Snapshot getInPreview () { return getInPreview ( getItems () ) ; }
public static boolean IsVdsAttachedToTag ( org.ovirt.engine.core.compat.Guid tagId , int vdsId ) { return ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getTagDao () . getAllForVdsWithIds ( org.ovirt.engine.core.bll.TagsDirector . getInstance () . GetTagIdAndChildrenIds ( tagId ) ) . size () ) != NUMBER_CONSTANT ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addCdDevice ( org.ovirt.engine.core.compat.Guid vmId ) { return addCdDevice ( vmId , STRING_CONSTANT ) ; }
@ org.junit.Test @ java.lang.Override public void testList ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; setUpQueryExpectations ( STRING_CONSTANT ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
public static java.lang.String getSpiceBaseURL () { return ( ( org.ovirt.engine.ui.frontend.utils.FrontendUrlUtils . getRootURL () ) + ( org.ovirt.engine.ui.frontend.utils.BaseContextPathData . getRelativePath () ) ) + STRING_CONSTANT ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter ( org.ovirt.engine.core.common.businessentities.Cluster cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , org.ovirt.engine.core.common.scheduling.PerHostMessages messages ) { return getAcceptableHosts ( true , hosts , vm , messages ) ; }
@ org.ovirt.engine.ui.common.DefaultMessage ( value = STRING_CONSTANT ) java.lang.String diskNote ( ) ;
@ org.junit.Test public void testGetQuotaByAdElementId ( ) throws java.lang.Exception { java.util.List < org.ovirt.engine.core.common.businessentities.Quota > quotaByAdElementIdList = dao . getQuotaByAdElementId ( FixturesTool.USER_EXISTING_ID , FixturesTool.STORAGE_POOL_NFS , false ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , quotaByAdElementIdList . get ( NUMBER_CONSTANT ) . getQuotaName () ) ; }
@ org.junit.Test public void testGetAllForConnectionWithInvalidConnection () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForConnection ( org.ovirt.engine.core.utils.RandomUtils . instance () . nextString ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source == null ) || ( ( java.lang.Boolean ) ( source ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.ProfileParametersBase < org.ovirt.engine.core.common.businessentities.profiles.CpuProfile > getParameters () { org.ovirt.engine.core.common.action.CpuProfileParameters cpuProfileParameters = new org.ovirt.engine.core.common.action.CpuProfileParameters ( getProfile () ) ; cpuProfileParameters . setAddPermissions ( true ) ; return cpuProfileParameters ; }
@ org.junit.Test public void testValidModifiedBondsFailsWhenInsufficientNumberOfSlaves ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.Bond bond = createBond () ; doTestValidModifiedBonds ( bond , ValidationResult.VALID , new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.NETWORK_BONDS_INVALID_SLAVE_COUNT , org.ovirt.engine.core.utils.ReplacementUtils . getVariableAssignmentString ( EngineMessage.NETWORK_BONDS_INVALID_SLAVE_COUNT , bond . getName () ) ) , ValidationResult.VALID ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue result ) { boolean returnValue = result . getReturnValue () ; if ( returnValue ) { displayConsoleConnectConfirmPopup ( command ) ; } else { displayUserCantReconnectDialog () ; } }
public java.util.List < java.lang.String > getStorageDelay () { return storageDelay ; }
protected org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updateEntity ( org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates , boolean clearResourceId ) { return imageTransferUpdater . updateEntity ( updates , org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand . getCommandId () , clearResourceId ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { boolean isConsistent = ( ( java.lang.Boolean ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue () ) ) ; setConsoleAddressPartiallyOverridden ( ( ! isConsistent ) ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VM > getAllForVmPool ( org.ovirt.engine.core.compat.Guid vmPoolId ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.VmDAODbFacadeImpl.VMRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vmPoolId ) ) ; }
private org.ovirt.engine.core.common.businessentities.Network createNetwork ( java.lang.String networkName ) { return new org.ovirt.engine.core.common.businessentities.Network ( STRING_CONSTANT , STRING_CONSTANT , org.ovirt.engine.core.compat.Guid . NewGuid () , networkName , STRING_CONSTANT , STRING_CONSTANT , NUMBER_CONSTANT , null , false , NUMBER_CONSTANT , true ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network network ) { return network . getname () . equals ( getParameters () . getNetwork () . getname () ) ; }
private void initHandlers () { org.ovirt.engine.core.searchbackend.BaseConditionFieldAutoCompleter.tagsHandler = tagsDirector ; serviceLoader . load ( org.ovirt.engine.core.bll.VmHandler . class ) ; serviceLoader . load ( org.ovirt.engine.core.bll.VdsHandler . class ) ; serviceLoader . load ( org.ovirt.engine.core.bll.VmTemplateHandler . class ) ; org.ovirt.engine.core.bll.Backend.log . info ( STRING_CONSTANT ) ; }
public static org.ovirt.engine.api.model.Statistic setDatum ( org.ovirt.engine.api.model.Statistic statistic , java.lang.Long datum ) { if ( datum != null ) { return org.ovirt.engine.api.restapi.utils.StatisticResourceUtils . setDatum ( statistic , new java.math.BigDecimal ( datum ) ) ; } return statistic ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) org.ovirt.engine.api.resource.gluster.GlusterBrickResource getGlusterBrickSubResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) ;
@ java.lang.Override protected java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.gluster.BrickProfileDetails object ) { return object . getName () ; }
@ java.lang.Override public void initialize () { super . initialize () ; getModel () . setIsCustomPropertiesTabAvailable ( false ) ; }
public void setPhysicalTotal ( double physicalTotal ) { this . physicalTotal = physicalTotal ; }
@ java.lang.Override public com.google.gwt.resources.client.ImageResource getValue ( org.ovirt.engine.core.common.businessentities.network.Network nwk ) { return getValue ( nwk . getCluster () ) ; }
@ org.junit.Test public void testGetAllByStoragePoolAndConnection () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllByStoragePoolAndConnection ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID , org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_CONNECTION ) ; org.ovirt.engine.core.dao.StorageDomainDAOTest . assertGetAllForStoragePoolResult ( result , org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; }
@ org.junit.Before public void setUp () { command = new org.ovirt.engine.core.bll.SetVmTicketCommand ( new org.ovirt.engine.core.common.action.SetVmTicketParameters () , null ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { setNumberOfVms ( ( ( java.lang.Integer ) ( returnValue . getReturnValue () ) ) ) ; }
private void assertCorrectGetVmDataResult ( org.ovirt.engine.core.common.businessentities.VM result ) { org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.VmPoolDaoTest.EXISTING_VM_POOL_ID , result . getVmPoolId () ) ; }
@ org.junit.Test public void canDoActionSucceeds () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.RemoveAuditLogByIdCommand ( new org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_3 ) ) ) ; prepareMocks ( command ) ; org.junit.Assert . assertTrue ( command . canDoAction () ) ; }
public long getaudit_log_id () { return auditLogId ; }
@ org.junit.Test public void testUltimateFallbackValues () { org.junit.Assert . assertEquals ( STRING_CONSTANT , org.ovirt.engine.core.common.TimeZoneTypeTest.windows . getUltimateFallback () ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , org.ovirt.engine.core.common.TimeZoneTypeTest.general . getUltimateFallback () ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) : NUMBER_CONSTANT ; }
private void validateAndAssertNetworkModified ( org.ovirt.engine.core.bll.network.host.SetupNetworksHelper helper , org.ovirt.engine.core.common.businessentities.network.Network net ) { validateAndExpectNoViolations ( helper ) ; assertNoBondsModified ( helper ) ; assertNetworkModified ( helper , net ) ; assertNoNetworksRemoved ( helper ) ; assertNoBondsRemoved ( helper ) ; }
public int getWarningLowSpaceSize () { return ( ( getWarningLowSpaceIndicator () ) == null ) || ( ( getTotalDiskSize () ) == null ) ? NUMBER_CONSTANT : ( ( getTotalDiskSize () ) * ( getWarningLowSpaceIndicator () ) ) / NUMBER_CONSTANT ; }
@ java.lang.Override protected void processImages () { processImages ( ( ! ( org.ovirt.engine.core.bll.ImportVmCommand . isImagesAlreadyOnTarget () ) ) ) ; if ( org.ovirt.engine.core.bll.ImportVmCommand . getReturnValue () . getVdsmTaskIdList () . isEmpty () ) { org.ovirt.engine.core.bll.VmHandler . unLockVm ( org.ovirt.engine.core.bll.ImportVmCommand . getVm () ) ; } }
public boolean handshakeInProgress () { return ! ( javax.net.ssl.SSLEngineResult.HandshakeStatus.NOT_HANDSHAKING . equals ( this . engine . getHandshakeStatus () ) ) ; }
@ org.junit.Test public void testIsNetworkInSyncWhenNetworkQosIsNullIfaceQosOverridden ( ) throws java.lang.Exception { networkQos = null ; org.junit.Assert . assertThat ( createTestedInstanceWithSameNonQosValues () . isNetworkInSync () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
@ org.junit.Test public void testWindowsTimeZones () { java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.common.TimeZoneTypeTest.windows . getTimeZoneList () ; org.junit.Assert . assertNotNull ( map ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , map . get ( STRING_CONSTANT ) ) ; }
private void handleVdsMaintenanceTimeout () { getVdsEventListener () . handleVdsMaintenanceTimeout ( _vds . getId () ) ; _vdsManager . calculateNextMaintenanceAttemptTime () ; }
protected org.ovirt.engine.core.dao.LunDAO getLunDao () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getLunDao () ; }
protected void registerObject ( java.lang.String name , O object ) { objectsByName . put ( name , object ) ; }
public org.ovirt.engine.core.common.businessentities.Snapshot addActiveSnapshot ( org.ovirt.engine.core.compat.Guid snapshotId , org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { return addActiveSnapshot ( snapshotId , vm , SnapshotStatus.OK , compensationContext ) ; }
private org.ovirt.engine.core.bll.validator.NetworkAttachmentValidator createNetworkAttachmentValidator ( org.ovirt.engine.core.common.businessentities.network.NetworkAttachment attachmentToValidate ) { return new org.ovirt.engine.core.bll.validator.NetworkAttachmentValidator ( attachmentToValidate , host , networkClusterDao , networkDao , vdsDao , vmDao ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.VmNetworkInterface i ) { return i . getId () . equals ( getInterface () . getId () ) ; }
public void sortDisks () { if ( ( disks ) != null ) { org.ovirt.engine.ui.uicommonweb.Linq . sort ( disks , new org.ovirt.engine.ui.uicommonweb.Linq.DiskModelByAliasComparer () ) ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } }
@ org.junit.Test public void canSetNumaConfigurationWithVmFromDb () { mockCommandWithVmFromDb () ; command . executeCommand () ; org.mockito.Mockito . verify ( vmNumaNodeDao ) . massSaveNumaNode ( org.mockito.ArgumentMatchers . eq ( paramNumaNodes ) , org.mockito.ArgumentMatchers . any () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.tags getByName ( java.lang.String name ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , name ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.TagDAODbFacadeImpl.TagRowMapper.instance , parameterSource ) ; }
public static org.ovirt.engine.core.searchbackend.ISyntaxChecker createBackendSyntaxChecker ( java.lang.String AuthenticationMethod ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.ConfigAuthenticationMethod = AuthenticationMethod ; if ( ( org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ) == null ) { org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker = new org.ovirt.engine.core.searchbackend.SyntaxChecker () ; } return org.ovirt.engine.core.searchbackend.SyntaxCheckerFactory.backendSyntaxChecker ; }
private static void raiseQueryCompleteEvent ( final java.util.List < org.ovirt.engine.core.common.queries.VdcQueryType > queryTypeList , final java.lang.String context ) { for ( org.ovirt.engine.core.common.queries.VdcQueryType queryType : queryTypeList ) { org.ovirt.engine.ui.frontend.Frontend . raiseQueryCompleteEvent ( queryType , context ) ; } }
@ java.lang.Override public org.ovirt.engine.api.model.GlusterBrick get () { return performGet ( VdcQueryType.GetGlusterBrickById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
@ java.lang.Override protected boolean validate () { return true ; }
@ java.lang.Override public void run ( org.ovirt.engine.core.common.businessentities.StoragePool item , org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getLocalStorageHost ( callback . getAsyncQuery () , item . getName () ) ; }
void init ( java.lang.String title , java.lang.String width , java.lang.String height , boolean closeIconVisible ) ;
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.storage.VolumeFormat > getVolumeFormats () { return new java.util.ArrayList ( java.util.Arrays . asList ( VolumeFormat.COW , VolumeFormat.RAW ) ) ; }
private void mockVdcCommand ( org.ovirt.engine.core.common.action.ActionType actionType , org.ovirt.engine.core.common.action.ActionReturnValue returnValue ) { org.mockito.Mockito . doReturn ( returnValue ) . when ( backend ) . runInternalAction ( org.mockito.ArgumentMatchers . eq ( actionType ) , org.mockito.ArgumentMatchers . any () ) ; }
private void addNewIconPair ( org.ovirt.engine.core.common.businessentities.VmBase vmBase , java.lang.String largeIconDataUrl ) { final org.ovirt.engine.core.common.queries.VmIconIdSizePair iconIds = ensureIconPairInDatabase ( largeIconDataUrl ) ; vmBase . setLargeIconId ( iconIds . getLarge () ) ; vmBase . setSmallIconId ( iconIds . getSmall () ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source == null ? new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > () : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { setReportBaseUrl ( ( ( java.lang.String ) ( returnValue ) ) ) ; }
protected org.ovirt.engine.core.common.businessentities.vm_pools getVmPool () { if ( ( ( mVmPool ) == null ) && ( ( getVmPoolId () ) != null ) ) { mVmPool = getVmPoolDAO () . get ( getVmPoolId () ) ; } return mVmPool ; }
@ java.lang.Override protected boolean canDoAction () { if ( org.ovirt.engine.core.bll.MoveDisksCommand . getParameters () . getParametersList () . isEmpty () ) { return failCanDoAction ( VdcBllMessages.ACTION_TYPE_FAILED_NO_DISKS_SPECIFIED ) ; } return true ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( VdsmEnv.ENGINE_HOST , org.ovirt.engine.core.utils.EngineLocalConfig . getInstance () . getHost () ) ; return true ; }
protected void updateCustomPropertySheet () { if ( ( getModel () . getCompatibilityVersion () ) != null ) { updateCustomPropertySheet ( getModel () . getCompatibilityVersion () ) ; } }
public java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getBonds () { return new java.util.ArrayList ( modifiedBonds . values () ) ; }
protected org.ovirt.engine.core.common.businessentities.VDSGroup map ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { return getMapper ( org.ovirt.engine.core.common.businessentities.StoragePool . class , org.ovirt.engine.core.common.businessentities.VDSGroup . class ) . map ( pool , null ) ; }
@ org.junit.Test public void testGetAllAttachableDisksByPoolWithNoPermissions () { java.util.List < org.ovirt.engine.core.common.businessentities.Disk > result = dao . getAllAttachableDisksByPoolId ( null , null , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , true ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override protected void populateTabMap () { getTabNameMapping () . put ( TabName.PF_TAB , pfTab ) ; getTabNameMapping () . put ( TabName.VFS_CONFIG_TAB , vfsConfigTab ) ; }
private void verifyAuditFenceExecutionFailure ( int expectedInvocations ) { org.mockito.Mockito . verify ( auditLogDirector , org.mockito.Mockito . times ( expectedInvocations ) ) . log ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . eq ( AuditLogType.FENCE_OPERATION_USING_AGENT_AND_PROXY_FAILED ) ) ; }
@ javax.ws.rs.GET public org.ovirt.engine.api.v3.types.V3VMs list () { org.ovirt.engine.api.v3.types.V3VMs vms = adaptList ( getDelegate () : : list ) ; vms . getVMs () . forEach ( V3VmHelper : : addDisksLink ) ; return vms ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.userportal.PoolItemBehavior behavior = ( ( org.ovirt.engine.ui.uicommonweb.models.userportal.PoolItemBehavior ) ( target ) ) ; org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel model = behavior . getItem () ; model . setEntity ( returnValue ) ; }
public static void adjustDisplayData ( org.ovirt.engine.api.restapi.resource.BackendResource res , org.ovirt.engine.api.model.Vm vm ) { org.ovirt.engine.api.restapi.util.DisplayHelper . adjustDisplayData ( res , vm , null ) ; }
@ org.junit.Test public void testGetAllAttachableDisksByPoolWithNoPermissionsFilterDisabled () { java.util.List < org.ovirt.engine.core.common.businessentities.Disk > result = dao . getAllAttachableDisksByPoolId ( null , null , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , false ) ; org.ovirt.engine.core.dao.DiskDaoTest . assertFullGetAllAttachableDisksByPoolId ( result ) ; }
public org.ovirt.engine.core.compat.Guid getMasterDomainId () { return privateMasterDomainId ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Provider < > > returnValue ) { setProviders ( ( ( java.util.List ) ( returnValue ) ) ) ; }
public T getParameters () { return _parameters ; }
private java.lang.String getRelatedTableName ( java.lang.String obj ) { if ( obj == null ) { return null ; } else if ( ( org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter . getEntitySearchInfo ( obj ) ) != null ) { return org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter . getEntitySearchInfo ( obj ) . relatedTableName ; } return null ; }
private void stubFailedCalls () { org.mockito.Mockito . when ( resourceManager . runVdsCommand ( org.mockito.ArgumentMatchers . any () , org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( getFailedVdsReturnValue () ) ; }
@ org.junit.Test public void testGetByOperatingSystemIdNonExisting () { final org.ovirt.engine.core.common.businessentities.VmIconDefault vmIconDefault = dao . getByOperatingSystemId ( ( - NUMBER_CONSTANT ) ) ; org.junit.Assert . assertNull ( vmIconDefault ) ; }
public java.lang.String getStoragePoolName () { if ( ( getStoragePool () ) != null ) { return getStoragePool () . getName () ; } return STRING_CONSTANT ; }
protected void doTestGet ( org.ovirt.engine.core.common.mode.ApplicationMode appMode ) { setupExpectations ( appMode , org.ovirt.engine.api.restapi.resource.BackendApiResourceTest.relationships ) ; verifyResponse ( resource . get () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.utils.Pair < java.lang.Boolean , org.ovirt.engine.core.common.AuditLogType > disconnectHostFromStoragePoolServersCommandCompleted ( org.ovirt.engine.core.common.action.HostStoragePoolParametersBase parameters ) { return new org.ovirt.engine.core.common.utils.Pair ( true , null ) ; }
private org.ovirt.engine.core.common.vdscommands.RemoveVMVDSCommandParameters buildRemoveVmParameters () { return new org.ovirt.engine.core.common.vdscommands.RemoveVMVDSCommandParameters ( getParameters () . getStoragePoolId () , org.ovirt.engine.core.bll.RemoveVmFromImportExportCommand . getVmId () , getParameters () . getStorageDomainId () ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.network.VnicProfileView vnicProfile , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
public boolean addHost ( org.ovirt.engine.core.common.businessentities.VDS entity ) { return hosts . add ( entity . getId () ) ; }
private boolean checkIsDomainLocked ( org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap domainMap ) { if ( ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Locked ) == ( domainMap . getStatus () ) ) { addInvalidSDStatusMessage ( StorageDomainStatus.Locked ) ; return true ; } return false ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { nicHotplugSupportMap = returnValue . getReturnValue () ; }
public void setStatus ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus status ) { getStoragePoolIsoMapData () . setstatus ( status ) ; }
private void refreshHostStorage ( org.ovirt.engine.core.compat.Guid hostId ) { getBackendCollection ( VdcQueryType.GetDeviceList , new org.ovirt.engine.core.common.queries.GetDeviceListQueryParameters ( hostId , org.ovirt.engine.core.common.businessentities.storage.StorageType.ISCSI , false , null ) ) ; }
public static boolean isWindowsOsType ( java.lang.Integer osType ) { if ( osType == null ) { return false ; } return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.windowsOsIds . contains ( osType ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
public void setTotalDiskSize ( java.lang.Integer value ) { totalDiskSize = value ; }
@ org.junit.Test public void validateSucceeds () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.DeleteGlusterVolumeCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeActionParameters ( stoppedVolumeId , false ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
public void setStoragesNames ( java.util.ArrayList < java.lang.String > storagesNames ) { this . storagesNames = storagesNames ; }
protected void persistCollectedData () { updateNetConfigDirtyFlag () ; hostNetworkTopologyPersister . persistAndEnforceNetworkCompliance ( getVds () , skipManagementNetwork () , getParameters () . getInterfaces () ) ; }
private org.ovirt.engine.core.bll.gluster.RefreshGlusterVolumeDetailsCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.RefreshGlusterVolumeDetailsCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeParameters ( volumeId ) , null ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel unitVmModel ) { super . edit ( unitVmModel ) ; if ( unitVmModel . isVmAttachedToPool () ) { specificHost . setEnabled ( false ) ; } }
private static void copyUnchangedStoragePoolProperties ( org.ovirt.engine.core.common.businessentities.StoragePool newStoragePool , org.ovirt.engine.core.common.businessentities.StoragePool oldStoragePool ) { newStoragePool . setStoragePoolFormatType ( oldStoragePool . getStoragePoolFormatType () ) ; }
@ java.lang.Override public abstract com.google.gwt.safehtml.shared.SafeHtml getValue ( T object ) ;
@ java.lang.Override public java.util.List < T > getSelectedItems () { return org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel . getDataProvider () . getModel () . getSelectedItems () ; }
public boolean isNetworkInSync () { return ( ( ( isNetworkMtuInSync () ) && ( isNetworkVlanIdInSync () ) ) && ( isNetworkBridgedFlagInSync () ) ) && ( qosParametersEqual () ) ; }
private static boolean isVnicProfileMappingSupplied ( org.ovirt.engine.api.model.VnicProfileMappings vnicProfileMappings ) { return ( vnicProfileMappings != null ) && ( vnicProfileMappings . isSetVnicProfileMappings () ) ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpEntityQueryExpectations ( VdcQueryType.GetAllVmIcons , org.ovirt.engine.core.common.queries.VdcQueryParametersBase . class , new java.lang.String [] {} , new java.lang.Object [] {} , org.ovirt.engine.api.restapi.resource.BackendIconsResourceTest . setUpVmIcons () , failure ) ; }
@ java.lang.Override public java.lang.Void answer ( org.mockito.invocation.InvocationOnMock invocation ) throws java.lang.Throwable { if ( ( invocation . getArguments () [ NUMBER_CONSTANT ] ) != null ) { auditLogWritten = true ; } return null ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VnicProfileView > returnValue ) { networkProfiles = returnValue ; initNetworksList () ; initClusterAndStorage ( dataCenter ) ; }
private void assertGetResult ( org.ovirt.engine.core.common.businessentities.StorageDomain result ) { org.junit.Assert . assertEquals ( existingDomain , result ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.Cluster cluster ) { if ( cluster != null ) { powerAction ( actionName , title , message , cluster . isOptionalReasonRequired () ) ; } }
private void mockNullVm () { createVirtIODisk () ; }
@ org.ovirt.engine.ui.webadmin.DefaultMessage ( value = STRING_CONSTANT ) java.lang.String vlanNetwork ( int vlanId ) ;
protected org.ovirt.engine.core.common.businessentities.storage.StorageType mapType ( org.ovirt.engine.core.common.businessentities.storage.StorageType type ) { return getMapper ( org.ovirt.engine.core.common.businessentities.storage.StorageType . class , org.ovirt.engine.core.common.businessentities.storage.StorageType . class ) . map ( type , null ) ; }
public void setvds_group_name ( java.lang.String value ) { this . vds_group_nameField = value ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.provider.ProviderValidator validator = new org.ovirt.engine.core.bll.provider.ProviderValidator ( getProvider () ) ; return ( validate ( validator . providerIsSet () ) ) && ( super . validate () ) ; }
protected org.ovirt.engine.core.common.queries.VdcQueryReturnValue getAllDisksByStorageDomain ( org.ovirt.engine.core.compat.Guid domainId ) { return runInternalQuery ( VdcQueryType.GetAllDisksByStorageDomainId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( domainId ) ) ; }
@ java.lang.Override public boolean isValid ( java.lang.Integer value , javax.validation.ConstraintValidatorContext context ) { return ( value == NUMBER_CONSTANT ) || ( ( NUMBER_CONSTANT <= value ) && ( value <= ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.MaxMTU ) ) ) ) ; }
public void setvds_group_id ( org.ovirt.engine.core.compat.Guid value ) { this . mVdsStatic . setvds_group_id ( value ) ; }
private void updateHeartbeatPolicy ( org.ovirt.vdsm.jsonrpc.client.utils.retry.RetryPolicy policy , boolean isHeartbeat ) { policy . setIncomingHeartbeat ( isHeartbeat ) ; policy . setOutgoingHeartbeat ( isHeartbeat ) ; client . setClientRetryPolicy ( policy ) ; }
@ java.lang.Override public void error ( java.lang.String message , java.lang.RuntimeException ex ) { org.ovirt.engine.ui.common.uicommon.LoggerImpl.logger . log ( java.util.logging.Level.SEVERE , message , ex ) ; }
private static < T > void mockConfigValue ( org.ovirt.engine.core.common.config.ConfigValues value , java.lang.String version , T returnValue ) { org.mockito.Mockito . when ( org.ovirt.engine.core.common.config.Config . getConfigUtils () . GetValue ( value , version ) ) . thenReturn ( returnValue ) ; }
protected boolean getForce () { return force ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid eval ( org.ovirt.engine.core.common.businessentities.DiskImage disk ) { return disk . getVmSnapshotId () ; }
protected void updateAllInBatch ( java.lang.String procedureName , java.util.Collection < T > paramValues , org.ovirt.engine.core.dal.dbbroker.MapSqlParameterMapper < T > mapper ) { org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . getCallsHandler () . executeStoredProcAsBatch ( ( procedureName == null ? org.ovirt.engine.core.dao.MassOperationsGenericDaoDbFacade . getProcedureNameForUpdate () : procedureName ) , paramValues , mapper ) ; }
protected void disableLoginScreen () { getUserName () . setIsChangeable ( false ) ; getProfile () . setIsChangeable ( false ) ; }
protected void clearSelection () { getTable () . getSelectionModel () . clear () ; }
@ org.junit.Test public void testGetSelectorScriptName () { org.junit.Assert . assertEquals ( STRING_CONSTANT , testServlet . getSelectorScriptName () ) ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addMemoryBalloon ( org.ovirt.engine.core.compat.Guid vmId ) { return addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.BALLOON , VmDeviceType.MEMBALLOON , getMemoryBalloonSpecParams () , true , true ) ; }
public static void ClearConfigCache () { if ( ( org.ovirt.engine.ui.uicommonweb.DataProvider.CachedConfigValues ) != null ) { org.ovirt.engine.ui.uicommonweb.DataProvider.CachedConfigValues . clear () ; } }
public org.ovirt.engine.core.common.businessentities.VmDevice addCdDevice ( org.ovirt.engine.core.compat.Guid vmId , java.lang.String cdPath ) { return addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.DISK , VmDeviceType.CDROM , getCdDeviceSpecParams ( STRING_CONSTANT , cdPath ) , true , true ) ; }
protected org.ovirt.engine.core.common.action.VdcReturnValueBase checkAndPerformRollbackUsingCommand ( org.ovirt.engine.core.common.action.VdcActionType commandType , org.ovirt.engine.core.common.action.VdcActionParametersBase params ) { return attemptRollback ( commandType , params ) ; }
public org.ovirt.engine.core.compat.Guid getVmtGuid () { return this . vmStatic . getVmtGuid () ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm . getDynamicData () , vm . getStatus () ) ; org.ovirt.engine.core.bll.VmHandler . UnLockVm ( vm ) ; compensationContext . stateChanged () ; return null ; }
@ java.lang.Override public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) { return runQueryImpl ( actionType , parameters , true , null ) ; }
protected void updateDisksFromDb ( org.ovirt.engine.core.common.businessentities.VmTemplate t ) { org.ovirt.engine.core.bll.VmTemplateHandler . updateDisksFromDb ( t ) ; }
public java.lang.String getRandomNum ( int length ) { return utils . getRandomNum ( length ) ; }
public org.ovirt.engine.core.common.businessentities.tags lookupTagById ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( org.ovirt.engine.core.common.businessentities.tags . class , VdcQueryType.GetTagByTagId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , id . toString () , true ) ; }
private void forceAddMacs ( java.util.List < java.lang.String > macs ) { for ( java.lang.String mac : macs ) { forceAddMac ( mac ) ; } }
@ org.junit.Test public void canDetachInactiveDomain () { setStorageDomainStatus ( StorageDomainStatus.Inactive ) ; storagePoolExists () ; masterDomainIsUp () ; canDetachDomain () ; org.junit.Assert . assertFalse ( cmd . canDetachDomain ( false ) ) ; }
public java.lang.String getAllowOverbookingInfoMessage () { return org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getMessages () . schedulerAllowOverbookingInfo ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getSchedulerAllowOverbookingPendingRequestsThreshold () ) ; }
public org.ovirt.engine.core.bll.network.macpool.MacPool createMacPool ( org.ovirt.engine.core.bll.network.macpool.MacPool macPool ) { return new org.ovirt.engine.core.bll.network.macpool.MacPoolUsingRanges ( macPool . getId () , org.ovirt.engine.core.utils.MacAddressRangeUtils . macPoolToRanges ( macPool ) , macPool . isAllowDuplicateMacAddresses () ) ; }
protected int getBlockSparseInitSizeInGb () { return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.InitStorageSparseSizeInGB ) . intValue () ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.LUNs > getVmLunDisksToSave () { return vmLunDisksToSave ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyLegacyGotDisabledLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_LEGACY ) , UsbPolicy.DISABLED ) ; }
@ org.junit.Test public void encodeWithNullDiskDescription ( ) throws java.lang.Exception { disk . setDiskAlias ( STRING_CONSTANT ) ; disk . setDiskDescription ( null ) ; assertDiskDescriptionMap ( disk , generateDiskAliasJsonEntry ( STRING_CONSTANT ) , generateDiskDescriptionJsonEntry ( STRING_CONSTANT ) ) ; }
private org.ovirt.engine.core.common.businessentities.network.Network createNetwork () { network = new org.ovirt.engine.core.common.businessentities.network.Network () ; network . setname ( STRING_CONSTANT ) ; return network ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.VmTemplate template , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
private void initHandlers () { mTagsHandler = org.ovirt.engine.core.bll.HandlersFactory . createTagsHandler () ; org.ovirt.engine.core.searchbackend.BaseConditionFieldAutoCompleter.tagsHandler = mTagsHandler ; org.ovirt.engine.core.bll.VmHandler . init () ; org.ovirt.engine.core.bll.VdsHandler . init () ; org.ovirt.engine.core.bll.VmTemplateHandler . init () ; org.ovirt.engine.core.bll.Backend.log . info ( STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.StorageDomain sp ) { java.lang.String tooltipContent = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( sp . getStorageDomainSharedStatus () ) ; return tooltipContent ; }
@ java.lang.Override public org.ovirt.engine.api.model.VM get () { org.ovirt.engine.api.model.VM vm = performGet ( VdcQueryType.GetVmByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; return removeRestrictedInfo ( vm ) ; }
public static < R extends org.ovirt.engine.api.model.BaseResource > R addLinks ( R model ) { return org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( model , null ) ; }
@ java.lang.Override public void cleanup () { widgetWithLabel . cleanup () ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmModel flush () { table . flush () ; nicTable . flush () ; diskTable . flush () ; if ( ( appTable ) != null ) { appTable . flush () ; } return org.ovirt.engine.ui.webadmin.section.main.view.popup.storage.backup.ImportVmPopupView.Driver.driver . flush () ; }
@ com.google.gwt.uibinder.client.UiChild ( tagname = STRING_CONSTANT , limit = NUMBER_CONSTANT ) public void setLogo ( com.google.gwt.user.client.ui.Widget widget ) { logoPanel . setWidget ( widget ) ; }
private void initGeneralForm () { generalForm = new org.ovirt.engine.ui.common.widget.uicommon.vm.VmSnapshotInfoGeneral () ; }
protected boolean isEndOfKeysFile ( ) throws java.io.IOException { return ! ( ( ( keysObjectInStream . available () ) > NUMBER_CONSTANT ) || ( ( keysBufferedInStream . available () ) > NUMBER_CONSTANT ) ) ; }
public void updateFields () { getModel () . startProgress () ; doUpdateManagedFieldsFrom ( getSource () ) ; }
private org.ovirt.engine.core.common.businessentities.StorageServerConnections setUpConnectionExpectations () { org.ovirt.engine.core.common.businessentities.StorageServerConnections connection = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; connection . setId ( org.ovirt.engine.api.restapi.resource.BackendAttachedStorageDomainResourceTest.STORAGE_CONNECTION_ID . toString () ) ; connection . setconnection ( ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) ) ; return connection ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . getstorage_domain_type () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainType.Master ) ) && ( ( a . getstatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getName () ; }
protected void onAdUsersLoaded () { onAdItemsLoaded ( getusers () ) ; }
public static org.ovirt.engine.api.extensions.ExtMap fetchPrincipalRecord ( final org.ovirt.engine.core.extensions.mgr.ExtensionProxy extension , org.ovirt.engine.api.extensions.ExtMap authRecord ) { return org.ovirt.engine.core.aaa.AuthzUtils . fetchPrincipalRecordImpl ( extension , Authn.InvokeKeys.AUTH_RECORD , authRecord , true , true ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { new org.ovirt.engine.api.restapi.resource.BackendPermissionResource ( STRING_CONSTANT , null , null , null ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createNic ( java.lang.String nicName , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . newGuid () , nicName , false , null , null , networkName , true , null , null ) ; }
public double getTotal () { double result = super . getTotal () ; if ( result != NUMBER_CONSTANT ) { result = NUMBER_CONSTANT ; } return result ; }
@ org.junit.Test public void testStorageDomainForMemoryIsNotValidWhenItHasLowSpace () { org.mockito.Mockito . when ( storageDomainValidator . isDomainWithinThresholds () ) . thenReturn ( new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.ACTION_TYPE_FAILED_DISK_SPACE_LOW_ON_STORAGE_DOMAIN ) ) ; org.junit.Assert . assertFalse ( filter . test ( storageDomain ) ) ; }
protected void cancel () { setWindow ( null ) ; setConfirmWindow ( null ) ; }
public static < T > org.ovirt.engine.ui.common.widget.editor.ValueBoxEditorChanger < T > of ( com.google.gwt.user.client.ui.ValueBoxBase < T > valueBox ) { return new org.ovirt.engine.ui.common.widget.editor.ValueBoxEditorChanger ( valueBox ) ; }
private void validateNonEmpty ( java.lang.String [] args ) { if ( ( args.length ) == NUMBER_CONSTANT ) { throw new java.lang.IllegalArgumentException ( STRING_CONSTANT ) ; } }
public java.lang.Integer getPendingVcpusCount () { return mVdsDynamic . getPendingVcpusCount () ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { updateCloudInitVisibility ( object ) ; }
@ java.lang.Override public void onSuccess ( java.lang.String content ) { getContentModel () . getContent () . setEntity ( content ) ; stopProgress () ; }
private void updateEditorStyle ( org.ovirt.engine.ui.common.widget.AbstractValidatedWidgetWithLabel editor , java.lang.String contentStyle ) { editor . setContentWidgetContainerStyleName ( contentStyle ) ; editor . addWrapperStyleName ( style . editorWrapper () ) ; editor . setLabelStyleName ( style . editorLabel () ) ; }
@ org.junit.Test public void testGetFilteredWithPermissionsNoPermissionsAndNoFilter () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () , org.ovirt.engine.core.dao.UNPRIVILEGED_USER_ID , false ) ; assertGetResult ( result ) ; }
private static boolean doesStorageDomainHaveSpaceForRequest ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , long sizeRequested ) { return new org.ovirt.engine.core.bll.validator.StorageDomainValidator ( storageDomain ) . isDomainHasSpaceForRequest ( sizeRequested ) . isValid () ; }
public void initLoggedInUser ( org.ovirt.engine.core.common.businessentities.aaa.DbUser loggedUser ) { this . currentUser = loggedUser ; }
@ org.junit.Test public void testGetStorageDomainIdWithNoPermissions () { mockStoragePoolDAO ( null ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , getQuery () . getStorageDomainIdForQuery () ) ; }
public boolean getIsAvailable () { return ( getDetailModel () . getExternalId () ) == null ; }
public static org.ovirt.engine.core.common.businessentities.VmDevice addNetworkInterfaceDevice ( org.ovirt.engine.core.common.businessentities.VmDeviceId id , boolean plugged ) { return org.ovirt.engine.core.bll.utils.VmDeviceUtils . addManagedDevice ( id , VmDeviceGeneralType.INTERFACE , VmDeviceType.BRIDGE , java.util.Collections . < java.lang.String , java.lang.Object > emptyMap () , plugged , false , null ) ; }
protected org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeSnapshotSchedule getSchedule () { return schedule ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmDiskServer getDiskResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) { return new org.ovirt.engine.api.v3.servers.V3VmDiskServer ( vmId , id , getDelegate () . getDiskResource ( id ) ) ; }
public void setTotalDiskSize ( java.lang.Integer value ) { value = ( value == null ) ? java.lang.Integer . valueOf ( NUMBER_CONSTANT ) : value ; if ( ! ( totalDiskSize . equals ( value ) ) ) { totalDiskSize = value ; } }
public java.lang.String getJavaMemberStyleName ( org.ovirt.api.metamodel.concepts.Name name ) { return javaNames . getJavaMemberStyleName ( name ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . getName () ; }
protected org.ovirt.engine.api.model.StorageDomain getStorageDomainEntity () { org.ovirt.engine.api.model.StorageDomain entity = control . createMock ( org.ovirt.engine.api.model.StorageDomain . class ) ; return org.ovirt.engine.api.restapi.resource.BackendTemplateDiskResourceTest . setUpStorageDomainEntityExpectations ( entity , StorageType.NFS ) ; }
protected void cancel () { setWindow ( null ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network net ) { return net . getName () . equals ( getNetworkName () ) ; }
public void logAndFailTaskOfCommandWithEmptyVdsmId ( org.ovirt.engine.core.compat.Guid asyncTaskId , java.lang.String message ) { org.ovirt.engine.core.common.businessentities.AsyncTasks task = coco . getAsyncTaskFromDb ( asyncTaskId ) ; if ( task != null ) { logAndFailTaskOfCommandWithEmptyVdsmId ( task , message ) ; } }
@ java.lang.Override public C list () { return mapCollection ( getBackendCollection ( queryType , queryParams ) ) ; }
@ org.junit.Test public void testGetClustersHavingHosts () { java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > clusters = dao . getClustersHavingHosts () ; org.junit.Assert . assertNotNull ( clusters ) ; org.junit.Assert . assertThat ( clusters , org.hamcrest.Matchers . hasSize ( NUMBER_CONSTANT ) ) ; }
void localize () {}
@ org.junit.Test public void nameAcceptableLength () { org.ovirt.engine.core.bll.storage.StorageHandlingCommandBaseTest . setAcceptableNameLength ( NUMBER_CONSTANT ) ; checkStoragePoolNameLengthFails () ; }
@ java.lang.Override public void run ( org.ovirt.engine.core.common.businessentities.StoragePool item , org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getClusterList ( callback . getAsyncQuery () , item . getId () ) ; }
public void setClientIp ( java.lang.String clientIp ) { if ( ! ( org.ovirt.engine.core.common.utils.ObjectUtils . objectsEqual ( this . clientIp , clientIp ) ) ) { this . clientIp = clientIp ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } }
protected void setImageId ( org.ovirt.engine.core.compat.Guid imageId ) { this . imageId = imageId ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StartGlusterVolumeProfileCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeParameters ( null ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public void setVersion ( org.ovirt.engine.core.compat.RpmVersion value ) { mVdsDynamic . setVersion ( value ) ; }
private void initLogicalNetworksPanel () { com.google.gwt.user.client.ui.VerticalPanel panel = new com.google.gwt.user.client.ui.VerticalPanel () ; networksTable = new org.ovirt.engine.ui.common.widget.editor.ListModelObjectCellTable ( true ) ; panel . add ( networksTable ) ; logicalNetworksPanel . setWidget ( panel ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Host get () { org.ovirt.engine.api.model.Host host = getVdsByVdsId () ; deprecatedAddLinksToAgents ( host ) ; return host ; }
@ java.lang.Override protected void AsyncSearch () { super . AsyncSearch () ; setAsyncResult ( org.ovirt.engine.ui.frontend.Frontend . RegisterQuery ( VdcQueryType.GetAllNetworks , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity () . getId () ) ) ) ; setItems ( getAsyncResult () . getData () ) ; }
@ java.lang.Override public void markAsInvalid ( java.util.List < java.lang.String > validationHints ) { super . markAsInvalid ( validationHints ) ; java.lang.String tooltipText = org.ovirt.engine.ui.common.widget.AbstractValidatedWidgetWithLabel . getValidationTooltipText ( validationHints ) ; label . disable ( tooltipText ) ; contentWidgetContainerTooltip . setText ( tooltipText ) ; }
private static org.ovirt.engine.core.common.businessentities.StorageServerConnections setUpConnection ( int idx ) { return new org.ovirt.engine.core.common.businessentities.StorageServerConnections ( org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.ADDRESS , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.GUIDS [ idx ] . toString () , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.IQNS [ idx ] , null , org.ovirt.engine.core.common.businessentities.storage.StorageType.ISCSI , null , org.ovirt.engine.core.bll.GetLunsByVgIdQueryTest.PORT , null ) ; }
private void mockVmDaoGetVm () { org.mockito.Mockito . when ( vmDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( vm ) ; }
@ java.lang.Override protected void executeVdsBrokerCommand () { status = org.ovirt.engine.core.vdsbroker.vdsbroker.HotUnPlugDiskVDSCommand . getBroker () . hotunplugDisk ( org.ovirt.engine.core.vdsbroker.vdsbroker.HotUnPlugDiskVDSCommand . buildSendDataToVdsm () ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.HotUnPlugDiskVDSCommand . proceedProxyReturnValue () ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetTagByTagIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.bll.TagsDirector . getInstance () . GetTagById ( org.ovirt.engine.core.bll.GetTagByTagIdQuery . getParameters () . getId () ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { revealStorageView ( disk ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Host deprecatedPopulate ( org.ovirt.engine.api.model.Host model , org.ovirt.engine.core.common.businessentities.VDS entity ) { parent . addStatistics ( model , entity ) ; parent . addCertificateInfo ( model ) ; return model ; }
public void login () { setLoggedIn ( true ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) public static java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > getStoragePools ( org.ovirt.engine.core.compat.Guid storageDomainId , org.ovirt.engine.api.restapi.resource.AbstractBackendResource parent ) { return parent . getEntity ( java.util.List . class , VdcQueryType.GetStoragePoolsByStorageDomainId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( storageDomainId ) , STRING_CONSTANT , true ) ; }
public void setAuthority ( org.ovirt.engine.ui.uicommonweb.UriAuthority authority ) { this . authority = ( authority == null ) ? new org.ovirt.engine.ui.uicommonweb.UriAuthority ( null ) : authority ; if ( ! ( this . authority . isValid () ) ) { valid = false ; } }
@ org.junit.After public void clearSession () { container . removeSession ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID ) ; }
private static java.lang.String getMacAddress ( java.util.Map < java.lang.String , java.lang.Object > ifaceMap ) { java.lang.String macAddress = org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . AssignStringValue ( ifaceMap , VdsProperties.VM_INTERFACE_MAC_ADDRESS ) ; return macAddress != null ? macAddress . replace ( CHAR_CONS , CHAR_CONS ) : null ; }
public java.lang.String getUserPassword () { return STRING_CONSTANT ; }
@ org.junit.Test public void validateSucceeds () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.UpdateGlusterHookCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterHookManageParameters ( HOOK_ID ) , null ) ) ; setUpMocksForUpdate () ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
private org.ovirt.engine.api.model.Vm getFromDataDomain () { return performGet ( VdcQueryType.GetVmByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { org.ovirt.engine.core.common.action.VdcReturnValueBase res = result . getReturnValue () ; stopProgress () ; setTestResultValue ( res ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain electNewMaster () { return electNewMaster ( false , false , false ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( object ) ) . getName () ; }
@ org.junit.Test public void utcDateStringToLocaDateNoDep () { java.util.Date date = org.ovirt.engine.core.utils.ovf.OvfParser . utcDateStringToLocalDate ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( new java.util.Date ( NUMBER_CONSTANT ) , date ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity getById ( org.ovirt.engine.core.compat.Guid id ) { return getById ( id , false ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.scheduling.AffinityGroup getNewAffinityGroup () { org.ovirt.engine.core.common.scheduling.AffinityGroup affinityGroup = super . getNewAffinityGroup () ; affinityGroup . setEntityIds ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > () ) ; affinityGroup . getEntityIds () . add ( getEntity () . getId () ) ; return affinityGroup ; }
@ java.lang.Override protected org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > createGhostValue () { org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > value = new org.ovirt.engine.ui.uicommonweb.models.EntityModel () ; value . setEntity ( STRING_CONSTANT ) ; return value ; }
@ org.junit.Test public void replace_patternNotPresent () { runAndCheck ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
private void initParentResource () { org.ovirt.engine.api.restapi.resource.AbstractBackendResource parent = collection . getParent () . getParent () ; parent . setMappingLocator ( mapperLocator ) ; parent . setMessageBundle ( messageBundle ) ; parent . setHttpHeaders ( httpHeaders ) ; }
@ org.junit.Test public void discardIsFalseWhenDiscardAfterDeleteIsTrueAndDomainDoesNotSupportDiscard () { assertDiscardValue ( true , false , false , false ) ; assertDiscardValue ( true , null , false , false ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( client ) != null ) { client . close () ; client = null ; } }
java.lang.String getParentId ( org.ovirt.engine.api.model.Tag tag ) { return lookupTagByName ( tag . getParent () . getName () ) . gettag_id () . toString () ; }
private org.ovirt.engine.api.model.Template getFromExportDomain () { org.ovirt.engine.core.common.businessentities.VmTemplate entity = getEntity () ; return addLinks ( populate ( map ( entity , null ) , entity ) , null , new java.lang.String [ NUMBER_CONSTANT ] ) ; }
protected java.lang.String generateVmMetadata ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < org.ovirt.engine.core.common.businessentities.storage.DiskImage > AllVmImages ) { return ovfManager . exportVm ( vm , AllVmImages , org.ovirt.engine.core.bll.utils.ClusterUtils . getCompatibilityVersion ( vm ) ) ; }
@ java.lang.Override public boolean validate () { getPath () . validateEntity ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.NotEmptyValidation () , new org.ovirt.engine.ui.uicommonweb.validation.LocalfsLinuxMountPointValidation () , new org.ovirt.engine.ui.uicommonweb.validation.NonUtfValidation () } ) ; return getPath () . getIsValid () ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( architecture , entityId , entityName , entityType , lowestCompVersion , ovfData , ovfExtraData , storageDomainId , status ) ; }
public boolean getTransparentHugepages () { return transparentHugepages ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > getCollection () { return getBackendCollection ( VdcQueryType.GetVdsInterfacesByVdsId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( hostId ) ) ) ; }
@ java.lang.Override protected java.lang.String getAdditionalInformation () { if ( ( getVds () ) != null ) { return java.lang.String . format ( STRING_CONSTANT , getVds () . getName () ) ; } else { return super . getAdditionalInformation () ; } }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > glusterHooks ) { setItems ( glusterHooks ) ; }
@ org.junit.Test public void testStorageDomainForMemoryIsValid () { org.junit.Assert . assertTrue ( filter . test ( storageDomain ) ) ; }
@ java.lang.Override public void setVmId ( org.ovirt.engine.core.compat.Guid value ) { super . setVmId ( value ) ; org.ovirt.engine.core.bll.AttachUserToVmFromPoolAndRunCommand . getParameters () . setVmId ( value ) ; }
public void setpm_enabled ( boolean value ) { mVdsStatic . setpm_enabled ( value ) ; }
private org.ovirt.engine.core.common.businessentities.storage.DiskImage createShareableDisk ( org.ovirt.engine.core.common.businessentities.storage.VolumeFormat volumeFormat ) { org.ovirt.engine.core.common.businessentities.storage.DiskImage disk = createDiskImage () ; disk . setvolumeFormat ( volumeFormat ) ; disk . setShareable ( true ) ; return disk ; }
protected void getHostListByCluster ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getHostListByCluster ( query , cluster . getname () ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterModel object ) { driver . edit ( object ) ; }
@ java.lang.Override public java.lang.String getVdsGroupName () { if ( ( getVdsGroup () ) != null ) { return getVdsGroup () . getName () ; } else { return null ; } }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.providers.ExternalNetwork model ) { return model . getDisplayName () ; }
protected void syncSearch ( org.ovirt.engine.core.common.queries.VdcQueryType vdcQueryType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase vdcQueryParametersBase ) { vdcQueryParametersBase . setRefresh ( getIsQueryFirstTime () ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( vdcQueryType , vdcQueryParametersBase , new SetItemsAsyncQuery () ) ; setIsQueryFirstTime ( false ) ; }
@ org.junit.Test public void networkNotInCluster ( ) throws java.lang.Exception { vnicProfileValidationTest ( org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( VdcBllMessages.NETWORK_NOT_EXISTS_IN_CURRENT_CLUSTER ) , true , false ) ; }
@ java.lang.Override protected void executeCommand () { org.ovirt.engine.core.bll.provider.UpdateProviderCommand . getProviderDao () . update ( getProvider () ) ; org.ovirt.engine.core.bll.provider.UpdateProviderCommand . setSucceeded ( true ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; }
@ org.junit.Test public void testGetMaxPciDevices ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , OsRepositoryImpl.INSTANCE . getMaxPciDevices ( NUMBER_CONSTANT , null ) ) ; }
@ org.junit.Before public void setUp () { tested = new org.ovirt.engine.ui.common.utils.AddOnlyRingBuffer ( org.ovirt.engine.ui.common.utils.AddOnlyRingBufferTest.CAPACITY , new org.ovirt.engine.ui.common.utils.AddOnlyRingBufferTest.StringArrayBuffer () ) ; }
protected int getMaxClonedNameLength () { return org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel.VM_TEMPLATE_AND_INSTANCE_TYPE_NAME_MAX_LIMIT ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public org.ovirt.engine.api.model.GlusterBricks list () { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterBrickEntity > bricks = getBackendCollection ( VdcQueryType.GetGlusterVolumeBricks , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( getVolumeId () ) ) ) ; return mapCollection ( bricks ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , null , true , null , false , null ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getname () . equals ( networkName ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcActionParametersBase getParameters ( org.ovirt.engine.api.model.Disk incoming , org.ovirt.engine.api.model.Disk entity ) { return new org.ovirt.engine.core.common.action.UpdateVmDiskParameters ( vmId , map ( incoming , entity ) ) ; }
@ org.junit.Test public void testConvertBytestoMB () { long bytes = NUMBER_CONSTANT ; int megabytes = org.ovirt.engine.core.common.utils.SizeConverter . convert ( bytes , SizeConverter.SizeUnit.BYTES , SizeConverter.SizeUnit.MiB ) . intValue () ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , megabytes ) ; }
@ java.lang.Override public java.lang.Long getRawValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { long totalDiskSize = ( ( object . getTotalDiskSize () ) != null ) ? object . getTotalDiskSize () : NUMBER_CONSTANT ; return ( ( long ) ( totalDiskSize ) ) ; }
@ org.junit.Test public void testGetAsyncTaskIdsByStoragePoolId () { java.util.List < org.ovirt.engine.core.compat.Guid > guids = dao . getAsyncTaskIdsByStoragePoolId ( FixturesTool.STORAGE_POOL_RHEL6_ISCSI_OTHER ) ; org.junit.Assert . assertNotNull ( guids ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , guids . size () ) ; }
protected org.ovirt.engine.ui.webadmin.ApplicationResources getApplicationResources () { return org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getApplicationResources () ; }
public java.lang.String getParameters () { return parameters ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Provider > getBackendCollection () { if ( isFiltered () ) { return getBackendCollection ( VdcQueryType.GetAllProviders , new org.ovirt.engine.core.common.queries.GetAllProvidersParameters ( org.ovirt.engine.core.common.businessentities.ProviderType.FOREMAN ) , SearchType.Provider ) ; } else { return getBackendCollection ( SearchType.Provider , getConstraint () ) ; } }
@ java.lang.Override protected void onLogin ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalLoginModel loginModel ) { loginModel . updateIsENGINEUser ( loginModel . getLoggedUser () ) ; }
java.lang.String ovirtVersionAbout ( ) ;
@ java.lang.Override public org.ovirt.engine.api.model.Disk get () { return performGet ( VdcQueryType.GetDiskByDiskId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
private void setInterfaces ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.DiskInterface > diskInterfaces ) { getDiskInterface () . setItems ( diskInterfaces ) ; setDefaultInterface () ; }
private org.ovirt.engine.ui.frontend.server.dashboard.Dashboard getDashboard ( ) throws org.ovirt.engine.ui.frontend.server.dashboard.DashboardDataException { org.ovirt.engine.ui.frontend.server.dashboard.Dashboard dashboard = new org.ovirt.engine.ui.frontend.server.dashboard.Dashboard () ; dashboard . setGlobalUtilization ( lookupGlobalUtilization () ) ; dashboard . setHeatMapData ( lookupClusterUtilization () ) ; return dashboard ; }
public org.ovirt.engine.core.bll.ValidationResult hostExists () { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.VDS_INVALID_SERVER_ID ) . when ( ( ( host ) == null ) ) ; }
@ org.junit.Test public void checkCinderStorageDomainContainDisks () { setCinderStorageDomainStatus ( StorageDomainStatus.Inactive ) ; storagePoolExists () ; cinderStorageDomainContainsDisks () ; masterDomainIsUp () ; canDetachDomain () ; org.junit.Assert . assertFalse ( cmd . canDetachDomain ( false , false ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageFormatType getEnum ( org.ovirt.engine.core.common.businessentities.StorageDomain storage ) { return storage . getStorageStaticData () . getStorageFormat () ; }
@ org.junit.Test public void testGetUserIDWithNoUser () { org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery query = new org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery () ; org.junit.Assert . assertNull ( STRING_CONSTANT , query . getUserID () ) ; }
private void canDoActionFailed ( final org.ovirt.engine.core.common.errors.EngineMessage reason ) { org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; org.junit.Assert . assertTrue ( cmd . getReturnValue () . getCanDoActionMessages () . contains ( reason . toString () ) ) ; }
@ java.lang.Override public boolean validate () { getSizeExtend () . validateEntity ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.NotEmptyValidation () , new org.ovirt.engine.ui.uicommonweb.validation.NonNegativeLongNumberValidation () } ) ; return ( super . validate () ) && ( getSizeExtend () . getIsValid () ) ; }
private java.lang.String getMacAddress () { return org.ovirt.engine.core.bll.AddVmInterfaceCommand . getParameters () . getInterface () . getMacAddress () ; }
@ java.lang.Override protected org.ovirt.engine.core.bll.DetachActionGroupsFromRoleCommand < ? extends org.ovirt.engine.core.common.action.ActionGroupsToRoleParameter > generateCommand () { return new org.ovirt.engine.core.bll.DetachActionGroupsFromRoleCommand ( getParams () , null ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { spmMaxPriorityValue = returnValue ; retrieveDefaultSpmPriority () ; }
public static < T > org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor < T > mockConfig ( org.ovirt.engine.core.common.config.ConfigValues value , T returnValue ) { return new org.ovirt.engine.core.utils.MockConfigRule.MockConfigDescriptor ( value , org.ovirt.engine.core.common.config.ConfigCommon.defaultConfigurationVersion , returnValue ) ; }
@ java.lang.Override protected void processResponse ( com.google.gwt.http.client.Response response ) { java.lang.String sessionIdFromHeader = org.ovirt.engine.ui.common.utils.HttpUtils . getHeader ( response , org.ovirt.engine.ui.webadmin.plugin.restapi.RestApiSessionManager.SESSION_ID_HEADER ) ; if ( sessionIdFromHeader != null ) { setSessionId ( sessionIdFromHeader , true ) ; } reuseSession () ; }
public void setImageId ( org.ovirt.engine.core.compat.Guid value ) { this . id . setImageId ( value ) ; }
@ java.lang.Override public void updateVisibility () { super . updateVisibility () ; messageLabel . setVisible ( false ) ; }
public void getAttachedTagsToUser ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { setAttachedTagsConverter ( aQuery ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetTagsByUserId , new org.ovirt.engine.core.common.queries.GetTagsByUserIdParameters ( id . toString () ) , aQuery ) ; }
private java.util.List < org.ovirt.engine.extensions.aaa.builtin.kerberosldap.LdapQueryData > GenerateUsersQuery () { org.ovirt.engine.extensions.aaa.builtin.kerberosldap.UsersObjectIdQueryGenerator generator = new org.ovirt.engine.extensions.aaa.builtin.kerberosldap.UsersObjectIdQueryGenerator () ; for ( org.ovirt.engine.core.compat.Guid id : getUserIds () ) { generator . add ( id ) ; } return generator . getLdapQueriesData ( getDomain () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue ) { getWipeAfterDelete () . setEntity ( returnValue ) ; }
@ java.lang.Override public int hashCode () { return java.util.Objects . hash ( getId () , getNameServers () ) ; }
public void setIsLogedin ( boolean value ) { isLoggedIn = value ; }
public boolean getIsSkipped () { return org.ovirt.engine.core.common.businessentities.FenceStatusReturnValue.SKIPPED . equalsIgnoreCase ( _status ) ; }
@ java.lang.Override int read ( java.nio.ByteBuffer buff ) throws java.io.IOException { if ( ( this . nioEngine ) != null ) { return this . nioEngine . read ( buff ) ; } else { return channel . read ( buff ) ; } }
public abstract org.ovirt.engine.core.common.businessentities.network.VnicProfile getProfile ( ) ;
@ java.lang.Override public void eventRaised ( org.ovirt.engine.core.compat.Event ev , java.lang.Object sender , org.ovirt.engine.core.compat.EventArgs args ) { if ( ( ( java.lang.Boolean ) ( getSpecificStorageQuota () . getEntity () ) ) == true ) { getGlobalStorageQuota () . setEntity ( false ) ; } }
@ org.junit.Test public void testEmptyElement () { org.ovirt.engine.api.types.V4Vm object = objectFromXml ( STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , object . name () ) ; }
private java.util.Map < java.lang.String , java.lang.Object > getCdDeviceSpecParams ( java.lang.String srcCdPath , java.lang.String dstCdPath ) { return java.util.Collections . < java.lang.String , java.lang.Object > singletonMap ( VdsProperties.Path , getCdPath ( srcCdPath , dstCdPath ) ) ; }
public static java.lang.Boolean mapFromInheritableBoolean ( org.ovirt.engine.api.model.InheritableBoolean value ) { return org.ovirt.engine.api.restapi.types.InheritableBooleanMapper . map ( value ) ; }
protected java.util.List < org.ovirt.engine.api.model.Network > getEntityList () { return getEntities ( false , false ) ; }
public void getConfigFromCache ( org.ovirt.engine.core.common.queries.ConfigurationValues configValue , java.lang.String version , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { org.ovirt.engine.core.common.queries.GetConfigurationValueParameters parameters = new org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ( configValue , version ) ; getConfigFromCache ( parameters , aQuery ) ; }
private org.ovirt.engine.core.common.businessentities.network.Network createNewNetwork ( boolean isVmNetwork , java.lang.String networkName ) { org.ovirt.engine.core.common.businessentities.network.Network network = new org.ovirt.engine.core.common.businessentities.network.Network () ; network . setVmNetwork ( isVmNetwork ) ; network . setname ( networkName ) ; return network ; }
private boolean isTypeRequiresAuthentication () { return false ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.StoragePool storagePool , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { setItems ( ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.VM > ) ( returnValue . getReturnValue () ) ) ) ; }
public void removeCustomizationCondition ( java.lang.String cond ) { _customizationConditions . remove ( cond ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeSnapshotEntity getById ( org.ovirt.engine.core.compat.Guid id ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterVolumeSnapshotDaoImpl.snapshotRowMapper , createSnapshotIdParams ( id ) ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { getStorageDomainDynamicDao () . update ( updatedStorageDomain . getStorageDynamicData () ) ; return null ; }
protected org.ovirt.engine.core.compat.Guid createTask ( org.ovirt.engine.core.compat.Guid taskId , org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo asyncTaskCreationInfo , org.ovirt.engine.core.common.action.VdcActionType parentCommand ) { return createTask ( taskId , asyncTaskCreationInfo , parentCommand , null , new java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.VdcObjectType > () ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getVdsId () { return ( getVm () . getRunOnVds () ) != null ? getVm () . getRunOnVds () : org.ovirt.engine.core.compat.Guid.Empty ; }
@ org.junit.Test public void testSubResourceLocatorBadGuid ( ) throws java.lang.Exception { try { collection . getNicResource ( STRING_CONSTANT ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { spice . setWANDisableEffects ( ( ( java.util.List < org.ovirt.engine.ui.uicommonweb.models.vms.WANDisableEffects > ) ( returnValue ) ) ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.Snapshot snapshot ) { java.lang.String status = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( snapshot . getStatus () ) ; return status ; }
private native java.lang.String getValue ( ) ;
private void AttachStorageToDataCenter ( org.ovirt.engine.core.compat.Guid storageId , org.ovirt.engine.core.compat.Guid dataCenterId ) { org.ovirt.engine.ui.frontend.Frontend . RunAction ( VdcActionType.AttachStorageDomainToPool , new org.ovirt.engine.core.common.action.StorageDomainPoolParametersBase ( storageId , dataCenterId ) , null , this ) ; }
@ org.junit.Test public void defaultClusterInLocalFs () { prepareManagementNetworkMocks () ; mcr . mockConfigValue ( ConfigValues.AutoRegistrationDefaultClusterID , org.ovirt.engine.core.bll.UpdateClusterCommandTest.DEFAULT_CLUSTER_ID ) ; createCommandWithDefaultCluster () ; oldGroupIsDetachedDefault () ; storagePoolIsLocalFS () ; setupCpu () ; architectureIsUpdatable () ; validateFailedWithReason ( EngineMessage.DEFAULT_CLUSTER_CANNOT_BE_ON_LOCALFS ) ; }
public boolean isVmDown () { org.ovirt.engine.core.common.businessentities.VM vm = getEntity () ; return ( vm != null ) && ( ( vm . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VMStatus.Down ) ) ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.EntityModel < T > setIsChangeable ( boolean value ) { return setIsChangeable ( value , null ) ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.provider.ProviderValidator validator = new org.ovirt.engine.core.bll.provider.ProviderValidator ( getProvider () ) ; return validate ( validator . providerIsSet () ) ; }
protected int getMaxNameLength () { return isWindows () ? org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getMaxVmNameLengthWin () : org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getMaxVmNameLengthNonWin () ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.Role object ) { return object . getName () ; }
public java.lang.String getPredefinedVMProperties ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.PredefinedVMProperties , version . getValue () ) ; }
private void add () { if ( ( getWindow () ) != null ) { return; } setWindow ( new org.ovirt.engine.ui.uicommonweb.models.providers.ProviderModel ( this ) ) ; }
@ java.lang.Override public org.ovirt.engine.ui.common.widget.table.SimpleActionTable < T > getTable () { return modelBoundTableWidget . getTable () ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > getLogicalUnits () { return getBackendCollection ( VdcQueryType.GetDeviceList , new org.ovirt.engine.core.common.queries.GetDeviceListQueryParameters ( asGuid ( hostId ) , org.ovirt.engine.core.common.businessentities.storage.StorageType.UNKNOWN , true , null ) ) ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand uiCommand ) { setWindow ( null ) ; setWindow ( model ) ; }
@ java.lang.Override public java.lang.String getName () { return getEntity () . getName () ; }
private org.ovirt.engine.core.common.vdscommands.RemoveVMVDSCommandParameters buildRemoveVmParameters () { return new org.ovirt.engine.core.common.vdscommands.RemoveVMVDSCommandParameters ( org.ovirt.engine.core.bll.RemoveVmFromImportExportCommand . getParameters () . getStoragePoolId () , org.ovirt.engine.core.bll.RemoveVmFromImportExportCommand . getVmId () , org.ovirt.engine.core.bll.RemoveVmFromImportExportCommand . getParameters () . getStorageDomainId () ) ; }
@ java.lang.Override public java.lang.String getGlusterHookContent ( org.ovirt.engine.core.compat.Guid hookId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterHooksDaoImpl.GlusterHookContentRowMapper , createIdParameterMapper ( hookId ) ) ; }
public void setiso_path ( java.lang.String value ) { mVmStatic . setiso_path ( value ) ; }
@ org.junit.Test public void formatStringTest3 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , result ) ; }
@ com.gwtplatform.mvp.client.annotations.TabInfo ( container = org.ovirt.engine.ui.webadmin.section.main.presenter.tab.datacenter.DataCenterQosSubTabPanelPresenter . class ) static com.gwtplatform.mvp.client.TabData getTabData ( org.ovirt.engine.ui.webadmin.ApplicationConstants applicationConstants , org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider < org.ovirt.engine.core.common.businessentities.qos.StorageQos , org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterListModel , org.ovirt.engine.ui.uicommonweb.models.datacenters.qos.DataCenterStorageQosListModel > modelProvider ) { return new org.ovirt.engine.ui.common.widget.tab.ModelBoundTabData ( applicationConstants . dataCenterStorageQosSubTabLabel () , NUMBER_CONSTANT , modelProvider ) ; }
@ org.junit.Test public void testGetToken () { org.junit.Assert . assertEquals ( org.ovirt.engine.core.bll.provider.network.openstack.ExternalNetworkTokenProviderTest.TOKEN_ID , tokenProvider . getToken () ) ; org.mockito.Mockito . verify ( mockTokensResource ) . authenticate ( usernamePasswordCaptor . capture () ) ; verifyUsernamePassword () ; }
void processSessionIdException () { org.ovirt.engine.ui.webadmin.plugin.restapi.RestApiSessionManager.logger . severe ( STRING_CONSTANT ) ; }
protected org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity getSlaveVolume () { return getGlusterVolumeDao () . getByName ( getParameters () . getId () , getParameters () . getRemoteVolumeName () ) ; }
@ org.junit.Test public void canRunVmPassStatelessWhenVmNotHAwithNegativeStatelessParam () { canRunStatelessVmTest ( false , false , java.lang.Boolean.TRUE , true ) ; }
public static java.lang.String toPlural ( java.lang.String candidate ) { if ( ( ( candidate . length () ) >= NUMBER_CONSTANT ) && ( ! ( candidate . endsWith ( STRING_CONSTANT ) ) ) ) { return candidate + STRING_CONSTANT ; } return candidate ; }
@ org.junit.Test ( expected = java.lang.RuntimeException . class ) public void testQueryForInvalidVolumeId () { org.mockito.Mockito . doReturn ( Guid.Empty ) . when ( getQueryParameters () ) . getVolumeId () ; getQuery () . executeQueryCommand () ; }
@ javax.ws.rs.PUT @ javax.ws.rs.Consumes ( value = { STRING_CONSTANT , STRING_CONSTANT } ) public org.ovirt.engine.api.v3.types.V3VM update ( org.ovirt.engine.api.v3.types.V3VM vm ) { vm = adaptUpdate ( getDelegate () : : update , vm ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . addDisksLink ( vm ) ; return vm ; }
protected org.ovirt.engine.core.common.AuditLogType getAuditLogForMigrationFailure () { if ( ( org.ovirt.engine.core.bll.MigrateVmCommand . getVds () . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VDSStatus.PreparingForMaintenance ) ) { return org.ovirt.engine.core.common.AuditLogType.VM_MIGRATION_FAILED_DURING_MOVE_TO_MAINTENANCE ; } if ( ( getDestinationVds () ) == null ) { return org.ovirt.engine.core.common.AuditLogType.VM_MIGRATION_FAILED_NO_VDS_TO_RUN_ON ; } return org.ovirt.engine.core.common.AuditLogType.VM_MIGRATION_FAILED ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > searchInstanceTypes () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getVmTemplateDao () , true ) ; }
@ java.lang.Override public void vdsNonOperational ( org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.businessentities.NonOperationalReason reason , boolean logCommand , org.ovirt.engine.core.compat.Guid domainId ) { vdsNonOperational ( vdsId , reason , logCommand , domainId , null ) ; }
public java.lang.String getUserdefinedVMProperties ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.String > GetValue ( ConfigValues.UserDefinedVMProperties , version . getValue () ) ; }
@ java.lang.Override protected void onReveal () { super . onReveal () ; setInSlot ( org.ovirt.engine.ui.webadmin.section.main.presenter.MainSectionPresenter.TYPE_SetHeader , header ) ; alertManager . setCanShowAlerts ( true ) ; }
@ org.junit.Before public void setUp () { disk1 = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; disk2 = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; disk3 = new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ; }
public void setEntityNames ( java.util.List < java.lang.String > entityNames ) { this . entityNames = entityNames ; if ( entityNames == null ) { this . entityNames = new java.util.ArrayList <> () ; } }
@ javax.ws.rs.PUT @ javax.ws.rs.Consumes ( value = { STRING_CONSTANT , STRING_CONSTANT } ) public org.ovirt.engine.api.v3.types.V3Disk update ( org.ovirt.engine.api.v3.types.V3Disk disk ) { disk = adaptUpdate ( getDelegate () : : update , disk ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . fixDiskLinks ( vmId , disk ) ; org.ovirt.engine.api.v3.helpers.V3VmHelper . addDiskAttachmentDetails ( vmId , disk ) ; return disk ; }
@ java.lang.Override public org.ovirt.engine.api.model.StorageConnection update ( org.ovirt.engine.api.model.StorageConnection connection ) { validateEnums ( org.ovirt.engine.api.model.StorageConnection . class , connection ) ; return performUpdate ( connection , new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetStorageServerConnectionById , org.ovirt.engine.core.common.queries.StorageServerConnectionQueryParametersBase . class ) , VdcActionType.UpdateStorageServerConnection , new org.ovirt.engine.api.restapi.resource.BackendStorageServerConnectionResource.UpdateParametersProvider () ) ; }
@ javax.annotation.PostConstruct public void create () { checkDBConnectivity () ; initialize () ; }
private boolean validateAttachment () { final org.ovirt.engine.core.bll.network.cluster.AttachNetworkClusterValidator attachNetworkClusterValidator = createNetworkClusterValidator () ; return ( validate ( attachNetworkClusterValidator . networkBelongsToClusterDataCenter ( org.ovirt.engine.core.bll.network.cluster.AttachNetworkToClusterInternalCommand . getVdsGroup () , org.ovirt.engine.core.bll.network.cluster.AttachNetworkToClusterInternalCommand . getPersistedNetwork () ) ) ) && ( validateAttachment ( attachNetworkClusterValidator ) ) ; }
@ org.junit.Test public void testNullAttr () { org.ovirt.engine.api.types.V4Vm object = objectFromXml ( STRING_CONSTANT ) ; org.junit.Assert . assertNull ( object . id () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) { doInit () ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter () { return policyUnit . filter ( cluster , java.util.Arrays . asList ( hostWithCpus , hostWithoutCpus ) , vm , null , perHostMessages ) ; }
@ org.junit.Test public void areAllVfsFreeTrueNoVfs () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertTrue ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
public void setVds ( final org.ovirt.engine.core.common.businessentities.VDS value ) { mVds = value ; mVdsName = null ; if ( value != null ) { mVdsId = value . getId () ; } }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false , false , false ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
private java.lang.String getHostNameOfServer ( org.ovirt.engine.core.compat.Guid serverId ) { return jdbcTemplate . queryForObject ( STRING_CONSTANT , java.lang.String . class , serverId . getUuid () ) ; }
@ java.lang.Override public void storagePoolUpEvent ( org.ovirt.engine.core.common.businessentities.StoragePool storagePool ) { org.ovirt.engine.core.bll.AsyncTaskManager . getInstance () . AddStoragePoolExistingTasks ( storagePool ) ; }
protected boolean checkStorageDomainSharedStatusNotLocked ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean returnValue = ( storageDomain != null ) && ( ( storageDomain . getstorage_domain_shared_status () ) != ( org.ovirt.engine.core.common.businessentities.StorageDomainSharedStatus.Locked ) ) ; if ( ! returnValue ) { addCanDoActionMessage ( VdcBllMessages.ACTION_TYPE_FAILED_STORAGE_DOMAIN_STATUS_ILLEGAL ) ; } return returnValue ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { org.ovirt.engine.ui.uicommonweb.models.hosts.ConfigureLocalStorageModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.ConfigureLocalStorageModel ) ( ev . getContext () ) ) ; model . stopProgress () ; cancel () ; }
@ java.lang.Override protected boolean validate () { M validator = getQosValidator ( getQos () ) ; return ( validateParameters () ) && ( validate ( validator . requiredValuesPresent () ) ) ; }
private void initEditors () { statusEditor = new org.ovirt.engine.ui.common.widget.editor.generic.EntityModelLabelEditor ( new org.ovirt.engine.ui.common.widget.renderer.EnumRenderer < org.ovirt.engine.core.common.businessentities.gluster.GlusterStatus > () ) ; clientsTable = new org.ovirt.engine.ui.common.widget.editor.EntityModelCellTable ( false , true ) ; memoryPoolsTable = new org.ovirt.engine.ui.common.widget.editor.EntityModelCellTable ( false , true ) ; }
@ org.junit.Test public void stringToVCpupinIntervalsList () { org.ovirt.engine.api.model.VCpuPin pin = org.ovirt.engine.api.restapi.types.VmMapper . stringToVCpupin ( STRING_CONSTANT ) ; assertEquals ( NUMBER_CONSTANT , ( ( int ) ( pin . getVcpu () ) ) ) ; assertEquals ( STRING_CONSTANT , pin . getCpuSet () ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsNoNetworkName ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; iface . setNetworkName ( null ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , org.ovirt.engine.core.utils.NetworkUtils . calculateNetworkImplementationDetails ( null , null , iface ) ) ; }
@ java.lang.Override public void setClusterMap ( java.util.Map < java.lang.String , java.lang.String > clusterMap ) { this . clusterMap = clusterMap ; }
protected boolean isDiskExistAndAttachedToVm ( org.ovirt.engine.core.common.businessentities.storage.Disk disk ) { org.ovirt.engine.core.bll.validator.storage.DiskValidator diskValidator = getDiskValidator ( disk ) ; return ( validate ( diskValidator . isDiskExists () ) ) && ( validate ( diskValidator . isDiskAttachedToVm ( org.ovirt.engine.core.bll.storage.disk.AbstractDiskVmCommand . getVm () ) ) ) ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmDisksServer getDisksResource () { return new org.ovirt.engine.api.v3.servers.V3VmDisksServer ( id , getDelegate () . getDisksResource () ) ; }
@ org.junit.jupiter.api.BeforeEach public void createValidator () { validator = new org.ovirt.engine.core.bll.validator.VfsConfigValidator ( org.ovirt.engine.core.bll.validator.VfsConfigValidatorTest.NIC_ID , oldVfsConfig ) ; }
@ java.lang.Override public java.lang.String toString () { if ( ( uuid ) == null ) { return STRING_CONSTANT ; } return uuid . toString () ; }
@ java.lang.Override public org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient createClient ( org.ovirt.vdsm.jsonrpc.client.reactors.Reactor reactor , java.nio.channels.Selector selector , java.lang.String hostname , int port ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { return new org.ovirt.vdsm.jsonrpc.client.reactors.stomp.StompClient ( reactor , selector , hostname , port ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( a . getId () . equals ( getStorageDomain () . getId () ) ) && ( ( a . getstatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ; }
@ java.lang.Override public void forceAddMac ( java.lang.String mac ) { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . writeLock () ) ) { forceAddMacWithoutLocking ( mac ) ; } }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
public void setCluster ( final org.ovirt.engine.core.common.businessentities.Cluster value ) { cluster = value ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return iface . getNetworkName () . equals ( n . getname () ) ; }
org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.common.businessentities.VM , org.ovirt.engine.core.vdsbroker.monitoring.VdsmVm > createPair () { org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.common.businessentities.VM , org.ovirt.engine.core.vdsbroker.monitoring.VdsmVm > pair = pairOf ( createDbVm () , createVmInternalData ( null ) ) ; addWatchDogEvents ( pair ) ; addClientIpChanged ( pair ) ; return pair ; }
@ java.lang.Override protected org.ovirt.engine.api.model.DataCenter deprecatedPopulate ( org.ovirt.engine.api.model.DataCenter model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { return parent . deprecatedPopulate ( model , entity ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network net ) { return net . getname () . equals ( getParameters () . getNetwork () . getname () ) ; }
public void validate () { validateCommon () ; validateSmtp () ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) . getnum_of_cpus () ) ; }
@ java.lang.Override protected void postAction () { resetData () ; updateOptions () ; }
private org.springframework.jdbc.core.RowMapper < org.ovirt.engine.core.common.businessentities.Quota > getQuotaMetaDataFromResultSet () { return new org.springframework.jdbc.core.RowMapper < org.ovirt.engine.core.common.businessentities.Quota > () { @ java.lang.Override public org.ovirt.engine.core.common.businessentities.Quota mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { return getQuotaMetaDataFromResultSet ( rs ) ; } } ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId ) { return mockStorageDomain ( storageId , NUMBER_CONSTANT , NUMBER_CONSTANT , StorageType.UNKNOWN ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.LdapGroup > getAll () { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.AdGroupDAODbFacadeImpl.ADGroupRowMapper.instance , getCustomMapSqlParameterSource () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.gluster.GlusterBrickEntity getEntity ( int index ) { return setUpEntityExpectations ( control . createMock ( org.ovirt.engine.core.common.businessentities.gluster.GlusterBrickEntity . class ) , index , false ) ; }
@ org.junit.Test public void passthroughProfileContainsPortMirroring () { passthroughProfileContainsSupportedPropertiesTest ( true , true , null , null ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties ( false ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_PASSTHROUGH_PROFILE_CONTAINS_NOT_SUPPORTED_PROPERTIES ) ) ; }
@ org.junit.Test public void testGetByNameAndCluster () { org.ovirt.engine.core.common.businessentities.network.Network result = dao . getByNameAndCluster ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME , cluster ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.NetworkDAOTest.EXISTING_NETWORK_NAME , result . getname () ) ; }
@ org.junit.Test public void testIsNetworkInSyncWhenIfaceQosIsNull ( ) throws java.lang.Exception { iface . setQos ( null ) ; org.junit.Assert . assertThat ( createTestedInstanceWithSameNonQosValues () . isNetworkInSync () , org.hamcrest.CoreMatchers . is ( true ) ) ; }
protected org.ovirt.engine.core.compat.Guid getStoragePoolIdFromSourceImageContainer () { return org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () . getStoragePoolId () . getValue () ; }
public int getVlanId () { java.lang.Integer vlanId = getEntity () . getVlanId () ; return vlanId == null ? - NUMBER_CONSTANT : vlanId ; }
@ java.lang.Override public void setId ( org.ovirt.engine.core.compat.Guid id ) { this . vmId = id ; }
protected void removeVmFromDb () { removeLunDisks () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmUsers () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmNetwork () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmSnapshots () ; removeVmStatic ( getParameters () . isRemovePermissions () ) ; }
@ java.lang.Override public org.ovirt.engine.core.vdsbroker.vdsbroker.StatusOnlyReturnForXmlRpc snapshot ( java.lang.String vmId , java.util.Map < java.lang.String , java.lang.String > [] disks ) { return snapshot ( vmId , disks , null , false ) ; }
@ java.lang.Override public void onError ( com.google.gwt.http.client.Request request , java.lang.Throwable exception ) {}
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageDomain getForStoragePool ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid storagepool ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.StorageDomainDAODbFacadeImpl.StorageDomainRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) . addValue ( STRING_CONSTANT , storagepool ) ) ; }
@ org.junit.Test public void executeCommand () { setupMocks () ; cmd . executeCommand () ; org.junit.Assert . assertEquals ( AuditLogType.GLUSTER_HOOK_REFRESH , cmd . getAuditLogTypeValue () ) ; }
@ org.junit.Before public void setup () { final org.ovirt.engine.core.common.config.IConfigUtilsInterface configUtils = org.mockito.Mockito . mock ( org.ovirt.engine.core.common.config.IConfigUtilsInterface . class ) ; org.mockito.Mockito . when ( configUtils . getValue ( ConfigValues.SearchResultsLimit , ConfigCommon.defaultConfigurationVersion ) ) . thenReturn ( NUMBER_CONSTANT ) ; org.ovirt.engine.core.common.config.Config . setConfigUtils ( configUtils ) ; }
public void setBalloonEnabled ( boolean isBallonEnabled ) { balloonEnabled = isBallonEnabled ; }
@ org.junit.Test public void testGetAllForStoragePoolAndStatus () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePoolAndStatus ( existingVds . getStoragePoolId () , existingVds . getstatus () ) ; assertCorrectGetAllResult ( result ) ; }
@ java.lang.Override public void initialize ( org.ovirt.engine.ui.uicommonweb.models.SystemTreeItemModel systemTreeSelectedItem ) { super . initialize ( systemTreeSelectedItem ) ; getModel () . setIsCustomPropertiesTabAvailable ( false ) ; }
protected void fillImagesMapBasedOnTemplate () { org.ovirt.engine.core.bll.ImagesHandler . fillImagesMapBasedOnTemplate ( org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () , org.ovirt.engine.core.bll.AddVmCommand . getStorageDomainDAO () . getAllForStoragePool ( org.ovirt.engine.core.bll.AddVmCommand . getVmTemplate () . getStoragePoolId () . getValue () ) , diskInfoDestinationMap , destStorages , false ) ; }
public static void mockVmNumaNodeDao ( final org.ovirt.engine.core.dao.VmNumaNodeDao vmNumaNodeDao , java.util.List < org.ovirt.engine.core.common.businessentities.VmNumaNode > vmNumaNodes ) { org.mockito.Mockito . when ( vmNumaNodeDao . getAllVmNumaNodeByVmId ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( vmNumaNodes ) ; }
public org.ovirt.engine.core.bll.tasks.SPMAsyncTask construct ( org.ovirt.engine.core.common.asynctasks.AsyncTaskCreationInfo creationInfo , org.ovirt.engine.core.common.businessentities.AsyncTask asyncTask ) { org.ovirt.engine.core.common.asynctasks.AsyncTaskParameters asyncTaskParams = new org.ovirt.engine.core.common.asynctasks.AsyncTaskParameters ( creationInfo , asyncTask ) ; return construct ( creationInfo . getTaskType () , asyncTaskParams , true ) ; }
private void remove () { if ( ( getConfirmWindow () ) != null ) { return; } setConfirmWindow ( new org.ovirt.engine.ui.uicommonweb.models.providers.RemoveProvidersModel ( this , false ) ) ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmGraphicsConsoleServer getConsoleResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) { return new org.ovirt.engine.api.v3.servers.V3VmGraphicsConsoleServer ( getDelegate () . getConsoleResource ( id ) ) ; }
@ org.junit.Test public void formatStringTest () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , result ) ; }
@ org.junit.Test public void testGetMasterStorageDomainIdForPool () { org.ovirt.engine.core.compat.Guid result = dao . getMasterStorageDomainIdForPool ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_DOMAIN_ID , result ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { allNetworks = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; queryInterfaces () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData object ) { return java.lang.String . valueOf ( object . getVm () . getDiskMap () . size () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { setCommandExecutionAllowedForProvider ( ( ( org.ovirt.engine.core.common.businessentities.Provider ) ( returnValue . getReturnValue () ) ) ) ; }
@ org.junit.Test public void validateFailsWithClusterDoesNotSupportGluster () { org.mockito.Mockito . doReturn ( getCluster ( false , Version.v4_1 ) ) . when ( clusterDao ) . get ( org.mockito.ArgumentMatchers . any () ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( cmd , EngineMessage.ACTION_TYPE_FAILED_CLUSTER_DOES_NOT_SUPPORT_GLUSTER ) ; }
private org.ovirt.engine.api.model.Disks createDisksCollection () { org.ovirt.engine.api.model.Disks disks = new org.ovirt.engine.api.model.Disks () ; disks . getDisks () . add ( map ( createDiskList () . get ( NUMBER_CONSTANT ) , null ) ) ; return disks ; }
@ java.lang.Override public void processHardwareCapabilities ( org.ovirt.engine.core.common.businessentities.VDS vds ) { getEventListener () . processOnCpuFlagsChange ( vds . getId () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { setItems ( ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue . getReturnValue () ) ) ) ; }
public java.lang.String getHostFingerprint ( ) throws java.lang.Exception { if ( ( client ) == null ) { throw new java.net.ConnectException ( STRING_CONSTANT ) ; } return ( ( org.ovirt.engine.core.bll.utils.EngineSSHClient ) ( client ) ) . getHostFingerprint () ; }
private void mockJobDao ( org.ovirt.engine.core.common.job.Job job ) { org.mockito.Mockito . when ( jobDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( job ) ; }
protected org.ovirt.engine.core.common.action.VdcReturnValueBase executeChildCopyingCommand ( org.ovirt.engine.core.common.action.VdcActionParametersBase parameters ) { org.ovirt.engine.core.common.action.VdcReturnValueBase result = org.ovirt.engine.core.bll.Backend . getInstance () . runInternalAction ( getChildActionType () , parameters , org.ovirt.engine.core.bll.job.ExecutionHandler . createDefaultContexForTasks ( org.ovirt.engine.core.bll.AddVmAndCloneImageCommand . getExecutionContext () ) ) ; return result ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.VDSGroup , org.ovirt.engine.core.common.businessentities.network.NetworkCluster > object ) { return object . getFirst () . getName () ; }
private void oldGroupIsDetachedDefault () { org.mockito.Mockito . when ( vdsGroupDAO . get ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( org.ovirt.engine.core.bll.UpdateVdsGroupCommandTest . createDetachedDefaultVdsGroup () ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.uicommon.popup.vm.PopupWidgetConfigMap createWidgetConfiguration () { return super . createWidgetConfiguration () . update ( hostTab , org.ovirt.engine.ui.common.widget.uicommon.popup.vm.PopupWidgetConfig . hiddenField () ) ; }
@ java.lang.Override public java.lang.String render ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeOptionInfo optionInfo ) { if ( optionInfo != null ) { return optionInfo . getKey () ; } return null ; }
@ org.junit.Test public void clusterWithNoServiceEnabled () { createCommandWithNoService () ; org.mockito.Mockito . when ( clusterDao . get ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( org.ovirt.engine.core.bll.UpdateClusterCommandTest . createClusterWithNoCpuName () ) ; cpuExists () ; validateFailedWithReason ( EngineMessage.CLUSTER_AT_LEAST_ONE_SERVICE_MUST_BE_ENABLED ) ; }
private void addInlineNics ( org.ovirt.engine.api.model.Vm vm ) { org.ovirt.engine.core.compat.Guid vmId = asGuid ( vm . getId () ) ; org.ovirt.engine.api.restapi.resource.BackendVmNicsResource nicsResource = inject ( new org.ovirt.engine.api.restapi.resource.BackendVmNicsResource ( vmId ) ) ; org.ovirt.engine.api.model.Nics nics = nicsResource . list () ; vm . setNics ( nics ) ; }
@ org.junit.Test public void cpuTuneToString () { for ( java.lang.String sample : new java.lang.String [] { STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT } ) { assertEquals ( sample , org.ovirt.engine.api.restapi.types.VmMapper . cpuTuneToString ( org.ovirt.engine.api.restapi.types.VmMapper . stringToCpuTune ( sample ) ) ) ; } }
@ org.junit.Before public void prepareMocks () { org.mockito.Mockito . doReturn ( lunDao ) . when ( command ) . getLunDao () ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.compat.Version object ) { return object . getValue () ; }
private void updateBootOrder ( org.ovirt.engine.core.common.businessentities.VmBase oldVmBase , org.ovirt.engine.core.common.businessentities.VmBase newVmBase ) { if ( ( oldVmBase . getDefaultBootSequence () ) != ( newVmBase . getDefaultBootSequence () ) ) { updateBootOrder ( newVmBase . getId () ) ; } }
private void UpdateDomainInProblemData ( org.ovirt.engine.core.compat.Guid domainId , org.ovirt.engine.core.compat.Guid vdsId , java.lang.String vdsName ) { org.ovirt.engine.core.vdsbroker.irsbroker.IrsBrokerCommand.log . debugFormat ( STRING_CONSTANT , org.ovirt.engine.core.vdsbroker.irsbroker.IrsBrokerCommand.IrsProxyData . getDomainIdTuple ( domainId ) , vdsName ) ; _domainsInProblem . get ( domainId ) . add ( vdsId ) ; }
@ java.lang.Override public int compare ( java.lang.Object x , java.lang.Object y ) { return getValue ( x ) . compareTo ( getValue ( y ) ) ; }
@ java.lang.Override public void connect () { org.ovirt.engine.ui.common.uicommon.RdpConnector connector = new org.ovirt.engine.ui.common.uicommon.RdpConnector ( getAddress () , getDisconnectedEvent () ) ; connector . setRedirectDrives ( getUseLocalDrives () ) ; connector . connect () ; }
@ java.lang.Override public org.ovirt.engine.core.dao.network.VmNetworkInterfaceDao getVmNetworkInterfaceDao () { return org.mockito.Mockito . mock ( org.ovirt.engine.core.dao.network.VmNetworkInterfaceDao . class ) ; }
public static < T extends org.ovirt.engine.core.common.businessentities.VmBase > void updateVmDevices ( T entity ) { if ( entity != null ) { org.ovirt.engine.core.bll.utils.VmDeviceUtils . updateUSBSlots ( entity , entity ) ; } }
protected org.ovirt.engine.core.common.businessentities.Disk getOldDisk () { if ( ( oldDisk ) == null ) { oldDisk = org.ovirt.engine.core.bll.UpdateVmDiskCommand . getDiskDao () . get ( org.ovirt.engine.core.bll.UpdateVmDiskCommand . getParameters () . getDiskId () ) ; } return oldDisk ; }
public org.ovirt.engine.core.bll.ValidationResult isUp () { if ( ( ( storagePool ) == null ) || ( ( storagePool . getStatus () ) != ( org.ovirt.engine.core.common.businessentities.StoragePoolStatus.Up ) ) ) { return new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.VdcBllMessages.ACTION_TYPE_FAILED_IMAGE_REPOSITORY_NOT_FOUND ) ; } return org.ovirt.engine.core.bll.ValidationResult.VALID ; }
@ java.lang.Override public void setUp () { super . setUp () ; generateStorageToDisksMap () ; initDestSDs () ; }
public java.lang.String getValue () { return this . value ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain mockFirstStorageDomain ( int availabeDiskSize ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; storageDomain . setavailable_disk_size ( availabeDiskSize ) ; storageDomain . setstatus ( StorageDomainStatus.Active ) ; storageDomain . setId ( firstStorageDomainId ) ; storageDomain . setstorage_domain_type ( StorageDomainType.Data ) ; return storageDomain ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { try { collection . getTagResource ( STRING_CONSTANT ) ; org.ovirt.engine.api.restapi.resource.AbstractBackendAssignedTagsResourceTest . fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
@ org.junit.Test public void testGetNonePermittedStorageDomains () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getPermittedStorageDomainsByStoragePool ( FixturesTool.USER_EXISTING_ID , ActionGroup.CONSUME_QUOTA , FixturesTool.DATA_CENTER ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public void render ( org.ovirt.engine.ui.common.widget.table.cell.Context context , java.lang.String value , com.google.gwt.safehtml.shared.SafeHtmlBuilder sb , java.lang.String id ) { org.ovirt.engine.ui.common.widget.table.cell.ScrollableTextCell.CellTemplate template = com.google.gwt.core.client.GWT . create ( org.ovirt.engine.ui.common.widget.table.cell.ScrollableTextCell.CellTemplate . class ) ; sb . append ( template . input ( value , STRING_CONSTANT , id ) ) ; }
void setTooltipHtml ( com.google.gwt.safehtml.shared.SafeHtml tooltipHtml ) { tooltip . setHtml ( tooltipHtml ) ; }
@ java.lang.Override protected boolean validate () { return ( ( super . validate () ) && ( validate ( getVfsConfigValidator () . settingSpecificNetworksAllowed () ) ) ) && ( validate ( getVfsConfigValidator () . networkExists ( getNetworkId () ) ) ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _installIncomplete = ( ( java.lang.Boolean ) ( _parser . cliEnvironmentGet ( org.ovirt.ovirt_host_deploy.constants.CoreEnv.INSTALL_INCOMPLETE ) ) ) ; return true ; }
public static void getGlusterHosts ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String hostAddress , java.lang.String rootPassword , java.lang.String fingerprint ) { org.ovirt.engine.core.common.queries.gluster.GlusterServersQueryParameters parameters = new org.ovirt.engine.core.common.queries.gluster.GlusterServersQueryParameters ( hostAddress , rootPassword ) ; parameters . setFingerprint ( fingerprint ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetGlusterServersForImport , parameters , aQuery ) ; }
@ java.lang.Override protected java.util.List < org.ovirt.engine.core.bll.tasks.SPMAsyncTaskHandler > initTaskHandlers () { return java.util.Arrays . < org.ovirt.engine.core.bll.tasks.SPMAsyncTaskHandler > asList ( new org.ovirt.engine.core.bll.lsm.CreateImagePlaceholderTaskHandler ( this ) , new org.ovirt.engine.core.bll.lsm.VmReplicateDiskStartTaskHandler ( this ) , new org.ovirt.engine.core.bll.lsm.VmReplicateDiskFinishTaskHandler ( this ) ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel createActionPanel ( org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider modelProvider ) { return new org.ovirt.engine.ui.common.widget.action.SubTabTreeActionPanel < org.ovirt.engine.ui.uicommonweb.models.vms.DiskModel > ( modelProvider , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
@ java.lang.Override public void run ( org.ovirt.engine.core.common.businessentities.StoragePool item , org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . GetClusterList ( callback . getAsyncQuery () , item . getId () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.VMs list () { if ( isFiltered () ) return mapCollection ( getBackendCollection ( VdcQueryType.GetAllVms , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () ) , true ) ; else return mapCollection ( getBackendCollection ( SearchType.VM ) , false ) ; }
@ org.junit.Test public void testFetchStoragePoolWithNoQuota ( ) throws java.lang.Exception { java.util.List < org.ovirt.engine.core.common.businessentities.Quota > quotaList = dao . getQuotaByStoragePoolGuid ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , quotaList . size () ) ; }
public static void getTemplateListByDataCenter ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid dataCenterId ) { aQuery.converterCallback = new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.TemplateConverter () ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VdcQueryType.GetVmTemplatesByStoragePoolId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) , aQuery ) ; }
@ org.junit.Test public void testCreatePoolMethod ( ) throws java.lang.Exception { expectNotInitializedException () ; pool . createPool ( new org.ovirt.engine.core.common.businessentities.MacPool () ) ; }
@ org.junit.Test public void testGetSysprepPath ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( org.ovirt.engine.core.utils.OsRepositoryImplTest.PATH_TO_SYSPREP , OsRepositoryImpl.INSTANCE . getSysprepPath ( NUMBER_CONSTANT , null ) ) ; }
public java.lang.String getElementId () { return elementId ; }
@ java.lang.Override protected void updateButton () { super . updateButton () ; tooltip . setText ( buildTooltipText () ) ; }
private static void addVirtioScsiController ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.bll.utils.VmDeviceUtils . addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.CONTROLLER , VmDeviceType.VIRTIOSCSI , new java.util.HashMap < java.lang.String , java.lang.Object > () , true , false , null , false ) ; }
@ java.lang.Override protected void verifyModel ( org.ovirt.engine.api.model.Tag model , int index ) { verifyModel ( model , index , org.ovirt.engine.api.restapi.resource.BackendTagsResourceTest.PARENT_GUID . toString () ) ; }
private java.util.Map < java.lang.String , java.lang.Object > executeImpl ( java.lang.String procedureName , org.springframework.jdbc.core.namedparam.MapSqlParameterSource paramsSource , org.ovirt.engine.core.dal.dbbroker.SimpleJdbcCallsHandler.CallCreator callCreatorr ) { return executeImpl ( procedureName , paramsSource , callCreatorr , null ) ; }
void setPort ( int port ) { this . port = port ; }
public void onDataLoad () { onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmFromExportDomainModel.ON_DISK_LOAD ) ) ; }
private void mockVMTemplateDao () { org.mockito.Mockito . when ( vmTemplateDao . get ( vmTemplateId ) ) . thenReturn ( vmTemplate ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.StorageDomainDAODbFacadeImpl.StorageDomainRowMapper.instance ) ; }
@ org.junit.Test public void getUsbPolicySetDisabled () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; assertEquals ( UsbPolicy.DISABLED , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) { onGetClusterList ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( ReturnValue ) ) ) ; }
@ org.junit.Test public void storagePoolId () { b . setStoragePoolId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.compat.Guid n = b . getStoragePoolId () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , n ) ; }
@ com.gwtplatform.mvp.client.annotations.TabInfo ( container = org.ovirt.engine.ui.webadmin.section.main.presenter.tab.datacenter.DataCenterQosSubTabPanelPresenter . class ) static com.gwtplatform.mvp.client.TabData getTabData ( org.ovirt.engine.ui.webadmin.ApplicationConstants applicationConstants , org.ovirt.engine.ui.common.uicommon.model.SearchableDetailModelProvider < org.ovirt.engine.core.common.businessentities.network.NetworkQoS , org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterListModel , org.ovirt.engine.ui.uicommonweb.models.datacenters.DataCenterNetworkQoSListModel > modelProvider ) { return new org.ovirt.engine.ui.common.widget.tab.ModelBoundTabData ( applicationConstants . dataCenterNetworkQoSSubTabLabel () , NUMBER_CONSTANT , modelProvider ) ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.validator.HostNetworkQosValidator validator = getQosValidator ( getQos () ) ; return ( ( super . validate () ) && ( validate ( validator . requiredValuesPresent () ) ) ) && ( validate ( validator . valuesConsistent () ) ) ; }
protected final void addCanDoActionMessages ( org.ovirt.engine.core.common.errors.EngineMessage . . . messages ) { for ( org.ovirt.engine.core.common.errors.EngineMessage msg : messages ) { addCanDoActionMessage ( msg ) ; } }
protected void removeVmFromDb () { org.ovirt.engine.core.bll.RemoveVmCommand . removeVmUsers () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmNetwork () ; org.ovirt.engine.core.bll.RemoveVmCommand . removeVmSnapshots () ; removeVmStatic ( org.ovirt.engine.core.bll.RemoveVmCommand . getParameters () . isRemovePermissions () ) ; removeIcons () ; }
private org.ovirt.engine.core.dao.VmTemplateDaoImpl.VMTemplateWithPlugInfo getVMTemplatesWithPlugInfo ( org.ovirt.engine.core.compat.Guid imageId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.VmTemplateDaoImpl.VMTemplateWithPlugInfoRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , imageId ) ) ; }
@ org.junit.Test public void testJsonDiskDescription ( ) throws java.io.IOException { java.lang.String jsonDescription = null ; jsonDescription = org.ovirt.engine.core.bll.ImagesHandler . getJsonDiskDescription ( STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , jsonDescription ) ; }
public int getNiceLevel () { return this . vmStatic . getNiceLevel () ; }
@ org.junit.Test public void testPosixEmptyVFSType () { org.ovirt.engine.core.common.businessentities.StorageServerConnections newPosixConnection = createPosixConnection ( STRING_CONSTANT , StorageType.POSIXFS , null , STRING_CONSTANT ) ; parameters . setStorageServerConnection ( newPosixConnection ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.VALIDATION_STORAGE_CONNECTION_EMPTY_VFSTYPE ) ; }
@ org.junit.Test public void vmTemplateNameDefault () { final java.lang.String n = b . getVmTemplateName () ; org.junit.Assert . assertNull ( n ) ; }
@ java.lang.Override public void markAsInvalid ( java.util.List < java.lang.String > validationHints ) { valid = false ; applyCommonValidationStyles () ; getValidatedWidgetStyle () . setBorderColor ( STRING_CONSTANT ) ; }
public boolean isPartOfBond ( java.lang.String bondName ) { return ( isPartOfBond () ) && ( getBondName () . equals ( bondName ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VDSStatus getStatus () { return status ; }
private java.lang.String getJsonDiskDescription ( ) throws java.io.IOException { return org.ovirt.engine.core.bll.MetadataDiskDescriptionHandler . getInstance () . getJsonDiskDescription ( org.ovirt.engine.core.bll.UpdateVmDiskCommand . getParameters () . getDiskInfo () ) ; }
protected abstract org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient createClient ( org.ovirt.vdsm.jsonrpc.client.reactors.Reactor reactor , java.nio.channels.Selector selector , java.lang.String hostname , int port ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException ;
public boolean isFailBack () { return this . vmStatic . isFailBack () ; }
public boolean hasVlan () { return ( getVlanId () ) >= NUMBER_CONSTANT ; }
@ org.junit.Test public void networkDidntChange () { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = createNic ( STRING_CONSTANT , STRING_CONSTANT ) ; mockExistingIfaces ( nic ) ; org.ovirt.engine.core.bll.network.host.SetupNetworksHelper helper = createHelper ( createParametersForNics ( nic ) ) ; validateAndAssertNoChanges ( helper ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.DiskResource getDeviceSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendStorageDomainDiskResource ( id , this ) ) ; }
public org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidatorTest.HostSetupNetworksValidatorBuilder addNetworks ( org.ovirt.engine.core.common.businessentities.network.Network . . . networks ) { if ( networks == null ) { return this ; } addNetworks ( java.util.Arrays . asList ( networks ) ) ; return this ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageServerConnections convert ( java.lang.Object source ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.StorageServerConnections ) ( source ) ) : null ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { context.dataCenterFoundById = ( ( org.ovirt.engine.core.common.businessentities.storage_pool ) ( returnValue ) ) ; rollback2 () ; }
@ org.junit.Before @ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; org.mockito.Mockito . doReturn ( STRING_CONSTANT ) . when ( getQuery () ) . generateOvfConfig ( org.mockito.Matchers . any ( org.ovirt.engine.core.common.businessentities.VM . class ) ) ; }
@ org.junit.Test public void versionDecreaseWithHost () { createCommandWithOlderVersion ( true , false ) ; setupCpu () ; VdsExist () ; canDoActionFailedWithReason ( EngineMessage.ACTION_TYPE_FAILED_CANNOT_DECREASE_COMPATIBILITY_VERSION ) ; }
private org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase getAddParams ( org.ovirt.engine.core.common.businessentities.StorageServerConnections entity , org.ovirt.engine.core.compat.Guid hostId ) { org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase params = new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase ( entity , hostId , false ) ; params . setVdsId ( hostId ) ; return params ; }
protected void replaceTimerChangeHandler () { if ( ( timerChangeHandler ) != null ) { removeTimerChangeHandler () ; } addTimerChangeHandler () ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { boolean isConsistent = returnValue . getReturnValue () ; setConsoleAddressPartiallyOverridden ( ( ! isConsistent ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.job.Step generateNewEntity () { org.ovirt.engine.core.common.job.Step step = new org.ovirt.engine.core.common.job.Step ( org.ovirt.engine.core.common.job.StepEnum.EXECUTING ) ; step . setJobId ( org.ovirt.engine.core.dao.StepDaoTest.EXISTING_JOB_ID ) ; step . setStepNumber ( NUMBER_CONSTANT ) ; step . setDescription ( STRING_CONSTANT ) ; step . setCorrelationId ( STRING_CONSTANT ) ; return step ; }
private void addAuditLogCustomValues () { this . addCustomValue ( STRING_CONSTANT , org.ovirt.engine.core.bll.RemoveDiskSnapshotsCommand . getParameters () . getDiskAlias () ) ; this . addCustomValue ( STRING_CONSTANT , org.apache.commons.lang.StringUtils . join ( getSnapshotsNames () , STRING_CONSTANT ) ) ; }
private void loadClusterPolicies () { java.util.List < org.ovirt.engine.core.common.scheduling.ClusterPolicy > allClusterPolicies = getClusterPolicyDao () . getAll () ; for ( org.ovirt.engine.core.common.scheduling.ClusterPolicy clusterPolicy : allClusterPolicies ) { policyMap . put ( clusterPolicy . getId () , clusterPolicy ) ; } }
@ java.lang.Override public org.ovirt.engine.api.model.Templates list () { if ( isFiltered () ) return mapCollection ( getBackendCollection ( VdcQueryType.GetAllVmTemplates , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , SearchType.VmTemplate ) ) ; else return mapCollection ( getBackendCollection ( SearchType.VmTemplate ) ) ; }
public static org.ovirt.engine.core.common.utils.Pair < java.lang.String , java.lang.String > makeLockingPair ( org.ovirt.engine.core.common.locks.LockingGroup group , org.ovirt.engine.core.common.errors.EngineMessage message ) { return org.ovirt.engine.core.bll.LockMessagesMatchUtil . makeLockingPair ( group , message . name () ) ; }
@ org.junit.Test public void testGetPermittedStorageDomainsById () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getPermittedStorageDomainsById ( org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_USER_ID , ActionGroup.CONFIGURE_VM_STORAGE , existingDomain . getId () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( result . getId () , existingDomain . getId () ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.gluster.GlusterVolumesResource getGlusterVolumesResource () { return inject ( new org.ovirt.engine.api.restapi.resource.gluster.BackendGlusterVolumesResource ( this , id ) ) ; }
private static < V > java.util.concurrent.ExecutorCompletionService < V > createCompletionService () { return new java.util.concurrent.ExecutorCompletionService < V > ( org.ovirt.engine.core.utils.threadpool.ThreadPoolUtil.es ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue ) { spice . getOptions () . setUsbAutoShare ( returnValue ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i ) { return i . getName () . equals ( getParameters () . getInterface () . getName () ) ; }
private void forceAddMac ( java.lang.String mac ) { org.ovirt.engine.core.bll.network.macpool.MacPoolUsingRanges.log . debug ( STRING_CONSTANT , mac , this ) ; macsStorage . useMacNoDuplicityCheck ( org.ovirt.engine.core.utils.MacAddressRangeUtils . macToLong ( mac ) ) ; logWhenMacPoolIsEmpty () ; }
public void setId ( java.util.List < org.ovirt.engine.core.compat.Guid > ids ) { this . ids = ids ; }
public java.lang.String getVdsGroupName () { if ( ( getVdsGroup () ) != null ) { return getVdsGroup () . getName () ; } return STRING_CONSTANT ; }
protected org.ovirt.engine.core.bll.HotPlugDiskToVmCommand < org.ovirt.engine.core.common.action.HotPlugDiskToVmParameters > createCommand () { return new org.ovirt.engine.core.bll.HotPlugDiskToVmCommand ( createParameters () ) ; }
@ java.lang.Override protected boolean isGhost ( org.ovirt.engine.ui.uicommonweb.models.macpool.MacRangeModel value ) { return ( org.ovirt.engine.core.compat.StringHelper . isNullOrEmpty ( value . getLeftBound () . getEntity () ) ) && ( org.ovirt.engine.core.compat.StringHelper . isNullOrEmpty ( value . getRightBound () . getEntity () ) ) ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getStatus () ) == ( status ) ; }
protected org.ovirt.engine.core.common.action.VdcReturnValueBase executeChildCopyingCommand ( org.ovirt.engine.core.common.action.VdcActionParametersBase parameters ) { org.ovirt.engine.core.common.action.VdcReturnValueBase result = runInternalAction ( getChildActionType () , parameters , org.ovirt.engine.core.bll.job.ExecutionHandler . createDefaultContexForTasks ( org.ovirt.engine.core.bll.AddVmAndCloneImageCommand . getExecutionContext () ) ) ; return result ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.compat.Guid > getAsyncTaskIdsByEntity ( org.ovirt.engine.core.compat.Guid entityId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , entityId ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.AsyncTaskDAODbFacadeImpl.IdRowMapper.instance , parameterSource ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.templates.TemplateListModel templateListModel = ( ( org.ovirt.engine.ui.uicommonweb.models.templates.TemplateListModel ) ( target ) ) ; boolean isNameUnique = ( ( java.lang.Boolean ) ( returnValue ) ) ; templateListModel . PostNameUniqueCheck ( isNameUnique ) ; }
protected T getParameters () { return _parameters ; }
@ org.ovirt.engine.core.bll.VdsDeploy.CallWhen ( value = org.ovirt.engine.core.bll.VdsDeploy.CustomizationCondition.NEUTRON_LINUX_BRIDGE_SETUP ) public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( OpenStackEnv.NEUTRON_LINUXBRIDGE_ENABLE , true ) ; return true ; }
public < P extends org.ovirt.engine.core.common.action.VdcActionParametersBase > org.ovirt.engine.core.bll.CommandBase < P > createCommand ( org.ovirt.engine.core.common.action.VdcActionType action , P parameters ) { return org.ovirt.engine.core.bll.CommandsFactory . createCommand ( action , parameters ) ; }
@ org.junit.Test public void testAddDisk ( ) throws java.lang.Exception { testAddDiskImpl ( org.ovirt.engine.api.restapi.resource.BackendVmDisksResourceTest . getModel () ) ; }
org.ovirt.engine.core.common.businessentities.AuditLog createAuditLog ( org.ovirt.engine.core.common.AuditLogType logType , java.lang.String message ) ;
public void setIsSameVdsMessageVisible ( boolean value ) { isSameVdsMessageVisible = ( value && ( gethasSameVdsMessage () ) ) && ( ! ( getIsAutoSelect () ) ) ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain2 ) { return ( - NUMBER_CONSTANT ) * ( storageDomain . getAvailableDiskSize () . compareTo ( storageDomain2 . getAvailableDiskSize () ) ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) private void setUpAccessBaseAgingExpectations () { java.lang.ref.ReferenceQueue < java.lang.Integer > queue = org.mockito.Mockito . mock ( java.lang.ref.ReferenceQueue . class ) ; map = new org.ovirt.engine.core.utils.ReapedMap ( NUMBER_CONSTANT , true , queue ) ; }
@ java.lang.Override protected java.lang.String getClusterName () { return getEntity () . getName () ; }
@ java.lang.Override public void addAlert ( com.google.gwt.user.client.ui.Widget alertWidget ) { alertsList . add ( new org.ovirt.engine.ui.webadmin.widget.alert.InLineAlertWidget ( alertWidget ) ) ; if ( ! ( alertsPanel . isVisible () ) ) { alertsPanel . setVisible ( true ) ; } }
public org.ovirt.engine.core.common.businessentities.ServerCpu findMaxServerCpuByFlags ( java.lang.String flags , org.ovirt.engine.core.compat.Version ver ) { final org.ovirt.engine.core.bll.CpuFlagsManagerHandler.CpuFlagsManager cpuFlagsManager = org.ovirt.engine.core.bll.CpuFlagsManagerHandler._managersDictionary . get ( ver ) ; if ( cpuFlagsManager != null ) { return cpuFlagsManager . findMaxServerCpuByFlags ( flags ) ; } return null ; }
@ org.junit.Test public void testGetForStoragePool () { org.ovirt.engine.core.common.businessentities.StorageDomain result = dao . getForStoragePool ( existingDomain . getId () , org.ovirt.engine.core.dao.StorageDomainDAOTest.EXISTING_STORAGE_POOL_ID ) ; assertGetResult ( result ) ; }
@ java.lang.Override protected void onPropertyChanged ( org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs e ) { super . onPropertyChanged ( e ) ; if ( e.PropertyName . equals ( STRING_CONSTANT ) ) { updateStorageDomainsAvailability () ; updateQuotaAvailability () ; } }
private org.ovirt.engine.core.bll.gluster.CreateGlusterVolumeCommand createTestCommand ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity volumeEntity ) { org.ovirt.engine.core.common.action.gluster.CreateGlusterVolumeParameters parameters = new org.ovirt.engine.core.common.action.gluster.CreateGlusterVolumeParameters ( volumeEntity ) ; return new org.ovirt.engine.core.bll.gluster.CreateGlusterVolumeCommand ( parameters , null ) ; }
@ org.junit.Before public void setup () { map = new org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap () ; cmd . init () ; }
public org.ovirt.engine.ui.uicommonweb.UICommand setExecuteProhibitionReasons ( java.util.List < java.lang.String > value ) { privateExecuteProhibitionReasons = value ; return this ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return ( getDiskImage () ) != null ? getDiskImage () . getStoragePoolId () : null ; }
public void setDiskInfoList ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > diskInfoList ) { this . diskInfoList = diskInfoList ; }
public void setCallbackEnabled ( boolean enabled ) { childCmdEntity . setCallbackEnabled ( enabled ) ; }
public void setstorage_domain_shared_status ( org.ovirt.engine.core.common.businessentities.StorageDomainSharedStatus value ) { _storageDomainSharedStatus = value ; }
public void setId ( java.lang.String value ) { this . id = value ; }
@ org.junit.Before public void mockVmDao () { org.mockito.Mockito . doReturn ( vmDao ) . when ( command ) . getVmDao () ; }
@ org.junit.Test public void testGetInnerJoin () { org.junit.Assert . assertNotNull ( STRING_CONSTANT , comp . getInnerJoin ( STRING_CONSTANT , STRING_CONSTANT ) ) ; }
protected void TestVdsPowerManagementStatus ( org.ovirt.engine.core.common.businessentities.VdsStatic vdsStatic ) { if ( vdsStatic . isPmEnabled () ) { runInternalQuery ( VdcQueryType.GetVdsFenceStatus , new org.ovirt.engine.core.common.queries.VdsIdParametersBase ( vdsStatic . getId () ) ) ; } }
public static org.ovirt.engine.core.bll.utils.ClusterUtils getInstance () { return org.ovirt.engine.core.bll.utils.ClusterUtils.instance ; }
private static org.ovirt.engine.core.common.businessentities.network.VmNic createNewInterface () { org.ovirt.engine.core.common.businessentities.network.VmNic iface = new org.ovirt.engine.core.common.businessentities.network.VmNic () ; iface . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; iface . setMacAddress ( org.ovirt.engine.core.utils.RandomUtils . instance () . nextString ( NUMBER_CONSTANT ) ) ; return iface ; }
public static void RemoveAllVdsAlerts ( org.ovirt.engine.core.compat.Guid vdsId , boolean removeConfigAlerts ) { org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getAuditLogDao () . removeAllForVds ( vdsId , removeConfigAlerts ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getStoragePoolId () { return ( getEntity () ) != null ? getEntity () . getStoragePoolId () : null ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.vms.VmInterfaceModel iface ) { super . edit ( iface ) ; }
@ java.lang.Override public void contextDestroyed ( javax.servlet.ServletContextEvent event ) { java.lang.System.out . println ( STRING_CONSTANT ) ; final org.ovirt.vdsmfake.task.TaskProcessor taskProcessor = org.ovirt.vdsmfake.task.TaskProcessor . getInstance () ; taskProcessor . destroy () ; }
@ java.lang.Override protected org.ovirt.engine.api.model.HostNIC map ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface entity , org.ovirt.engine.api.model.HostNIC template ) { return map ( entity , template , null ) ; }
@ org.junit.Before public void setup () { org.mockito.Mockito . when ( version . getValue () ) . thenReturn ( null ) ; validator = new org.ovirt.engine.core.bll.validator.VmNicValidator ( nic , version ) ; }
public java.util.ArrayList < org.ovirt.engine.core.common.action.VdcActionParametersBase > getUpdateParameters () { return new java.util.ArrayList ( updateParametersMap . values () ) ; }
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getExclusiveLocks () { return java.util.Collections . singletonMap ( org.ovirt.engine.core.bll.MoveOrCopyDiskCommand . getImage () . getId () . toString () , LockingGroup.DISK . name () ) ; }
@ java.lang.Override public boolean Match ( org.ovirt.engine.core.common.businessentities.VDS source ) { return source . getStatus () . equals ( status ) ; }
public java.util.List < org.ovirt.engine.core.common.scheduling.ClusterPolicy > getClusterPolicies () { return new java.util.ArrayList ( policyMap . values () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel vmModel = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ; vmModel . set_MaxMemSize64 ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; }
public void setAvailableDiskSize ( java.lang.Integer availableDiskSize ) { getStorageDynamicData () . setAvailableDiskSize ( availableDiskSize ) ; UpdateTotalDiskSize () ; updateOverCommitPercent () ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.QuotaVdsGroup object ) { return ( ( object . getVdsGroupName () ) == null ) || ( object . getVdsGroupName () . equals ( STRING_CONSTANT ) ) ? constants . ultQuotaForAllClustersQuotaPopup () : object . getVdsGroupName () ; }
@ java.lang.Override protected void buildVmSoundDevices () { if ( ( vm . getVmType () ) == ( org.ovirt.engine.core.common.businessentities.VmType.Desktop ) ) { createInfo . put ( VdsProperties.soundDevice , getSoundDevice ( vm . getStaticData () , vm . getVdsGroupCompatibilityVersion () ) ) ; } }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.VDSGroup result = dao . getByName ( existingVdsGroup . getName () ) ; assertCorrectVDSGroup ( result ) ; }
void onLoginSuccess ( ) ;
boolean vdsUpEvent ( org.ovirt.engine.core.common.businessentities.VDS vds ) ;
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.StorageDomain value ) { if ( ( value == null ) || ( ! ( value . equals ( getEntity () ) ) ) ) { super . setEntity ( value ) ; } }
public static void getVmTemplatesWithPermittedAction ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.common.businessentities.ActionGroup actionGroup ) { aQuery.converterCallback = new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.TemplateConverter () ; org.ovirt.engine.core.common.queries.GetEntitiesWithPermittedActionParameters getEntitiesWithPermittedActionParameters = new org.ovirt.engine.core.common.queries.GetEntitiesWithPermittedActionParameters () ; getEntitiesWithPermittedActionParameters . setActionGroup ( actionGroup ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetVmTemplatesWithPermittedAction , getEntitiesWithPermittedActionParameters , aQuery ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { context.addDataCenterReturnValue = result . getReturnValue () ; prepare3 () ; }
public void setGlusterVolumeName ( java.lang.String glusterVolumeName ) { this . glusterVolumeName = glusterVolumeName ; }
@ org.ovirt.engine.ui.userportal.widget.extended.vm.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml consoleButton ( java.lang.String id , java.lang.String className ) ;
@ org.junit.Test public void testEvalPositive () { org.mockito.Mockito . doReturn ( false ) . when ( mockExternalNetworkPredicate ) . test ( mockNetwork ) ; org.junit.Assert . assertTrue ( underTest . test ( mockNetwork ) ) ; }
private void bindEventBus () { bind ( com.google.gwt.event.shared.EventBus . class ) . to ( com.google.gwt.event.shared.EventBus . class ) ; bind ( com.google.gwt.event.shared.EventBus . class ) . to ( com.google.gwt.event.shared.SimpleEventBus . class ) . in ( com.google.inject.Singleton . class ) ; }
private void verifyDomainForMemory ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = memoryStorageHandler . findStorageDomainForMemory ( storageDomains , disksList ) ; org.junit.Assert . assertEquals ( storageDomain , validStorageDomain ) ; }
public void removeUsbControllers ( org.ovirt.engine.core.compat.Guid vmId ) { removeVmDevices ( getUsbControllers ( vmId ) ) ; }
@ org.junit.Test public void vmNotDuringSnapshotReturnsValidForNoSnapshotInProgress ( ) throws java.lang.Exception { org.mockito.Mockito . when ( snapshotDao . exists ( vmId , SnapshotStatus.LOCKED ) ) . thenReturn ( false ) ; org.ovirt.engine.core.bll.snapshots.SnapshotsValidatorTest . validateValidResult ( validator . vmNotDuringSnapshot ( vmId ) ) ; }
private void addCustomProperties ( org.ovirt.engine.api.model.VersionCaps version , java.util.List < org.ovirt.engine.api.model.CustomProperty > envs ) { version . setCustomProperties ( new org.ovirt.engine.api.model.CustomProperties () ) ; version . getCustomProperties () . getCustomProperties () . addAll ( envs ) ; }
private boolean liveActionRequired () { return ( ( oldIface . isPlugged () ) && ( org.ovirt.engine.core.bll.network.vm.UpdateVmInterfaceCommand . getInterface () . isPlugged () ) ) && ( ( org.ovirt.engine.core.bll.network.vm.UpdateVmInterfaceCommand . getVm () . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.VMStatus.Up ) ) ; }
public static void getOsMaxRam ( int osId , org.ovirt.engine.core.compat.Version version , org.ovirt.engine.ui.frontend.AsyncQuery asyncQuery ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.OsRepository , new org.ovirt.engine.core.common.queries.OsQueryParameters ( org.ovirt.engine.core.common.queries.OsQueryParameters.OsRepositoryVerb.GetMaxOsRam , osId , version ) , asyncQuery ) ; }
@ org.junit.Test public void testGetVmBootActiveDisk () { org.ovirt.engine.core.common.businessentities.storage.Disk bootDisk = dao . getVmBootActiveDisk ( FixturesTool.VM_RHEL5_POOL_57 ) ; org.junit.Assert . assertNotNull ( STRING_CONSTANT , bootDisk ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , FixturesTool.BOOTABLE_DISK_ID , bootDisk . getId () ) ; }
private org.ovirt.engine.ui.webadmin.ApplicationResources getResources () { return org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getApplicationResources () ; }
@ org.junit.Test public void passthroughProfileContainsFilterId () { passthroughProfileContainsSupportedPropertiesTest ( true , false , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.DEFAULT_GUID , org.ovirt.engine.core.bll.validator.VnicProfileValidatorTest.INVALID_NETWORK_FILTER_ID ) ; org.junit.Assert . assertThat ( validator . passthroughProfileContainsSupportedProperties () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . failsWith ( EngineMessage.ACTION_TYPE_FAILED_PASSTHROUGH_PROFILE_CONTAINS_NOT_SUPPORTED_PROPERTIES ) ) ; }
public java.lang.String getPredefinedVMProperties ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.String > GetValue ( ConfigValues.PredefinedVMProperties , version . getValue () ) ; }
public void setLocalDisksUsage ( java.util.Map < java.lang.String , java.lang.Long > localDiskUsage ) { localDisksUsage = localDiskUsage ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3TemplateServer getTemplateResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) { return new org.ovirt.engine.api.v3.servers.V3TemplateServer ( id , getDelegate () . getTemplateResource ( id ) ) ; }
private void createTables ( org.ovirt.engine.ui.uicommonweb.models.storage.RegisterEntityModel model ) { createEntityTable ( model ) ; createInfoPanel ( model ) ; entityTable . asEditor () . edit ( model . getEntities () ) ; }
private org.ovirt.engine.core.common.businessentities.VM createEmptyVm () { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM () ; vm . setCustomProperties ( StringUtils.EMPTY ) ; vm . setPredefinedProperties ( StringUtils.EMPTY ) ; vm . setUserDefinedProperties ( StringUtils.EMPTY ) ; return vm ; }
@ java.lang.Override public java.lang.String getMessage () { return ( super . getMessage () ) + ( java.lang.String . format ( STRING_CONSTANT , privateVdsError . getCode () , privateVdsError . getCode () . getValue () ) ) ; }
public static org.ovirt.engine.core.common.businessentities.network.Network FindNetworkByName ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > items , java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities.network.Network n : items ) { if ( org.ovirt.engine.core.compat.StringHelper . stringsEqual ( n . getName () , name ) ) { return n ; } } return null ; }
@ org.junit.Test public void testGet () { org.ovirt.engine.core.common.businessentities.Bookmark result = dao . get ( existing_bookmark . getId () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( existing_bookmark . getId () , result . getId () ) ; }
@ org.junit.Test public void calculateNetworkImplementationDetailsNetworkDefaultMtuOutOfSync ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = createNetworkDevice () ; calculateNetworkImplementationDetailsAndAssertSync ( iface , false , iface . isBridged () , NUMBER_CONSTANT , iface . getVlanId () , createQos () ) ; }
protected org.ovirt.engine.core.common.businessentities.VDSGroup getVDSGroup () { return getEntity ( org.ovirt.engine.core.common.businessentities.VDSGroup . class , VdcQueryType.GetVdsGroupByVdsGroupId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( clusterId ) ) , clusterId ) ; }
@ java.lang.Override protected boolean isUserAuthorizedToRunAction () { org.ovirt.engine.core.bll.aaa.LoginBaseCommand.log . debug ( STRING_CONSTANT ) ; return true ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity object ) { java.lang.String status = org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . translate ( object . getStatus () ) ; return status ; }
@ java.lang.Override public void onUserPortalModelInit ( org.ovirt.engine.ui.userportal.uicommon.model.UserPortalModelInitEvent event ) { connectAutomaticallyManager . registerModel ( provider . getModel () ) ; }
public java.lang.String getValue () { return value ; }
public boolean isTaskStatus ( org.ovirt.engine.core.common.businessentities.gluster.GlusterTaskSupport supportObj , org.ovirt.engine.core.common.job.JobExecutionStatus status ) { return ( ( supportObj . getAsyncTask () ) != null ) && ( ( supportObj . getAsyncTask () . getStatus () ) == status ) ; }
@ java.lang.Override protected void proposeDiscover () { boolean proposeDiscover = getTargets () . getItems () . isEmpty () ; setProposeDiscoverTargets ( proposeDiscover ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
protected abstract void restore ( ) ;
public org.ovirt.engine.core.common.businessentities.StoragePool getStoragePool () { if ( ( cachedStoragePool ) == null ) { cachedStoragePool = getStoragePoolDAO () . get ( params . getStoragePoolId () ) ; } return cachedStoragePool ; }
@ java.lang.Override protected java.lang.String renderNullSafe ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( object ) ) . getName () ; }
@ java.lang.Override public void saveInterfaceForVds ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = createInterfaceParametersMapper ( nic ) ; getCallsHandler () . executeModification ( STRING_CONSTANT , parameterSource ) ; }
@ org.junit.Test public void encodeWhenDescriptionIsCompletelyTruncated ( ) throws java.io.IOException { java.lang.String alias = org.ovirt.engine.core.bll.storage.disk.image.MetadataDiskDescriptionHandlerTest . generateRandomString ( org.ovirt.engine.core.bll.storage.disk.image.MetadataDiskDescriptionHandlerTest.DISK_ALIAS_MAX_LENGTH ) ; disk . setDiskAlias ( alias ) ; disk . setDiskDescription ( STRING_CONSTANT ) ; assertDiskDescriptionMap ( disk , generateDiskAliasJsonEntry ( alias ) ) ; }
protected org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase parameters ) throws org.ovirt.engine.core.common.errors.EngineException { return org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () . runVdsCommand ( commandType , parameters ) ; }
@ org.junit.Test public void testPoolForDataCenterMethod ( ) throws java.lang.Exception { expectNotInitializedException () ; pool . poolForDataCenter ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNic > getInterfaces () { if ( ( interfaces ) == null ) { interfaces = org.ovirt.engine.core.bll.VmCommand . getVmNicDao () . getAllForVm ( org.ovirt.engine.core.bll.VmCommand . getVmId () ) ; } return interfaces ; }
public void logoutUser ( final org.ovirt.engine.ui.frontend.communication.UserCallback < > callback ) { communicationProvider . logout ( callback ) ; }
@ java.lang.Override protected void createImage () { org.ovirt.engine.core.bll.tasks.CommandCoordinatorUtil . executeAsyncCommand ( VdcActionType.AddDisk , getAddDiskParameters () , org.ovirt.engine.core.bll.storage.disk.image.UploadDiskImageCommand . cloneContextAndDetachFromParent () ) ; }
protected org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase params ) { return org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () . runVdsCommand ( commandType , params ) ; }
@ org.junit.Test public void validateFails () { cmd . getParameters () . setActionType ( STRING_CONSTANT ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public void endWithFailure () { super . endWithFailure () ; }
private void mockVdsDao () { org.ovirt.engine.core.common.businessentities.VDS vds = createHost () ; org.mockito.Mockito . when ( vdsDao . get ( org.ovirt.engine.core.bll.pm.StartVdsCommandTest.FENCECD_HOST_ID ) ) . thenReturn ( vds ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.OriginType getRawValue ( java.lang.Object object ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . getorigin () ; }
public void setUserId ( final org.ovirt.engine.core.compat.Guid value ) { mUserId = value ; }
@ java.lang.Override public void reportCompleted () { try { super . reportCompleted () ; } finally { if ( ( getVdsDestinationId () ) != null ) { decreasePendingVms ( getVdsDestinationId () ) ; } org.ovirt.engine.core.bll.MigrateVmCommand . freeLock () ; } }
public java.lang.Boolean call ( ) throws java.lang.Exception { _parser . cliEnvironmentSet ( java.lang.String . format ( STRING_CONSTANT , VdsmEnv.CONFIG_PREFIX ) , org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.EncryptHostCommunication ) . toString () ) ; return true ; }
protected boolean isGlusterSupportEnabled () { return ( org.ovirt.engine.core.bll.AddVdsCommand . getVdsGroup () . supportsGlusterService () ) && ( org.ovirt.engine.core.bll.AddVdsCommand . getParameters () . isGlusterPeerProbeNeeded () ) ; }
public void setactual_size ( long size ) { this . actualSize = size ; }
@ org.junit.Test public void testIsInternalExecutionFalse () { org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery query = new org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery () ; query . setInternalExecution ( true ) ; query . setInternalExecution ( false ) ; org.junit.Assert . assertFalse ( STRING_CONSTANT , query . isInternalExecution () ) ; }
@ org.junit.jupiter.api.Test @ org.ovirt.engine.core.utils.MockedConfig ( value = STRING_CONSTANT ) public void testVmAppliedBeforeConfig () { setupVmWithSerialNumber ( SerialNumberPolicy.CUSTOM , org.ovirt.engine.core.vdsbroker.vdsbroker.VmSerialNumberBuilderTest.CUSTOM_VM_SERIAL ) ; assertSerialNumber ( org.ovirt.engine.core.vdsbroker.vdsbroker.VmSerialNumberBuilderTest.CUSTOM_VM_SERIAL ) ; }
@ java.lang.Override public void buildVmConsoleDevice () { buildVmDevicesFromDb ( VmDeviceGeneralType.CONSOLE , false , null ) ; }
public void setname ( java.lang.String value ) { this . name = value ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
public void getAAAProfilesList ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . convertAAAProfilesResult ( aQuery , false ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetAAAProfileList , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , aQuery ) ; }
protected org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode getDefaultConsoleMode () { return org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode . valueOf ( ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ClientModeSpiceDefault ) ) ) ) ; }
public void rollbackQuotaByVmId ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmDao () . get ( vmId ) ; if ( vm != null ) { removeQuotaFromCache ( vm . getStoragePoolId () , vm . getQuotaId () ) ; } }
@ java.lang.Override public void markAsValid () { super . markAsValid () ; getValidatedWidgetStyle () . clearBorderColor () ; tabContainer . getElement () . addClassName ( ( isActive ? style . obrand_active () : style . inactive () ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.compat.Guid , java.lang.Integer > mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { return new org.ovirt.engine.core.common.utils.Pair ( getGuid ( rs , STRING_CONSTANT ) , rs . getInt ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.SnapshotNicsResource getSnapshotNicsResource () { return inject ( new org.ovirt.engine.api.restapi.resource.BackendSnapshotNicsResource ( this ) ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyLegacyGotEnabledNotSetLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setType ( UsbType.LEGACY ) ; assertEquals ( UsbPolicy.ENABLED_LEGACY , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_LEGACY ) ) ; }
public static boolean networkLinkingSupported ( org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > GetValue ( ConfigValues.NetworkLinkingSupported , version . getValue () ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetPermissionByIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getPermissionDao () . get ( org.ovirt.engine.core.bll.GetPermissionByIdQuery . getParameters () . getId () ) ) ; }
private void dbFacadeReturnCluster () { org.mockito.Mockito . when ( mockClusterDao . get ( org.mockito.Matchers . any () ) ) . thenReturn ( existingGroup ) ; }
public java.lang.String getVmName () { if ( ( ( mVmName ) == null ) && ( ( getVm () ) != null ) ) { mVmName = getVm () . getName () ; } return mVmName ; }
private org.ovirt.engine.core.compat.Version getClusterVersion () { return org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getVdsGroupDAO () . get ( org.ovirt.engine.core.bll.network.cluster.UpdateNetworkOnClusterCommand . getNetworkCluster () . getClusterId () ) . getCompatibilityVersion () ; }
@ org.junit.jupiter.api.Test public void poolHasDefaultCluster () { addDefaultClusterToPool () ; org.mockito.Mockito . doReturn ( new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.ACTION_TYPE_FAILED_STORAGE_POOL_WITH_DEFAULT_CLUSTER_CANNOT_BE_LOCALFS ) ) . when ( poolValidator ) . isNotLocalfsWithDefaultCluster () ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( cmd , EngineMessage.ACTION_TYPE_FAILED_STORAGE_POOL_WITH_DEFAULT_CLUSTER_CANNOT_BE_LOCALFS ) ; }
protected org.ovirt.engine.api.model.Snapshot getSnapshotById ( org.ovirt.engine.core.compat.Guid id ) { for ( org.ovirt.engine.api.model.Snapshot snapshot : getBackendCollection ( VdcQueryType.GetAllVmSnapshotsByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( parentId ) ) ) { if ( snapshot . getId () . equals ( id ) ) { return snapshot ; } } return null ; }
@ java.lang.Override public org.ovirt.engine.api.model.Host get () { return performGet ( VdcQueryType.GetVdsByVdsId , new org.ovirt.engine.core.common.queries.GetVdsByVdsIdParameters ( guid ) ) ; }
@ org.junit.Before public void mockDaos () { mockVmDao () ; mockDiskImageDao () ; }
@ org.junit.Test public void testValidateUniqueId () { mockHostForUniqueId ( org.ovirt.engine.core.compat.Guid . newGuid () . toString () ) ; org.junit.Assert . assertThat ( validator . validateUniqueId () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) protected org.ovirt.engine.ui.common.widget.AddRemoveRowWidget < M , T , V > . AddRemoveRowPanel getEntry ( V widget ) { return ( ( org.ovirt.engine.ui.common.widget.AddRemoveRowWidget < M , T , V > . AddRemoveRowPanel ) ( widget . getParent () ) ) ; }
@ java.lang.Override protected void setUpQueryExpectations ( java.lang.String query , java.lang.Object failure ) throws java.lang.Exception { setUpGetStorageDomainExpectations ( StorageDomainType.ImportExport , null ) ; setUpGetEntityExpectations ( StorageDomainType.ImportExport , org.ovirt.engine.api.restapi.resource.BackendExportDomainDisksResourceTest.STORAGE_DOMAIN_ID , failure ) ; setUriInfo ( setUpBasicUriExpectations () ) ; }
public org.ovirt.engine.core.dal.dbbroker.MapSqlParameterMapper < T > getBatchMapper () { return this : : createFullParametersMapper ; }
@ java.lang.Override public org.ovirt.engine.api.model.Nic update ( org.ovirt.engine.api.model.Nic nic ) { return performUpdate ( nic , new org.ovirt.engine.api.restapi.resource.BackendVmNicResource.NicResolver () , VdcActionType.UpdateVmInterface , new org.ovirt.engine.api.restapi.resource.BackendVmNicResource.UpdateParametersProvider () ) ; }
public java.util.List < java.lang.String > getLunIds () { if ( ( lunIds ) == null ) { lunIds = new java.util.ArrayList <> () ; } return lunIds ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { boolean isDirectLunDiskAvaialable = ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.Boolean > ) ( sender ) ) . getEntity () ; externalDiskPanel . setVisible ( isDirectLunDiskAvaialable ) ; }
protected org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity getGlusterVolume () { if ( ( ( glusterVolume ) == null ) && ( ( glusterVolumeId ) != null ) ) { glusterVolume = getGlusterVolumeDao () . getById ( glusterVolumeId ) ; } return glusterVolume ; }
@ org.junit.Test public void testBeanValidations () { org.junit.Assert . assertTrue ( createCommand ( initializeMock ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ) . validateInputs () ) ; }
@ java.lang.Override protected void init () { super . init () ; setVdsId ( getVmManager () . getConvertProxyHostId () ) ; }
public void setOptionsMap ( java.util.Map < java.lang.String , java.lang.String > value ) { optionsMap = value ; options = org.ovirt.engine.core.common.businessentities.pm.FenceAgent . optionsMapToString ( value ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomainStatic getStorageDomainStaticEntity () { org.ovirt.engine.api.restapi.resource.StorageDomainStatic entity = control . createMock ( org.ovirt.engine.core.common.businessentities.StorageDomainStatic . class ) ; return org.ovirt.engine.api.restapi.resource.BackendTemplateDiskResourceTest . setUpStorageDomainEntityExpectations ( entity , StorageType.NFS ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > result ) { setDataCenters ( result ) ; doNetworksSearch () ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkManageModel clusterNetworkManageModel ) { networks . asEditor () . edit ( clusterNetworkManageModel ) ; initEntityModelCellTable () ; }
@ org.junit.Test public void lowerVersionMgmtNetworkNonSupportedFeatures () { storagePoolWithLowerVersion () ; addNonDefaultClusterToPool () ; addManagementNetworksToPool ( NUMBER_CONSTANT ) ; setupNetworkValidator ( false ) ; canDoActionFailed ( VdcBllMessages.ACTION_TYPE_FAILED_CANNOT_DECREASE_COMPATIBILITY_VERSION ) ; }
private void mockDynamicVmDao () { org.ovirt.engine.core.common.businessentities.VmDynamic mockDynamicVm = getVmDynamic () ; org.mockito.Mockito . when ( vmDynamicDao . get ( vmId ) ) . thenReturn ( mockDynamicVm ) ; }
@ java.lang.Override protected void verifyModel ( org.ovirt.engine.api.model.Group model , int index ) { assertEquals ( NAMES [ index ] , model . getName () ) ; }
private org.ovirt.engine.core.common.businessentities.StoragePool mockStoragePool () { org.ovirt.engine.core.common.businessentities.StoragePool storagePool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; storagePool . setId ( storagePoolUUID ) ; storagePool . setQuotaEnforcementType ( QuotaEnforcementTypeEnum.DISABLED ) ; return storagePool ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Guid getClusterId () { return getAffinityGroup () . getClusterId () ; }
public org.ovirt.engine.core.common.action.SetupNetworksParameters createSetupNetworkParams ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > interfaces ) { org.ovirt.engine.core.common.action.SetupNetworksParameters parameters = new org.ovirt.engine.core.common.action.SetupNetworksParameters () ; parameters . setVdsId ( host . getId () ) ; parameters . setInterfaces ( interfaces ) ; parameters . setCheckConnectivity ( true ) ; return parameters ; }
private static void mockConfig ( final int lowGB ) { org.ovirt.engine.core.bll.command.utils.StorageDomainSpaceCheckerTest.mcr . mockConfigValue ( ConfigValues.FreeSpaceCriticalLowInGB , lowGB ) ; }
private void reloadPolicyUnits () { synchronized ( policyUnitsLock ) { policyUnits = new java.util.concurrent.ConcurrentHashMap <> () ; loadPolicyUnits () ; } }
@ org.junit.Test public void testDoGetNotFoundInvalidPath ( ) throws java.io.IOException , javax.servlet.ServletException { testServlet . doGet ( mockRequest , mockResponse ) ; org.mockito.Mockito . verify ( mockResponse ) . sendError ( HttpServletResponse.SC_NOT_FOUND ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VM > object ) { return object . getSecond () . getVmFQDN () ; }
public boolean removeHost ( org.ovirt.engine.core.common.businessentities.VDS entity ) { return hosts . remove ( entity . getId () ) ; }
public void setVdsGroupCompatibilityVersion ( org.ovirt.engine.core.compat.Version value ) { this . vdsGroupCompatibilityVersion = value ; }
public org.ovirt.engine.core.bll.ValidationResult statusSupportedForHostUpgrade () { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.VDS_CANNOT_INSTALL_STATUS_ILLEGAL ) . unless ( org.ovirt.engine.core.common.VdcActionUtils . canExecute ( java.util.Arrays . asList ( host ) , org.ovirt.engine.core.common.businessentities.VDS . class , VdcActionType.UpgradeHost ) ) ; }
private void setUpGetEntityExpectations ( ) throws java.lang.Exception { setUpGetEntityExpectations ( false ) ; }
protected org.ovirt.engine.core.common.queries.VdcQueryReturnValue getAllDisksByStorageDomain ( org.ovirt.engine.core.compat.Guid domainId ) { return org.ovirt.engine.core.bll.storage.GetVmsByStorageDomainQuery . getBackend () . runQuery ( VdcQueryType.GetAllDisksByStorageDomainId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( domainId ) ) ; }
@ org.junit.Before public void mockClusterDao () { org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter search = new org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter () ; org.mockito.Mockito . when ( clusterDao . getAllWithQuery ( org.mockito.Matchers . matches ( org.ovirt.engine.core.bll.SearchQueryTest . getClusterRegexString ( search ) ) ) ) . thenReturn ( clusterResultList ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( NUMBER_CONSTANT ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.VmDevice > getUnmanagedDeviceList () { return vmStatic . getUnmanagedDeviceList () ; }
protected void undoActionOnSourceAndDestination () { if ( ( getDestinationDiskImage () ) != null ) { removeSnapshot ( getDestinationDiskImage () ) ; } unLockImage () ; }
protected boolean setAndValidateCpuProfile () { return validate ( org.ovirt.engine.core.bll.profiles.CpuProfileHelper . setAndValidateCpuProfile ( org.ovirt.engine.core.bll.CommonVmPoolWithVmsCommand . getParameters () . getVmStaticData () ) ) ; }
@ org.junit.Test public void testExistJobMessages () { org.ovirt.engine.core.dal.job.ExecutionMessageDirector messageDirector = org.ovirt.engine.core.dal.job.ExecutionMessageDirector . getInstance () ; messageDirector . initialize ( org.ovirt.engine.core.dal.job.ExecutionMessageDirectorTest.TEST_BUNDLE_NAME ) ; java.lang.String updateClusterMessage = messageDirector . getJobMessage ( VdcActionType.UpdateCluster ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.job.ExecutionMessageDirectorTest.UPDATE_CLUSTER_CLUSTERS_MESSAGE , updateClusterMessage ) ; }
@ java.lang.Override org.ovirt.engine.ui.uicommonweb.models.vms.ImportEntityData < org.ovirt.engine.core.common.businessentities.VM > createImportEntityData ( org.ovirt.engine.core.common.businessentities.VM entity ) { return new org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData ( entity ) ; }
@ org.junit.Test public void hostNameNotUsed () { org.junit.Assert . assertThat ( validator . hostNameNotUsed () , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
private void handleFinalizingSuccess ( final org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand < T > . StateContext context ) { log . info ( STRING_CONSTANT , getUploadDescription () ) ; stopImageTransferSession ( context.entity ) ; org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand . unLockImage () ; updateEntityPhase ( ImageTransferPhase.FINISHED_SUCCESS ) ; }
public static long macToLong ( java.lang.String mac ) { final int HEX_RADIX = NUMBER_CONSTANT ; java.lang.String macWithoutCommas = mac . replaceAll ( STRING_CONSTANT , STRING_CONSTANT ) ; return java.lang.Long . parseLong ( macWithoutCommas , HEX_RADIX ) ; }
@ java.lang.Override protected void buildVmConsoleDevice () { buildVmDevicesFromDb ( VmDeviceGeneralType.CONSOLE , false , null ) ; }
private boolean isHostInSupportedClusterForProxyHost ( org.ovirt.engine.core.common.businessentities.VDS host ) { return ( org.ovirt.engine.core.bll.exportimport.ImportVmFromExternalProviderCommand . getClusterDao () . get ( host . getClusterId () ) . getArchitecture () ) != ( org.ovirt.engine.core.common.businessentities.ArchitectureType.ppc64 ) ; }
@ java.lang.Override public void setLastTaskStatus ( org.ovirt.engine.core.common.businessentities.AsyncTaskStatus taskStatus ) { _lastTaskStatus = taskStatus ; }
@ java.lang.Override protected void endMoveOrCopyCommand () { org.ovirt.engine.core.bll.VmTemplateHandler . UnLockVmTemplate ( getVmTemplateId () ) ; endActionOnAllImageGroups () ; setSucceeded ( true ) ; }
@ java.lang.Override protected boolean CanAddDomain () { return CheckStorageConnection ( org.ovirt.engine.core.bll.storage.AddStorageDomainCommon . getStorageDomain () . getstorage () ) ; }
protected void restoreStateAfterUpdate ( org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap map ) { updateStatus ( map , StorageDomainStatus.Maintenance ) ; }
@ java.lang.Override public org.ovirt.engine.core.compat.Version mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { return new org.ovirt.engine.core.compat.Version ( rs . getString ( versionColumnName ) ) ; }
protected void onMouseOut () { dragImage . setVisible ( false ) ; org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NetworkItemPanel.infoPopup . hide ( true ) ; if ( ( parentPanel ) != null ) { parentPanel . onMouseOver () ; } }
private static void setGatewayIfManagementNetwork ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String gateway ) { if ( org.ovirt.engine.core.utils.NetworkUtils . getEngineNetwork () . equals ( iface . getNetworkName () ) ) { iface . setGateway ( gateway ) ; } }
@ org.junit.Before public void setUp () { domain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; validator = new org.ovirt.engine.core.bll.validator.StorageDomainValidator ( domain ) ; }
protected org.ovirt.engine.core.compat.Guid getGroupId () { return org.ovirt.engine.core.bll.AdGroupsHandlingCommandBase . getParameters () . getId () ; }
protected void addCanDoActionMessage ( org.ovirt.engine.core.common.errors.EngineMessage message ) { getReturnValue () . getCanDoActionMessages () . add ( message . name () ) ; }
@ java.lang.Override protected void syncSearch () { if ( ( getEntity () ) == null ) { return; } super . syncSearch () ; super . syncSearch ( VdcQueryType.GetEventSubscribersBySubscriberIdGrouped , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntity () . getId () ) ) ; }
java.util.List < org.ovirt.engine.core.common.businessentities.Disk > getAllAttachableDisksByPoolId ( org.ovirt.engine.core.compat.Guid poolId , org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid userId , boolean isFiltered ) ;
public org.ovirt.engine.core.bll.tasks.SPMAsyncTaskHandler getCurrentTaskHandler () { return getTaskHandlers () . get ( getExecutionIndex () ) ; }
private static java.lang.String createConnectionString ( java.lang.String host , java.lang.String port , boolean sslTarget ) { return com.google.gwt.http.client.URL . encode ( org.ovirt.engine.ui.common.uicommon.WebClientConsoleInvoker . createConnectionJsonString ( host , port , sslTarget ) ) ; }
private void assertGetHostsForStorageOperationCorrectStoragePool ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result ) { for ( org.ovirt.engine.core.common.businessentities.VDS vds : result ) { org.junit.Assert . assertEquals ( FixturesTool.STORAGE_POOL_RHEL6_ISCSI , vds . getStoragePoolId () ) ; } }
@ org.junit.Test public void testGetSystemStatisticsValueWithSpecifiedStatus () { int numOfVmWithStatusMigratingFrom = underTest . getSystemStatisticsValue ( STRING_CONSTANT , java.lang.Integer . toString ( VMStatus.MigratingFrom . getValue () ) ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.SystemStatisticsDaoImplTest.NUM_OF_VM_IN_FIXTURES_WITH_STATUS_MIGRATING_FROM , numOfVmWithStatusMigratingFrom ) ; }
private void setupMock ( ) throws java.lang.Exception { org.mockito.Mockito . when ( commandMock . validate () ) . thenCallRealMethod () ; org.mockito.Mockito . when ( commandMock . getParameters () ) . thenReturn ( parameters ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
public org.ovirt.engine.core.bll.ValidationResult updatesAvailable () { return org.ovirt.engine.core.bll.ValidationResult . failWith ( VdcBllMessages.NO_AVAILABLE_UPDATES_FOR_HOST ) . unless ( ( ( ( host . getVdsType () ) == ( org.ovirt.engine.core.common.businessentities.VDSType.oVirtNode ) ) || ( host . isUpdateAvailable () ) ) ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.core.common.businessentities.Cluster cluster , java.lang.String value ) { transitionHandler . handlePlaceTransition ( true ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.action.VdcReturnValueBase > runMultipleActions ( org.ovirt.engine.core.common.action.VdcActionType actionType , java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters , boolean isRunOnlyIfAllValidationPass ) { return runMultipleActions ( actionType , parameters , isRunOnlyIfAllValidationPass , false ) ; }
private org.ovirt.engine.core.extensions.mgr.ExtensionsManager getExtensionsManager () { return ( ( org.ovirt.engine.core.extensions.mgr.ExtensionsManager ) ( context . get ( ContextKeys.EXTENSION_MANAGER ) ) ) ; }
@ java.lang.Override protected void setActionMessageParameters () { addCanDoActionMessage ( java.lang.String . format ( STRING_CONSTANT , org.ovirt.engine.core.bll.gluster.GlusterAsyncCommandBase . getGlusterVolumeName () ) ) ; addCanDoActionMessage ( java.lang.String . format ( STRING_CONSTANT , org.ovirt.engine.core.bll.gluster.GlusterAsyncCommandBase . getVdsGroupName () ) ) ; }
public void setDiskInfoList ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > diskInfoList ) { this . diskInfoList = ( diskInfoList != null ) ? diskInfoList : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > () ; }
@ java.lang.Override public org.ovirt.engine.api.model.Template get () { org.ovirt.engine.api.model.Template template = performGet ( VdcQueryType.GetVmTemplate , new org.ovirt.engine.core.common.queries.GetVmTemplateParameters ( guid ) ) ; if ( template != null ) { org.ovirt.engine.api.restapi.util.DisplayHelper . adjustDisplayData ( this , template ) ; } return template ; }
@ java.lang.Override public org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase parameters ) { return org.ovirt.engine.core.bll.VdsHandler . handleVdsResult ( getResourceManager () . runVdsCommand ( commandType , parameters ) ) ; }
public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType search , org.ovirt.engine.core.common.queries.VdcQueryParametersBase searchParameters ) ;
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.EngineBackupLogId getId () { org.ovirt.engine.core.common.businessentities.EngineBackupLogId key = new org.ovirt.engine.core.common.businessentities.EngineBackupLogId ( scope , doneAt ) ; return key ; }
@ org.junit.Test public void testCloneFromTemplateWithClonePermissionsClone ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Vm model = createModel ( createDisksCollection () ) ; doTestCloneFromTemplateWithClonePermissions ( model , true ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setItems ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VnicProfileView > ) ( returnValue ) ) ) ; }
protected org.ovirt.engine.core.bll.utils.ClusterUtils getClusterUtils () { return org.ovirt.engine.core.bll.utils.ClusterUtils . getInstance () ; }
@ java.lang.Override public void generate ( ) throws java.io.IOException , javax.xml.bind.JAXBException { doCleanPackage ( this . distPath ) ; doGenerate ( this . distPath ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback callback = ( ( org.ovirt.engine.ui.uicommonweb.models.hosts.AsyncIteratorCallback ) ( target ) ) ; org.ovirt.engine.ui.uicompat.Event notifyEvent = callback . getNotifyEvent () ; notifyEvent . raise ( this , new org.ovirt.engine.ui.uicommonweb.models.hosts.ValueEventArgs ( returnValue ) ) ; }
@ java.lang.Override protected boolean validate () { addCustomValue ( STRING_CONSTANT , org.ovirt.engine.core.bll.aaa.AddGroupCommand . getParameters () . getGroupToAdd () . getName () ) ; return true ; }
@ org.junit.Test public void testUploadIsDefaultTransferType () { org.junit.Assert . assertEquals ( TransferType.Upload , transferImageCommand . getParameters () . getTransferType () ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyNativeGotEnabledNativePolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( true ) ; usb . setType ( UsbType.NATIVE ) ; assertEquals ( UsbPolicy.ENABLED_NATIVE , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_NATIVE ) ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations () ; org.ovirt.engine.api.model.Quota model = resource . get () ; verifyModel ( model , NUMBER_CONSTANT ) ; }
private void mockStorageDomainValidatorWithoutSpace () { org.mockito.Mockito . when ( storageDomainValidator . hasSpaceForDiskWithSnapshots ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.EngineMessage.ACTION_TYPE_FAILED_DISK_SPACE_LOW_ON_STORAGE_DOMAIN ) ) ; }
@ java.lang.Override protected void asyncSearch () { super . asyncSearch () ; setAsyncResult ( null ) ; setItems ( getAsyncResult () . getData () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { context.hostCluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; SetDefaultNames3 () ; }
@ java.lang.Override public java.lang.Boolean getValue ( org.ovirt.engine.ui.uicommonweb.models.providers.ExternalNetwork model ) { return model . isPublicUse () ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.models.EntityModel setIsChangable ( boolean value ) { if ( ! ( isVmAttachedToPool () ) ) super . setIsChangable ( value ) ; return this ; }
@ org.junit.Before public void init () { org.mockito.Mockito . doReturn ( getClusters () ) . when ( clusterDao ) . getAll () ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.network.NetworkView getEntity () { return ( ( org.ovirt.engine.core.common.businessentities.network.NetworkView ) ( super . getEntity () ) ) ; }
@ java.lang.Override public java.lang.String getMessage ( org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkItemModel < > op1 , org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkItemModel < > op2 ) { return getVerb ( op1 ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object result ) { vmInitLoaded ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( result ) ) ) ; }
private void processVmPoolOnStopVm () { org.ovirt.engine.core.bll.VmPoolHandler . processVmPoolOnStopVm ( org.ovirt.engine.core.bll.RunVmCommandBase . getVm () . getId () , org.ovirt.engine.core.bll.job.ExecutionHandler . createDefaultContexForTasks ( org.ovirt.engine.core.bll.RunVmCommandBase . getExecutionContext () ) ) ; }
@ org.junit.Before @ org.junit.After public void clearEnvironment () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer . clean () ; org.ovirt.engine.core.bll.session.SessionDataContainer . getInstance () . removeSession ( session ) ; }
protected boolean updateVmInSpm () { return org.ovirt.engine.core.bll.VmCommand . updateVmInSpm ( getVm () . getstorage_pool_id () , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.VM [] { getVm () } ) ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.DbUser getByUsername ( java.lang.String username ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , username ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance , parameterSource ) ; }
@ java.lang.Override protected void executeVmCommand () { org.ovirt.engine.core.bll.MigrateVmCommand . setSucceeded ( ( ( initVdss () ) && ( perform () ) ) ) ; }
@ java.lang.Override public void resizeColumn ( com.google.gwt.user.cellview.client.Column < T , > column , int newWidth ) { setColumnWidth ( column , ( newWidth + STRING_CONSTANT ) ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.HostNIC get () { return parent . lookupNic ( id , false ) ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain createStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; return storageDomain ; }
@ java.lang.Override public void Cluster_SelectedItemChanged () { updateQuotaByCluster ( null , null ) ; }
public static void GetConfigFromCache ( org.ovirt.engine.core.common.queries.ConfigurationValues configValue , java.lang.String version , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { org.ovirt.engine.core.common.queries.GetConfigurationValueParameters parameters = new org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ( configValue , version ) ; org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . GetConfigFromCache ( parameters , aQuery ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.frontend.FrontendFailureEventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.frontend.FrontendFailureEventArgs args ) { errorPopupManager . show ( messages . uiCommonRunActionFailed ( org.ovirt.engine.ui.common.uicommon.ErrorMessageFormatter . formatMessages ( args . getMessages () ) ) ) ; }
public void setvm_mem_size_mb ( int value ) { this . mVmStatic . setmem_size_mb ( value ) ; }
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.Boolean > event ) { refreshClustersTable () ; }
protected void closeChannel () { try { if ( ( this . channel ) != null ) { this . channel . close () ; } } catch ( java.io.IOException e ) {} finally { this . channel = null ; } }
@ java.lang.Override protected void executeQueryCommand () { java.lang.String version = org.ovirt.engine.core.bll.gluster.GetGlusterTunedProfilesQuery . getParameters () . getName () ; org.ovirt.engine.core.bll.gluster.GetGlusterTunedProfilesQuery . getQueryReturnValue () . setReturnValue ( java.util.Arrays . asList ( org.ovirt.engine.core.common.config.Config . < java.lang.String > getValue ( ConfigValues.GlusterTunedProfile , version ) . split ( STRING_CONSTANT ) ) ) ; }
private java.lang.String getDomainDN ( java.lang.String url ) throws javax.naming.NamingException { org.ovirt.engine.core.ldap.RootDSEData rootDSEData = new org.ovirt.engine.core.ldap.RootDSEData ( url ) ; return rootDSEData . getDomainDN () ; }
@ java.lang.Override public void onSuccess ( T returnValue ) { notifyEvent . raise ( this , new org.ovirt.engine.ui.uicommonweb.models.hosts.ValueEventArgs ( returnValue ) ) ; }
public java.lang.String getNetworkName () { return getEntity () . getName () ; }
protected void freeLock () { if ( ( commandLock ) != null ) { getLockManager () . releaseLock ( commandLock ) ; log . infoFormat ( STRING_CONSTANT , commandLock ) ; commandLock = null ; } }
public org.ovirt.engine.core.vdsbroker.ResourceManager getResourceManager () { return org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () ; }
private com.google.gwt.resources.client.ImageResource getNicIcon () { return item . isSriovEnabled () ? org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NicPanel.resources . nicSriov () : org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NicPanel.resources . nicIcon () ; }
protected void updateBootOrder () { org.ovirt.engine.core.bll.utils.VmDeviceUtils . updateBootOrder ( org.ovirt.engine.core.bll.UpdateVmDiskCommand . getVm () . getId () ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _goingToReboot = ( ( java.lang.Boolean ) ( _parser . cliEnvironmentGet ( SysEnv.REBOOT ) ) ) ; if ( _goingToReboot ) { _messages . post ( InstallerMessages.Severity.INFO , STRING_CONSTANT ) ; } return true ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { context.hostFoundById = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; rollback3 () ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; existingDomain = dao . get ( FixturesTool.STORAGE_DOMAIN_SCALE_SD5 ) ; }
private void markOldEventsAsProcessed () { eventsManager . markOldEventsAsProcessed ( prop . getInteger ( NotificationProperties.DAYS_TO_SEND_ON_STARTUP ) ) ; }
public static void setInstance ( org.ovirt.engine.ui.uicommonweb.TypeResolver value ) { org.ovirt.engine.ui.uicommonweb.TypeResolver.privateInstance = value ; }
public static void updateCommandStatus ( org.ovirt.engine.core.compat.Guid commandId , org.ovirt.engine.core.compat.CommandStatus status ) { org.ovirt.engine.core.bll.tasks.TaskManagerUtil.coco . updateCommandStatus ( commandId , status ) ; }
public org.ovirt.engine.core.common.action.VdcReturnValueBase RunUserAction ( org.ovirt.engine.core.common.action.VdcActionType actionType , org.ovirt.engine.core.common.action.VdcActionParametersBase parameters ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( parameters . getHttpSessionId () ) ) { return NotAutorizedError () ; } return RunAction ( actionType , parameters ) ; }
void updateAllInBatch ( java.util.Collection < T > entities ) ;
public void setQuotaId ( org.ovirt.engine.core.compat.Guid quotaId ) { this . quotaId = quotaId ; }
public java.lang.String getVdsDestination () { return ( getDestinationVds () ) != null ? getDestinationVds () . getName () : null ; }
private boolean isBalloonActiveOnHost () { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getDbFacade () . getVdsGroupDao () . get ( _vds . getVdsGroupId () ) ; return ( cluster != null ) && ( cluster . isEnableBallooning () ) ; }
@ java.lang.Override protected void OnTaskEndFailure () { LogEndTaskFailure () ; EndActionIfNecessary () ; }
@ java.lang.Override public org.apache.http.HttpResponse execute ( org.apache.http.client.methods.HttpUriRequest request ) throws java.lang.Exception { return client . execute ( request ) ; }
public void setCommandId ( org.ovirt.engine.core.compat.Guid commandId ) { this . commandId = commandId ; }
protected javax.ws.rs.core.Response actionFailure ( org.ovirt.engine.api.model.Action action , javax.ws.rs.WebApplicationException wae ) { action . setStatus ( CreationStatus.FAILED . value () ) ; return javax.ws.rs.core.Response . fromResponse ( wae . getResponse () ) . entity ( action ) . build () ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface getEntity ( int index ) { return setUpEntityExpectations ( control . createMock ( org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface . class ) , control . createMock ( org.ovirt.engine.core.common.businessentities.network.VmNetworkStatistics . class ) , index ) ; }
private static boolean shouldMonitorCommand ( org.ovirt.engine.core.common.action.VdcActionType actionType , boolean isInternal ) { return ( actionType . isActionMonitored () ) && ( ! isInternal ) ; }
@ java.lang.Override public void setEnabled ( boolean enabled ) { getLabel () . setEnabled ( enabled ) ; if ( enabled ) { tooltip . setText ( STRING_CONSTANT ) ; } }
@ java.lang.Override public void updateCallbackNotified ( final org.ovirt.engine.core.compat.Guid commandId ) { commandsRepository . updateCallbackNotified ( commandId ) ; }
public static java.util.List < java.lang.String > runAndAssertCanDoActionFailure ( org.ovirt.engine.core.bll.CommandBase < > command , org.ovirt.engine.core.common.errors.EngineMessage message ) { return org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( STRING_CONSTANT , command , message ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs args ) { java.lang.String propName = args.propertyName ; if ( propName . equals ( STRING_CONSTANT ) ) { onIsValidPropertyChange ( object ) ; } }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > storageDomains ) { onInitStorageDomains ( storageDomains ) ; }
public static void checkStatusAndLockVm ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.bll.context.CompensationContext compensationContext ) { org.ovirt.engine.core.common.businessentities.VmDynamic vmDynamic = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmDynamicDao () . get ( vmId ) ; org.ovirt.engine.core.bll.VmHandler . checkStatusBeforeLock ( vmDynamic . getStatus () ) ; org.ovirt.engine.core.bll.VmHandler . LockVm ( vmDynamic , compensationContext ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeSnapshotEntity > snapshots ) { java.util.Collections . sort ( snapshots , new org.ovirt.engine.ui.uicommonweb.Linq.GlusterVolumeSnapshotComparer () ) ; setItems ( snapshots ) ; }
private static org.ovirt.engine.core.common.businessentities.UsbPolicy getUsbPolicyAccordingToUsbType ( org.ovirt.engine.api.model.UsbType usbType ) { switch ( usbType ) { case LEGACY : case NATIVE : return org.ovirt.engine.core.common.businessentities.UsbPolicy.ENABLED_NATIVE ; default: return null ; } }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface lookupInterfaceById ( java.lang.String id ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface : getCollection () ) { if ( iface . getId () . toString () . equals ( id ) ) { return iface ; } } return null ; }
@ org.junit.Test public void testGetAllByStoragePoolAndConnectionWithInvalidConnection () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllByStoragePoolAndConnection ( FixturesTool.STORAGE_POOL_NFS , org.ovirt.engine.core.utils.RandomUtils . instance () . nextString ( NUMBER_CONSTANT ) ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public void configure ( org.ovirt.engine.ui.uicommonweb.models.vms.ISpice spice ) { super . configure ( spice ) ; updateWanColorDepthOptions ( spice ) ; updateWANDisableEffects ( spice ) ; }
@ java.lang.Override public boolean matches ( org.ovirt.engine.core.common.queries.GetConfigurationValueParameters argument ) { return ( argument . getConfigValue () ) == configValue ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) { showAvailableVolumes ( returnValue ) ; }
@ java.lang.Override public void endSuccessfully () { endRemoveSnapshotSingleDisk ( true ) ; enclosingCommand . taskEndSuccessfully () ; if ( isLastTaskHandler () ) { updateImagesStatus ( ImageStatus.OK ) ; } enclosingCommand . getReturnValue () . setSucceeded ( true ) ; }
@ org.junit.Test public void nGuidCtor () { b = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.compat.Guid v = b . getVdsId () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , v ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VmTemplate > object ) { return object . getSecond () . getName () ; }
@ java.lang.Override public java.util.List getSelectedItems () { return null ; }
@ java.lang.Override public void updateHotPlugDisk ( org.ovirt.engine.core.common.businessentities.VmDevice vmDevice ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource paramsForUpdate = createParameterSourceForUpdate ( vmDevice ) . addValue ( STRING_CONSTANT , vmDevice . getIsPlugged () ) ; getCallsHandler () . executeModification ( STRING_CONSTANT , paramsForUpdate ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageDomain answer ( org.mockito.invocation.InvocationOnMock invocation ) throws java.lang.Throwable { org.ovirt.engine.core.common.businessentities.StorageDomain result = createStorageDomain ( domainSpaceGB ) ; result . setId ( ( ( org.ovirt.engine.core.compat.Guid ) ( invocation . getArguments () [ NUMBER_CONSTANT ] ) ) ) ; return result ; }
@ org.junit.Test public void testRemoveAll () { dao . removeAll () ; final java.util.List < org.ovirt.engine.core.common.businessentities.VmIconDefault > result = dao . getAll () ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ java.lang.Override public boolean isMonitoringNeeded ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return true ; }
public org.ovirt.engine.core.common.businessentities.VmDevice addVirtioScsiController ( org.ovirt.engine.core.compat.Guid vmId ) { return addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.CONTROLLER , VmDeviceType.VIRTIOSCSI , org.ovirt.engine.core.bll.utils.VmDeviceUtils.EMPTY_SPEC_PARAMS , true , false ) ; }
private static int getVramMultiplier ( org.ovirt.engine.core.common.businessentities.VmBase vmBase ) { org.ovirt.engine.core.common.osinfo.OsRepository osRepository = org.ovirt.engine.core.common.utils.SimpleDependencyInjector . getInstance () . get ( org.ovirt.engine.core.common.osinfo.OsRepository . class ) ; return osRepository . getVramMultiplier ( vmBase . getOsId () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.StorageDomain get () { org.ovirt.engine.api.model.StorageDomain storageDomain = performGet ( VdcQueryType.GetStorageDomainById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; return addLinks ( storageDomain , org.ovirt.engine.api.restapi.resource.BackendStorageDomainResource . getLinksToExclude ( storageDomain ) ) ; }
@ org.junit.Test public void validateSucceedsWithStopActionType () { cmd . getParameters () . setActionType ( GlusterConstants.MANAGE_GLUSTER_SERVICE_ACTION_TYPE_STOP ) ; prepareMocks () ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ org.junit.Test public void networksNotUsedByVmsNorTemplates ( ) throws java.lang.Exception { mockNetwork () ; networksUsedTest ( true , true , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > getVms () { if ( ( vms ) == null ) { vms = getVmDao () . getAllForNetwork ( network . getId () ) ; } return vms ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . executeCommand ( command ) ; behavior . executeCommand ( command ) ; }
@ java.lang.Override public boolean isTrue () { java.lang.String quotaName = getModel () . getQuotaName () ; return ( quotaName != null ) && ( ! ( STRING_CONSTANT . equals ( quotaName ) ) ) ; }
@ java.lang.Override protected void OnEntityChanged () { super . OnEntityChanged () ; if ( ( getEntity () ) != null ) { UpdateVolumeDetails () ; updateAlerts () ; updateConsoleAddressPartiallyOverridden ( getEntity () ) ; updateProperties () ; } }
@ java.lang.Override protected void endWithFailure () { removeImage ( org.ovirt.engine.core.bll.MoveImageGroupCommand . getParameters () . getStorageDomainId () ) ; unLockImage () ; }
@ java.lang.Override protected org.ovirt.engine.ui.common.widget.tab.TabDefinition createNewTab ( com.gwtplatform.mvp.client.TabData tabData ) { return org.ovirt.engine.ui.common.widget.tab.TabFactory . createTab ( tabData , this , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () ) ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain mockStorageDomain ( org.ovirt.engine.core.compat.Guid storageId , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { return mockStorageDomain ( storageId , NUMBER_CONSTANT , NUMBER_CONSTANT , storageType ) ; }
@ java.lang.Override public void setStatus ( org.ovirt.engine.core.common.businessentities.VDSStatus value ) { status = value ; }
@ java.lang.Override protected void compileInternal () { java.util.Set < java.lang.String > inParams = new java.util.HashSet ( getInParameterNames () ) ; inParams . add ( STRING_CONSTANT ) ; setInParameterNames ( inParams ) ; super . compileInternal () ; }
@ java.lang.Override public int hashCode () { final int prime = NUMBER_CONSTANT ; int result = NUMBER_CONSTANT ; result = ( prime * result ) + ( getPair () . hashCode () ) ; return result ; }
private org.ovirt.engine.core.bll.ValidationResult validateNetworkExclusiveOnNics ( java.util.Collection < org.ovirt.engine.core.common.businessentities.network.NetworkAttachment > attachmentsToConfigure ) { org.ovirt.engine.core.bll.validator.NetworkAttachmentsValidator validator = new org.ovirt.engine.core.bll.validator.NetworkAttachmentsValidator ( attachmentsToConfigure , networkBusinessEntityMap ) ; return validator . validateNetworkExclusiveOnNics () ; }
public java.lang.String getDefaultBondingOption () { return STRING_CONSTANT ; }
private org.ovirt.engine.core.common.businessentities.network.NetworkAttachment createNetworkAttachment ( java.lang.String nicName , org.ovirt.engine.core.common.businessentities.network.Network network ) { org.ovirt.engine.core.common.businessentities.network.NetworkAttachment result = createNetworkAttachment ( network ) ; result . setNicName ( nicName ) ; return result ; }
public org.ovirt.engine.core.common.TimeZoneType getTimeZoneType () { java.lang.Integer vmOsType = getModel () . getOSType () . getSelectedItem () ; return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . isWindowsOsType ( vmOsType ) ? org.ovirt.engine.core.common.TimeZoneType.WINDOWS_TIMEZONE : org.ovirt.engine.core.common.TimeZoneType.GENERAL_TIMEZONE ; }
void bindInfrastructure () { bindCommonInfrastructure ( org.ovirt.engine.ui.webadmin.place.WebAdminPlaceManager . class ) ; bind ( org.ovirt.engine.ui.webadmin.system.PostMessageDispatcher . class ) . asEagerSingleton () ; bindTypeAndImplAsSingleton ( org.ovirt.engine.ui.uicommonweb.auth.CurrentUserRole . class , org.ovirt.engine.ui.common.auth.CommonCurrentUserRole . class ) ; }
public boolean AddAsyncRunningVm ( org.ovirt.engine.core.compat.Guid vmId ) { boolean returnValue = false ; if ( ( _asyncRunningVms . putIfAbsent ( vmId , java.lang.Boolean.TRUE ) ) == null ) { returnValue = true ; } return returnValue ; }
public void setvm_active ( java.lang.Integer value ) { this . mVdsDynamic . setvm_active ( value ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.StorageServerConnections getEntity ( int index ) { org.ovirt.engine.core.common.businessentities.StorageServerConnections entity = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; entity . setId ( GUIDS [ index ] . toString () ) ; return entity ; }
@ org.junit.Test public void discardAfterDeleteSupportedByDcVersion () { domain . setDiscardAfterDelete ( true ) ; org.junit.Assert . assertThat ( validator . isDiscardAfterDeleteSupportedByDcVersion ( Version.v4_1 ) , org.ovirt.engine.core.bll.validator.ValidationResultMatchers . isValid () ) ; }
public static void addSmartcardDevice ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.bll.utils.VmDeviceUtils . addManagedDevice ( new org.ovirt.engine.core.common.businessentities.VmDeviceId ( org.ovirt.engine.core.compat.Guid . newGuid () , vmId ) , VmDeviceGeneralType.SMARTCARD , VmDeviceType.SMARTCARD , new org.ovirt.engine.core.bll.smartcard.SmartcardSpecParams () , true , false , null , false ) ; }
@ org.junit.Test public void getUsbPolicyNullUsb () { org.ovirt.engine.api.model.Usb usb = null ; assertEquals ( UsbPolicy.DISABLED , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnCreate ( usb ) ) ; }
@ java.lang.Override public com.google.gwt.event.shared.HandlerRegistration addValueChangeHandler ( com.google.gwt.event.logical.shared.ValueChangeHandler < java.lang.Integer > handler ) { return eventBus . addHandler ( com.google.gwt.event.logical.shared.ValueChangeEvent . getType () , handler ) ; }
@ org.junit.Test public void testSave () { dao . save ( dummyPolicyUnit ) ; org.ovirt.engine.core.common.scheduling.PolicyUnit result = dao . get ( dummyPolicyUnit . getId () ) ; org.junit.Assert . assertEquals ( result , dummyPolicyUnit ) ; }
private void refreshHostStorage ( org.ovirt.engine.core.compat.Guid hostId ) { getBackendCollection ( VdcQueryType.GetDeviceList , new org.ovirt.engine.core.common.queries.GetDeviceListQueryParameters ( hostId , org.ovirt.engine.core.common.businessentities.storage.StorageType.ISCSI , false , null , false ) ) ; }
@ java.lang.Override protected boolean validate () { return ( super . validate () ) && ( validate ( getQosValidator ( getQos () ) . peakConsistentWithAverage () ) ) ; }
private void commitNetworkChanges ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.util.List < org.ovirt.engine.ui.uicommonweb.models.hosts.network.LogicalNetworkModel > networks ) { org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkInterfaceModel bondModel = nicMap . get ( iface . getName () ) ; org.ovirt.engine.ui.uicommonweb.models.hosts.network.NetworkOperation . attachNetworks ( bondModel , new java.util.ArrayList ( networks ) , hostSetupNetworksParametersData ) ; }
protected org.ovirt.engine.core.common.action.UpdateVmDiskParameters createParameters () { org.ovirt.engine.core.common.businessentities.DiskImage diskInfo = new org.ovirt.engine.core.common.businessentities.DiskImage () ; diskInfo . setId ( diskImageGuid ) ; return new org.ovirt.engine.core.common.action.UpdateVmDiskParameters ( vmId , diskImageGuid , diskInfo ) ; }
private void removeVmSnapshots () { org.ovirt.engine.core.compat.Guid vmId = getVmId () ; java.util.Set < java.lang.String > memoryStates = snapshotsManager . removeSnapshots ( vmId ) ; for ( java.lang.String memoryState : memoryStates ) { removeMemoryVolumes ( memoryState , vmId ) ; } }
public void getIrsImageList ( org.ovirt.engine.ui.frontend.AsyncQuery < java.util.List < java.lang.String > > aQuery , org.ovirt.engine.core.compat.Guid storagePoolId , boolean forceRefresh , org.ovirt.engine.core.common.businessentities.storage.ImageFileType imageFileType ) { getIrsImageList ( aQuery , storagePoolId , forceRefresh , imageFileType , new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.RepoImageToImageFileNameAsyncConverter () ) ; }
static org.ovirt.engine.core.common.businessentities.StorageServerConnections setUpStorageServerConnection () { org.ovirt.engine.core.common.businessentities.StorageServerConnections cnx = new org.ovirt.engine.core.common.businessentities.StorageServerConnections () ; cnx . setId ( GUIDS [ NUMBER_CONSTANT ] . toString () ) ; cnx . setconnection ( ( STRING_CONSTANT + ( STRING_CONSTANT + STRING_CONSTANT ) ) ) ; return cnx ; }
private void mockQuotaDAO ( final org.ovirt.engine.core.dao.QuotaDAO quotaDAO ) { org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter search = new org.ovirt.engine.core.searchbackend.SearchObjectAutoCompleter () ; org.mockito.Mockito . when ( quotaDAO . getAllWithQuery ( org.mockito.Matchers . matches ( org.ovirt.engine.core.bll.SearchQueryTest . getQuotaRegexString ( search ) ) ) ) . thenReturn ( quotaResultList ) ; }
public void setMemCommited ( java.lang.Integer value ) { this . mVdsDynamic . setMemCommited ( value ) ; calculateFreeVirtualMemory () ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { org.ovirt.engine.core.common.action.VdcReturnValueBase retVal = result . getReturnValue () ; postSaveAction ( null , ( ( retVal != null ) && ( retVal . getSucceeded () ) ) ) ; }
@ org.junit.Test public void testQueryWithSameUserAndDisks () { assertExecuteQueryCommandResult ( getUser () . getId () , true , true ) ; }
private static void assertContainsBlankTemplate ( org.ovirt.engine.api.model.SpecialObjects objs ) { org.junit.Assert . assertNotNull ( objs . getBlankTemplate () ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.api.restapi.resource.BackendApiResourceTest.BLANK_TEMPLATE_HREF , objs . getBlankTemplate () . getHref () ) ; }
private void addVmInterfaceStatisticsToList ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > list ) { if ( list . isEmpty () ) { return; } _vmInterfaceStatisticsToSave . put ( list . get ( NUMBER_CONSTANT ) . getVmId () , list ) ; }
@ java.lang.Override public org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter getFieldValueAutoCompleter ( java.lang.String fieldName ) { org.ovirt.engine.core.searchbackend.IConditionValueAutoCompleter completer = null ; if ( ( org.ovirt.engine.core.searchbackend.NetworkConditionFieldAutoCompleter.STP . equals ( fieldName ) ) || ( org.ovirt.engine.core.searchbackend.NetworkConditionFieldAutoCompleter.VM_NETWORK . equals ( fieldName ) ) ) { completer = new org.ovirt.engine.core.searchbackend.BitValueAutoCompleter () ; } return completer ; }
@ java.lang.Override public void onMouseOut ( com.google.gwt.event.dom.client.MouseOutEvent event ) { setVmStyle () ; }
private void handleFinalizingFailure ( final org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand < T > . StateContext context ) { log . error ( STRING_CONSTANT , getUploadDescription () ) ; stopImageTransferSession ( context.entity ) ; setImageStatus ( ImageStatus.ILLEGAL ) ; updateEntityPhase ( ImageTransferPhase.FINISHED_FAILURE ) ; }
public boolean canSelectProtocol ( org.ovirt.engine.ui.uicommonweb.models.ConsoleProtocol protocol ) { return protocol == null ? false : consoleModels . get ( protocol ) . canBeSelected () ; }
@ org.junit.Test public void testAddWithCustomGlobalHeader () { clustersService . add () . cluster ( org.ovirt.engine.sdk4.builders.Builders . cluster () ) . send () ; org.junit.Assert . assertEquals ( STRING_CONSTANT , getLastRequestHeaders () . get ( STRING_CONSTANT ) . getFirst () ) ; }
protected java.lang.String transform ( java.lang.String formatString , java.lang.Object . . . args ) { return java.text.MessageFormat . format ( formatString . replaceAll ( STRING_CONSTANT , STRING_CONSTANT ) , args ) ; }
private boolean shouldTakeIpv4DataFromNic () { if ( ( ( org.ovirt.engine.core.common.businessentities.network.Ipv4BootProtocol.DHCP ) == ( getIpv4BootProtocol () ) ) && ( ( nic ) != null ) ) { return true ; } return false ; }
protected org.ovirt.engine.core.compat.Guid getQuotaId () { if ( ( ( newDisk ) != null ) && ( isQuotaValidationNeeded () ) ) { return ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( newDisk ) ) . getQuotaId () ; } return null ; }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.WatchdogsResource getWatchdogsResource () { return inject ( new org.ovirt.engine.api.restapi.resource.BackendWatchdogsResource ( true , guid , org.ovirt.engine.core.common.queries.VdcQueryType.GetWatchdog , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > pmTypes = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; updatePmTypeList ( pmTypes ) ; }
public org.ovirt.engine.ui.uicommonweb.UICommand setTarget ( org.ovirt.engine.ui.uicommonweb.ICommandTarget target ) { this . target = target ; return this ; }
private void initVds () { vds = new org.ovirt.engine.core.common.businessentities.VDS () ; vds . setId ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.VmTemplate baseTemplate ) { org.ovirt.engine.ui.uicommonweb.models.templates.TemplateWithVersion templateCouple = new org.ovirt.engine.ui.uicommonweb.models.templates.TemplateWithVersion ( baseTemplate , template ) ; setReadOnlyTemplateWithVersion ( templateCouple ) ; }
private void doStop () { reset () ; cancel () ; com.google.gwt.event.logical.shared.ValueChangeEvent . fire ( this , getValue () ) ; }
protected void initQueryParams ( org.ovirt.engine.core.common.queries.VdcQueryParametersBase queryParams , java.lang.String sessionId ) { queryParams . setSessionId ( sessionId ) ; queryParams . setFiltered ( filterQueries () ) ; }
protected void setTooltip ( java.lang.String tooltipText ) { this . tooltipText = tooltipText ; setHeaderTooltipStyle ( tooltipText ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.gluster.GlusterGeoRepSession object ) { return object . getStatus () . toString () ; }
@ java.lang.Override protected boolean isVisible ( org.ovirt.engine.core.common.businessentities.gluster.GlusterTaskSupport value ) { return ( ( value . getAsyncTask () ) != null ) && ( ( value . getAsyncTask () . getType () ) == ( org.ovirt.engine.core.common.asynctasks.gluster.GlusterTaskType.REBALANCE ) ) ; }
@ org.junit.Test public void testQueryWithoutFilter ( ) throws java.lang.Exception { resource . setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( false ) ; control . replay () ; resource . get () ; }
protected void attachStorageDomainToDataCenter ( org.ovirt.engine.core.compat.Guid storageDomainId , org.ovirt.engine.core.compat.Guid storagePoolId ) { org.ovirt.engine.core.bll.storage.connection.CINDERStorageHelper cinderStorageHelper = new org.ovirt.engine.core.bll.storage.connection.CINDERStorageHelper () ; cinderStorageHelper . attachCinderDomainToPool ( storageDomainId , storagePoolId ) ; cinderStorageHelper . activateCinderDomain ( storageDomainId , storagePoolId ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { org.ovirt.engine.ui.uicommonweb.models.vms.RunOnceModel runOnceModel = new org.ovirt.engine.ui.uicommonweb.models.vms.WebadminRunOnceModel ( result , this ) ; setWindow ( runOnceModel ) ; runOnceModel . init () ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.IsVmPoolWithSameNameExistsQuery . getQueryReturnValue () . setReturnValue ( ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmPoolDao () . getByName ( org.ovirt.engine.core.bll.IsVmPoolWithSameNameExistsQuery . getParameters () . getName () ) ) != null ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.profiles.CpuProfile > cpuProfiles = returnValue . getReturnValue () ; getCpuProfiles () . setItems ( cpuProfiles ) ; }
public org.ovirt.engine.core.common.businessentities.StorageDomain findStorageDomainForMemory ( org.ovirt.engine.core.compat.Guid storagePoolId , java.util.List < org.ovirt.engine.core.common.businessentities.storage.DiskImage > disksList ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > domainsInPool = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getStorageDomainDao () . getAllForStoragePool ( storagePoolId ) ; return findStorageDomainForMemory ( domainsInPool , disksList ) ; }
public void setGlusterVersion ( org.ovirt.engine.core.compat.RpmVersion value ) { glusterVersion = value ; }
@ java.lang.Override public void setEntity ( java.lang.Boolean enableManualMac ) { super . setEntity ( enableManualMac ) ; getMAC () . setIsChangable ( enableManualMac ) ; }
@ org.junit.Before public void setup () { dbFacade = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () ; initAgents () ; mockDbFacades () ; initCommand () ; }
@ java.lang.Override public org.ovirt.engine.api.resource.StatisticResource getStatisticResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendStatisticResource ( id , entityType , subjectId , query ) ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter ( final org.ovirt.engine.core.common.businessentities.VM vm , final org.ovirt.engine.core.common.businessentities.VDS . . . hosts ) { return inClusterUpgradeFilterPolicyUnit . filter ( new org.ovirt.engine.core.common.businessentities.VDSGroup () , java.util.Arrays . asList ( hosts ) , vm , null , org.mockito.Mockito . mock ( org.ovirt.engine.core.common.scheduling.PerHostMessages . class ) ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.network.Network object ) { return object . getname () ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain createSourceDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain sd = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; sd . setstorage_domain_type ( StorageDomainType.ImportExport ) ; sd . setstatus ( StorageDomainStatus.Active ) ; return sd ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain getStorageDomain () { if ( ( storageDomain ) == null ) { storageDomain = getStorageDomain ( getProfile () . getStorageDomainId () ) ; } return storageDomain ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { doInit () ; }
public org.ovirt.optimizer.solver.test.TestOptimizer enablePolicyUnit ( org.ovirt.optimizer.solver.facts.PolicyUnit unit , int factor ) { bestSolution . getFixedFacts () . add ( new org.ovirt.optimizer.solver.facts.PolicyUnitEnabled ( unit . getUuid () , factor ) ) ; return this ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.Bookmark getByName ( java.lang.String name ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = new org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkSqlParameterSource ( name ) ; return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.BookmarkDAODbFacadeImpl.BookmarkRowMapper.instance , parameterSource ) ; }
@ org.junit.Test public void validateFailsOnNull () { org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override public boolean checkDestDomains () { return super . checkDestDomains () ; }
private void editInstanceType () { createWindow ( new org.ovirt.engine.ui.uicommonweb.models.vms.instancetypes.ExistingInstanceTypeModelBehavior ( getSelectedItem () ) , STRING_CONSTANT , STRING_CONSTANT , false , org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getConstants () . editInstanceTypeTitle () , HelpTag.edit_instance_type ) ; }
java.util.Map < java.lang.String , java.lang.String > allocate ( org.ovirt.engine.core.common.businessentities.network.Network network , org.ovirt.engine.core.common.businessentities.network.VnicProfile vnicProfile , org.ovirt.engine.core.common.businessentities.network.VmNic nic , org.ovirt.engine.core.common.businessentities.VDS host ) ;
private static void addOrUpdateTaskInDB ( org.ovirt.engine.core.common.businessentities.AsyncTasks asyncTask ) { org.ovirt.engine.core.bll.tasks.AsyncTaskUtils . getAsyncTaskDao () . saveOrUpdate ( asyncTask ) ; }
types.ImageFileType type ( ) ;
@ java.lang.Override protected void executeCommand () { setActionReturnValue ( org.ovirt.engine.core.bll.LoginBaseCommand . getCurrentUser () ) ; org.ovirt.engine.core.bll.UserCommandBase . persistAuthenticatedUser ( ldapUser ) ; getReturnValue () . setLoginResult ( LoginResult.Autheticated ) ; updateUserData () ; org.ovirt.engine.core.bll.LoginBaseCommand . setSucceeded ( true ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { osNames = returnValue . getReturnValue () ; initOsIds () ; }
public void updateCallBackNotified ( final org.ovirt.engine.core.compat.Guid commandId ) { commandsCache . updateCallBackNotified ( commandId ) ; }
@ java.lang.Override protected boolean runConnectionStorageToDomain ( org.ovirt.engine.core.common.businessentities.storage_domains storageDomain , org.ovirt.engine.core.compat.Guid vdsId , int type ) { return runConnectionStorageToDomain ( storageDomain , vdsId , type , null , Guid.Empty ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm . getDynamicData () ) ; org.ovirt.engine.core.bll.VmHandler . UnLockVm ( vm ) ; compensationContext . stateChanged () ; return null ; }
@ java.lang.Override protected boolean matchEntity ( org.ovirt.engine.core.common.businessentities.VmWatchdog entity , java.lang.String name ) { return false ; }
public org.ovirt.engine.core.notifier.utils.sender.EventSenderResult send ( org.ovirt.engine.core.common.businessentities.EventAuditLogSubscriber eventData ) ;
org.ovirt.engine.ui.webadmin.widget.host.BondPanel createBondPanel ( org.ovirt.engine.ui.uicommonweb.models.hosts.HostInterfaceLineModel lineModel ) { org.ovirt.engine.ui.webadmin.widget.host.BondPanel panel = new org.ovirt.engine.ui.webadmin.widget.host.BondPanel ( lineModel ) ; panel . setWidth ( STRING_CONSTANT ) ; panel . setHeight ( STRING_CONSTANT ) ; return panel ; }
protected static boolean canAttachPrestartedVmToUser ( org.ovirt.engine.core.compat.Guid vmId ) { return ( ! ( org.ovirt.engine.core.bll.VmPoolCommandBase . vmAssignedToUser ( vmId , new java.util.ArrayList < java.lang.String > () ) ) ) && ( org.ovirt.engine.core.bll.VmPoolCommandBase . vmIsRunningStateless ( vmId ) ) ; }
@ org.junit.After public void tearDown () { org.ovirt.engine.api.restapi.invocation.CurrentManager . remove () ; }
protected org.ovirt.engine.core.common.action.UpdateVmDiskParameters createParameters () { org.ovirt.engine.core.common.businessentities.storage.DiskImage diskInfo = createDiskImage () ; return new org.ovirt.engine.core.common.action.UpdateVmDiskParameters ( vmId , diskInfo ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel () . getMemoryBalloonDeviceEnabled () . setEntity ( ( ( java.lang.Boolean ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue () ) ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.VM result ) { org.ovirt.engine.ui.uicommonweb.models.vms.RunOnceModel runOnceModel = new org.ovirt.engine.ui.uicommonweb.models.vms.UserPortalRunOnceModel ( result , this ) ; setWindow ( runOnceModel ) ; runOnceModel . init () ; }
@ org.ovirt.engine.api.restapi.types.Mapping ( from = org.ovirt.engine.api.model.QosType . class , to = java.lang.String . class ) public static java.lang.String qosTypeToString ( org.ovirt.engine.api.model.QosType qosType ) { return org.ovirt.engine.api.restapi.types.QosTypeMapper . map ( qosType , null ) . name () . toLowerCase () ; }
@ java.lang.Override public org.ovirt.engine.api.model.DataCenter update ( org.ovirt.engine.api.model.DataCenter incoming ) { return performUpdate ( incoming , new org.ovirt.engine.api.restapi.resource.QueryIdResolver ( org.ovirt.engine.core.common.queries.VdcQueryType.GetStoragePoolById , org.ovirt.engine.core.common.queries.IdQueryParameters . class ) , VdcActionType.UpdateStoragePool , new org.ovirt.engine.api.restapi.resource.BackendDataCenterResource.UpdateParametersProvider () ) ; }
public static boolean isPayloadSizeLegal ( java.lang.String payload ) { return ( payload . length () ) <= ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.PayloadSize ) ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { cpuThreadsPanel . setVisible ( model . getCluster () . getVersionSupportsCpuThreads () . getEntity () ) ; }
public void addLocator ( org.ovirt.api.metamodel.concepts.Locator newLocator ) { locators . add ( newLocator ) ; }
@ java.lang.Override public void Executed ( org.ovirt.engine.ui.uicompat.FrontendMultipleActionAsyncResult result ) { Cancel () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.network.HostNetworkQos > qoss ) { qosById = org.ovirt.engine.core.common.businessentities.Entities . businessEntitiesById ( qoss ) ; queryInterfaces () ; }
@ java.lang.Override protected < T > boolean matchEntity ( org.ovirt.engine.core.common.businessentities.VmWatchdog entity , T id ) { return true ; }
public void run () { target . run ( context ) ; }
public org.ovirt.engine.core.compat.Guid getVdsId () { return ( mVdsId ) != null ? mVdsId : org.ovirt.engine.core.compat.Guid.Empty ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , true ) ; }
public void setActualSize ( double size ) { actualSize = size ; }
public boolean getScheudulingAllowOverbookingSupported () { return ( ( java.lang.Boolean ) ( getConfigValuePreConverted ( ConfigurationValues.SchedulerAllowOverBooking , getDefaultConfigurationVersion () ) ) ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.resources.ResourcesModel model ) { vmTable . edit ( model ) ; org.ovirt.engine.ui.userportal.section.main.view.tab.extended.SideTabExtendedResourceView.Driver.driver . edit ( model ) ; this . model = model ; }
public void onExport () { org.ovirt.engine.ui.uicommonweb.models.vms.ExportVmModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.ExportVmModel ) ( org.ovirt.engine.ui.uicommonweb.models.vms.VmListModel . getWindow () ) ) ; if ( ! ( model . validate () ) ) { return; } model . startProgress () ; getTemplatesNotPresentOnExportDomain () ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.Network result = dao . getByName ( STRING_CONSTANT ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result . getname () ) ; }
@ java.lang.Override protected void onEntityContentChanged () { startProgress () ; super . onEntityContentChanged () ; }
@ org.junit.Test public void testRemoveServerConnection () { dao . remove ( existingConnection . getId () ) ; org.ovirt.engine.core.common.businessentities.StorageServerConnections result = dao . get ( existingConnection . getId () ) ; org.junit.Assert . assertNull ( result ) ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT ) public org.ovirt.engine.api.v3.servers.V3VmDiskServer getDiskResource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String id ) { return new org.ovirt.engine.api.v3.servers.V3VmDiskServer ( id , getDelegate () . getDiskResource ( id ) ) ; }
private void init () { org.ovirt.engine.core.dal.dbbroker.DbFacade.log . info ( STRING_CONSTANT ) ; dbFacadeLocator . configure ( this ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.instance = this ; }
@ java.lang.Override protected java.lang.String getProgressText ( org.ovirt.engine.core.common.businessentities.VDS object ) { int numOfActiveVMs = ( ( object . getvm_active () ) != null ) ? object . getvm_active () : NUMBER_CONSTANT ; return org.ovirt.engine.ui.uicompat.ConstantsManager . getInstance () . getMessages () . numberOfVmsForHostsLoad ( numOfActiveVMs ) ; }
private void mockVmsStoragePoolInfo ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { org.ovirt.engine.core.common.businessentities.StoragePool storagePool = mockStoragePool () ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { vm . setStoragePoolId ( storagePool . getId () ) ; } }
@ java.lang.Override public void remove ( org.ovirt.engine.core.compat.Guid id ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ; getCallsHandler () . executeModification ( STRING_CONSTANT , parameterSource ) ; }
private static void handleNotLoggedInEvent ( java.lang.String errorMessage ) { if ( ( errorMessage != null ) && ( errorMessage . equals ( STRING_CONSTANT ) ) ) { org.ovirt.engine.ui.frontend.Frontend.frontendNotLoggedInEvent . raise ( org.ovirt.engine.ui.frontend.Frontend . class , EventArgs.Empty ) ; } }
void buildVmNetworkInterfaces ( ) ;
protected void preSearchCalled ( org.ovirt.engine.core.common.businessentities.VM vm ) { setSearchString ( ( STRING_CONSTANT + ( vm . getName () ) ) ) ; }
@ java.lang.Override protected void executeVdsBrokerCommand () { status = getBroker () . setMOMPolicyParameters ( initDeviceStructure () ) ; proceedProxyReturnValue () ; }
public org.ovirt.engine.core.common.businessentities.VmType getVmType () { return this . vmStatic . getVmType () ; }
@ org.junit.experimental.theories.Theory public void testStorageDomainForMemoryIsValidOnlyForActiveStatus ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus storageDomainStatus ) { storageDomain . setStatus ( storageDomainStatus ) ; org.junit.Assert . assertEquals ( filter . test ( storageDomain ) , ( storageDomainStatus == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ) ) ; }
@ org.junit.Test public void testCheckGlusterQuorumWithoutGluster () { org.ovirt.engine.core.common.businessentities.Cluster cluster = getCluster ( false ) ; java.lang.Iterable < org.ovirt.engine.core.compat.Guid > hostIds = new java.util.LinkedList <> () ; org.junit.Assert . assertTrue ( STRING_CONSTANT , hostValidator . checkGlusterQuorum ( cluster , hostIds ) . isEmpty () ) ; }
public boolean validateBrickCount () { return org.ovirt.engine.ui.uicommonweb.models.gluster.VolumeBrickModel . validateBrickCount ( getTypeList () . getSelectedItem () , getBricks () , getReplicaCountValue () , getStripeCountValue () , true ) ; }
@ java.lang.Override protected void onHide () { super . onHide () ; alertManager . setCanShowAlerts ( false ) ; }
public java.lang.String getVmTemplateName () { if ( ( ( mVmTemplateName ) == null ) && ( ( getVmTemplate () ) != null ) ) { mVmTemplateName = getVmTemplate () . getName () ; } return mVmTemplateName ; }
private boolean networkExists () { return org.ovirt.engine.core.common.businessentities.Entities . entitiesByName ( org.ovirt.engine.core.bll.AttachNetworkToVdsGroupCommand . getNetworkDAO () . getAllForCluster ( org.ovirt.engine.core.bll.AttachNetworkToVdsGroupCommand . getVdsGroupId () ) ) . containsKey ( getNetworkName () ) ; }
@ org.junit.Test public void testGet () { java.lang.String result = dao . get ( FixturesTool.PROVIDER_BINDING_HOST_ID_HOST_ID , FixturesTool.PROVIDER_BINDING_HOST_ID_PLUGIN_TYPE ) ; org.junit.Assert . assertEquals ( FixturesTool.PROVIDER_BINDING_HOST_PLUGIN_ID , result ) ; }
private static boolean isLibrbdAvailable ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( vds . getLibrbdVersion () ) != null ; }
@ java.lang.Override public org.ovirt.engine.core.common.AuditLogType getAuditLogTypeValue () { return getSucceeded () ? org.ovirt.engine.core.common.AuditLogType.USER_ADD_QUOTA : org.ovirt.engine.core.common.AuditLogType.USER_FAILED_ADD_QUOTA ; }
@ java.lang.Override public java.lang.String getName () { return this . mVdsStatic . getName () ; }
private org.ovirt.engine.core.common.businessentities.VdsNetworkInterface createVlan ( java.lang.String baseIfaceName , int vlanId , java.lang.String networkName ) { return createVdsInterface ( org.ovirt.engine.core.compat.Guid . NewGuid () , ( ( baseIfaceName + STRING_CONSTANT ) + vlanId ) , false , null , vlanId , networkName , true ) ; }
private void mockVmTemplateDAOReturnVmTemplate () { org.mockito.Mockito . when ( vmTemplateDAO . get ( org.mockito.Matchers . < org.ovirt.engine.core.compat.Guid > any ( org.ovirt.engine.core.compat.Guid . class ) ) ) . thenReturn ( createVmTemplate () ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { cpuThreadsPanel . setVisible ( object . getVersionSupportsCpuThreads () . getEntity () ) ; }
@ java.lang.Override public void runningSucceded () { removeMemoryFromActiveSnapshot () ; setFlow ( org.ovirt.engine.core.bll.RunVmCommand.RunVmFlow.RUNNING_SUCCEEDED ) ; super . runningSucceded () ; }
@ java.lang.Override protected void init () { resource . setBackend ( backend ) ; resource . setMappingLocator ( mapperLocator ) ; resource . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > getSourceImages () { if ( ( _sourceImages ) == null ) { _sourceImages = org.ovirt.engine.core.bll.RemoveSnapshotCommand . getDiskImageDAO () . getAllSnapshotsForVmSnapshot ( org.ovirt.engine.core.bll.RemoveSnapshotCommand . getParameters () . getSnapshotId () ) ; } return _sourceImages ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.VmTemplateDAODbFacadeImpl.VMTemplateRowMapper.instance ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.Provider < > > searchProviders () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getProviderDao () , true ) ; }
@ org.junit.Test public void testTagLinks ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Tag tag = new org.ovirt.engine.api.model.Tag () ; tag . setId ( org.ovirt.engine.api.restapi.util.LinkHelperTest.TAG_ID ) ; org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( tag ) ; assertEquals ( org.ovirt.engine.api.restapi.util.LinkHelperTest.TAG_HREF , tag . getHref () ) ; }
@ java.lang.Override protected void OnSelectedItemChanged () { super . OnSelectedItemChanged () ; if ( ( getAppListModel () ) != null ) { getAppListModel () . setEntity ( getSelectedItem () ) ; } }
protected abstract void updateVolumeType ( org.ovirt.engine.core.common.businessentities.StorageType storageType ) ;
@ java.lang.Override public void initialize ( A constraintAnnotation ) { validValues = org.ovirt.engine.core.common.config.Config . < java.util.List < java.lang.String > > getValue ( getConfigValue ( constraintAnnotation ) ) ; }
public static org.ovirt.engine.core.common.EventNotificationMethod valueOfString ( java.lang.String value ) { return value != null ? org.ovirt.engine.core.common.EventNotificationMethod . valueOf ( value . toUpperCase () ) : null ; }
@ java.lang.Override protected void unlockEntities () { org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getSnapshotDao () . updateStatus ( sourceSnapshotId , SnapshotStatus.OK ) ; org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getVmDynamicDao () . updateStatus ( org.ovirt.engine.core.bll.AddVmFromSnapshotCommand . getVmId () , VMStatus.Down ) ; }
@ org.junit.Test public void testJsonEmptyDiskDescription ( ) throws java.io.IOException { java.lang.String jsonDescription = org.ovirt.engine.core.bll.ImagesHandler . getJsonDiskDescription ( STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , jsonDescription ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth returnValue ) { spice . getOptions () . setWanColorDepth ( returnValue ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.Disk getEntity ( int index ) { return setUpEntityExpectations ( control . createMock ( org.ovirt.engine.core.common.businessentities.storage.DiskImage . class ) , index ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.vdscommands.VDSReturnValue get () { try { return get ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.vdsTimeout ) , java.util.concurrent.TimeUnit.SECONDS ) ; } catch ( java.util.concurrent.TimeoutException e ) { return org.ovirt.engine.core.vdsbroker.vdsbroker.FutureVDSCommand . getVDSReturnValue () ; } }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.storage_pool > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.StoragePoolDAODbFacadeImpl.mapper ) ; }
public java.lang.String getVmsCount () { return java.lang.String . valueOf ( org.ovirt.engine.core.bll.CommonVmPoolWithVmsCommand . getParameters () . getVmsCount () ) ; }
private void initGraphicsData () { org.ovirt.engine.core.bll.ImportUtils . updateGraphicsDevices ( org.ovirt.engine.core.bll.ImportVmCommand . getVm () . getStaticData () , org.ovirt.engine.core.bll.ImportVmCommand . getEffectiveCompatibilityVersion () ) ; }
public org.ovirt.engine.core.dao.DiskDao getDiskDao () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getDiskDao () ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel value ) { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getOsName ( value . getOsId () ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Groups list () { if ( isFiltered () ) { return mapDbGroupCollection ( getBackendCollection ( VdcQueryType.GetAllDbGroups , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , SearchType.DBGroup ) ) ; } else { return mapDbGroupCollection ( getBackendCollection ( SearchType.DBGroup , getSearchPattern () ) ) ; } }
public boolean isActiveCinderDomainAvailable ( org.ovirt.engine.core.compat.Guid poolId ) { return isActiveStorageDomainAvailable ( StorageType.CINDER , poolId ) ; }
private void setUpMocksForRemove ( boolean hookFound , org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity hook , org.ovirt.engine.core.common.businessentities.VDSStatus status ) { setupMocks ( hookFound , hook ) ; org.mockito.Mockito . when ( vdsDao . getAllForCluster ( org.mockito.ArgumentMatchers . any () ) ) . thenReturn ( getServers ( status ) ) ; }
private void stubDaos () { mockStatistics () ; mockVmDynamic () ; mockVmStatic ( true ) ; mockVdsDao () ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain createStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain sd = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; sd . setstorage_domain_type ( StorageDomainType.Data ) ; sd . setstatus ( StorageDomainStatus.Active ) ; sd . setavailable_disk_size ( NUMBER_CONSTANT ) ; return sd ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { getConnectivityTimeout () . setEntity ( returnValue ) ; postOnSetupNetworks () ; }
public int getSchedulerAllowOverbookingPendingRequestsThreshold () { return ( ( java.lang.Integer ) ( getConfigValuePreConverted ( ConfigurationValues.SchedulerOverBookingThreshold , getDefaultConfigurationVersion () ) ) ) ; }
public org.ovirt.engine.core.compat.Guid getId () { return Id ; }
protected org.ovirt.engine.api.model.VM getVmPreview ( org.ovirt.engine.api.model.Snapshot snapshot ) { org.ovirt.engine.api.model.VM vm = getEntity ( org.ovirt.engine.api.model.VM . class , VdcQueryType.GetVmConfigurationBySnapshot , new org.ovirt.engine.core.common.queries.IdQueryParameters ( asGuid ( snapshot . getId () ) ) , null ) ; return vm ; }
@ org.junit.Test public void validateSucceeds () { mockVdsWithOsVersion ( org.ovirt.engine.core.bll.hostdeploy.UpgradeOvirtNodeInternalCommandTest.VALID_OVIRT_VERSION ) ; command . getParameters () . setoVirtIsoFile ( org.ovirt.engine.core.bll.hostdeploy.UpgradeOvirtNodeInternalCommandTest.VALID_VERSION_OVIRT_ISO_FILENAME ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid extractStoragePoolIdNullSafe ( org.ovirt.engine.core.common.businessentities.VM entity ) { return entity . getStoragePoolId () ; }
public void updateUsbFilter () { fetchFile ( ( ( org.ovirt.engine.ui.frontend.utils.BaseContextPathData . getPath () ) + STRING_CONSTANT ) , usbFilterFileFetchedEvent ) ; }
protected org.ovirt.engine.core.compat.Guid findImageForSameDrive ( org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType snapshotType ) { return findImageForSameDrive ( getSnapshotDao () . getId ( org.ovirt.engine.core.bll.BaseImagesCommand . getVmDAO () . getVmsListForDisk ( getImage () . getId () , false ) . get ( NUMBER_CONSTANT ) . getId () , snapshotType ) ) ; }
@ org.junit.Test public void testIsInternalExecutionDefault () { org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery query = new org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery () ; org.junit.Assert . assertFalse ( STRING_CONSTANT , query . isInternalExecution () ) ; }
private void validateSource () { clearProblem () ; if ( ( ( importSources . getSelectedItem () ) == ( ImportSource.EXPORT_DOMAIN ) ) && ( ( exportDomain . getEntity () ) == null ) ) { setError ( constants . notAvailableWithNoActiveExportDomain () ) ; } }
public static void deserialize ( com.google.gwt.user.client.rpc.SerializationStreamReader streamReader , org.ovirt.engine.core.common.action.VdcReturnValueBase instance ) throws com.google.gwt.user.client.rpc.SerializationException {}
private void logWhenMacPoolIsEmpty () { if ( ! ( macsStorage . availableMacExist () ) ) { org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase logable = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase () ; new org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogDirector () . log ( logable , AuditLogType.MAC_POOL_EMPTY ) ; } }
public void MoveTag ( org.ovirt.engine.core.compat.Guid tagId , org.ovirt.engine.core.compat.Guid newParent ) { org.ovirt.engine.core.bll.TagsDirector . getInstance () . MoveTag ( tagId , newParent ) ; }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkModel object ) { org.ovirt.engine.ui.webadmin.section.main.view.popup.cluster.ClusterNetworkPopupView.Driver.driver . edit ( object ) ; }
protected void addInvalidSDStatusMessage ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus status ) { addCanDoActionMessage ( VdcBllMessages.ACTION_TYPE_FAILED_STORAGE_DOMAIN_STATUS_ILLEGAL2 ) ; addCanDoActionMessage ( java.lang.String . format ( STRING_CONSTANT , status ) ) ; }
public void setQosOverridden ( boolean qosOverridden ) { this . qosOverridden = qosOverridden ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.AsyncTasks > getTasksByEntity ( org.ovirt.engine.core.compat.Guid entityId ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , entityId ) ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.AsyncTaskDAODbFacadeImpl.AsyncTaskRowMapper.instance , parameterSource ) ; }
private org.ovirt.engine.core.common.businessentities.VDSGroup lookupCluster ( org.ovirt.engine.core.compat.Guid id ) { return getEntity ( org.ovirt.engine.core.common.businessentities.VDSGroup . class , VdcQueryType.GetVdsGroupByVdsGroupId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , STRING_CONSTANT ) ; }
private boolean isBond ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface ) { return java.lang.Boolean.TRUE . equals ( iface . getBonded () ) ; }
public static java.lang.String getHugePageSize ( org.ovirt.engine.core.common.businessentities.VmBase vm ) { org.ovirt.engine.core.common.utils.customprop.SimpleCustomPropertiesUtil util = org.ovirt.engine.core.common.utils.customprop.SimpleCustomPropertiesUtil . getInstance () ; java.util.Map < java.lang.String , java.lang.String > customProperties = util . convertProperties ( vm . getCustomProperties () ) ; return customProperties . get ( STRING_CONSTANT ) ; }
private void initSpyCommand () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.MoveDisksCommand ( new org.ovirt.engine.core.common.action.MoveDisksParameters ( new java.util.ArrayList <> () ) ) ) ; }
private void changeStatus ( org.ovirt.engine.core.common.businessentities.VmDynamic curVm ) { if ( org.ovirt.engine.core.vdsbroker.DestroyVmVDSCommand . getParameters () . getVdsId () . equals ( curVm . getRunOnVds () ) ) { resourceManager . internalSetVmStatus ( curVm , VMStatus.PoweringDown ) ; } }
public static org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface findInterfaceByNetworkName ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > items , java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : items ) { if ( org.ovirt.engine.core.compat.StringHelper . stringsEqual ( i . getNetworkName () , name ) ) { return i ; } } return null ; }
@ java.lang.Override public org.ovirt.engine.ui.uicommonweb.validation.ValidationResult validate ( java.lang.Object value ) { org.ovirt.engine.ui.uicommonweb.validation.ValidationResult result = new org.ovirt.engine.ui.uicommonweb.validation.ValidationResult () ; result . setSuccess ( ( ! ( collection . contains ( value ) ) ) ) ; return result ; }
protected abstract void initHeader ( ) ;
protected void preSearchCalled ( org.ovirt.engine.core.common.businessentities.VmTemplate template ) { setSearchString ( ( STRING_CONSTANT + ( template . getName () ) ) ) ; }
private void cinderStorageDomainContainsDisks () { org.mockito.Mockito . doReturn ( false ) . when ( cmd ) . isCinderStorageHasNoDisks () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) { this . setItems ( ( ( java.util.List < org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.VDSGroup , org.ovirt.engine.core.common.businessentities.network.NetworkCluster > > ) ( ( ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue ) ( ReturnValue ) ) . getReturnValue () ) ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VdsStatic get ( org.ovirt.engine.core.compat.Guid id ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsStaticDAODbFacadeImpl.VdsStaticRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ) ; }
private org.ovirt.engine.core.bll.ValidationResult hostExist () { if ( ( host ) == null ) { return new org.ovirt.engine.core.bll.ValidationResult ( org.ovirt.engine.core.common.errors.VdcBllMessages.ACTION_TYPE_FAILED_HOST_NOT_EXIST ) ; } return org.ovirt.engine.core.bll.ValidationResult.VALID ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.LdapGroup > getAllTimeLeasedForPool ( int id ) { return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.AdGroupDAODbFacadeImpl.ADGroupRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , id ) ) ; }
@ org.junit.Test public void setAndValidateWithoutDiskProfilesTest () { map . put ( diskImage , org.ovirt.engine.core.bll.profiles.DiskProfileHelperTest.STORAGE_DOMAIN_1 ) ; org.junit.Assert . assertEquals ( ValidationResult.VALID , diskProfileHelper . setAndValidateDiskProfiles ( map , dbUser ) ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Network update ( org.ovirt.engine.api.model.Network incoming ) { return performUpdate ( incoming , getParent () . getNetworkIdResolver () , VdcActionType.UpdateNetwork , new org.ovirt.engine.api.restapi.resource.BackendNetworkResource.UpdateParametersProvider () ) ; }
@ org.junit.Test public void testExecuteGetAllEntitiesCommand ( ) throws java.io.IOException , org.ovirt.engine.core.utils.ovf.OvfReaderException { cmd . executeCommand () ; org.junit.Assert . assertTrue ( STRING_CONSTANT , cmd . getReturnValue () . getSucceeded () ) ; }
public org.ovirt.engine.core.compat.Guid getVmTemplateId () { return ( getVmTemplateIdRef () ) != null ? getVmTemplateIdRef () : org.ovirt.engine.core.compat.Guid.Empty ; }
protected boolean isStoragePoolUnique ( java.lang.String storagePoolName ) { org.ovirt.engine.core.dao.StoragePoolDAO spDao = org.ovirt.engine.core.bll.storage.StoragePoolManagementCommandBase . getStoragePoolDAO () ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > sps = spDao . getByName ( storagePoolName , true ) ; return ( sps == null ) || ( sps . isEmpty () ) ; }
@ org.junit.Test public void moveDiskToGluster () { initializeCommand ( ImageOperation.Move , new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initSrcStorageDomain () ; initDestStorageDomain ( StorageType.GLUSTERFS ) ; initVmDiskImage ( false ) ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.StoragePool item , java.lang.Object value ) { context.clusterListByDataCenterMap . put ( item , ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( value ) ) ) ; return false ; }
public void setstorage_name ( java.lang.String value ) { if ( ! ( org.ovirt.engine.core.compat.StringHelper . EqOp ( getStorageStaticData () . getstorage_name () , value ) ) ) { getStorageStaticData () . setstorage_name ( value ) ; } }
@ java.lang.Override public org.ovirt.engine.api.v3.types.V3Method adapt ( org.ovirt.engine.api.model.Method from ) { org.ovirt.engine.api.v3.types.V3Method to = new org.ovirt.engine.api.v3.types.V3Method () ; if ( from . isSetId () ) { to . setId ( from . getId () . value () ) ; } return to ; }
public static org.ovirt.engine.core.vdsbroker.VdsManager buildVdsManager ( org.ovirt.engine.core.common.businessentities.VDS vds ) { org.ovirt.engine.core.vdsbroker.VdsManager vdsManager = new org.ovirt.engine.core.vdsbroker.VdsManager ( vds ) ; return vdsManager ; }
private void mockVdsGroupDAO () { org.mockito.Mockito . doReturn ( vdsGroupDAO ) . when ( command ) . getVdsGroupDAO () ; org.mockito.Mockito . when ( vdsGroupDAO . get ( vdsGroupId ) ) . thenReturn ( vdsGroup ) ; }
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Tags > GetAllTags () { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Tags > ret = new java.util.ArrayList ( tagsMapByID . values () ) ; ret . remove ( GetRootTag () ) ; return ret ; }
@ java.lang.Override public void execute () { org.ovirt.engine.ui.uicommonweb.models.SearchableListModel.logger . fine ( ( ( this . getClass () . getName () ) + STRING_CONSTANT ) ) ; syncSearch () ; }
@ java.lang.Override protected void endWithFailure () { super . endWithFailure () ; }
@ org.junit.Test public void testGetAllAttachableDisksByPoolIdNoDisks () { java.util.List < org.ovirt.engine.core.common.businessentities.Disk > result = dao . getAllAttachableDisksByPoolId ( FixturesTool.STORAGE_POOL_NFS , null , null , false ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
protected void initTable () { getModelBoundTableWidget () . initTable () ; }
protected org.ovirt.engine.core.common.businessentities.storage.Disk getDisk () { if ( ( disk ) == null ) { disk = org.ovirt.engine.core.bll.RemoveDiskCommand . getDiskDao () . get ( org.ovirt.engine.core.bll.RemoveDiskCommand . getParameters () . getDiskId () ) ; } return disk ; }
private org.ovirt.engine.core.bll.network.cluster.AddClusterNetworkClusterValidator createNetworkClusterValidator () { final org.ovirt.engine.core.common.businessentities.network.NetworkCluster networkCluster = createManagementNetworkCluster () ; return new org.ovirt.engine.core.bll.network.cluster.AddClusterNetworkClusterValidator ( interfaceDao , networkDao , networkCluster ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm , vm . getstatus () ) ; org.ovirt.engine.core.bll.VmHandler . UnLockVm ( vm ) ; compensationContext . stateChanged () ; return null ; }
protected boolean hasWatchdog ( org.ovirt.engine.core.compat.Guid templateId ) { return ( org.ovirt.engine.core.bll.UpdateVmTemplateCommand . getParameters () . getWatchdog () ) != null ; }
public void setsession_count ( int value ) { sessionCount = value ; setIsLogedin ( ( ( sessionCount ) > NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase endAction ( org.ovirt.engine.core.common.action.VdcActionType actionType , org.ovirt.engine.core.common.action.VdcActionParametersBase parameters ) { return endAction ( actionType , parameters , null ) ; }
protected java.lang.String transform ( org.ovirt.engine.core.common.businessentities.storage.RepoImage repoImage ) { return repoImage . getRepoImageId () ; }
private boolean validate () { return true ; }
private void validateAndExpectNoViolations ( org.ovirt.engine.core.bll.SetupNetworksHelper helper ) { java.util.List < java.lang.String > violations = helper . validate () ; junit.framework.Assert . assertTrue ( ( STRING_CONSTANT + violations ) , violations . isEmpty () ) ; }
@ org.junit.Test public void testGetAllForStoragePoolAndStatus () { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . getAllForStoragePoolAndStatus ( existingVds . getStoragePoolId () , existingVds . getStatus () ) ; assertCorrectGetAllResult ( result ) ; }
@ java.lang.Override protected void init () { super . init () ; }
@ org.junit.Test public void getNonExistentVariable () { org.ovirt.engine.core.common.ExternalVariable found = dao . get ( STRING_CONSTANT ) ; org.junit.Assert . assertNull ( found ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.scheduling.AffinityGroup group ) { java.lang.String vmNames = java.lang.String . join ( STRING_CONSTANT , getVmNames ( group ) ) ; if ( vmNames . isEmpty () ) { return org.ovirt.engine.ui.webadmin.section.main.view.tab.AbstractSubTabAffinityGroupsView.constants . noMembersAffinityGroup () ; } return vmNames ; }
private void updateMtuChangeability () { getMtu () . setIsChangable ( ( ( getHasMtu () . getEntity () ) && ( ! ( getExport () . getEntity () ) ) ) ) ; }
public void log ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase auditLogable , org.ovirt.engine.core.common.AuditLogType logType ) { log ( auditLogable , logType , STRING_CONSTANT ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; }
@ java.lang.Override protected void ExecuteVdsBrokerCommand () { mVmReturn = org.ovirt.engine.core.vdsbroker.vdsbroker.ChangeFloppyVDSCommand . getBroker () . changeFloppy ( mVmId . toString () , mIsoLocation ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.ChangeFloppyVDSCommand . ProceedProxyReturnValue () ; setReturnValue ( org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . buildVMDynamicData ( mVmReturn.mVm ) . getStatus () ) ; }
@ java.lang.Override protected void buildVmSoundDevices () { buildVmDevicesFromDb ( VmDeviceGeneralType.SOUND , true , null ) ; }
private void setStorageDomainStatus ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus status ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; domain . setstatus ( status ) ; org.mockito.Mockito . when ( cmd . getStorageDomain () ) . thenReturn ( domain ) ; }
public static java.util.List < org.ovirt.engine.core.common.businessentities.VDS > GetAllRunningVdssInPool ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVdsDao () . getAllForStoragePoolAndStatus ( pool . getId () , VDSStatus.Up ) ; }
public short nextShort ( short s ) { return ( ( short ) ( nextInt ( s ) ) ) ; }
protected void updateVmDevices ( java.util.List < java.lang.String > vmsToUpdate ) { java.util.Map [] vms = getVmInfo ( vmsToUpdate ) ; if ( vms != null ) { for ( java.util.Map vm : vms ) { processVmDevices ( vm ) ; } } }
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { onRefresh ( event . getValue () ) ; }
@ org.junit.Test public void validateBlockToBlock () { validateInvalidDestinationAndSourceDomainOfDifferentStorageSubtypes ( StorageType.ISCSI , StorageType.ISCSI ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.core.common.businessentities.Cluster cluster = ( ( org.ovirt.engine.core.common.businessentities.Cluster ) ( returnValue ) ) ; if ( cluster != null ) { powerAction ( actionName , title , message , cluster . isOptionalReasonRequired () ) ; } }
protected void updateEntityPhase ( org.ovirt.engine.core.common.businessentities.storage.ImageTransferPhase phase ) { org.ovirt.engine.core.common.businessentities.storage.ImageTransfer updates = new org.ovirt.engine.core.common.businessentities.storage.ImageTransfer ( org.ovirt.engine.core.bll.storage.disk.image.TransferImageCommand . getCommandId () ) ; updates . setPhase ( phase ) ; updateEntity ( updates ) ; }
private java.lang.String readFileTemplate ( ) throws java.io.FileNotFoundException { return org.ovirt.engine.sdk.codegen.utils.FileUtils . getFileContent ( ( ( getTemplatePath () ) + ( getName () ) ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.profiles.DiskProfile > fetchedDiskProfiles = returnValue . getReturnValue () ; this . setDiskProfilesList ( diskProfiles , fetchedDiskProfiles ) ; }
private static java.lang.String getTrustStorePath () { java.io.File varDir = org.ovirt.engine.core.utils.EngineLocalConfig . getInstance () . getVarDir () ; return ( varDir + STRING_CONSTANT ) + STRING_CONSTANT ; }
public static void main ( java.lang.String [] args ) throws java.io.IOException , javax.xml.bind.JAXBException { org.ovirt.engine.sdk.codegen.xsd.XsdCodegen generator = new org.ovirt.engine.sdk.codegen.xsd.XsdCodegen ( args [ NUMBER_CONSTANT ] , args [ NUMBER_CONSTANT ] ) ; generator . generate () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > clusters ) { dcClusters . put ( dcId , clusters ) ; attachNetworkToClusters ( network , clusters , publicUse ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface enslaveOrReleaseNIC ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String bondName ) { return createVdsInterface ( iface . getId () , iface . getName () , false , bondName , null , null , true , null , null ) ; }
protected void checkMaxMemoryOverCommitValue () { if ( ( getVdsGroup () . getmax_vds_memory_over_commit () ) <= NUMBER_CONSTANT ) { getVdsGroup () . setmax_vds_memory_over_commit ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.MaxVdsMemOverCommit ) ) ; } }
@ org.junit.Test public void testNullKeyVal () { java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtils . string2Map ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStringUtilsTest.NULL_KEY_VAL ) ; org.junit.Assert . assertEquals ( NUMBER_CONSTANT , map . size () ) ; }
@ java.lang.Override protected void onSelectedItemChanged () { super . onSelectedItemChanged () ; updateActionAvailability () ; }
public void removeMemoryBalloons ( org.ovirt.engine.core.compat.Guid vmId ) { removeVmDevices ( getMemoryBalloons ( vmId ) , NUMBER_CONSTANT ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.VmListModel vmListModel = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.VmListModel ) ( target ) ) ; vmListModel . PostMigrateGetUpHosts ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; }
@ java.lang.Override protected void executeVdsBrokerCommand () { status = org.ovirt.engine.core.vdsbroker.UpdateVmPolicyVDSCommand . getBroker () . updateVmPolicy ( build () ) ; org.ovirt.engine.core.vdsbroker.UpdateVmPolicyVDSCommand . proceedProxyReturnValue () ; }
public org.ovirt.engine.core.aaa.DirectoryGroup mapGroupRecordToDirectoryGroup ( final java.lang.String authzName , final org.ovirt.engine.api.extensions.ExtMap group ) { return mapGroupRecordToDirectoryGroup ( authzName , group , new java.util.HashSet <> () ) ; }
private org.ovirt.engine.core.common.action.AdElementParametersBase createParameters () { return new org.ovirt.engine.core.common.action.AdElementParametersBase ( adElementId ) ; }
public void setCpuFlags ( java.lang.String value ) { mVdsDynamic . setCpuFlags ( value ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpVersionExpectations () ; setUpGetEntityExpectations ( NUMBER_CONSTANT ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Disk > getAllWithQuery ( java.lang.String query ) { return jdbcTemplate . query ( query , org.ovirt.engine.core.dao.DiskDaoDbFacadeImpl.DiskRowMapper.instance ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.MacPool doPersist () { macPoolDao . save ( object ) ; return macPoolDao . get ( object . getId () ) ; }
@ java.lang.Override public java.lang.Boolean getValue ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData model ) { return model . getClone () . getEntity () ; }
@ org.junit.Test public void testGetServerConnection () { org.ovirt.engine.core.common.businessentities.StorageServerConnections result = dao . get ( existingConnection . getId () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( existingConnection , result ) ; }
@ java.lang.Override public boolean match ( org.ovirt.engine.core.common.businessentities.StoragePool source ) { return ( source . getStatus () ) != ( status ) ; }
private org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeAdvancedDetails fetchAdvancedDatails ( org.ovirt.engine.core.compat.Guid volumeId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterVolumeDaoImpl.glusterVolumesAdvancedDetailsRowMapper , createVolumeIdParams ( volumeId ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) {}
@ java.lang.Override public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) { return runQueryImpl ( actionType , parameters , true ) ; }
@ java.lang.Override protected java.lang.String extractNameFromEntity ( org.ovirt.engine.core.common.businessentities.VmTemplate entity ) { return entity . getname () ; }
@ java.lang.Override protected java.lang.String imageName ( java.lang.Integer value ) { return ( ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getOsUniqueOsNames () . get ( value ) ) + ( nameUniquePart ) ) + ( org.ovirt.engine.ui.userportal.widget.basic.OsTypeImage.IMAGE ) ; }
private org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand < org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters > createCommand ( org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters params ) { org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand < org.ovirt.engine.core.common.action.hostdeploy.InstallVdsParameters > command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.hostdeploy.InstallVdsInternalCommand ( params ) ) ; org.mockito.Mockito . doReturn ( vdsDao ) . when ( command ) . getVdsDao () ; return command ; }
protected org.ovirt.engine.core.common.businessentities.StoragePoolIsoMap getStoragePoolIsoMap ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { org.ovirt.engine.core.common.businessentities.StoragePoolIsoMapId mapId = new org.ovirt.engine.core.common.businessentities.StoragePoolIsoMapId ( storageDomain . getId () , org.ovirt.engine.core.bll.storage.UpdateStorageServerConnectionCommand . getParameters () . getStoragePoolId () ) ; return getStoragePoolIsoMapDao () . get ( mapId ) ; }
@ java.lang.Override protected org.ovirt.engine.ui.webadmin.widget.template.StoragesTree getTree () { return new org.ovirt.engine.ui.webadmin.widget.template.StoragesTree () ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyLegacyGotDisabledLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( false ) ; usb . setType ( UsbType.LEGACY ) ; assertEquals ( UsbPolicy.DISABLED , org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_LEGACY ) ) ; }
@ java.lang.Override public void executed ( org.ovirt.engine.ui.uicompat.FrontendActionAsyncResult result ) { rollback5 () ; }
@ org.junit.Before @ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; setupExpectedGlusterVolumeOptionInfo () ; setupMock () ; }
@ java.lang.Override protected boolean validate () { return validate ( org.ovirt.engine.core.bll.storage.connection.RemoveStorageServerConnectionExtensionCommand . getConnectionExtensionValidator () . isConnectionExtensionExists ( org.ovirt.engine.core.bll.storage.connection.RemoveStorageServerConnectionExtensionCommand . getParameters () . getId () ) ) ; }
@ org.junit.Before public void setupMocks () { mockGlobalParameters () ; setUpCommand () ; mockVds () ; mockDbDao () ; command . init () ; }
@ org.junit.Test public void getVmDefault () { final org.ovirt.engine.core.common.businessentities.VM v = b . getVm () ; org.junit.Assert . assertNull ( v ) ; }
public static org.ovirt.engine.core.common.utils.Pair < java.lang.String , java.lang.String > makeLockingPair ( org.ovirt.engine.core.common.locks.LockingGroup group , java.lang.String message ) { return new org.ovirt.engine.core.common.utils.Pair ( group . name () , message ) ; }
@ org.junit.Test public void testBadGuid ( ) throws java.lang.Exception { control . replay () ; try { new org.ovirt.engine.api.restapi.resource.BackendPermissionResource ( STRING_CONSTANT , null , null , null ) ; fail ( STRING_CONSTANT ) ; } catch ( javax.ws.rs.WebApplicationException wae ) { verifyNotFoundException ( wae ) ; } }
public void updateCallbackNotified ( final org.ovirt.engine.core.compat.Guid commandId ) { commandsCache . updateCallbackNotified ( commandId ) ; }
protected org.ovirt.engine.core.common.businessentities.VM getEntity ( int index , org.ovirt.engine.core.common.businessentities.VMStatus status ) { return org.ovirt.engine.api.restapi.resource.AbstractBackendCdRomsResourceTest . setUpEntityExpectations ( status ) ; }
@ org.junit.Test public void checkCinderStorageDomainContainDisks () { setCinderStorageDomainStatus ( StorageDomainStatus.Inactive ) ; storagePoolExists () ; cinderStorageDomainContainsDisks ( false ) ; masterDomainIsUp () ; canDetachDomain () ; org.junit.Assert . assertFalse ( cmd . canDetachDomain ( false , false ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.businessentities.StorageDomain returnValue ) { org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel storageModelItem = item ; postUpdateItemsAvailability ( storageModelItem , ( returnValue == null ) ) ; }
public void endTaskStepAndJob ( org.ovirt.engine.core.bll.job.ExecutionContext context , boolean exitStatus ) { endFinalizingStepAndCurrentStep ( context , exitStatus ) ; endTaskJobIfNeeded ( context , exitStatus ) ; }
@ org.junit.Test public void canDoActionFailsOnNonExistingEvent () { command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.RemoveAuditLogByIdCommand ( new org.ovirt.engine.core.common.action.RemoveAuditLogByIdParameters ( org.ovirt.engine.core.bll.RemoveAuditLogByIdCommandTest.EVENT_ID_1 ) ) ) ; prepareMocks ( command ) ; org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( command , EngineMessage.AUDIT_LOG_CANNOT_REMOVE_AUDIT_LOG_NOT_EXIST ) ; }
@ org.junit.Test public void getAllForForConnection () { org.ovirt.engine.core.common.businessentities.StorageServerConnections conn = dao . get ( existingConnection . getId () ) ; conn . setId ( STRING_CONSTANT ) ; dao . save ( conn ) ; assertGetAllForConnectionResult ( java.util.Arrays . asList ( existingConnection , conn ) , existingConnection ) ; }
@ org.junit.Test public void testMonitoringNeededByStatus () { org.junit.Assert . assertEquals ( underTest . isMonitoringNeeded ( status ) , monitoringNeeded ) ; }
public org.ovirt.engine.core.compat.Guid getId () { return id ; }
public static boolean CanRemoveVmPoolWithoutReasons ( org.ovirt.engine.core.compat.Guid vmPoolId ) { java.util.ArrayList < java.lang.String > reasons = new java.util.ArrayList < java.lang.String > () ; return org.ovirt.engine.core.bll.RemoveVmPoolCommand . CanRemoveVmPool ( vmPoolId , reasons ) ; }
void error ( java.lang.String message , java.lang.RuntimeException ex ) ;
private void initTables () { entityTable = new org.ovirt.engine.ui.common.widget.editor.EntityModelCellTable ( false , true ) ; entityTable . enableColumnResizing () ; splitLayoutPanel = new com.google.gwt.user.client.ui.SplitLayoutPanel ( NUMBER_CONSTANT ) ; }
@ org.junit.Test public void testLongMessage ( ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException , org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { testEcho ( org.ovirt.vdsm.jsonrpc.client.reactors.stomp.SSLStompClientTestCase . generateRandomMessage ( NUMBER_CONSTANT ) ) ; }
@ org.junit.jupiter.params.ParameterizedTest @ org.junit.jupiter.params.provider.EnumSource ( value = org.ovirt.engine.api.model.ImageTransferPhase . class ) public void testPhasesCorrelation ( org.ovirt.engine.api.model.ImageTransferPhase phase ) { org.ovirt.engine.api.model.ImageTransferPhase . valueOf ( phase . name () ) ; }
protected org.ovirt.engine.core.common.vdscommands.CreateVmVDSCommandParameters buildCreateVmParameters () { return new org.ovirt.engine.core.common.vdscommands.CreateVmVDSCommandParameters ( org.ovirt.engine.core.bll.RunVmCommand . getVdsId () , org.ovirt.engine.core.bll.RunVmCommand . getVm () ) ; }
public java.lang.Integer getKsmCpuPercent () { return ksmCpuPercent ; }
private org.ovirt.engine.core.bll.network.host.HostSetupNetworksValidator createHostSetupNetworksValidator ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > networks ) { return createHostSetupNetworksValidator ( networks , new org.ovirt.engine.core.common.action.HostSetupNetworksParameters ( host . getId () ) ) ; }
private void addNoUpServerMessage ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { addCanDoActionMessage ( java.lang.String . format ( STRING_CONSTANT , cluster . getName () ) ) ; addCanDoActionMessage ( VdcBllMessages.ACTION_TYPE_FAILED_NO_UP_SERVER_FOUND ) ; }
@ java.lang.Override protected boolean canDoAction () { org.ovirt.engine.core.bll.validator.UpgradeHostValidator validator = new org.ovirt.engine.core.bll.validator.UpgradeHostValidator ( org.ovirt.engine.core.bll.hostdeploy.UpgradeHostInternalCommand . getVds () ) ; return ( validate ( validator . hostExists () ) ) && ( validate ( validator . statusSupportedForHostUpgradeInternal () ) ) ; }
public org.ovirt.engine.core.compat.Guid getStoragePoolId () { return storagePoolId ; }
@ java.lang.Override public int getAvailableMacsCount () { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . readLock () ) ) { int availableMacsSize = macsStorage . getAvailableMacsCount () ; org.ovirt.engine.core.bll.network.macpoolmanager.MacPoolManagerRanges.log . debug ( STRING_CONSTANT , availableMacsSize ) ; return availableMacsSize ; } }
public void close () { this . client . close () ; }
public void Frontend_QueryStarted () { ( queryCounter ) ++ ; if ( ( getProgress () ) == null ) { StartProgress ( null ) ; } }
protected abstract java.lang.String getReactorName ( ) ;
@ org.junit.Before public void initializeCommand () { org.ovirt.engine.core.common.action.IdParameters parameters = createParameters () ; command = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.aaa.RemoveGroupCommand ( parameters , null ) ) ; }
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand uiCommand ) { getParentModel () . setWindow ( null ) ; }
protected org.ovirt.engine.core.compat.Guid getQuotaId () { return getQuota () . getId () ; }
@ java.lang.Override protected boolean validate () { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getBookmarkDao () . getByName ( org.ovirt.engine.core.bll.AddBookmarkCommand . getBookmark () . getName () ) ) != null ) { addErrorMessages ( EngineMessage.VAR__ACTION__ADD , EngineMessage.ACTION_TYPE_FAILED_NAME_ALREADY_USED ) ; return false ; } return true ; }
@ java.lang.Override public void setSelectedItem ( java.lang.Object value ) { super . setSelectedItem ( value ) ; updateLinkChangability () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.scheduling.PolicyUnit object ) { return org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . get ( object . getPolicyUnitType () ) ; }
@ org.junit.Test public void testGetOsName ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( STRING_CONSTANT , OsRepositoryImpl.INSTANCE . getOsName ( NUMBER_CONSTANT ) ) ; }
private void initCollection () { org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setBackend ( backend ) ; org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setMappingLocator ( mapperLocator ) ; org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setMessageBundle ( messageBundle ) ; org.ovirt.engine.api.restapi.resource.BackendVmApplicationResourceTest.collection . setHttpHeaders ( httpHeaders ) ; }
protected boolean isGlusterSupportEnabled () { return ( ( ( org.ovirt.engine.core.bll.AddVdsCommand . getVdsGroup () ) != null ) && ( org.ovirt.engine.core.bll.AddVdsCommand . getVdsGroup () . supportsGlusterService () ) ) && ( org.ovirt.engine.core.bll.AddVdsCommand . getParameters () . isGlusterPeerProbeNeeded () ) ; }
@ org.junit.Test public void formatStringTest2 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , result ) ; }
@ org.junit.Test public void areAllVfsFreeFalseHasNetwork () { freeVfCommon ( NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; org.junit.Assert . assertFalse ( networkDeviceHelper . areAllVfsFree ( nic ) ) ; }
@ java.lang.Override public java.lang.Object runInTransaction () { getStoragePoolDAO () . updatePartial ( storagePool ) ; updateMemberDomainsFormat ( targetFormat ) ; if ( org.ovirt.engine.core.common.FeatureSupported . ovfStoreOnAnyDomain ( spVersion ) ) { getVmStaticDAO () . incrementDbGenerationForAllInStoragePool ( storagePool . getId () ) ; } return null ; }
@ java.lang.Override public void setActiveTab ( com.gwtplatform.mvp.client.Tab tab ) { super . setActiveTab ( tab ) ; if ( ( ( tabWidgetHandler ) != null ) && ( tab instanceof org.ovirt.engine.ui.common.widget.tab.TabDefinition ) ) { tabWidgetHandler . setActiveTab ( ( ( org.ovirt.engine.ui.common.widget.tab.TabDefinition ) ( tab ) ) ) ; } }
protected org.ovirt.engine.core.bll.ValidationResult networkNotUsed ( java.util.List < ? extends org.ovirt.engine.core.common.businessentities.Nameable > entities , org.ovirt.engine.core.common.errors.EngineMessage entitiesReplacementPlural , org.ovirt.engine.core.common.errors.EngineMessage entitiesReplacementSingular ) { return new org.ovirt.engine.core.common.utils.PluralMessages () . getNetworkInUse ( getEntitiesNames ( entities ) , entitiesReplacementSingular , entitiesReplacementPlural ) ; }
private void initTabAvailabilityListeners () { highAvailabilityTab . setVisible ( true ) ; isStatelessEditor . setVisible ( true ) ; numOfMonitorsEditor . setVisible ( true ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.Permissions > getAllForEntity ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid userID , boolean isFiltered , boolean allUsersWithPermission ) { int appMode = org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.ApplicationMode ) ; return getAllForEntity ( id , userID , isFiltered , allUsersWithPermission , appMode ) ; }
@ org.junit.Test public void getUsbPolicyOnUpdateCurrentlyNativeGotEnabledLegacyPolicyUsb () { org.ovirt.engine.api.model.Usb usb = new org.ovirt.engine.api.model.Usb () ; usb . setEnabled ( true ) ; usb . setType ( STRING_CONSTANT ) ; assertEquals ( org.ovirt.engine.api.restapi.types.VmMapper . getUsbPolicyOnUpdate ( usb , UsbPolicy.ENABLED_NATIVE ) , UsbPolicy.ENABLED_LEGACY ) ; }
@ org.ovirt.engine.api.restapi.types.Mapping ( from = org.ovirt.engine.api.model.WatchdogModel . class , to = org.ovirt.engine.core.common.businessentities.VmWatchdogType . class ) public static org.ovirt.engine.core.common.businessentities.VmWatchdogType map ( org.ovirt.engine.api.model.WatchdogModel model , org.ovirt.engine.core.common.businessentities.VmWatchdogType incoming ) { switch ( model ) { case I6300ESB : return org.ovirt.engine.core.common.businessentities.VmWatchdogType.i6300esb ; default: return null ; } }
protected void cancel () { resetData () ; setWindow ( null ) ; }
public boolean checkIfCpusSameManufacture ( java.lang.String cpuName1 , java.lang.String cpuName2 , org.ovirt.engine.core.compat.Version ver ) { final org.ovirt.engine.core.bll.CpuFlagsManagerHandler.CpuFlagsManager cpuFlagsManager = org.ovirt.engine.core.bll.CpuFlagsManagerHandler._managersDictionary . get ( ver ) ; if ( cpuFlagsManager != null ) { return cpuFlagsManager . checkIfCpusSameManufacture ( cpuName1 , cpuName2 ) ; } return false ; }
public static org.hamcrest.Matcher < org.ovirt.engine.core.bll.ValidationResult > failsWith ( org.ovirt.engine.core.common.errors.EngineMessage expectedError , java.util.Collection < java.lang.String > variableReplacements ) { return new org.ovirt.engine.core.bll.validator.ValidationResultMatchers.Fails ( expectedError , variableReplacements . toArray ( new java.lang.String [ variableReplacements . size () ] ) ) ; }
private org.ovirt.engine.core.common.businessentities.network.NetworkAttachment createNetworkAttachment ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return createNetworkAttachment ( network , org.ovirt.engine.core.compat.Guid . newGuid () ) ; }
protected void removeVmNetwork () { if ( ( getInterfaces () ) != null ) { for ( org.ovirt.engine.core.common.businessentities.network.VmNic iface : getInterfaces () ) { getMacPool () . freeMac ( iface . getMacAddress () ) ; } } }
public org.ovirt.engine.ui.uicommonweb.models.Model setIsChangeable ( boolean value ) { return setIsChangeable ( value , null ) ; }
@ java.lang.Override public java.lang.String encodedId ( org.ovirt.engine.core.compat.Guid id ) { return getNsUniqueIdFromGuidString ( id . toString () ) ; }
protected org.ovirt.engine.core.dao.VmNetworkInterfaceDAO getVmNetworkInterfaceDao () { return getDbFacade () . getVmNetworkInterfaceDao () ; }
@ java.lang.Override public void onSuccess ( java.util.SortedSet < java.lang.String > returnValue ) { dcLabels = returnValue ; initLabelModels () ; queryNetworks () ; }
private void cleanConnection ( org.ovirt.engine.core.common.businessentities.StorageServerConnections connection , org.ovirt.engine.core.compat.Guid hostId ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runAction ( VdcActionType.DisconnectStorageServerConnection , new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase ( connection , hostId , false ) , null , this ) ; }
public static boolean isPayload ( java.util.Map < java.lang.String , java.lang.Object > specParams ) { return specParams == null ? false : specParams . containsKey ( org.ovirt.engine.core.common.businessentities.VmPayload.SpecParamsPayload ) ; }
private void localize () { isPluggedEditor . setLabel ( org.ovirt.engine.ui.common.widget.uicommon.popup.vm.VmDiskAttachPopupWidget.constants . activateVmDiskPopup () ) ; isPluggedEditor . setWidgetTooltip ( org.ovirt.engine.ui.common.widget.uicommon.popup.vm.VmDiskAttachPopupWidget.constants . activateVmDiskPopupToolTip () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VdsStatic getByVdsName ( java.lang.String name ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.VdsStaticDAODbFacadeImpl.VdsStaticRowMapper.instance , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , name ) ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.VDS o1 , org.ovirt.engine.core.common.businessentities.VDS o2 ) { return java.lang.Integer . compare ( calculateCpuUsage ( o1 ) , calculateCpuUsage ( o2 ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () . equals ( networkName ) ; }
protected boolean isUnavailable ( T size ) { return size == null ; }
public void updateGlusterHook ( org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity hook ) ;
@ java.lang.Override protected boolean canEdit ( org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterNetworkModel clusterNetworkModel ) { return ( clusterNetworkModel . isAttached () ) && ( ! ( clusterNetworkModel . isExternal () ) ) ; }
public void setTotalDiskSize ( java.lang.Integer value ) { value = ( value == null ) ? NUMBER_CONSTANT : value ; if ( ! ( totalDiskSize . equals ( value ) ) ) { totalDiskSize = value ; } }
@ java.lang.Override public java.lang.Void runInTransaction () { addVmStatic () ; addVmDynamic () ; addVmStatistics () ; addVmInterfaces () ; getCompensationContext () . stateChanged () ; return null ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model1 , java.lang.Object result1 ) { ApplySearchPageSize ( ( ( java.lang.Integer ) ( result1 ) ) ) ; }
public void setElementId ( java.lang.String elementId ) { this . getElement () . setId ( elementId ) ; formPanel . setElementId ( elementId ) ; }
public void setInitialized ( boolean value ) { this . vmStatic . setInitialized ( value ) ; }
protected void disableLoginScreen () { getUserName () . setIsChangeable ( false ) ; getPassword () . setIsChangeable ( false ) ; getProfile () . setIsChangeable ( false ) ; }
@ org.junit.Test public void testGetApplicationModeObject () { org.codehaus.jackson.node.ObjectNode result = testServlet . getApplicationModeObject ( NUMBER_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result . get ( STRING_CONSTANT ) . asText () ) ; }
@ org.junit.Test public void canDoActionSucceeds () { cmd = org.mockito.Mockito . spy ( createTestCommand ( volumeId2 , getBricks ( volumeId2 , NUMBER_CONSTANT ) , NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertTrue ( cmd . canDoAction () ) ; }
@ org.junit.Test public void timeoutObjectNull () { final org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase t = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.TimeoutBaseTest.TestTimeoutBase () ; final java.lang.String s = null ; t . setTimeoutObjectId ( s ) ; org.junit.Assert . assertEquals ( s , t . getTimeoutObjectId () ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.StorageFormatType getPreferred ( org.ovirt.engine.core.common.businessentities.StorageType type ) { if ( ( type != null ) && ( type . isBlockDomain () ) ) { return org.ovirt.engine.core.common.businessentities.StorageFormatType.V2 ; } return org.ovirt.engine.core.common.businessentities.StorageFormatType.V1 ; }
private void doQueryClose ( org.ovirt.engine.api.extensions.ExtMap input , org.ovirt.engine.api.extensions.ExtMap output ) throws java.sql.SQLException { authorization . closeQuery ( input . get ( Authz.InvokeKeys.QUERY_OPAQUE , java.lang.String . class ) ) ; }
@ org.junit.Test @ java.lang.Override public void testQuery ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( org.ovirt.engine.api.restapi.resource.QUERY ) ; setUpQueryExpectations ( org.ovirt.engine.api.restapi.resource.QUERY ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
private void updateInstanceTypeFieldsFrom ( org.ovirt.engine.core.common.businessentities.VmBase template ) { if ( template == null ) { return; } model . startProgress () ; doUpdateManagedFieldsFrom ( template ) ; }
public void toFile ( java.lang.String krb5ConfPath , java.lang.StringBuffer sb ) throws java.io.FileNotFoundException , java.io.IOException { try ( java.io.FileOutputStream fos = new java.io.FileOutputStream ( krb5ConfPath ) ) { fos . write ( sb . toString () . getBytes () ) ; } }
@ org.junit.Test public void add () { runAddAndVerify ( createNewInterface () , true , org.mockito.Mockito . times ( NUMBER_CONSTANT ) ) ; }
@ java.lang.Override public java.lang.Boolean convert ( java.lang.Object source ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; }
public java.lang.String GetCustomValue ( final java.lang.String name ) { if ( customValues . containsKey ( name ) ) { return customValues . get ( name ) ; } return STRING_CONSTANT ; }
@ org.junit.Test public void formatStringTest3 () { testMessages . addFallback ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT ) ; java.lang.String result = testMessages . formatString ( DynamicMessageKey.APPLICATION_TITLE , STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , result ) ; }
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( source != null ) && ( ! ( ( java.lang.Boolean ) ( source ) ) ) ; }
@ org.junit.Test public void shouldElectActiveLocalDataDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain domain = prepareLocalStorageDomainForElection ( StorageDomainStatus.Active ) ; org.junit.Assert . assertEquals ( domain , cmd . electNewMaster () ) ; }
@ java.lang.Override protected org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.StorageQos > getParameters () { org.ovirt.engine.core.common.action.QosParametersBase < org.ovirt.engine.core.common.businessentities.qos.StorageQos > qosParametersBase = new org.ovirt.engine.core.common.action.QosParametersBase () ; qosParametersBase . setQos ( getQos () ) ; return qosParametersBase ; }
public void setGroups ( java.util.List < org.ovirt.engine.core.aaa.DirectoryGroup > groups ) { this . groups = groups ; }
@ org.junit.Test public void nGuidCtorNull () { final org.ovirt.engine.core.compat.Guid n = null ; b = new org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBase ( n ) ; final org.ovirt.engine.core.compat.Guid g = b . getVdsId () ; org.junit.Assert . assertEquals ( Guid.Empty , g ) ; }
@ org.junit.Before public void setUp () { clusterId = org.ovirt.engine.core.compat.Guid . newGuid () ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.Network x , org.ovirt.engine.core.common.businessentities.Network y ) { return x . getname () . compareTo ( y . getname () ) ; }
private boolean hasTasks () { return ! ( getReturnValue () . getTaskIdList () . isEmpty () ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetRoleByNameQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getRoleDao () . getByName ( org.ovirt.engine.core.bll.GetRoleByNameQuery . getParameters () . getRoleName () ) ) ; }
@ org.junit.Test public void getForNonExistentVds () { org.ovirt.engine.core.common.businessentities.VdsKdumpStatus found = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) ; org.junit.Assert . assertNull ( found ) ; }
public static org.ovirt.engine.core.common.TimeZoneType getTimeZoneByOs ( org.ovirt.engine.core.common.businessentities.VmOsType vmOsType ) { return ( vmOsType != null ) && ( vmOsType . isWindows () ) ? org.ovirt.engine.core.common.TimeZoneType.WINDOWS_TIMEZONE : org.ovirt.engine.core.common.TimeZoneType.GENERAL_TIMEZONE ; }
public void removeAllCommandsInHierarchy ( final org.ovirt.engine.core.compat.Guid commandId ) { for ( org.ovirt.engine.core.compat.Guid childCmdId : new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( getChildCommandIds ( commandId ) ) ) { removeAllCommandsInHierarchy ( childCmdId ) ; } removeCommand ( commandId ) ; }
@ java.lang.Override public void OnSuccess ( java.lang.Object model , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.common.AboutModel aboutModel = ( ( org.ovirt.engine.ui.uicommonweb.models.common.AboutModel ) ( model ) ) ; aboutModel . setProductVersion ( ( ( java.lang.String ) ( returnValue ) ) ) ; }
@ java.lang.Override protected org.ovirt.engine.api.model.DataCenter postPopulate ( org.ovirt.engine.api.model.DataCenter model ) { model . setStorageFormat ( org.ovirt.engine.api.restapi.types.MappingTestHelper . shuffle ( org.ovirt.engine.api.restapi.model.StorageFormat . class ) . value () ) ; return model ; }
protected void testGet ( org.ovirt.engine.core.common.businessentities.StorageDomainType domainType ) throws java.lang.Exception { setUpGetStorageDomainExpectations ( domainType ) ; setUpGetEntityExpectations ( domainType , org.ovirt.engine.api.restapi.resource.BackendStorageDomainTemplateResourceTest.STORAGE_DOMAIN_ID ) ; setUriInfo ( setUpBasicUriExpectations () ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
private long getConfigurableDelay ( java.lang.String configurableDelayKeyName ) { org.ovirt.engine.core.common.config.ConfigValues configDelay = org.ovirt.engine.core.common.config.ConfigValues . valueOf ( configurableDelayKeyName ) ; return org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( configDelay ) . longValue () ; }
@ java.lang.Override protected void verifyModel ( org.ovirt.engine.api.model.User model , int index ) { assertEquals ( NAMES [ index ] , model . getUserName () ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.storage.DiskImage object ) { return org.ovirt.engine.ui.webadmin.section.main.view.popup.storage.backup.ImportVmFromExportDomainPopupView.constants . importAllocationModifiedCollapse () ; }
@ java.lang.Override public java.lang.String allocateNewMac () { try ( org.ovirt.engine.core.utils.lock.AutoCloseableLock l = new org.ovirt.engine.core.utils.lock.AutoCloseableLock ( lockObj . writeLock () ) ) { return allocateNewMacsWithoutLocking ( NUMBER_CONSTANT ) . get ( NUMBER_CONSTANT ) ; } }
@ java.lang.Override public void testList ( ) throws java.lang.Exception { setUpHooksQueryExpectations ( null ) ; javax.ws.rs.core.UriInfo uriInfo = setUpUriExpectations ( null ) ; collection . setUriInfo ( uriInfo ) ; verifyCollection ( getCollection () ) ; }
@ org.junit.Test public void vmId () { b . setVmId ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID ) ; final org.ovirt.engine.core.compat.Guid i = b . getVmId () ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dal.dbbroker.auditloghandling.AuditLogableBaseTest.GUID , i ) ; }
private void verifyDataCenterNetworks ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > result ) { org.ovirt.engine.core.dao.NetworkDAOTest . assertGetAllForClusterResult ( result ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network net : result ) { org.junit.Assert . assertEquals ( datacenter , net . getstorage_pool_id () ) ; } }
@ org.junit.Test public void legalCpuUpdate () { createCommandWithDifferentCpuName () ; cpuExists () ; architectureIsUpdatable () ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
public java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel > getSelectableModels () { java.util.List < org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel > items = getModel () . getStorageModels () ; return getSelectableModels ( items ) ; }
@ org.junit.Test public void testGetDataAndSetDataWithEmptySession () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer . setHttpSessionId ( STRING_CONSTANT ) ; org.junit.Assert . assertFalse ( STRING_CONSTANT , container . SetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_VALUE ) ) ; org.junit.Assert . assertNull ( STRING_CONSTANT , container . GetData ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_KEY , false ) ) ; }
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { updateIsMemorySnapshotSupported ( value ) ; updateIsLiveMergeSupported ( value ) ; super . setEntity ( value ) ; updateVmActiveDisks () ; }
protected org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStruct [] getVmInfo ( java.util.List < java.lang.String > vmsToUpdate ) { return ( ( org.ovirt.engine.core.vdsbroker.xmlrpc.XmlRpcStruct [] ) ( new org.ovirt.engine.core.vdsbroker.vdsbroker.FullListVdsCommand < org.ovirt.engine.core.common.vdscommands.FullListVDSCommandParameters > ( new org.ovirt.engine.core.common.vdscommands.FullListVDSCommandParameters ( _vds . getId () , vmsToUpdate ) ) . ExecuteWithReturnValue () ) ) ; }
private org.ovirt.engine.core.bll.ValidationResult validateCoherentNicIdentification ( org.ovirt.engine.core.common.businessentities.network.NetworkAttachment attachment ) { return validateCoherentIdentification ( java.lang.String . valueOf ( attachment . getId () ) , attachment . getNicId () , attachment . getNicName () , EngineMessage.NETWORK_ATTACHMENT_REFERENCES_NICS_INCOHERENTLY , existingInterfacesMap ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; postGetHostList ( hosts ) ; }
public void setWidget ( com.google.gwt.user.client.ui.Widget widget ) { panel . setWidget ( widget ) ; }
private void fillPasswordsMap () { passwordPerDomain = org.ovirt.engine.core.common.config.Config . < org.ovirt.engine.core.dal.dbbroker.generic.DomainsPasswordMap > getValue ( ConfigValues.AdUserPassword ) ; }
public static void addDisksLink ( javax.ws.rs.core.Response response ) { java.lang.Object entity = response . getEntity () ; if ( entity instanceof org.ovirt.engine.api.v3.types.V3VM ) { org.ovirt.engine.api.v3.helpers.V3VmHelper . addDisksLink ( ( ( org.ovirt.engine.api.v3.types.V3VM ) ( entity ) ) ) ; } }
@ java.lang.Override public boolean connectStorageToLunByVdsId ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId , org.ovirt.engine.core.common.businessentities.LUNs lun , org.ovirt.engine.core.compat.Guid storagePoolId ) { return runConnectionStorageToDomain ( storageDomain , vdsId , VDSCommandType.ConnectStorageServer . getValue () , lun , storagePoolId ) ; }
@ java.lang.Override public void setEntity ( org.ovirt.engine.core.common.businessentities.VM value ) { updateIsMemorySnapshotSupported ( value ) ; super . setEntity ( value ) ; updateVmActiveDisks () ; }
public org.ovirt.engine.core.common.businessentities.Snapshot prepareSnapshotConfigWithoutImageSingleImage ( org.ovirt.engine.core.common.businessentities.Snapshot snapshot , org.ovirt.engine.core.compat.Guid imageId , org.ovirt.engine.core.utils.ovf.OvfManager ovfManager ) { return prepareSnapshotConfigWithAlternateImage ( snapshot , imageId , null , ovfManager ) ; }
@ java.lang.Override protected java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () ; }
private java.lang.String addSubResource ( java.lang.String className , org.ovirt.engine.sdk.generator.utils.Tree < org.ovirt.engine.sdk.generator.Location > entityTree ) { return new org.ovirt.engine.sdk.generator.java.templates.SubResourceTemplate () . evaluate ( className , entityTree ) ; }
@ java.lang.Override protected void executeQueryCommand () { org.ovirt.engine.core.bll.GetJobByJobIdQuery . getQueryReturnValue () . setReturnValue ( org.ovirt.engine.core.bll.job.JobRepositoryFactory . getJobRepository () . getJobWithSteps ( org.ovirt.engine.core.bll.GetJobByJobIdQuery . getParameters () . getId () ) ) ; }
public boolean hasTasks () { return ! ( getReturnValue () . getVdsmTaskIdList () . isEmpty () ) ; }
private org.ovirt.engine.core.bll.gluster.StartRemoveGlusterVolumeBricksCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId , int replicaCount ) { return new org.ovirt.engine.core.bll.gluster.StartRemoveGlusterVolumeBricksCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeRemoveBricksParameters ( volumeId , getBricks ( volumeId , NUMBER_CONSTANT ) , replicaCount ) , null ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { if ( ( ( getModel () ) != null ) && ( handleItemsChangedEvent () ) ) { updateData () ; } }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ; java.util.ArrayList < java.lang.String > images = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; setImagesToModel ( model , images ) ; }
private void setClusterEmulatedMachine ( org.ovirt.engine.core.common.businessentities.VDS vds , java.lang.String matchedEmulatedMachine ) { org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVdsGroupDao () . setEmulatedMachine ( vds . getVdsGroupId () , matchedEmulatedMachine , false ) ; }
public java.lang.String getUserId () { return isLoggedIn () ? loggedUser . getId () . toString () : null ; }
private boolean isLastTaskHandler () { return ( org.ovirt.engine.core.bll.storage.lsm.LiveMigrateDiskCommand . getParameters () . getExecutionIndex () ) == ( ( org.ovirt.engine.core.bll.storage.lsm.LiveMigrateDiskCommand . getTaskHandlers () . size () ) - NUMBER_CONSTANT ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { hostDeviceDao . saveAllInBatch ( newDevices ) ; hostDeviceDao . updateAllInBatch ( changedDevices ) ; hostDeviceDao . removeAllInBatch ( removedDevices ) ; handleHostNicVfsConfigUpdate ( newDevices , changedDevices , removedDevices ) ; vmDeviceDao . removeAllInBatch ( removedVmDevices ) ; return null ; }
@ org.junit.Test public void canAddCloneVmFromSnapshotSnapshotDoesNotExist () { cmd . getVm () . setName ( STRING_CONSTANT ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( cmd , EngineMessage.ACTION_TYPE_FAILED_VM_SNAPSHOT_DOES_NOT_EXIST ) ; }
protected void performLogout () { getLoginModel () . resetAfterLogout () ; user . onUserLogout () ; org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . clearCache () ; org.ovirt.engine.ui.common.uicommon.model.CleanupModelEvent . fire ( eventBus ) ; }
@ org.junit.Test public void validateFreeSpaceOnDestinationDomains () { org.junit.Assert . assertTrue ( command . checkFreeSpaceAndTypeOnDestDomains () ) ; }
public void setRootCommandId ( org.ovirt.engine.core.compat.Guid rootCommandId ) { this . rootCommandId = rootCommandId ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { if ( getGlobalClusterQuota () . getEntity () ) { getSpecificClusterQuota () . setEntity ( false ) ; } }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.SchedulingPolicyUnitResource getSchedulingPolicyUnitSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendSchedulingPolicyUnitResource ( id ) ) ; }
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) ;
private org.ovirt.engine.core.common.vdscommands.VDSReturnValue runVdsCommand ( org.ovirt.engine.core.common.vdscommands.VDSCommandType commandType , org.ovirt.engine.core.common.vdscommands.VDSParametersBase params ) { return org.ovirt.engine.core.bll.Backend . getInstance () . getResourceManager () . runVdsCommand ( commandType , params ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel model = ( ( org.ovirt.engine.ui.uicommonweb.models.vms.UnitVmModel ) ( target ) ) ; java.util.ArrayList < java.lang.String > images = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; setImagesToModel ( model , images ) ; }
@ java.lang.Override protected void syncSearch () { if ( ( getEntity () ) == null ) { return; } super . syncSearch ( VdcQueryType.GetVmTemplatesDisks , new org.ovirt.engine.core.common.queries.IdQueryParameters ( getEntityStronglyTyped () . getId () ) ) ; }
protected void beforeLogin () {}
@ org.junit.Test public void validateFailsOnNull () { org.junit.Assert . assertFalse ( cmd . validate () ) ; }
@ java.lang.Override @ org.junit.Before public void setUp ( ) throws java.lang.Exception { super . setUp () ; config = new org.ovirt.engine.core.dal.dbbroker.generic.DBConfigUtils () ; org.ovirt.engine.core.common.config.Config . setConfigUtils ( config ) ; }
@ org.junit.Test public void validateNonExistingJobFails ( ) throws java.lang.Exception { command . getParameters () . setJobId ( org.ovirt.engine.core.bll.ClearExternalJobCommandTest.nonExistingJobId ) ; org.junit.Assert . assertTrue ( ( ! ( command . validate () ) ) ) ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUpGetEntityExpectations ( NUMBER_CONSTANT , getEntity ( NUMBER_CONSTANT ) ) ; setUpGetStorageServerConnectionExpectations ( NUMBER_CONSTANT ) ; setUriInfo ( setUpBasicUriExpectations () ) ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
public org.ovirt.engine.core.common.businessentities.network.Bond createBond ( java.lang.String bondName ) { return createBond ( bondName , null , org.ovirt.engine.core.compat.Guid . newGuid () ) ; }
public java.util.Map < java.lang.String , org.ovirt.engine.sdk.entities.VM > getVms () { return vms ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Label > hostLabelsList ) { labelList . setItems ( allLabels ) ; labelList . setSelectedItems ( hostLabelsList ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > searchClusters () { return genericSearch ( org.ovirt.engine.core.bll.SearchQuery . getDbFacade () . getVdsGroupDao () , true ) ; }
public java.lang.Integer getAvailableDiskSize () { return getStorageDynamicData () . getAvailableDiskSize () ; }
@ java.lang.Override protected boolean canDoAction () { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getBookmarkDao () . getByName ( org.ovirt.engine.core.bll.AddBookmarkCommand . getBookmark () . getName () ) ) != null ) { addErrorMessages ( EngineMessage.VAR__ACTION__ADD , EngineMessage.ACTION_TYPE_FAILED_NAME_ALREADY_USED ) ; return false ; } return true ; }
private java.lang.String getJsonDiskDescription ( ) throws java.io.IOException { return org.ovirt.engine.core.bll.ImagesHandler . getJsonDiskDescription ( org.ovirt.engine.core.bll.UpdateVmDiskCommand . getParameters () . getDiskInfo () ) ; }
@ org.junit.Test public void testJsonDiskDescription ( ) throws java.io.IOException { java.lang.String jsonDescription = org.ovirt.engine.core.bll.ImagesHandler . getJsonDiskDescription ( STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , STRING_CONSTANT , jsonDescription ) ; }
public static org.hamcrest.Matcher < org.ovirt.engine.core.bll.ValidationResult > failsWith ( org.ovirt.engine.core.common.errors.EngineMessage expectedError ) { return new org.ovirt.engine.core.bll.validator.ValidationResultMatchers.Fails ( expectedError ) ; }
@ org.junit.Test public void validateOkSucceeds ( ) throws java.lang.Exception { org.mockito.Mockito . when ( jobDaoMock . get ( org.ovirt.engine.core.bll.EndExternalJobCommandTest.jobId ) ) . thenReturn ( makeExternalTestJob () ) ; org.junit.Assert . assertTrue ( commandMock . validate () ) ; }
@ java.lang.Override public void sendMessage ( byte [] message ) { send ( new org.ovirt.vdsm.jsonrpc.client.reactors.stomp.impl.Message () . message () . withHeader ( org.ovirt.vdsm.jsonrpc.client.reactors.stomp.impl.Message.HEADER_DESTINATION , org.ovirt.vdsm.jsonrpc.client.reactors.stomp.RESPONSE_QUEUE ) . withContent ( message ) . build () ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.profiles.CpuProfile > cpuProfiles = returnValue . getReturnValue () ; getCpuProfiles () . setItems ( cpuProfiles ) ; }
@ java.lang.Override public void run () { try { returnValue = org.ovirt.engine.core.bll.Backend . getInstance () . runInternalAction ( actionType , actionParameters ) ; } catch ( java.lang.RuntimeException ex ) { log . error ( STRING_CONSTANT , ex ) ; } finally { latch . countDown () ; } }
public void setKsmPolicyForNuma ( java.lang.Boolean ksmPolicyForNumaFlag ) { if ( ksmPolicyForNumaFlag == null ) { return; } org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterModel.KsmPolicyForNuma ksmPolicyForNuma = org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterModel.KsmPolicyForNuma.shareAcrossNumaNodes ; if ( ! ksmPolicyForNumaFlag ) { ksmPolicyForNuma = org.ovirt.engine.ui.uicommonweb.models.clusters.ClusterModel.KsmPolicyForNuma.shareInsideEachNumaNode ; } getKsmPolicyForNumaSelection () . setSelectedItem ( ksmPolicyForNuma ) ; return; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Label > vmLabelsList ) { labelList . setItems ( allLabels ) ; labelList . setSelectedItems ( vmLabelsList ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { if ( object . getOptimizationCustom_IsSelected () . getEntity () ) { optimizationCustomFormatter ( object ) ; optimizationCustomEditor . setVisible ( true ) ; } }
private void initSize () { setBrickSize ( new org.ovirt.engine.core.common.utils.Pair ( org.ovirt.engine.core.common.utils.SizeConverter.SizeUnit.BYTES , NUMBER_CONSTANT ) ) ; }
@ org.junit.Test public void validateNonExternalJobFails ( ) throws java.lang.Exception { org.mockito.Mockito . when ( jobDaoMock . get ( org.ovirt.engine.core.bll.EndExternalJobCommandTest.jobId ) ) . thenReturn ( makeNonExternalTestJob () ) ; org.junit.Assert . assertTrue ( ( ! ( commandMock . validate () ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > templatesChain = new java.util.ArrayList <> ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ) ; initTemplateWithVersion ( templatesChain , templateId , useLatest ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.VmPool result = dao . getByName ( existingVmPool . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; org.junit.Assert . assertEquals ( existingVmPool , result ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.action.VdcReturnValueBase endAction ( org.ovirt.engine.core.bll.tasks.interfaces.SPMTask task ) { return coCoAsyncTaskHelper . endAction ( task ) ; }
public void getDefaultPmProxyPreferences ( org.ovirt.engine.ui.frontend.AsyncQuery query ) { getConfigFromCache ( new org.ovirt.engine.core.common.queries.GetConfigurationValueParameters ( org.ovirt.engine.core.common.queries.ConfigurationValues.FenceProxyDefaultPreferences , getDefaultConfigurationVersion () ) , query ) ; }
@ org.junit.Test public void testFindExternalMacAddressesVnicsNull () { final java.util.Set < java.lang.String > actual = underTest . findExternalMacAddresses ( vm ) ; org.junit.Assert . assertThat ( actual , org.hamcrest.Matchers . empty () ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getcompatibility_version () . getValue () ; }
@ java.lang.Override public java.lang.String getValue ( java.lang.Object object ) { return java.lang.String . valueOf ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) . getnum_of_cpus () ) ; }
private void setVmSnapshotIdForDisk ( org.ovirt.engine.core.common.action.AddImageFromScratchParameters parameters ) { if ( org.ovirt.engine.core.bll.AddDiskCommand . getParameters () . getDiskInfo () . isAllowSnapshot () ) { parameters . setVmSnapshotId ( org.ovirt.engine.core.bll.AddDiskCommand . getSnapshotDao () . getId ( org.ovirt.engine.core.bll.AddDiskCommand . getVmId () , SnapshotType.ACTIVE ) ) ; } }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.storage.DiskImage object ) { if ( object . isBoot () ) { return constants . bootableDisk () ; } return null ; }
@ org.junit.Test public void validateFailsIsoVersionNotCompatible () { mockVdsWithOsVersion ( org.ovirt.engine.core.bll.hostdeploy.UpgradeOvirtNodeInternalCommandTest.INVALID_OVIRT_VERSION ) ; command . getParameters () . setoVirtIsoFile ( org.ovirt.engine.core.bll.hostdeploy.UpgradeOvirtNodeInternalCommandTest.VALID_VERSION_OVIRT_ISO_FILENAME ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.VDS_CANNOT_UPGRADE_BETWEEN_MAJOR_VERSION ) ; }
protected abstract boolean isVmNeedsToBeAutoStarted ( org.ovirt.engine.core.compat.Guid vmId ) ;
@ java.lang.Override public void executeCommand ( org.ovirt.engine.ui.uicommonweb.UICommand uiCommand ) { setWindow ( null ) ; setWindow ( model ) ; }
java.lang.String getSysprepPath ( int osId , org.ovirt.engine.core.compat.Version version ) ;
protected java.lang.String getVirtioIsoPath () { return ( org.ovirt.engine.core.bll.ConvertVmCommand . getParameters () . getVirtioIsoName () ) == null ? null : new java.io.File ( getIsoPrefix () , org.ovirt.engine.core.bll.ConvertVmCommand . getParameters () . getVirtioIsoName () ) . getPath () ; }
@ java.lang.Override protected void ExecuteVdsBrokerCommand () { status = org.ovirt.engine.core.vdsbroker.vdsbroker.VmLogoffVDSCommand . getBroker () . desktopLogoff ( mVmId . toString () , java.lang.String . valueOf ( mForce ) ) ; org.ovirt.engine.core.vdsbroker.vdsbroker.VmLogoffVDSCommand . ProceedProxyReturnValue () ; }
@ java.lang.Override protected void updateDetailsAvailability () { super . updateDetailsAvailability () ; org.ovirt.engine.core.common.businessentities.network.NetworkView network = getSelectedItem () ; networkExternalSubnetListModel . setIsAvailable ( ( ( network != null ) && ( network . isExternal () ) ) ) ; }
public org.ovirt.engine.ui.uicommonweb.UICommand setIsCancel ( boolean value ) { privateIsCancel = value ; return this ; }
protected org.ovirt.engine.core.utils.ovf.xml.XmlNodeList selectNodes ( org.ovirt.engine.core.utils.ovf.xml.XmlNode node , java.lang.String pattern ) { this . lastReadEntry = pattern ; return node . selectNodes ( pattern ) ; }
private void handleFinalizingFailure ( final org.ovirt.engine.core.bll.storage.disk.image.UploadImageCommand < T > . StateContext context ) { log . error ( STRING_CONSTANT , getUploadDescription () ) ; stopImageTransferSession ( context.entity ) ; setImageStatus ( ImageStatus.ILLEGAL ) ; updateEntityPhase ( ImageTransferPhase.FINISHED_FAILURE ) ; }
@ java.lang.Override protected void init () { resource . setBackend ( backend ) ; resource . setMappingLocator ( mapperLocator ) ; resource . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
protected org.ovirt.engine.core.common.businessentities.VM createVm ( org.ovirt.engine.core.common.businessentities.VMStatus status ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM () ; vm . setStatus ( status ) ; vm . setGuestOs ( STRING_CONSTANT ) ; vm . setId ( vmId ) ; return vm ; }
@ org.junit.Test public void testNewStorageTypes () { org.junit.Assert . assertEquals ( ( STRING_CONSTANT + STRING_CONSTANT ) , NUMBER_CONSTANT , org.ovirt.engine.core.common.businessentities.storage.StorageType . values () . length ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Boolean returnValue1 ) { getIsVirtioScsiEnabled () . setEntity ( java.lang.Boolean.TRUE . equals ( returnValue1 ) ) ; updateInterfaceList ( clusterVersion ) ; }
@ org.junit.Test public void testSave () { dao . save ( new_bookmark ) ; org.ovirt.engine.core.common.businessentities.Bookmark result = dao . getByName ( new_bookmark . getName () ) ; org.junit.Assert . assertNotNull ( result ) ; }
@ java.lang.Override public java.lang.String getTagIdAndChildrenIds ( org.ovirt.engine.core.compat.Guid tagId ) { org.ovirt.engine.core.common.businessentities.Tags tag = getTagById ( tagId ) ; if ( tag == null ) { return org.apache.commons.lang.StringUtils.EMPTY ; } java.lang.StringBuilder sb = getTagIdAndChildrenIds ( tag ) ; return sb . toString () ; }
@ java.lang.Override public void snapshotObject ( org.ovirt.engine.core.common.businessentities.TransientCompensationBusinessEntity entity ) { snapshotEntityInMemory ( entity , entity , SnapshotType.TRANSIENT_ENTITY ) ; }
public org.ovirt.engine.core.bll.context.CompensationContext getCompensationContext () { return context . getCompensationContext () ; }
@ java.lang.Override protected java.lang.Number getRawValue ( org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface object ) { return object != null ? object . getStatistics () . getReceivedBytes () : null ; }
private void removeRestrictedInfo ( org.ovirt.engine.api.model.VM vm ) { if ( isFiltered () ) { vm . setHost ( null ) ; vm . setPlacementPolicy ( null ) ; } }
@ org.junit.jupiter.api.BeforeEach public void setUp ( ) throws java.lang.Exception { initQuery ( getQuery () ) ; }
protected org.ovirt.engine.api.model.HostNIC map ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ifaces ) { return map ( iface , null , ifaces ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.ActionResource getActionSubresource ( java.lang.String action , java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendActionResource ( action , id ) ) ; }
@ org.junit.Test public void emptyStringMakesEmptyMap () { final java.lang.String empty = STRING_CONSTANT ; java.util.Map < java.lang.String , java.lang.String > map = org.ovirt.engine.core.common.businessentities.VdsStatic . PmOptionsStringToMap ( empty ) ; mapIsEmpty ( map ) ; }
public void init ( java.util.List < > value , final org.ovirt.engine.core.compat.Guid storageDomainId ) { setItems ( value , storageDomainId ) ; }
protected java.util.List < T > getSelectedItems () { return getTable () . getSelectionModel () . getSelectedList () ; }
@ org.junit.Test public void validateFails () { cmd = org.mockito.Mockito . spy ( new org.ovirt.engine.core.bll.gluster.StopGeoRepSessionCommand ( new org.ovirt.engine.core.common.action.gluster.GlusterVolumeGeoRepSessionParameters ( stoppedVolumeId , geoRepSessionId ) , null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public void setCpuThreads ( java.lang.Integer value ) { cpuThreads = value ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getClusterId () { org.ovirt.engine.core.compat.Guid clusterId = getEntity ( org.ovirt.engine.core.common.businessentities.VM . class , VdcQueryType.GetVmByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( parentId ) , STRING_CONSTANT ) . getVdsGroupId () ; return clusterId ; }
@ org.junit.Test public void removeForNonExistentVds () { dao . remove ( new org.ovirt.engine.core.compat.Guid ( STRING_CONSTANT ) ) ; }
@ java.lang.Override protected boolean validate () { return ( ( ( ( networkNotAttachedToCluster () ) && ( vdsGroupExists () ) ) && ( changesAreClusterCompatible () ) ) && ( logicalNetworkExists () ) ) && ( validateAttachment () ) ; }
@ javax.ws.rs.GET @ org.jboss.resteasy.annotations.providers.jaxb.Formatted public org.ovirt.engine.api.model.Capabilities list ( ) ;
@ org.junit.Test public void testBeanValidations () { org.junit.Assert . assertTrue ( createCommand ( initializeMock ( NUMBER_CONSTANT ) ) . validateInputs () ) ; }
public boolean canCopyHostDevices ( org.ovirt.engine.core.compat.Guid srcId , org.ovirt.engine.core.common.businessentities.VmBase dstVm ) { return canCopyHostDevices ( getVmBase ( srcId ) , dstVm ) ; }
@ org.junit.Test public void validateDiskIsOvfStore ( ) throws java.lang.Exception { initializeCommand ( new org.ovirt.engine.core.common.businessentities.storage.DiskImage () ) ; initVmDiskImage ( false ) ; command . getImage () . setContentType ( DiskContentType.OVF_STORE ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_OVF_DISK_NOT_SUPPORTED ) ; }
@ java.lang.Override public java.lang.String renderNullSafe ( org.ovirt.engine.core.common.businessentities.network.Network network ) { return network . getName () ; }
public org.ovirt.engine.api.model.StorageDomain getStorageDomain () { return getEntity ( org.ovirt.engine.api.model.StorageDomain . class , VdcQueryType.GetStorageDomainById , new org.ovirt.engine.core.common.queries.IdQueryParameters ( storageDomainId ) , storageDomainId . toString () ) ; }
private void assertCanDoActionMessage ( org.ovirt.engine.core.common.errors.EngineMessage msg ) { org.junit.Assert . assertTrue ( STRING_CONSTANT , command . getReturnValue () . getCanDoActionMessages () . contains ( msg . name () ) ) ; }
@ java.lang.Override public org.ovirt.engine.api.model.Network addParents ( org.ovirt.engine.api.model.Network network ) { network . setCluster ( new org.ovirt.engine.core.common.businessentities.Cluster () ) ; network . getCluster () . setId ( clusterId ) ; return network ; }
public static boolean isSafeExpression ( java.lang.String expr ) { return org.ovirt.engine.core.searchbackend.SearchObjects.SAFE_SEARCH_EXPR . contains ( expr . toLowerCase () ) ; }
private void initListBoxEditors () { raidTypeEditor = new org.ovirt.engine.ui.common.widget.editor.ListModelListBoxEditor ( new org.ovirt.engine.ui.common.widget.renderer.EnumRenderer < org.ovirt.engine.core.common.businessentities.RaidType > () ) ; }
public void Frontend_QueryComplete () { ( queryCounter ) -- ; if ( ( queryCounter ) == NUMBER_CONSTANT ) { StopProgress () ; } }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VmPool get ( org.ovirt.engine.core.compat.Guid id ) { return get ( id , null , false ) ; }
protected static java.util.List < org.ovirt.engine.core.common.businessentities.VmPoolMap > getListOfVmsInPool ( org.ovirt.engine.core.compat.Guid poolId ) { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getVmPoolDao () . getVmPoolsMapByVmPoolId ( poolId ) ; }
@ java.lang.Override public org.ovirt.engine.core.utils.ISingleAsyncOperation createSingleAsyncOperation () { return new org.ovirt.engine.core.bll.storage.pool.DisconnectStoragePoolAsyncOperation ( getVdss () , getStoragePool () ) ; }
@ java.lang.Override public void init () { super . init () ; setIsHostTabVisible ( false ) ; setIsCustomPropertiesSheetVisible ( false ) ; }
@ org.junit.Test public void testGetOsNames ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( STRING_CONSTANT , OsRepositoryImpl.INSTANCE . getOsNames () . get ( NUMBER_CONSTANT ) ) ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.validator.UpgradeHostValidator validator = new org.ovirt.engine.core.bll.validator.UpgradeHostValidator ( org.ovirt.engine.core.bll.hostdeploy.UpgradeHostInternalCommand . getVds () ) ; return ( validate ( validator . hostExists () ) ) && ( validate ( validator . statusSupportedForHostUpgradeInternal () ) ) ; }
@ java.lang.Override public void onSuccess ( org.ovirt.engine.core.common.queries.VdcQueryReturnValue returnValue ) { java.lang.String signedTicket = returnValue . getReturnValue () ; invokeClientNative ( signedTicket ) ; }
public static boolean supportedInConfig ( org.ovirt.engine.core.common.config.ConfigValues feature , org.ovirt.engine.core.compat.Version version ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( feature , version . getValue () ) ; }
public org.ovirt.engine.core.dao.DiskDao getDiskDao () { return org.ovirt.engine.core.bll.VmCommand . getDbFacade () . getDiskDao () ; }
protected java.util.List < com.google.gwt.user.client.ui.Widget > resourceAllocationTemplateHiddenFields () { return java.util.Arrays . < com.google.gwt.user.client.ui.Widget > asList ( cpuPinningPanel , storageAllocationPanel , disksAllocationPanel ) ; }
private org.ovirt.engine.core.bll.AddQuotaCommand createCommand () { org.ovirt.engine.core.common.action.QuotaCRUDParameters param = new org.ovirt.engine.core.common.action.QuotaCRUDParameters ( mockGeneralStorageQuota () ) ; return new org.ovirt.engine.core.bll.AddQuotaCommand ( param , null ) ; }
public java.util.Map < java.lang.String , java.lang.String > getCustomPropertiesFor ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic ) { if ( hasCustomPropertiesFor ( nic ) ) { return customProperties . get ( getKey ( nic ) ) ; } else { return null ; } }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { javax.ws.rs.core.UriInfo uriInfo = setUpBasicUriExpectations () ; setUriInfo ( uriInfo ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT , false ) ; control . replay () ; verifyModel ( resource . get () , NUMBER_CONSTANT ) ; }
private void attachLabeledNetwork () { final org.ovirt.engine.core.common.action.AttachNetworkToClusterParameter attachNetworkToClusterParameter = getParameters () ; runInternalAction ( VdcActionType.PropagateLabeledNetworksToClusterHosts , new org.ovirt.engine.core.common.action.ManageNetworkClustersParameters ( new java.util.ArrayList ( java.util.Collections . singleton ( attachNetworkToClusterParameter . getNetworkCluster () ) ) ) ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > object ) { return object . getSecond () . getName () ; }
public void setname ( java.lang.String value ) { this . name = value ; }
protected boolean isSlave ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , java.lang.String masterName ) { return ( ( iface . getBondName () ) != null ) && ( iface . getBondName () . equals ( masterName ) ) ; }
@ java.lang.Override public int getValue () { return value ; }
@ java.lang.Override public org.ovirt.engine.core.common.utils.Pair < org.ovirt.engine.core.common.businessentities.VDS , java.util.List < org.ovirt.engine.core.common.businessentities.gluster.StorageDevice > > call ( ) throws java.lang.Exception { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.StorageDevice > storageDevices = getStorageDevicesFromServer ( server ) ; return new org.ovirt.engine.core.common.utils.Pair ( server , storageDevices ) ; }
private void mockMaxPciSlots () { org.mockito.Mockito . doReturn ( org.ovirt.engine.core.bll.AddVmFromTemplateCommandTest.MAX_PCI_SLOTS ) . when ( osRepository ) . getMaxPciDevices ( org.mockito.ArgumentMatchers . anyInt () , org.mockito.ArgumentMatchers . any () ) ; }
public java.util.List < org.ovirt.engine.core.common.businessentities.DisplayType > getDisplayTypes ( int osId , org.ovirt.engine.core.compat.Version version ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DisplayType > ( parseDisplayProtocols ( osId , version ) . keySet () ) ; }
@ org.junit.Test public void validateFailsOnNull () { cmd . getParameters () . setServiceType ( ServiceType.NFS ) ; cmd . getParameters () . setActionType ( GlusterConstants.MANAGE_GLUSTER_SERVICE_ACTION_TYPE_START ) ; prepareMocks () ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
protected void onMouseOut () { dragImage . setVisible ( false ) ; if ( ( parentPanel ) != null ) { parentPanel . onMouseOver () ; } }
private java.util.ArrayList < java.lang.String > splitPreserveAllTokens ( java.lang.String str ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( str ) ) { return null ; } return new java.util.ArrayList ( java.util.Arrays . asList ( org.apache.commons.lang.StringUtils . splitPreserveAllTokens ( str , org.ovirt.engine.core.dao.SEPARATOR ) ) ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { setAllowClusterWithVirtGlusterEnabled ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; }
public java.lang.String getNetworkName () { return getNetwork () . getName () ; }
@ java.lang.Override public java.lang.String render ( java.lang.Object object ) { return object == null ? STRING_CONSTANT : ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( object ) ) . getName () ; }
java.util.Set < org.ovirt.engine.core.compat.Guid > getNetworksByVfsConfigId ( org.ovirt.engine.core.compat.Guid vfsConfigId ) { return new java.util.HashSet ( getCallsHandler () . executeReadList ( STRING_CONSTANT , createGuidMapper () , createVfsConfigIdParameter ( vfsConfigId ) ) ) ; }
@ java.lang.Override protected void endWithFailure () { auditLog ( this , AuditLogType.ADD_DISK_INTERNAL_FAILURE ) ; org.ovirt.engine.core.bll.ImportVmFromExternalProviderCommand . endActionOnDisks () ; removeVm () ; org.ovirt.engine.core.bll.ImportVmFromExternalProviderCommand . setSucceeded ( true ) ; }
public void setEnumTitle ( java.lang.Enum < > enumObj ) { setTitle ( org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . get ( enumObj ) ) ; }
public void setstorage_domain_over_commit_percent ( int value ) { _storage_domain_over_commit_percent = value ; }
private void setCidr ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > cidr ) { this . cidr = cidr ; }
@ java.lang.Override public java.util.ArrayList < org.ovirt.engine.core.compat.Guid > getTaskIdList () { return super . getTaskIdList () ; }
@ org.junit.Test public void replace_callReplaceTwoOccurrences () { runAndCheck ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; }
@ java.lang.Override public boolean validate () { org.ovirt.engine.core.bll.validator.HostValidator hostValidator = new org.ovirt.engine.core.bll.validator.HostValidator ( getVds () ) ; return ( validate ( hostValidator . hostExists () ) ) && ( validate ( hostValidator . validateStatusForEnrollCertificate () ) ) ; }
public void setname ( java.lang.String value ) { if ( ! ( org.ovirt.engine.core.compat.StringHelper . EqOp ( this . name , value ) ) ) { this . name = value ; } }
@ java.lang.Override protected void updateDataProvider ( java.util.List < org.ovirt.engine.core.common.businessentities.Bookmark > items ) { super . updateDataProvider ( items ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > getClusters () { java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > list = new java.util.ArrayList <> () ; list . add ( createCluster ( NUMBER_CONSTANT , Version.v3_4 ) ) ; list . add ( createCluster ( NUMBER_CONSTANT , Version.v3_5 ) ) ; return list ; }
public org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType queryType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase queryParams ) { queryParams . setFiltered ( isFiltered () ) ; return backend . runQuery ( queryType , sessionize ( queryParams ) ) ; }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createNic ( java.lang.String name , java.lang.String bondName , org.ovirt.engine.core.common.businessentities.network.NetworkBootProtocol bootProtocol , java.lang.String network ) { return createVdsInterface ( name , false , bondName , null , bootProtocol , network , null , null ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VDSGroup object ) { return object . getName () ; }
@ org.junit.Test public void canDoActionFailsWithDuplicateBricks () { cmd = org.mockito.Mockito . spy ( createTestCommand ( volumeId2 , getBricks ( volumeId2 , NUMBER_CONSTANT , true ) , NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
protected java.lang.String getJsonDiskDescription ( org.ovirt.engine.core.common.businessentities.storage.Disk disk ) { try { return org.ovirt.engine.core.bll.MetadataDiskDescriptionHandler . getInstance () . getJsonDiskDescription ( disk ) ; } catch ( java.io.IOException e ) { log . error ( STRING_CONSTANT , e ) ; return org.apache.commons.lang.StringUtils.EMPTY ; } }
private static boolean glusterModeSupported () { java.lang.Integer appMode = org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.ApplicationMode ) ; return ( appMode & ( ApplicationMode.GlusterOnly . getValue () ) ) > NUMBER_CONSTANT ; }
private void setUpGetEntityWithNoCertificateInfoExpectations ( ) throws java.lang.Exception { setUpGetEntityWithNoCertificateInfoExpectations ( NUMBER_CONSTANT , false , getEntity ( NUMBER_CONSTANT ) ) ; }
void initListBoxEditors () { vncKeyboardLayoutEditor = new org.ovirt.engine.ui.common.widget.editor.ListModelListBoxEditor ( new org.ovirt.engine.ui.common.widget.editor.VncKeyMapRenderer ( messages ) ) ; }
@ java.lang.Override protected void executeCommand () { org.ovirt.engine.core.common.businessentities.UserProfile profile = org.ovirt.engine.core.bll.UpdateUserProfileCommand . getUserProfile () ; executeCommandUpdateSSHPublicKey ( profile ) ; }
private void setName ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > name ) { this . name = name ; }
@ org.junit.experimental.theories.Theory public void testStorageDomainForMemoryIsValidOnlyForDataTypes ( org.ovirt.engine.core.common.businessentities.StorageDomainType storageDomainType ) { storageDomain . setStorageDomainType ( storageDomainType ) ; org.junit.Assert . assertEquals ( filter . test ( storageDomain ) , storageDomainType . isDataDomain () ) ; }
protected void addVmInterfaceStatisticsToList ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface > list ) { if ( list . isEmpty () ) { return; } vmInterfaceStatisticsToSave . add ( list ) ; }
public boolean findProxyHost () { return findProxyHost ( skippedProxyHostId ) ; }
protected org.ovirt.engine.ui.common.widget.table.SimpleActionTable < T > createActionTable () { return new org.ovirt.engine.ui.common.widget.table.SimpleActionTable < T > ( modelProvider , getTableHeaderlessResources () , getTableResources () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getEventBus () , org.ovirt.engine.ui.webadmin.gin.ClientGinjectorProvider . getClientStorage () ) ; }
private org.ovirt.engine.ui.uicommonweb.models.storage.IStorageModel PrepareFcpStorageForEdit ( org.ovirt.engine.core.common.businessentities.StorageDomain storage ) { org.ovirt.engine.ui.uicommonweb.models.storage.FcpStorageModel model = new org.ovirt.engine.ui.uicommonweb.models.storage.FcpStorageModel () ; model . setRole ( storage . getstorage_domain_type () ) ; PrepareSanStorageForEdit ( model ) ; return model ; }
public void onSave () { if ( ! ( validate () ) ) { return; } flush () ; executeSave () ; }
private org.ovirt.engine.core.common.businessentities.IscsiBond getIscsiBondWithNoNetworks () { org.ovirt.engine.core.common.businessentities.IscsiBond iscsiBond = new org.ovirt.engine.core.common.businessentities.IscsiBond () ; iscsiBond . setId ( org.ovirt.engine.api.restapi.resource.BackendIscsiBondNetworkResourceTest.ISCSI_BOND_ID ) ; return iscsiBond ; }
@ java.lang.Override protected org.ovirt.engine.api.model.VM getFromDataDomain () { return performGet ( VdcQueryType.GetVmByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
@ java.lang.Override public java.lang.String mapRow ( java.sql.ResultSet rs , int rowNum ) throws java.sql.SQLException { java.lang.String content = rs . getString ( NUMBER_CONSTANT ) ; return content ; }
public void updateCommandStatus ( org.ovirt.engine.core.compat.Guid commandId , org.ovirt.engine.core.compat.CommandStatus status ) ;
private static org.ovirt.engine.core.common.businessentities.StorageDomainStatic getStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomainStatic storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomainStatic () ; storageDomain . setStorage ( org.ovirt.engine.core.compat.Guid . newGuid () . toString () ) ; storageDomain . setStorageDomainType ( StorageDomainType.Data ) ; storageDomain . setStorageFormat ( StorageFormatType.V3 ) ; return storageDomain ; }
void addPlugin ( org.ovirt.engine.ui.webadmin.plugin.Plugin plugin ) { plugins . put ( plugin . getName () , plugin ) ; }
@ java.lang.Override public void rollbackQuota () { org.ovirt.engine.core.bll.CommonVmPoolWithVmsCommand . getQuotaManager () . rollbackQuota ( org.ovirt.engine.core.bll.CommonVmPoolWithVmsCommand . getStoragePool () , org.ovirt.engine.core.bll.CommonVmPoolWithVmsCommand . getQuotaManager () . getQuotaListFromParameters ( getStorageQuotaListParameters () ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.VMStatus getRawValue ( org.ovirt.engine.core.common.businessentities.VM object ) { return object . getStatus () ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { return object . getName () ; }
@ java.lang.Override protected boolean validate () { return ( super . validate () ) && ( validate ( getQosValidator ( org.ovirt.engine.core.bll.qos.AddQosCommand . getQos () ) . nameNotTakenInDc () ) ) ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ( vds . getstatus () ) == ( org.ovirt.engine.core.common.businessentities.VDSStatus.Up ) ) && ( vds . getStoragePoolId () . equals ( _vds . getStoragePoolId () ) ) ; }
@ java.lang.Override protected org.ovirt.engine.core.compat.Guid getClusterId () { return getEntity () . getVdsGroupId () ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.Cluster > returnValue ) { context.clusterFoundByName = org.ovirt.engine.ui.uicommonweb.Linq . firstOrNull ( returnValue ) ; prepare2 () ; }
private void raiseQueryStartedEvent ( final org.ovirt.engine.core.common.queries.VdcQueryType queryType , final java.lang.Object context ) { raiseQueryEvent ( getQueryStartedEvent () , queryType , context ) ; }
@ org.junit.Before public void setUp () { vmBuilder . id ( VM1_GUID ) . cluster ( clusterBuilder . reset () . persist () ) . persist () ; }
@ java.lang.Override public void onSuccess ( java.lang.Object returnValue ) { java.util.Collection < org.ovirt.engine.core.common.businessentities.network.HostNetworkQos > qoss = ( ( java.util.Collection < org.ovirt.engine.core.common.businessentities.network.HostNetworkQos > ) ( returnValue ) ) ; qosById = org.ovirt.engine.core.common.businessentities.Entities . businessEntitiesById ( qoss ) ; queryInterfaces () ; }
public static void getGlusterVolumeOptionInfoList ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid clusterId ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetGlusterVolumeOptionsInfo , new org.ovirt.engine.core.common.queries.gluster.GlusterParameters ( clusterId ) , aQuery ) ; }
@ org.ovirt.engine.ui.common.widget.table.cell.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml doubleImageContainer ( com.google.gwt.safehtml.shared.SafeHtml imageHtml , com.google.gwt.safehtml.shared.SafeHtml decoratorHtml , int left , int top , java.lang.String id ) ;
public org.ovirt.engine.core.common.businessentities.VmTemplateStatus getStatus () { return status ; }
@ org.junit.Test public void checkCinderStorageDomainContainDisks () { setCinderStorageDomainStatus ( StorageDomainStatus.Inactive ) ; storagePoolExists () ; cinderStorageDomainContainsDisks () ; masterDomainIsUp () ; canDetachDomain () ; org.junit.Assert . assertFalse ( cmd . canDetachDomain ( false ) ) ; }
private java.util.List < org.ovirt.engine.core.compat.Guid > getChildCommandIds ( org.ovirt.engine.core.compat.Guid cmdId ) { return new java.util.ArrayList ( commandsRepository . getChildCommandIds ( cmdId ) ) ; }
private void mockDaos () { mockVmDao () ; mockDiskImageDao () ; mockValidators () ; }
public static boolean isActiveStorageDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { return ( storageDomain . getStatus () ) == ( org.ovirt.engine.core.common.businessentities.StorageDomainStatus.Active ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { compensationContext . snapshotEntityStatus ( vm ) ; org.ovirt.engine.core.bll.VmHandler . LockVm ( vm . getId () ) ; compensationContext . stateChanged () ; return null ; }
public static org.ovirt.engine.core.bll.adbroker.LdapBroker getInstance ( java.lang.String domain ) { return org.ovirt.engine.core.bll.adbroker.LdapFactory.ldapInstance ; }
public static org.ovirt.engine.core.common.businessentities.DiskInterface forValue ( java.lang.String name ) { return org.ovirt.engine.core.common.businessentities.DiskInterface.mappings . get ( name ) ; }
@ java.lang.Override public void render ( com.google.gwt.cell.client.Cell.Context context , java.lang.Boolean value , com.google.gwt.safehtml.shared.SafeHtmlBuilder sb , java.lang.String id ) { super . render ( context , value , sb , id ) ; }
protected org.ovirt.engine.api.model.Disk getDisk () { return performGet ( VdcQueryType.GetDiskByDiskId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( guid ) ) ; }
private void updateStepProgress ( org.ovirt.engine.core.compat.Guid stepId , java.lang.Integer progress ) { dao . updateStepProgress ( stepId , progress ) ; }
public static < T , W extends org.ovirt.engine.ui.common.widget.AbstractValidatedWidgetWithLabel < T , > > org.ovirt.engine.ui.common.widget.editor.WidgetWithLabelEditor < T , W > of ( com.google.gwt.editor.client.LeafValueEditor < T > subEditor , W widgetWithLabel ) { return new org.ovirt.engine.ui.common.widget.editor.WidgetWithLabelEditor ( subEditor , widgetWithLabel ) ; }
@ java.lang.Override public void setUp ( ) throws java.lang.Exception { super . setUp () ; dao = dbFacade . getPermissionDao () ; new_permissions = new org.ovirt.engine.core.common.businessentities.permissions ( org.ovirt.engine.core.dao.PermissionDAOTest.AD_ELEMENT_ID , org.ovirt.engine.core.dao.PermissionDAOTest.ROLE_ID , org.ovirt.engine.core.dao.PermissionDAOTest.STORAGE_POOL_ID , org.ovirt.engine.core.common.VdcObjectType.StoragePool ) ; }
protected final boolean failCanDoAction ( org.ovirt.engine.core.common.errors.EngineMessage message , java.lang.String . . . variableReplacements ) { addCanDoActionMessage ( message ) ; for ( java.lang.String variableReplacement : variableReplacements ) { addCanDoActionMessage ( variableReplacement ) ; } return false ; }
@ java.lang.Override public boolean syncDomainInfo ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid vdsId ) { org.ovirt.engine.core.common.action.SyncLunsInfoForBlockStorageDomainParameters parameters = new org.ovirt.engine.core.common.action.SyncLunsInfoForBlockStorageDomainParameters ( storageDomain . getId () , vdsId ) ; return org.ovirt.engine.core.bll.Backend . getInstance () . runInternalAction ( VdcActionType.SyncLunsInfoForBlockStorageDomain , parameters ) . getSucceeded () ; }
@ org.ovirt.engine.ui.common.widget.table.cell.Template ( value = STRING_CONSTANT ) com.google.gwt.safehtml.shared.SafeHtml doubleImageContainer ( com.google.gwt.safehtml.shared.SafeHtml imageHtml , com.google.gwt.safehtml.shared.SafeHtml decoratorHtml , int left , int top , java.lang.String id , java.lang.String status ) ;
private static org.ovirt.engine.core.common.businessentities.StoragePool createBasicPool () { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool () ; pool . setId ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; pool . setName ( STRING_CONSTANT ) ; return pool ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.Network network ) { return network . getId () . equals ( nc . getnetwork_id () ) ; }
@ org.junit.Before @ org.junit.After public void clearSession () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer . clean () ; }
public java.util.Collection < java.lang.String > getGroupNames () { return new java.util.ArrayList < java.lang.String > ( groupNames ) ; }
public void setMTUOverrideSupported () { this . mtuOverrideSupported = true ; updateMtuSelectorsChangeability () ; }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.StorageDomain a ) { return ( ( a . getstatus () ) == domainStatus ) && ( ! ( a . getId () . equals ( getStorageDomain () . getId () ) ) ) ; }
private org.ovirt.engine.core.dal.dbbroker.DbFacade getDbFacadeInstance () { return org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > () ; } return source ; }
@ java.lang.Override protected void configure () { super . configure () ; bind ( org.ovirt.engine.ui.common.utils.ConsoleUtils . class ) . in ( com.google.inject.Singleton . class ) ; bind ( org.ovirt.engine.ui.common.utils.ConsoleManager . class ) . in ( com.google.inject.Singleton . class ) ; }
@ java.lang.Override protected void updateDataProvider ( java.util.List < org.ovirt.engine.ui.uicommonweb.models.tags.TagModel > items ) { if ( ! ( items . isEmpty () ) ) { super . updateDataProvider ( items ) ; } }
protected boolean uniqueInterfaceName ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VmNic > interfaces ) { return validate ( vmHandler . isNotDuplicateInterfaceName ( interfaces , getInterfaceName () ) ) ; }
public void setDefaultDisplayType ( org.ovirt.engine.core.common.businessentities.DisplayType value ) { vmStatic . setDefaultDisplayType ( value ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _resultError = ( ( java.lang.Boolean ) ( _parser . cliEnvironmentGet ( BaseEnv.ERROR ) ) ) ; return true ; }
@ java.lang.Override public void initTable () { org.ovirt.engine.ui.common.widget.uicommon.vm.VmSnapshotListModelTable . getTable () . enableColumnResizing () ; org.ovirt.engine.ui.common.widget.uicommon.vm.VmSnapshotListModelTable . getTable () . setMultiSelectionDisabled ( true ) ; initActionButtons () ; addModelListeners () ; }
protected org.ovirt.engine.core.compat.Guid asGuid ( byte [] guid ) { try { return new org.ovirt.engine.core.compat.Guid ( guid ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new org.ovirt.engine.api.restapi.utils.MalformedIdException ( e ) ; } }
@ org.junit.Test public void testGetAllForStorageDomainWithInvalidDomain () { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . getAllForStorageDomain ( org.ovirt.engine.core.compat.Guid . newGuid () ) ; org.junit.Assert . assertTrue ( result . isEmpty () ) ; }
@ com.google.gwt.i18n.client.Messages.DefaultMessage ( value = STRING_CONSTANT ) java.lang.String hostDataCenter ( java.lang.String name ) ;
public java.lang.Boolean getIsReadOnly () { return ( isReadOnly ) == null ? java.lang.Boolean.FALSE : isReadOnly ; }
protected void removeVmNetworkInterfaces () { new org.ovirt.engine.core.bll.network.VmInterfaceManager ( org.ovirt.engine.core.bll.ImportVmCommand . getMacPool () ) . removeAll ( org.ovirt.engine.core.bll.ImportVmCommand . getVmId () ) ; }
public static boolean getDefaultWipeAfterDeleteFlag ( final org.ovirt.engine.core.common.businessentities.StorageType storageType ) { if ( storageType . isBlockDomain () ) { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.SANWipeAfterDelete ) ; } else { return org.ovirt.engine.core.bll.utils.WipeAfterDeleteUtils.WIPE_AFTER_DELETE_FILE_DOMAIN ; } }
@ org.junit.Test public void checkIPAdress () { java.util.Set < javax.validation.ConstraintViolation < org.ovirt.engine.core.common.utils.IPAddressPatternTest.IPAdress > > validate = validator . validate ( new org.ovirt.engine.core.common.utils.IPAddressPatternTest.IPAdress ( address ) ) ; org.junit.Assert . assertEquals ( expectedResult , validate . isEmpty () ) ; }
@ java.lang.Override protected boolean canDoAction () { return validate ( networkNotAttachedToCluster ( org.ovirt.engine.core.bll.network.dc.RemoveNetworkCommand . getNetwork () ) ) ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StoragePool object ) { return object . getName () ; }
private org.springframework.jdbc.core.namedparam.MapSqlParameterSource createParameterSourceForUpdate ( org.ovirt.engine.core.common.businessentities.VmDevice vmDevice ) { return getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , vmDevice . getVmId () ) . addValue ( STRING_CONSTANT , vmDevice . getDeviceId () ) ; }
@ org.junit.Test public void getGlusterHookContent () { java.lang.String content = dao . getGlusterHookContent ( FixturesTool.HOOK_ID ) ; org.junit.Assert . assertNotNull ( content ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.gluster.GlusterHooksDaoTest.CONTENT , content ) ; }
public void setTooltipText ( java.lang.String status ) { tooltip . setText ( status ) ; }
public org.ovirt.vdsm.jsonrpc.client.reactors.ReactorClient createClient ( java.lang.String hostname , int port ) throws org.ovirt.vdsm.jsonrpc.client.ClientConnectionException { return createClient ( this , this . selector , hostname , port ) ; }
public java.lang.String getNetworkName () { return getInterface () . getNetworkName () ; }
public org.apache.http.HttpResponse send ( org.apache.http.client.methods.HttpUriRequest request ) { try { injectHeaders ( request ) ; return client . execute ( request ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } }
@ java.lang.Override public org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeSnapshotSchedule getByVolumeId ( org.ovirt.engine.core.compat.Guid volumeId ) { return getCallsHandler () . executeRead ( STRING_CONSTANT , org.ovirt.engine.core.dao.gluster.GlusterVolumeSnapshotScheduleDaoImpl.snapshotScheduleRowMapper , getCustomMapSqlParameterSource () . addValue ( STRING_CONSTANT , volumeId ) ) ; }
protected void processVmPoolOnStopVm () { org.ovirt.engine.core.utils.threadpool.ThreadPoolUtil . execute ( new java.lang.Runnable () { @ java.lang.Override public void run () { org.ovirt.engine.core.bll.VmPoolHandler . processVmPoolOnStopVm ( getVm () . getId () , org.ovirt.engine.core.bll.job.ExecutionHandler . createDefaultContexForTasks ( getExecutionContext () ) ) ; } } ) ; }
public java.lang.Boolean call ( ) throws java.lang.Exception { _setVdsmId ( ( ( java.lang.String ) ( _parser . cliEnvironmentGet ( VdsmEnv.VDSM_ID ) ) ) ) ; return true ; }
protected boolean isAllowClusterWithVirtGluster () { java.lang.Boolean allowVirGluster = org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.AllowClusterWithVirtGlusterEnabled ) ; return allowVirGluster ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.businessentities.AuditLog object ) { return org.ovirt.engine.ui.webadmin.widget.footer.AlertsEventsFooterView.constants . dismissEvent () ; }
@ org.junit.Test public void canDoActionFails () { cmd = org.mockito.Mockito . spy ( createTestCommand ( volumeId1 , getBricks ( volumeId1 , NUMBER_CONSTANT ) , NUMBER_CONSTANT , NUMBER_CONSTANT , false ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . canDoAction () ) ; }
@ java.lang.Override @ org.ovirt.engine.api.restapi.resource.SingleEntityResource public org.ovirt.engine.api.resource.ClusterResource getClusterSubResource ( java.lang.String id ) { return inject ( new org.ovirt.engine.api.restapi.resource.BackendClusterResource ( id , this ) ) ; }
@ org.junit.Test public void testQueryWithoutFilter ( ) throws java.lang.Exception { resource . setUriInfo ( setUpBasicUriExpectations () ) ; setUpGetEntityExpectations ( false ) ; resource . get () ; }
private org.ovirt.engine.core.common.businessentities.network.Network getExternalNetwork ( org.ovirt.engine.core.common.businessentities.network.ProviderNetwork providerNetwork ) { return execute ( getClient () . networks () . show ( providerNetwork . getExternalId () ) ) ; }
protected static boolean canAttachNonPrestartedVmToUser ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < java.lang.String > messages ) { return org.ovirt.engine.core.bll.VmPoolCommandBase . isVmFree ( vmId , messages ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.async_tasks > getAll () { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.AsyncTaskDAODbFacadeImpl.AsyncTaskRowMapper.instance , parameterSource ) ; }
@ java.lang.Override public java.lang.String getName () { return this . vmStatic . getName () ; }
private void setIpVersion ( org.ovirt.engine.ui.uicommonweb.models.ListModel < org.ovirt.engine.core.common.businessentities.network.ExternalSubnet.IpVersion > ipVersion ) { this . ipVersion = ipVersion ; }
protected R addLinks ( R model , java.lang.Class < ? extends org.ovirt.engine.api.model.BaseResource > suggestedParent , boolean doNotLinkSubCollections ) { return doNotLinkSubCollections ? org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( addParents ( model ) , suggestedParent ) : addLinks ( model , suggestedParent ) ; }
public int getStatus () { return status ; }
@ com.google.gwt.user.server.rpc.NoXsrfProtect public org.ovirt.engine.core.common.action.VdcReturnValueBase logOff ( ) ;
public org.ovirt.engine.core.vdsbroker.monitoring.VmStatsRefresher create ( org.ovirt.engine.core.vdsbroker.VdsManager vdsManager ) { return org.ovirt.engine.core.di.Injector . injectMembers ( getRefresherForVds ( vdsManager ) ) ; }
@ java.lang.Override protected boolean validate () { org.ovirt.engine.core.bll.provider.storage.LibvirtSecretValidator libvirtSecretValidator = new org.ovirt.engine.core.bll.provider.storage.LibvirtSecretValidator ( getParameters () . getLibvirtSecret () ) ; return validate ( libvirtSecretValidator . uuidExist () ) ; }
@ java.lang.Override protected void finalize () { close () ; }
public java.lang.String getContentType () { return getContentType ( null ) ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.Disk > () ; }
@ org.junit.Test public void testGet ( ) throws java.lang.Exception { setUriInfo ( setUpBasicUriExpectations () ) ; setUpEntityQueryExpectations ( NUMBER_CONSTANT ) ; org.ovirt.engine.api.model.Watchdog watchdog = resource . get () ; verifyModel ( watchdog ) ; }
@ java.lang.Override public com.google.gwt.safehtml.shared.SafeHtml getTooltip ( org.ovirt.engine.core.common.businessentities.storage.Disk object ) { org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage = ( ( org.ovirt.engine.core.common.businessentities.storage.DiskImage ) ( object ) ) ; return com.google.gwt.safehtml.shared.SafeHtmlUtils . fromString ( java.lang.String . join ( STRING_CONSTANT , diskImage . getStoragesNames () ) ) ; }
void vdsNotResponding ( org.ovirt.engine.core.common.businessentities.VDS vds , long lastUpdate ) ;
@ org.junit.Test public void testIsInternalExecutionTrue () { org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery query = new org.ovirt.engine.core.bll.QueriesCommandBaseTest.ThereIsNoSuchQuery () ; query . setInternalExecution ( true ) ; org.junit.Assert . assertTrue ( STRING_CONSTANT , query . isInternalExecution () ) ; }
@ java.lang.Override protected void findUsers ( java.lang.String searchString , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetAllDbUsers , getParameters () , query ) ; }
private void markHostDevicesAsUsed () { if ( needsHostDevices ) { hostDeviceManager . allocateVmHostDevices ( org.ovirt.engine.core.bll.RunVmCommand . getVm () ) ; } }
public boolean getClusterDefaultCountThreadsAsCores () { return false ; }
public java.lang.Boolean isConsoleAddressPartiallyOverridden () { return ( consoleAddressPartiallyOverridden ) == null ? java.lang.Boolean.FALSE : consoleAddressPartiallyOverridden ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.DbUser > getAll () { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource () ; return getCallsHandler () . executeReadList ( STRING_CONSTANT , org.ovirt.engine.core.dao.DbUserDAODbFacadeImpl.DbUserRowMapper.instance , parameterSource ) ; }
@ java.lang.Override public void execute ( org.ovirt.engine.ui.uicommonweb.models.userportal.UserPortalItemModel model ) { java.lang.String message = consoleManager . connectToConsole ( model ) ; if ( message != null ) { errorPopupManager . show ( message ) ; } }
@ java.lang.Override public boolean eval ( org.ovirt.engine.core.common.businessentities.network.Network n ) { return n . getname () . equals ( bond . getName () ) ; }
public void init () { startProgress () ; setTitle ( constants . importVirtualMachinesTitle () ) ; setHelpTag ( HelpTag.import_virtual_machine ) ; setHashName ( STRING_CONSTANT ) ; initDataCenters () ; }
@ org.junit.jupiter.api.Test @ org.ovirt.engine.core.utils.MockedConfig ( value = STRING_CONSTANT ) public void testConfigHostPolicy () { assertSerialNumber ( null ) ; }
private java.lang.String buildHashMapKey ( java.util.Map.Entry < java.lang.String , java.lang.String > entry ) { return ( entry . getKey () ) + ( entry . getValue () ) ; }
private void showContextMenu ( org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NetworkItemPanel panel , int clientX , int clientY ) { if ( ! ( menu . isEmpty () ) ) { org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NetworkItemPanel.menuPopup . setWidget ( menu ) ; org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NetworkItemPanel.menuPopup . setPopupPosition ( clientX , clientY ) ; org.ovirt.engine.ui.webadmin.section.main.view.popup.host.panels.NetworkItemPanel.menuPopup . show () ; } }
public static org.ovirt.engine.core.utils.crypt.TicketUtils getInstanceForEngineStoreSigning ( ) throws java.io.IOException , java.security.KeyStoreException , java.security.NoSuchAlgorithmException , java.security.UnrecoverableKeyException , java.security.cert.CertificateException { return new org.ovirt.engine.core.utils.crypt.TicketUtils ( org.ovirt.engine.core.utils.crypt.EngineEncryptionUtils . getPrivateKeyEntry () . getPrivateKey () , org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.WebSocketProxyTicketValiditySeconds ) ) ; }
protected void setLock ( org.ovirt.engine.core.utils.lock.EngineLock lock ) { context . withLock ( lock ) ; }
protected javax.ws.rs.core.Response actionStatus ( org.ovirt.engine.api.model.CreationStatus status , org.ovirt.engine.api.model.Action action , java.lang.Object result ) { setActionItem ( action , result ) ; action . setStatus ( status . value () ) ; return javax.ws.rs.core.Response . ok () . entity ( action ) . build () ; }
@ java.lang.Override public void setSpiceProxyEnabled ( boolean enabled , java.lang.String reason ) { enableSpiceProxy . setEnabled ( enabled ) ; enableSpiceProxy . setTitle ( reason ) ; }
@ org.junit.Test public void diskImagesAlreadyExistBothDoesntExist () { org.mockito.Mockito . doReturn ( null ) . when ( validator ) . getExistingDisk ( org.mockito.Matchers . any ( org.ovirt.engine.core.compat.Guid . class ) ) ; org.junit.Assert . assertEquals ( ValidationResult.VALID , validator . diskImagesAlreadyExist () ) ; }
@ javax.ws.rs.Path ( value = STRING_CONSTANT + STRING_CONSTANT ) org.ovirt.engine.api.resource.ActionResource getActionSubresource ( @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String action , @ javax.ws.rs.PathParam ( value = STRING_CONSTANT ) java.lang.String oid ) ;
@ org.junit.Test public void getAllExistingVariables () { for ( org.ovirt.engine.core.common.businessentities.DwhHistoryTimekeepingVariable var : org.ovirt.engine.core.common.businessentities.DwhHistoryTimekeepingVariable . values () ) { if ( var != ( org.ovirt.engine.core.common.businessentities.DwhHistoryTimekeepingVariable.UNDEFINED ) ) { org.junit.Assert . assertNotNull ( dao . get ( var ) ) ; } } }
@ java.lang.Override protected org.ovirt.engine.ui.webadmin.widget.storage.TemplatesTree < org.ovirt.engine.ui.uicommonweb.models.storage.StorageTemplateListModel > getTree () { return new org.ovirt.engine.ui.webadmin.widget.storage.TemplatesTree () ; }
@ java.lang.Override public void onSuccess ( java.lang.Integer returnValue ) { cachedMaxPriority = returnValue ; updatePriority ( model ) ; }
@ org.junit.Test public void validateFailsOnNull () { cmd = org.mockito.Mockito . spy ( createTestCommand ( null ) ) ; prepareMocks ( cmd ) ; org.junit.Assert . assertFalse ( cmd . validate () ) ; }
public java.lang.String getPassword () { return ( ( java.lang.String ) ( getData ( org.ovirt.engine.core.bll.session.SessionDataContainer.PASSWORD_PARAMETER_NAME ) ) ) ; }
protected java.lang.String getVolumeId () { return getParent () . getParent () . getId () ; }
public void init () { startProgress ( null ) ; setTitle ( constants . importVirtualMachinesTitle () ) ; setHelpTag ( HelpTag.import_virtual_machine ) ; setHashName ( STRING_CONSTANT ) ; initDataCenters () ; }
@ org.junit.Before public void prepareCommand () { params = new org.ovirt.engine.core.common.action.StorageServerConnectionParametersBase () ; command = new org.ovirt.engine.core.bll.storage.connection.ConnectStorageToVdsCommand ( params , null ) ; }
private void logFailureMessage ( java.lang.RuntimeException ex ) { org.ovirt.engine.core.vdsbroker.VdsManager.log . warnFormat ( STRING_CONSTANT , _vds . getId () , _vds . getName () , ex ) ; }
private java.lang.Integer calcMaxVCpu () { return org.ovirt.engine.core.common.utils.VmCpuCountHelper . calcMaxVCpu ( vm , vm . getClusterCompatibilityVersion () ) ; }
protected org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType determineSnapshotType () { return org.ovirt.engine.core.bll.CreateAllSnapshotsFromVmCommand . isInternalExecution () ? getParameters () . getSnapshotType () : org.ovirt.engine.core.common.businessentities.Snapshot.SnapshotType.REGULAR ; }
public org.ovirt.engine.core.common.businessentities.VM getVm () { if ( ( vm ) == null ) { vm = new org.ovirt.engine.core.common.businessentities.VM () ; vm . setStaticData ( _vmStatic ) ; } return vm ; }
private void setMinSupportedVersionForFencingPolicy ( org.ovirt.engine.core.bll.pm.FenceProxyLocator locator , org.ovirt.engine.core.compat.Version version ) { org.mockito.Mockito . when ( locator . getMinSupportedVersionForFencingPolicy () ) . thenReturn ( version ) ; }
@ java.lang.Override public java.lang.String render ( E object ) { return org.ovirt.engine.ui.uicompat.EnumTranslator . getInstance () . get ( object ) ; }
@ java.lang.Override public java.lang.Void call () { op . run () ; updateInterestedOps () ; selector . wakeup () ; return null ; }
@ org.junit.Test public void testValidModifiedBondsWhenAllOk ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.Bond bond = new org.ovirt.engine.core.common.businessentities.network.Bond ( STRING_CONSTANT ) ; bond . setSlaves ( java.util.Arrays . asList ( STRING_CONSTANT , STRING_CONSTANT ) ) ; doTestValidModifiedBonds ( bond , ValidationResult.VALID , ValidationResult.VALID , ValidationResult.VALID ) ; }
protected org.ovirt.engine.core.common.businessentities.StorageDomain electNewMaster ( boolean duringReconstruct ) { return electNewMaster ( duringReconstruct , false , false ) ; }
@ org.junit.Test public void testRemoveIfUnusedWithUnused () { dao . removeIfUnused ( org.ovirt.engine.core.dao.VmIconDaoTest.UNUSED_ICON_ID ) ; final org.ovirt.engine.core.common.businessentities.VmIcon nothing = dao . get ( org.ovirt.engine.core.dao.VmIconDaoTest.UNUSED_ICON_ID ) ; org.junit.Assert . assertNull ( nothing ) ; }
private void setButtonsEnabled ( V widget , boolean enabled ) { getEntry ( widget ) . setButtonsEnabled ( enabled ) ; }
public void removeAllCommandsInHierarchy ( final org.ovirt.engine.core.compat.Guid commandId ) { for ( org.ovirt.engine.core.compat.Guid childCmdId : new java.util.ArrayList ( getChildCommandIds ( commandId ) ) ) { removeAllCommandsInHierarchy ( childCmdId ) ; } removeCommand ( commandId ) ; }
@ org.junit.jupiter.api.BeforeEach public void setUp () { this . macPoolValidator = createMacPoolValidator ( macPool ) ; }
public int getRetryTimeOut () { return this . retryTimeOut ; }
public void getTemplateListByDataCenter ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid dataCenterId ) { aQuery.converterCallback = new org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider.TemplateConverter () ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetVmTemplatesByStoragePoolId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( dataCenterId ) , aQuery ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String version = ( ( java.lang.String ) ( result ) ) ; getView () . setVersion ( version ) ; }
@ java.lang.Override protected void setUpEntityExpectations ( org.ovirt.engine.core.common.businessentities.network.NetworkAttachment entity ) { org.mockito.Mockito . when ( entity . getNicId () ) . thenReturn ( org.ovirt.engine.api.restapi.resource.BackendHostNicNetworkAttachmentResourceTest.HOST_NIC_ID ) ; }
private java.lang.String getJsonDiskDescription () { try { return org.ovirt.engine.core.bll.MetadataDiskDescriptionHandler . getInstance () . getJsonDiskDescription ( org.ovirt.engine.core.bll.AddImageFromScratchCommand . getParameters () . getDiskInfo () ) ; } catch ( java.io.IOException e ) { log . error ( STRING_CONSTANT , e ) ; return org.apache.commons.lang.StringUtils.EMPTY ; } }
private void mockNullVm () { org.mockito.Mockito . when ( vmDao . get ( command . getParameters () . getVmId () ) ) . thenReturn ( null ) ; createVirtIODisk () ; }
private org.ovirt.engine.core.common.businessentities.Snapshot getDstSnapshot () { if ( ( cachedSnapshot ) == null ) { cachedSnapshot = org.ovirt.engine.core.bll.TryBackToAllSnapshotsOfVmCommand . getSnapshotDao () . get ( org.ovirt.engine.core.bll.TryBackToAllSnapshotsOfVmCommand . getParameters () . getDstSnapshotId () ) ; } return cachedSnapshot ; }
protected boolean validateVmNotDuringSnapshot () { return validate ( createSnapshotValidator () . vmNotDuringSnapshot ( org.ovirt.engine.core.bll.RemoveSnapshotCommand . getVmId () ) ) ; }
@ org.junit.Test public void testNullElement () { org.ovirt.engine.api.types.V4Vm object = objectFromXml ( STRING_CONSTANT ) ; org.junit.Assert . assertNull ( object . name () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < java.lang.String > pmTypes = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; updatePmTypeList ( pmTypes , getPmType () ) ; updatePmTypeList ( pmTypes , getPmSecondaryType () ) ; }
private boolean canExecuteCommand ( org.ovirt.engine.core.common.action.VdcActionType actionType ) { return org.ovirt.engine.core.common.VdcActionUtils . canExecute ( new java.util.ArrayList ( java.util.Arrays . asList ( new org.ovirt.engine.core.common.businessentities.VDS [] { getEntity () } ) ) , org.ovirt.engine.core.common.businessentities.VDS . class , actionType ) ; }
private void assertValidVolumeInfoCombination ( org.ovirt.engine.core.common.businessentities.storage.VolumeFormat volumeFormat , org.ovirt.engine.core.common.businessentities.storage.VolumeType volumeType , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { setupVolumeFormatAndTypeTest ( volumeFormat , volumeType , storageType ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateSuccess ( command ) ; }
public static boolean isUpdateValid ( org.ovirt.engine.core.common.businessentities.VmTemplate source , org.ovirt.engine.core.common.businessentities.VmTemplate destination ) { return org.ovirt.engine.core.bll.VmTemplateHandler.updateVmTemplate . isUpdateValid ( source , destination ) ; }
private void initEditors () { forceEditor = new org.ovirt.engine.ui.common.widget.editor.generic.EntityModelCheckBoxEditor ( org.ovirt.engine.ui.common.widget.Align.RIGHT ) ; geoRepForceHelpIcon = new org.ovirt.engine.ui.common.widget.dialog.InfoIcon ( org.ovirt.engine.ui.webadmin.section.main.view.popup.gluster.GeoRepActionConfirmPopUpView.constants . notAvailableLabel () ) ; }
@ java.lang.Override public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > glusterHooks = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterHookEntity > ) ( returnValue ) ) ; setItems ( glusterHooks ) ; }
public void setOS ( int value ) { if ( ( os ) != value ) { os = value ; onPropertyChanged ( new org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs ( STRING_CONSTANT ) ) ; } }
public boolean validate () { getDescription () . validateEntity ( new org.ovirt.engine.ui.uicommonweb.validation.IValidation [] { new org.ovirt.engine.ui.uicommonweb.validation.NotEmptyValidation () , new org.ovirt.engine.ui.uicommonweb.validation.SpecialAsciiI18NOrNoneValidation () , new org.ovirt.engine.ui.uicommonweb.validation.LengthValidation ( org.ovirt.engine.core.common.businessentities.BusinessEntitiesDefinitions.GENERAL_MAX_SIZE ) } ) ; return getDescription () . getIsValid () ; }
public void addStyleName ( java.lang.String style ) { getLabel () . addStyleName ( style ) ; }
private org.ovirt.engine.core.bll.gluster.ResetGlusterVolumeOptionsCommand createTestCommand ( org.ovirt.engine.core.compat.Guid volumeId ) { return new org.ovirt.engine.core.bll.gluster.ResetGlusterVolumeOptionsCommand ( new org.ovirt.engine.core.common.action.gluster.ResetGlusterVolumeOptionsParameters ( volumeId , null , false ) , null ) ; }
@ java.lang.Override public void update ( int index , org.ovirt.engine.ui.uicommonweb.models.providers.ExternalNetwork model , java.lang.String value ) { model . setDisplayName ( value ) ; }
@ java.lang.Override protected boolean validate () { return ( super . validate () ) && ( validate ( getVfsConfigValidator () . networkInVfsConfig ( getNetworkId () ) ) ) ; }
@ org.junit.Test public void testGetByName () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . getByName ( existingPool . getName () ) ; assertGetResult ( result ) ; }
@ java.lang.Override public int compare ( org.ovirt.engine.core.common.businessentities.Role left , org.ovirt.engine.core.common.businessentities.Role right ) { return left . getName () . compareTo ( right . getName () ) ; }
private org.ovirt.engine.core.aaa.DirectoryGroup getDirectoryGroup ( int index ) { return new org.ovirt.engine.core.aaa.DirectoryGroup ( DOMAIN , EXTERNAL_IDS [ index ] , org.ovirt.engine.api.restapi.resource.BackendGroupsResourceTest.GROUP_NAMES [ index ] ) ; }
@ java.lang.Override public void vnicCreated ( org.ovirt.engine.core.compat.Guid vmId ) {}
@ org.junit.Test public void addPosixEmptyVFSType () { org.ovirt.engine.core.common.businessentities.StorageServerConnections newPosixConnection = createPosixConnection ( STRING_CONSTANT , StorageType.POSIXFS , null , STRING_CONSTANT ) ; parameters . setStorageServerConnection ( newPosixConnection ) ; org.ovirt.engine.core.bll.CanDoActionTestUtils . runAndAssertCanDoActionFailure ( command , VdcBllMessages.VALIDATION_STORAGE_CONNECTION_EMPTY_VFSTYPE ) ; }
private static void addField ( java.lang.String fieldName , java.lang.Class < > fieldType , java.lang.String columnName ) { org.ovirt.engine.core.searchbackend.gluster.GlusterVolumeConditionFieldAutoCompleter.fields . add ( new org.ovirt.engine.core.searchbackend.gluster.GlusterVolumeConditionFieldAutoCompleter.AutoCompletionField ( fieldName , fieldType , columnName ) ) ; }
@ org.junit.Test public void validate () { setupForStorageTests () ; org.junit.Assert . assertTrue ( command . validate () ) ; }
@ java.lang.Override protected void entityPropertyChanged ( java.lang.Object sender , org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs e ) { super . entityPropertyChanged ( sender , e ) ; behavior . entityPropertyChanged ( e ) ; }
@ java.lang.Override public void vdsMovedToMaintanance ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { org.ovirt.engine.core.bll.MaintananceVdsCommand . ProcessStorageOnVdsInactive ( vds ) ; } finally { org.ovirt.engine.core.bll.job.ExecutionHandler . updateSpecificActionJobCompleted ( vds . getId () , VdcActionType.MaintananceVds , true ) ; } }
private boolean volumeNameExists ( java.lang.String volumeName ) { return ( getGlusterVolumeDao () . getByName ( getClusterId () , volumeName ) ) != null ; }
private java.sql.Connection applyCustomSchema ( java.sql.Connection connection ) throws java.sql.SQLException { try ( java.sql.Statement st = connection . createStatement () ) { st . executeUpdate ( java.lang.String . format ( STRING_CONSTANT , org.ovirt.engine.extension.aaa.jdbc.Formatter . escapeString ( customSchema ) ) ) ; } return connection ; }
@ java.lang.Override public boolean isTrue () { return ( ( getModel () . getEntity () ) != null ) && ( getModel () . getEntity () . supportsGlusterService () ) ; }
@ org.junit.Test public void testGetUserAndSetUserWithoutSessionParam () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer . setHttpSessionId ( org.ovirt.engine.core.bll.session.SessionDataContainerTest.TEST_SESSION_ID ) ; org.ovirt.engine.core.common.interfaces.IVdcUser user = org.mockito.Mockito . mock ( org.ovirt.engine.core.common.interfaces.IVdcUser . class ) ; container . setUser ( user ) ; org.junit.Assert . assertEquals ( STRING_CONSTANT , user , container . getUser ( false ) ) ; }
public void setPrefix ( java.lang.String prefix , java.lang.String uri ) { try { writer . setPrefix ( prefix , uri ) ; } catch ( javax.xml.stream.XMLStreamException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
private void initModel ( org.ovirt.engine.ui.uicommonweb.models.ConsolePopupModel model ) { consoleOptionsPersister . loadFromLocalStorage ( model . getModel () ) ; }
@ java.lang.Override public org.ovirt.engine.api.resource.NetworksResource getNetworksResource () { return inject ( new org.ovirt.engine.api.restapi.resource.BackendIscsiBondNetworksResource ( id ) ) ; }
@ org.junit.Test public void detachedClusterMovesToDcWithExistingManagementNetwork () { prepareManagementNetworkMocks () ; mcr . mockConfigValue ( ConfigValues.AutoRegistrationDefaultVdsGroupID , Guid.Empty ) ; createCommandWithDefaultVdsGroup () ; oldGroupIsDetachedDefault () ; setupCpu () ; storagePoolIsLocalFS () ; org.junit.Assert . assertTrue ( cmd . validate () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.CommandAssociatedEntity > getCommandAssociatedEntities ( org.ovirt.engine.core.compat.Guid cmdId ) { return commandsRepository . getCommandAssociatedEntities ( cmdId ) ; }
@ java.lang.Override public void run () { org.ovirt.engine.core.vdsbroker.ResourceManager . getInstance () . getEventListener () . vdsNonOperational ( vdsId , NonOperationalReason.STORAGE_DOMAIN_UNREACHABLE , true , domainId ) ; }
@ java.lang.Override protected java.util.Collection < org.ovirt.engine.api.model.VM > getEntitiesFromExportDomain () { org.ovirt.engine.core.common.queries.GetAllFromExportDomainQueryParameters params = new org.ovirt.engine.core.common.queries.GetAllFromExportDomainQueryParameters ( getDataCenterId ( storageDomainId ) , storageDomainId ) ; return getBackendCollection ( VdcQueryType.GetVmsFromExportDomain , params ) ; }
@ org.junit.Test public void addWithExistingMacAddressSucceed () { runAddAndVerify ( org.ovirt.engine.core.bll.network.VmInterfaceManagerTest . createNewInterface () , org.ovirt.engine.core.bll.network.VmInterfaceManagerTest.OS_ID , false ) ; }
@ java.lang.Override protected void init () { resource . setBackend ( backend ) ; resource . setMappingLocator ( mapperLocator ) ; resource . setValidatorLocator ( validatorLocator ) ; resource . setMessageBundle ( messageBundle ) ; resource . setHttpHeaders ( httpHeaders ) ; }
private java.lang.String composeObjectId () { return org.ovirt.engine.core.dal.dbbroker.auditloghandling.EventKeyComposer . composeObjectId ( event , logType ) ; }
private void attachVmDisksToStorageDomain ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.common.businessentities.storage.DiskImage . . . vmDisks ) { for ( org.ovirt.engine.core.common.businessentities.storage.DiskImage diskImage : vmDisks ) { diskImage . setStorageIds ( new java.util.ArrayList ( java.util.Arrays . asList ( storageDomain . getId () ) ) ) ; } }
@ org.junit.Test public void testGetSystemStatisticsValueWithoutSpecifiedStatus () { int numOfUsers = underTest . getSystemStatisticsValue ( STRING_CONSTANT , STRING_CONSTANT ) ; org.junit.Assert . assertEquals ( org.ovirt.engine.core.dao.SystemStatisticsDaoImplTest.NUM_OF_USERS_IN_FIXTURES , numOfUsers ) ; }
@ java.lang.Override protected javax.ws.rs.core.Response performRemove ( java.lang.String id ) { return performAction ( VdcActionType.RemoveDisk , new org.ovirt.engine.core.common.action.RemoveDiskParameters ( asGuid ( id ) ) ) ; }
@ java.lang.Override public java.lang.Object getQueryableId () { return id ; }
private void mockCommandParameters () { org.mockito.Mockito . doReturn ( unregisteredDisksDaoMock ) . when ( cmd ) . getUnregisteredDisksDao () ; org.mockito.Mockito . doReturn ( diskImageDaoMock ) . when ( cmd ) . getDiskImageDao () ; }
public static void getAAAProfilesList ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . convertAAAProfilesResult ( aQuery , true ) ; org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetAAAProfileList , new org.ovirt.engine.core.common.queries.VdcQueryParametersBase () , aQuery ) ; }
public void runMultipleAction ( final org.ovirt.engine.core.common.action.VdcActionType actionType , final java.util.List < org.ovirt.engine.core.common.action.VdcActionParametersBase > parameters ) { runMultipleAction ( actionType , parameters , null , null ) ; }
public java.lang.Object getConfigValuePreConverted ( org.ovirt.engine.core.common.queries.ConfigurationValues configValue ) { org.ovirt.engine.core.compat.KeyValuePairCompat < org.ovirt.engine.core.common.queries.ConfigurationValues , java.lang.String > key = new org.ovirt.engine.core.compat.KeyValuePairCompat ( configValue , getDefaultConfigurationVersion () ) ; return cachedConfigValuesPreConvert . get ( key ) ; }
protected boolean setAndValidateCpuProfile () { return validate ( org.ovirt.engine.core.bll.profiles.CpuProfileHelper . setAndValidateCpuProfile ( org.ovirt.engine.core.bll.VmManagementCommandBase . getParameters () . getVm () . getStaticData () , org.ovirt.engine.core.bll.VmManagementCommandBase . getUserId () ) ) ; }
public void setClusterId ( org.ovirt.engine.core.compat.Guid value ) { id . setClusterId ( value ) ; }
private void setUpPopulateExpectation () { if ( ! ( isPopulateSet ) ) { org.mockito.Mockito . when ( httpHeaders . getRequestHeader ( BackendResource.POPULATE ) ) . thenReturn ( java.util.Collections . singletonList ( STRING_CONSTANT ) ) ; isPopulateSet = true ; } }
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface createVdsNetworkInterfaceWithStaticIp ( java.lang.String ip ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface networkInterface = new org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface () ; networkInterface . setAddress ( ip ) ; networkInterface . setBootProtocol ( NetworkBootProtocol.StaticIp ) ; return networkInterface ; }
@ org.junit.Test public void testHostLinks ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Host host = new org.ovirt.engine.api.model.Host () ; host . setId ( org.ovirt.engine.api.restapi.util.LinkHelperTest.HOST_ID ) ; org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( host ) ; assertEquals ( org.ovirt.engine.api.restapi.util.LinkHelperTest.HOST_HREF , host . getHref () ) ; }
@ java.lang.Override public java.lang.String getTooltip ( org.ovirt.engine.core.common.utils.PairQueryable < org.ovirt.engine.core.common.businessentities.network.VmNetworkInterface , org.ovirt.engine.core.common.businessentities.VM > object ) { java.lang.String tooltipContent = object . getSecond () . getVmFQDN () ; return tooltipContent ; }
private boolean singleHostSelected ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > items ) { return ( ( items != null ) && ( ( items . size () ) == NUMBER_CONSTANT ) ) && ( ( items . get ( NUMBER_CONSTANT ) ) != null ) ; }
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { if ( ( sshDialog ) != null ) { sshDialog . close () ; sshDialog = null ; } }
@ java.lang.Override protected void onReveal () { super . onReveal () ; setInSlot ( org.ovirt.engine.ui.webadmin.section.main.presenter.HeaderPresenterWidget.TYPE_SetSearchPanel , searchPanel ) ; setInSlot ( org.ovirt.engine.ui.webadmin.section.main.presenter.HeaderPresenterWidget.TYPE_SetTabBar , tabBar ) ; }
public java.lang.String getMasterStorageDomainId () { return ( masterStorageDomainId ) == null ? this . id : masterStorageDomainId ; }
@ java.lang.Override protected void syncSearch () { if ( ( getEntity () ) == null ) { return; } org.ovirt.engine.core.common.businessentities.VM vm = getEntity () ; super . syncSearch ( VdcQueryType.GetAllDisksByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId () ) ) ; }
private void templateWithVersion_SelectedItemChanged ( java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { behavior . templateWithVersion_SelectedItemChanged () ; }
public synchronized void startPollingTask ( org.ovirt.engine.core.compat.Guid vdsmTaskId ) { if ( _tasks . containsKey ( vdsmTaskId ) ) { _tasks . get ( vdsmTaskId ) . startPollingTask () ; } }
public java.lang.String ExportTemplate ( org.ovirt.engine.core.common.businessentities.VmTemplate vmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > images , org.ovirt.engine.core.compat.Version version ) { org.ovirt.engine.core.utils.ovf.OvfWriter ovf = new org.ovirt.engine.core.utils.ovf.OvfTemplateWriter ( vmTemplate , images , version ) ; BuildOvf ( ovf ) ; return ovf . getStringRepresentation () ; }
@ java.lang.Override public void search () { org.ovirt.engine.core.common.businessentities.VM vm = getEntity () ; if ( ( getEntity () ) != null ) { preSearchCalled ( vm ) ; super . search () ; } }
@ java.lang.Override protected boolean getDefaultDiscardAfterDelete () { return false ; }
@ java.lang.Override public void endWithFailure () { enclosingCommand . getReturnValue () . setSucceeded ( true ) ; }
@ org.junit.Test public void hostnameNormalPort () { org.junit.Assert . assertTrue ( validation . validate ( STRING_CONSTANT ) . getSuccess () ) ; }
private void mockVMPoolDAO () { org.mockito.Mockito . doReturn ( vmPoolDAO ) . when ( command ) . getVmPoolDAO () ; }
@ java.lang.Override protected void syncSearch () { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity () ) ) ; if ( vm == null ) { return; } super . syncSearch ( VdcQueryType.GetAllVmSnapshotsByVmId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId () ) ) ; }
@ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.storage.Disk > disks ) { updateCanSetBoot ( disks ) ; }
@ org.junit.Test public void testEventLinks ( ) throws java.lang.Exception { org.ovirt.engine.api.model.Event event = new org.ovirt.engine.api.model.Event () ; event . setId ( org.ovirt.engine.api.restapi.util.LinkHelperTest.EVENT_ID ) ; org.ovirt.engine.api.restapi.util.LinkHelper . addLinks ( event ) ; assertEquals ( org.ovirt.engine.api.restapi.util.LinkHelperTest.EVENT_HREF , event . getHref () ) ; }
@ java.lang.Override protected java.lang.String getDisabledMessage ( org.ovirt.engine.ui.uicommonweb.models.vms.ImportVmData model ) { return model . getClone () . getChangeProhibitionReason () ; }
@ java.lang.Override protected org.ovirt.engine.core.aaa.DirectoryGroup getEntity ( int index ) { return new org.ovirt.engine.core.aaa.DirectoryGroup ( DOMAIN , NAMESPACE , EXTERNAL_IDS [ index ] , NAMES [ index ] ) ; }
public void tJDBCInput_2_error ( java.lang.Exception exception , java.lang.String errorComponent , final java.util.Map < java.lang.String , java.lang.Object > globalMap ) throws ovirt_engine_dwh.hostconfigcheck_3_6.HostConfigCheck.TalendException { end_Hash . put ( errorComponent , java.lang.System . currentTimeMillis () ) ; status = STRING_CONSTANT ; tJDBCInput_2_onSubJobError ( exception , errorComponent , globalMap ) ; }
public boolean validate ( boolean validateCpu ) { return validate ( true , validateCpu , true ) ; }
public void calculateNextMaintenanceAttemptTime () { this . nextMaintenanceAttemptTime = ( java.lang.System . currentTimeMillis () ) + ( java.util.concurrent.TimeUnit.MILLISECONDS . convert ( org.ovirt.engine.core.common.config.Config . < java.lang.Integer > getValue ( ConfigValues.HostPreparingForMaintenanceIdleTime ) , java.util.concurrent.TimeUnit.SECONDS ) ) ; }
private org.ovirt.engine.core.common.businessentities.StorageDomain mockFirstStorageDomain () { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain () ; storageDomain . setStatus ( StorageDomainStatus.Active ) ; storageDomain . setId ( firstStorageDomainId ) ; storageDomain . setStorageDomainType ( StorageDomainType.Data ) ; return storageDomain ; }
@ java.lang.Override public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.NetworkView object ) { return object . getName () ; }
public org.ovirt.engine.core.common.TimeZoneType getTimeZoneType () { java.lang.Integer vmOsType = ( ( java.lang.Integer ) ( getModel () . getOSType () . getSelectedItem () ) ) ; return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . isWindowsOsType ( vmOsType ) ? org.ovirt.engine.core.common.TimeZoneType.WINDOWS_TIMEZONE : org.ovirt.engine.core.common.TimeZoneType.GENERAL_TIMEZONE ; }
@ java.lang.Override public java.lang.String getStoragePoolName () { if ( ( org.apache.commons.lang.StringUtils . isEmpty ( storagePoolName ) ) && ( ( getStoragePool () ) != null ) ) { storagePoolName = getStoragePool () . getName () ; } return org.apache.commons.lang.StringUtils . defaultString ( storagePoolName ) ; }
protected void removeMemoryVolume ( java.lang.String memoryVolumes ) { if ( isMemoryStateRemovable ( memoryVolumes ) ) { removeMemoryVolumes ( memoryVolumes ) ; } }
private static org.ovirt.engine.core.bll.storage.pool.RemoveStoragePoolCommand < org.ovirt.engine.core.common.action.StoragePoolParametersBase > createCommand ( org.ovirt.engine.core.common.action.StoragePoolParametersBase param ) { return new org.ovirt.engine.core.bll.storage.pool.RemoveStoragePoolCommand ( param ) ; }
@ java.lang.Override public void eventRaised ( org.ovirt.engine.ui.uicompat.Event < ? extends org.ovirt.engine.ui.uicompat.EventArgs > ev , java.lang.Object sender , org.ovirt.engine.ui.uicompat.EventArgs args ) { onLogin ( loginModel ) ; }
@ org.junit.Test public void testAddDefaultQuota () { command . getParameters () . getQuota () . setDefault ( true ) ; org.ovirt.engine.core.bll.ValidateTestUtils . runAndAssertValidateFailure ( command , EngineMessage.ACTION_TYPE_FAILED_QUOTA_IS_NOT_VALID ) ; }
protected org.ovirt.engine.core.compat.Guid getEntityGuid () { return org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getEntityGuid ( getEntity () ) ; }
private static void fillPasswordsMap () { org.ovirt.engine.core.vdsbroker.vdsbroker.SysprepHandler.passwordPerDomain = org.ovirt.engine.core.common.config.Config . < org.ovirt.engine.core.dal.dbbroker.generic.DomainsPasswordMap > getValue ( ConfigValues.AdUserPassword ) ; }
@ java.lang.Override @ com.google.gwt.uibinder.client.UiChild ( tagname = STRING_CONSTANT , limit = NUMBER_CONSTANT ) public void setHeader ( com.google.gwt.user.client.ui.Widget widget ) { headerTitlePanel . insert ( widget , NUMBER_CONSTANT ) ; }
public void writeStartElement ( java.lang.String localName ) { try { writer . writeStartElement ( localName ) ; } catch ( javax.xml.stream.XMLStreamException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
protected void assertEqualsTo ( org.ovirt.engine.core.common.businessentities.StorageDomain firstStorageDomain , org.ovirt.engine.core.common.businessentities.StorageDomain secondStorageDomain ) { org.junit.Assert . assertEquals ( NUMBER_CONSTANT , compareStorageDomains ( firstStorageDomain , secondStorageDomain ) ) ; }
@ java.lang.Override public void onMouseOver ( com.google.gwt.event.dom.client.MouseOverEvent event ) { if ( ! ( org.ovirt.engine.ui.uicompat.external.StringUtils . isEmpty ( title ) ) ) { tooltip . setHTML ( title ) ; tooltipPanel . showRelativeTo ( this ) ; } }
@ java.lang.Override public void edit ( org.ovirt.engine.ui.uicommonweb.models.storage.DisksAllocationModel model ) { driver . edit ( model ) ; initListeners ( model ) ; updateColumnsAvailability ( model ) ; updateListHeader () ; }
@ java.lang.Override public java.lang.Boolean getValue () { for ( org.ovirt.engine.ui.uicommonweb.models.datacenters.NetworkClusterModel networkClusterModel : getClustersTableItems () ) { if ( ! ( networkClusterModel . isRequired () ) ) { return false ; } } return true ; }
org.ovirt.engine.core.common.queries.VdcQueryReturnValue runQuery ( org.ovirt.engine.core.common.queries.VdcQueryType actionType , org.ovirt.engine.core.common.queries.VdcQueryParametersBase parameters ) ;
static java.lang.String asString ( org.ovirt.engine.api.model.Version version ) { return version == null ? null : java.text.MessageFormat . format ( org.ovirt.engine.api.restapi.resource.BackendResource.VERSION_FORMAT , version . getMajor () , version . getMinor () ) ; }
public static org.ovirt.engine.core.common.businessentities.VmDynamic buildVMDynamicData ( java.util.Map < java.lang.String , java.lang.Object > xmlRpcStruct , org.ovirt.engine.core.common.businessentities.VDS host ) { org.ovirt.engine.core.common.businessentities.VmDynamic vmdynamic = new org.ovirt.engine.core.common.businessentities.VmDynamic () ; org.ovirt.engine.core.vdsbroker.vdsbroker.VdsBrokerObjectsBuilder . updateVMDynamicData ( vmdynamic , xmlRpcStruct , host ) ; return vmdynamic ; }
public org.ovirt.engine.core.common.users.VdcUser getUserBySessionId ( java.lang.String sessionId ) { org.ovirt.engine.core.common.users.VdcUser user = ( ( org.ovirt.engine.core.common.users.VdcUser ) ( org.ovirt.engine.core.bll.session.SessionDataContainer . getInstance () . getUser ( sessionId , false ) ) ) ; return user ; }
public static void clean () { org.ovirt.engine.core.utils.ThreadLocalParamsContainer.correlationId . remove () ; }
private org.ovirt.engine.core.vdsbroker.VmsMonitoring getVmsMonitoring () { return new org.ovirt.engine.core.vdsbroker.VmsMonitoring ( auditLogDirector , isTimeToRefreshStatistics () ) ; }
@ java.lang.Override protected void setVmPoolId ( org.ovirt.engine.core.compat.Guid value ) { org.ovirt.engine.core.bll.AttachUserToVmFromPoolAndRunCommand . getParameters () . setVmPoolId ( value ) ; }
protected org.ovirt.engine.core.common.businessentities.VDS getVds ( org.ovirt.engine.core.compat.Guid id ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS () ; vds . setId ( id ) ; return vds ; }
public void writeEndElement () { try { writer . writeEndElement () ; } catch ( javax.xml.stream.XMLStreamException e ) { throw new java.lang.RuntimeException ( STRING_CONSTANT , e ) ; } }
@ java.lang.Override protected boolean validate () { return ( ( validate ( getVfsConfigValidator () . nicExists () ) ) && ( validate ( getVfsConfigValidator () . nicSriovEnabled () ) ) ) && ( validate ( getVfsConfigValidator () . sriovFeatureSupported () ) ) ; }
protected void onPropertyChanged ( org.ovirt.engine.ui.uicompat.PropertyChangedEventArgs e ) { getPropertyChangedEvent () . raise ( this , e ) ; }
@ java.lang.Override public org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth convert ( java.lang.Object source ) { return source != null ? org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth . fromInt ( ( ( java.lang.Integer ) ( source ) ) ) : org.ovirt.engine.core.common.console.ConsoleOptions.WanColorDepth.depth16 ; }
@ java.lang.Override protected boolean validate () { return ( super . validate () ) && ( validate ( getVfsConfigValidator () . settingSpecificNetworksAllowed () ) ) ; }
@ java.lang.Override public java.lang.Void runInTransaction () { jobDao . updateJobLastUpdateTime ( existingStep . getJobId () , new java.util.Date () ) ; stepDao . update ( existingStep ) ; stepDao . save ( newStep ) ; return null ; }
@ java.lang.Override public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < > ) ( source ) ) . isEmpty () ) ; } return false ; }
public static boolean isMultilevelAdministrationOn () { return org.ovirt.engine.core.common.config.Config . < java.lang.Boolean > getValue ( ConfigValues.IsMultilevelAdministrationOn ) ; }
public boolean isLiveMergeSupported ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( vm != null ) && ( ( java.lang.Boolean ) ( getConfigValuePreConverted ( ConfigurationValues.LiveMergeSupported , vm . getVdsGroupCompatibilityVersion () . toString () ) ) ) ; }
@ org.junit.Test public void validateNonExternalStepFails ( ) throws java.lang.Exception { parameters . setJobId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.jobId ) ; parameters . setId ( org.ovirt.engine.core.bll.EndExternalStepCommandTest.nonExternalStepId ) ; org.junit.Assert . assertTrue ( ( ! ( command . validate () ) ) ) ; }
public static void addNetworkFiltersToNic ( java.util.Map < java.lang.String , java.lang.Object > struct , org.ovirt.engine.core.compat.Version clusterVersion ) { if ( org.ovirt.engine.core.common.FeatureSupported . antiMacSpoofing ( clusterVersion ) ) { struct . put ( VdsProperties.NW_FILTER , NetworkFilters.NO_MAC_SPOOFING . getFilterName () ) ; } }
protected void setImageStatus ( org.ovirt.engine.core.common.businessentities.ImageStatus imageStatus ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = getRelevantDiskImage () ; if ( diskImage != null ) { diskImage . setImageStatus ( imageStatus ) ; org.ovirt.engine.core.bll.ImagesHandler . updateImageStatus ( diskImage . getImage () . getId () , imageStatus ) ; } }
public void updateCommandStatus ( final org.ovirt.engine.core.compat.Guid commandId , final org.ovirt.engine.core.compat.CommandStatus status ) { commandsCache . updateCommandStatus ( commandId , status ) ; }
private void initLabelsToNetworks () { for ( org.ovirt.engine.core.common.businessentities.network.Network network : clusterNetworks ) { org.ovirt.engine.core.utils.collections.MultiValueMapUtils . addToMap ( network . getLabel () , network , labelToNetworks , new org.ovirt.engine.core.utils.collections.MultiValueMapUtils.ListCreator <> () ) ; } }
@ org.ovirt.engine.ui.webadmin.Template ( value = STRING_CONSTANT + ( ( ( ( STRING_CONSTANT + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) + STRING_CONSTANT ) ) com.google.gwt.safehtml.shared.SafeHtml volumeBrickStatusTemplate ( com.google.gwt.safehtml.shared.SafeHtml upImage , int upCount , com.google.gwt.safehtml.shared.SafeHtml downImage , int downCount , java.lang.String id ) ;
@ org.junit.Test public void testGetWithTrailingSlashVirtOnly () { doTestGet ( ApplicationMode.VirtOnly ) ; }
public void updateVmDevicesOnRun ( org.ovirt.engine.core.common.businessentities.VmBase vmBase ) { if ( vmBase != null ) { updateUsbSlots ( vmBase , vmBase ) ; } }
@ java.lang.Override protected void getHostListByCluster ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.ui.frontend.AsyncQuery query ) { org.ovirt.engine.ui.frontend.Frontend . getInstance () . runQuery ( VdcQueryType.GetHostsByClusterId , new org.ovirt.engine.core.common.queries.IdQueryParameters ( cluster . getId () ) , query ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > returnValue ) { postMigrateGetUpHosts ( privateVmList , returnValue ) ; }
private java.util.List < org.ovirt.engine.core.common.businessentities.storage.LUNs > getDeviceList ( org.ovirt.engine.core.compat.Guid hostId , org.ovirt.engine.core.common.businessentities.storage.StorageType storageType ) { return getEntity ( java.util.List . class , VdcQueryType.GetDeviceList , new org.ovirt.engine.core.common.queries.GetDeviceListQueryParameters ( hostId , storageType , false , null ) , STRING_CONSTANT , true ) ; }
@ java.lang.SuppressWarnings ( value = STRING_CONSTANT ) @ java.lang.Override public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { postMigrateGetUpHosts ( privateVmList , ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ) ; }
@ org.junit.Test public void testGet () { org.ovirt.engine.core.common.businessentities.StoragePool result = dao . get ( existingPool . getId () ) ; assertGetResult ( result ) ; }
public void setVmTemplate ( final org.ovirt.engine.core.common.businessentities.VmTemplate value ) { vmTemplate = value ; }
@ java.lang.Override public void OnSuccess ( java.lang.Object model , java.lang.Object ReturnValue ) {}
@ java.lang.Override protected void configure () { install ( new org.ovirt.engine.ui.webadmin.gin.SystemModule () ) ; install ( new org.ovirt.engine.ui.webadmin.gin.UiCommonModule () ) ; install ( new org.ovirt.engine.ui.webadmin.gin.PresenterModule () ) ; install ( new org.ovirt.engine.ui.webadmin.gin.PluginModule () ) ; install ( new org.ovirt.engine.ui.webadmin.gin.UtilsModule () ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.ExternalHostGroup > getHostGroups () { return runHostGroupListMethod ( org.ovirt.engine.core.bll.host.provider.foreman.ForemanHostProviderProxy.HOST_GROUPS_QUERY ) ; }
@ java.lang.Override public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > filter ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , org.ovirt.engine.core.common.scheduling.PerHostMessages messages ) { return org.ovirt.engine.core.bll.scheduling.policyunits.VmAffinityFilterPolicyUnit . getAcceptableHosts ( true , hosts , vm , messages , getPendingResourceManager () ) ; }
protected org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode getDefaultConsoleMode () { return org.ovirt.engine.ui.uicommonweb.models.vms.SpiceConsoleModel.ClientConsoleMode . valueOf ( ( ( java.lang.String ) ( org.ovirt.engine.ui.uicommonweb.dataprovider.AsyncDataProvider . getInstance () . getConfigValuePreConverted ( ConfigurationValues.ClientModeSpiceDefault ) ) ) ) ; }
@ java.lang.Override public org.ovirt.engine.core.bll.tasks.interfaces.CommandCallback getCallback () { return getFlow () . isStateless () ? new org.ovirt.engine.core.bll.ConcurrentChildCommandsExecutionCallback () : null ; }
