========================================================================
Example Number: 1
Parent Code is: 
( int ) ( ( value - this . lowerBound ) / ( this . upperBound - this . lowerBound ) * NUMBER_CONSTANT )
-------------------------------------------------------------------------------
Child code is: 
( int ) ( ( v - this . lowerBound ) / ( this . upperBound - this . lowerBound ) * NUMBER_CONSTANT )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (27 (36 (214{val=(}) (27 (800{val=value}) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=upperBound})) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)}))) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (27 (36 (214{val=(}) (27 (800{val=v}) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=upperBound})) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)}))) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/24/parent/source_org_jfree_chart_renderer_GrayPaintScale.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	(
Code	(
Distance : 23

1
Tree	checker
Code	checker
Distance : 24

2
Tree	AbstractScope
Code	AbstractScope
Distance : 24

3
Tree	e
Code	e
Distance : 24

4
Tree	builder
Code	builder
Distance : 24

5
Tree	!
Code	!
Distance : 24

6
Tree	tolerance
Code	tolerance
Distance : 24

7
Tree	a
Code	a
Distance : 24

8
Tree	result
Code	result
Distance : 24

9
Tree	>=
Code	>=
Distance : 24

10
Tree	norm
Code	norm
Distance : 24

11
Tree	Color
Code	Color
Distance : 24

12
Tree	CharSequenceUtils
Code	CharSequenceUtils
Distance : 24

13
Tree	Collection
Code	Collection
Distance : 24

14
Tree	Assertions
Code	Assertions
Distance : 24

15
Tree	isGoogScopeFunctionBody
Code	isGoogScopeFunctionBody
Distance : 24

16
Tree	ArithmeticsUtils
Code	ArithmeticsUtils
Distance : 24

17
Tree	setInverseCumulativeTestValues
Code	setInverseCumulativeTestValues
Distance : 24

18
Tree	true
Code	true
Distance : 24

19
Tree	computeEscaped
Code	computeEscaped
Distance : 24

20
Tree	bp
Code	bp
Distance : 24

21
Tree	seed
Code	seed
Distance : 24

22
Tree	detects
Code	detects
Distance : 24

23
Tree	return
Code	return
Distance : 24

24
Tree	minPos
Code	minPos
Distance : 24

25
Tree	NumberOfInvocationsChecker
Code	NumberOfInvocationsChecker
Distance : 24

26
Tree	y
Code	y
Distance : 24

27
Tree	methodName
Code	methodName
Distance : 24

28
Tree	checkState
Code	checkState
Distance : 24

29
Tree	pos
Code	pos
Distance : 24

30
Tree	boolean
Code	boolean
Distance : 24

31
Tree	str
Code	str
Distance : 24

32
Tree	index
Code	index
Distance : 24

33
Tree	RenameLabels
Code	RenameLabels
Distance : 24

34
Tree	startPos
Code	startPos
Distance : 24

35
Tree	d
Code	d
Distance : 24

36
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 24

37
Tree	catch
Code	catch
Distance : 24

38
Tree	try
Code	try
Distance : 24

39
Tree	removeUnusedProperties
Code	removeUnusedProperties
Distance : 24

40
Tree	SQRT_TWO_PI
Code	SQRT_TWO_PI
Distance : 24

41
Tree	invalidatingTypes
Code	invalidatingTypes
Distance : 24

42
Tree	SparseFieldVector
Code	SparseFieldVector
Distance : 24

43
Tree	rightType
Code	rightType
Distance : 24

44
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 24

45
Tree	p
Code	p
Distance : 24

46
Tree	assertTrue
Code	assertTrue
Distance : 24

47
Tree	EnvTypePair
Code	EnvTypePair
Distance : 24

48
Tree	TestVectorImpl
Code	TestVectorImpl
Distance : 24

49
Tree	packed
Code	packed
Distance : 24

50
Tree	Long
Code	Long
Distance : 24

51
Tree	Double
Code	Double
Distance : 24

52
Tree	println
Code	println
Distance : 24

53
Tree	]
Code	]
Distance : 24

54
Tree	CollectionHolder
Code	CollectionHolder
Distance : 24

55
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 24

56
Tree	Separator
Code	Separator
Distance : 24

57
Tree	array
Code	array
Distance : 24

58
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 24

59
Tree	step
Code	step
Distance : 24

60
Tree	forNode
Code	forNode
Distance : 24

61
Tree	absoluteAccuracy
Code	absoluteAccuracy
Distance : 24

62
Tree	preprocessorSymbolTableFactory
Code	preprocessorSymbolTableFactory
Distance : 24

63
Tree	TestFieldProblem3
Code	TestFieldProblem3
Distance : 24

64
Tree	msg
Code	msg
Distance : 24

65
Tree	MockHandler
Code	MockHandler
Distance : 24

66
Tree	ds
Code	ds
Distance : 24

67
Tree	info
Code	info
Distance : 24

68
Tree	defineSlot
Code	defineSlot
Distance : 24

69
Tree	numberOfElements
Code	numberOfElements
Distance : 24

70
Tree	theoreticalMinParams
Code	theoreticalMinParams
Distance : 24

71
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 24

72
Tree	join
Code	join
Distance : 24

73
Tree	NumberStrategy
Code	NumberStrategy
Distance : 24

74
Tree	c
Code	c
Distance : 24

75
Tree	increment
Code	increment
Distance : 24

76
Tree	ArithmeticUtils
Code	ArithmeticUtils
Distance : 24

77
Tree	numerator
Code	numerator
Distance : 24

78
Tree	fieldType
Code	fieldType
Distance : 24

79
Tree	Field
Code	Field
Distance : 24

80
Tree	actualYieldType
Code	actualYieldType
Distance : 24

81
Tree	start
Code	start
Distance : 24

82
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 24

83
Tree	sigma
Code	sigma
Distance : 24

84
Tree	RealMatrix
Code	RealMatrix
Distance : 24

85
Tree	throwable
Code	throwable
Distance : 24

86
Tree	Point2D
Code	Point2D
Distance : 24

87
Tree	
Code	
Distance : 24

88
Tree	UnivariateRealSolver
Code	UnivariateRealSolver
Distance : 24

89
Tree	maxIterations
Code	maxIterations
Distance : 24

90
Tree	typeCheck
Code	typeCheck
Distance : 24

91
Tree	byte
Code	byte
Distance : 24

92
Tree	that
Code	that
Distance : 24

93
Tree	testModules
Code	testModules
Distance : 24

94
Tree	expectedFeatures
Code	expectedFeatures
Distance : 24

95
Tree	h
Code	h
Distance : 24

96
Tree	HoldingAReference
Code	HoldingAReference
Distance : 24

97
Tree	objType
Code	objType
Distance : 24

98
Tree	Set
Code	Set
Distance : 24

99
Tree	TranslationTransform
Code	TranslationTransform
Distance : 24

100
Tree	TimeSeries
Code	TimeSeries
Distance : 24

101
Tree	while
Code	while
Distance : 24

102
Tree	ret
Code	ret
Distance : 24

103
Tree	assertEquals
Code	assertEquals
Distance : 24

104
Tree	test
Code	test
Distance : 24

105
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 24

106
Tree	List
Code	List
Distance : 24

107
Tree	Object
Code	Object
Distance : 24

108
Tree	testTypes
Code	testTypes
Distance : 24

109
Tree	Var
Code	Var
Distance : 24

110
Tree	reporter
Code	reporter
Distance : 24

111
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 24

112
Tree	separator
Code	separator
Distance : 24

113
Tree	this
Code	this
Distance : 23

114
Tree	MathUtils
Code	MathUtils
Distance : 24

115
Tree	MockControl
Code	MockControl
Distance : 24

116
Tree	s
Code	s
Distance : 24

117
Tree	YearMonthType
Code	YearMonthType
Distance : 24

118
Tree	n
Code	n
Distance : 24

119
Tree	key
Code	key
Distance : 24

120
Tree	Arrays
Code	Arrays
Distance : 24

121
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 24

122
Tree	parent
Code	parent
Distance : 24

123
Tree	random
Code	random
Distance : 24

124
Tree	private
Code	private
Distance : 24

125
Tree	i
Code	i
Distance : 24

126
Tree	int
Code	int
Distance : 23

127
Tree	FastMath
Code	FastMath
Distance : 24

128
Tree	distribution
Code	distribution
Distance : 24

129
Tree	x
Code	x
Distance : 24

130
Tree	iValues
Code	iValues
Distance : 24

131
Tree	new
Code	new
Distance : 24

132
Tree	-
Code	-
Distance : 23

133
Tree	if
Code	if
Distance : 24

134
Tree	Assert
Code	Assert
Distance : 24

135
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 23

136
Tree	t
Code	t
Distance : 24

137
Tree	Precision
Code	Precision
Distance : 24

138
Tree	Invocation
Code	Invocation
Distance : 24

139
Tree	public
Code	public
Distance : 24

140
Tree	TypeMismatch
Code	TypeMismatch
Distance : 24

141
Tree	Integer
Code	Integer
Distance : 24

142
Tree	crossP
Code	crossP
Distance : 24

143
Tree	MockUtil
Code	MockUtil
Distance : 24

144
Tree	for
Code	for
Distance : 24

145
Tree	k
Code	k
Distance : 24

146
Tree	T
Code	T
Distance : 24

147
Tree	MathArrays
Code	MathArrays
Distance : 24

148
Tree	scopeRoot
Code	scopeRoot
Distance : 24

149
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 24

150
Tree	dev
Code	dev
Distance : 24

151
Tree	checkRelative
Code	checkRelative
Distance : 24

152
Tree	sampleSize
Code	sampleSize
Distance : 24

153
Tree	checkArgument
Code	checkArgument
Distance : 24

154
Tree	System
Code	System
Distance : 24

155
Tree	abstract
Code	abstract
Distance : 24

156
Tree	IR
Code	IR
Distance : 24

157
Tree	v
Code	v
Distance : 23

158
Tree	scale
Code	scale
Distance : 24

159
Tree	inputLineLength
Code	inputLineLength
Distance : 24

160
Tree	bits
Code	bits
Distance : 24

161
Tree	value
Code	value
Distance : 24

162
Tree	assertClose
Code	assertClose
Distance : 24

163
Tree	testWarning
Code	testWarning
Distance : 24

164
Tree	assertChanges
Code	assertChanges
Distance : 24

165
Tree	Math
Code	Math
Distance : 24

166
Tree	assertError
Code	assertError
Distance : 24

167
Tree	Duration
Code	Duration
Distance : 24

168
Tree	msgNode
Code	msgNode
Distance : 24

169
Tree	parseWarning
Code	parseWarning
Distance : 24

170
Tree	accum3
Code	accum3
Distance : 24

171
Tree	{
Code	{
Distance : 24

172
Tree	DurationType
Code	DurationType
Distance : 24

173
Tree	logBeta
Code	logBeta
Distance : 24

174
Tree	trial
Code	trial
Distance : 24

175
Tree	minadj
Code	minadj
Distance : 24

176
Tree	shift
Code	shift
Distance : 24

177
Tree	assumeTrue
Code	assumeTrue
Distance : 24

178
Tree	handleGet
Code	handleGet
Distance : 24

179
Tree	final
Code	final
Distance : 24

180
Tree	JSType
Code	JSType
Distance : 24

181
Tree	NodeUtil
Code	NodeUtil
Distance : 24

182
Tree	YearWeekType
Code	YearWeekType
Distance : 24

183
Tree	+=
Code	+=
Distance : 24

184
Tree	grandparent
Code	grandparent
Distance : 24

185
Tree	DateTimeParser
Code	DateTimeParser
Distance : 24

186
Tree	m
Code	m
Distance : 24

187
Tree	clazz
Code	clazz
Distance : 24

188
Tree	TransformUtils
Code	TransformUtils
Distance : 24

189
Tree	TestEmptySubObject
Code	TestEmptySubObject
Distance : 24

190
Tree	stub
Code	stub
Distance : 24

191
Tree	[
Code	[
Distance : 24

192
Tree	Args
Code	Args
Distance : 24

193
Tree	N
Code	N
Distance : 24

194
Tree	compiler
Code	compiler
Distance : 24

195
Tree	mockitoStubber
Code	mockitoStubber
Distance : 24

196
Tree	j
Code	j
Distance : 24

197
Tree	entry
Code	entry
Distance : 24

198
Tree	synchronized
Code	synchronized
Distance : 24

199
Tree	double
Code	double
Distance : 24

========================================================================


========================================================================
Example Number: 2
Parent Code is: 
{ super ( paint , stroke , paint , stroke , alpha ) ; this . value = value ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( paint , stroke , outlinePaint , outlineStroke , alpha ) ; this . value = value ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=alpha}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=outlinePaint}) (234{val=,}) (800{val=outlineStroke}) (234{val=,}) (800{val=alpha}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/20/parent/source_org_jfree_chart_plot_ValueMarker.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 20

1
Tree	argument
Code	argument
Distance : 21

2
Tree	separator
Code	separator
Distance : 21

3
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 21

4
Tree	cause
Code	cause
Distance : 21

5
Tree	numerator
Code	numerator
Distance : 21

6
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 21

7
Tree	Result
Code	Result
Distance : 21

8
Tree	)
Code	)
Distance : 20

9
Tree	checkNotNull
Code	checkNotNull
Distance : 21

10
Tree	scale
Code	scale
Distance : 21

11
Tree	source
Code	source
Distance : 21

12
Tree	Gamma
Code	Gamma
Distance : 21

13
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 21

14
Tree	mapToSelf
Code	mapToSelf
Distance : 21

15
Tree	root
Code	root
Distance : 21

16
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 21

17
Tree	matcher
Code	matcher
Distance : 21

18
Tree	seed
Code	seed
Distance : 21

19
Tree	abstract
Code	abstract
Distance : 21

20
Tree	reportAnd
Code	reportAnd
Distance : 21

21
Tree	Answer
Code	Answer
Distance : 21

22
Tree	TranslationTransform
Code	TranslationTransform
Distance : 21

23
Tree	answer
Code	answer
Distance : 21

24
Tree	rhs
Code	rhs
Distance : 21

25
Tree	VerificationModeImpl
Code	VerificationModeImpl
Distance : 21

26
Tree	Mockito
Code	Mockito
Distance : 21

27
Tree	doThrow
Code	doThrow
Distance : 21

28
Tree	mock
Code	mock
Distance : 21

29
Tree	removeLast
Code	removeLast
Distance : 21

30
Tree	fail
Code	fail
Distance : 21

31
Tree	validateNodeType
Code	validateNodeType
Distance : 21

32
Tree	addAnswer
Code	addAnswer
Distance : 21

33
Tree	anyObject
Code	anyObject
Distance : 21

34
Tree	text
Code	text
Distance : 21

35
Tree	times
Code	times
Distance : 21

36
Tree	init
Code	init
Distance : 21

37
Tree	LogBeta
Code	LogBeta
Distance : 21

38
Tree	LanguageMode.ECMASCRIPT_2015
Code	LanguageMode.ECMASCRIPT_2015
Distance : 21

39
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 21

40
Tree	continue;
Code	continue;
Distance : 21

41
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 21

42
Tree	chronology
Code	chronology
Distance : 21

43
Tree	last
Code	last
Distance : 21

44
Tree	N
Code	N
Distance : 21

45
Tree	throws
Code	throws
Distance : 21

46
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 21

47
Tree	checkInitialize
Code	checkInitialize
Distance : 21

48
Tree	iStartMillis
Code	iStartMillis
Distance : 21

49
Tree	TypeInferenceMode.BOTH
Code	TypeInferenceMode.BOTH
Distance : 21

50
Tree	period
Code	period
Distance : 21

51
Tree	i
Code	i
Distance : 21

52
Tree	[]
Code	[]
Distance : 21

53
Tree	anchor
Code	anchor
Distance : 21

54
Tree	registeredInvocations
Code	registeredInvocations
Distance : 21

55
Tree	triple
Code	triple
Distance : 21

56
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 21

57
Tree	js
Code	js
Distance : 21

58
Tree	putBooleanProp
Code	putBooleanProp
Distance : 21

59
Tree	TestSubObject
Code	TestSubObject
Distance : 21

60
Tree	data
Code	data
Distance : 21

61
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 21

62
Tree	setEndMillis
Code	setEndMillis
Distance : 21

63
Tree	font
Code	font
Distance : 21

64
Tree	FastMath
Code	FastMath
Distance : 21

65
Tree	setShapesVisible
Code	setShapesVisible
Distance : 21

66
Tree	ISO8601TimeZoneStrategy
Code	ISO8601TimeZoneStrategy
Distance : 21

67
Tree	PropListItem
Code	PropListItem
Distance : 21

68
Tree	Foo
Code	Foo
Distance : 21

69
Tree	S
Code	S
Distance : 21

70
Tree	sampleStats
Code	sampleStats
Distance : 21

71
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 21

72
Tree	LocalizedFormats.CANNOT_PARSE
Code	LocalizedFormats.CANNOT_PARSE
Distance : 21

73
Tree	LanguageMode.ECMASCRIPT5
Code	LanguageMode.ECMASCRIPT5
Distance : 21

74
Tree	flag
Code	flag
Distance : 21

75
Tree	two
Code	two
Distance : 21

76
Tree	gamma
Code	gamma
Distance : 21

77
Tree	printer
Code	printer
Distance : 21

78
Tree	setMockitoInterceptor
Code	setMockitoInterceptor
Distance : 21

79
Tree	typeCheck
Code	typeCheck
Distance : 21

80
Tree	doNothing
Code	doNothing
Distance : 21

81
Tree	stubbed
Code	stubbed
Distance : 21

82
Tree	parametersNames
Code	parametersNames
Distance : 21

83
Tree	createRegression
Code	createRegression
Distance : 21

84
Tree	mean
Code	mean
Distance : 21

85
Tree	DateTimeUtils
Code	DateTimeUtils
Distance : 21

86
Tree	stroke
Code	stroke
Distance : 20

87
Tree	startParams
Code	startParams
Distance : 21

88
Tree	report
Code	report
Distance : 21

89
Tree	assertEquals
Code	assertEquals
Distance : 21

90
Tree	doReturn
Code	doReturn
Distance : 21

91
Tree	copyIn
Code	copyIn
Distance : 21

92
Tree	iEndMillis
Code	iEndMillis
Distance : 21

93
Tree	test
Code	test
Distance : 21

94
Tree	NodeTraversal
Code	NodeTraversal
Distance : 21

95
Tree	zFormat
Code	zFormat
Distance : 21

96
Tree	reportNot
Code	reportNot
Distance : 21

97
Tree	error
Code	error
Distance : 21

98
Tree	setSeedInternal
Code	setSeedInternal
Distance : 21

99
Tree	Rectangle2D
Code	Rectangle2D
Distance : 21

100
Tree	ParamChecks
Code	ParamChecks
Distance : 21

101
Tree	
Code	
Distance : 21

102
Tree	testError
Code	testError
Distance : 21

103
Tree	logBeta
Code	logBeta
Distance : 21

104
Tree	(
Code	(
Distance : 20

105
Tree	out.value
Code	out.value
Distance : 21

106
Tree	public
Code	public
Distance : 21

107
Tree	catch
Code	catch
Distance : 21

108
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 21

109
Tree	SerialUtils
Code	SerialUtils
Distance : 21

110
Tree	checkArgument
Code	checkArgument
Distance : 21

111
Tree	T
Code	T
Distance : 21

112
Tree	paint
Code	paint
Distance : 20

113
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 21

114
Tree	ret
Code	ret
Distance : 21

115
Tree	float
Code	float
Distance : 21

116
Tree	extends
Code	extends
Distance : 21

117
Tree	testModules
Code	testModules
Distance : 21

118
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 21

119
Tree	null
Code	null
Distance : 21

120
Tree	LastArguments
Code	LastArguments
Distance : 21

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 21

122
Tree	break;
Code	break;
Distance : 21

123
Tree	random
Code	random
Distance : 21

124
Tree	Paint
Code	Paint
Distance : 21

125
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 21

126
Tree	protected
Code	protected
Distance : 21

127
Tree	for
Code	for
Distance : 21

128
Tree	mockitoStubber
Code	mockitoStubber
Distance : 21

129
Tree	@
Code	@
Distance : 21

130
Tree	try
Code	try
Distance : 21

131
Tree	static
Code	static
Distance : 21

132
Tree	super();
Code	super();
Distance : 21

133
Tree	if
Code	if
Distance : 21

134
Tree	:
Code	:
Distance : 21

135
Tree	{}
Code	{}
Distance : 21

136
Tree	verify
Code	verify
Distance : 21

137
Tree	AbstractScope
Code	AbstractScope
Distance : 21

138
Tree	final
Code	final
Distance : 21

139
Tree	<=
Code	<=
Distance : 21

140
Tree	scriptRoot
Code	scriptRoot
Distance : 21

141
Tree	new
Code	new
Distance : 21

142
Tree	value
Code	value
Distance : 20

143
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 21

144
Tree	]
Code	]
Distance : 21

145
Tree	++
Code	++
Distance : 21

146
Tree	&&
Code	&&
Distance : 21

147
Tree	IMethods
Code	IMethods
Distance : 21

148
Tree	node
Code	node
Distance : 21

149
Tree	throwable
Code	throwable
Distance : 21

150
Tree	doAnswer
Code	doAnswer
Distance : 21

151
Tree	getEndMillis
Code	getEndMillis
Distance : 21

152
Tree	j
Code	j
Distance : 21

153
Tree	&
Code	&
Distance : 21

154
Tree	()
Code	()
Distance : 21

155
Tree	distribution
Code	distribution
Distance : 21

156
Tree	iValues
Code	iValues
Distance : 21

157
Tree	synchronized
Code	synchronized
Distance : 21

158
Tree	key
Code	key
Distance : 21

159
Tree	return
Code	return
Distance : 21

160
Tree	Array
Code	Array
Distance : 21

161
Tree	setField
Code	setField
Distance : 21

162
Tree	returnChar
Code	returnChar
Distance : 21

163
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 21

164
Tree	RenameLabels
Code	RenameLabels
Distance : 21

165
Tree	traversal
Code	traversal
Distance : 21

166
Tree	this
Code	this
Distance : 20

167
Tree	testTypes
Code	testTypes
Distance : 21

168
Tree	long
Code	long
Distance : 21

169
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 21

170
Tree	notNull
Code	notNull
Distance : 21

171
Tree	getLastArguments
Code	getLastArguments
Distance : 21

172
Tree	setStartMillis
Code	setStartMillis
Distance : 21

173
Tree	k
Code	k
Distance : 21

174
Tree	stream
Code	stream
Distance : 21

175
Tree	fn
Code	fn
Distance : 21

176
Tree	position
Code	position
Distance : 21

177
Tree	+=
Code	+=
Distance : 21

178
Tree	;
Code	;
Distance : 20

179
Tree	CharSequence
Code	CharSequence
Distance : 21

180
Tree	*
Code	*
Distance : 21

181
Tree	Args
Code	Args
Distance : 21

182
Tree	messageContains
Code	messageContains
Distance : 21

183
Tree	strictly
Code	strictly
Distance : 21

184
Tree	fieldType
Code	fieldType
Distance : 21

185
Tree	stubber
Code	stubber
Distance : 21

186
Tree	ComposableFunction.CEIL
Code	ComposableFunction.CEIL
Distance : 21

187
Tree	pow
Code	pow
Distance : 21

188
Tree	setEntry
Code	setEntry
Distance : 21

189
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 21

190
Tree	returnZero
Code	returnZero
Distance : 21

191
Tree	newValues
Code	newValues
Distance : 21

192
Tree	path
Code	path
Distance : 21

193
Tree	do
Code	do
Distance : 21

194
Tree	-
Code	-
Distance : 21

195
Tree	stub
Code	stub
Distance : 21

196
Tree	checkState
Code	checkState
Distance : 21

197
Tree	FieldUtils
Code	FieldUtils
Distance : 21

198
Tree	index
Code	index
Distance : 21

199
Tree	private
Code	private
Distance : 21

========================================================================


========================================================================
Example Number: 3
Parent Code is: 
if ( index < NUMBER_CONSTANT ) { return; }
-------------------------------------------------------------------------------
Child code is: 
if ( index < NUMBER_CONSTANT ) { throw new UnknownKeyException ( STRING_CONSTANT + key + STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnknownKeyException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=key}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/18/parent/source_org_jfree_data_DefaultKeyedValues.java
-------------------------------------------------------------------------------
Edit Distance : 11
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) o
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) o
Distance : 13

1
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) throws
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) throws
Distance : 15

2
Tree	if ( ( BaseGJChronology ) >= key ) {}
Code	if ( ( BaseGJChronology ) >= key ) {}
Distance : 14

3
Tree	if ( index && class > NUMBER_CONSTANT ) /
Code	if ( index && class > NUMBER_CONSTANT ) /
Distance : 15

4
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) ClassNotFoundException
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) ClassNotFoundException
Distance : 13

5
Tree	if ( counts && [] > NUMBER_CONSTANT ) {}
Code	if ( counts && [] > NUMBER_CONSTANT ) {}
Distance : 16

6
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) sigma
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) sigma
Distance : 13

7
Tree	if ( index && += > NUMBER_CONSTANT ) protected
Code	if ( index && += > NUMBER_CONSTANT ) protected
Distance : 15

8
Tree	if ( System && += > NUMBER_CONSTANT ) <=
Code	if ( System && += > NUMBER_CONSTANT ) <=
Distance : 16

9
Tree	if ( ( byte ) >= key ) <=
Code	if ( ( byte ) >= key ) <=
Distance : 14

10
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) other.value
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) other.value
Distance : 13

11
Tree	if ( ( StackTraceElement ) >= key ) <=
Code	if ( ( StackTraceElement ) >= key ) <=
Distance : 14

12
Tree	if ( ( Range ) >= key ) ++
Code	if ( ( Range ) >= key ) ++
Distance : 14

13
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) arguments
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) arguments
Distance : 13

14
Tree	if ( ( T ) >= key ) /
Code	if ( ( T ) >= key ) /
Distance : 14

15
Tree	if ( setValues && [] > NUMBER_CONSTANT ) {}
Code	if ( setValues && [] > NUMBER_CONSTANT ) {}
Distance : 16

16
Tree	if ( ( -= ) >= key ) {}
Code	if ( ( -= ) >= key ) {}
Distance : 14

17
Tree	if ( ( Throwable ) >= key ) <=
Code	if ( ( Throwable ) >= key ) <=
Distance : 14

18
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) anchorPoint
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) anchorPoint
Distance : 13

19
Tree	if ( ( MockitoMatcher ) >= key ) ++
Code	if ( ( MockitoMatcher ) >= key ) ++
Distance : 14

20
Tree	if ( ( dateStyle ) >= key ) <=
Code	if ( ( dateStyle ) >= key ) <=
Distance : 14

21
Tree	if ( index && += > NUMBER_CONSTANT ) *=
Code	if ( index && += > NUMBER_CONSTANT ) *=
Distance : 15

22
Tree	if ( ( mocks.length ) >= key ) {}
Code	if ( ( mocks.length ) >= key ) {}
Distance : 14

23
Tree	if ( ( ! ) >= key ) <=
Code	if ( ( ! ) >= key ) <=
Distance : 14

24
Tree	if ( ( Double ) >= key ) {}
Code	if ( ( Double ) >= key ) {}
Distance : 14

25
Tree	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) {}
Code	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) {}
Distance : 15

26
Tree	if ( index && else > NUMBER_CONSTANT ) {}
Code	if ( index && else > NUMBER_CONSTANT ) {}
Distance : 15

27
Tree	if ( index / index > NUMBER_CONSTANT ) %
Code	if ( index / index > NUMBER_CONSTANT ) %
Distance : 15

28
Tree	if ( ( final ) >= key ) %
Code	if ( ( final ) >= key ) %
Distance : 14

29
Tree	if ( ( final ) >= key ) +=
Code	if ( ( final ) >= key ) +=
Distance : 14

30
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) System
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) System
Distance : 13

31
Tree	if ( ( while ) >= key ) {}
Code	if ( ( while ) >= key ) {}
Distance : 14

32
Tree	if ( ( CHAR_CONS ) >= key ) %
Code	if ( ( CHAR_CONS ) >= key ) %
Distance : 14

33
Tree	if ( xx && [] > NUMBER_CONSTANT ) {}
Code	if ( xx && [] > NUMBER_CONSTANT ) {}
Distance : 16

34
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) :
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) :
Distance : 15

35
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) Locale
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) Locale
Distance : 13

36
Tree	if ( ( ObjectUtils ) >= key ) <=
Code	if ( ( ObjectUtils ) >= key ) <=
Distance : 14

37
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) assignNode
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) assignNode
Distance : 13

38
Tree	if ( ( continue; ) >= key ) {}
Code	if ( ( continue; ) >= key ) {}
Distance : 14

39
Tree	if ( DeprecatedOngoingStubbing && [] > NUMBER_CONSTANT ) {}
Code	if ( DeprecatedOngoingStubbing && [] > NUMBER_CONSTANT ) {}
Distance : 16

40
Tree	if ( ( d.length ) >= key ) {}
Code	if ( ( d.length ) >= key ) {}
Distance : 14

41
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) isEquals
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) isEquals
Distance : 13

42
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) FieldUtils
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) FieldUtils
Distance : 13

43
Tree	if ( ( CHAR_CONS ) >= index ) {}
Code	if ( ( CHAR_CONS ) >= index ) {}
Distance : 15

44
Tree	if ( ( dateStyle ) >= key ) {}
Code	if ( ( dateStyle ) >= key ) {}
Distance : 14

45
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) listener
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) listener
Distance : 13

46
Tree	if ( ( MockControl ) >= key ) <=
Code	if ( ( MockControl ) >= key ) <=
Distance : 14

47
Tree	if ( ( long ) >= key ) {}
Code	if ( ( long ) >= key ) {}
Distance : 14

48
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) VerificationMode
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) VerificationMode
Distance : 13

49
Tree	if ( ( &= ) >= key ) <=
Code	if ( ( &= ) >= key ) <=
Distance : 14

50
Tree	if ( ( Range ) >= key ) /
Code	if ( ( Range ) >= key ) /
Distance : 14

51
Tree	if ( ( BaseGJChronology ) >= key ) {}
Code	if ( ( BaseGJChronology ) >= key ) {}
Distance : 14

52
Tree	if ( ( ShapeUtils ) >= key ) <=
Code	if ( ( ShapeUtils ) >= key ) <=
Distance : 14

53
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) blind
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) blind
Distance : 13

54
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) char
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) char
Distance : 13

55
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) binomialCoefficient
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) binomialCoefficient
Distance : 13

56
Tree	if ( ( MockitoMatcher ) >= key ) /
Code	if ( ( MockitoMatcher ) >= key ) /
Distance : 14

57
Tree	if ( ( byte ) >= key ) <=
Code	if ( ( byte ) >= key ) <=
Distance : 14

58
Tree	if ( ( ReadablePartial ) >= key ) <=
Code	if ( ( ReadablePartial ) >= key ) <=
Distance : 14

59
Tree	if ( ( CharSequence ) >= index ) <=
Code	if ( ( CharSequence ) >= index ) <=
Distance : 15

60
Tree	if ( index ( >= ) ]
Code	if ( index ( >= ) ]
Distance : 14

61
Tree	if ( ( StackTraceElement ) >= key ) <=
Code	if ( ( StackTraceElement ) >= key ) <=
Distance : 14

62
Tree	if ( index NUMBER_CONSTANT >= ) &
Code	if ( index NUMBER_CONSTANT >= ) &
Distance : 14

63
Tree	if ( index < == ) <=
Code	if ( index < == ) <=
Distance : 14

64
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) sampleSize
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) sampleSize
Distance : 13

65
Tree	if ( ( Range ) >= key ) ++
Code	if ( ( Range ) >= key ) ++
Distance : 14

66
Tree	if ( ( ObjectUtils ) >= key ) {}
Code	if ( ( ObjectUtils ) >= key ) {}
Distance : 14

67
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) rhs.isNaN
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) rhs.isNaN
Distance : 13

68
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) extends
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) extends
Distance : 15

69
Tree	if ( ( CharSequence ) >= key ) &
Code	if ( ( CharSequence ) >= key ) &
Distance : 14

70
Tree	if ( ( -= ) >= key ) {}
Code	if ( ( -= ) >= key ) {}
Distance : 14

71
Tree	if ( ( Throwable ) >= key ) <=
Code	if ( ( Throwable ) >= key ) <=
Distance : 14

72
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) RealFieldElement
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) RealFieldElement
Distance : 13

73
Tree	if ( ( MockitoMatcher ) >= key ) ++
Code	if ( ( MockitoMatcher ) >= key ) ++
Distance : 14

74
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) last
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) last
Distance : 13

75
Tree	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) numerator
Code	if ( index + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT + STRING_CONSTANT > NUMBER_CONSTANT ) numerator
Distance : 13

76
Tree	if ( ( ! ) >= key ) <=
Code	if ( ( ! ) >= key ) <=
Distance : 14

77
Tree	if ( ( CharSequence ) >= key ) ]
Code	if ( ( CharSequence ) >= key ) ]
Distance : 14

78
Tree	if ( ( true ) >= index ) <=
Code	if ( ( true ) >= index ) <=
Distance : 15

79
Tree	if ( ( true ) >= key ) &
Code	if ( ( true ) >= key ) &
Distance : 14

80
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) /=
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) /=
Distance : 15

81
Tree	if ( index * index * throw > NUMBER_CONSTANT ) <=
Code	if ( index * index * throw > NUMBER_CONSTANT ) <=
Distance : 14

82
Tree	if ( ( final ) >= key ) +=
Code	if ( ( final ) >= key ) +=
Distance : 14

83
Tree	if ( ( CHAR_CONS ) >= key ) %
Code	if ( ( CHAR_CONS ) >= key ) %
Distance : 14

84
Tree	if ( ( T ) >= index ) <=
Code	if ( ( T ) >= index ) <=
Distance : 15

85
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) %
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) %
Distance : 15

86
Tree	if ( ( StackTraceElement ) >= key ) {}
Code	if ( ( StackTraceElement ) >= key ) {}
Distance : 14

87
Tree	if ( index < ? ) &
Code	if ( index < ? ) &
Distance : 14

88
Tree	if ( ( byte ) >= key ) {}
Code	if ( ( byte ) >= key ) {}
Distance : 14

89
Tree	if ( ( Factory ) >= key ) <=
Code	if ( ( Factory ) >= key ) <=
Distance : 14

90
Tree	if ( index / index > NUMBER_CONSTANT ) throws
Code	if ( index / index > NUMBER_CONSTANT ) throws
Distance : 15

91
Tree	if ( index < ? ) ]
Code	if ( index < ? ) ]
Distance : 14

92
Tree	if ( ( DurationField ) >= key ) <=
Code	if ( ( DurationField ) >= key ) <=
Distance : 14

93
Tree	if ( ( true ) >= key ) ]
Code	if ( ( true ) >= key ) ]
Distance : 14

94
Tree	if ( ( NodeUtil ) >= key ) <=
Code	if ( ( NodeUtil ) >= key ) <=
Distance : 14

95
Tree	if ( ( CHAR_CONS ) >= index ) {}
Code	if ( ( CHAR_CONS ) >= index ) {}
Distance : 15

96
Tree	if ( ( dateStyle ) >= key ) {}
Code	if ( ( dateStyle ) >= key ) {}
Distance : 14

97
Tree	if ( ( MockControl ) >= key ) <=
Code	if ( ( MockControl ) >= key ) <=
Distance : 14

98
Tree	if ( ( MockCreationSettings ) >= key ) <=
Code	if ( ( MockCreationSettings ) >= key ) <=
Distance : 14

99
Tree	if ( index * index * false > NUMBER_CONSTANT ) ]
Code	if ( index * index * false > NUMBER_CONSTANT ) ]
Distance : 15

100
Tree	if ( index / index > NUMBER_CONSTANT ) *=
Code	if ( index / index > NUMBER_CONSTANT ) *=
Distance : 15

101
Tree	if ( index < /= ) {}
Code	if ( index < /= ) {}
Distance : 14

102
Tree	if ( ( &= ) >= key ) <=
Code	if ( ( &= ) >= key ) <=
Distance : 14

103
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) try
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) try
Distance : 15

104
Tree	if ( index * index * false > NUMBER_CONSTANT ) &
Code	if ( index * index * false > NUMBER_CONSTANT ) &
Distance : 15

105
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) CHAR_CONS
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) CHAR_CONS
Distance : 15

106
Tree	if ( ( CHAR_CONS ) >= key ) +=
Code	if ( ( CHAR_CONS ) >= key ) +=
Distance : 14

107
Tree	if ( index < ? ) /=
Code	if ( index < ? ) /=
Distance : 14

108
Tree	if ( index * index * /= > NUMBER_CONSTANT ) &
Code	if ( index * index * /= > NUMBER_CONSTANT ) &
Distance : 15

109
Tree	if ( index * index * case > NUMBER_CONSTANT ) <=
Code	if ( index * index * case > NUMBER_CONSTANT ) <=
Distance : 15

110
Tree	if ( index * index * /= > NUMBER_CONSTANT ) ]
Code	if ( index * index * /= > NUMBER_CONSTANT ) ]
Distance : 15

111
Tree	if ( index . key ( key , false ) > NUMBER_CONSTANT ) {}
Code	if ( index . key ( key , false ) > NUMBER_CONSTANT ) {}
Distance : 15

112
Tree	if ( ( Range ) >= key ) /
Code	if ( ( Range ) >= key ) /
Distance : 14

113
Tree	if ( ( final ) >= key ) throws
Code	if ( ( final ) >= key ) throws
Distance : 14

114
Tree	if ( index * index * assert > NUMBER_CONSTANT ) {}
Code	if ( index * index * assert > NUMBER_CONSTANT ) {}
Distance : 15

115
Tree	if ( index < >= ) *=
Code	if ( index < >= ) *=
Distance : 14

116
Tree	if ( index < >= ) ?
Code	if ( index < >= ) ?
Distance : 14

117
Tree	if ( ( ShapeUtils ) >= key ) <=
Code	if ( ( ShapeUtils ) >= key ) <=
Distance : 14

118
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) --
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) --
Distance : 15

119
Tree	if ( index * index * else > NUMBER_CONSTANT ) private
Code	if ( index * index * else > NUMBER_CONSTANT ) private
Distance : 15

120
Tree	if ( index / index > NUMBER_CONSTANT ) !=
Code	if ( index / index > NUMBER_CONSTANT ) !=
Distance : 15

121
Tree	if ( index * index * return; > NUMBER_CONSTANT ) private
Code	if ( index * index * return; > NUMBER_CONSTANT ) private
Distance : 15

122
Tree	if ( ( Cartesian2D ) >= key ) <=
Code	if ( ( Cartesian2D ) >= key ) <=
Distance : 14

123
Tree	if ( ( Throwable ) >= key ) {}
Code	if ( ( Throwable ) >= key ) {}
Distance : 14

124
Tree	if ( index < [] ) ]
Code	if ( index < [] ) ]
Distance : 14

125
Tree	if ( index . index ( index , true ) > NUMBER_CONSTANT ) throws
Code	if ( index . index ( index , true ) > NUMBER_CONSTANT ) throws
Distance : 15

126
Tree	if ( ( T ) >= key ) &
Code	if ( ( T ) >= key ) &
Distance : 14

127
Tree	if ( index * index * key > NUMBER_CONSTANT ) {}
Code	if ( index * index * key > NUMBER_CONSTANT ) {}
Distance : 14

128
Tree	if ( ( T ) >= key ) ]
Code	if ( ( T ) >= key ) ]
Distance : 14

129
Tree	if ( index . key ( index , true ) > NUMBER_CONSTANT ) private
Code	if ( index . key ( index , true ) > NUMBER_CONSTANT ) private
Distance : 15

130
Tree	if ( index < ? ) *=
Code	if ( index < ? ) *=
Distance : 14

131
Tree	if ( ( char ) >= key ) <=
Code	if ( ( char ) >= key ) <=
Distance : 14

132
Tree	if ( ( MockitoMatcher ) >= key ) /
Code	if ( ( MockitoMatcher ) >= key ) /
Distance : 14

133
Tree	if ( ( ! ) >= key ) {}
Code	if ( ( ! ) >= key ) {}
Distance : 14

134
Tree	if ( index * index * break; > NUMBER_CONSTANT ) {}
Code	if ( index * index * break; > NUMBER_CONSTANT ) {}
Distance : 15

135
Tree	if ( ( TypeVarBoundedType ) >= key ) <=
Code	if ( ( TypeVarBoundedType ) >= key ) <=
Distance : 14

136
Tree	if ( index * index * throw > NUMBER_CONSTANT ) ?
Code	if ( index * index * throw > NUMBER_CONSTANT ) ?
Distance : 14

137
Tree	if ( index < [] ) &
Code	if ( index < [] ) &
Distance : 14

138
Tree	if ( ( ReadablePartial ) >= key ) <=
Code	if ( ( ReadablePartial ) >= key ) <=
Distance : 14

139
Tree	if ( index * index * return; > NUMBER_CONSTANT ) public
Code	if ( index * index * return; > NUMBER_CONSTANT ) public
Distance : 15

140
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) &=
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) &=
Distance : 15

141
Tree	if ( ( SparseFieldVector ) >= key ) <=
Code	if ( ( SparseFieldVector ) >= key ) <=
Distance : 14

142
Tree	if ( index * index * Args > NUMBER_CONSTANT ) {}
Code	if ( index * index * Args > NUMBER_CONSTANT ) {}
Distance : 15

143
Tree	if ( index * index * else > NUMBER_CONSTANT ) public
Code	if ( index * index * else > NUMBER_CONSTANT ) public
Distance : 15

144
Tree	if ( index / index > NUMBER_CONSTANT ) -=
Code	if ( index / index > NUMBER_CONSTANT ) -=
Distance : 15

145
Tree	if ( index * index * CHAR_CONS > NUMBER_CONSTANT ) +=
Code	if ( index * index * CHAR_CONS > NUMBER_CONSTANT ) +=
Distance : 15

146
Tree	if ( index < ? ) ?
Code	if ( index < ? ) ?
Distance : 14

147
Tree	if ( index . abs ( index , NUMBER_CONSTANT , false ) > NUMBER_CONSTANT ) {}
Code	if ( index . abs ( index , NUMBER_CONSTANT , false ) > NUMBER_CONSTANT ) {}
Distance : 15

148
Tree	if ( index * index * CHAR_CONS > NUMBER_CONSTANT ) >=
Code	if ( index * index * CHAR_CONS > NUMBER_CONSTANT ) >=
Distance : 15

149
Tree	if ( ( CharSequence ) >= index ) <=
Code	if ( ( CharSequence ) >= index ) <=
Distance : 15

150
Tree	if ( index / key > NUMBER_CONSTANT ) +=
Code	if ( index / key > NUMBER_CONSTANT ) +=
Distance : 14

151
Tree	if ( index . index ( index , true ) > NUMBER_CONSTANT ) extends
Code	if ( index . index ( index , true ) > NUMBER_CONSTANT ) extends
Distance : 15

152
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) &&
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) &&
Distance : 15

153
Tree	if ( ( ObjectUtils ) >= key ) {}
Code	if ( ( ObjectUtils ) >= key ) {}
Distance : 14

154
Tree	if ( index / key > NUMBER_CONSTANT ) /
Code	if ( index / key > NUMBER_CONSTANT ) /
Distance : 14

155
Tree	if ( getValue ( index , NUMBER_CONSTANT , Boolean.TYPE , false , false , index ) > CHAR_CONS ) <=
Code	if ( getValue ( index , NUMBER_CONSTANT , Boolean.TYPE , false , false , index ) > CHAR_CONS ) <=
Distance : 16

156
Tree	if ( index < ^ ) <=
Code	if ( index < ^ ) <=
Distance : 14

157
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > dataArea ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > dataArea ) <=
Distance : 15

158
Tree	if ( index < >= ) protected
Code	if ( index < >= ) protected
Distance : 14

159
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > InvalidMatrixException ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > InvalidMatrixException ) <=
Distance : 15

160
Tree	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) ]
Code	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) ]
Distance : 15

161
Tree	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) &
Code	if ( index * index * shouldPreserve > NUMBER_CONSTANT ) &
Distance : 15

162
Tree	if ( index * index * /= > NUMBER_CONSTANT ) +=
Code	if ( index * index * /= > NUMBER_CONSTANT ) +=
Distance : 15

163
Tree	if ( index * index * false > NUMBER_CONSTANT ) >=
Code	if ( index * index * false > NUMBER_CONSTANT ) >=
Distance : 15

164
Tree	if ( LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE == NUMBER_CONSTANT > NUMBER_CONSTANT ) {}
Code	if ( LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE == NUMBER_CONSTANT > NUMBER_CONSTANT ) {}
Distance : 15

165
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , shouldPreserve ) > assert ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , shouldPreserve ) > assert ) <=
Distance : 15

166
Tree	if ( index * index * throw > NUMBER_CONSTANT ) private
Code	if ( index * index * throw > NUMBER_CONSTANT ) private
Distance : 14

167
Tree	if ( index . index ( index , true ) > NUMBER_CONSTANT ) %
Code	if ( index . index ( index , true ) > NUMBER_CONSTANT ) %
Distance : 15

168
Tree	if ( index * index * false > NUMBER_CONSTANT ) +=
Code	if ( index * index * false > NUMBER_CONSTANT ) +=
Distance : 15

169
Tree	if ( index * index * anchor > NUMBER_CONSTANT ) {}
Code	if ( index * index * anchor > NUMBER_CONSTANT ) {}
Distance : 15

170
Tree	if ( ( CharSequence ) >= key ) &
Code	if ( ( CharSequence ) >= key ) &
Distance : 14

171
Tree	if ( index * index * /= > NUMBER_CONSTANT ) >=
Code	if ( index * index * /= > NUMBER_CONSTANT ) >=
Distance : 15

172
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , x1 ) > throw ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , x1 ) > throw ) <=
Distance : 15

173
Tree	if ( index < ? ) protected
Code	if ( index < ? ) protected
Distance : 14

174
Tree	if ( index == index > NUMBER_CONSTANT ) <=
Code	if ( index == index > NUMBER_CONSTANT ) <=
Distance : 15

175
Tree	if ( index * index * throw > NUMBER_CONSTANT ) public
Code	if ( index * index * throw > NUMBER_CONSTANT ) public
Distance : 14

176
Tree	if ( LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE == NUMBER_CONSTANT > NUMBER_CONSTANT ) +=
Code	if ( LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE == NUMBER_CONSTANT > NUMBER_CONSTANT ) +=
Distance : 15

177
Tree	if ( index . key ( index , true ) > NUMBER_CONSTANT ) *
Code	if ( index . key ( index , true ) > NUMBER_CONSTANT ) *
Distance : 15

178
Tree	if ( index * index * <= > NUMBER_CONSTANT ) {}
Code	if ( index * index * <= > NUMBER_CONSTANT ) {}
Distance : 15

179
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , shouldPreserve ) > throw ) {}
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , shouldPreserve ) > throw ) {}
Distance : 15

180
Tree	if ( index < >= ) ^
Code	if ( index < >= ) ^
Distance : 14

181
Tree	if ( Integer.MAX_VALUE == NUMBER_CONSTANT > NUMBER_CONSTANT ) {}
Code	if ( Integer.MAX_VALUE == NUMBER_CONSTANT > NUMBER_CONSTANT ) {}
Distance : 15

182
Tree	if ( index < != ) <=
Code	if ( index < != ) <=
Distance : 14

183
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > NaN ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > NaN ) <=
Distance : 15

184
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , clazz ) > throw ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , clazz ) > throw ) <=
Distance : 15

185
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > yval.length ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > yval.length ) <=
Distance : 15

186
Tree	if ( index < ++ ) <=
Code	if ( index < ++ ) <=
Distance : 14

187
Tree	if ( index / key > NUMBER_CONSTANT ) >=
Code	if ( index / key > NUMBER_CONSTANT ) >=
Distance : 14

188
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , step ) > CHAR_CONS ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , step ) > CHAR_CONS ) <=
Distance : 15

189
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > ClassNotFoundException ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > ClassNotFoundException ) <=
Distance : 15

190
Tree	if ( index * index * else > NUMBER_CONSTANT ) ++
Code	if ( index * index * else > NUMBER_CONSTANT ) ++
Distance : 15

191
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) -=
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) -=
Distance : 15

192
Tree	if ( index . index ( index , false ) > NUMBER_CONSTANT ) protected
Code	if ( index . index ( index , false ) > NUMBER_CONSTANT ) protected
Distance : 15

193
Tree	if ( index . key ( index , false ) > NUMBER_CONSTANT ) []
Code	if ( index . key ( index , false ) > NUMBER_CONSTANT ) []
Distance : 15

194
Tree	if ( index * index * += > NUMBER_CONSTANT ) {}
Code	if ( index * index * += > NUMBER_CONSTANT ) {}
Distance : 15

195
Tree	if ( getValue ( index , NUMBER_CONSTANT , CharUtils.NUL , false , false , index ) > /= ) <=
Code	if ( getValue ( index , NUMBER_CONSTANT , CharUtils.NUL , false , false , index ) > /= ) <=
Distance : 16

196
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > coeff1 ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , return; ) > coeff1 ) <=
Distance : 15

197
Tree	if ( index * index * return; > NUMBER_CONSTANT ) ++
Code	if ( index * index * return; > NUMBER_CONSTANT ) ++
Distance : 15

198
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > Weight ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , CHAR_CONS ) > Weight ) <=
Distance : 15

199
Tree	if ( index . valueOf ( index , NUMBER_CONSTANT , else ) > CHAR_CONS ) <=
Code	if ( index . valueOf ( index , NUMBER_CONSTANT , else ) > CHAR_CONS ) <=
Distance : 15

========================================================================


========================================================================
Example Number: 4
Parent Code is: 
if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( categoryKeys.length != getCategoryCount () ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=categoryKeys.length}) (242{val=!=}) (22 (2 (22 (315{val=this}) (235{val=.}) (801{val=startData})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=categoryKeys.length}) (242{val=!=}) (32 (802{val=getCategoryCount}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/16/parent/source_org_jfree_data_category_DefaultIntervalCategoryDataset.java
-------------------------------------------------------------------------------
Edit Distance : 8
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } invocations
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } invocations
Distance : 9

1
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } options
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } options
Distance : 9

2
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } p
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } p
Distance : 9

3
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } &&
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } &&
Distance : 9

4
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } T
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } T
Distance : 9

5
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } !=
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } !=
Distance : 9

6
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } value
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } value
Distance : 9

7
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ParamChecks
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ParamChecks
Distance : 9

8
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Object
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Object
Distance : 9

9
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mock
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mock
Distance : 9

10
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Override
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Override
Distance : 9

11
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertEquals
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertEquals
Distance : 9

12
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } !
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } !
Distance : 9

13
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } []
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } []
Distance : 9

14
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } nullNotPermitted
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } nullNotPermitted
Distance : 9

15
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } catch
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } catch
Distance : 9

16
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throw
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throw
Distance : 9

17
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } void
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } void
Distance : 9

18
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ==
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ==
Distance : 9

19
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } double
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } double
Distance : 9

20
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } index
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } index
Distance : 9

21
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } >
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } >
Distance : 9

22
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } source
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } source
Distance : 9

23
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } null
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } null
Distance : 9

24
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Class
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Class
Distance : 9

25
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } @
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } @
Distance : 9

26
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } {}
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } {}
Distance : 9

27
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } MathRuntimeException
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } MathRuntimeException
Distance : 9

28
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } if
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } if
Distance : 9

29
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <
Distance : 9

30
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } this
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } this
Distance : 9

31
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } final
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } final
Distance : 9

32
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } =
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } =
Distance : 9

33
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } }
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } }
Distance : 9

34
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mode
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mode
Distance : 9

35
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ()
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ()
Distance : 9

36
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <blank>
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <blank>
Distance : 9

37
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throw
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throw
Distance : 9

38
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <s>
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <s>
Distance : 9

39
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } (
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } (
Distance : 9

40
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ;
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ;
Distance : 9

41
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } )
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } )
Distance : 9

42
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } .
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } .
Distance : 9

43
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ,
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ,
Distance : 9

44
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } +
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } +
Distance : 9

45
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } {
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } {
Distance : 9

46
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } test
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } test
Distance : 9

47
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } false
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } false
Distance : 9

48
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } true
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } true
Distance : 9

49
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } new
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } new
Distance : 9

50
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } pattern
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } pattern
Distance : 9

51
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } IllegalArgumentException
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } IllegalArgumentException
Distance : 9

52
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } expected
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } expected
Distance : 9

53
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } FastMath
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } FastMath
Distance : 9

54
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } reportCodeChange
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } reportCodeChange
Distance : 9

55
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } -
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } -
Distance : 9

56
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } values
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } values
Distance : 9

57
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } [
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } [
Distance : 9

58
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Preconditions
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Preconditions
Distance : 9

59
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } get
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } get
Distance : 9

60
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } char
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } char
Distance : 9

61
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } JSType
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } JSType
Distance : 9

62
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isEmpty
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isEmpty
Distance : 9

63
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } abs
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } abs
Distance : 9

64
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } instant
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } instant
Distance : 9

65
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } setAcceptedLanguage
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } setAcceptedLanguage
Distance : 9

66
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } static
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } static
Distance : 9

67
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } stream
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } stream
Distance : 9

68
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } out
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } out
Distance : 9

69
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ]
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ]
Distance : 9

70
Tree	if ( categoryKeys.length != this . IllegalArgumentException [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Code	if ( categoryKeys.length != this . IllegalArgumentException [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Distance : 8

71
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Distance : 8

72
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } return
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } return
Distance : 9

73
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Collection
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Collection
Distance : 9

74
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NUMBER_CONSTANT
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NUMBER_CONSTANT
Distance : 9

75
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } protected
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } protected
Distance : 9

76
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } d
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } d
Distance : 9

77
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } equals
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } equals
Distance : 9

78
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } for
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } for
Distance : 9

79
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Invocation
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Invocation
Distance : 9

80
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertTrue
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertTrue
Distance : 9

81
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } /
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } /
Distance : 9

82
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } externs
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } externs
Distance : 9

83
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } public
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } public
Distance : 9

84
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } notifyListeners
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } notifyListeners
Distance : 9

85
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } StrBuilder
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } StrBuilder
Distance : 9

86
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } TestUtilities
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } TestUtilities
Distance : 9

87
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } js
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } js
Distance : 9

88
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } else
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } else
Distance : 9

89
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getMessage
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getMessage
Distance : 9

90
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } matcher
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } matcher
Distance : 9

91
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } reportMatcher
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } reportMatcher
Distance : 9

92
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } PeriodType
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } PeriodType
Distance : 9

93
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } s
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } s
Distance : 9

94
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } setUp
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } setUp
Distance : 9

95
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } solver
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } solver
Distance : 9

96
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getField
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getField
Distance : 9

97
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } STRING_CONSTANT
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } STRING_CONSTANT
Distance : 9

98
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isNormalBlock
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isNormalBlock
Distance : 9

99
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Distance : 8

100
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } a
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } a
Distance : 9

101
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 9

102
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } return;
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } return;
Distance : 9

103
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mockingProgress
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } mockingProgress
Distance : 9

104
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } stroke
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } stroke
Distance : 9

105
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } MutableTimePeriod
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } MutableTimePeriod
Distance : 9

106
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } StringBuilder
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } StringBuilder
Distance : 9

107
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } traverseEs6
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } traverseEs6
Distance : 9

108
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } UnivariateFunction
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } UnivariateFunction
Distance : 9

109
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } scope
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } scope
Distance : 9

110
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } size
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } size
Distance : 9

111
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getFirstChild
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getFirstChild
Distance : 9

112
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Double
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Double
Distance : 9

113
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <=
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <=
Distance : 9

114
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } clone
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } clone
Distance : 9

115
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } sqrt
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } sqrt
Distance : 9

116
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isBlock
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } isBlock
Distance : 9

117
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } append
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } append
Distance : 9

118
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } sb
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } sb
Distance : 9

119
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } y
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } y
Distance : 9

120
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } chrono
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } chrono
Distance : 9

121
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throws
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } throws
Distance : 9

122
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } contains
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } contains
Distance : 9

123
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } obj
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } obj
Distance : 9

124
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } returnZero
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } returnZero
Distance : 9

125
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } verify
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } verify
Distance : 9

126
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Node
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Node
Distance : 9

127
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } str
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } str
Distance : 9

128
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } fireChangeEvent
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } fireChangeEvent
Distance : 9

129
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertThat
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } assertThat
Distance : 9

130
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } invocation
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } invocation
Distance : 9

131
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } parent
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } parent
Distance : 9

132
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ArrayList
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ArrayList
Distance : 9

133
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getInstance
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getInstance
Distance : 9

134
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } serialised
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } serialised
Distance : 9

135
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } testSame
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } testSame
Distance : 9

136
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } createIllegalArgumentException
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } createIllegalArgumentException
Distance : 9

137
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } x
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } x
Distance : 9

138
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LINE_JOINER
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LINE_JOINER
Distance : 9

139
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } :
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } :
Distance : 9

140
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } fail
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } fail
Distance : 9

141
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Args
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Args
Distance : 9

142
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } List
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } List
Distance : 9

143
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } valueOf
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } valueOf
Distance : 9

144
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } f
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } f
Distance : 9

145
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Distance : 9

146
Tree	if ( categoryKeys.length != this . IllegalArgumentException [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Code	if ( categoryKeys.length != this . IllegalArgumentException [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
Distance : 8

147
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } array
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } array
Distance : 9

148
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } class
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } class
Distance : 9

149
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ?
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ?
Distance : 9

150
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } try
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } try
Distance : 9

151
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } m
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } m
Distance : 9

152
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } join
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } join
Distance : 9

153
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } boolean
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } boolean
Distance : 9

154
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } type
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } type
Distance : 9

155
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } *
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } *
Distance : 9

156
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Fraction
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Fraction
Distance : 9

157
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkNotNull
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkNotNull
Distance : 9

158
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } length
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } length
Distance : 9

159
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Assert
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Assert
Distance : 9

160
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } TestUtils
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } TestUtils
Distance : 9

161
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NodeUtil
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NodeUtil
Distance : 9

162
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } root
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } root
Distance : 9

163
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Math
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Math
Distance : 9

164
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkArgument
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkArgument
Distance : 9

165
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } field
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } field
Distance : 9

166
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } t
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } t
Distance : 9

167
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } name
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } name
Distance : 9

168
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } data
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } data
Distance : 9

169
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NodeTraversal
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } NodeTraversal
Distance : 9

170
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } wanted
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } wanted
Distance : 9

171
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } result
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } result
Distance : 9

172
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } paint
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } paint
Distance : 9

173
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ex
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } ex
Distance : 9

174
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } long
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } long
Distance : 9

175
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } toString
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } toString
Distance : 9

176
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Test
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Test
Distance : 9

177
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } c
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } c
Distance : 9

178
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } lines
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } lines
Distance : 9

179
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } e
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } e
Distance : 9

180
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } n
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } n
Distance : 9

181
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } String
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } String
Distance : 9

182
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } add
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } add
Distance : 9

183
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkState
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } checkState
Distance : 9

184
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } compiler
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } compiler
Distance : 9

185
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } i
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } i
Distance : 9

186
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } super
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } super
Distance : 9

187
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } simpleMethod
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } simpleMethod
Distance : 9

188
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getArgumentMatcherStorage
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getArgumentMatcherStorage
Distance : 9

189
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } optimizer
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } optimizer
Distance : 9

190
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } alpha
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } alpha
Distance : 9

191
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } node
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } node
Distance : 9

192
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getParent
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } getParent
Distance : 9

193
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Exception
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Exception
Distance : 9

194
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <>
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } <>
Distance : 9

195
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } int
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } int
Distance : 9

196
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } v
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } v
Distance : 9

197
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Integer
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } Integer
Distance : 9

198
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } instance
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } instance
Distance : 9

199
Tree	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } b
Code	if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; } b
Distance : 9

========================================================================


========================================================================
Example Number: 5
Parent Code is: 
this . dataset = dataset ;
-------------------------------------------------------------------------------
Child code is: 
setDataset ( dataset ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=dataset})) (204{val==}) (800{val=dataset})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (802{val=setDataset}) (214{val=(}) (800{val=dataset}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/12/parent/source_org_jfree_chart_plot_MultiplePiePlot.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	this . dataset = dataset ; out
Code	this . dataset = dataset ; out
Distance : 5

1
Tree	this . dataset = dataset ; ParamChecks
Code	this . dataset = dataset ; ParamChecks
Distance : 5

2
Tree	this . dataset = dataset ; <>
Code	this . dataset = dataset ; <>
Distance : 5

3
Tree	this . dataset = dataset ; mock
Code	this . dataset = dataset ; mock
Distance : 5

4
Tree	this . dataset = dataset ; MathRuntimeException
Code	this . dataset = dataset ; MathRuntimeException
Distance : 5

5
Tree	this . dataset = dataset ; Override
Code	this . dataset = dataset ; Override
Distance : 5

6
Tree	this . dataset = dataset ; f
Code	this . dataset = dataset ; f
Distance : 5

7
Tree	this . dataset = dataset ; [
Code	this . dataset = dataset ; [
Distance : 5

8
Tree	this . dataset = dataset ; -
Code	this . dataset = dataset ; -
Distance : 5

9
Tree	this . dataset = dataset ; &&
Code	this . dataset = dataset ; &&
Distance : 5

10
Tree	this . dataset = dataset ; Preconditions
Code	this . dataset = dataset ; Preconditions
Distance : 5

11
Tree	this . dataset = dataset ; true
Code	this . dataset = dataset ; true
Distance : 5

12
Tree	this . dataset = dataset ; ]
Code	this . dataset = dataset ; ]
Distance : 5

13
Tree	this . dataset = dataset ; mode
Code	this . dataset = dataset ; mode
Distance : 5

14
Tree	this . dataset = dataset ; class
Code	this . dataset = dataset ; class
Distance : 5

15
Tree	this . dataset = dataset ; false
Code	this . dataset = dataset ; false
Distance : 5

16
Tree	this . dataset = dataset ; test
Code	this . dataset = dataset ; test
Distance : 5

17
Tree	this . dataset = dataset ; assertEquals
Code	this . dataset = dataset ; assertEquals
Distance : 5

18
Tree	this . dataset = dataset ; @
Code	this . dataset = dataset ; @
Distance : 5

19
Tree	this . dataset = dataset ; []
Code	this . dataset = dataset ; []
Distance : 5

20
Tree	this . dataset = dataset ; ==
Code	this . dataset = dataset ; ==
Distance : 5

21
Tree	this . dataset = dataset ; !
Code	this . dataset = dataset ; !
Distance : 5

22
Tree	this . dataset = dataset ; c
Code	this . dataset = dataset ; c
Distance : 5

23
Tree	this . dataset = dataset ; String
Code	this . dataset = dataset ; String
Distance : 5

24
Tree	this . dataset = dataset ; nullNotPermitted
Code	this . dataset = dataset ; nullNotPermitted
Distance : 5

25
Tree	this . dataset = dataset ; }
Code	this . dataset = dataset ; }
Distance : 5

26
Tree	this . dataset = dataset ; int
Code	this . dataset = dataset ; int
Distance : 5

27
Tree	this . dataset = dataset ; !=
Code	this . dataset = dataset ; !=
Distance : 5

28
Tree	this . dataset = dataset ; super
Code	this . dataset = dataset ; super
Distance : 5

29
Tree	this . dataset = dataset ; value
Code	this . dataset = dataset ; value
Distance : 5

30
Tree	this . dataset = dataset ; Object
Code	this . dataset = dataset ; Object
Distance : 5

31
Tree	this . dataset = dataset ; null
Code	this . dataset = dataset ; null
Distance : 5

32
Tree	this . dataset = dataset ; NUMBER_CONSTANT
Code	this . dataset = dataset ; NUMBER_CONSTANT
Distance : 5

33
Tree	this . dataset = dataset ; =
Code	this . dataset = dataset ; =
Distance : 5

34
Tree	this . dataset = dataset ; new
Code	this . dataset = dataset ; new
Distance : 5

35
Tree	this . dataset = dataset ; ()
Code	this . dataset = dataset ; ()
Distance : 5

36
Tree	this . dataset = dataset ; ,
Code	this . dataset = dataset ; ,
Distance : 5

37
Tree	this . dataset = dataset ; {
Code	this . dataset = dataset ; {
Distance : 5

38
Tree	this . dataset = dataset ; STRING_CONSTANT
Code	this . dataset = dataset ; STRING_CONSTANT
Distance : 5

39
Tree	this . dataset = dataset ; )
Code	this . dataset = dataset ; )
Distance : 5

40
Tree	this . dataset = dataset ; <s>
Code	this . dataset = dataset ; <s>
Distance : 5

41
Tree	this . dataset = dataset ; .
Code	this . dataset = dataset ; .
Distance : 5

42
Tree	this . dataset = dataset ; <blank>
Code	this . dataset = dataset ; <blank>
Distance : 5

43
Tree	this . dataset = dataset ; ;
Code	this . dataset = dataset ; ;
Distance : 5

44
Tree	this . dataset = dataset ; (
Code	this . dataset = dataset ; (
Distance : 5

45
Tree	this . dataset = dataset ; .
Code	this . dataset = dataset ; .
Distance : 5

46
Tree	this . dataset = dataset ; checkState
Code	this . dataset = dataset ; checkState
Distance : 5

47
Tree	this . dataset = dataset ; i
Code	this . dataset = dataset ; i
Distance : 5

48
Tree	this . dataset = dataset ; double
Code	this . dataset = dataset ; double
Distance : 5

49
Tree	this . dataset = dataset ; public
Code	this . dataset = dataset ; public
Distance : 5

50
Tree	this . dataset = dataset ; reportMatcher
Code	this . dataset = dataset ; reportMatcher
Distance : 5

51
Tree	this . dataset = dataset ; this
Code	this . dataset = dataset ; this
Distance : 5

52
Tree	this . dataset = dataset ; return
Code	this . dataset = dataset ; return
Distance : 5

53
Tree	this . dataset = dataset ; final
Code	this . dataset = dataset ; final
Distance : 5

54
Tree	this . dataset = dataset ; <
Code	this . dataset = dataset ; <
Distance : 5

55
Tree	this . dataset = dataset ; field
Code	this . dataset = dataset ; field
Distance : 5

56
Tree	this . dataset = dataset ; Collection
Code	this . dataset = dataset ; Collection
Distance : 5

57
Tree	this . dataset = dataset ; y
Code	this . dataset = dataset ; y
Distance : 5

58
Tree	this . dataset = dataset ; solver
Code	this . dataset = dataset ; solver
Distance : 5

59
Tree	this . dataset = dataset ; dataset
Code	this . dataset = dataset ; dataset
Distance : 5

60
Tree	this . dataset = dataset ; LanguageMode.ECMASCRIPT6
Code	this . dataset = dataset ; LanguageMode.ECMASCRIPT6
Distance : 5

61
Tree	this . dataset = dataset ; pattern
Code	this . dataset = dataset ; pattern
Distance : 5

62
Tree	this . dataset = dataset ; {}
Code	this . dataset = dataset ; {}
Distance : 5

63
Tree	this . dataset = dataset ; LanguageMode.ECMASCRIPT_2015
Code	this . dataset = dataset ; LanguageMode.ECMASCRIPT_2015
Distance : 5

64
Tree	this . dataset = dataset ; mockingProgress
Code	this . dataset = dataset ; mockingProgress
Distance : 5

65
Tree	this . dataset = dataset ; get
Code	this . dataset = dataset ; get
Distance : 5

66
Tree	this . dataset = dataset ; return;
Code	this . dataset = dataset ; return;
Distance : 5

67
Tree	this . dataset = dataset ; JSType
Code	this . dataset = dataset ; JSType
Distance : 5

68
Tree	this . dataset = dataset ; static
Code	this . dataset = dataset ; static
Distance : 5

69
Tree	this . dataset = dataset ; isEmpty
Code	this . dataset = dataset ; isEmpty
Distance : 5

70
Tree	this . dataset = dataset ; char
Code	this . dataset = dataset ; char
Distance : 5

71
Tree	this . dataset = dataset ; matcher
Code	this . dataset = dataset ; matcher
Distance : 5

72
Tree	this . dataset = dataset ; >
Code	this . dataset = dataset ; >
Distance : 5

73
Tree	this . dataset = dataset ; if
Code	this . dataset = dataset ; if
Distance : 5

74
Tree	this . dataset = dataset ; else
Code	this . dataset = dataset ; else
Distance : 5

75
Tree	this . dataset = dataset ; getMessage
Code	this . dataset = dataset ; getMessage
Distance : 5

76
Tree	this . dataset = dataset ; abs
Code	this . dataset = dataset ; abs
Distance : 5

77
Tree	this . dataset = dataset ; InvocationImpl
Code	this . dataset = dataset ; InvocationImpl
Distance : 5

78
Tree	this . dataset = dataset ; StrBuilder
Code	this . dataset = dataset ; StrBuilder
Distance : 5

79
Tree	this . dataset = dataset ; js
Code	this . dataset = dataset ; js
Distance : 5

80
Tree	this . dataset = dataset ; d
Code	this . dataset = dataset ; d
Distance : 5

81
Tree	this . dataset = dataset ; TestUtilities
Code	this . dataset = dataset ; TestUtilities
Distance : 5

82
Tree	this . dataset = dataset ; for
Code	this . dataset = dataset ; for
Distance : 5

83
Tree	this . dataset = dataset ; notifyListeners
Code	this . dataset = dataset ; notifyListeners
Distance : 5

84
Tree	this . dataset = dataset ; Invocation
Code	this . dataset = dataset ; Invocation
Distance : 5

85
Tree	this . dataset = dataset ; equals
Code	this . dataset = dataset ; equals
Distance : 5

86
Tree	this . dataset = dataset ; index
Code	this . dataset = dataset ; index
Distance : 5

87
Tree	this . dataset = dataset ; node
Code	this . dataset = dataset ; node
Distance : 5

88
Tree	this . dataset = dataset ; setUp
Code	this . dataset = dataset ; setUp
Distance : 5

89
Tree	this . dataset = dataset ; getParent
Code	this . dataset = dataset ; getParent
Distance : 5

90
Tree	this . dataset = dataset ; protected
Code	this . dataset = dataset ; protected
Distance : 5

91
Tree	this . dataset = dataset ; invocations
Code	this . dataset = dataset ; invocations
Distance : 5

92
Tree	this . dataset = dataset ; values
Code	this . dataset = dataset ; values
Distance : 5

93
Tree	this . dataset = dataset ; setAcceptedLanguage
Code	this . dataset = dataset ; setAcceptedLanguage
Distance : 5

94
Tree	this . dataset = dataset ; clone
Code	this . dataset = dataset ; clone
Distance : 5

95
Tree	this . dataset = dataset ; Double
Code	this . dataset = dataset ; Double
Distance : 5

96
Tree	this . dataset = dataset ; instant
Code	this . dataset = dataset ; instant
Distance : 5

97
Tree	this . dataset = dataset ; stream
Code	this . dataset = dataset ; stream
Distance : 5

98
Tree	this . dataset = dataset ; PeriodType
Code	this . dataset = dataset ; PeriodType
Distance : 5

99
Tree	this . dataset = dataset ;
Code	this . dataset = dataset ;
Distance : 4

100
Tree	this . dataset = dataset ; isNormalBlock
Code	this . dataset = dataset ; isNormalBlock
Distance : 5

101
Tree	this . dataset = dataset ; b
Code	this . dataset = dataset ; b
Distance : 5

102
Tree	this . dataset = dataset ; s
Code	this . dataset = dataset ; s
Distance : 5

103
Tree	this . dataset = dataset ; StringBuilder
Code	this . dataset = dataset ; StringBuilder
Distance : 5

104
Tree	this . dataset = dataset ; stroke
Code	this . dataset = dataset ; stroke
Distance : 5

105
Tree	this . dataset = dataset ; size
Code	this . dataset = dataset ; size
Distance : 5

106
Tree	this . dataset = dataset ; MutableTimePeriod
Code	this . dataset = dataset ; MutableTimePeriod
Distance : 5

107
Tree	this . dataset = dataset ; chrono
Code	this . dataset = dataset ; chrono
Distance : 5

108
Tree	this . dataset = dataset ; traverseEs6
Code	this . dataset = dataset ; traverseEs6
Distance : 5

109
Tree	this . dataset = dataset ; a
Code	this . dataset = dataset ; a
Distance : 5

110
Tree	this . dataset = dataset ; obj
Code	this . dataset = dataset ; obj
Distance : 5

111
Tree	this . dataset = dataset ; append
Code	this . dataset = dataset ; append
Distance : 5

112
Tree	this . dataset = dataset ; returnZero
Code	this . dataset = dataset ; returnZero
Distance : 5

113
Tree	this . dataset = dataset ; UnivariateFunction
Code	this . dataset = dataset ; UnivariateFunction
Distance : 5

114
Tree	this . dataset = dataset ; sb
Code	this . dataset = dataset ; sb
Distance : 5

115
Tree	this . dataset = dataset ; getFirstChild
Code	this . dataset = dataset ; getFirstChild
Distance : 5

116
Tree	this . dataset = dataset ; sqrt
Code	this . dataset = dataset ; sqrt
Distance : 5

117
Tree	this . dataset = dataset ; throws
Code	this . dataset = dataset ; throws
Distance : 5

118
Tree	this . dataset = dataset ; scope
Code	this . dataset = dataset ; scope
Distance : 5

119
Tree	this . dataset = dataset ; optimizer
Code	this . dataset = dataset ; optimizer
Distance : 5

120
Tree	this . dataset = dataset ; simpleMethod
Code	this . dataset = dataset ; simpleMethod
Distance : 5

121
Tree	this . dataset = dataset ; isBlock
Code	this . dataset = dataset ; isBlock
Distance : 5

122
Tree	this . dataset = dataset ; getArgumentMatcherStorage
Code	this . dataset = dataset ; getArgumentMatcherStorage
Distance : 5

123
Tree	this . dataset = dataset ; valueOf
Code	this . dataset = dataset ; valueOf
Distance : 5

124
Tree	this . dataset = dataset ; alpha
Code	this . dataset = dataset ; alpha
Distance : 5

125
Tree	this . dataset = dataset ; instance
Code	this . dataset = dataset ; instance
Distance : 5

126
Tree	this . dataset = dataset ; getField
Code	this . dataset = dataset ; getField
Distance : 5

127
Tree	this . dataset = dataset ; checkNotNull
Code	this . dataset = dataset ; checkNotNull
Distance : 5

128
Tree	this . dataset = dataset ; name
Code	this . dataset = dataset ; name
Distance : 5

129
Tree	this . dataset = dataset ; IllegalArgumentException
Code	this . dataset = dataset ; IllegalArgumentException
Distance : 5

130
Tree	this . dataset = dataset ; t
Code	this . dataset = dataset ; t
Distance : 5

131
Tree	this . dataset = dataset ; FastMath
Code	this . dataset = dataset ; FastMath
Distance : 5

132
Tree	this . dataset = dataset ; invocation
Code	this . dataset = dataset ; invocation
Distance : 5

133
Tree	this . dataset = dataset ; reportCodeChange
Code	this . dataset = dataset ; reportCodeChange
Distance : 5

134
Tree	this . dataset = dataset ; expected
Code	this . dataset = dataset ; expected
Distance : 5

135
Tree	this . dataset = dataset ; x
Code	this . dataset = dataset ; x
Distance : 5

136
Tree	this . dataset = dataset ; testSame
Code	this . dataset = dataset ; testSame
Distance : 5

137
Tree	this . dataset = dataset ; parent
Code	this . dataset = dataset ; parent
Distance : 5

138
Tree	this . dataset = dataset ; createIllegalArgumentException
Code	this . dataset = dataset ; createIllegalArgumentException
Distance : 5

139
Tree	this . dataset = dataset ; fireChangeEvent
Code	this . dataset = dataset ; fireChangeEvent
Distance : 5

140
Tree	this . dataset = dataset ; LINE_JOINER
Code	this . dataset = dataset ; LINE_JOINER
Distance : 5

141
Tree	this . dataset = dataset ; str
Code	this . dataset = dataset ; str
Distance : 5

142
Tree	this . dataset = dataset ; assertThat
Code	this . dataset = dataset ; assertThat
Distance : 5

143
Tree	this . dataset = dataset ; paint
Code	this . dataset = dataset ; paint
Distance : 5

144
Tree	this . dataset = dataset ; m
Code	this . dataset = dataset ; m
Distance : 5

145
Tree	this . dataset = dataset ; :
Code	this . dataset = dataset ; :
Distance : 5

146
Tree	this . dataset = dataset ; try
Code	this . dataset = dataset ; try
Distance : 5

147
Tree	this . dataset = dataset ; Args
Code	this . dataset = dataset ; Args
Distance : 5

148
Tree	this . dataset = dataset ; contains
Code	this . dataset = dataset ; contains
Distance : 5

149
Tree	this . dataset = dataset ; array
Code	this . dataset = dataset ; array
Distance : 5

150
Tree	this . dataset = dataset ; fail
Code	this . dataset = dataset ; fail
Distance : 5

151
Tree	this . dataset = dataset ; join
Code	this . dataset = dataset ; join
Distance : 5

152
Tree	this . dataset = dataset ; result
Code	this . dataset = dataset ; result
Distance : 5

153
Tree	this . dataset = dataset ; boolean
Code	this . dataset = dataset ; boolean
Distance : 5

154
Tree	this . dataset = dataset ; getInstance
Code	this . dataset = dataset ; getInstance
Distance : 5

155
Tree	this . dataset = dataset ; *
Code	this . dataset = dataset ; *
Distance : 5

156
Tree	this . dataset = dataset ; serialised
Code	this . dataset = dataset ; serialised
Distance : 5

157
Tree	this . dataset = dataset ; ArrayList
Code	this . dataset = dataset ; ArrayList
Distance : 5

158
Tree	this . dataset = dataset ; ?
Code	this . dataset = dataset ; ?
Distance : 5

159
Tree	this . dataset = dataset ; toString
Code	this . dataset = dataset ; toString
Distance : 5

160
Tree	this . dataset = dataset ; Class
Code	this . dataset = dataset ; Class
Distance : 5

161
Tree	this . dataset = dataset ; Test
Code	this . dataset = dataset ; Test
Distance : 5

162
Tree	this . dataset = dataset ; options
Code	this . dataset = dataset ; options
Distance : 5

163
Tree	this . dataset = dataset ; Math
Code	this . dataset = dataset ; Math
Distance : 5

164
Tree	this . dataset = dataset ; p
Code	this . dataset = dataset ; p
Distance : 5

165
Tree	this . dataset = dataset ; source
Code	this . dataset = dataset ; source
Distance : 5

166
Tree	this . dataset = dataset ; NodeTraversal
Code	this . dataset = dataset ; NodeTraversal
Distance : 5

167
Tree	this . dataset = dataset ; data
Code	this . dataset = dataset ; data
Distance : 5

168
Tree	this . dataset = dataset ; checkArgument
Code	this . dataset = dataset ; checkArgument
Distance : 5

169
Tree	this . dataset = dataset ; add
Code	this . dataset = dataset ; add
Distance : 5

170
Tree	this . dataset = dataset ; NodeUtil
Code	this . dataset = dataset ; NodeUtil
Distance : 5

171
Tree	this . dataset = dataset ; wanted
Code	this . dataset = dataset ; wanted
Distance : 5

172
Tree	this . dataset = dataset ; type
Code	this . dataset = dataset ; type
Distance : 5

173
Tree	this . dataset = dataset ; ex
Code	this . dataset = dataset ; ex
Distance : 5

174
Tree	this . dataset = dataset ; root
Code	this . dataset = dataset ; root
Distance : 5

175
Tree	this . dataset = dataset ; List
Code	this . dataset = dataset ; List
Distance : 5

176
Tree	this . dataset = dataset ; TestUtils
Code	this . dataset = dataset ; TestUtils
Distance : 5

177
Tree	this . dataset = dataset ; Integer
Code	this . dataset = dataset ; Integer
Distance : 5

178
Tree	this . dataset = dataset ; length
Code	this . dataset = dataset ; length
Distance : 5

179
Tree	this . dataset = dataset ; verify
Code	this . dataset = dataset ; verify
Distance : 5

180
Tree	this . dataset = dataset ; lines
Code	this . dataset = dataset ; lines
Distance : 5

181
Tree	this . dataset = dataset ; Node
Code	this . dataset = dataset ; Node
Distance : 5

182
Tree	this . dataset = dataset ; v
Code	this . dataset = dataset ; v
Distance : 5

183
Tree	this . dataset = dataset ; throw
Code	this . dataset = dataset ; throw
Distance : 5

184
Tree	this . dataset = dataset ; e
Code	this . dataset = dataset ; e
Distance : 5

185
Tree	this . dataset = dataset ; +
Code	this . dataset = dataset ; +
Distance : 5

186
Tree	this . dataset = dataset ; getChronology
Code	this . dataset = dataset ; getChronology
Distance : 5

187
Tree	this . dataset = dataset ; n
Code	this . dataset = dataset ; n
Distance : 5

188
Tree	this . dataset = dataset ; compiler
Code	this . dataset = dataset ; compiler
Distance : 5

189
Tree	this . dataset = dataset ; void
Code	this . dataset = dataset ; void
Distance : 5

190
Tree	this . dataset = dataset ; T
Code	this . dataset = dataset ; T
Distance : 5

191
Tree	this . dataset = dataset ; assertTrue
Code	this . dataset = dataset ; assertTrue
Distance : 5

192
Tree	this . dataset = dataset ; Exception
Code	this . dataset = dataset ; Exception
Distance : 5

193
Tree	this . dataset = dataset ; Fraction
Code	this . dataset = dataset ; Fraction
Distance : 5

194
Tree	this . dataset = dataset ; Assert
Code	this . dataset = dataset ; Assert
Distance : 5

195
Tree	this . dataset = dataset ; externs
Code	this . dataset = dataset ; externs
Distance : 5

196
Tree	this . dataset = dataset ; long
Code	this . dataset = dataset ; long
Distance : 5

197
Tree	this . dataset = dataset ; /
Code	this . dataset = dataset ; /
Distance : 5

198
Tree	this . dataset = dataset ; catch
Code	this . dataset = dataset ; catch
Distance : 5

199
Tree	this . dataset = dataset ; <=
Code	this . dataset = dataset ; <=
Distance : 5

========================================================================


========================================================================
Example Number: 6
Parent Code is: 
PathIterator iterator2 = p1 . getPathIterator ( null ) ;
-------------------------------------------------------------------------------
Child code is: 
PathIterator iterator2 = p2 . getPathIterator ( null ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=PathIterator})) (59 (800{val=iterator2}) (204{val==}) (32 (800{val=p1}) (235{val=.}) (802{val=getPathIterator}) (214{val=(}) (500{val=null}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=PathIterator})) (59 (800{val=iterator2}) (204{val==}) (32 (800{val=p2}) (235{val=.}) (802{val=getPathIterator}) (214{val=(}) (500{val=null}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/11/parent/source_org_jfree_chart_util_ShapeUtilities.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Correct
========================================================================
True

0
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; else
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; else
Distance : 2

1
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Exception
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Exception
Distance : 2

2
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; reportCodeChange
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; reportCodeChange
Distance : 2

3
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; FastMath
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; FastMath
Distance : 2

4
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertThat
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertThat
Distance : 2

5
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; LINE_JOINER
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; LINE_JOINER
Distance : 2

6
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; x
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; x
Distance : 2

7
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; fireChangeEvent
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; fireChangeEvent
Distance : 2

8
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; str
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; str
Distance : 2

9
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; invocation
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; invocation
Distance : 2

10
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; serialised
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; serialised
Distance : 2

11
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getInstance
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getInstance
Distance : 2

12
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; type
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; type
Distance : 2

13
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; *
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; *
Distance : 2

14
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; parent
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; parent
Distance : 2

15
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ArrayList
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ArrayList
Distance : 2

16
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; createIllegalArgumentException
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; createIllegalArgumentException
Distance : 2

17
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; testSame
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; testSame
Distance : 2

18
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; data
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; data
Distance : 2

19
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; add
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; add
Distance : 2

20
Tree	PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Distance : 3

21
Tree	PathIterator p2 = p1 . getPathIterator ( break; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( break; ) ;
Distance : 3

22
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkArgument
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkArgument
Distance : 2

23
Tree	PathIterator iterator2 = p2 . getPathIterator ( return; ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( return; ) ;
Distance : 1

24
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Assert
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Assert
Distance : 2

25
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; f
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; f
Distance : 2

26
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; catch
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; catch
Distance : 2

27
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; wanted
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; wanted
Distance : 2

28
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NodeUtil
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NodeUtil
Distance : 2

29
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NodeTraversal
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NodeTraversal
Distance : 2

30
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ex
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ex
Distance : 2

31
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Math
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Math
Distance : 2

32
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; root
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; root
Distance : 2

33
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; options
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; options
Distance : 2

34
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; expected
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; expected
Distance : 2

35
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; p
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; p
Distance : 2

36
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; paint
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; paint
Distance : 2

37
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; result
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; result
Distance : 2

38
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; :
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; :
Distance : 2

39
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; fail
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; fail
Distance : 2

40
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; join
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; join
Distance : 2

41
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; boolean
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; boolean
Distance : 2

42
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; try
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; try
Distance : 2

43
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; m
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; m
Distance : 2

44
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getMessage
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getMessage
Distance : 2

45
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; class
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; class
Distance : 2

46
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; IllegalArgumentException
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; IllegalArgumentException
Distance : 2

47
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; field
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; field
Distance : 2

48
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; throw
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; throw
Distance : 2

49
Tree	PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Distance : 2

50
Tree	PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 2

51
Tree	PathIterator p2 = p1 . getPathIterator ( default: ) ;
Code	PathIterator p2 = p1 . getPathIterator ( default: ) ;
Distance : 3

52
Tree	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 3

53
Tree	PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Distance : 2

54
Tree	PathIterator p2 = p1 . getPathIterator ( break; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( break; ) ;
Distance : 3

55
Tree	PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Distance : 3

56
Tree	PathIterator p2 = p1 . getPathIterator ( return; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( return; ) ;
Distance : 3

57
Tree	PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Distance : 2

58
Tree	PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Distance : 2

59
Tree	PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Distance : 3

60
Tree	PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Distance : 3

61
Tree	PathIterator p1 = p2 . getPathIterator ( default: ) ;
Code	PathIterator p1 = p2 . getPathIterator ( default: ) ;
Distance : 2

62
Tree	PathIterator iterator2 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( super(); ) ;
Distance : 2

63
Tree	PathIterator p1 = p2 . getPathIterator ( break; ) ;
Code	PathIterator p1 = p2 . getPathIterator ( break; ) ;
Distance : 2

64
Tree	PathIterator p1 = p2 . getPathIterator ( continue; ) ;
Code	PathIterator p1 = p2 . getPathIterator ( continue; ) ;
Distance : 2

65
Tree	PathIterator p2 = p2 . getPathIterator ( default: ) ;
Code	PathIterator p2 = p2 . getPathIterator ( default: ) ;
Distance : 2

66
Tree	PathIterator p1 = p1 . getPathIterator ( default: ) ;
Code	PathIterator p1 = p1 . getPathIterator ( default: ) ;
Distance : 3

67
Tree	PathIterator p1 = p2 . getPathIterator ( return; ) ;
Code	PathIterator p1 = p2 . getPathIterator ( return; ) ;
Distance : 2

68
Tree	PathIterator p1 = p2 . getPathIterator ( super(); ) ;
Code	PathIterator p1 = p2 . getPathIterator ( super(); ) ;
Distance : 2

69
Tree	PathIterator iterator2 = p2 . getPathIterator ( default: ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( default: ) ;
Distance : 1

70
Tree	PathIterator p2 = p2 . getPathIterator ( break; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( break; ) ;
Distance : 2

71
Tree	PathIterator p1 = p1 . getPathIterator ( break; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( break; ) ;
Distance : 3

72
Tree	PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Distance : 3

73
Tree	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 3

74
Tree	PathIterator p1 = p1 . getPathIterator ( break; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( break; ) ;
Distance : 3

75
Tree	PathIterator p2 = p2 . getPathIterator ( continue; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( continue; ) ;
Distance : 2

76
Tree	PathIterator iterator2 = p2 . getPathIterator ( continue; ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( continue; ) ;
Distance : 1

77
Tree	PathIterator p1 = p1 . getPathIterator ( return; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( return; ) ;
Distance : 3

78
Tree	PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Distance : 1

79
Tree	PathIterator p2 = p1 . getPathIterator ( return; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( return; ) ;
Distance : 3

80
Tree	PathIterator p2 = p2 . getPathIterator ( super(); ) ;
Code	PathIterator p2 = p2 . getPathIterator ( super(); ) ;
Distance : 2

81
Tree	PathIterator iterator2 = p2 . getPathIterator ( super(); ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( super(); ) ;
Distance : 1

82
Tree	PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 2

83
Tree	PathIterator p2 = p1 . getPathIterator ( null ) ;
Code	PathIterator p2 = p1 . getPathIterator ( null ) ;
Distance : 2

84
Tree	PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Distance : 2

85
Tree	PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Distance : 3

86
Tree	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Distance : 2

87
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Distance : 1

88
Tree	PathIterator iterator2 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( super(); ) ;
Distance : 2

89
Tree	PathIterator p1 = p2 . getPathIterator ( null ) ;
Code	PathIterator p1 = p2 . getPathIterator ( null ) ;
Distance : 1

90
Tree	PathIterator p2 = p2 . getPathIterator ( null ) ;
Code	PathIterator p2 = p2 . getPathIterator ( null ) ;
Distance : 1

91
Tree	PathIterator iterator2 = p2 . getPathIterator ( null ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( null ) ;
Distance : 0

92
Tree	PathIterator p2 = p1 . getPathIterator ( null ) ;
Code	PathIterator p2 = p1 . getPathIterator ( null ) ;
Distance : 2

93
Tree	PathIterator p2 = p2 . getPathIterator ( return; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( return; ) ;
Distance : 2

94
Tree	PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Distance : 2

95
Tree	PathIterator p2 = p1 . getPathIterator ( default: ) ;
Code	PathIterator p2 = p1 . getPathIterator ( default: ) ;
Distance : 3

96
Tree	PathIterator p1 = p1 . getPathIterator ( return; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( return; ) ;
Distance : 3

97
Tree	PathIterator p1 = p1 . getPathIterator ( default: ) ;
Code	PathIterator p1 = p1 . getPathIterator ( default: ) ;
Distance : 3

98
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkNotNull
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkNotNull
Distance : 2

99
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Distance : 1

100
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Integer
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Integer
Distance : 2

101
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; STRING_CONSTANT
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; STRING_CONSTANT
Distance : 2

102
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; List
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; List
Distance : 2

103
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; out
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; out
Distance : 2

104
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; stream
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; stream
Distance : 2

105
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; invocations
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; invocations
Distance : 2

106
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; index
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; index
Distance : 2

107
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; t
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; t
Distance : 2

108
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; name
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; name
Distance : 2

109
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ;
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ;
Distance : 2

110
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; -
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; -
Distance : 2

111
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; )
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; )
Distance : 2

112
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ,
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ,
Distance : 2

113
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; .
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; .
Distance : 2

114
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <blank>
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <blank>
Distance : 2

115
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; (
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; (
Distance : 2

116
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; protected
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; protected
Distance : 2

117
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; values
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; values
Distance : 2

118
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Object
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Object
Distance : 2

119
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ParamChecks
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ParamChecks
Distance : 2

120
Tree	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Distance : 2

121
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; (
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; (
Distance : 2

122
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; T
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; T
Distance : 2

123
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <s>
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <s>
Distance : 2

124
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; >
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; >
Distance : 2

125
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Preconditions
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Preconditions
Distance : 2

126
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; public
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; public
Distance : 2

127
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; &&
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; &&
Distance : 2

128
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; super
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; super
Distance : 2

129
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; i
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; i
Distance : 2

130
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; !=
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; !=
Distance : 2

131
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; mode
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; mode
Distance : 2

132
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; true
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; true
Distance : 2

133
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; [
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; [
Distance : 2

134
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ]
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ]
Distance : 2

135
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; value
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; value
Distance : 2

136
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; MathRuntimeException
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; MathRuntimeException
Distance : 2

137
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; {}
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; {}
Distance : 2

138
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; mock
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; mock
Distance : 2

139
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Override
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Override
Distance : 2

140
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; e
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; e
Distance : 2

141
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; n
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; n
Distance : 2

142
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; null
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; null
Distance : 2

143
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; +
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; +
Distance : 2

144
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; if
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; if
Distance : 2

145
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <
Distance : 2

146
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; void
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; void
Distance : 2

147
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; []
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; []
Distance : 2

148
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; nullNotPermitted
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; nullNotPermitted
Distance : 2

149
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; final
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; final
Distance : 2

150
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; this
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; this
Distance : 2

151
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; @
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; @
Distance : 2

152
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; return
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; return
Distance : 2

153
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; !
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; !
Distance : 2

154
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; =
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; =
Distance : 2

155
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ==
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ==
Distance : 2

156
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NUMBER_CONSTANT
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; NUMBER_CONSTANT
Distance : 2

157
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; compiler
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; compiler
Distance : 2

158
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; TestUtilities
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; TestUtilities
Distance : 2

159
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; node
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; node
Distance : 2

160
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getParent
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; getParent
Distance : 2

161
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertTrue
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertTrue
Distance : 2

162
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; /
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; /
Distance : 2

163
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; StrBuilder
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; StrBuilder
Distance : 2

164
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; setUp
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; setUp
Distance : 2

165
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; d
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; d
Distance : 2

166
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; equals
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; equals
Distance : 2

167
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; js
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; js
Distance : 2

168
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; test
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; test
Distance : 2

169
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; double
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; double
Distance : 2

170
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; String
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; String
Distance : 2

171
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; length
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; length
Distance : 2

172
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; }
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; }
Distance : 2

173
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; toString
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; toString
Distance : 2

174
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; array
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; array
Distance : 2

175
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <>
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; <>
Distance : 2

176
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Args
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Args
Distance : 2

177
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; new
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; new
Distance : 2

178
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; v
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; v
Distance : 2

179
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertEquals
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; assertEquals
Distance : 2

180
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; false
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; false
Distance : 2

181
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; int
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; int
Distance : 2

182
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkState
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; checkState
Distance : 2

183
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ()
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ()
Distance : 2

184
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; {
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; {
Distance : 2

185
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; TestUtils
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; TestUtils
Distance : 2

186
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ?
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; ?
Distance : 2

187
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; notifyListeners
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; notifyListeners
Distance : 2

188
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; externs
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; externs
Distance : 2

189
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; for
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; for
Distance : 2

190
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Invocation
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Invocation
Distance : 2

191
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Node
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Node
Distance : 2

192
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; verify
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; verify
Distance : 2

193
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; c
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; c
Distance : 2

194
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; lines
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; lines
Distance : 2

195
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Class
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Class
Distance : 2

196
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; source
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; source
Distance : 2

197
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Test
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Test
Distance : 2

198
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; long
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; long
Distance : 2

199
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Fraction
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ; Fraction
Distance : 2

========================================================================


========================================================================
Example Number: 7
Parent Code is: 
{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; }
-------------------------------------------------------------------------------
Child code is: 
{ return STRING_CONSTANT + ImageMapUtilities . htmlEscape ( toolTipText ) + STRING_CONSTANT ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=toolTipText}) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=ImageMapUtilities}) (235{val=.}) (802{val=htmlEscape}) (214{val=(}) (800{val=toolTipText}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/10/parent/source_org_jfree_chart_imagemap_StandardToolTipTagFragmentGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } values
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } values
Distance : 6

1
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Test
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Test
Distance : 6

2
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } MathRuntimeException
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } MathRuntimeException
Distance : 6

3
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } {}
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } {}
Distance : 6

4
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } f
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } f
Distance : 6

5
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } class
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } class
Distance : 6

6
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } -
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } -
Distance : 6

7
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Preconditions
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Preconditions
Distance : 6

8
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } T
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } T
Distance : 6

9
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } &&
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } &&
Distance : 6

10
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ]
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ]
Distance : 6

11
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } [
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } [
Distance : 6

12
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Object
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Object
Distance : 6

13
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ParamChecks
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ParamChecks
Distance : 6

14
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } test
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } test
Distance : 6

15
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } @
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } @
Distance : 6

16
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } !
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } !
Distance : 6

17
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertEquals
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertEquals
Distance : 6

18
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ==
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ==
Distance : 6

19
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } void
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } void
Distance : 6

20
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } []
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } []
Distance : 6

21
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkState
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkState
Distance : 6

22
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } toString
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } toString
Distance : 6

23
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } protected
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } protected
Distance : 6

24
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } nullNotPermitted
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } nullNotPermitted
Distance : 6

25
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } e
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } e
Distance : 6

26
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } super
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } super
Distance : 6

27
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } i
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } i
Distance : 6

28
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mock
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mock
Distance : 6

29
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Override
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Override
Distance : 6

30
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } public
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } public
Distance : 6

31
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } >
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } >
Distance : 6

32
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } new
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } new
Distance : 6

33
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } STRING_CONSTANT
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } STRING_CONSTANT
Distance : 6

34
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ,
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ,
Distance : 6

35
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } .
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } .
Distance : 6

36
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } }
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } }
Distance : 6

37
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } =
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } =
Distance : 6

38
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } (
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } (
Distance : 6

39
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <s>
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <s>
Distance : 6

40
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <blank>
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <blank>
Distance : 6

41
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ;
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ;
Distance : 6

42
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } )
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } )
Distance : 6

43
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ;
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ;
Distance : 6

44
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ()
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ()
Distance : 6

45
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } {
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } {
Distance : 6

46
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } false
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } false
Distance : 6

47
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } int
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } int
Distance : 6

48
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } double
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } double
Distance : 6

49
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } n
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } n
Distance : 6

50
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } matcher
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } matcher
Distance : 6

51
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NUMBER_CONSTANT
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NUMBER_CONSTANT
Distance : 6

52
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } this
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } this
Distance : 6

53
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } final
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } final
Distance : 6

54
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } name
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } name
Distance : 6

55
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } t
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } t
Distance : 6

56
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } solver
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } solver
Distance : 6

57
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getField
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getField
Distance : 6

58
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } pattern
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } pattern
Distance : 6

59
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } out
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } out
Distance : 6

60
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Collection
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Collection
Distance : 6

61
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mode
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mode
Distance : 6

62
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mockingProgress
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } mockingProgress
Distance : 6

63
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } return;
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } return;
Distance : 6

64
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } char
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } char
Distance : 6

65
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } get
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } get
Distance : 6

66
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } static
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } static
Distance : 6

67
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } setAcceptedLanguage
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } setAcceptedLanguage
Distance : 6

68
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } JSType
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } JSType
Distance : 6

69
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isEmpty
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isEmpty
Distance : 6

70
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } else
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } else
Distance : 6

71
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } true
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } true
Distance : 6

72
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } return
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } return
Distance : 6

73
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } if
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } if
Distance : 6

74
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getMessage
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getMessage
Distance : 6

75
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <
Distance : 6

76
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } dataset
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } dataset
Distance : 6

77
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getChronology
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getChronology
Distance : 6

78
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } js
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } js
Distance : 6

79
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } TestUtilities
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } TestUtilities
Distance : 6

80
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } equals
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } equals
Distance : 6

81
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } d
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } d
Distance : 6

82
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } notifyListeners
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } notifyListeners
Distance : 6

83
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } externs
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } externs
Distance : 6

84
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } for
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } for
Distance : 6

85
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Invocation
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Invocation
Distance : 6

86
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } node
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } node
Distance : 6

87
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getParent
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getParent
Distance : 6

88
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } StrBuilder
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } StrBuilder
Distance : 6

89
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } setUp
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } setUp
Distance : 6

90
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } invocations
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } invocations
Distance : 6

91
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } index
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } index
Distance : 6

92
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } instant
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } instant
Distance : 6

93
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } abs
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } abs
Distance : 6

94
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Double
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Double
Distance : 6

95
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <=
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <=
Distance : 6

96
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } reportMatcher
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } reportMatcher
Distance : 6

97
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } stream
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } stream
Distance : 6

98
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } s
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } s
Distance : 6

99
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; }
Distance : 5

100
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } contains
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } contains
Distance : 6

101
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } b
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } b
Distance : 6

102
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } stroke
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } stroke
Distance : 6

103
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } MutableTimePeriod
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } MutableTimePeriod
Distance : 6

104
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LanguageMode.ECMASCRIPT_2015
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LanguageMode.ECMASCRIPT_2015
Distance : 6

105
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } size
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } size
Distance : 6

106
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } traverseEs6
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } traverseEs6
Distance : 6

107
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } StringBuilder
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } StringBuilder
Distance : 6

108
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } chrono
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } chrono
Distance : 6

109
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } a
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } a
Distance : 6

110
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } returnZero
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } returnZero
Distance : 6

111
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } sb
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } sb
Distance : 6

112
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } scope
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } scope
Distance : 6

113
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } UnivariateFunction
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } UnivariateFunction
Distance : 6

114
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } sqrt
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } sqrt
Distance : 6

115
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } clone
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } clone
Distance : 6

116
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getFirstChild
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getFirstChild
Distance : 6

117
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } throws
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } throws
Distance : 6

118
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } simpleMethod
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } simpleMethod
Distance : 6

119
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getArgumentMatcherStorage
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getArgumentMatcherStorage
Distance : 6

120
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } append
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } append
Distance : 6

121
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } alpha
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } alpha
Distance : 6

122
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isNormalBlock
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isNormalBlock
Distance : 6

123
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } obj
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } obj
Distance : 6

124
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isBlock
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } isBlock
Distance : 6

125
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } array
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } array
Distance : 6

126
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } TestUtils
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } TestUtils
Distance : 6

127
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } length
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } length
Distance : 6

128
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } expected
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } expected
Distance : 6

129
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } IllegalArgumentException
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } IllegalArgumentException
Distance : 6

130
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } invocation
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } invocation
Distance : 6

131
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertThat
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertThat
Distance : 6

132
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } FastMath
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } FastMath
Distance : 6

133
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } reportCodeChange
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } reportCodeChange
Distance : 6

134
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } testSame
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } testSame
Distance : 6

135
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } createIllegalArgumentException
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } createIllegalArgumentException
Distance : 6

136
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ArrayList
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ArrayList
Distance : 6

137
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } parent
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } parent
Distance : 6

138
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LINE_JOINER
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LINE_JOINER
Distance : 6

139
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } x
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } x
Distance : 6

140
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } fireChangeEvent
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } fireChangeEvent
Distance : 6

141
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } str
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } str
Distance : 6

142
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } m
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } m
Distance : 6

143
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } try
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } try
Distance : 6

144
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } fail
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } fail
Distance : 6

145
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } :
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } :
Distance : 6

146
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LanguageMode.ECMASCRIPT6
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } LanguageMode.ECMASCRIPT6
Distance : 6

147
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } optimizer
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } optimizer
Distance : 6

148
Tree	{ return STRING_CONSTANT + ImageMapUtilities + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + ImageMapUtilities + STRING_CONSTANT ; }
Distance : 5

149
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <>
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } <>
Distance : 6

150
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ?
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ?
Distance : 6

151
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } boolean
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } boolean
Distance : 6

152
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } paint
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } paint
Distance : 6

153
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } result
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } result
Distance : 6

154
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } *
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } *
Distance : 6

155
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } type
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } type
Distance : 6

156
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getInstance
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } getInstance
Distance : 6

157
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } serialised
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } serialised
Distance : 6

158
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Exception
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Exception
Distance : 6

159
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Assert
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Assert
Distance : 6

160
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } source
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } source
Distance : 6

161
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Class
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Class
Distance : 6

162
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Math
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Math
Distance : 6

163
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } root
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } root
Distance : 6

164
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } options
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } options
Distance : 6

165
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } p
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } p
Distance : 6

166
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } data
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } data
Distance : 6

167
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } add
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } add
Distance : 6

168
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } field
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } field
Distance : 6

169
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkArgument
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkArgument
Distance : 6

170
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ex
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } ex
Distance : 6

171
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NodeUtil
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NodeUtil
Distance : 6

172
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } join
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } join
Distance : 6

173
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } List
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } List
Distance : 6

174
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NodeTraversal
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } NodeTraversal
Distance : 6

175
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Args
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Args
Distance : 6

176
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } v
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } v
Distance : 6

177
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Integer
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Integer
Distance : 6

178
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } lines
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } lines
Distance : 6

179
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } c
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } c
Distance : 6

180
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } verify
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } verify
Distance : 6

181
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Node
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Node
Distance : 6

182
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } compiler
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } compiler
Distance : 6

183
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } String
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } String
Distance : 6

184
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } null
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } null
Distance : 6

185
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } wanted
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } wanted
Distance : 6

186
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } +
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } +
Distance : 6

187
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } catch
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } catch
Distance : 6

188
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } !=
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } !=
Distance : 6

189
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } value
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } value
Distance : 6

190
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } /
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } /
Distance : 6

191
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertTrue
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } assertTrue
Distance : 6

192
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkNotNull
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } checkNotNull
Distance : 6

193
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Fraction
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } Fraction
Distance : 6

194
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } valueOf
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } valueOf
Distance : 6

195
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } instance
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } instance
Distance : 6

196
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } long
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } long
Distance : 6

197
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } throw
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } throw
Distance : 6

198
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } y
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } y
Distance : 6

199
Tree	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } PeriodType
Code	{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; } PeriodType
Distance : 6

========================================================================


========================================================================
Example Number: 8
Parent Code is: 
{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ this ( time , zone , Locale . getDefault () ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (40{val=RegularTimePeriod.DEFAULT_TIME_ZONE}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=zone}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/8/parent/source_org_jfree_data_time_Week.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } StrBuilder
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } StrBuilder
Distance : 2

1
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } add
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } add
Distance : 2

2
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkArgument
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkArgument
Distance : 2

3
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } data
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } data
Distance : 2

4
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NodeUtil
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NodeUtil
Distance : 2

5
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } void
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } void
Distance : 2

6
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } catch
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } catch
Distance : 2

7
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } compiler
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } compiler
Distance : 2

8
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } throw
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } throw
Distance : 2

9
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } n
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } n
Distance : 2

10
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } +
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } +
Distance : 2

11
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } e
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } e
Distance : 2

12
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NodeTraversal
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NodeTraversal
Distance : 2

13
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } expected
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } expected
Distance : 2

14
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } {}
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } {}
Distance : 2

15
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ]
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ]
Distance : 2

16
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mode
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mode
Distance : 2

17
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } &&
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } &&
Distance : 2

18
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } public
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } public
Distance : 2

19
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } final
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } final
Distance : 2

20
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } null
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } null
Distance : 2

21
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getArgumentMatcherStorage
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getArgumentMatcherStorage
Distance : 2

22
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } wanted
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } wanted
Distance : 2

23
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } if
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } if
Distance : 2

24
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ex
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ex
Distance : 2

25
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Preconditions
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Preconditions
Distance : 2

26
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } new
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } new
Distance : 2

27
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } =
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } =
Distance : 2

28
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } STRING_CONSTANT
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } STRING_CONSTANT
Distance : 2

29
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ()
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ()
Distance : 2

30
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ,
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ,
Distance : 2

31
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } {
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } {
Distance : 2

32
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } }
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } }
Distance : 2

33
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <
Distance : 2

34
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } .
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } .
Distance : 2

35
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } (
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } (
Distance : 2

36
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ;
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ;
Distance : 2

37
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <blank>
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <blank>
Distance : 2

38
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } (
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } (
Distance : 2

39
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <s>
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <s>
Distance : 2

40
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } )
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } )
Distance : 2

41
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } >
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } >
Distance : 2

42
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } js
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } js
Distance : 2

43
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } return
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } return
Distance : 2

44
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } true
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } true
Distance : 2

45
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } this
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } this
Distance : 2

46
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } -
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } -
Distance : 2

47
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } root
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } root
Distance : 2

48
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NUMBER_CONSTANT
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } NUMBER_CONSTANT
Distance : 2

49
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertTrue
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertTrue
Distance : 2

50
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } /
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } /
Distance : 2

51
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } value
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } value
Distance : 2

52
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } T
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } T
Distance : 2

53
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } setAcceptedLanguage
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } setAcceptedLanguage
Distance : 2

54
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } !=
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } !=
Distance : 2

55
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } reportMatcher
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } reportMatcher
Distance : 2

56
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } instant
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } instant
Distance : 2

57
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getMessage
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getMessage
Distance : 2

58
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } stream
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } stream
Distance : 2

59
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } else
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } else
Distance : 2

60
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } matcher
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } matcher
Distance : 2

61
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } type
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } type
Distance : 2

62
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } optimizer
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } optimizer
Distance : 2

63
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isBlock
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isBlock
Distance : 2

64
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } abs
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } abs
Distance : 2

65
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Distance : 2

66
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Distance : 2

67
Tree	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Code	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Distance : 2

68
Tree	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Code	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Distance : 3

69
Tree	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Code	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Distance : 3

70
Tree	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Code	{ this ( zone , RegularTimePeriod.DEFAULT_TIME_ZONE , zone . getDefault () ) ; }
Distance : 3

71
Tree	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Code	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , time . getDefault () ) ; }
Distance : 3

72
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } super
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } super
Distance : 2

73
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } long
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } long
Distance : 2

74
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } valueOf
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } valueOf
Distance : 2

75
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } double
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } double
Distance : 2

76
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Assert
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Assert
Distance : 2

77
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Fraction
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Fraction
Distance : 2

78
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Exception
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Exception
Distance : 2

79
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LanguageMode.ECMASCRIPT6
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LanguageMode.ECMASCRIPT6
Distance : 2

80
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } index
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } index
Distance : 2

81
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } node
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } node
Distance : 2

82
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } setUp
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } setUp
Distance : 2

83
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getParent
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getParent
Distance : 2

84
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } protected
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } protected
Distance : 2

85
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } invocations
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } invocations
Distance : 2

86
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } values
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } values
Distance : 2

87
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } out
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } out
Distance : 2

88
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } obj
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } obj
Distance : 2

89
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } a
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } a
Distance : 2

90
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } instance
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } instance
Distance : 2

91
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } alpha
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } alpha
Distance : 2

92
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } externs
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } externs
Distance : 2

93
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } simpleMethod
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } simpleMethod
Distance : 2

94
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } [
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } [
Distance : 2

95
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } i
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } i
Distance : 2

96
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkState
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkState
Distance : 2

97
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } int
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } int
Distance : 2

98
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } traverseEs6
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } traverseEs6
Distance : 2

99
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Distance : 1

100
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } MutableTimePeriod
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } MutableTimePeriod
Distance : 2

101
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } return;
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } return;
Distance : 2

102
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } get
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } get
Distance : 2

103
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mockingProgress
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mockingProgress
Distance : 2

104
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } clone
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } clone
Distance : 2

106
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Double
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Double
Distance : 2

107
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } PeriodType
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } PeriodType
Distance : 2

108
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <=
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <=
Distance : 2

109
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isNormalBlock
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isNormalBlock
Distance : 2

110
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } contains
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } contains
Distance : 2

111
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } b
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } b
Distance : 2

112
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } String
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } String
Distance : 2

113
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertThat
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertThat
Distance : 2

114
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } str
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } str
Distance : 2

115
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LINE_JOINER
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } LINE_JOINER
Distance : 2

116
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } createIllegalArgumentException
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } createIllegalArgumentException
Distance : 2

117
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } size
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } size
Distance : 2

118
Tree	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Code	{ this ( Locale , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
Distance : 2

119
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Object
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Object
Distance : 2

120
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } JSType
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } JSType
Distance : 2

121
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } throws
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } throws
Distance : 2

122
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } static
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } static
Distance : 2

123
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } char
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } char
Distance : 2

124
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } source
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } source
Distance : 2

125
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } v
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } v
Distance : 2

126
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } join
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } join
Distance : 2

127
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } result
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } result
Distance : 2

128
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } boolean
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } boolean
Distance : 2

129
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getInstance
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getInstance
Distance : 2

130
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } *
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } *
Distance : 2

131
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } serialised
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } serialised
Distance : 2

132
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ArrayList
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ArrayList
Distance : 2

133
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <>
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } <>
Distance : 2

134
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } f
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } f
Distance : 2

135
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ParamChecks
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ParamChecks
Distance : 2

136
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } class
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } class
Distance : 2

137
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } testSame
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } testSame
Distance : 2

138
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mock
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } mock
Distance : 2

139
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } parent
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } parent
Distance : 2

140
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } fireChangeEvent
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } fireChangeEvent
Distance : 2

141
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } stroke
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } stroke
Distance : 2

142
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } StringBuilder
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } StringBuilder
Distance : 2

143
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isEmpty
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } isEmpty
Distance : 2

144
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } sqrt
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } sqrt
Distance : 2

145
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } MathRuntimeException
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } MathRuntimeException
Distance : 2

146
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } returnZero
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } returnZero
Distance : 2

147
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Args
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Args
Distance : 2

148
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getFirstChild
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } getFirstChild
Distance : 2

149
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } :
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } :
Distance : 2

150
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } m
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } m
Distance : 2

151
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } paint
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } paint
Distance : 2

152
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } length
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } length
Distance : 2

153
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Node
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Node
Distance : 2

154
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } lines
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } lines
Distance : 2

155
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } verify
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } verify
Distance : 2

156
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } TestUtils
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } TestUtils
Distance : 2

157
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Integer
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Integer
Distance : 2

158
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkNotNull
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } checkNotNull
Distance : 2

159
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } s
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } s
Distance : 2

160
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } scope
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } scope
Distance : 2

161
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } reportCodeChange
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } reportCodeChange
Distance : 2

162
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } invocation
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } invocation
Distance : 2

163
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } FastMath
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } FastMath
Distance : 2

164
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } t
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } t
Distance : 2

165
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } name
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } name
Distance : 2

166
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } array
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } array
Distance : 2

167
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } List
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } List
Distance : 2

168
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } try
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } try
Distance : 2

169
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } IllegalArgumentException
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } IllegalArgumentException
Distance : 2

170
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } UnivariateFunction
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } UnivariateFunction
Distance : 2

171
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } append
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } append
Distance : 2

172
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ?
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ?
Distance : 2

173
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } !
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } !
Distance : 2

174
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } nullNotPermitted
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } nullNotPermitted
Distance : 2

175
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } fail
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } fail
Distance : 2

176
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } []
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } []
Distance : 2

177
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } @
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } @
Distance : 2

178
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertEquals
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } assertEquals
Distance : 2

179
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } test
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } test
Distance : 2

180
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ==
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } ==
Distance : 2

181
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } equals
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } equals
Distance : 2

182
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Invocation
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Invocation
Distance : 2

183
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } notifyListeners
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } notifyListeners
Distance : 2

184
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } for
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } for
Distance : 2

185
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } TestUtilities
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } TestUtilities
Distance : 2

186
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } d
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } d
Distance : 2

187
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } sb
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } sb
Distance : 2

188
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Override
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Override
Distance : 2

189
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } field
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } field
Distance : 2

190
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } false
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } false
Distance : 2

191
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } x
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } x
Distance : 2

192
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } c
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } c
Distance : 2

193
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } toString
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } toString
Distance : 2

194
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } p
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } p
Distance : 2

195
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Test
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Test
Distance : 2

196
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } options
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } options
Distance : 2

197
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Math
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Math
Distance : 2

198
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Class
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } Class
Distance : 2

199
Tree	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } chrono
Code	{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; } chrono
Distance : 2

========================================================================


========================================================================
Example Number: 9
Parent Code is: 
if ( dataset != null ) { return result ; }
-------------------------------------------------------------------------------
Child code is: 
if ( dataset == null ) { return result ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dataset}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dataset}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/1/parent/source_org_jfree_chart_renderer_category_AbstractCategoryItemRenderer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( dataset != null ) {}
Code	if ( dataset != null ) {}
Distance : 6

1
Tree	if ( dataset != null ) { throw ^= }
Code	if ( dataset != null ) { throw ^= }
Distance : 4

2
Tree	if ( dataset != null ) { throw ? }
Code	if ( dataset != null ) { throw ? }
Distance : 4

3
Tree	if ( dataset != null ) { super }
Code	if ( dataset != null ) { super }
Distance : 4

4
Tree	if ( dataset != null ) { /= }
Code	if ( dataset != null ) { /= }
Distance : 4

5
Tree	if ( dataset != null ) try
Code	if ( dataset != null ) try
Distance : 6

6
Tree	if ( dataset != null ) { for CHAR_CONS }
Code	if ( dataset != null ) { for CHAR_CONS }
Distance : 4

7
Tree	if ( dataset != null ) { throw % }
Code	if ( dataset != null ) { throw % }
Distance : 4

8
Tree	if ( dataset != null ) { throw -= }
Code	if ( dataset != null ) { throw -= }
Distance : 4

9
Tree	if ( dataset != null ) { case -= }
Code	if ( dataset != null ) { case -= }
Distance : 4

10
Tree	if ( dataset != null ) { % }
Code	if ( dataset != null ) { % }
Distance : 4

11
Tree	if ( dataset != null ) CHAR_CONS
Code	if ( dataset != null ) CHAR_CONS
Distance : 6

12
Tree	if ( dataset != null ) { REPORTER CHAR_CONS }
Code	if ( dataset != null ) { REPORTER CHAR_CONS }
Distance : 4

13
Tree	if ( dataset != null ) { ? }
Code	if ( dataset != null ) { ? }
Distance : 4

14
Tree	if ( dataset != null ) --
Code	if ( dataset != null ) --
Distance : 6

15
Tree	if ( dataset != null ) { invocation ++ }
Code	if ( dataset != null ) { invocation ++ }
Distance : 4

16
Tree	if ( dataset != null ) { call CHAR_CONS }
Code	if ( dataset != null ) { call CHAR_CONS }
Distance : 4

17
Tree	if ( dataset != null ) { MOCKING_PROGRESS % }
Code	if ( dataset != null ) { MOCKING_PROGRESS % }
Distance : 4

18
Tree	if ( dataset != null ) { return; ++ }
Code	if ( dataset != null ) { return; ++ }
Distance : 4

19
Tree	if ( dataset != null ) { return ++ }
Code	if ( dataset != null ) { return ++ }
Distance : 3

20
Tree	if ( dataset != null ) { t CHAR_CONS }
Code	if ( dataset != null ) { t CHAR_CONS }
Distance : 4

21
Tree	if ( dataset != null ) { MOCKING_PROGRESS ^= }
Code	if ( dataset != null ) { MOCKING_PROGRESS ^= }
Distance : 4

22
Tree	if ( dataset != null ) { break; }
Code	if ( dataset != null ) { break; }
Distance : 4

23
Tree	if ( dataset != null ) { super CHAR_CONS }
Code	if ( dataset != null ) { super CHAR_CONS }
Distance : 4

24
Tree	if ( dataset != null ) { while }
Code	if ( dataset != null ) { while }
Distance : 4

25
Tree	if ( dataset != null ) { continue }
Code	if ( dataset != null ) { continue }
Distance : 4

26
Tree	if ( dataset != null ) { /= CHAR_CONS }
Code	if ( dataset != null ) { /= CHAR_CONS }
Distance : 4

27
Tree	if ( dataset != null ) { lastException ++ }
Code	if ( dataset != null ) { lastException ++ }
Distance : 4

28
Tree	if ( dataset != null ) { case ^ }
Code	if ( dataset != null ) { case ^ }
Distance : 4

29
Tree	if ( dataset != null ) { moment }
Code	if ( dataset != null ) { moment }
Distance : 4

30
Tree	if ( dataset != null ) { % CHAR_CONS }
Code	if ( dataset != null ) { % CHAR_CONS }
Distance : 4

31
Tree	if ( dataset != null ) { ++ CHAR_CONS }
Code	if ( dataset != null ) { ++ CHAR_CONS }
Distance : 4

32
Tree	if ( dataset != null ) { case NullPointerException }
Code	if ( dataset != null ) { case NullPointerException }
Distance : 4

33
Tree	if ( dataset != null ) { case % }
Code	if ( dataset != null ) { case % }
Distance : 4

34
Tree	if ( dataset != null ) { case ^= }
Code	if ( dataset != null ) { case ^= }
Distance : 4

35
Tree	if ( dataset != null ) { invocation }
Code	if ( dataset != null ) { invocation }
Distance : 4

36
Tree	if ( dataset != null ) { return CHAR_CONS }
Code	if ( dataset != null ) { return CHAR_CONS }
Distance : 3

37
Tree	if ( dataset != null ) { throw /= }
Code	if ( dataset != null ) { throw /= }
Distance : 4

38
Tree	if ( dataset != null ) { assert CHAR_CONS }
Code	if ( dataset != null ) { assert CHAR_CONS }
Distance : 4

39
Tree	if ( dataset != null ) float
Code	if ( dataset != null ) float
Distance : 6

40
Tree	if ( dataset != null ) { else CHAR_CONS }
Code	if ( dataset != null ) { else CHAR_CONS }
Distance : 4

41
Tree	if ( dataset != null ) { CHAR_CONS CHAR_CONS }
Code	if ( dataset != null ) { CHAR_CONS CHAR_CONS }
Distance : 4

42
Tree	if ( dataset != null ) { throw IllegalArgumentException }
Code	if ( dataset != null ) { throw IllegalArgumentException }
Distance : 4

43
Tree	if ( dataset != null ) { MOCKING_PROGRESS result }
Code	if ( dataset != null ) { MOCKING_PROGRESS result }
Distance : 3

44
Tree	if ( dataset != null ) *=
Code	if ( dataset != null ) *=
Distance : 6

45
Tree	if ( dataset != null ) case
Code	if ( dataset != null ) case
Distance : 6

46
Tree	if ( dataset != null ) {
Code	if ( dataset != null ) {
Distance : 5

47
Tree	if ( dataset != null ) { case /= }
Code	if ( dataset != null ) { case /= }
Distance : 4

48
Tree	if ( dataset != null ) { invocation CHAR_CONS }
Code	if ( dataset != null ) { invocation CHAR_CONS }
Distance : 4

49
Tree	if ( dataset != null ) { t }
Code	if ( dataset != null ) { t }
Distance : 4

50
Tree	if ( dataset != null ) { return; }
Code	if ( dataset != null ) { return; }
Distance : 4

51
Tree	if ( dataset != null ) public
Code	if ( dataset != null ) public
Distance : 6

52
Tree	if ( dataset != null ) { lastException }
Code	if ( dataset != null ) { lastException }
Distance : 4

53
Tree	if ( dataset != null ) !=
Code	if ( dataset != null ) !=
Distance : 6

54
Tree	if ( dataset != null ) { assert ++ }
Code	if ( dataset != null ) { assert ++ }
Distance : 4

55
Tree	if ( dataset != null ) { for }
Code	if ( dataset != null ) { for }
Distance : 4

56
Tree	if ( dataset != null ) { MOCKING_PROGRESS /= }
Code	if ( dataset != null ) { MOCKING_PROGRESS /= }
Distance : 4

57
Tree	if ( dataset != null ) { CHAR_CONS ++ }
Code	if ( dataset != null ) { CHAR_CONS ++ }
Distance : 4

58
Tree	if ( dataset != null ) { else ++ }
Code	if ( dataset != null ) { else ++ }
Distance : 4

59
Tree	if ( dataset != null ) { REPORTER }
Code	if ( dataset != null ) { REPORTER }
Distance : 4

60
Tree	if ( dataset != null ) super();
Code	if ( dataset != null ) super();
Distance : 6

61
Tree	if ( dataset != null ) { call }
Code	if ( dataset != null ) { call }
Distance : 4

62
Tree	if ( dataset != null ) { ++ }
Code	if ( dataset != null ) { ++ }
Distance : 4

63
Tree	if ( dataset != null ) { lastException CHAR_CONS }
Code	if ( dataset != null ) { lastException CHAR_CONS }
Distance : 4

64
Tree	if ( dataset != null ) { return; CHAR_CONS }
Code	if ( dataset != null ) { return; CHAR_CONS }
Distance : 4

65
Tree	if ( dataset != null ) { throw result }
Code	if ( dataset != null ) { throw result }
Distance : 3

66
Tree	if ( dataset != null ) { matrix }
Code	if ( dataset != null ) { matrix }
Distance : 4

67
Tree	if ( dataset != null ) { MOCKING_PROGRESS ? }
Code	if ( dataset != null ) { MOCKING_PROGRESS ? }
Distance : 4

68
Tree	if ( dataset != null ) { MOCKING_PROGRESS -= }
Code	if ( dataset != null ) { MOCKING_PROGRESS -= }
Distance : 4

69
Tree	if ( dataset != null ) { case ClassNotFoundException }
Code	if ( dataset != null ) { case ClassNotFoundException }
Distance : 4

70
Tree	if ( dataset != null ) array
Code	if ( dataset != null ) array
Distance : 6

71
Tree	if ( dataset != null ) { var.scope }
Code	if ( dataset != null ) { var.scope }
Distance : 4

72
Tree	if ( dataset != null ) { if }
Code	if ( dataset != null ) { if }
Distance : 4

73
Tree	if ( dataset != null ) { case &= }
Code	if ( dataset != null ) { case &= }
Distance : 4

74
Tree	if ( dataset != null ) { % ++ }
Code	if ( dataset != null ) { % ++ }
Distance : 4

75
Tree	if ( dataset != null ) { ? ++ }
Code	if ( dataset != null ) { ? ++ }
Distance : 4

76
Tree	if ( dataset != null ) { obj CHAR_CONS }
Code	if ( dataset != null ) { obj CHAR_CONS }
Distance : 4

77
Tree	if ( dataset != null ) { MOCKING_PROGRESS String }
Code	if ( dataset != null ) { MOCKING_PROGRESS String }
Distance : 4

78
Tree	if ( dataset != null ) basis
Code	if ( dataset != null ) basis
Distance : 6

79
Tree	if ( dataset != null ) { case IllegalStateException }
Code	if ( dataset != null ) { case IllegalStateException }
Distance : 4

80
Tree	if ( dataset != null ) { scope }
Code	if ( dataset != null ) { scope }
Distance : 4

81
Tree	if ( dataset != null ) { continue; }
Code	if ( dataset != null ) { continue; }
Distance : 4

82
Tree	if ( dataset != null ) { validValues }
Code	if ( dataset != null ) { validValues }
Distance : 4

83
Tree	if ( dataset != null ) { / }
Code	if ( dataset != null ) { / }
Distance : 4

84
Tree	if ( dataset != null ) { String }
Code	if ( dataset != null ) { String }
Distance : 4

85
Tree	if ( dataset != null ) { += CHAR_CONS }
Code	if ( dataset != null ) { += CHAR_CONS }
Distance : 4

86
Tree	if ( dataset != null ) { MOCKING_PROGRESS NumberIsTooLargeException }
Code	if ( dataset != null ) { MOCKING_PROGRESS NumberIsTooLargeException }
Distance : 4

87
Tree	if ( dataset != null ) { MOCKING_PROGRESS MathArithmeticException }
Code	if ( dataset != null ) { MOCKING_PROGRESS MathArithmeticException }
Distance : 4

88
Tree	if ( dataset != null ) { leftPlane }
Code	if ( dataset != null ) { leftPlane }
Distance : 4

89
Tree	if ( dataset != null ) { inheritsCalls }
Code	if ( dataset != null ) { inheritsCalls }
Distance : 4

90
Tree	if ( dataset != null ) { while ++ }
Code	if ( dataset != null ) { while ++ }
Distance : 4

91
Tree	if ( dataset != null ) { MOCKING_PROGRESS continue; }
Code	if ( dataset != null ) { MOCKING_PROGRESS continue; }
Distance : 4

92
Tree	if ( dataset != null ) { case ArithmeticException }
Code	if ( dataset != null ) { case ArithmeticException }
Distance : 4

93
Tree	if ( dataset != null ) { int }
Code	if ( dataset != null ) { int }
Distance : 4

94
Tree	if ( dataset != null ) { return *= }
Code	if ( dataset != null ) { return *= }
Distance : 3

95
Tree	if ( dataset != null ) { throw NumberIsTooLargeException }
Code	if ( dataset != null ) { throw NumberIsTooLargeException }
Distance : 4

96
Tree	if ( dataset != null ) { assert *= }
Code	if ( dataset != null ) { assert *= }
Distance : 4

97
Tree	if ( dataset != null ) { continue ++ }
Code	if ( dataset != null ) { continue ++ }
Distance : 4

98
Tree	if ( dataset != null ) <=
Code	if ( dataset != null ) <=
Distance : 6

99
Tree	if ( dataset != null ) { break; ++ }
Code	if ( dataset != null ) { break; ++ }
Distance : 4

100
Tree	if ( dataset != null ) { super ++ }
Code	if ( dataset != null ) { super ++ }
Distance : 4

101
Tree	if ( dataset != null ) { throw ClassNotFoundException }
Code	if ( dataset != null ) { throw ClassNotFoundException }
Distance : 4

102
Tree	if ( dataset != null ) { extends CHAR_CONS }
Code	if ( dataset != null ) { extends CHAR_CONS }
Distance : 4

103
Tree	if ( dataset != null ) { extends }
Code	if ( dataset != null ) { extends }
Distance : 4

104
Tree	if ( dataset != null ) &=
Code	if ( dataset != null ) &=
Distance : 6

105
Tree	if ( dataset != null ) { throw ^ }
Code	if ( dataset != null ) { throw ^ }
Distance : 4

106
Tree	if ( dataset != null ) { return result }
Code	if ( dataset != null ) { return result }
Distance : 2

107
Tree	if ( dataset != null ) { for ++ }
Code	if ( dataset != null ) { for ++ }
Distance : 4

108
Tree	if ( dataset != null ) { ? CHAR_CONS }
Code	if ( dataset != null ) { ? CHAR_CONS }
Distance : 4

109
Tree	if ( dataset != null ) { case String }
Code	if ( dataset != null ) { case String }
Distance : 4

110
Tree	if ( dataset != null ) { REPORTER ++ }
Code	if ( dataset != null ) { REPORTER ++ }
Distance : 4

111
Tree	if ( dataset != null ) { obj }
Code	if ( dataset != null ) { obj }
Distance : 4

112
Tree	if ( dataset != null ) { case ? }
Code	if ( dataset != null ) { case ? }
Distance : 4

113
Tree	if ( dataset != null ) { MOCKING_PROGRESS ^ }
Code	if ( dataset != null ) { MOCKING_PROGRESS ^ }
Distance : 4

114
Tree	if ( dataset != null ) { case MathArithmeticException }
Code	if ( dataset != null ) { case MathArithmeticException }
Distance : 4

115
Tree	if ( dataset != null ) { throw NullPointerException }
Code	if ( dataset != null ) { throw NullPointerException }
Distance : 4

116
Tree	if ( dataset != null ) { call ++ }
Code	if ( dataset != null ) { call ++ }
Distance : 4

117
Tree	if ( dataset != null ) { case NumberIsTooLargeException }
Code	if ( dataset != null ) { case NumberIsTooLargeException }
Distance : 4

118
Tree	if ( dataset != null ) { break; CHAR_CONS }
Code	if ( dataset != null ) { break; CHAR_CONS }
Distance : 4

119
Tree	if ( dataset != null ) { ++ ++ }
Code	if ( dataset != null ) { ++ ++ }
Distance : 4

120
Tree	if ( dataset != null ) { /= ++ }
Code	if ( dataset != null ) { /= ++ }
Distance : 4

121
Tree	if ( dataset != null ) { matrix CHAR_CONS }
Code	if ( dataset != null ) { matrix CHAR_CONS }
Distance : 4

122
Tree	if ( dataset != null ) { throw &= }
Code	if ( dataset != null ) { throw &= }
Distance : 4

123
Tree	if ( dataset != null ) { t ++ }
Code	if ( dataset != null ) { t ++ }
Distance : 4

124
Tree	if ( dataset != null ) { moment CHAR_CONS }
Code	if ( dataset != null ) { moment CHAR_CONS }
Distance : 4

125
Tree	if ( dataset != null ) -=
Code	if ( dataset != null ) -=
Distance : 6

126
Tree	if ( dataset != null ) { MOCKING_PROGRESS IllegalArgumentException }
Code	if ( dataset != null ) { MOCKING_PROGRESS IllegalArgumentException }
Distance : 4

127
Tree	if ( dataset != null ) { MOCKING_PROGRESS NullPointerException }
Code	if ( dataset != null ) { MOCKING_PROGRESS NullPointerException }
Distance : 4

128
Tree	if ( dataset != null ) { += }
Code	if ( dataset != null ) { += }
Distance : 4

129
Tree	if ( dataset != null ) { throw String }
Code	if ( dataset != null ) { throw String }
Distance : 4

130
Tree	if ( dataset != null ) { case continue; }
Code	if ( dataset != null ) { case continue; }
Distance : 4

131
Tree	if ( dataset != null ) { continue CHAR_CONS }
Code	if ( dataset != null ) { continue CHAR_CONS }
Distance : 4

132
Tree	if ( dataset != null ) { while CHAR_CONS }
Code	if ( dataset != null ) { while CHAR_CONS }
Distance : 4

133
Tree	if ( dataset != null ) @
Code	if ( dataset != null ) @
Distance : 6

134
Tree	if ( dataset != null ) { : }
Code	if ( dataset != null ) { : }
Distance : 4

135
Tree	if ( dataset != null ) []
Code	if ( dataset != null ) []
Distance : 6

136
Tree	if ( dataset != null ) continue;
Code	if ( dataset != null ) continue;
Distance : 6

137
Tree	if ( dataset != null ) { throw CHAR_CONS }
Code	if ( dataset != null ) { throw CHAR_CONS }
Distance : 4

138
Tree	if ( dataset != null ) { throw }
Code	if ( dataset != null ) { throw }
Distance : 4

139
Tree	if ( dataset != null ) :
Code	if ( dataset != null ) :
Distance : 6

140
Tree	if ( dataset != null ) { MOCKING_PROGRESS CHAR_CONS }
Code	if ( dataset != null ) { MOCKING_PROGRESS CHAR_CONS }
Distance : 4

141
Tree	if ( dataset != null ) protected
Code	if ( dataset != null ) protected
Distance : 6

142
Tree	if ( dataset != null ) { case ++ }
Code	if ( dataset != null ) { case ++ }
Distance : 4

143
Tree	if ( dataset != null ) %
Code	if ( dataset != null ) %
Distance : 6

144
Tree	if ( dataset != null ) ]
Code	if ( dataset != null ) ]
Distance : 6

145
Tree	if ( dataset != null ) { throw ++ }
Code	if ( dataset != null ) { throw ++ }
Distance : 4

146
Tree	if ( dataset != null ) ++
Code	if ( dataset != null ) ++
Distance : 6

147
Tree	if ( dataset != null ) { MOCKING_PROGRESS ++ }
Code	if ( dataset != null ) { MOCKING_PROGRESS ++ }
Distance : 4

148
Tree	if ( dataset != null ) /=
Code	if ( dataset != null ) /=
Distance : 6

149
Tree	if ( dataset != null ) private
Code	if ( dataset != null ) private
Distance : 6

150
Tree	if ( dataset != null ) &&
Code	if ( dataset != null ) &&
Distance : 6

151
Tree	if ( dataset != null ) for
Code	if ( dataset != null ) for
Distance : 6

152
Tree	if ( dataset != null ) +=
Code	if ( dataset != null ) +=
Distance : 6

153
Tree	if ( dataset != null ) ^
Code	if ( dataset != null ) ^
Distance : 6

154
Tree	if ( dataset != null ) { case *= }
Code	if ( dataset != null ) { case *= }
Distance : 4

155
Tree	if ( dataset != null ) { case IllegalArgumentException }
Code	if ( dataset != null ) { case IllegalArgumentException }
Distance : 4

156
Tree	if ( dataset != null ) instanceof
Code	if ( dataset != null ) instanceof
Distance : 6

157
Tree	if ( dataset != null ) { throw *= }
Code	if ( dataset != null ) { throw *= }
Distance : 4

158
Tree	if ( dataset != null ) { case result }
Code	if ( dataset != null ) { case result }
Distance : 3

159
Tree	if ( dataset != null ) break;
Code	if ( dataset != null ) break;
Distance : 6

160
Tree	if ( dataset != null ) final
Code	if ( dataset != null ) final
Distance : 6

161
Tree	if ( dataset != null ) { assert }
Code	if ( dataset != null ) { assert }
Distance : 4

162
Tree	if ( dataset != null ) { return }
Code	if ( dataset != null ) { return }
Distance : 3

163
Tree	if ( dataset != null ) { CHAR_CONS }
Code	if ( dataset != null ) { CHAR_CONS }
Distance : 4

164
Tree	if ( dataset != null ) { else }
Code	if ( dataset != null ) { else }
Distance : 4

165
Tree	if ( dataset != null ) { case CHAR_CONS }
Code	if ( dataset != null ) { case CHAR_CONS }
Distance : 4

166
Tree	if ( dataset != null ) { MOCKING_PROGRESS }
Code	if ( dataset != null ) { MOCKING_PROGRESS }
Distance : 4

167
Tree	if ( dataset != null ) &
Code	if ( dataset != null ) &
Distance : 6

168
Tree	if ( dataset != null ) >=
Code	if ( dataset != null ) >=
Distance : 6

169
Tree	if ( dataset != null ) { MOCKING_PROGRESS *= }
Code	if ( dataset != null ) { MOCKING_PROGRESS *= }
Distance : 4

170
Tree	if ( dataset != null ) ?
Code	if ( dataset != null ) ?
Distance : 6

171
Tree	if ( dataset != null ) extends
Code	if ( dataset != null ) extends
Distance : 6

172
Tree	if ( dataset != null ) throws
Code	if ( dataset != null ) throws
Distance : 6

173
Tree	if ( dataset != null ) /
Code	if ( dataset != null ) /
Distance : 6

174
Tree	if ( dataset != null ) { case }
Code	if ( dataset != null ) { case }
Distance : 4

175
Tree	if ( dataset != null ) *
Code	if ( dataset != null ) *
Distance : 6

176
Tree	if ( dataset != null ) { case else }
Code	if ( dataset != null ) { case else }
Distance : 4

177
Tree	if ( dataset != null ) { throw Throwable }
Code	if ( dataset != null ) { throw Throwable }
Distance : 4

178
Tree	if ( dataset != null ) { super(); }
Code	if ( dataset != null ) { super(); }
Distance : 4

179
Tree	if ( dataset != null ) { MOCKING_PROGRESS &= }
Code	if ( dataset != null ) { MOCKING_PROGRESS &= }
Distance : 4

180
Tree	if ( dataset != null ) { Number }
Code	if ( dataset != null ) { Number }
Distance : 4

181
Tree	if ( dataset != null ) null
Code	if ( dataset != null ) null
Distance : 6

182
Tree	if ( dataset != null ) { CHAR_CONS *= }
Code	if ( dataset != null ) { CHAR_CONS *= }
Distance : 4

183
Tree	if ( dataset != null ) { rank }
Code	if ( dataset != null ) { rank }
Distance : 4

184
Tree	if ( dataset != null ) { -= }
Code	if ( dataset != null ) { -= }
Distance : 4

185
Tree	if ( dataset != null ) throw
Code	if ( dataset != null ) throw
Distance : 6

186
Tree	if ( dataset != null ) { matrix ++ }
Code	if ( dataset != null ) { matrix ++ }
Distance : 4

187
Tree	if ( dataset != null ) { that }
Code	if ( dataset != null ) { that }
Distance : 4

188
Tree	if ( dataset != null ) { var.scope CHAR_CONS }
Code	if ( dataset != null ) { var.scope CHAR_CONS }
Distance : 4

189
Tree	if ( dataset != null ) { / CHAR_CONS }
Code	if ( dataset != null ) { / CHAR_CONS }
Distance : 4

190
Tree	if ( dataset != null ) { case ArrayIndexOutOfBoundsException }
Code	if ( dataset != null ) { case ArrayIndexOutOfBoundsException }
Distance : 4

191
Tree	if ( dataset != null ) { @ }
Code	if ( dataset != null ) { @ }
Distance : 4

192
Tree	if ( dataset != null ) { CHAR_CONS IllegalArgumentException }
Code	if ( dataset != null ) { CHAR_CONS IllegalArgumentException }
Distance : 4

193
Tree	if ( dataset != null ) { else *= }
Code	if ( dataset != null ) { else *= }
Distance : 4

194
Tree	if ( dataset != null ) { case break; }
Code	if ( dataset != null ) { case break; }
Distance : 4

195
Tree	if ( dataset != null ) { assert IllegalArgumentException }
Code	if ( dataset != null ) { assert IllegalArgumentException }
Distance : 4

196
Tree	if ( dataset != null ) { MOCKING_PROGRESS ClassNotFoundException }
Code	if ( dataset != null ) { MOCKING_PROGRESS ClassNotFoundException }
Distance : 4

197
Tree	if ( dataset != null ) { moment ++ }
Code	if ( dataset != null ) { moment ++ }
Distance : 4

198
Tree	if ( dataset != null ) return;
Code	if ( dataset != null ) return;
Distance : 6

199
Tree	if ( dataset != null ) { : CHAR_CONS }
Code	if ( dataset != null ) { : CHAR_CONS }
Distance : 4

========================================================================


========================================================================
Example Number: 10
Parent Code is: 
name.globalSets == NUMBER_CONSTANT && name.localSets == NUMBER_CONSTANT && name.aliasingGets > NUMBER_CONSTANT
-------------------------------------------------------------------------------
Child code is: 
! name.inExterns && name.globalSets == NUMBER_CONSTANT && name.localSets == NUMBER_CONSTANT && name.aliasingGets > NUMBER_CONSTANT
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (27 (27 (40{val=name.globalSets}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (40{val=name.localSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.aliasingGets}) (231{val=>}) (34{val=NUMBER_CONSTANT}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (27 (27 (38 (207{val=!}) (40{val=name.inExterns})) (249{val=&&}) (27 (40{val=name.globalSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.localSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.aliasingGets}) (231{val=>}) (34{val=NUMBER_CONSTANT}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/130/parent/src_com_google_javascript_jscomp_CollapseProperties.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	defUse
Code	defUse
Distance : 14

1
Tree	mf2
Code	mf2
Distance : 14

2
Tree	doSlicing
Code	doSlicing
Distance : 14

3
Tree	markInvocationsAsVerified
Code	markInvocationsAsVerified
Distance : 14

4
Tree	chart.subtitles
Code	chart.subtitles
Distance : 14

5
Tree	preserveBlock
Code	preserveBlock
Distance : 14

6
Tree	sourceMapOriginalSources
Code	sourceMapOriginalSources
Distance : 14

7
Tree	rightValObj
Code	rightValObj
Distance : 14

8
Tree	ExampleTest
Code	ExampleTest
Distance : 14

9
Tree	nodes
Code	nodes
Distance : 14

10
Tree	OPTION.escapePlus
Code	OPTION.escapePlus
Distance : 14

11
Tree	messages
Code	messages
Distance : 14

12
Tree	spiedReceiver.oldAntenna
Code	spiedReceiver.oldAntenna
Distance : 14

13
Tree	noPrimitives
Code	noPrimitives
Distance : 14

14
Tree	vectorData
Code	vectorData
Distance : 14

15
Tree	iDurationConverters
Code	iDurationConverters
Distance : 14

16
Tree	dft
Code	dft
Distance : 14

17
Tree	scanInnerBlocks
Code	scanInnerBlocks
Distance : 14

18
Tree	err
Code	err
Distance : 14

19
Tree	jacobianProviders
Code	jacobianProviders
Distance : 14

20
Tree	CharEncoding
Code	CharEncoding
Distance : 14

21
Tree	copyMessage
Code	copyMessage
Distance : 14

22
Tree	invR3
Code	invR3
Distance : 14

23
Tree	shadowArc
Code	shadowArc
Distance : 14

24
Tree	roundUp
Code	roundUp
Distance : 14

25
Tree	GlobalConfiguration
Code	GlobalConfiguration
Distance : 14

26
Tree	positivePrefix
Code	positivePrefix
Distance : 14

27
Tree	dataRI
Code	dataRI
Distance : 14

28
Tree	serializationSupport
Code	serializationSupport
Distance : 14

29
Tree	iInstantConverters
Code	iInstantConverters
Distance : 14

30
Tree	isUp
Code	isUp
Distance : 14

31
Tree	getUnfinishedMessage
Code	getUnfinishedMessage
Distance : 14

32
Tree	customizedEngine
Code	customizedEngine
Distance : 14

33
Tree	TwoDigitMonthField
Code	TwoDigitMonthField
Distance : 14

34
Tree	getReplacements
Code	getReplacements
Distance : 14

35
Tree	yield
Code	yield
Distance : 14

36
Tree	CombinedEventsManager
Code	CombinedEventsManager
Distance : 14

37
Tree	unique
Code	unique
Distance : 14

38
Tree	tickLabelFormat
Code	tickLabelFormat
Distance : 14

39
Tree	m.featureSet
Code	m.featureSet
Distance : 14

40
Tree	differsWithArgumentTypes
Code	differsWithArgumentTypes
Distance : 14

41
Tree	CategoryLabelPosition
Code	CategoryLabelPosition
Distance : 14

42
Tree	invalidations
Code	invalidations
Distance : 14

43
Tree	preciseType
Code	preciseType
Distance : 14

44
Tree	options.deadAssignmentElimination
Code	options.deadAssignmentElimination
Distance : 14

45
Tree	StringEscapeUtils.ESCAPE_JAVA
Code	StringEscapeUtils.ESCAPE_JAVA
Distance : 14

46
Tree	packageJsonEntryNames
Code	packageJsonEntryNames
Distance : 14

47
Tree	subformats
Code	subformats
Distance : 14

48
Tree	reserved
Code	reserved
Distance : 14

49
Tree	parentChunkCanSeeSymbolsDeclaredInChildren
Code	parentChunkCanSeeSymbolsDeclaredInChildren
Distance : 14

50
Tree	zipEntryPath
Code	zipEntryPath
Distance : 14

51
Tree	halfW
Code	halfW
Distance : 14

52
Tree	testObjectDefineProperties1
Code	testObjectDefineProperties1
Distance : 14

53
Tree	serializableListeners
Code	serializableListeners
Distance : 14

54
Tree	mcr
Code	mcr
Distance : 14

55
Tree	partials
Code	partials
Distance : 14

56
Tree	innerScope
Code	innerScope
Distance : 14

57
Tree	maxFields
Code	maxFields
Distance : 14

58
Tree	excludeNullValues
Code	excludeNullValues
Distance : 14

59
Tree	ep
Code	ep
Distance : 14

60
Tree	clusters
Code	clusters
Distance : 14

61
Tree	newInput
Code	newInput
Distance : 14

62
Tree	langs
Code	langs
Distance : 14

63
Tree	PinNeedle
Code	PinNeedle
Distance : 14

64
Tree	objectOutputStream
Code	objectOutputStream
Distance : 14

65
Tree	isMultiline
Code	isMultiline
Distance : 14

66
Tree	BigFractionMatrixConverter
Code	BigFractionMatrixConverter
Distance : 14

67
Tree	jsonFile
Code	jsonFile
Distance : 14

68
Tree	yInt
Code	yInt
Distance : 14

69
Tree	onlyExport
Code	onlyExport
Distance : 14

70
Tree	patternParam
Code	patternParam
Distance : 14

71
Tree	isLhsOfAssign
Code	isLhsOfAssign
Distance : 14

72
Tree	DeclaredFunctionType
Code	DeclaredFunctionType
Distance : 14

73
Tree	subLabelFont
Code	subLabelFont
Distance : 14

74
Tree	%=
Code	%=
Distance : 14

75
Tree	curScope
Code	curScope
Distance : 14

76
Tree	Queue
Code	Queue
Distance : 14

77
Tree	filePath
Code	filePath
Distance : 14

78
Tree	nameStack
Code	nameStack
Distance : 14

79
Tree	rings
Code	rings
Distance : 14

80
Tree	iPeriodConverters
Code	iPeriodConverters
Distance : 14

81
Tree	addParserWarning
Code	addParserWarning
Distance : 14

82
Tree	PropertyType
Code	PropertyType
Distance : 14

83
Tree	clone.seriesList
Code	clone.seriesList
Distance : 14

84
Tree	abort
Code	abort
Distance : 14

85
Tree	patterns
Code	patterns
Distance : 14

86
Tree	j2clConstantHoisterPass
Code	j2clConstantHoisterPass
Distance : 14

87
Tree	widthSufficient
Code	widthSufficient
Distance : 14

88
Tree	makeIteratorType
Code	makeIteratorType
Distance : 14

89
Tree	list0
Code	list0
Distance : 14

90
Tree	singletonLock
Code	singletonLock
Distance : 14

91
Tree	mult
Code	mult
Distance : 14

92
Tree	containingScope
Code	containingScope
Distance : 14

93
Tree	exprResult
Code	exprResult
Distance : 14

94
Tree	floatn
Code	floatn
Distance : 14

95
Tree	m5
Code	m5
Distance : 14

96
Tree	CglibClassImposterizerTest
Code	CglibClassImposterizerTest
Distance : 14

97
Tree	notifyStubbedAnswerLookup
Code	notifyStubbedAnswerLookup
Distance : 14

98
Tree	lastJ
Code	lastJ
Distance : 14

99
Tree	inputSourceMaps
Code	inputSourceMaps
Distance : 14

100
Tree	aggregatedStats
Code	aggregatedStats
Distance : 14

101
Tree	ScopedChangeHandler
Code	ScopedChangeHandler
Distance : 14

102
Tree	notch
Code	notch
Distance : 14

103
Tree	RegisteredInvocationsTest
Code	RegisteredInvocationsTest
Distance : 14

104
Tree	exprResultNode
Code	exprResultNode
Distance : 14

105
Tree	constructorI
Code	constructorI
Distance : 14

106
Tree	annotationEngine
Code	annotationEngine
Distance : 14

107
Tree	dst
Code	dst
Distance : 14

108
Tree	verifiers
Code	verifiers
Distance : 14

109
Tree	dfa
Code	dfa
Distance : 14

110
Tree	the_mock_type
Code	the_mock_type
Distance : 14

111
Tree	dest.contractionCriterion
Code	dest.contractionCriterion
Distance : 14

112
Tree	MASK_30BITS
Code	MASK_30BITS
Distance : 14

113
Tree	mise
Code	mise
Distance : 14

114
Tree	updateCrosshairValues
Code	updateCrosshairValues
Distance : 14

115
Tree	RELATIVIZE_IMPORT_PATHS
Code	RELATIVIZE_IMPORT_PATHS
Distance : 14

116
Tree	MockitoVerificationModeTest
Code	MockitoVerificationModeTest
Distance : 14

117
Tree	RegisteredInvocationsAllTest
Code	RegisteredInvocationsAllTest
Distance : 14

118
Tree	inverseCumAccuracy
Code	inverseCumAccuracy
Distance : 14

119
Tree	typesIndexedByProperty
Code	typesIndexedByProperty
Distance : 14

120
Tree	convention
Code	convention
Distance : 14

121
Tree	suffixes
Code	suffixes
Distance : 14

122
Tree	VerificationModeImplTest
Code	VerificationModeImplTest
Distance : 14

123
Tree	refinedScope
Code	refinedScope
Distance : 14

124
Tree	certifiedValues
Code	certifiedValues
Distance : 14

125
Tree	caseMatches
Code	caseMatches
Distance : 14

126
Tree	#
Code	#
Distance : 14

127
Tree	UnpaddedNumberField
Code	UnpaddedNumberField
Distance : 14

128
Tree	nameGen
Code	nameGen
Distance : 14

129
Tree	scopeType
Code	scopeType
Distance : 14

130
Tree	TimesTest
Code	TimesTest
Distance : 14

131
Tree	tightenNameTypeAndDontWarn
Code	tightenNameTypeAndDontWarn
Distance : 14

132
Tree	unequalCounts
Code	unequalCounts
Distance : 14

133
Tree	partialDerivatives
Code	partialDerivatives
Distance : 14

134
Tree	InvocationImplTest
Code	InvocationImplTest
Distance : 14

135
Tree	polymerVersion
Code	polymerVersion
Distance : 14

136
Tree	enclosingCall
Code	enclosingCall
Distance : 14

137
Tree	constructorNameNode
Code	constructorNameNode
Distance : 14

138
Tree	thisProps
Code	thisProps
Distance : 14

139
Tree	normps
Code	normps
Distance : 14

140
Tree	Transformer.ForMethod
Code	Transformer.ForMethod
Distance : 14

141
Tree	SQRT_TWO_PI
Code	SQRT_TWO_PI
Distance : 14

142
Tree	binStats
Code	binStats
Distance : 14

143
Tree	shouldAddTypes
Code	shouldAddTypes
Distance : 14

144
Tree	iIntervalConverters
Code	iIntervalConverters
Distance : 14

145
Tree	fsave
Code	fsave
Distance : 14

146
Tree	incrementValue
Code	incrementValue
Distance : 14

147
Tree	MockHandlerTest
Code	MockHandlerTest
Distance : 14

148
Tree	iPartialConverters
Code	iPartialConverters
Distance : 14

149
Tree	ImmutableSortedSet
Code	ImmutableSortedSet
Distance : 14

150
Tree	MockHandlerImplTest
Code	MockHandlerImplTest
Distance : 14

151
Tree	activeXObject
Code	activeXObject
Distance : 14

152
Tree	ttlObj
Code	ttlObj
Distance : 14

153
Tree	clone.rows
Code	clone.rows
Distance : 14

154
Tree	test4
Code	test4
Distance : 14

155
Tree	q2
Code	q2
Distance : 14

156
Tree	handleStubDefinition
Code	handleStubDefinition
Distance : 14

157
Tree	iFieldType
Code	iFieldType
Distance : 14

158
Tree	MakeDeclaredNamesUnique
Code	MakeDeclaredNamesUnique
Distance : 14

159
Tree	CompilationLevel
Code	CompilationLevel
Distance : 14

160
Tree	loops
Code	loops
Distance : 14

161
Tree	j2clClinitPass
Code	j2clClinitPass
Distance : 14

162
Tree	Instantiator
Code	Instantiator
Distance : 14

163
Tree	HoldingAReference
Code	HoldingAReference
Distance : 14

164
Tree	compilationLevelParsed
Code	compilationLevelParsed
Distance : 14

165
Tree	EmptyReturnValuesTest
Code	EmptyReturnValuesTest
Distance : 14

166
Tree	XYPolygonAnnotation
Code	XYPolygonAnnotation
Distance : 14

167
Tree	isAbstractClass
Code	isAbstractClass
Distance : 14

168
Tree	ko2D2
Code	ko2D2
Distance : 14

169
Tree	texts
Code	texts
Distance : 14

170
Tree	loader
Code	loader
Distance : 14

171
Tree	zb
Code	zb
Distance : 14

172
Tree	nativeObjectType
Code	nativeObjectType
Distance : 14

173
Tree	outcome.booleanValues
Code	outcome.booleanValues
Distance : 14

174
Tree	crosshairState
Code	crosshairState
Distance : 14

175
Tree	inputLength
Code	inputLength
Distance : 14

176
Tree	nDataPoints
Code	nDataPoints
Distance : 14

177
Tree	testForOf_wrongLoopVarType4a
Code	testForOf_wrongLoopVarType4a
Distance : 14

178
Tree	triple2
Code	triple2
Distance : 14

179
Tree	tournamentPopulation
Code	tournamentPopulation
Distance : 14

180
Tree	RuleSet
Code	RuleSet
Distance : 14

181
Tree	FunctionScopeBuilder
Code	FunctionScopeBuilder
Distance : 14

182
Tree	renamerStack
Code	renamerStack
Distance : 14

183
Tree	namedA
Code	namedA
Distance : 14

184
Tree	FractionMatrixConverter
Code	FractionMatrixConverter
Distance : 14

185
Tree	FailingConstructor
Code	FailingConstructor
Distance : 14

186
Tree	orientation2
Code	orientation2
Distance : 14

187
Tree	useDef
Code	useDef
Distance : 14

188
Tree	assignmentParent
Code	assignmentParent
Distance : 14

189
Tree	hoistedScope
Code	hoistedScope
Distance : 14

190
Tree	moduleName
Code	moduleName
Distance : 14

191
Tree	aRadius
Code	aRadius
Distance : 14

192
Tree	lastIndex
Code	lastIndex
Distance : 14

193
Tree	stripOutlineVisible
Code	stripOutlineVisible
Distance : 14

194
Tree	instantiatorProvider
Code	instantiatorProvider
Distance : 14

195
Tree	AtLeastXVerificationTest
Code	AtLeastXVerificationTest
Distance : 14

196
Tree	za
Code	za
Distance : 14

197
Tree	exitEnv
Code	exitEnv
Distance : 14

198
Tree	allJsDocParams
Code	allJsDocParams
Distance : 14

199
Tree	localDateTime
Code	localDateTime
Distance : 14

========================================================================


========================================================================
Example Number: 11
Parent Code is: 
Context rhsContext = Context.OTHER ;
-------------------------------------------------------------------------------
Child code is: 
Context rhsContext = getContextForNoInOperator ( context ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Context})) (59 (800{val=rhsContext}) (204{val==}) (40{val=Context.OTHER})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Context})) (59 (800{val=rhsContext}) (204{val==}) (32 (802{val=getContextForNoInOperator}) (214{val=(}) (800{val=context}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/123/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Context rhsContext = Context.OTHER ; values
Code	Context rhsContext = Context.OTHER ; values
Distance : 5

1
Tree	Context rhsContext = Context.OTHER ; Test
Code	Context rhsContext = Context.OTHER ; Test
Distance : 5

2
Tree	Context rhsContext = Context.OTHER ; MathRuntimeException
Code	Context rhsContext = Context.OTHER ; MathRuntimeException
Distance : 5

3
Tree	Context rhsContext = Context.OTHER ; {}
Code	Context rhsContext = Context.OTHER ; {}
Distance : 5

4
Tree	Context rhsContext = Context.OTHER ; f
Code	Context rhsContext = Context.OTHER ; f
Distance : 5

5
Tree	Context rhsContext = Context.OTHER ; class
Code	Context rhsContext = Context.OTHER ; class
Distance : 5

6
Tree	Context rhsContext = Context.OTHER ; -
Code	Context rhsContext = Context.OTHER ; -
Distance : 5

7
Tree	Context rhsContext = Context.OTHER ; Preconditions
Code	Context rhsContext = Context.OTHER ; Preconditions
Distance : 5

8
Tree	Context rhsContext = Context.OTHER ; T
Code	Context rhsContext = Context.OTHER ; T
Distance : 5

9
Tree	Context rhsContext = Context.OTHER ; &&
Code	Context rhsContext = Context.OTHER ; &&
Distance : 5

10
Tree	Context rhsContext = Context.OTHER ; ]
Code	Context rhsContext = Context.OTHER ; ]
Distance : 5

11
Tree	Context rhsContext = Context.OTHER ; [
Code	Context rhsContext = Context.OTHER ; [
Distance : 5

12
Tree	Context rhsContext = Context.OTHER ; Object
Code	Context rhsContext = Context.OTHER ; Object
Distance : 5

13
Tree	Context rhsContext = Context.OTHER ; ParamChecks
Code	Context rhsContext = Context.OTHER ; ParamChecks
Distance : 5

14
Tree	Context rhsContext = Context.OTHER ; test
Code	Context rhsContext = Context.OTHER ; test
Distance : 5

15
Tree	Context rhsContext = Context.OTHER ; @
Code	Context rhsContext = Context.OTHER ; @
Distance : 5

16
Tree	Context rhsContext = Context.OTHER ; !
Code	Context rhsContext = Context.OTHER ; !
Distance : 5

17
Tree	Context rhsContext = Context.OTHER ; assertEquals
Code	Context rhsContext = Context.OTHER ; assertEquals
Distance : 5

18
Tree	Context rhsContext = Context.OTHER ; ==
Code	Context rhsContext = Context.OTHER ; ==
Distance : 5

19
Tree	Context rhsContext = Context.OTHER ; void
Code	Context rhsContext = Context.OTHER ; void
Distance : 5

20
Tree	Context rhsContext = Context.OTHER ; []
Code	Context rhsContext = Context.OTHER ; []
Distance : 5

21
Tree	Context rhsContext = Context.OTHER ; checkState
Code	Context rhsContext = Context.OTHER ; checkState
Distance : 5

22
Tree	Context rhsContext = Context.OTHER ; toString
Code	Context rhsContext = Context.OTHER ; toString
Distance : 5

23
Tree	Context rhsContext = Context.OTHER ; protected
Code	Context rhsContext = Context.OTHER ; protected
Distance : 5

24
Tree	Context rhsContext = Context.OTHER ; nullNotPermitted
Code	Context rhsContext = Context.OTHER ; nullNotPermitted
Distance : 5

25
Tree	Context rhsContext = Context.OTHER ; e
Code	Context rhsContext = Context.OTHER ; e
Distance : 5

26
Tree	Context rhsContext = Context.OTHER ; super
Code	Context rhsContext = Context.OTHER ; super
Distance : 5

27
Tree	Context rhsContext = Context.OTHER ; i
Code	Context rhsContext = Context.OTHER ; i
Distance : 5

28
Tree	Context rhsContext = Context.OTHER ; mock
Code	Context rhsContext = Context.OTHER ; mock
Distance : 5

29
Tree	Context rhsContext = Context.OTHER ; Override
Code	Context rhsContext = Context.OTHER ; Override
Distance : 5

30
Tree	Context rhsContext = Context.OTHER ; public
Code	Context rhsContext = Context.OTHER ; public
Distance : 5

31
Tree	Context rhsContext = Context.OTHER ; >
Code	Context rhsContext = Context.OTHER ; >
Distance : 5

32
Tree	Context rhsContext = Context.OTHER ; new
Code	Context rhsContext = Context.OTHER ; new
Distance : 5

33
Tree	Context rhsContext = Context.OTHER ; STRING_CONSTANT
Code	Context rhsContext = Context.OTHER ; STRING_CONSTANT
Distance : 5

34
Tree	Context rhsContext = Context.OTHER ; ,
Code	Context rhsContext = Context.OTHER ; ,
Distance : 5

35
Tree	Context rhsContext = Context.OTHER ; .
Code	Context rhsContext = Context.OTHER ; .
Distance : 5

36
Tree	Context rhsContext = Context.OTHER ; }
Code	Context rhsContext = Context.OTHER ; }
Distance : 5

37
Tree	Context rhsContext = Context.OTHER ; =
Code	Context rhsContext = Context.OTHER ; =
Distance : 5

38
Tree	Context rhsContext = Context.OTHER ; (
Code	Context rhsContext = Context.OTHER ; (
Distance : 5

39
Tree	Context rhsContext = Context.OTHER ; <s>
Code	Context rhsContext = Context.OTHER ; <s>
Distance : 5

40
Tree	Context rhsContext = Context.OTHER ; <blank>
Code	Context rhsContext = Context.OTHER ; <blank>
Distance : 5

41
Tree	Context rhsContext = Context.OTHER ; Context
Code	Context rhsContext = Context.OTHER ; Context
Distance : 5

42
Tree	Context rhsContext = Context.OTHER ; )
Code	Context rhsContext = Context.OTHER ; )
Distance : 4

43
Tree	Context rhsContext = Context.OTHER ; ;
Code	Context rhsContext = Context.OTHER ; ;
Distance : 4

44
Tree	Context rhsContext = Context.OTHER ; ()
Code	Context rhsContext = Context.OTHER ; ()
Distance : 5

45
Tree	Context rhsContext = Context.OTHER ; {
Code	Context rhsContext = Context.OTHER ; {
Distance : 5

46
Tree	Context rhsContext = Context.OTHER ; false
Code	Context rhsContext = Context.OTHER ; false
Distance : 5

47
Tree	Context rhsContext = Context.OTHER ; int
Code	Context rhsContext = Context.OTHER ; int
Distance : 5

48
Tree	Context rhsContext = Context.OTHER ; double
Code	Context rhsContext = Context.OTHER ; double
Distance : 5

49
Tree	Context rhsContext = Context.OTHER ; n
Code	Context rhsContext = Context.OTHER ; n
Distance : 5

50
Tree	Context rhsContext = Context.OTHER ; matcher
Code	Context rhsContext = Context.OTHER ; matcher
Distance : 5

51
Tree	Context rhsContext = Context.OTHER ; NUMBER_CONSTANT
Code	Context rhsContext = Context.OTHER ; NUMBER_CONSTANT
Distance : 5

52
Tree	Context rhsContext = Context.OTHER ; this
Code	Context rhsContext = Context.OTHER ; this
Distance : 5

53
Tree	Context rhsContext = Context.OTHER ; final
Code	Context rhsContext = Context.OTHER ; final
Distance : 5

54
Tree	Context rhsContext = Context.OTHER ; name
Code	Context rhsContext = Context.OTHER ; name
Distance : 5

55
Tree	Context rhsContext = Context.OTHER ; t
Code	Context rhsContext = Context.OTHER ; t
Distance : 5

56
Tree	Context rhsContext = Context.OTHER ; solver
Code	Context rhsContext = Context.OTHER ; solver
Distance : 5

57
Tree	Context rhsContext = Context.OTHER ; getField
Code	Context rhsContext = Context.OTHER ; getField
Distance : 5

58
Tree	Context rhsContext = Context.OTHER ; pattern
Code	Context rhsContext = Context.OTHER ; pattern
Distance : 5

59
Tree	Context rhsContext = Context.OTHER ; out
Code	Context rhsContext = Context.OTHER ; out
Distance : 5

60
Tree	Context rhsContext = Context.OTHER ; Collection
Code	Context rhsContext = Context.OTHER ; Collection
Distance : 5

61
Tree	Context rhsContext = Context.OTHER ; mode
Code	Context rhsContext = Context.OTHER ; mode
Distance : 5

62
Tree	Context rhsContext = Context.OTHER ; mockingProgress
Code	Context rhsContext = Context.OTHER ; mockingProgress
Distance : 5

63
Tree	Context rhsContext = Context.OTHER ; return;
Code	Context rhsContext = Context.OTHER ; return;
Distance : 5

64
Tree	Context rhsContext = Context.OTHER ; char
Code	Context rhsContext = Context.OTHER ; char
Distance : 5

65
Tree	Context rhsContext = Context.OTHER ; get
Code	Context rhsContext = Context.OTHER ; get
Distance : 5

66
Tree	Context rhsContext = Context.OTHER ; static
Code	Context rhsContext = Context.OTHER ; static
Distance : 5

67
Tree	Context rhsContext = Context.OTHER ; setAcceptedLanguage
Code	Context rhsContext = Context.OTHER ; setAcceptedLanguage
Distance : 5

68
Tree	Context rhsContext = Context.OTHER ; JSType
Code	Context rhsContext = Context.OTHER ; JSType
Distance : 5

69
Tree	Context rhsContext = Context.OTHER ; isEmpty
Code	Context rhsContext = Context.OTHER ; isEmpty
Distance : 5

70
Tree	Context rhsContext = Context.OTHER ; else
Code	Context rhsContext = Context.OTHER ; else
Distance : 5

71
Tree	Context rhsContext = Context.OTHER ; true
Code	Context rhsContext = Context.OTHER ; true
Distance : 5

72
Tree	Context rhsContext = Context.OTHER ; return
Code	Context rhsContext = Context.OTHER ; return
Distance : 5

73
Tree	Context rhsContext = Context.OTHER ; if
Code	Context rhsContext = Context.OTHER ; if
Distance : 5

74
Tree	Context rhsContext = Context.OTHER ; getMessage
Code	Context rhsContext = Context.OTHER ; getMessage
Distance : 5

75
Tree	Context rhsContext = Context.OTHER ; <
Code	Context rhsContext = Context.OTHER ; <
Distance : 5

76
Tree	Context rhsContext = Context.OTHER ; dataset
Code	Context rhsContext = Context.OTHER ; dataset
Distance : 5

77
Tree	Context rhsContext = Context.OTHER ; getChronology
Code	Context rhsContext = Context.OTHER ; getChronology
Distance : 5

78
Tree	Context rhsContext = Context.OTHER ; js
Code	Context rhsContext = Context.OTHER ; js
Distance : 5

79
Tree	Context rhsContext = Context.OTHER ; TestUtilities
Code	Context rhsContext = Context.OTHER ; TestUtilities
Distance : 5

80
Tree	Context rhsContext = Context.OTHER ; equals
Code	Context rhsContext = Context.OTHER ; equals
Distance : 5

81
Tree	Context rhsContext = Context.OTHER ; d
Code	Context rhsContext = Context.OTHER ; d
Distance : 5

82
Tree	Context rhsContext = Context.OTHER ; notifyListeners
Code	Context rhsContext = Context.OTHER ; notifyListeners
Distance : 5

83
Tree	Context rhsContext = Context.OTHER ; externs
Code	Context rhsContext = Context.OTHER ; externs
Distance : 5

84
Tree	Context rhsContext = Context.OTHER ; for
Code	Context rhsContext = Context.OTHER ; for
Distance : 5

85
Tree	Context rhsContext = Context.OTHER ; Invocation
Code	Context rhsContext = Context.OTHER ; Invocation
Distance : 5

86
Tree	Context rhsContext = Context.OTHER ; node
Code	Context rhsContext = Context.OTHER ; node
Distance : 5

87
Tree	Context rhsContext = Context.OTHER ; getParent
Code	Context rhsContext = Context.OTHER ; getParent
Distance : 5

88
Tree	Context rhsContext = Context.OTHER ; StrBuilder
Code	Context rhsContext = Context.OTHER ; StrBuilder
Distance : 5

89
Tree	Context rhsContext = Context.OTHER ; setUp
Code	Context rhsContext = Context.OTHER ; setUp
Distance : 5

90
Tree	Context rhsContext = Context.OTHER ; invocations
Code	Context rhsContext = Context.OTHER ; invocations
Distance : 5

91
Tree	Context rhsContext = Context.OTHER ; index
Code	Context rhsContext = Context.OTHER ; index
Distance : 5

92
Tree	Context rhsContext = Context.OTHER ; instant
Code	Context rhsContext = Context.OTHER ; instant
Distance : 5

93
Tree	Context rhsContext = Context.OTHER ; abs
Code	Context rhsContext = Context.OTHER ; abs
Distance : 5

94
Tree	Context rhsContext = Context.OTHER ; Double
Code	Context rhsContext = Context.OTHER ; Double
Distance : 5

95
Tree	Context rhsContext = Context.OTHER ; <=
Code	Context rhsContext = Context.OTHER ; <=
Distance : 5

96
Tree	Context rhsContext = Context.OTHER ; reportMatcher
Code	Context rhsContext = Context.OTHER ; reportMatcher
Distance : 5

97
Tree	Context rhsContext = Context.OTHER ; stream
Code	Context rhsContext = Context.OTHER ; stream
Distance : 5

98
Tree	Context rhsContext = Context.OTHER ; s
Code	Context rhsContext = Context.OTHER ; s
Distance : 5

99
Tree	Context rhsContext = Context.OTHER ;
Code	Context rhsContext = Context.OTHER ;
Distance : 4

100
Tree	Context rhsContext = Context.OTHER ; contains
Code	Context rhsContext = Context.OTHER ; contains
Distance : 5

101
Tree	Context rhsContext = Context.OTHER ; b
Code	Context rhsContext = Context.OTHER ; b
Distance : 5

102
Tree	Context rhsContext = Context.OTHER ; stroke
Code	Context rhsContext = Context.OTHER ; stroke
Distance : 5

103
Tree	Context rhsContext = Context.OTHER ; MutableTimePeriod
Code	Context rhsContext = Context.OTHER ; MutableTimePeriod
Distance : 5

104
Tree	Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT_2015
Code	Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT_2015
Distance : 5

105
Tree	Context rhsContext = Context.OTHER ; size
Code	Context rhsContext = Context.OTHER ; size
Distance : 5

106
Tree	Context rhsContext = Context.OTHER ; traverseEs6
Code	Context rhsContext = Context.OTHER ; traverseEs6
Distance : 5

107
Tree	Context rhsContext = Context.OTHER ; StringBuilder
Code	Context rhsContext = Context.OTHER ; StringBuilder
Distance : 5

108
Tree	Context rhsContext = Context.OTHER ; chrono
Code	Context rhsContext = Context.OTHER ; chrono
Distance : 5

109
Tree	Context rhsContext = Context.OTHER ; a
Code	Context rhsContext = Context.OTHER ; a
Distance : 5

110
Tree	Context rhsContext = Context.OTHER ; returnZero
Code	Context rhsContext = Context.OTHER ; returnZero
Distance : 5

111
Tree	Context rhsContext = Context.OTHER ; sb
Code	Context rhsContext = Context.OTHER ; sb
Distance : 5

112
Tree	Context rhsContext = Context.OTHER ; scope
Code	Context rhsContext = Context.OTHER ; scope
Distance : 5

113
Tree	Context rhsContext = Context.OTHER ; UnivariateFunction
Code	Context rhsContext = Context.OTHER ; UnivariateFunction
Distance : 5

114
Tree	Context rhsContext = Context.OTHER ; sqrt
Code	Context rhsContext = Context.OTHER ; sqrt
Distance : 5

115
Tree	Context rhsContext = Context.OTHER ; clone
Code	Context rhsContext = Context.OTHER ; clone
Distance : 5

116
Tree	Context rhsContext = Context.OTHER ; getFirstChild
Code	Context rhsContext = Context.OTHER ; getFirstChild
Distance : 5

117
Tree	Context rhsContext = Context.OTHER ; throws
Code	Context rhsContext = Context.OTHER ; throws
Distance : 5

118
Tree	Context rhsContext = Context.OTHER ; simpleMethod
Code	Context rhsContext = Context.OTHER ; simpleMethod
Distance : 5

119
Tree	Context rhsContext = Context.OTHER ; getArgumentMatcherStorage
Code	Context rhsContext = Context.OTHER ; getArgumentMatcherStorage
Distance : 5

120
Tree	Context rhsContext = Context.OTHER ; append
Code	Context rhsContext = Context.OTHER ; append
Distance : 5

121
Tree	Context rhsContext = Context.OTHER ; alpha
Code	Context rhsContext = Context.OTHER ; alpha
Distance : 5

122
Tree	Context rhsContext = Context.OTHER ; isNormalBlock
Code	Context rhsContext = Context.OTHER ; isNormalBlock
Distance : 5

123
Tree	Context rhsContext = Context.OTHER ; obj
Code	Context rhsContext = Context.OTHER ; obj
Distance : 5

124
Tree	Context rhsContext = Context.OTHER ; isBlock
Code	Context rhsContext = Context.OTHER ; isBlock
Distance : 5

125
Tree	Context rhsContext = Context.OTHER ; array
Code	Context rhsContext = Context.OTHER ; array
Distance : 5

126
Tree	Context rhsContext = Context.OTHER ; TestUtils
Code	Context rhsContext = Context.OTHER ; TestUtils
Distance : 5

127
Tree	Context rhsContext = Context.OTHER ; length
Code	Context rhsContext = Context.OTHER ; length
Distance : 5

128
Tree	Context rhsContext = Context.OTHER ; expected
Code	Context rhsContext = Context.OTHER ; expected
Distance : 5

129
Tree	Context rhsContext = Context.OTHER ; IllegalArgumentException
Code	Context rhsContext = Context.OTHER ; IllegalArgumentException
Distance : 5

130
Tree	Context rhsContext = Context.OTHER ; invocation
Code	Context rhsContext = Context.OTHER ; invocation
Distance : 5

131
Tree	Context rhsContext = Context.OTHER ; assertThat
Code	Context rhsContext = Context.OTHER ; assertThat
Distance : 5

132
Tree	Context rhsContext = Context.OTHER ; FastMath
Code	Context rhsContext = Context.OTHER ; FastMath
Distance : 5

133
Tree	Context rhsContext = Context.OTHER ; reportCodeChange
Code	Context rhsContext = Context.OTHER ; reportCodeChange
Distance : 5

134
Tree	Context rhsContext = Context.OTHER ; testSame
Code	Context rhsContext = Context.OTHER ; testSame
Distance : 5

135
Tree	Context rhsContext = Context.OTHER ; createIllegalArgumentException
Code	Context rhsContext = Context.OTHER ; createIllegalArgumentException
Distance : 5

136
Tree	Context rhsContext = Context.OTHER ; ArrayList
Code	Context rhsContext = Context.OTHER ; ArrayList
Distance : 5

137
Tree	Context rhsContext = Context.OTHER ; parent
Code	Context rhsContext = Context.OTHER ; parent
Distance : 5

138
Tree	Context rhsContext = Context.OTHER ; LINE_JOINER
Code	Context rhsContext = Context.OTHER ; LINE_JOINER
Distance : 5

139
Tree	Context rhsContext = Context.OTHER ; x
Code	Context rhsContext = Context.OTHER ; x
Distance : 5

140
Tree	Context rhsContext = Context.OTHER ; fireChangeEvent
Code	Context rhsContext = Context.OTHER ; fireChangeEvent
Distance : 5

141
Tree	Context rhsContext = Context.OTHER ; str
Code	Context rhsContext = Context.OTHER ; str
Distance : 5

142
Tree	Context rhsContext = Context.OTHER ; m
Code	Context rhsContext = Context.OTHER ; m
Distance : 5

143
Tree	Context rhsContext = Context.OTHER ; try
Code	Context rhsContext = Context.OTHER ; try
Distance : 5

144
Tree	Context rhsContext = Context.OTHER ; fail
Code	Context rhsContext = Context.OTHER ; fail
Distance : 5

145
Tree	Context rhsContext = Context.OTHER ; :
Code	Context rhsContext = Context.OTHER ; :
Distance : 5

146
Tree	Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT6
Code	Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT6
Distance : 5

147
Tree	Context rhsContext = Context.OTHER ; optimizer
Code	Context rhsContext = Context.OTHER ; optimizer
Distance : 5

148
Tree	Context context = Context.OTHER ;
Code	Context context = Context.OTHER ;
Distance : 5

149
Tree	Context rhsContext = Context.OTHER ; <>
Code	Context rhsContext = Context.OTHER ; <>
Distance : 5

150
Tree	Context rhsContext = Context.OTHER ; ?
Code	Context rhsContext = Context.OTHER ; ?
Distance : 5

151
Tree	Context rhsContext = Context.OTHER ; boolean
Code	Context rhsContext = Context.OTHER ; boolean
Distance : 5

152
Tree	Context rhsContext = Context.OTHER ; paint
Code	Context rhsContext = Context.OTHER ; paint
Distance : 5

153
Tree	Context rhsContext = Context.OTHER ; result
Code	Context rhsContext = Context.OTHER ; result
Distance : 5

154
Tree	Context rhsContext = Context.OTHER ; *
Code	Context rhsContext = Context.OTHER ; *
Distance : 5

155
Tree	Context rhsContext = Context.OTHER ; type
Code	Context rhsContext = Context.OTHER ; type
Distance : 5

156
Tree	Context rhsContext = Context.OTHER ; getInstance
Code	Context rhsContext = Context.OTHER ; getInstance
Distance : 5

157
Tree	Context rhsContext = Context.OTHER ; serialised
Code	Context rhsContext = Context.OTHER ; serialised
Distance : 5

158
Tree	Context rhsContext = Context.OTHER ; Exception
Code	Context rhsContext = Context.OTHER ; Exception
Distance : 5

159
Tree	Context rhsContext = Context.OTHER ; Assert
Code	Context rhsContext = Context.OTHER ; Assert
Distance : 5

160
Tree	Context rhsContext = Context.OTHER ; source
Code	Context rhsContext = Context.OTHER ; source
Distance : 5

161
Tree	Context rhsContext = Context.OTHER ; Class
Code	Context rhsContext = Context.OTHER ; Class
Distance : 5

162
Tree	Context rhsContext = Context.OTHER ; Math
Code	Context rhsContext = Context.OTHER ; Math
Distance : 5

163
Tree	Context rhsContext = Context.OTHER ; root
Code	Context rhsContext = Context.OTHER ; root
Distance : 5

164
Tree	Context rhsContext = Context.OTHER ; options
Code	Context rhsContext = Context.OTHER ; options
Distance : 5

165
Tree	Context rhsContext = Context.OTHER ; p
Code	Context rhsContext = Context.OTHER ; p
Distance : 5

166
Tree	Context rhsContext = Context.OTHER ; data
Code	Context rhsContext = Context.OTHER ; data
Distance : 5

167
Tree	Context rhsContext = Context.OTHER ; add
Code	Context rhsContext = Context.OTHER ; add
Distance : 5

168
Tree	Context rhsContext = Context.OTHER ; field
Code	Context rhsContext = Context.OTHER ; field
Distance : 5

169
Tree	Context rhsContext = Context.OTHER ; checkArgument
Code	Context rhsContext = Context.OTHER ; checkArgument
Distance : 5

170
Tree	Context rhsContext = Context.OTHER ; ex
Code	Context rhsContext = Context.OTHER ; ex
Distance : 5

171
Tree	Context rhsContext = Context.OTHER ; NodeUtil
Code	Context rhsContext = Context.OTHER ; NodeUtil
Distance : 5

172
Tree	Context rhsContext = Context.OTHER ; join
Code	Context rhsContext = Context.OTHER ; join
Distance : 5

173
Tree	Context rhsContext = Context.OTHER ; List
Code	Context rhsContext = Context.OTHER ; List
Distance : 5

174
Tree	Context rhsContext = Context.OTHER ; NodeTraversal
Code	Context rhsContext = Context.OTHER ; NodeTraversal
Distance : 5

175
Tree	Context rhsContext = Context.OTHER ; Args
Code	Context rhsContext = Context.OTHER ; Args
Distance : 5

176
Tree	Context rhsContext = Context.OTHER ; v
Code	Context rhsContext = Context.OTHER ; v
Distance : 5

177
Tree	Context rhsContext = Context.OTHER ; Integer
Code	Context rhsContext = Context.OTHER ; Integer
Distance : 5

178
Tree	Context rhsContext = Context.OTHER ; lines
Code	Context rhsContext = Context.OTHER ; lines
Distance : 5

179
Tree	Context rhsContext = Context.OTHER ; c
Code	Context rhsContext = Context.OTHER ; c
Distance : 5

180
Tree	Context rhsContext = Context.OTHER ; verify
Code	Context rhsContext = Context.OTHER ; verify
Distance : 5

181
Tree	Context rhsContext = Context.OTHER ; Node
Code	Context rhsContext = Context.OTHER ; Node
Distance : 5

182
Tree	Context rhsContext = Context.OTHER ; compiler
Code	Context rhsContext = Context.OTHER ; compiler
Distance : 5

183
Tree	Context rhsContext = Context.OTHER ; String
Code	Context rhsContext = Context.OTHER ; String
Distance : 5

184
Tree	Context rhsContext = Context.OTHER ; null
Code	Context rhsContext = Context.OTHER ; null
Distance : 5

185
Tree	Context rhsContext = Context.OTHER ; wanted
Code	Context rhsContext = Context.OTHER ; wanted
Distance : 5

186
Tree	Context rhsContext = Context.OTHER ; +
Code	Context rhsContext = Context.OTHER ; +
Distance : 5

187
Tree	Context rhsContext = Context.OTHER ; catch
Code	Context rhsContext = Context.OTHER ; catch
Distance : 5

188
Tree	Context rhsContext = Context.OTHER ; !=
Code	Context rhsContext = Context.OTHER ; !=
Distance : 5

189
Tree	Context rhsContext = Context.OTHER ; value
Code	Context rhsContext = Context.OTHER ; value
Distance : 5

190
Tree	Context rhsContext = Context.OTHER ; /
Code	Context rhsContext = Context.OTHER ; /
Distance : 5

191
Tree	Context rhsContext = Context.OTHER ; assertTrue
Code	Context rhsContext = Context.OTHER ; assertTrue
Distance : 5

192
Tree	Context rhsContext = Context.OTHER ; checkNotNull
Code	Context rhsContext = Context.OTHER ; checkNotNull
Distance : 5

193
Tree	Context rhsContext = Context.OTHER ; Fraction
Code	Context rhsContext = Context.OTHER ; Fraction
Distance : 5

194
Tree	Context rhsContext = Context.OTHER ; valueOf
Code	Context rhsContext = Context.OTHER ; valueOf
Distance : 5

195
Tree	Context rhsContext = Context.OTHER ; instance
Code	Context rhsContext = Context.OTHER ; instance
Distance : 5

196
Tree	Context rhsContext = Context.OTHER ; long
Code	Context rhsContext = Context.OTHER ; long
Distance : 5

197
Tree	Context rhsContext = Context.OTHER ; throw
Code	Context rhsContext = Context.OTHER ; throw
Distance : 5

198
Tree	Context rhsContext = Context.OTHER ; y
Code	Context rhsContext = Context.OTHER ; y
Distance : 5

199
Tree	Context rhsContext = Context.OTHER ; PeriodType
Code	Context rhsContext = Context.OTHER ; PeriodType
Distance : 5

========================================================================


========================================================================
Example Number: 12
Parent Code is: 
{ return topType ; }
-------------------------------------------------------------------------------
Child code is: 
{ return topType . isAllType () ? getNativeType ( ARRAY_TYPE ) : topType ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=topType}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (32 (800{val=topType}) (235{val=.}) (802{val=isAllType}) (216{val=()})) (233{val=?}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=ARRAY_TYPE}) (215{val=)})) (226{val=:}) (800{val=topType})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/111/parent/src_com_google_javascript_jscomp_type_ClosureReverseAbstractInterpreter.java
-------------------------------------------------------------------------------
Edit Distance : 10
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return topType ; } values
Code	{ return topType ; } values
Distance : 11

1
Tree	{ return topType ; } Test
Code	{ return topType ; } Test
Distance : 11

2
Tree	{ return topType ; } MathRuntimeException
Code	{ return topType ; } MathRuntimeException
Distance : 11

3
Tree	{ return topType ; } {}
Code	{ return topType ; } {}
Distance : 11

4
Tree	{ return topType ; } f
Code	{ return topType ; } f
Distance : 11

5
Tree	{ return topType ; } class
Code	{ return topType ; } class
Distance : 11

6
Tree	{ return topType ; } -
Code	{ return topType ; } -
Distance : 11

7
Tree	{ return topType ; } Preconditions
Code	{ return topType ; } Preconditions
Distance : 11

8
Tree	{ return topType ; } T
Code	{ return topType ; } T
Distance : 11

9
Tree	{ return topType ; } &&
Code	{ return topType ; } &&
Distance : 11

10
Tree	{ return topType ; } ]
Code	{ return topType ; } ]
Distance : 11

11
Tree	{ return topType ; } [
Code	{ return topType ; } [
Distance : 11

12
Tree	{ return topType ; } Object
Code	{ return topType ; } Object
Distance : 11

13
Tree	{ return topType ; } ParamChecks
Code	{ return topType ; } ParamChecks
Distance : 11

14
Tree	{ return topType ; } test
Code	{ return topType ; } test
Distance : 11

15
Tree	{ return topType ; } @
Code	{ return topType ; } @
Distance : 11

16
Tree	{ return topType ; } !
Code	{ return topType ; } !
Distance : 11

17
Tree	{ return topType ; } assertEquals
Code	{ return topType ; } assertEquals
Distance : 11

18
Tree	{ return topType ; } ==
Code	{ return topType ; } ==
Distance : 11

19
Tree	{ return topType ; } void
Code	{ return topType ; } void
Distance : 11

20
Tree	{ return topType ; } []
Code	{ return topType ; } []
Distance : 11

21
Tree	{ return topType ; } checkState
Code	{ return topType ; } checkState
Distance : 11

22
Tree	{ return topType ; } toString
Code	{ return topType ; } toString
Distance : 11

23
Tree	{ return topType ; } protected
Code	{ return topType ; } protected
Distance : 11

24
Tree	{ return topType ; } nullNotPermitted
Code	{ return topType ; } nullNotPermitted
Distance : 11

25
Tree	{ return topType ; } e
Code	{ return topType ; } e
Distance : 11

26
Tree	{ return topType ; } super
Code	{ return topType ; } super
Distance : 11

27
Tree	{ return topType ; } i
Code	{ return topType ; } i
Distance : 11

28
Tree	{ return topType ; } mock
Code	{ return topType ; } mock
Distance : 11

29
Tree	{ return topType ; } Override
Code	{ return topType ; } Override
Distance : 11

30
Tree	{ return topType ; } public
Code	{ return topType ; } public
Distance : 11

31
Tree	{ return topType ; } >
Code	{ return topType ; } >
Distance : 11

32
Tree	{ return topType ; } new
Code	{ return topType ; } new
Distance : 11

33
Tree	{ return topType ; } STRING_CONSTANT
Code	{ return topType ; } STRING_CONSTANT
Distance : 11

34
Tree	{ return topType ; } ,
Code	{ return topType ; } ,
Distance : 11

35
Tree	{ return topType ; } .
Code	{ return topType ; } .
Distance : 11

36
Tree	{ return topType ; } }
Code	{ return topType ; } }
Distance : 11

37
Tree	{ return topType ; } =
Code	{ return topType ; } =
Distance : 11

38
Tree	{ return topType ; } (
Code	{ return topType ; } (
Distance : 11

39
Tree	{ return topType ; } <s>
Code	{ return topType ; } <s>
Distance : 11

40
Tree	{ return topType ; } <blank>
Code	{ return topType ; } <blank>
Distance : 11

41
Tree	{ return topType ; } return
Code	{ return topType ; } return
Distance : 11

42
Tree	{ return topType ; } )
Code	{ return topType ; } )
Distance : 11

43
Tree	{ return topType ; } ;
Code	{ return topType ; } ;
Distance : 11

44
Tree	{ return topType ; } ()
Code	{ return topType ; } ()
Distance : 11

45
Tree	{ return topType ; } {
Code	{ return topType ; } {
Distance : 11

46
Tree	{ return topType ; } false
Code	{ return topType ; } false
Distance : 11

47
Tree	{ return topType ; } int
Code	{ return topType ; } int
Distance : 11

48
Tree	{ return topType ; } double
Code	{ return topType ; } double
Distance : 11

49
Tree	{ return topType ; } n
Code	{ return topType ; } n
Distance : 11

50
Tree	{ return topType ; } matcher
Code	{ return topType ; } matcher
Distance : 11

51
Tree	{ return topType ; } NUMBER_CONSTANT
Code	{ return topType ; } NUMBER_CONSTANT
Distance : 11

52
Tree	{ return topType ; } this
Code	{ return topType ; } this
Distance : 11

53
Tree	{ return topType ; } final
Code	{ return topType ; } final
Distance : 11

54
Tree	{ return topType ; } name
Code	{ return topType ; } name
Distance : 11

55
Tree	{ return topType ; } t
Code	{ return topType ; } t
Distance : 11

56
Tree	{ return topType ; } solver
Code	{ return topType ; } solver
Distance : 11

57
Tree	{ return topType ; } getField
Code	{ return topType ; } getField
Distance : 11

58
Tree	{ return topType ; } pattern
Code	{ return topType ; } pattern
Distance : 11

59
Tree	{ return topType ; } out
Code	{ return topType ; } out
Distance : 11

60
Tree	{ return topType ; } Collection
Code	{ return topType ; } Collection
Distance : 11

61
Tree	{ return topType ; } mode
Code	{ return topType ; } mode
Distance : 11

62
Tree	{ return topType ; } mockingProgress
Code	{ return topType ; } mockingProgress
Distance : 11

63
Tree	{ return topType ; } return;
Code	{ return topType ; } return;
Distance : 11

64
Tree	{ return topType ; } char
Code	{ return topType ; } char
Distance : 11

65
Tree	{ return topType ; } get
Code	{ return topType ; } get
Distance : 11

66
Tree	{ return topType ; } static
Code	{ return topType ; } static
Distance : 11

67
Tree	{ return topType ; } setAcceptedLanguage
Code	{ return topType ; } setAcceptedLanguage
Distance : 11

68
Tree	{ return topType ; } JSType
Code	{ return topType ; } JSType
Distance : 11

69
Tree	{ return topType ; } isEmpty
Code	{ return topType ; } isEmpty
Distance : 11

70
Tree	{ return topType ; } else
Code	{ return topType ; } else
Distance : 11

71
Tree	{ return topType ; } true
Code	{ return topType ; } true
Distance : 11

72
Tree	{ return topType ; } return
Code	{ return topType ; } return
Distance : 11

73
Tree	{ return topType ; } if
Code	{ return topType ; } if
Distance : 11

74
Tree	{ return topType ; } getMessage
Code	{ return topType ; } getMessage
Distance : 11

75
Tree	{ return topType ; } <
Code	{ return topType ; } <
Distance : 11

76
Tree	{ return topType ; } dataset
Code	{ return topType ; } dataset
Distance : 11

77
Tree	{ return topType ; } getChronology
Code	{ return topType ; } getChronology
Distance : 11

78
Tree	{ return topType ; } js
Code	{ return topType ; } js
Distance : 11

79
Tree	{ return topType ; } TestUtilities
Code	{ return topType ; } TestUtilities
Distance : 11

80
Tree	{ return topType ; } equals
Code	{ return topType ; } equals
Distance : 11

81
Tree	{ return topType ; } d
Code	{ return topType ; } d
Distance : 11

82
Tree	{ return topType ; } notifyListeners
Code	{ return topType ; } notifyListeners
Distance : 11

83
Tree	{ return topType ; } externs
Code	{ return topType ; } externs
Distance : 11

84
Tree	{ return topType ; } for
Code	{ return topType ; } for
Distance : 11

85
Tree	{ return topType ; } Invocation
Code	{ return topType ; } Invocation
Distance : 11

86
Tree	{ return topType ; } node
Code	{ return topType ; } node
Distance : 11

87
Tree	{ return topType ; } getParent
Code	{ return topType ; } getParent
Distance : 11

88
Tree	{ return topType ; } StrBuilder
Code	{ return topType ; } StrBuilder
Distance : 11

89
Tree	{ return topType ; } setUp
Code	{ return topType ; } setUp
Distance : 11

90
Tree	{ return topType ; } invocations
Code	{ return topType ; } invocations
Distance : 11

91
Tree	{ return topType ; } index
Code	{ return topType ; } index
Distance : 11

92
Tree	{ return topType ; } instant
Code	{ return topType ; } instant
Distance : 11

93
Tree	{ return topType ; } abs
Code	{ return topType ; } abs
Distance : 11

94
Tree	{ return topType ; } Double
Code	{ return topType ; } Double
Distance : 11

95
Tree	{ return topType ; } <=
Code	{ return topType ; } <=
Distance : 11

96
Tree	{ return topType ; } reportMatcher
Code	{ return topType ; } reportMatcher
Distance : 11

97
Tree	{ return topType ; } stream
Code	{ return topType ; } stream
Distance : 11

98
Tree	{ return topType ; } s
Code	{ return topType ; } s
Distance : 11

99
Tree	{ return topType ; }
Code	{ return topType ; }
Distance : 10

100
Tree	{ return topType ; } contains
Code	{ return topType ; } contains
Distance : 11

101
Tree	{ return topType ; } b
Code	{ return topType ; } b
Distance : 11

102
Tree	{ return topType ; } stroke
Code	{ return topType ; } stroke
Distance : 11

103
Tree	{ return topType ; } MutableTimePeriod
Code	{ return topType ; } MutableTimePeriod
Distance : 11

104
Tree	{ return topType ; } LanguageMode.ECMASCRIPT_2015
Code	{ return topType ; } LanguageMode.ECMASCRIPT_2015
Distance : 11

105
Tree	{ return topType ; } size
Code	{ return topType ; } size
Distance : 11

106
Tree	{ return topType ; } traverseEs6
Code	{ return topType ; } traverseEs6
Distance : 11

107
Tree	{ return topType ; } StringBuilder
Code	{ return topType ; } StringBuilder
Distance : 11

108
Tree	{ return topType ; } chrono
Code	{ return topType ; } chrono
Distance : 11

109
Tree	{ return topType ; } a
Code	{ return topType ; } a
Distance : 11

110
Tree	{ return topType ; } returnZero
Code	{ return topType ; } returnZero
Distance : 11

111
Tree	{ return topType ; } sb
Code	{ return topType ; } sb
Distance : 11

112
Tree	{ return topType ; } scope
Code	{ return topType ; } scope
Distance : 11

113
Tree	{ return topType ; } UnivariateFunction
Code	{ return topType ; } UnivariateFunction
Distance : 11

114
Tree	{ return topType ; } sqrt
Code	{ return topType ; } sqrt
Distance : 11

115
Tree	{ return topType ; } clone
Code	{ return topType ; } clone
Distance : 11

116
Tree	{ return topType ; } getFirstChild
Code	{ return topType ; } getFirstChild
Distance : 11

117
Tree	{ return topType ; } throws
Code	{ return topType ; } throws
Distance : 11

118
Tree	{ return topType ; } simpleMethod
Code	{ return topType ; } simpleMethod
Distance : 11

119
Tree	{ return topType ; } getArgumentMatcherStorage
Code	{ return topType ; } getArgumentMatcherStorage
Distance : 11

120
Tree	{ return topType ; } append
Code	{ return topType ; } append
Distance : 11

121
Tree	{ return topType ; } alpha
Code	{ return topType ; } alpha
Distance : 11

122
Tree	{ return topType ; } isNormalBlock
Code	{ return topType ; } isNormalBlock
Distance : 11

123
Tree	{ return topType ; } obj
Code	{ return topType ; } obj
Distance : 11

124
Tree	{ return topType ; } isBlock
Code	{ return topType ; } isBlock
Distance : 11

125
Tree	{ return topType ; } array
Code	{ return topType ; } array
Distance : 11

126
Tree	{ return topType ; } TestUtils
Code	{ return topType ; } TestUtils
Distance : 11

127
Tree	{ return topType ; } length
Code	{ return topType ; } length
Distance : 11

128
Tree	{ return topType ; } expected
Code	{ return topType ; } expected
Distance : 11

129
Tree	{ return topType ; } IllegalArgumentException
Code	{ return topType ; } IllegalArgumentException
Distance : 11

130
Tree	{ return topType ; } invocation
Code	{ return topType ; } invocation
Distance : 11

131
Tree	{ return topType ; } assertThat
Code	{ return topType ; } assertThat
Distance : 11

132
Tree	{ return topType ; } FastMath
Code	{ return topType ; } FastMath
Distance : 11

133
Tree	{ return topType ; } reportCodeChange
Code	{ return topType ; } reportCodeChange
Distance : 11

134
Tree	{ return topType ; } testSame
Code	{ return topType ; } testSame
Distance : 11

135
Tree	{ return topType ; } createIllegalArgumentException
Code	{ return topType ; } createIllegalArgumentException
Distance : 11

136
Tree	{ return topType ; } ArrayList
Code	{ return topType ; } ArrayList
Distance : 11

137
Tree	{ return topType ; } parent
Code	{ return topType ; } parent
Distance : 11

138
Tree	{ return topType ; } LINE_JOINER
Code	{ return topType ; } LINE_JOINER
Distance : 11

139
Tree	{ return topType ; } x
Code	{ return topType ; } x
Distance : 11

140
Tree	{ return topType ; } fireChangeEvent
Code	{ return topType ; } fireChangeEvent
Distance : 11

141
Tree	{ return topType ; } str
Code	{ return topType ; } str
Distance : 11

142
Tree	{ return topType ; } m
Code	{ return topType ; } m
Distance : 11

143
Tree	{ return topType ; } try
Code	{ return topType ; } try
Distance : 11

144
Tree	{ return topType ; } fail
Code	{ return topType ; } fail
Distance : 11

145
Tree	{ return topType ; } :
Code	{ return topType ; } :
Distance : 11

146
Tree	{ return topType ; } LanguageMode.ECMASCRIPT6
Code	{ return topType ; } LanguageMode.ECMASCRIPT6
Distance : 11

147
Tree	{ return topType ; } optimizer
Code	{ return topType ; } optimizer
Distance : 11

148
Tree	{ return ARRAY_TYPE ; }
Code	{ return ARRAY_TYPE ; }
Distance : 10

149
Tree	{ return topType ; } <>
Code	{ return topType ; } <>
Distance : 11

150
Tree	{ return topType ; } ?
Code	{ return topType ; } ?
Distance : 11

151
Tree	{ return topType ; } boolean
Code	{ return topType ; } boolean
Distance : 11

152
Tree	{ return topType ; } paint
Code	{ return topType ; } paint
Distance : 11

153
Tree	{ return topType ; } result
Code	{ return topType ; } result
Distance : 11

154
Tree	{ return topType ; } *
Code	{ return topType ; } *
Distance : 11

155
Tree	{ return topType ; } type
Code	{ return topType ; } type
Distance : 11

156
Tree	{ return topType ; } getInstance
Code	{ return topType ; } getInstance
Distance : 11

157
Tree	{ return topType ; } serialised
Code	{ return topType ; } serialised
Distance : 11

158
Tree	{ return topType ; } Exception
Code	{ return topType ; } Exception
Distance : 11

159
Tree	{ return topType ; } Assert
Code	{ return topType ; } Assert
Distance : 11

160
Tree	{ return topType ; } source
Code	{ return topType ; } source
Distance : 11

161
Tree	{ return topType ; } Class
Code	{ return topType ; } Class
Distance : 11

162
Tree	{ return topType ; } Math
Code	{ return topType ; } Math
Distance : 11

163
Tree	{ return topType ; } root
Code	{ return topType ; } root
Distance : 11

164
Tree	{ return topType ; } options
Code	{ return topType ; } options
Distance : 11

165
Tree	{ return topType ; } p
Code	{ return topType ; } p
Distance : 11

166
Tree	{ return topType ; } data
Code	{ return topType ; } data
Distance : 11

167
Tree	{ return topType ; } add
Code	{ return topType ; } add
Distance : 11

168
Tree	{ return topType ; } field
Code	{ return topType ; } field
Distance : 11

169
Tree	{ return topType ; } checkArgument
Code	{ return topType ; } checkArgument
Distance : 11

170
Tree	{ return topType ; } ex
Code	{ return topType ; } ex
Distance : 11

171
Tree	{ return topType ; } NodeUtil
Code	{ return topType ; } NodeUtil
Distance : 11

172
Tree	{ return topType ; } join
Code	{ return topType ; } join
Distance : 11

173
Tree	{ return topType ; } List
Code	{ return topType ; } List
Distance : 11

174
Tree	{ return topType ; } NodeTraversal
Code	{ return topType ; } NodeTraversal
Distance : 11

175
Tree	{ return topType ; } Args
Code	{ return topType ; } Args
Distance : 11

176
Tree	{ return topType ; } v
Code	{ return topType ; } v
Distance : 11

177
Tree	{ return topType ; } Integer
Code	{ return topType ; } Integer
Distance : 11

178
Tree	{ return topType ; } lines
Code	{ return topType ; } lines
Distance : 11

179
Tree	{ return topType ; } c
Code	{ return topType ; } c
Distance : 11

180
Tree	{ return topType ; } verify
Code	{ return topType ; } verify
Distance : 11

181
Tree	{ return topType ; } Node
Code	{ return topType ; } Node
Distance : 11

182
Tree	{ return topType ; } compiler
Code	{ return topType ; } compiler
Distance : 11

183
Tree	{ return topType ; } String
Code	{ return topType ; } String
Distance : 11

184
Tree	{ return topType ; } null
Code	{ return topType ; } null
Distance : 11

185
Tree	{ return topType ; } wanted
Code	{ return topType ; } wanted
Distance : 11

186
Tree	{ return topType ; } +
Code	{ return topType ; } +
Distance : 11

187
Tree	{ return topType ; } catch
Code	{ return topType ; } catch
Distance : 11

188
Tree	{ return topType ; } !=
Code	{ return topType ; } !=
Distance : 11

189
Tree	{ return topType ; } value
Code	{ return topType ; } value
Distance : 11

190
Tree	{ return topType ; } /
Code	{ return topType ; } /
Distance : 11

191
Tree	{ return topType ; } assertTrue
Code	{ return topType ; } assertTrue
Distance : 11

192
Tree	{ return topType ; } checkNotNull
Code	{ return topType ; } checkNotNull
Distance : 11

193
Tree	{ return topType ; } Fraction
Code	{ return topType ; } Fraction
Distance : 11

194
Tree	{ return topType ; } valueOf
Code	{ return topType ; } valueOf
Distance : 11

195
Tree	{ return topType ; } instance
Code	{ return topType ; } instance
Distance : 11

196
Tree	{ return topType ; } long
Code	{ return topType ; } long
Distance : 11

197
Tree	{ return topType ; } throw
Code	{ return topType ; } throw
Distance : 11

198
Tree	{ return topType ; } y
Code	{ return topType ; } y
Distance : 11

199
Tree	{ return topType ; } PeriodType
Code	{ return topType ; } PeriodType
Distance : 11

========================================================================


========================================================================
Example Number: 13
Parent Code is: 
{ if ( assignLhsChild != null ) { return true ; } return false ; }
-------------------------------------------------------------------------------
Child code is: 
{ if ( assignLhsChild != null ) { return true ; } return parent != null && NodeUtil . isGet ( parent ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=assignLhsChild}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=assignLhsChild}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isGet}) (214{val=(}) (800{val=parent}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/100/parent/src_com_google_javascript_jscomp_CheckGlobalThis.java
-------------------------------------------------------------------------------
Edit Distance : 10
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 24

1
Tree	stroke
Code	stroke
Distance : 25

2
Tree	&
Code	&
Distance : 25

3
Tree	logBeta
Code	logBeta
Distance : 25

4
Tree	rhs
Code	rhs
Distance : 25

5
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 25

6
Tree	j
Code	j
Distance : 25

7
Tree	key
Code	key
Distance : 25

8
Tree	VerificationMode
Code	VerificationMode
Distance : 25

9
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 25

10
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 25

11
Tree	k
Code	k
Distance : 25

12
Tree	position
Code	position
Distance : 25

13
Tree	index
Code	index
Distance : 25

14
Tree	argument
Code	argument
Distance : 25

15
Tree	NodeUtil
Code	NodeUtil
Distance : 24

16
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 25

17
Tree	doReturn
Code	doReturn
Distance : 25

18
Tree	T
Code	T
Distance : 25

19
Tree	config
Code	config
Distance : 25

20
Tree	()
Code	()
Distance : 25

21
Tree	;
Code	;
Distance : 24

22
Tree	Coordinates3D
Code	Coordinates3D
Distance : 25

23
Tree	traversal
Code	traversal
Distance : 25

24
Tree	Rectangle2D
Code	Rectangle2D
Distance : 25

25
Tree	Answer
Code	Answer
Distance : 25

26
Tree	new
Code	new
Distance : 25

27
Tree	addAnswer
Code	addAnswer
Distance : 25

28
Tree	DateTimeUtils
Code	DateTimeUtils
Distance : 25

29
Tree	chronology
Code	chronology
Distance : 25

30
Tree	validateNodeType
Code	validateNodeType
Distance : 25

31
Tree	NodeTraversal
Code	NodeTraversal
Distance : 25

32
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 25

33
Tree	codingConvention
Code	codingConvention
Distance : 25

34
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 25

35
Tree	flag
Code	flag
Distance : 25

36
Tree	CompositeFormat
Code	CompositeFormat
Distance : 25

37
Tree	getStartMillis
Code	getStartMillis
Distance : 25

38
Tree	stubVoid
Code	stubVoid
Distance : 25

39
Tree	init
Code	init
Distance : 25

40
Tree	registeredInvocations
Code	registeredInvocations
Distance : 25

41
Tree	scale
Code	scale
Distance : 25

42
Tree	sample1
Code	sample1
Distance : 25

43
Tree	last
Code	last
Distance : 25

44
Tree	period
Code	period
Distance : 25

45
Tree	ds
Code	ds
Distance : 25

46
Tree	zFormat
Code	zFormat
Distance : 25

47
Tree	error
Code	error
Distance : 25

48
Tree	startParams
Code	startParams
Distance : 25

49
Tree	i
Code	i
Distance : 25

50
Tree	root
Code	root
Distance : 25

51
Tree	MathArrays
Code	MathArrays
Distance : 25

52
Tree	path
Code	path
Distance : 25

53
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 25

54
Tree	LastArguments
Code	LastArguments
Distance : 25

55
Tree	ret
Code	ret
Distance : 25

56
Tree	random
Code	random
Distance : 25

57
Tree	formatter
Code	formatter
Distance : 25

58
Tree	stream
Code	stream
Distance : 25

59
Tree	node
Code	node
Distance : 25

60
Tree	LanguageMode.ECMASCRIPT_2017
Code	LanguageMode.ECMASCRIPT_2017
Distance : 25

61
Tree	setField
Code	setField
Distance : 25

62
Tree	out.value
Code	out.value
Distance : 25

63
Tree	float
Code	float
Distance : 25

64
Tree	testSame
Code	testSame
Distance : 25

65
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 25

66
Tree	public
Code	public
Distance : 25

67
Tree	doAnswer
Code	doAnswer
Distance : 25

68
Tree	reportAnd
Code	reportAnd
Distance : 25

69
Tree	AbstractScope
Code	AbstractScope
Distance : 25

70
Tree	break;
Code	break;
Distance : 25

71
Tree	
Code	
Distance : 25

72
Tree	(
Code	(
Distance : 24

73
Tree	{}
Code	{}
Distance : 25

74
Tree	paint
Code	paint
Distance : 25

75
Tree	checkArgument
Code	checkArgument
Distance : 25

76
Tree	<=
Code	<=
Distance : 25

77
Tree	value
Code	value
Distance : 25

78
Tree	++
Code	++
Distance : 25

79
Tree	SerialUtils
Code	SerialUtils
Distance : 25

80
Tree	catch
Code	catch
Distance : 25

81
Tree	mockitoStubber
Code	mockitoStubber
Distance : 25

82
Tree	Paint
Code	Paint
Distance : 25

83
Tree	final
Code	final
Distance : 25

84
Tree	super();
Code	super();
Distance : 25

85
Tree	scriptRoot
Code	scriptRoot
Distance : 25

86
Tree	try
Code	try
Distance : 25

87
Tree	if
Code	if
Distance : 24

88
Tree	static
Code	static
Distance : 25

89
Tree	stubber
Code	stubber
Distance : 25

90
Tree	for
Code	for
Distance : 25

91
Tree	protected
Code	protected
Distance : 25

92
Tree	@
Code	@
Distance : 25

93
Tree	TypeInferenceMode.BOTH
Code	TypeInferenceMode.BOTH
Distance : 25

94
Tree	assertTrue
Code	assertTrue
Distance : 25

95
Tree	CharSequence
Code	CharSequence
Distance : 25

96
Tree	private
Code	private
Distance : 25

97
Tree	assertScope
Code	assertScope
Distance : 25

98
Tree	this
Code	this
Distance : 25

99
Tree	detach
Code	detach
Distance : 25

100
Tree	doThrow
Code	doThrow
Distance : 25

101
Tree	&&
Code	&&
Distance : 24

102
Tree	fail
Code	fail
Distance : 25

103
Tree	setSeedInternal
Code	setSeedInternal
Distance : 25

104
Tree	messageContains
Code	messageContains
Distance : 25

105
Tree	getEndMillis
Code	getEndMillis
Distance : 25

106
Tree	returnChar
Code	returnChar
Distance : 25

107
Tree	fn
Code	fn
Distance : 25

108
Tree	throwable
Code	throwable
Distance : 25

109
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 25

110
Tree	:
Code	:
Distance : 25

111
Tree	]
Code	]
Distance : 25

112
Tree	fieldType
Code	fieldType
Distance : 25

113
Tree	IMethods
Code	IMethods
Distance : 25

114
Tree	notNull
Code	notNull
Distance : 25

115
Tree	Args
Code	Args
Distance : 25

116
Tree	setStartMillis
Code	setStartMillis
Distance : 25

117
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 25

118
Tree	Comparable
Code	Comparable
Distance : 25

119
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 25

120
Tree	verify
Code	verify
Distance : 25

121
Tree	checkNotNull
Code	checkNotNull
Distance : 25

122
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 25

123
Tree	returnZero
Code	returnZero
Distance : 25

124
Tree	reportNot
Code	reportNot
Distance : 25

125
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 25

126
Tree	getLastArguments
Code	getLastArguments
Distance : 25

127
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 25

128
Tree	text
Code	text
Distance : 25

129
Tree	LanguageMode.ECMASCRIPT_2015
Code	LanguageMode.ECMASCRIPT_2015
Distance : 25

130
Tree	zone
Code	zone
Distance : 25

131
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 25

132
Tree	cause
Code	cause
Distance : 25

133
Tree	answer
Code	answer
Distance : 25

134
Tree	isEquals
Code	isEquals
Distance : 25

135
Tree	LocalizedFormats.CANNOT_PARSE
Code	LocalizedFormats.CANNOT_PARSE
Distance : 25

136
Tree	TestSubObject
Code	TestSubObject
Distance : 25

137
Tree	checks
Code	checks
Distance : 25

138
Tree	reportOr
Code	reportOr
Distance : 25

139
Tree	assign
Code	assign
Distance : 25

140
Tree	font
Code	font
Distance : 25

141
Tree	denominatorDegreesOfFreedom
Code	denominatorDegreesOfFreedom
Distance : 25

142
Tree	mean
Code	mean
Distance : 25

143
Tree	null
Code	null
Distance : 24

144
Tree	stub
Code	stub
Distance : 25

145
Tree	Period
Code	Period
Distance : 25

146
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 25

147
Tree	objects
Code	objects
Distance : 25

148
Tree	reportMatcher
Code	reportMatcher
Distance : 25

149
Tree	real
Code	real
Distance : 25

150
Tree	Cartesian3D
Code	Cartesian3D
Distance : 25

151
Tree	)
Code	)
Distance : 24

152
Tree	z
Code	z
Distance : 25

153
Tree	writePaint
Code	writePaint
Distance : 25

154
Tree	testError
Code	testError
Distance : 25

155
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 25

156
Tree	newValues
Code	newValues
Distance : 25

157
Tree	add
Code	add
Distance : 25

158
Tree	seed
Code	seed
Distance : 25

159
Tree	isForward
Code	isForward
Distance : 25

160
Tree	anyObject
Code	anyObject
Distance : 25

161
Tree	assertNull
Code	assertNull
Distance : 25

162
Tree	put
Code	put
Distance : 25

163
Tree	partial
Code	partial
Distance : 25

164
Tree	fieldName
Code	fieldName
Distance : 25

165
Tree	iValues
Code	iValues
Distance : 25

166
Tree	removeChild
Code	removeChild
Distance : 25

167
Tree	notifyListeners
Code	notifyListeners
Distance : 25

168
Tree	UnivariateInterpolator
Code	UnivariateInterpolator
Distance : 25

169
Tree	testModules
Code	testModules
Distance : 25

170
Tree	strictly
Code	strictly
Distance : 25

171
Tree	style
Code	style
Distance : 25

172
Tree	checkState
Code	checkState
Distance : 25

173
Tree	margin
Code	margin
Distance : 25

174
Tree	isFunction
Code	isFunction
Distance : 25

175
Tree	VerificationModeImpl
Code	VerificationModeImpl
Distance : 25

176
Tree	emptiedClinitMethods
Code	emptiedClinitMethods
Distance : 25

177
Tree	readPaint
Code	readPaint
Distance : 25

178
Tree	listener
Code	listener
Distance : 25

179
Tree	padding
Code	padding
Distance : 25

180
Tree	isScriptEs6OrHigher
Code	isScriptEs6OrHigher
Distance : 25

181
Tree	anchor
Code	anchor
Distance : 25

182
Tree	printer
Code	printer
Distance : 25

183
Tree	BackgroundInitializerTestImpl
Code	BackgroundInitializerTestImpl
Distance : 25

184
Tree	-
Code	-
Distance : 25

185
Tree	absoluteThreshold
Code	absoluteThreshold
Distance : 25

186
Tree	sampleStats
Code	sampleStats
Distance : 25

187
Tree	rule
Code	rule
Distance : 25

188
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 25

189
Tree	DefaultToStringStyle
Code	DefaultToStringStyle
Distance : 25

190
Tree	enableRunTypeCheckAfterProcessing
Code	enableRunTypeCheckAfterProcessing
Distance : 25

191
Tree	source
Code	source
Distance : 25

192
Tree	mockingProgress
Code	mockingProgress
Distance : 25

193
Tree	str
Code	str
Distance : 25

194
Tree	source.moment
Code	source.moment
Distance : 25

195
Tree	checkInitialize
Code	checkInitialize
Distance : 25

196
Tree	transpiledFeatures
Code	transpiledFeatures
Distance : 25

197
Tree	doNothing
Code	doNothing
Distance : 25

198
Tree	ReadableDuration
Code	ReadableDuration
Distance : 25

199
Tree	MockHandler
Code	MockHandler
Distance : 25

========================================================================


========================================================================
Example Number: 14
Parent Code is: 
int indexOfDot = namespace . indexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Child code is: 
int indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/93/parent/src_com_google_javascript_jscomp_ProcessClosurePrimitives.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	super ( namespace , namespace , null , false ) ;
Code	super ( namespace , namespace , null , false ) ;
Distance : 8

1
Tree	super ( namespace , namespace , null , false ) ; ;
Code	super ( namespace , namespace , null , false ) ; ;
Distance : 9

2
Tree	super ( namespace , namespace , null , false ) ; <blank>
Code	super ( namespace , namespace , null , false ) ; <blank>
Distance : 9

3
Tree	super ( namespace , namespace , null , false ) ; int
Code	super ( namespace , namespace , null , false ) ; int
Distance : 9

4
Tree	super ( namespace , namespace , null , false ) ; <s>
Code	super ( namespace , namespace , null , false ) ; <s>
Distance : 9

5
Tree	super ( namespace , namespace , null , false ) ; !=
Code	super ( namespace , namespace , null , false ) ; !=
Distance : 9

6
Tree	super ( namespace , namespace , null , false ) ; static
Code	super ( namespace , namespace , null , false ) ; static
Distance : 9

7
Tree	super ( namespace , namespace , null , false ) ; setAcceptedLanguage
Code	super ( namespace , namespace , null , false ) ; setAcceptedLanguage
Distance : 9

8
Tree	super ( namespace , namespace , null , false ) ; abs
Code	super ( namespace , namespace , null , false ) ; abs
Distance : 9

9
Tree	super ( namespace , namespace , null , false ) ; <>
Code	super ( namespace , namespace , null , false ) ; <>
Distance : 9

10
Tree	super ( namespace , namespace , null , false ) ; (
Code	super ( namespace , namespace , null , false ) ; (
Distance : 9

11
Tree	super ( namespace , namespace , null , false ) ; ==
Code	super ( namespace , namespace , null , false ) ; ==
Distance : 9

12
Tree	super ( namespace , namespace , null , false ) ; node
Code	super ( namespace , namespace , null , false ) ; node
Distance : 9

13
Tree	super ( namespace , namespace , null , false ) ; index
Code	super ( namespace , namespace , null , false ) ; index
Distance : 9

14
Tree	super ( namespace , namespace , null , false ) ; )
Code	super ( namespace , namespace , null , false ) ; )
Distance : 9

15
Tree	super ( namespace , namespace , null , false ) ; invocations
Code	super ( namespace , namespace , null , false ) ; invocations
Distance : 9

16
Tree	super ( namespace , namespace , null , false ) ; equals
Code	super ( namespace , namespace , null , false ) ; equals
Distance : 9

17
Tree	super ( namespace , namespace , null , false ) ; for
Code	super ( namespace , namespace , null , false ) ; for
Distance : 9

18
Tree	super ( namespace , namespace , null , false ) ; Invocation
Code	super ( namespace , namespace , null , false ) ; Invocation
Distance : 9

19
Tree	super ( namespace , namespace , null , false ) ; js
Code	super ( namespace , namespace , null , false ) ; js
Distance : 9

20
Tree	super ( namespace , namespace , null , false ) ; TestUtilities
Code	super ( namespace , namespace , null , false ) ; TestUtilities
Distance : 9

21
Tree	super ( namespace , namespace , null , false ) ; StrBuilder
Code	super ( namespace , namespace , null , false ) ; StrBuilder
Distance : 9

22
Tree	super ( namespace , namespace , null , false ) ; setUp
Code	super ( namespace , namespace , null , false ) ; setUp
Distance : 9

23
Tree	super ( namespace , namespace , null , false ) ; super
Code	super ( namespace , namespace , null , false ) ; super
Distance : 9

24
Tree	super ( namespace , namespace , null , false ) ; i
Code	super ( namespace , namespace , null , false ) ; i
Distance : 9

25
Tree	super ( namespace , namespace , null , false ) ; int
Code	super ( namespace , namespace , null , false ) ; int
Distance : 9

26
Tree	super ( namespace , namespace , null , false ) ; checkState
Code	super ( namespace , namespace , null , false ) ; checkState
Distance : 9

27
Tree	super ( namespace , namespace , null , false ) ; values
Code	super ( namespace , namespace , null , false ) ; values
Distance : 9

28
Tree	super ( namespace , namespace , null , false ) ; protected
Code	super ( namespace , namespace , null , false ) ; protected
Distance : 9

29
Tree	super ( namespace , namespace , null , false ) ; d
Code	super ( namespace , namespace , null , false ) ; d
Distance : 9

30
Tree	super ( namespace , namespace , null , false ) ; getParent
Code	super ( namespace , namespace , null , false ) ; getParent
Distance : 9

31
Tree	super ( namespace , namespace , null , false ) ; .
Code	super ( namespace , namespace , null , false ) ; .
Distance : 9

32
Tree	super ( namespace , namespace , null , false ) ; ex
Code	super ( namespace , namespace , null , false ) ; ex
Distance : 9

33
Tree	super ( namespace , namespace , null , false ) ; p
Code	super ( namespace , namespace , null , false ) ; p
Distance : 9

34
Tree	super ( namespace , namespace , null , false ) ; toString
Code	super ( namespace , namespace , null , false ) ; toString
Distance : 9

35
Tree	super ( namespace , namespace , null , false ) ; c
Code	super ( namespace , namespace , null , false ) ; c
Distance : 9

36
Tree	super ( namespace , namespace , null , false ) ; T
Code	super ( namespace , namespace , null , false ) ; T
Distance : 9

37
Tree	super ( namespace , namespace , null , false ) ; /
Code	super ( namespace , namespace , null , false ) ; /
Distance : 9

38
Tree	super ( namespace , namespace , null , false ) ; value
Code	super ( namespace , namespace , null , false ) ; value
Distance : 9

39
Tree	super ( namespace , namespace , null , false ) ; matcher
Code	super ( namespace , namespace , null , false ) ; matcher
Distance : 9

40
Tree	super ( namespace , namespace , null , false ) ; reportMatcher
Code	super ( namespace , namespace , null , false ) ; reportMatcher
Distance : 9

41
Tree	super ( namespace , namespace , null , false ) ; MathRuntimeException
Code	super ( namespace , namespace , null , false ) ; MathRuntimeException
Distance : 9

42
Tree	super ( namespace , namespace , null , false ) ; {}
Code	super ( namespace , namespace , null , false ) ; {}
Distance : 9

43
Tree	super ( namespace , namespace , null , false ) ; true
Code	super ( namespace , namespace , null , false ) ; true
Distance : 9

44
Tree	super ( namespace , namespace , null , false ) ; mode
Code	super ( namespace , namespace , null , false ) ; mode
Distance : 9

45
Tree	super ( namespace , namespace , null , false ) ; -
Code	super ( namespace , namespace , null , false ) ; -
Distance : 9

46
Tree	super ( namespace , namespace , null , false ) ; ,
Code	super ( namespace , namespace , null , false ) ; ,
Distance : 9

47
Tree	super ( namespace , namespace , null , false ) ; Preconditions
Code	super ( namespace , namespace , null , false ) ; Preconditions
Distance : 9

48
Tree	super ( namespace , namespace , null , false ) ; ]
Code	super ( namespace , namespace , null , false ) ; ]
Distance : 9

49
Tree	super ( namespace , namespace , null , false ) ; ParamChecks
Code	super ( namespace , namespace , null , false ) ; ParamChecks
Distance : 9

50
Tree	super ( namespace , namespace , null , false ) ; Object
Code	super ( namespace , namespace , null , false ) ; Object
Distance : 9

51
Tree	super ( namespace , namespace , null , false ) ; mock
Code	super ( namespace , namespace , null , false ) ; mock
Distance : 9

52
Tree	super ( namespace , namespace , null , false ) ; Override
Code	super ( namespace , namespace , null , false ) ; Override
Distance : 9

53
Tree	super ( namespace , namespace , null , false ) ; f
Code	super ( namespace , namespace , null , false ) ; f
Distance : 9

54
Tree	super ( namespace , namespace , null , false ) ; getMessage
Code	super ( namespace , namespace , null , false ) ; getMessage
Distance : 9

55
Tree	super ( namespace , namespace , null , false ) ; class
Code	super ( namespace , namespace , null , false ) ; class
Distance : 9

56
Tree	super ( namespace , namespace , null , false ) ; else
Code	super ( namespace , namespace , null , false ) ; else
Distance : 9

57
Tree	super ( namespace , namespace , null , false ) ; instant
Code	super ( namespace , namespace , null , false ) ; instant
Distance : 9

58
Tree	super ( namespace , namespace , null , false ) ; wanted
Code	super ( namespace , namespace , null , false ) ; wanted
Distance : 9

59
Tree	super ( namespace , namespace , null , false ) ; data
Code	super ( namespace , namespace , null , false ) ; data
Distance : 9

60
Tree	super ( namespace , namespace , null , false ) ; NodeTraversal
Code	super ( namespace , namespace , null , false ) ; NodeTraversal
Distance : 9

61
Tree	super ( namespace , namespace , null , false ) ; [
Code	super ( namespace , namespace , null , false ) ; [
Distance : 9

62
Tree	super ( namespace , namespace , null , false ) ; stream
Code	super ( namespace , namespace , null , false ) ; stream
Distance : 9

63
Tree	super ( namespace , namespace , null , false ) ; add
Code	super ( namespace , namespace , null , false ) ; add
Distance : 9

64
Tree	super ( namespace , namespace , null , false ) ; throw
Code	super ( namespace , namespace , null , false ) ; throw
Distance : 9

65
Tree	super ( namespace , CHAR_CONS , continue; , true ) ;
Code	super ( namespace , CHAR_CONS , continue; , true ) ;
Distance : 9

66
Tree	super ( CHAR_CONS , namespace , continue; , true ) ;
Code	super ( CHAR_CONS , namespace , continue; , true ) ;
Distance : 8

67
Tree	super ( namespace , CHAR_CONS , return; , false ) ;
Code	super ( namespace , CHAR_CONS , return; , false ) ;
Distance : 9

68
Tree	super ( namespace , CHAR_CONS , break; , false ) ;
Code	super ( namespace , CHAR_CONS , break; , false ) ;
Distance : 9

69
Tree	super ( namespace , namespace , default: , true ) ;
Code	super ( namespace , namespace , default: , true ) ;
Distance : 8

70
Tree	super ( CHAR_CONS , namespace , return; , false ) ;
Code	super ( CHAR_CONS , namespace , return; , false ) ;
Distance : 8

71
Tree	super ( indexOfDot , namespace , break; , false ) ;
Code	super ( indexOfDot , namespace , break; , false ) ;
Distance : 7

72
Tree	super ( namespace , CHAR_CONS , continue; , false ) ;
Code	super ( namespace , CHAR_CONS , continue; , false ) ;
Distance : 9

73
Tree	super ( namespace , CHAR_CONS , super(); , true ) ;
Code	super ( namespace , CHAR_CONS , super(); , true ) ;
Distance : 9

74
Tree	super ( CHAR_CONS , namespace , continue; , false ) ;
Code	super ( CHAR_CONS , namespace , continue; , false ) ;
Distance : 8

75
Tree	super ( CHAR_CONS , namespace , super(); , true ) ;
Code	super ( CHAR_CONS , namespace , super(); , true ) ;
Distance : 8

76
Tree	super ( namespace , namespace , default: , false ) ;
Code	super ( namespace , namespace , default: , false ) ;
Distance : 8

77
Tree	super ( namespace , CHAR_CONS , super(); , false ) ;
Code	super ( namespace , CHAR_CONS , super(); , false ) ;
Distance : 9

78
Tree	super ( namespace , namespace , return; , true ) ;
Code	super ( namespace , namespace , return; , true ) ;
Distance : 8

79
Tree	super ( namespace , namespace , break; , true ) ;
Code	super ( namespace , namespace , break; , true ) ;
Distance : 8

80
Tree	super ( CHAR_CONS , namespace , super(); , false ) ;
Code	super ( CHAR_CONS , namespace , super(); , false ) ;
Distance : 8

81
Tree	super ( namespace , namespace , continue; , true ) ;
Code	super ( namespace , namespace , continue; , true ) ;
Distance : 8

82
Tree	super ( namespace , namespace , return; , false ) ;
Code	super ( namespace , namespace , return; , false ) ;
Distance : 8

83
Tree	super ( namespace , namespace , break; , false ) ;
Code	super ( namespace , namespace , break; , false ) ;
Distance : 8

84
Tree	super ( namespace , namespace , continue; , false ) ;
Code	super ( namespace , namespace , continue; , false ) ;
Distance : 8

85
Tree	super ( namespace , namespace , super(); , true ) ;
Code	super ( namespace , namespace , super(); , true ) ;
Distance : 8

86
Tree	super ( namespace , namespace , super(); , false ) ;
Code	super ( namespace , namespace , super(); , false ) ;
Distance : 8

87
Tree	super ( CHAR_CONS , CHAR_CONS , null , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , null , true ) ;
Distance : 9

88
Tree	super ( CHAR_CONS , CHAR_CONS , null , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , null , false ) ;
Distance : 9

89
Tree	super ( namespace , CHAR_CONS , null , true ) ;
Code	super ( namespace , CHAR_CONS , null , true ) ;
Distance : 9

90
Tree	super ( namespace , namespace , null , true ) ;
Code	super ( namespace , namespace , null , true ) ;
Distance : 8

91
Tree	super ( namespace , CHAR_CONS , null , false ) ;
Code	super ( namespace , CHAR_CONS , null , false ) ;
Distance : 9

92
Tree	super ( CHAR_CONS , namespace , null , false ) ;
Code	super ( CHAR_CONS , namespace , null , false ) ;
Distance : 8

93
Tree	super ( namespace , namespace , null , false ) ; void
Code	super ( namespace , namespace , null , false ) ; void
Distance : 9

94
Tree	super ( indexOfDot , namespace , break; , true ) ;
Code	super ( indexOfDot , namespace , break; , true ) ;
Distance : 7

95
Tree	super ( indexOfDot , namespace , return; , true ) ;
Code	super ( indexOfDot , namespace , return; , true ) ;
Distance : 7

96
Tree	super ( namespace , namespace , null , true ) ;
Code	super ( namespace , namespace , null , true ) ;
Distance : 8

97
Tree	super ( namespace , CHAR_CONS , break; , true ) ;
Code	super ( namespace , CHAR_CONS , break; , true ) ;
Distance : 9

98
Tree	super ( indexOfDot , CHAR_CONS , super(); , false ) ;
Code	super ( indexOfDot , CHAR_CONS , super(); , false ) ;
Distance : 8

99
Tree	super ( namespace , namespace , null , false ) ; catch
Code	super ( namespace , namespace , null , false ) ; catch
Distance : 9

100
Tree	super ( namespace , namespace , null , false ) ; e
Code	super ( namespace , namespace , null , false ) ; e
Distance : 9

101
Tree	super ( namespace , namespace , null , false ) ; n
Code	super ( namespace , namespace , null , false ) ; n
Distance : 9

102
Tree	super ( namespace , namespace , null , false ) ; out
Code	super ( namespace , namespace , null , false ) ; out
Distance : 9

103
Tree	super ( namespace , namespace , null , false ) ; compiler
Code	super ( namespace , namespace , null , false ) ; compiler
Distance : 9

104
Tree	super ( namespace , namespace , null , false ) ; if
Code	super ( namespace , namespace , null , false ) ; if
Distance : 9

105
Tree	super ( namespace , namespace , null , false ) ; String
Code	super ( namespace , namespace , null , false ) ; String
Distance : 9

106
Tree	super ( namespace , namespace , null , false ) ; final
Code	super ( namespace , namespace , null , false ) ; final
Distance : 9

107
Tree	super ( namespace , namespace , null , false ) ; public
Code	super ( namespace , namespace , null , false ) ; public
Distance : 9

108
Tree	super ( namespace , namespace , null , false ) ; >
Code	super ( namespace , namespace , null , false ) ; >
Distance : 9

109
Tree	super ( namespace , namespace , null , false ) ; null
Code	super ( namespace , namespace , null , false ) ; null
Distance : 9

110
Tree	super ( namespace , namespace , null , false ) ; +
Code	super ( namespace , namespace , null , false ) ; +
Distance : 9

111
Tree	super ( namespace , namespace , null , false ) ; <
Code	super ( namespace , namespace , null , false ) ; <
Distance : 9

112
Tree	super ( namespace , namespace , null , false ) ; array
Code	super ( namespace , namespace , null , false ) ; array
Distance : 9

113
Tree	super ( namespace , namespace , null , false ) ; this
Code	super ( namespace , namespace , null , false ) ; this
Distance : 9

114
Tree	super ( CHAR_CONS , CHAR_CONS , default: , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , default: , false ) ;
Distance : 9

115
Tree	super ( namespace , CHAR_CONS , return; , true ) ;
Code	super ( namespace , CHAR_CONS , return; , true ) ;
Distance : 9

116
Tree	super ( CHAR_CONS , CHAR_CONS , default: , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , default: , true ) ;
Distance : 9

117
Tree	super ( CHAR_CONS , namespace , default: , false ) ;
Code	super ( CHAR_CONS , namespace , default: , false ) ;
Distance : 8

118
Tree	super ( namespace , CHAR_CONS , default: , false ) ;
Code	super ( namespace , CHAR_CONS , default: , false ) ;
Distance : 9

119
Tree	super ( CHAR_CONS , CHAR_CONS , super(); , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , super(); , true ) ;
Distance : 9

120
Tree	super ( CHAR_CONS , namespace , default: , true ) ;
Code	super ( CHAR_CONS , namespace , default: , true ) ;
Distance : 8

121
Tree	super ( CHAR_CONS , CHAR_CONS , continue; , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , continue; , false ) ;
Distance : 9

122
Tree	super ( CHAR_CONS , CHAR_CONS , return; , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , return; , false ) ;
Distance : 9

123
Tree	super ( namespace , CHAR_CONS , default: , true ) ;
Code	super ( namespace , CHAR_CONS , default: , true ) ;
Distance : 9

124
Tree	super ( CHAR_CONS , CHAR_CONS , continue; , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , continue; , true ) ;
Distance : 9

125
Tree	super ( CHAR_CONS , CHAR_CONS , break; , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , break; , true ) ;
Distance : 9

126
Tree	super ( CHAR_CONS , CHAR_CONS , return; , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , return; , true ) ;
Distance : 9

127
Tree	super ( CHAR_CONS , CHAR_CONS , break; , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , break; , false ) ;
Distance : 9

128
Tree	super ( namespace , namespace , null , false ) ; Integer
Code	super ( namespace , namespace , null , false ) ; Integer
Distance : 9

129
Tree	super ( namespace , namespace , null , false ) ; {
Code	super ( namespace , namespace , null , false ) ; {
Distance : 9

130
Tree	super ( namespace , namespace , null , false ) ; =
Code	super ( namespace , namespace , null , false ) ; =
Distance : 9

131
Tree	super ( namespace , namespace , null , false ) ; }
Code	super ( namespace , namespace , null , false ) ; }
Distance : 9

132
Tree	super ( namespace , namespace , null , false ) ; ()
Code	super ( namespace , namespace , null , false ) ; ()
Distance : 9

133
Tree	super ( namespace , namespace , null , false ) ; new
Code	super ( namespace , namespace , null , false ) ; new
Distance : 9

134
Tree	super ( namespace , namespace , null , false ) ; length
Code	super ( namespace , namespace , null , false ) ; length
Distance : 9

135
Tree	super ( namespace , namespace , null , false ) ; NUMBER_CONSTANT
Code	super ( namespace , namespace , null , false ) ; NUMBER_CONSTANT
Distance : 9

136
Tree	super ( namespace , namespace , null , false ) ; return
Code	super ( namespace , namespace , null , false ) ; return
Distance : 9

137
Tree	super ( namespace , namespace , null , false ) ; Node
Code	super ( namespace , namespace , null , false ) ; Node
Distance : 9

138
Tree	super ( namespace , namespace , null , false ) ; Fraction
Code	super ( namespace , namespace , null , false ) ; Fraction
Distance : 9

139
Tree	super ( namespace , namespace , null , false ) ; checkNotNull
Code	super ( namespace , namespace , null , false ) ; checkNotNull
Distance : 9

140
Tree	super ( namespace , namespace , null , false ) ; TestUtils
Code	super ( namespace , namespace , null , false ) ; TestUtils
Distance : 9

141
Tree	super ( namespace , namespace , null , false ) ; ?
Code	super ( namespace , namespace , null , false ) ; ?
Distance : 9

142
Tree	super ( namespace , namespace , null , false ) ; STRING_CONSTANT
Code	super ( namespace , namespace , null , false ) ; STRING_CONSTANT
Distance : 9

143
Tree	super ( namespace , namespace , null , false ) ; createIllegalArgumentException
Code	super ( namespace , namespace , null , false ) ; createIllegalArgumentException
Distance : 9

144
Tree	super ( namespace , namespace , null , false ) ; root
Code	super ( namespace , namespace , null , false ) ; root
Distance : 9

145
Tree	super ( namespace , namespace , null , false ) ; x
Code	super ( namespace , namespace , null , false ) ; x
Distance : 9

146
Tree	super ( namespace , namespace , null , false ) ; NodeUtil
Code	super ( namespace , namespace , null , false ) ; NodeUtil
Distance : 9

147
Tree	super ( namespace , namespace , null , false ) ; Exception
Code	super ( namespace , namespace , null , false ) ; Exception
Distance : 9

148
Tree	super ( namespace , namespace , null , false ) ; assertTrue
Code	super ( namespace , namespace , null , false ) ; assertTrue
Distance : 9

149
Tree	super ( namespace , namespace , null , false ) ; verify
Code	super ( namespace , namespace , null , false ) ; verify
Distance : 9

150
Tree	super ( namespace , namespace , null , false ) ; externs
Code	super ( namespace , namespace , null , false ) ; externs
Distance : 9

151
Tree	super ( namespace , namespace , null , false ) ; notifyListeners
Code	super ( namespace , namespace , null , false ) ; notifyListeners
Distance : 9

152
Tree	super ( namespace , namespace , null , false ) ; checkArgument
Code	super ( namespace , namespace , null , false ) ; checkArgument
Distance : 9

153
Tree	super ( namespace , namespace , null , false ) ; field
Code	super ( namespace , namespace , null , false ) ; field
Distance : 9

154
Tree	super ( namespace , namespace , null , false ) ; t
Code	super ( namespace , namespace , null , false ) ; t
Distance : 9

155
Tree	super ( namespace , namespace , null , false ) ; name
Code	super ( namespace , namespace , null , false ) ; name
Distance : 9

156
Tree	super ( namespace , namespace , null , false ) ; reportCodeChange
Code	super ( namespace , namespace , null , false ) ; reportCodeChange
Distance : 9

157
Tree	super ( namespace , namespace , null , false ) ; FastMath
Code	super ( namespace , namespace , null , false ) ; FastMath
Distance : 9

158
Tree	super ( namespace , namespace , null , false ) ; expected
Code	super ( namespace , namespace , null , false ) ; expected
Distance : 9

159
Tree	super ( namespace , namespace , null , false ) ; IllegalArgumentException
Code	super ( namespace , namespace , null , false ) ; IllegalArgumentException
Distance : 9

160
Tree	super ( namespace , namespace , null , false ) ; LINE_JOINER
Code	super ( namespace , namespace , null , false ) ; LINE_JOINER
Distance : 9

161
Tree	super ( namespace , namespace , null , false ) ; Assert
Code	super ( namespace , namespace , null , false ) ; Assert
Distance : 9

162
Tree	super ( namespace , namespace , null , false ) ; v
Code	super ( namespace , namespace , null , false ) ; v
Distance : 9

163
Tree	super ( namespace , namespace , null , false ) ; List
Code	super ( namespace , namespace , null , false ) ; List
Distance : 9

164
Tree	super ( namespace , namespace , null , false ) ; &&
Code	super ( namespace , namespace , null , false ) ; &&
Distance : 9

165
Tree	super ( namespace , namespace , null , false ) ; Test
Code	super ( namespace , namespace , null , false ) ; Test
Distance : 9

166
Tree	super ( namespace , namespace , null , false ) ; assertThat
Code	super ( namespace , namespace , null , false ) ; assertThat
Distance : 9

167
Tree	super ( namespace , namespace , null , false ) ; invocation
Code	super ( namespace , namespace , null , false ) ; invocation
Distance : 9

168
Tree	super ( namespace , namespace , null , false ) ; double
Code	super ( namespace , namespace , null , false ) ; double
Distance : 9

169
Tree	super ( namespace , namespace , null , false ) ; false
Code	super ( namespace , namespace , null , false ) ; false
Distance : 9

170
Tree	super ( namespace , namespace , null , false ) ; @
Code	super ( namespace , namespace , null , false ) ; @
Distance : 9

171
Tree	super ( namespace , namespace , null , false ) ; lines
Code	super ( namespace , namespace , null , false ) ; lines
Distance : 9

172
Tree	super ( namespace , namespace , null , false ) ; test
Code	super ( namespace , namespace , null , false ) ; test
Distance : 9

173
Tree	super ( namespace , namespace , null , false ) ; []
Code	super ( namespace , namespace , null , false ) ; []
Distance : 9

174
Tree	super ( namespace , namespace , null , false ) ; assertEquals
Code	super ( namespace , namespace , null , false ) ; assertEquals
Distance : 9

175
Tree	super ( namespace , namespace , null , false ) ; Class
Code	super ( namespace , namespace , null , false ) ; Class
Distance : 9

176
Tree	super ( namespace , namespace , null , false ) ; source
Code	super ( namespace , namespace , null , false ) ; source
Distance : 9

177
Tree	super ( namespace , namespace , null , false ) ; options
Code	super ( namespace , namespace , null , false ) ; options
Distance : 9

178
Tree	super ( namespace , namespace , null , false ) ; Math
Code	super ( namespace , namespace , null , false ) ; Math
Distance : 9

179
Tree	super ( namespace , namespace , null , false ) ; nullNotPermitted
Code	super ( namespace , namespace , null , false ) ; nullNotPermitted
Distance : 9

180
Tree	super ( namespace , namespace , null , false ) ; str
Code	super ( namespace , namespace , null , false ) ; str
Distance : 9

181
Tree	super ( namespace , namespace , null , false ) ; parent
Code	super ( namespace , namespace , null , false ) ; parent
Distance : 9

182
Tree	super ( namespace , namespace , null , false ) ; result
Code	super ( namespace , namespace , null , false ) ; result
Distance : 9

183
Tree	super ( namespace , namespace , null , false ) ; testSame
Code	super ( namespace , namespace , null , false ) ; testSame
Distance : 9

184
Tree	super ( namespace , namespace , null , false ) ; fireChangeEvent
Code	super ( namespace , namespace , null , false ) ; fireChangeEvent
Distance : 9

185
Tree	super ( namespace , namespace , null , false ) ; ArrayList
Code	super ( namespace , namespace , null , false ) ; ArrayList
Distance : 9

186
Tree	super ( namespace , namespace , null , false ) ; getInstance
Code	super ( namespace , namespace , null , false ) ; getInstance
Distance : 9

187
Tree	super ( namespace , namespace , null , false ) ; serialised
Code	super ( namespace , namespace , null , false ) ; serialised
Distance : 9

188
Tree	super ( namespace , namespace , null , false ) ; join
Code	super ( namespace , namespace , null , false ) ; join
Distance : 9

189
Tree	super ( namespace , namespace , null , false ) ; boolean
Code	super ( namespace , namespace , null , false ) ; boolean
Distance : 9

190
Tree	super ( namespace , namespace , null , false ) ; type
Code	super ( namespace , namespace , null , false ) ; type
Distance : 9

191
Tree	super ( namespace , namespace , null , false ) ; *
Code	super ( namespace , namespace , null , false ) ; *
Distance : 9

192
Tree	super ( namespace , namespace , null , false ) ; :
Code	super ( namespace , namespace , null , false ) ; :
Distance : 9

193
Tree	super ( namespace , namespace , null , false ) ; fail
Code	super ( namespace , namespace , null , false ) ; fail
Distance : 9

194
Tree	super ( namespace , namespace , null , false ) ; Args
Code	super ( namespace , namespace , null , false ) ; Args
Distance : 9

195
Tree	super ( namespace , namespace , null , false ) ; m
Code	super ( namespace , namespace , null , false ) ; m
Distance : 9

196
Tree	super ( namespace , namespace , null , false ) ; try
Code	super ( namespace , namespace , null , false ) ; try
Distance : 9

197
Tree	super ( namespace , namespace , null , false ) ; paint
Code	super ( namespace , namespace , null , false ) ; paint
Distance : 9

198
Tree	super ( namespace , namespace , null , false ) ; long
Code	super ( namespace , namespace , null , false ) ; long
Distance : 9

199
Tree	super ( namespace , namespace , null , false ) ; !
Code	super ( namespace , namespace , null , false ) ; !
Distance : 9

========================================================================


========================================================================
Example Number: 15
Parent Code is: 
int indexOfDot = namespace . indexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Child code is: 
int indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/92/parent/src_com_google_javascript_jscomp_ProcessClosurePrimitives.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	super ( namespace , namespace , null , false ) ;
Code	super ( namespace , namespace , null , false ) ;
Distance : 8

1
Tree	super ( namespace , namespace , null , false ) ; ;
Code	super ( namespace , namespace , null , false ) ; ;
Distance : 9

2
Tree	super ( namespace , namespace , null , false ) ; <blank>
Code	super ( namespace , namespace , null , false ) ; <blank>
Distance : 9

3
Tree	super ( namespace , namespace , null , false ) ; int
Code	super ( namespace , namespace , null , false ) ; int
Distance : 9

4
Tree	super ( namespace , namespace , null , false ) ; <s>
Code	super ( namespace , namespace , null , false ) ; <s>
Distance : 9

5
Tree	super ( namespace , namespace , null , false ) ; !=
Code	super ( namespace , namespace , null , false ) ; !=
Distance : 9

6
Tree	super ( namespace , namespace , null , false ) ; static
Code	super ( namespace , namespace , null , false ) ; static
Distance : 9

7
Tree	super ( namespace , namespace , null , false ) ; setAcceptedLanguage
Code	super ( namespace , namespace , null , false ) ; setAcceptedLanguage
Distance : 9

8
Tree	super ( namespace , namespace , null , false ) ; abs
Code	super ( namespace , namespace , null , false ) ; abs
Distance : 9

9
Tree	super ( namespace , namespace , null , false ) ; <>
Code	super ( namespace , namespace , null , false ) ; <>
Distance : 9

10
Tree	super ( namespace , namespace , null , false ) ; (
Code	super ( namespace , namespace , null , false ) ; (
Distance : 9

11
Tree	super ( namespace , namespace , null , false ) ; ==
Code	super ( namespace , namespace , null , false ) ; ==
Distance : 9

12
Tree	super ( namespace , namespace , null , false ) ; node
Code	super ( namespace , namespace , null , false ) ; node
Distance : 9

13
Tree	super ( namespace , namespace , null , false ) ; index
Code	super ( namespace , namespace , null , false ) ; index
Distance : 9

14
Tree	super ( namespace , namespace , null , false ) ; )
Code	super ( namespace , namespace , null , false ) ; )
Distance : 9

15
Tree	super ( namespace , namespace , null , false ) ; invocations
Code	super ( namespace , namespace , null , false ) ; invocations
Distance : 9

16
Tree	super ( namespace , namespace , null , false ) ; equals
Code	super ( namespace , namespace , null , false ) ; equals
Distance : 9

17
Tree	super ( namespace , namespace , null , false ) ; for
Code	super ( namespace , namespace , null , false ) ; for
Distance : 9

18
Tree	super ( namespace , namespace , null , false ) ; Invocation
Code	super ( namespace , namespace , null , false ) ; Invocation
Distance : 9

19
Tree	super ( namespace , namespace , null , false ) ; js
Code	super ( namespace , namespace , null , false ) ; js
Distance : 9

20
Tree	super ( namespace , namespace , null , false ) ; TestUtilities
Code	super ( namespace , namespace , null , false ) ; TestUtilities
Distance : 9

21
Tree	super ( namespace , namespace , null , false ) ; StrBuilder
Code	super ( namespace , namespace , null , false ) ; StrBuilder
Distance : 9

22
Tree	super ( namespace , namespace , null , false ) ; setUp
Code	super ( namespace , namespace , null , false ) ; setUp
Distance : 9

23
Tree	super ( namespace , namespace , null , false ) ; super
Code	super ( namespace , namespace , null , false ) ; super
Distance : 9

24
Tree	super ( namespace , namespace , null , false ) ; i
Code	super ( namespace , namespace , null , false ) ; i
Distance : 9

25
Tree	super ( namespace , namespace , null , false ) ; int
Code	super ( namespace , namespace , null , false ) ; int
Distance : 9

26
Tree	super ( namespace , namespace , null , false ) ; checkState
Code	super ( namespace , namespace , null , false ) ; checkState
Distance : 9

27
Tree	super ( namespace , namespace , null , false ) ; values
Code	super ( namespace , namespace , null , false ) ; values
Distance : 9

28
Tree	super ( namespace , namespace , null , false ) ; protected
Code	super ( namespace , namespace , null , false ) ; protected
Distance : 9

29
Tree	super ( namespace , namespace , null , false ) ; d
Code	super ( namespace , namespace , null , false ) ; d
Distance : 9

30
Tree	super ( namespace , namespace , null , false ) ; getParent
Code	super ( namespace , namespace , null , false ) ; getParent
Distance : 9

31
Tree	super ( namespace , namespace , null , false ) ; .
Code	super ( namespace , namespace , null , false ) ; .
Distance : 9

32
Tree	super ( namespace , namespace , null , false ) ; ex
Code	super ( namespace , namespace , null , false ) ; ex
Distance : 9

33
Tree	super ( namespace , namespace , null , false ) ; p
Code	super ( namespace , namespace , null , false ) ; p
Distance : 9

34
Tree	super ( namespace , namespace , null , false ) ; toString
Code	super ( namespace , namespace , null , false ) ; toString
Distance : 9

35
Tree	super ( namespace , namespace , null , false ) ; c
Code	super ( namespace , namespace , null , false ) ; c
Distance : 9

36
Tree	super ( namespace , namespace , null , false ) ; T
Code	super ( namespace , namespace , null , false ) ; T
Distance : 9

37
Tree	super ( namespace , namespace , null , false ) ; /
Code	super ( namespace , namespace , null , false ) ; /
Distance : 9

38
Tree	super ( namespace , namespace , null , false ) ; value
Code	super ( namespace , namespace , null , false ) ; value
Distance : 9

39
Tree	super ( namespace , namespace , null , false ) ; matcher
Code	super ( namespace , namespace , null , false ) ; matcher
Distance : 9

40
Tree	super ( namespace , namespace , null , false ) ; reportMatcher
Code	super ( namespace , namespace , null , false ) ; reportMatcher
Distance : 9

41
Tree	super ( namespace , namespace , null , false ) ; MathRuntimeException
Code	super ( namespace , namespace , null , false ) ; MathRuntimeException
Distance : 9

42
Tree	super ( namespace , namespace , null , false ) ; {}
Code	super ( namespace , namespace , null , false ) ; {}
Distance : 9

43
Tree	super ( namespace , namespace , null , false ) ; true
Code	super ( namespace , namespace , null , false ) ; true
Distance : 9

44
Tree	super ( namespace , namespace , null , false ) ; mode
Code	super ( namespace , namespace , null , false ) ; mode
Distance : 9

45
Tree	super ( namespace , namespace , null , false ) ; -
Code	super ( namespace , namespace , null , false ) ; -
Distance : 9

46
Tree	super ( namespace , namespace , null , false ) ; ,
Code	super ( namespace , namespace , null , false ) ; ,
Distance : 9

47
Tree	super ( namespace , namespace , null , false ) ; Preconditions
Code	super ( namespace , namespace , null , false ) ; Preconditions
Distance : 9

48
Tree	super ( namespace , namespace , null , false ) ; ]
Code	super ( namespace , namespace , null , false ) ; ]
Distance : 9

49
Tree	super ( namespace , namespace , null , false ) ; ParamChecks
Code	super ( namespace , namespace , null , false ) ; ParamChecks
Distance : 9

50
Tree	super ( namespace , namespace , null , false ) ; Object
Code	super ( namespace , namespace , null , false ) ; Object
Distance : 9

51
Tree	super ( namespace , namespace , null , false ) ; mock
Code	super ( namespace , namespace , null , false ) ; mock
Distance : 9

52
Tree	super ( namespace , namespace , null , false ) ; Override
Code	super ( namespace , namespace , null , false ) ; Override
Distance : 9

53
Tree	super ( namespace , namespace , null , false ) ; f
Code	super ( namespace , namespace , null , false ) ; f
Distance : 9

54
Tree	super ( namespace , namespace , null , false ) ; getMessage
Code	super ( namespace , namespace , null , false ) ; getMessage
Distance : 9

55
Tree	super ( namespace , namespace , null , false ) ; class
Code	super ( namespace , namespace , null , false ) ; class
Distance : 9

56
Tree	super ( namespace , namespace , null , false ) ; else
Code	super ( namespace , namespace , null , false ) ; else
Distance : 9

57
Tree	super ( namespace , namespace , null , false ) ; instant
Code	super ( namespace , namespace , null , false ) ; instant
Distance : 9

58
Tree	super ( namespace , namespace , null , false ) ; wanted
Code	super ( namespace , namespace , null , false ) ; wanted
Distance : 9

59
Tree	super ( namespace , namespace , null , false ) ; data
Code	super ( namespace , namespace , null , false ) ; data
Distance : 9

60
Tree	super ( namespace , namespace , null , false ) ; NodeTraversal
Code	super ( namespace , namespace , null , false ) ; NodeTraversal
Distance : 9

61
Tree	super ( namespace , namespace , null , false ) ; [
Code	super ( namespace , namespace , null , false ) ; [
Distance : 9

62
Tree	super ( namespace , namespace , null , false ) ; stream
Code	super ( namespace , namespace , null , false ) ; stream
Distance : 9

63
Tree	super ( namespace , namespace , null , false ) ; add
Code	super ( namespace , namespace , null , false ) ; add
Distance : 9

64
Tree	super ( namespace , namespace , null , false ) ; throw
Code	super ( namespace , namespace , null , false ) ; throw
Distance : 9

65
Tree	super ( namespace , CHAR_CONS , continue; , true ) ;
Code	super ( namespace , CHAR_CONS , continue; , true ) ;
Distance : 9

66
Tree	super ( CHAR_CONS , namespace , continue; , true ) ;
Code	super ( CHAR_CONS , namespace , continue; , true ) ;
Distance : 8

67
Tree	super ( namespace , CHAR_CONS , return; , false ) ;
Code	super ( namespace , CHAR_CONS , return; , false ) ;
Distance : 9

68
Tree	super ( namespace , CHAR_CONS , break; , false ) ;
Code	super ( namespace , CHAR_CONS , break; , false ) ;
Distance : 9

69
Tree	super ( namespace , namespace , default: , true ) ;
Code	super ( namespace , namespace , default: , true ) ;
Distance : 8

70
Tree	super ( namespace , namespace , return; , false ) ;
Code	super ( namespace , namespace , return; , false ) ;
Distance : 8

71
Tree	super ( indexOfDot , namespace , break; , false ) ;
Code	super ( indexOfDot , namespace , break; , false ) ;
Distance : 7

72
Tree	super ( namespace , CHAR_CONS , continue; , false ) ;
Code	super ( namespace , CHAR_CONS , continue; , false ) ;
Distance : 9

73
Tree	super ( namespace , CHAR_CONS , super(); , true ) ;
Code	super ( namespace , CHAR_CONS , super(); , true ) ;
Distance : 9

74
Tree	super ( indexOfDot , namespace , continue; , false ) ;
Code	super ( indexOfDot , namespace , continue; , false ) ;
Distance : 7

75
Tree	super ( indexOfDot , namespace , super(); , true ) ;
Code	super ( indexOfDot , namespace , super(); , true ) ;
Distance : 7

76
Tree	super ( namespace , namespace , default: , false ) ;
Code	super ( namespace , namespace , default: , false ) ;
Distance : 8

77
Tree	super ( namespace , CHAR_CONS , super(); , false ) ;
Code	super ( namespace , CHAR_CONS , super(); , false ) ;
Distance : 9

78
Tree	super ( namespace , namespace , return; , true ) ;
Code	super ( namespace , namespace , return; , true ) ;
Distance : 8

79
Tree	super ( namespace , namespace , break; , true ) ;
Code	super ( namespace , namespace , break; , true ) ;
Distance : 8

80
Tree	super ( CHAR_CONS , namespace , super(); , false ) ;
Code	super ( CHAR_CONS , namespace , super(); , false ) ;
Distance : 8

81
Tree	super ( namespace , namespace , continue; , true ) ;
Code	super ( namespace , namespace , continue; , true ) ;
Distance : 8

82
Tree	super ( namespace , namespace , return; , false ) ;
Code	super ( namespace , namespace , return; , false ) ;
Distance : 8

83
Tree	super ( namespace , namespace , break; , false ) ;
Code	super ( namespace , namespace , break; , false ) ;
Distance : 8

84
Tree	super ( namespace , namespace , continue; , false ) ;
Code	super ( namespace , namespace , continue; , false ) ;
Distance : 8

85
Tree	super ( namespace , namespace , super(); , true ) ;
Code	super ( namespace , namespace , super(); , true ) ;
Distance : 8

86
Tree	super ( namespace , namespace , super(); , false ) ;
Code	super ( namespace , namespace , super(); , false ) ;
Distance : 8

87
Tree	super ( CHAR_CONS , CHAR_CONS , null , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , null , true ) ;
Distance : 9

88
Tree	super ( CHAR_CONS , CHAR_CONS , null , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , null , false ) ;
Distance : 9

89
Tree	super ( namespace , CHAR_CONS , null , true ) ;
Code	super ( namespace , CHAR_CONS , null , true ) ;
Distance : 9

90
Tree	super ( CHAR_CONS , namespace , null , true ) ;
Code	super ( CHAR_CONS , namespace , null , true ) ;
Distance : 8

91
Tree	super ( namespace , CHAR_CONS , null , false ) ;
Code	super ( namespace , CHAR_CONS , null , false ) ;
Distance : 9

92
Tree	super ( CHAR_CONS , namespace , null , false ) ;
Code	super ( CHAR_CONS , namespace , null , false ) ;
Distance : 8

93
Tree	super ( namespace , namespace , null , false ) ; void
Code	super ( namespace , namespace , null , false ) ; void
Distance : 9

94
Tree	super ( CHAR_CONS , namespace , break; , true ) ;
Code	super ( CHAR_CONS , namespace , break; , true ) ;
Distance : 8

95
Tree	super ( CHAR_CONS , namespace , return; , true ) ;
Code	super ( CHAR_CONS , namespace , return; , true ) ;
Distance : 8

96
Tree	super ( namespace , namespace , null , true ) ;
Code	super ( namespace , namespace , null , true ) ;
Distance : 8

97
Tree	super ( namespace , CHAR_CONS , break; , true ) ;
Code	super ( namespace , CHAR_CONS , break; , true ) ;
Distance : 9

98
Tree	super ( CHAR_CONS , CHAR_CONS , super(); , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , super(); , false ) ;
Distance : 9

99
Tree	super ( namespace , namespace , null , false ) ; catch
Code	super ( namespace , namespace , null , false ) ; catch
Distance : 9

100
Tree	super ( namespace , namespace , null , false ) ; e
Code	super ( namespace , namespace , null , false ) ; e
Distance : 9

101
Tree	super ( namespace , namespace , null , false ) ; n
Code	super ( namespace , namespace , null , false ) ; n
Distance : 9

102
Tree	super ( namespace , namespace , null , false ) ; out
Code	super ( namespace , namespace , null , false ) ; out
Distance : 9

103
Tree	super ( namespace , namespace , null , false ) ; compiler
Code	super ( namespace , namespace , null , false ) ; compiler
Distance : 9

104
Tree	super ( namespace , namespace , null , false ) ; if
Code	super ( namespace , namespace , null , false ) ; if
Distance : 9

105
Tree	super ( namespace , namespace , null , false ) ; String
Code	super ( namespace , namespace , null , false ) ; String
Distance : 9

106
Tree	super ( namespace , namespace , null , false ) ; final
Code	super ( namespace , namespace , null , false ) ; final
Distance : 9

107
Tree	super ( namespace , namespace , null , false ) ; public
Code	super ( namespace , namespace , null , false ) ; public
Distance : 9

108
Tree	super ( namespace , namespace , null , false ) ; >
Code	super ( namespace , namespace , null , false ) ; >
Distance : 9

109
Tree	super ( namespace , namespace , null , false ) ; null
Code	super ( namespace , namespace , null , false ) ; null
Distance : 9

110
Tree	super ( namespace , namespace , null , false ) ; +
Code	super ( namespace , namespace , null , false ) ; +
Distance : 9

111
Tree	super ( namespace , namespace , null , false ) ; <
Code	super ( namespace , namespace , null , false ) ; <
Distance : 9

112
Tree	super ( namespace , namespace , null , false ) ; array
Code	super ( namespace , namespace , null , false ) ; array
Distance : 9

113
Tree	super ( namespace , namespace , null , false ) ; this
Code	super ( namespace , namespace , null , false ) ; this
Distance : 9

114
Tree	super ( CHAR_CONS , CHAR_CONS , default: , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , default: , false ) ;
Distance : 9

115
Tree	super ( namespace , CHAR_CONS , return; , true ) ;
Code	super ( namespace , CHAR_CONS , return; , true ) ;
Distance : 9

116
Tree	super ( indexOfDot , CHAR_CONS , default: , true ) ;
Code	super ( indexOfDot , CHAR_CONS , default: , true ) ;
Distance : 8

117
Tree	super ( CHAR_CONS , namespace , default: , false ) ;
Code	super ( CHAR_CONS , namespace , default: , false ) ;
Distance : 8

118
Tree	super ( namespace , CHAR_CONS , default: , false ) ;
Code	super ( namespace , CHAR_CONS , default: , false ) ;
Distance : 9

119
Tree	super ( CHAR_CONS , CHAR_CONS , super(); , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , super(); , true ) ;
Distance : 9

120
Tree	super ( CHAR_CONS , namespace , default: , true ) ;
Code	super ( CHAR_CONS , namespace , default: , true ) ;
Distance : 8

121
Tree	super ( CHAR_CONS , CHAR_CONS , continue; , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , continue; , false ) ;
Distance : 9

122
Tree	super ( CHAR_CONS , CHAR_CONS , return; , false ) ;
Code	super ( CHAR_CONS , CHAR_CONS , return; , false ) ;
Distance : 9

123
Tree	super ( namespace , CHAR_CONS , default: , true ) ;
Code	super ( namespace , CHAR_CONS , default: , true ) ;
Distance : 9

124
Tree	super ( CHAR_CONS , CHAR_CONS , continue; , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , continue; , true ) ;
Distance : 9

125
Tree	super ( CHAR_CONS , CHAR_CONS , break; , true ) ;
Code	super ( CHAR_CONS , CHAR_CONS , break; , true ) ;
Distance : 9

126
Tree	super ( indexOfDot , CHAR_CONS , return; , true ) ;
Code	super ( indexOfDot , CHAR_CONS , return; , true ) ;
Distance : 8

127
Tree	super ( namespace , CHAR_CONS , break; , false ) ;
Code	super ( namespace , CHAR_CONS , break; , false ) ;
Distance : 9

128
Tree	super ( namespace , namespace , null , false ) ; Integer
Code	super ( namespace , namespace , null , false ) ; Integer
Distance : 9

129
Tree	super ( namespace , namespace , null , false ) ; {
Code	super ( namespace , namespace , null , false ) ; {
Distance : 9

130
Tree	super ( namespace , namespace , null , false ) ; =
Code	super ( namespace , namespace , null , false ) ; =
Distance : 9

131
Tree	super ( namespace , namespace , null , false ) ; }
Code	super ( namespace , namespace , null , false ) ; }
Distance : 9

132
Tree	super ( namespace , namespace , null , false ) ; ()
Code	super ( namespace , namespace , null , false ) ; ()
Distance : 9

133
Tree	super ( namespace , namespace , null , false ) ; new
Code	super ( namespace , namespace , null , false ) ; new
Distance : 9

134
Tree	super ( namespace , namespace , null , false ) ; length
Code	super ( namespace , namespace , null , false ) ; length
Distance : 9

135
Tree	super ( namespace , namespace , null , false ) ; NUMBER_CONSTANT
Code	super ( namespace , namespace , null , false ) ; NUMBER_CONSTANT
Distance : 9

136
Tree	super ( namespace , namespace , null , false ) ; return
Code	super ( namespace , namespace , null , false ) ; return
Distance : 9

137
Tree	super ( namespace , namespace , null , false ) ; Node
Code	super ( namespace , namespace , null , false ) ; Node
Distance : 9

138
Tree	super ( namespace , namespace , null , false ) ; Fraction
Code	super ( namespace , namespace , null , false ) ; Fraction
Distance : 9

139
Tree	super ( namespace , namespace , null , false ) ; checkNotNull
Code	super ( namespace , namespace , null , false ) ; checkNotNull
Distance : 9

140
Tree	super ( namespace , namespace , null , false ) ; TestUtils
Code	super ( namespace , namespace , null , false ) ; TestUtils
Distance : 9

141
Tree	super ( namespace , namespace , null , false ) ; ?
Code	super ( namespace , namespace , null , false ) ; ?
Distance : 9

142
Tree	super ( namespace , namespace , null , false ) ; STRING_CONSTANT
Code	super ( namespace , namespace , null , false ) ; STRING_CONSTANT
Distance : 9

143
Tree	super ( namespace , namespace , null , false ) ; createIllegalArgumentException
Code	super ( namespace , namespace , null , false ) ; createIllegalArgumentException
Distance : 9

144
Tree	super ( namespace , namespace , null , false ) ; root
Code	super ( namespace , namespace , null , false ) ; root
Distance : 9

145
Tree	super ( namespace , namespace , null , false ) ; x
Code	super ( namespace , namespace , null , false ) ; x
Distance : 9

146
Tree	super ( namespace , namespace , null , false ) ; NodeUtil
Code	super ( namespace , namespace , null , false ) ; NodeUtil
Distance : 9

147
Tree	super ( namespace , namespace , null , false ) ; Exception
Code	super ( namespace , namespace , null , false ) ; Exception
Distance : 9

148
Tree	super ( namespace , namespace , null , false ) ; assertTrue
Code	super ( namespace , namespace , null , false ) ; assertTrue
Distance : 9

149
Tree	super ( namespace , namespace , null , false ) ; verify
Code	super ( namespace , namespace , null , false ) ; verify
Distance : 9

150
Tree	super ( namespace , namespace , null , false ) ; externs
Code	super ( namespace , namespace , null , false ) ; externs
Distance : 9

151
Tree	super ( namespace , namespace , null , false ) ; notifyListeners
Code	super ( namespace , namespace , null , false ) ; notifyListeners
Distance : 9

152
Tree	super ( namespace , namespace , null , false ) ; checkArgument
Code	super ( namespace , namespace , null , false ) ; checkArgument
Distance : 9

153
Tree	super ( namespace , namespace , null , false ) ; field
Code	super ( namespace , namespace , null , false ) ; field
Distance : 9

154
Tree	super ( namespace , namespace , null , false ) ; t
Code	super ( namespace , namespace , null , false ) ; t
Distance : 9

155
Tree	super ( namespace , namespace , null , false ) ; name
Code	super ( namespace , namespace , null , false ) ; name
Distance : 9

156
Tree	super ( namespace , namespace , null , false ) ; reportCodeChange
Code	super ( namespace , namespace , null , false ) ; reportCodeChange
Distance : 9

157
Tree	super ( namespace , namespace , null , false ) ; FastMath
Code	super ( namespace , namespace , null , false ) ; FastMath
Distance : 9

158
Tree	super ( namespace , namespace , null , false ) ; expected
Code	super ( namespace , namespace , null , false ) ; expected
Distance : 9

159
Tree	super ( namespace , namespace , null , false ) ; IllegalArgumentException
Code	super ( namespace , namespace , null , false ) ; IllegalArgumentException
Distance : 9

160
Tree	super ( namespace , namespace , null , false ) ; LINE_JOINER
Code	super ( namespace , namespace , null , false ) ; LINE_JOINER
Distance : 9

161
Tree	super ( namespace , namespace , null , false ) ; Assert
Code	super ( namespace , namespace , null , false ) ; Assert
Distance : 9

162
Tree	super ( namespace , namespace , null , false ) ; v
Code	super ( namespace , namespace , null , false ) ; v
Distance : 9

163
Tree	super ( namespace , namespace , null , false ) ; List
Code	super ( namespace , namespace , null , false ) ; List
Distance : 9

164
Tree	super ( namespace , namespace , null , false ) ; &&
Code	super ( namespace , namespace , null , false ) ; &&
Distance : 9

165
Tree	super ( namespace , namespace , null , false ) ; Test
Code	super ( namespace , namespace , null , false ) ; Test
Distance : 9

166
Tree	super ( namespace , namespace , null , false ) ; assertThat
Code	super ( namespace , namespace , null , false ) ; assertThat
Distance : 9

167
Tree	super ( namespace , namespace , null , false ) ; invocation
Code	super ( namespace , namespace , null , false ) ; invocation
Distance : 9

168
Tree	super ( namespace , namespace , null , false ) ; double
Code	super ( namespace , namespace , null , false ) ; double
Distance : 9

169
Tree	super ( namespace , namespace , null , false ) ; false
Code	super ( namespace , namespace , null , false ) ; false
Distance : 9

170
Tree	super ( namespace , namespace , null , false ) ; @
Code	super ( namespace , namespace , null , false ) ; @
Distance : 9

171
Tree	super ( namespace , namespace , null , false ) ; lines
Code	super ( namespace , namespace , null , false ) ; lines
Distance : 9

172
Tree	super ( namespace , namespace , null , false ) ; test
Code	super ( namespace , namespace , null , false ) ; test
Distance : 9

173
Tree	super ( namespace , namespace , null , false ) ; []
Code	super ( namespace , namespace , null , false ) ; []
Distance : 9

174
Tree	super ( namespace , namespace , null , false ) ; assertEquals
Code	super ( namespace , namespace , null , false ) ; assertEquals
Distance : 9

175
Tree	super ( namespace , namespace , null , false ) ; Class
Code	super ( namespace , namespace , null , false ) ; Class
Distance : 9

176
Tree	super ( namespace , namespace , null , false ) ; source
Code	super ( namespace , namespace , null , false ) ; source
Distance : 9

177
Tree	super ( namespace , namespace , null , false ) ; options
Code	super ( namespace , namespace , null , false ) ; options
Distance : 9

178
Tree	super ( namespace , namespace , null , false ) ; Math
Code	super ( namespace , namespace , null , false ) ; Math
Distance : 9

179
Tree	super ( namespace , namespace , null , false ) ; nullNotPermitted
Code	super ( namespace , namespace , null , false ) ; nullNotPermitted
Distance : 9

180
Tree	super ( namespace , namespace , null , false ) ; str
Code	super ( namespace , namespace , null , false ) ; str
Distance : 9

181
Tree	super ( namespace , namespace , null , false ) ; parent
Code	super ( namespace , namespace , null , false ) ; parent
Distance : 9

182
Tree	super ( namespace , namespace , null , false ) ; result
Code	super ( namespace , namespace , null , false ) ; result
Distance : 9

183
Tree	super ( namespace , namespace , null , false ) ; testSame
Code	super ( namespace , namespace , null , false ) ; testSame
Distance : 9

184
Tree	super ( namespace , namespace , null , false ) ; fireChangeEvent
Code	super ( namespace , namespace , null , false ) ; fireChangeEvent
Distance : 9

185
Tree	super ( namespace , namespace , null , false ) ; ArrayList
Code	super ( namespace , namespace , null , false ) ; ArrayList
Distance : 9

186
Tree	super ( namespace , namespace , null , false ) ; getInstance
Code	super ( namespace , namespace , null , false ) ; getInstance
Distance : 9

187
Tree	super ( namespace , namespace , null , false ) ; serialised
Code	super ( namespace , namespace , null , false ) ; serialised
Distance : 9

188
Tree	super ( namespace , namespace , null , false ) ; join
Code	super ( namespace , namespace , null , false ) ; join
Distance : 9

189
Tree	super ( namespace , namespace , null , false ) ; boolean
Code	super ( namespace , namespace , null , false ) ; boolean
Distance : 9

190
Tree	super ( namespace , namespace , null , false ) ; type
Code	super ( namespace , namespace , null , false ) ; type
Distance : 9

191
Tree	super ( namespace , namespace , null , false ) ; *
Code	super ( namespace , namespace , null , false ) ; *
Distance : 9

192
Tree	super ( namespace , namespace , null , false ) ; :
Code	super ( namespace , namespace , null , false ) ; :
Distance : 9

193
Tree	super ( namespace , namespace , null , false ) ; fail
Code	super ( namespace , namespace , null , false ) ; fail
Distance : 9

194
Tree	super ( namespace , namespace , null , false ) ; Args
Code	super ( namespace , namespace , null , false ) ; Args
Distance : 9

195
Tree	super ( namespace , namespace , null , false ) ; m
Code	super ( namespace , namespace , null , false ) ; m
Distance : 9

196
Tree	super ( namespace , namespace , null , false ) ; try
Code	super ( namespace , namespace , null , false ) ; try
Distance : 9

197
Tree	super ( namespace , namespace , null , false ) ; paint
Code	super ( namespace , namespace , null , false ) ; paint
Distance : 9

198
Tree	super ( namespace , namespace , null , false ) ; long
Code	super ( namespace , namespace , null , false ) ; long
Distance : 9

199
Tree	super ( namespace , namespace , null , false ) ; !
Code	super ( namespace , namespace , null , false ) ; !
Distance : 9

========================================================================


========================================================================
Example Number: 16
Parent Code is: 
! type . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
-------------------------------------------------------------------------------
Child code is: 
! type . restrictByNotNullOrUndefined () . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (32 (800{val=type}) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/90/parent/src_com_google_javascript_jscomp_FunctionTypeBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	!
Code	!
Distance : 14

1
Tree	removeGlobals
Code	removeGlobals
Distance : 15

2
Tree	StackTraceElement
Code	StackTraceElement
Distance : 15

3
Tree	NonLinearConjugateGradientOptimizer
Code	NonLinearConjugateGradientOptimizer
Distance : 15

4
Tree	KMeansPlusPlusClusterer
Code	KMeansPlusPlusClusterer
Distance : 15

5
Tree	UnusedStubbings
Code	UnusedStubbings
Distance : 15

6
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 15

7
Tree	crossP
Code	crossP
Distance : 15

8
Tree	checkState
Code	checkState
Distance : 15

9
Tree	newDeclaration
Code	newDeclaration
Distance : 15

10
Tree	recordImplicitInterfaceUses
Code	recordImplicitInterfaceUses
Distance : 15

11
Tree	targetType
Code	targetType
Distance : 15

12
Tree	CombinedDomainCategoryPlot
Code	CombinedDomainCategoryPlot
Distance : 15

13
Tree	EnumSet
Code	EnumSet
Distance : 15

14
Tree	boolean
Code	boolean
Distance : 15

15
Tree	ObjectType
Code	ObjectType
Distance : 15

16
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 15

17
Tree	isArrow
Code	isArrow
Distance : 15

18
Tree	isSubtypeWithoutStructuralTyping
Code	isSubtypeWithoutStructuralTyping
Distance : 15

19
Tree	}
Code	}
Distance : 15

20
Tree	NodeUtil
Code	NodeUtil
Distance : 15

21
Tree	HasStackTrace
Code	HasStackTrace
Distance : 15

22
Tree	aliasVarNodeRhs
Code	aliasVarNodeRhs
Distance : 15

23
Tree	VectorRenderer
Code	VectorRenderer
Distance : 15

24
Tree	Config
Code	Config
Distance : 15

25
Tree	creator
Code	creator
Distance : 15

26
Tree	hasChildren
Code	hasChildren
Distance : 15

27
Tree	t
Code	t
Distance : 15

28
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 15

29
Tree	isUnflowable
Code	isUnflowable
Distance : 15

30
Tree	testEs6
Code	testEs6
Distance : 15

31
Tree	JSDocInfo
Code	JSDocInfo
Distance : 15

32
Tree	BetaDistribution
Code	BetaDistribution
Distance : 15

33
Tree	MultivariateSummaryStatistics
Code	MultivariateSummaryStatistics
Distance : 15

34
Tree	modulePath
Code	modulePath
Distance : 15

35
Tree	fnNode
Code	fnNode
Distance : 15

36
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 15

37
Tree	objType
Code	objType
Distance : 15

38
Tree	resultPair
Code	resultPair
Distance : 15

39
Tree	jsdoc
Code	jsdoc
Distance : 15

40
Tree	assertChanges
Code	assertChanges
Distance : 15

41
Tree	case
Code	case
Distance : 15

42
Tree	ParseBucket
Code	ParseBucket
Distance : 15

43
Tree	NaN
Code	NaN
Distance : 15

44
Tree	n
Code	n
Distance : 15

45
Tree	steps
Code	steps
Distance : 15

46
Tree	InvocationNotifierHandler
Code	InvocationNotifierHandler
Distance : 15

47
Tree	RunnerImpl
Code	RunnerImpl
Distance : 15

48
Tree	Field
Code	Field
Distance : 15

49
Tree	checkNotNull
Code	checkNotNull
Distance : 15

50
Tree	File
Code	File
Distance : 15

51
Tree	maybeTemporarilyLiveNodes
Code	maybeTemporarilyLiveNodes
Distance : 15

52
Tree	classProvider
Code	classProvider
Distance : 15

53
Tree	Es6SyntacticScopeCreator
Code	Es6SyntacticScopeCreator
Distance : 15

54
Tree	validityCheck
Code	validityCheck
Distance : 15

55
Tree	nameNode
Code	nameNode
Distance : 15

56
Tree	flowScope
Code	flowScope
Distance : 15

57
Tree	withType
Code	withType
Distance : 15

58
Tree	qnameNode
Code	qnameNode
Distance : 15

59
Tree	Configuration
Code	Configuration
Distance : 15

60
Tree	InvocationContainer
Code	InvocationContainer
Distance : 15

61
Tree	RawNominalType
Code	RawNominalType
Distance : 15

62
Tree	DefaultStatisticalCategoryDataset
Code	DefaultStatisticalCategoryDataset
Distance : 15

63
Tree	toolTipTagFragmentGenerator
Code	toolTipTagFragmentGenerator
Distance : 15

64
Tree	nextAction
Code	nextAction
Distance : 15

65
Tree	hasThis
Code	hasThis
Distance : 15

66
Tree	Range
Code	Range
Distance : 15

67
Tree	getDeclaredVar
Code	getDeclaredVar
Distance : 15

68
Tree	caseType
Code	caseType
Distance : 15

69
Tree	typeNode
Code	typeNode
Distance : 15

70
Tree	text
Code	text
Distance : 15

71
Tree	condition
Code	condition
Distance : 15

72
Tree	validateFeature
Code	validateFeature
Distance : 15

73
Tree	MatrixUtils
Code	MatrixUtils
Distance : 15

74
Tree	ChartRenderingInfo
Code	ChartRenderingInfo
Distance : 15

75
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 15

76
Tree	Year
Code	Year
Distance : 15

77
Tree	builder
Code	builder
Distance : 15

78
Tree	isShorthandProperty
Code	isShorthandProperty
Distance : 15

79
Tree	isSubtypeOf
Code	isSubtypeOf
Distance : 15

80
Tree	isGoogScopeFunctionBody
Code	isGoogScopeFunctionBody
Distance : 15

81
Tree	Set
Code	Set
Distance : 15

82
Tree	sourceName
Code	sourceName
Distance : 15

83
Tree	isDefaultValue
Code	isDefaultValue
Distance : 15

84
Tree	PiePlot3D
Code	PiePlot3D
Distance : 15

85
Tree	getCompiler
Code	getCompiler
Distance : 15

86
Tree	invalidatingTypes
Code	invalidatingTypes
Distance : 15

87
Tree	singleRoot
Code	singleRoot
Distance : 15

88
Tree	DateTimeComparator
Code	DateTimeComparator
Distance : 15

89
Tree	computeEscapedEs6
Code	computeEscapedEs6
Distance : 15

90
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 15

91
Tree	origin
Code	origin
Distance : 15

92
Tree	isDeclared
Code	isDeclared
Distance : 15

93
Tree	parent
Code	parent
Distance : 15

94
Tree	ChartPanel
Code	ChartPanel
Distance : 15

95
Tree	TestNG
Code	TestNG
Distance : 15

96
Tree	classNode
Code	classNode
Distance : 15

97
Tree	newType
Code	newType
Distance : 15

98
Tree	isSubtype
Code	isSubtype
Distance : 14

99
Tree	getClosestContainerScope
Code	getClosestContainerScope
Distance : 15

100
Tree	process
Code	process
Distance : 15

101
Tree	fnName
Code	fnName
Distance : 15

102
Tree	MockSettingsImpl
Code	MockSettingsImpl
Distance : 15

103
Tree	RealMatrix
Code	RealMatrix
Distance : 15

104
Tree	Scope
Code	Scope
Distance : 15

105
Tree	TypeEnv
Code	TypeEnv
Distance : 15

106
Tree	throw
Code	throw
Distance : 15

107
Tree	scopeRoot
Code	scopeRoot
Distance : 15

108
Tree	MockHandler
Code	MockHandler
Distance : 15

109
Tree	scale
Code	scale
Distance : 15

110
Tree	CompilerInput
Code	CompilerInput
Distance : 15

111
Tree	restrictByNotNullOrUndefined
Code	restrictByNotNullOrUndefined
Distance : 14

112
Tree	expr
Code	expr
Distance : 15

113
Tree	DateTimeFormatterBuilder
Code	DateTimeFormatterBuilder
Distance : 15

114
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 15

115
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 15

116
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 15

117
Tree	TimePeriodValues
Code	TimePeriodValues
Distance : 15

118
Tree	NodeTraversal
Code	NodeTraversal
Distance : 15

119
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 15

120
Tree	qualifiedName
Code	qualifiedName
Distance : 15

121
Tree	IntervalCategoryToolTipGenerator
Code	IntervalCategoryToolTipGenerator
Distance : 15

122
Tree	testTypes
Code	testTypes
Distance : 15

123
Tree	void
Code	void
Distance : 15

124
Tree	getFirstChild
Code	getFirstChild
Distance : 15

125
Tree	(
Code	(
Distance : 14

126
Tree	ScopeCreator
Code	ScopeCreator
Distance : 15

127
Tree	new
Code	new
Distance : 15

128
Tree	leftType
Code	leftType
Distance : 15

129
Tree	LegendGraphic
Code	LegendGraphic
Distance : 15

130
Tree	EnvTypePair
Code	EnvTypePair
Distance : 15

131
Tree	checkArgument
Code	checkArgument
Distance : 15

132
Tree	return
Code	return
Distance : 15

133
Tree	FlowScope
Code	FlowScope
Distance : 15

134
Tree	Node
Code	Node
Distance : 15

135
Tree	<
Code	<
Distance : 15

136
Tree	removeUnusedProperties
Code	removeUnusedProperties
Distance : 15

137
Tree	Predicates
Code	Predicates
Distance : 15

138
Tree	MethodInterceptorFilter
Code	MethodInterceptorFilter
Distance : 15

139
Tree	Preconditions
Code	Preconditions
Distance : 15

140
Tree	hasOneChild
Code	hasOneChild
Distance : 15

141
Tree	switchType
Code	switchType
Distance : 15

142
Tree	ReferenceCollectingCallback
Code	ReferenceCollectingCallback
Distance : 15

143
Tree	dispatcher
Code	dispatcher
Distance : 15

144
Tree	compiler
Code	compiler
Distance : 15

145
Tree	LiveVariablesAnalysis
Code	LiveVariablesAnalysis
Distance : 15

146
Tree	alwaysTrue
Code	alwaysTrue
Distance : 15

147
Tree	s
Code	s
Distance : 15

148
Tree	setFunction
Code	setFunction
Distance : 15

149
Tree	Property
Code	Property
Distance : 15

150
Tree	getRootNode
Code	getRootNode
Distance : 15

151
Tree	jsDoc
Code	jsDoc
Distance : 15

152
Tree	assertFalse
Code	assertFalse
Distance : 15

153
Tree	isCallTo
Code	isCallTo
Distance : 15

154
Tree	.
Code	.
Distance : 14

155
Tree	EigenDecomposition
Code	EigenDecomposition
Distance : 15

156
Tree	currentScope
Code	currentScope
Distance : 15

157
Tree	anchor
Code	anchor
Distance : 15

158
Tree	file
Code	file
Distance : 15

159
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 15

160
Tree	ContributionsProvider
Code	ContributionsProvider
Distance : 15

161
Tree	addTypes
Code	addTypes
Distance : 15

162
Tree	isObjLit
Code	isObjLit
Distance : 15

163
Tree	SlidingCategoryDataset
Code	SlidingCategoryDataset
Distance : 15

164
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 15

165
Tree	false
Code	false
Distance : 15

166
Tree	MockSettingsInfo
Code	MockSettingsInfo
Distance : 15

167
Tree	hasTwoChildren
Code	hasTwoChildren
Distance : 15

168
Tree	TypedVar
Code	TypedVar
Distance : 15

169
Tree	dest
Code	dest
Distance : 15

170
Tree	GroupedStackedBarRenderer
Code	GroupedStackedBarRenderer
Distance : 15

171
Tree	if
Code	if
Distance : 15

172
Tree	EigenDecompositionImpl
Code	EigenDecompositionImpl
Distance : 15

173
Tree	StandardXYZToolTipGenerator
Code	StandardXYZToolTipGenerator
Distance : 15

174
Tree	subtree
Code	subtree
Distance : 15

175
Tree	Times
Code	Times
Distance : 15

176
Tree	node
Code	node
Distance : 15

177
Tree	getFunction
Code	getFunction
Distance : 15

178
Tree	InternalMockHandler
Code	InternalMockHandler
Distance : 15

179
Tree	&&
Code	&&
Distance : 15

180
Tree	standardDeviation
Code	standardDeviation
Distance : 15

181
Tree	AbstractScope
Code	AbstractScope
Distance : 15

182
Tree	FieldBracketingNthOrderBrentSolver
Code	FieldBracketingNthOrderBrentSolver
Distance : 15

183
Tree	static
Code	static
Distance : 15

184
Tree	scope
Code	scope
Distance : 15

185
Tree	isConst
Code	isConst
Distance : 15

186
Tree	coeff1
Code	coeff1
Distance : 15

187
Tree	top
Code	top
Distance : 15

188
Tree	Var
Code	Var
Distance : 15

189
Tree	callee
Code	callee
Distance : 15

190
Tree	isCtorDefinedByCall
Code	isCtorDefinedByCall
Distance : 15

191
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 15

192
Tree	isNoType
Code	isNoType
Distance : 15

193
Tree	getBooleanProp
Code	getBooleanProp
Distance : 15

194
Tree	grandparent
Code	grandparent
Distance : 15

195
Tree	ClassLoader
Code	ClassLoader
Distance : 15

196
Tree	renamer
Code	renamer
Distance : 15

197
Tree	TypeMismatch
Code	TypeMismatch
Distance : 15

198
Tree	putBooleanProp
Code	putBooleanProp
Distance : 15

199
Tree	rightType
Code	rightType
Distance : 15

========================================================================


========================================================================
Example Number: 17
Parent Code is: 
return true ;
-------------------------------------------------------------------------------
Child code is: 
return false ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (9{val=true}) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (9{val=false}) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/86/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 2

1
Tree	cause
Code	cause
Distance : 3

2
Tree	getName
Code	getName
Distance : 3

3
Tree	call
Code	call
Distance : 3

4
Tree	DiffResult
Code	DiffResult
Distance : 3

5
Tree	return short ;
Code	return short ;
Distance : 1

6
Tree	NonSquareMatrixException
Code	NonSquareMatrixException
Distance : 3

7
Tree	return >= ;
Code	return >= ;
Distance : 1

8
Tree	setDefaultToolTipGenerator
Code	setDefaultToolTipGenerator
Distance : 3

9
Tree	peepholePass
Code	peepholePass
Distance : 3

10
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 3

11
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 3

12
Tree	ArrayRealVector
Code	ArrayRealVector
Distance : 3

13
Tree	assertNull
Code	assertNull
Distance : 3

14
Tree	Range
Code	Range
Distance : 3

15
Tree	newLiteralNode
Code	newLiteralNode
Distance : 3

16
Tree	String
Code	String
Distance : 3

17
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 3

18
Tree	VARIANCE
Code	VARIANCE
Distance : 3

19
Tree	NOT_FOUND
Code	NOT_FOUND
Distance : 3

20
Tree	FieldVectorImpl
Code	FieldVectorImpl
Distance : 3

21
Tree	TypeMismatch
Code	TypeMismatch
Distance : 3

22
Tree	@
Code	@
Distance : 3

23
Tree	buildArray
Code	buildArray
Distance : 3

24
Tree	setField
Code	setField
Distance : 3

25
Tree	/
Code	/
Distance : 3

26
Tree	Gaussian
Code	Gaussian
Distance : 3

27
Tree	sample
Code	sample
Distance : 3

28
Tree	assertFalse
Code	assertFalse
Distance : 3

29
Tree	sum
Code	sum
Distance : 3

30
Tree	out
Code	out
Distance : 3

31
Tree	getFragment
Code	getFragment
Distance : 3

32
Tree	type
Code	type
Distance : 3

33
Tree	Invocation
Code	Invocation
Distance : 3

34
Tree	return point ;
Code	return point ;
Distance : 1

35
Tree	Cartesian3D
Code	Cartesian3D
Distance : 3

36
Tree	standardDeviation
Code	standardDeviation
Distance : 3

37
Tree	classProvider
Code	classProvider
Distance : 3

38
Tree	singularValues
Code	singularValues
Distance : 3

39
Tree	getColumnDimension
Code	getColumnDimension
Distance : 3

40
Tree	?
Code	?
Distance : 3

41
Tree	>=
Code	>=
Distance : 3

42
Tree	ObjectUtils
Code	ObjectUtils
Distance : 3

43
Tree	oneOverN
Code	oneOverN
Distance : 3

44
Tree	JSType
Code	JSType
Distance : 3

45
Tree	ParseBucket
Code	ParseBucket
Distance : 3

46
Tree	maxIterations
Code	maxIterations
Distance : 3

47
Tree	currentStatement
Code	currentStatement
Distance : 3

48
Tree	value
Code	value
Distance : 3

49
Tree	MatrixIndexException
Code	MatrixIndexException
Distance : 3

50
Tree	INDEX_NOT_FOUND
Code	INDEX_NOT_FOUND
Distance : 3

51
Tree	StringBuilder
Code	StringBuilder
Distance : 3

52
Tree	lastException
Code	lastException
Distance : 3

53
Tree	setStateInitialized
Code	setStateInitialized
Distance : 3

54
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 3

55
Tree	{}
Code	{}
Distance : 3

56
Tree	RealMatrix
Code	RealMatrix
Distance : 3

57
Tree	assertThat
Code	assertThat
Distance : 3

58
Tree	msg
Code	msg
Distance : 3

59
Tree	TypedVar
Code	TypedVar
Distance : 3

60
Tree	cls
Code	cls
Distance : 3

61
Tree	setUp
Code	setUp
Distance : 3

62
Tree	getBinaryModuleNamespace
Code	getBinaryModuleNamespace
Distance : 3

63
Tree	length
Code	length
Distance : 3

64
Tree	final
Code	final
Distance : 3

65
Tree	key
Code	key
Distance : 3

66
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 3

67
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 3

68
Tree	standard
Code	standard
Distance : 3

69
Tree	NullArgumentException
Code	NullArgumentException
Distance : 3

70
Tree	Assertions
Code	Assertions
Distance : 3

71
Tree	rightType
Code	rightType
Distance : 3

72
Tree	RealVector
Code	RealVector
Distance : 3

73
Tree	variance
Code	variance
Distance : 3

74
Tree	abs
Code	abs
Distance : 3

75
Tree	accum3
Code	accum3
Distance : 3

76
Tree	equal
Code	equal
Distance : 3

77
Tree	recordImplicitInterfaceUses
Code	recordImplicitInterfaceUses
Distance : 3

78
Tree	Strings
Code	Strings
Distance : 3

79
Tree	getJSType
Code	getJSType
Distance : 3

80
Tree	getSlot
Code	getSlot
Distance : 3

81
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 3

82
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 1

83
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 3

84
Tree	isSubtype
Code	isSubtype
Distance : 3

85
Tree	index
Code	index
Distance : 3

86
Tree	TooLittleActualInvocations
Code	TooLittleActualInvocations
Distance : 3

87
Tree	restricted
Code	restricted
Distance : 3

88
Tree	columns
Code	columns
Distance : 3

89
Tree	return Coordinates3D ;
Code	return Coordinates3D ;
Distance : 1

90
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 3

91
Tree	Primitives
Code	Primitives
Distance : 3

92
Tree	FieldMatrix
Code	FieldMatrix
Distance : 3

93
Tree	checkState
Code	checkState
Distance : 3

94
Tree	CHI_SQUARE_TEST
Code	CHI_SQUARE_TEST
Distance : 3

95
Tree	offset
Code	offset
Distance : 3

96
Tree	osName
Code	osName
Distance : 3

97
Tree	checkArgument
Code	checkArgument
Distance : 3

98
Tree	FunctionUtils
Code	FunctionUtils
Distance : 3

99
Tree	UnivariateSolver
Code	UnivariateSolver
Distance : 3

100
Tree	return class ;
Code	return class ;
Distance : 1

101
Tree	catch
Code	catch
Distance : 3

102
Tree	values
Code	values
Distance : 3

103
Tree	field
Code	field
Distance : 3

104
Tree	calendar
Code	calendar
Distance : 3

105
Tree	Period
Code	Period
Distance : 3

106
Tree	that
Code	that
Distance : 3

107
Tree	T
Code	T
Distance : 3

108
Tree	bp
Code	bp
Distance : 3

109
Tree	+
Code	+
Distance : 3

110
Tree	{
Code	{
Distance : 3

111
Tree	scale
Code	scale
Distance : 3

112
Tree	dev
Code	dev
Distance : 3

113
Tree	byte
Code	byte
Distance : 3

114
Tree	scaleArray
Code	scaleArray
Distance : 3

115
Tree	data
Code	data
Distance : 3

116
Tree	matrix
Code	matrix
Distance : 3

117
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 3

118
Tree	array
Code	array
Distance : 3

119
Tree	isEmpty
Code	isEmpty
Distance : 3

120
Tree	MutablePeriod
Code	MutablePeriod
Distance : 3

121
Tree	str
Code	str
Distance : 3

122
Tree	TransformUtils
Code	TransformUtils
Distance : 3

123
Tree	traverse
Code	traverse
Distance : 3

124
Tree	==
Code	==
Distance : 3

125
Tree	wildCardBoundedType
Code	wildCardBoundedType
Distance : 3

126
Tree	throw
Code	throw
Distance : 3

127
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 3

128
Tree	super
Code	super
Distance : 3

129
Tree	!
Code	!
Distance : 3

130
Tree	if
Code	if
Distance : 3

131
Tree	return / ;
Code	return / ;
Distance : 1

132
Tree	MathArrays
Code	MathArrays
Distance : 3

133
Tree	int
Code	int
Distance : 3

134
Tree	<
Code	<
Distance : 3

135
Tree	return data ;
Code	return data ;
Distance : 1

136
Tree	double
Code	double
Distance : 3

137
Tree	Coordinates3D
Code	Coordinates3D
Distance : 3

138
Tree	boolean
Code	boolean
Distance : 3

139
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 3

140
Tree	class
Code	class
Distance : 3

141
Tree	+=
Code	+=
Distance : 3

142
Tree	InvocationImpl
Code	InvocationImpl
Distance : 3

143
Tree	Complex
Code	Complex
Distance : 3

144
Tree	case
Code	case
Distance : 3

145
Tree	d
Code	d
Distance : 3

146
Tree	return ? ;
Code	return ? ;
Distance : 1

147
Tree	invocation
Code	invocation
Distance : 3

148
Tree	return true ;
Code	return true ;
Distance : 1

149
Tree	x
Code	x
Distance : 3

150
Tree	reportOr
Code	reportOr
Distance : 3

151
Tree	BetaDistribution
Code	BetaDistribution
Distance : 3

152
Tree	evaluate
Code	evaluate
Distance : 3

153
Tree	alpha
Code	alpha
Distance : 3

154
Tree	indexOf
Code	indexOf
Distance : 3

155
Tree	FlowScope
Code	FlowScope
Distance : 3

156
Tree	toString
Code	toString
Distance : 3

157
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 1

158
Tree	Field
Code	Field
Distance : 3

159
Tree	DimensionMismatchException
Code	DimensionMismatchException
Distance : 3

160
Tree	MockUtil
Code	MockUtil
Distance : 3

161
Tree	Comparable
Code	Comparable
Distance : 3

162
Tree	*
Code	*
Distance : 3

163
Tree	TypeI
Code	TypeI
Distance : 3

164
Tree	GaussNewtonOptimizer
Code	GaussNewtonOptimizer
Distance : 3

165
Tree	Assert
Code	Assert
Distance : 3

166
Tree	SingularMatrixException
Code	SingularMatrixException
Distance : 3

167
Tree	getDaysInYearMax
Code	getDaysInYearMax
Distance : 3

168
Tree	List
Code	List
Distance : 3

169
Tree	[
Code	[
Distance : 3

170
Tree	getInstanceType
Code	getInstanceType
Distance : 3

171
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 3

172
Tree	Args
Code	Args
Distance : 3

173
Tree	else
Code	else
Distance : 3

174
Tree	sin
Code	sin
Distance : 3

175
Tree	s
Code	s
Distance : 3

176
Tree	}
Code	}
Distance : 3

177
Tree	isForward
Code	isForward
Distance : 3

178
Tree	getTimeInMillis
Code	getTimeInMillis
Distance : 3

179
Tree	isFunction
Code	isFunction
Distance : 3

180
Tree	this
Code	this
Distance : 3

181
Tree	.
Code	.
Distance : 3

182
Tree	v.length
Code	v.length
Distance : 3

183
Tree	ArrayList
Code	ArrayList
Distance : 3

184
Tree	assertTrue
Code	assertTrue
Distance : 3

185
Tree	FastMath
Code	FastMath
Distance : 3

186
Tree	report
Code	report
Distance : 3

187
Tree	new
Code	new
Distance : 3

188
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 3

189
Tree	legacyNamespace
Code	legacyNamespace
Distance : 3

190
Tree	NodeTraversal
Code	NodeTraversal
Distance : 3

191
Tree	MathUserException
Code	MathUserException
Distance : 3

192
Tree	short
Code	short
Distance : 3

193
Tree	checkNotNull
Code	checkNotNull
Distance : 3

194
Tree	NonLinearConjugateGradientOptimizer
Code	NonLinearConjugateGradientOptimizer
Distance : 3

195
Tree	SUM
Code	SUM
Distance : 3

196
Tree	getRowDimension
Code	getRowDimension
Distance : 3

197
Tree	obj
Code	obj
Distance : 3

198
Tree	replaceWith
Code	replaceWith
Distance : 3

199
Tree	TimeSeries
Code	TimeSeries
Distance : 3

========================================================================


========================================================================
Example Number: 18
Parent Code is: 
return TernaryValue.TRUE ;
-------------------------------------------------------------------------------
Child code is: 
return TernaryValue.UNKNOWN ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=TernaryValue.TRUE}) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=TernaryValue.UNKNOWN}) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/75/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Correct
========================================================================
True

0
Tree	return
Code	return
Distance : 2

1
Tree	return null ;
Code	return null ;
Distance : 1

2
Tree	MutablePeriod
Code	MutablePeriod
Distance : 3

3
Tree	return start ;
Code	return start ;
Distance : 1

4
Tree	DiffResult
Code	DiffResult
Distance : 3

5
Tree	Comparable
Code	Comparable
Distance : 3

6
Tree	matrix
Code	matrix
Distance : 3

7
Tree	class
Code	class
Distance : 3

8
Tree	T
Code	T
Distance : 3

9
Tree	return legacyNamespace ;
Code	return legacyNamespace ;
Distance : 1

10
Tree	return stopTime ;
Code	return stopTime ;
Distance : 1

11
Tree	getTimeInMillis
Code	getTimeInMillis
Distance : 3

12
Tree	{
Code	{
Distance : 3

13
Tree	return name ;
Code	return name ;
Distance : 1

14
Tree	assertFalse
Code	assertFalse
Distance : 3

15
Tree	return Cartesian3D ;
Code	return Cartesian3D ;
Distance : 1

16
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 3

17
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 1

18
Tree	return final ;
Code	return final ;
Distance : 1

19
Tree	return DurationType ;
Code	return DurationType ;
Distance : 1

20
Tree	return mode ;
Code	return mode ;
Distance : 1

21
Tree	return SUM ;
Code	return SUM ;
Distance : 1

22
Tree	return MathIllegalArgumentException ;
Code	return MathIllegalArgumentException ;
Distance : 1

23
Tree	return f ;
Code	return f ;
Distance : 1

24
Tree	return d ;
Code	return d ;
Distance : 1

25
Tree	FlowScope
Code	FlowScope
Distance : 3

26
Tree	str
Code	str
Distance : 3

27
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 1

28
Tree	bp
Code	bp
Distance : 3

29
Tree	Coordinates3D
Code	Coordinates3D
Distance : 3

30
Tree	super
Code	super
Distance : 3

31
Tree	return jsRoot ;
Code	return jsRoot ;
Distance : 1

32
Tree	return parameterTypes ;
Code	return parameterTypes ;
Distance : 1

33
Tree	MathArrays
Code	MathArrays
Distance : 3

34
Tree	return ArgumentsAreDifferentException ;
Code	return ArgumentsAreDifferentException ;
Distance : 1

35
Tree	return sample ;
Code	return sample ;
Distance : 1

36
Tree	return ] ;
Code	return ] ;
Distance : 1

37
Tree	Invocation
Code	Invocation
Distance : 3

38
Tree	assertThat
Code	assertThat
Distance : 3

39
Tree	return ParseBucket ;
Code	return ParseBucket ;
Distance : 1

40
Tree	return float ;
Code	return float ;
Distance : 1

41
Tree	return invocation ;
Code	return invocation ;
Distance : 1

42
Tree	return StringBuffer ;
Code	return StringBuffer ;
Distance : 1

43
Tree	T
Code	T
Distance : 3

44
Tree	byte
Code	byte
Distance : 3

45
Tree	return Coordinates2D ;
Code	return Coordinates2D ;
Distance : 1

46
Tree	TransformUtils
Code	TransformUtils
Distance : 3

47
Tree	ParseBucket
Code	ParseBucket
Distance : 3

48
Tree	return ArrayFieldVector ;
Code	return ArrayFieldVector ;
Distance : 1

49
Tree	return super(); ;
Code	return super(); ;
Distance : 1

50
Tree	return catch ;
Code	return catch ;
Distance : 1

51
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 3

52
Tree	return weightSqrt ;
Code	return weightSqrt ;
Distance : 1

53
Tree	return MockitoException ;
Code	return MockitoException ;
Distance : 1

54
Tree	return InvocationDiffersFromActual ;
Code	return InvocationDiffersFromActual ;
Distance : 1

55
Tree	boolean
Code	boolean
Distance : 3

56
Tree	return continue; ;
Code	return continue; ;
Distance : 1

57
Tree	return functionType ;
Code	return functionType ;
Distance : 1

58
Tree	return differentMethod ;
Code	return differentMethod ;
Distance : 1

59
Tree	case
Code	case
Distance : 3

60
Tree	return lhs ;
Code	return lhs ;
Distance : 1

61
Tree	BetaDistribution
Code	BetaDistribution
Distance : 3

62
Tree	return verifier ;
Code	return verifier ;
Distance : 1

63
Tree	return short ;
Code	return short ;
Distance : 1

64
Tree	return Invocation ;
Code	return Invocation ;
Distance : 1

65
Tree	Period
Code	Period
Distance : 3

66
Tree	return extends ;
Code	return extends ;
Distance : 1

67
Tree	return MockCreationSettings ;
Code	return MockCreationSettings ;
Distance : 1

68
Tree	return objType ;
Code	return objType ;
Distance : 1

69
Tree	v.length
Code	v.length
Distance : 3

70
Tree	case
Code	case
Distance : 3

71
Tree	return
Code	return
Distance : 2

72
Tree	return wanted ;
Code	return wanted ;
Distance : 1

73
Tree	field
Code	field
Distance : 3

74
Tree	return NodeUtil ;
Code	return NodeUtil ;
Distance : 1

75
Tree	return row ;
Code	return row ;
Distance : 1

76
Tree	Complex
Code	Complex
Distance : 3

77
Tree	return @ ;
Code	return @ ;
Distance : 1

78
Tree	return UNKNOWN ;
Code	return UNKNOWN ;
Distance : 1

79
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 3

80
Tree	return maxIterations ;
Code	return maxIterations ;
Distance : 1

81
Tree	double
Code	double
Distance : 3

82
Tree	return success ;
Code	return success ;
Distance : 1

83
Tree	new
Code	new
Distance : 3

84
Tree	return matrix ;
Code	return matrix ;
Distance : 1

85
Tree	return runner ;
Code	return runner ;
Distance : 1

86
Tree	return getLastArguments ;
Code	return getLastArguments ;
Distance : 1

87
Tree	return JSType ;
Code	return JSType ;
Distance : 1

88
Tree	Complex
Code	Complex
Distance : 3

89
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 3

90
Tree	boolean
Code	boolean
Distance : 3

91
Tree	return if ;
Code	return if ;
Distance : 1

92
Tree	double
Code	double
Distance : 3

93
Tree	new
Code	new
Distance : 3

94
Tree	(
Code	(
Distance : 3

95
Tree	return bp ;
Code	return bp ;
Distance : 1

96
Tree	return Answer ;
Code	return Answer ;
Distance : 1

97
Tree	return InternalParser ;
Code	return InternalParser ;
Distance : 1

98
Tree	return != ;
Code	return != ;
Distance : 1

99
Tree	return & ;
Code	return & ;
Distance : 1

100
Tree	<
Code	<
Distance : 3

101
Tree	return cache ;
Code	return cache ;
Distance : 1

102
Tree	throw
Code	throw
Distance : 3

103
Tree	!
Code	!
Distance : 3

104
Tree	if
Code	if
Distance : 3

105
Tree	Coordinates3D
Code	Coordinates3D
Distance : 3

106
Tree	super
Code	super
Distance : 3

107
Tree	MathArrays
Code	MathArrays
Distance : 3

108
Tree	if
Code	if
Distance : 3

109
Tree	return Period ;
Code	return Period ;
Distance : 1

110
Tree	return int ;
Code	return int ;
Distance : 1

111
Tree	return str ;
Code	return str ;
Distance : 1

112
Tree	return * ;
Code	return * ;
Distance : 1

113
Tree	T
Code	T
Distance : 3

114
Tree	return offset ;
Code	return offset ;
Distance : 1

115
Tree	return array ;
Code	return array ;
Distance : 1

116
Tree	return SingularMatrixException ;
Code	return SingularMatrixException ;
Distance : 1

117
Tree	return T ;
Code	return T ;
Distance : 1

118
Tree	return else ;
Code	return else ;
Distance : 1

119
Tree	return throw ;
Code	return throw ;
Distance : 1

120
Tree	return currentScope ;
Code	return currentScope ;
Distance : 1

121
Tree	Complex
Code	Complex
Distance : 3

122
Tree	throw
Code	throw
Distance : 3

123
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 3

124
Tree	InvocationImpl
Code	InvocationImpl
Distance : 3

125
Tree	return {} ;
Code	return {} ;
Distance : 1

126
Tree	return
Code	return
Distance : 2

127
Tree	MathArrays
Code	MathArrays
Distance : 3

128
Tree	return class ;
Code	return class ;
Distance : 1

129
Tree	return ? ;
Code	return ? ;
Distance : 1

130
Tree	return false ;
Code	return false ;
Distance : 1

131
Tree	return true ;
Code	return true ;
Distance : 1

132
Tree	return / ;
Code	return / ;
Distance : 1

133
Tree	return TernaryValue.TRUE ;
Code	return TernaryValue.TRUE ;
Distance : 1

134
Tree	return >= ;
Code	return >= ;
Distance : 1

135
Tree	return return ;
Code	return return ;
Distance : 1

136
Tree	return super ;
Code	return super ;
Distance : 1

137
Tree	return TernaryValue.UNKNOWN ;
Code	return TernaryValue.UNKNOWN ;
Distance : 0

138
Tree	return InvocationImpl ;
Code	return InvocationImpl ;
Distance : 1

139
Tree	throw
Code	throw
Distance : 3

140
Tree	if
Code	if
Distance : 3

141
Tree	return data ;
Code	return data ;
Distance : 1

142
Tree	return += ;
Code	return += ;
Distance : 1

143
Tree	int
Code	int
Distance : 3

144
Tree	return MOCKING_PROGRESS ;
Code	return MOCKING_PROGRESS ;
Distance : 1

145
Tree	return byte ;
Code	return byte ;
Distance : 1

146
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 3

147
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 1

148
Tree	double
Code	double
Distance : 3

149
Tree	return ! ;
Code	return ! ;
Distance : 1

150
Tree	return MockHandler ;
Code	return MockHandler ;
Distance : 1

151
Tree	return /= ;
Code	return /= ;
Distance : 1

152
Tree	InvocationImpl
Code	InvocationImpl
Distance : 3

153
Tree	catch
Code	catch
Distance : 3

154
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 1

155
Tree	return alpha ;
Code	return alpha ;
Distance : 1

156
Tree	return Character ;
Code	return Character ;
Distance : 1

157
Tree	return ObjectUtils ;
Code	return ObjectUtils ;
Distance : 1

158
Tree	this
Code	this
Distance : 3

159
Tree	return value ;
Code	return value ;
Distance : 1

160
Tree	!
Code	!
Distance : 3

161
Tree	final
Code	final
Distance : 3

162
Tree	return TooLittleActualInvocations ;
Code	return TooLittleActualInvocations ;
Distance : 1

163
Tree	return Complex ;
Code	return Complex ;
Distance : 1

164
Tree	return timeZone ;
Code	return timeZone ;
Distance : 1

165
Tree	calendar
Code	calendar
Distance : 3

166
Tree	JSType
Code	JSType
Distance : 3

167
Tree	UnivariateSolver
Code	UnivariateSolver
Distance : 3

168
Tree	!
Code	!
Distance : 3

169
Tree	return Coordinates3D ;
Code	return Coordinates3D ;
Distance : 1

170
Tree	Coordinates3D
Code	Coordinates3D
Distance : 3

171
Tree	new
Code	new
Distance : 3

172
Tree	return double ;
Code	return double ;
Distance : 1

173
Tree	return length ;
Code	return length ;
Distance : 1

174
Tree	return obj ;
Code	return obj ;
Distance : 1

175
Tree	super
Code	super
Distance : 3

176
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 3

177
Tree	InvocationImpl
Code	InvocationImpl
Distance : 3

178
Tree	int
Code	int
Distance : 3

179
Tree	return [] ;
Code	return [] ;
Distance : 1

180
Tree	return case ;
Code	return case ;
Distance : 1

181
Tree	return == ;
Code	return == ;
Distance : 1

182
Tree	boolean
Code	boolean
Distance : 3

183
Tree	return boolean ;
Code	return boolean ;
Distance : 1

184
Tree	return reportOr ;
Code	return reportOr ;
Distance : 1

185
Tree	return FastFourierTransformer ;
Code	return FastFourierTransformer ;
Distance : 1

186
Tree	case
Code	case
Distance : 3

187
Tree	int
Code	int
Distance : 3

188
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 1

189
Tree	return DimensionMismatchException ;
Code	return DimensionMismatchException ;
Distance : 1

190
Tree	return maxEvaluations ;
Code	return maxEvaluations ;
Distance : 1

191
Tree	return NullArgumentException ;
Code	return NullArgumentException ;
Distance : 1

192
Tree	return values ;
Code	return values ;
Distance : 1

193
Tree	return Strings ;
Code	return Strings ;
Distance : 1

194
Tree	Period
Code	Period
Distance : 3

195
Tree	return commonTypes ;
Code	return commonTypes ;
Distance : 1

196
Tree	return MockUtil ;
Code	return MockUtil ;
Distance : 1

197
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 3

198
Tree	getFragment
Code	getFragment
Distance : 3

199
Tree	setMaxIterations
Code	setMaxIterations
Distance : 3

========================================================================


========================================================================
Example Number: 19
Parent Code is: 
if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( c > NUMBER_CONSTANT && c < NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=c}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=c}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=appendHexJavaScriptRepresentation}) (214{val=(}) (800{val=sb}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=c}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=c}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=appendHexJavaScriptRepresentation}) (214{val=(}) (800{val=sb}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/73/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 2

1
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 3

2
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 2

3
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 3

4
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 2

5
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

6
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

7
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

8
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

9
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 3

10
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

11
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

12
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

13
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 2

14
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 1

15
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 4

16
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 3

17
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

18
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

19
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

20
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

21
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

22
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 1

23
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

24
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

25
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 2

26
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 4

27
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

28
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

29
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

30
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

31
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 3

32
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 4

33
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 2

34
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

35
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

36
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

37
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

38
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

39
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

40
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

41
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

42
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

43
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

44
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

45
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 3

46
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

47
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

48
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

49
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

50
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

51
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

52
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

53
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

54
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

55
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 3

56
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

57
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

58
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

59
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 3

60
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

61
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

62
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

63
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

64
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 5

65
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

66
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

67
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

68
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

69
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

70
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

71
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

72
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

73
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

74
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

75
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

76
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 4

77
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 3

78
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

79
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

80
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

81
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

82
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

83
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

84
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

85
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

86
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

87
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

88
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

89
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

90
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

91
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

92
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 5

93
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

94
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

95
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

96
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

97
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

98
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

99
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

100
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

101
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

102
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 4

103
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

104
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

105
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 4

106
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

107
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 3

108
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

109
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

110
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

111
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

112
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

113
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 4

114
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

115
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 4

116
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

117
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 6

118
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

119
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

120
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

121
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

122
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

123
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

124
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 4

125
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

126
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

127
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 6

128
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 6

129
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

130
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

131
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 6

132
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 6

133
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 6

134
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 4

135
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

136
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

137
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

138
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 3

139
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 6

140
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

141
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

142
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

143
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

144
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

145
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 6

146
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

147
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

148
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 3

149
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

150
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 6

151
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 5

152
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 6

153
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 6

154
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

155
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

156
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

157
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 5

158
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

159
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

160
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 5

161
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

162
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

163
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 4

164
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

165
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

166
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 6

167
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

168
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , c ) ; }
Distance : 5

169
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 6

170
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

171
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

172
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

173
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

174
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

175
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 6

176
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

177
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

178
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

179
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

180
Tree	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

181
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

182
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

183
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , sb ) ; }
Distance : 5

184
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

185
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

186
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 2

187
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

188
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( c , c ) ; }
Distance : 5

189
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

190
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 4

191
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( c , sb ) ; }
Distance : 7

192
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , sb ) ; }
Distance : 5

193
Tree	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

194
Tree	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 4

195
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 5

196
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( c , sb ) ; }
Distance : 7

197
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb ) ; } else { append ( sb , c ) ; }
Distance : 6

198
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c ) ; } else { append ( sb , c ) ; }
Distance : 5

199
Tree	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb > NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

========================================================================


========================================================================
Example Number: 20
Parent Code is: 
{ defineSlot ( astParameter , functionNode , jsDocParameter . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
-------------------------------------------------------------------------------
Child code is: 
{ defineSlot ( astParameter , functionNode , jsDocParameter . getJSType () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=astParameter}) (234{val=,}) (800{val=functionNode}) (234{val=,}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (7 (800{val=jsDocParameter}) (204{val==}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getNext}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=astParameter}) (234{val=,}) (800{val=functionNode}) (234{val=,}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (7 (800{val=jsDocParameter}) (204{val==}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getNext}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/70/parent/src_com_google_javascript_jscomp_TypedScopeCreator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 22

1
Tree	()
Code	()
Distance : 22

2
Tree	init
Code	init
Distance : 23

3
Tree	classType
Code	classType
Distance : 23

4
Tree	BigFractionMatrixConverter
Code	BigFractionMatrixConverter
Distance : 23

5
Tree	Array
Code	Array
Distance : 23

6
Tree	BinomialCoefficientDouble
Code	BinomialCoefficientDouble
Distance : 23

7
Tree	Assert
Code	Assert
Distance : 23

8
Tree	testError
Code	testError
Distance : 23

9
Tree	penalty
Code	penalty
Distance : 23

10
Tree	TestEmptySubObject
Code	TestEmptySubObject
Distance : 23

11
Tree	fsCalled
Code	fsCalled
Distance : 23

12
Tree	index
Code	index
Distance : 23

13
Tree	strictly
Code	strictly
Distance : 23

14
Tree	LastArguments
Code	LastArguments
Distance : 23

15
Tree	mRule
Code	mRule
Distance : 23

16
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 23

17
Tree	MathException
Code	MathException
Distance : 23

18
Tree	NestedClassWithNoArgConstructor
Code	NestedClassWithNoArgConstructor
Distance : 23

19
Tree	setEntry
Code	setEntry
Distance : 23

20
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 23

21
Tree	last
Code	last
Distance : 23

22
Tree	secRand
Code	secRand
Distance : 23

23
Tree	notNull
Code	notNull
Distance : 23

24
Tree	traversal
Code	traversal
Distance : 23

25
Tree	Separator
Code	Separator
Distance : 23

26
Tree	stream
Code	stream
Distance : 23

27
Tree	setSeedInternal
Code	setSeedInternal
Distance : 23

28
Tree	doReturn
Code	doReturn
Distance : 23

29
Tree	doNothing
Code	doNothing
Distance : 23

30
Tree	path
Code	path
Distance : 23

31
Tree	copyIn
Code	copyIn
Distance : 23

32
Tree	gamma
Code	gamma
Distance : 23

33
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 23

34
Tree	TestSubObject
Code	TestSubObject
Distance : 23

35
Tree	&
Code	&
Distance : 23

36
Tree	stubber
Code	stubber
Distance : 23

37
Tree	mean
Code	mean
Distance : 23

38
Tree	getLastArguments
Code	getLastArguments
Distance : 23

39
Tree	noPrimitives
Code	noPrimitives
Distance : 23

40
Tree	double
Code	double
Distance : 23

41
Tree	getEndMillis
Code	getEndMillis
Distance : 23

42
Tree	NodeTraversal
Code	NodeTraversal
Distance : 23

43
Tree	scale
Code	scale
Distance : 23

44
Tree	ComposableFunction.CEIL
Code	ComposableFunction.CEIL
Distance : 23

45
Tree	i
Code	i
Distance : 23

46
Tree	FieldUtils
Code	FieldUtils
Distance : 23

47
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 23

48
Tree	iStartMillis
Code	iStartMillis
Distance : 23

49
Tree	rhs
Code	rhs
Distance : 23

50
Tree	RegularizedGamma.P
Code	RegularizedGamma.P
Distance : 23

51
Tree	the_mock_type
Code	the_mock_type
Distance : 23

52
Tree	zones
Code	zones
Distance : 23

53
Tree	varsInFunctionBody
Code	varsInFunctionBody
Distance : 23

54
Tree	numerator
Code	numerator
Distance : 23

55
Tree	msgNode
Code	msgNode
Distance : 23

56
Tree	clone.zValues
Code	clone.zValues
Distance : 23

57
Tree	source.moment
Code	source.moment
Distance : 23

58
Tree	position
Code	position
Distance : 23

59
Tree	o.length
Code	o.length
Distance : 23

60
Tree	returnZero
Code	returnZero
Distance : 23

61
Tree	newVar
Code	newVar
Distance : 23

62
Tree	checkLocalityOfMarkedCalls
Code	checkLocalityOfMarkedCalls
Distance : 23

63
Tree	Arguments
Code	Arguments
Distance : 23

64
Tree	sanityCheck
Code	sanityCheck
Distance : 23

65
Tree	FPrinter
Code	FPrinter
Distance : 23

66
Tree	parametersNames
Code	parametersNames
Distance : 23

67
Tree	setShapesVisible
Code	setShapesVisible
Distance : 23

68
Tree	findStaticMembers
Code	findStaticMembers
Distance : 23

69
Tree	nvars
Code	nvars
Distance : 23

70
Tree	clone.items
Code	clone.items
Distance : 23

71
Tree	Token.DEFAULT_CASE
Code	Token.DEFAULT_CASE
Distance : 23

72
Tree	setEndMillis
Code	setEndMillis
Distance : 23

73
Tree	CharacterLiteral
Code	CharacterLiteral
Distance : 23

74
Tree	coeff
Code	coeff
Distance : 23

75
Tree	reportAnd
Code	reportAnd
Distance : 23

76
Tree	checkState
Code	checkState
Distance : 23

77
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 23

78
Tree	TernaryValue
Code	TernaryValue
Distance : 23

79
Tree	LogarithmicAxis
Code	LogarithmicAxis
Distance : 23

80
Tree	ArithmeticUtils
Code	ArithmeticUtils
Distance : 23

81
Tree	key
Code	key
Distance : 23

82
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 23

83
Tree	denominatorDegreesOfFreedom
Code	denominatorDegreesOfFreedom
Distance : 23

84
Tree	Mockito
Code	Mockito
Distance : 23

85
Tree	throw
Code	throw
Distance : 23

86
Tree	forNode
Code	forNode
Distance : 23

87
Tree	PolarPlot
Code	PolarPlot
Distance : 23

88
Tree	InvocationNotifierHandler
Code	InvocationNotifierHandler
Distance : 23

89
Tree	real
Code	real
Distance : 23

90
Tree	omega
Code	omega
Distance : 23

91
Tree	bits
Code	bits
Distance : 23

92
Tree	increasing
Code	increasing
Distance : 23

93
Tree	long
Code	long
Distance : 23

94
Tree	fail
Code	fail
Distance : 23

95
Tree	continue;
Code	continue;
Distance : 23

96
Tree	Month
Code	Month
Distance : 23

97
Tree	stubbed
Code	stubbed
Distance : 23

98
Tree	checkRelative
Code	checkRelative
Distance : 23

99
Tree	return
Code	return
Distance : 23

100
Tree	inputLineLength
Code	inputLineLength
Distance : 23

101
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 23

102
Tree	break;
Code	break;
Distance : 23

103
Tree	verify
Code	verify
Distance : 23

104
Tree	float
Code	float
Distance : 23

105
Tree	throwable
Code	throwable
Distance : 23

106
Tree	+=
Code	+=
Distance : 23

107
Tree	IMethods
Code	IMethods
Distance : 23

108
Tree	fieldType
Code	fieldType
Distance : 23

109
Tree	scriptRoot
Code	scriptRoot
Distance : 23

110
Tree	doAnswer
Code	doAnswer
Distance : 23

111
Tree	;
Code	;
Distance : 22

112
Tree	node
Code	node
Distance : 23

113
Tree	paint
Code	paint
Distance : 23

114
Tree	testModules
Code	testModules
Distance : 23

115
Tree	Object
Code	Object
Distance : 23

116
Tree	messageContains
Code	messageContains
Distance : 23

117
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 23

118
Tree	j
Code	j
Distance : 23

119
Tree	value
Code	value
Distance : 23

120
Tree	-
Code	-
Distance : 23

121
Tree	Args
Code	Args
Distance : 23

122
Tree	do
Code	do
Distance : 23

123
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 23

124
Tree	out.value
Code	out.value
Distance : 23

125
Tree	ret
Code	ret
Distance : 23

126
Tree	for
Code	for
Distance : 23

127
Tree	protected
Code	protected
Distance : 23

128
Tree	try
Code	try
Distance : 23

129
Tree	if
Code	if
Distance : 23

130
Tree	final
Code	final
Distance : 23

131
Tree	mockitoStubber
Code	mockitoStubber
Distance : 23

132
Tree	public
Code	public
Distance : 23

133
Tree	static
Code	static
Distance : 23

134
Tree	(
Code	(
Distance : 22

135
Tree	
Code	
Distance : 23

136
Tree	:
Code	:
Distance : 23

137
Tree	@
Code	@
Distance : 23

138
Tree	super();
Code	super();
Distance : 23

139
Tree	catch
Code	catch
Distance : 23

140
Tree	AbstractScope
Code	AbstractScope
Distance : 23

141
Tree	++
Code	++
Distance : 23

142
Tree	]
Code	]
Distance : 23

143
Tree	new
Code	new
Distance : 23

144
Tree	logBeta
Code	logBeta
Distance : 23

145
Tree	Paint
Code	Paint
Distance : 23

146
Tree	<=
Code	<=
Distance : 23

147
Tree	{}
Code	{}
Distance : 23

148
Tree	T
Code	T
Distance : 23

149
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 23

150
Tree	checkArgument
Code	checkArgument
Distance : 23

151
Tree	assertTrue
Code	assertTrue
Distance : 23

152
Tree	N
Code	N
Distance : 23

153
Tree	Function
Code	Function
Distance : 23

154
Tree	k
Code	k
Distance : 23

155
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 23

156
Tree	MockControl
Code	MockControl
Distance : 23

157
Tree	fn
Code	fn
Distance : 23

158
Tree	)
Code	)
Distance : 22

159
Tree	random
Code	random
Distance : 23

160
Tree	Color
Code	Color
Distance : 23

161
Tree	YearMonthType
Code	YearMonthType
Distance : 23

162
Tree	pow
Code	pow
Distance : 23

163
Tree	setStartMillis
Code	setStartMillis
Distance : 23

164
Tree	int
Code	int
Distance : 23

165
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 23

166
Tree	Answer
Code	Answer
Distance : 23

167
Tree	MockitoJUnitRunner
Code	MockitoJUnitRunner
Distance : 23

168
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 23

169
Tree	ISO8601TimeZoneStrategy
Code	ISO8601TimeZoneStrategy
Distance : 23

170
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 23

171
Tree	checkInitialize
Code	checkInitialize
Distance : 23

172
Tree	extends
Code	extends
Distance : 23

173
Tree	SerialUtils
Code	SerialUtils
Distance : 23

174
Tree	distribution
Code	distribution
Distance : 23

175
Tree	newValues
Code	newValues
Distance : 23

176
Tree	YearWeekType
Code	YearWeekType
Distance : 23

177
Tree	&&
Code	&&
Distance : 23

178
Tree	RenameLabels
Code	RenameLabels
Distance : 23

179
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 23

180
Tree	setField
Code	setField
Distance : 23

181
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 23

182
Tree	abstract
Code	abstract
Distance : 23

183
Tree	Comparable
Code	Comparable
Distance : 23

184
Tree	this
Code	this
Distance : 23

185
Tree	Result
Code	Result
Distance : 23

186
Tree	grandparent
Code	grandparent
Distance : 23

187
Tree	Rectangle2D
Code	Rectangle2D
Distance : 23

188
Tree	iValues
Code	iValues
Distance : 23

189
Tree	synchronized
Code	synchronized
Distance : 23

190
Tree	doThrow
Code	doThrow
Distance : 23

191
Tree	TranslationTransform
Code	TranslationTransform
Distance : 23

192
Tree	LogBeta
Code	LogBeta
Distance : 23

193
Tree	validateNodeType
Code	validateNodeType
Distance : 23

194
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 23

195
Tree	stub
Code	stub
Distance : 23

196
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 23

197
Tree	testTypes
Code	testTypes
Distance : 23

198
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 23

199
Tree	private
Code	private
Distance : 23

========================================================================


========================================================================
Example Number: 21
Parent Code is: 
if ( token != JsDocToken.LP ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( token != JsDocToken.LP ) { restoreLookAhead ( token ) ; return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=token}) (242{val=!=}) (40{val=JsDocToken.LP})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=reportTypeSyntaxWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=token}) (242{val=!=}) (40{val=JsDocToken.LP})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=restoreLookAhead}) (214{val=(}) (800{val=token}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=reportTypeSyntaxWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/68/parent/src_com_google_javascript_jscomp_parsing_JsDocInfoParser.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( token != JsDocToken.LP ) {}
Code	if ( token != JsDocToken.LP ) {}
Distance : 13

1
Tree	if ( token != JsDocToken.LP ) nameGenerator
Code	if ( token != JsDocToken.LP ) nameGenerator
Distance : 13

2
Tree	if ( token != JsDocToken.LP ) ITERATION_CHECK_DISABLED
Code	if ( token != JsDocToken.LP ) ITERATION_CHECK_DISABLED
Distance : 13

3
Tree	if ( token != JsDocToken.LP ) mean
Code	if ( token != JsDocToken.LP ) mean
Distance : 13

4
Tree	if ( token != JsDocToken.LP ) getKey
Code	if ( token != JsDocToken.LP ) getKey
Distance : 13

5
Tree	if ( token != JsDocToken.LP ) lastActualLocation
Code	if ( token != JsDocToken.LP ) lastActualLocation
Distance : 13

6
Tree	if ( token != JsDocToken.LP ) parseAndTypeCheckWithScope
Code	if ( token != JsDocToken.LP ) parseAndTypeCheckWithScope
Distance : 13

7
Tree	if ( token != JsDocToken.LP ) original
Code	if ( token != JsDocToken.LP ) original
Distance : 13

8
Tree	if ( token != JsDocToken.LP ) recordImplicitInterfaceUses
Code	if ( token != JsDocToken.LP ) recordImplicitInterfaceUses
Distance : 13

9
Tree	if ( token != JsDocToken.LP ) LanguageMode.ECMASCRIPT5_STRICT
Code	if ( token != JsDocToken.LP ) LanguageMode.ECMASCRIPT5_STRICT
Distance : 13

10
Tree	if ( token != JsDocToken.LP ) TranspilationPasses
Code	if ( token != JsDocToken.LP ) TranspilationPasses
Distance : 13

11
Tree	if ( token != JsDocToken.LP ) copyIn
Code	if ( token != JsDocToken.LP ) copyIn
Distance : 13

12
Tree	if ( token != JsDocToken.LP ) error
Code	if ( token != JsDocToken.LP ) error
Distance : 13

13
Tree	if ( token != JsDocToken.LP ) isAssertionCall
Code	if ( token != JsDocToken.LP ) isAssertionCall
Distance : 13

14
Tree	if ( token != JsDocToken.LP ) validateNodeType
Code	if ( token != JsDocToken.LP ) validateNodeType
Distance : 13

15
Tree	if ( token != JsDocToken.LP ) sigma
Code	if ( token != JsDocToken.LP ) sigma
Distance : 13

16
Tree	if ( token != JsDocToken.LP ) vector
Code	if ( token != JsDocToken.LP ) vector
Distance : 13

17
Tree	if ( token != JsDocToken.LP ) return;
Code	if ( token != JsDocToken.LP ) return;
Distance : 13

18
Tree	if ( token != JsDocToken.LP ) CompositeFormat
Code	if ( token != JsDocToken.LP ) CompositeFormat
Distance : 13

19
Tree	if ( token != JsDocToken.LP ) childInitializers
Code	if ( token != JsDocToken.LP ) childInitializers
Distance : 13

20
Tree	if ( token != JsDocToken.LP ) findStaticMembers
Code	if ( token != JsDocToken.LP ) findStaticMembers
Distance : 13

21
Tree	if ( token != JsDocToken.LP ) ReadablePeriod
Code	if ( token != JsDocToken.LP ) ReadablePeriod
Distance : 13

22
Tree	if ( token != JsDocToken.LP ) RegularizedGamma.P
Code	if ( token != JsDocToken.LP ) RegularizedGamma.P
Distance : 13

23
Tree	if ( token != JsDocToken.LP ) formatter
Code	if ( token != JsDocToken.LP ) formatter
Distance : 13

24
Tree	if ( token != JsDocToken.LP ) Boolean.TRUE
Code	if ( token != JsDocToken.LP ) Boolean.TRUE
Distance : 13

25
Tree	if ( token != JsDocToken.LP ) references
Code	if ( token != JsDocToken.LP ) references
Distance : 13

26
Tree	if ( token != JsDocToken.LP ) BinomialCoefficient
Code	if ( token != JsDocToken.LP ) BinomialCoefficient
Distance : 13

27
Tree	if ( token != JsDocToken.LP ) scope
Code	if ( token != JsDocToken.LP ) scope
Distance : 13

28
Tree	if ( token != JsDocToken.LP ) default:
Code	if ( token != JsDocToken.LP ) default:
Distance : 13

29
Tree	if ( token != JsDocToken.LP ) forward
Code	if ( token != JsDocToken.LP ) forward
Distance : 13

30
Tree	if ( token != JsDocToken.LP ) doNothing
Code	if ( token != JsDocToken.LP ) doNothing
Distance : 13

31
Tree	if ( token != JsDocToken.LP ) if
Code	if ( token != JsDocToken.LP ) if
Distance : 13

32
Tree	if ( token != JsDocToken.LP ) cachedPivots
Code	if ( token != JsDocToken.LP ) cachedPivots
Distance : 13

33
Tree	if ( token != JsDocToken.LP ) -=
Code	if ( token != JsDocToken.LP ) -=
Distance : 13

34
Tree	if ( token != JsDocToken.LP ) ret
Code	if ( token != JsDocToken.LP ) ret
Distance : 13

35
Tree	if ( token != JsDocToken.LP ) nextCol
Code	if ( token != JsDocToken.LP ) nextCol
Distance : 13

36
Tree	if ( token != JsDocToken.LP ) rank
Code	if ( token != JsDocToken.LP ) rank
Distance : 13

37
Tree	if ( token != JsDocToken.LP ) currentDerivative
Code	if ( token != JsDocToken.LP ) currentDerivative
Distance : 13

38
Tree	if ( token != JsDocToken.LP ) isStatementBlock
Code	if ( token != JsDocToken.LP ) isStatementBlock
Distance : 13

39
Tree	if ( token != JsDocToken.LP ) FastFourierTransformer
Code	if ( token != JsDocToken.LP ) FastFourierTransformer
Distance : 13

40
Tree	if ( token != JsDocToken.LP ) getRoot
Code	if ( token != JsDocToken.LP ) getRoot
Distance : 13

41
Tree	if ( token != JsDocToken.LP ) qrRankingThreshold
Code	if ( token != JsDocToken.LP ) qrRankingThreshold
Distance : 13

42
Tree	if ( token != JsDocToken.LP ) declareVariablesForObjLitValues
Code	if ( token != JsDocToken.LP ) declareVariablesForObjLitValues
Distance : 13

43
Tree	if ( token != JsDocToken.LP ) lvalueType
Code	if ( token != JsDocToken.LP ) lvalueType
Distance : 13

44
Tree	if ( token != JsDocToken.LP ) da
Code	if ( token != JsDocToken.LP ) da
Distance : 13

45
Tree	if ( token != JsDocToken.LP ) isDestructuringLhs
Code	if ( token != JsDocToken.LP ) isDestructuringLhs
Distance : 13

46
Tree	if ( token != JsDocToken.LP ) PropertyCollapseLevel.NONE
Code	if ( token != JsDocToken.LP ) PropertyCollapseLevel.NONE
Distance : 13

47
Tree	if ( token != JsDocToken.LP ) GlobalScopeBuilder
Code	if ( token != JsDocToken.LP ) GlobalScopeBuilder
Distance : 13

48
Tree	if ( token != JsDocToken.LP ) codingConvention
Code	if ( token != JsDocToken.LP ) codingConvention
Distance : 13

49
Tree	if ( token != JsDocToken.LP ) boxedInfo.length
Code	if ( token != JsDocToken.LP ) boxedInfo.length
Distance : 13

50
Tree	if ( token != JsDocToken.LP ) other.value
Code	if ( token != JsDocToken.LP ) other.value
Distance : 13

51
Tree	if ( token != JsDocToken.LP ) createParseException
Code	if ( token != JsDocToken.LP ) createParseException
Distance : 13

52
Tree	if ( token != JsDocToken.LP ) mockMaker
Code	if ( token != JsDocToken.LP ) mockMaker
Distance : 13

53
Tree	if ( token != JsDocToken.LP ) isComingFromSignedJar
Code	if ( token != JsDocToken.LP ) isComingFromSignedJar
Distance : 13

54
Tree	if ( token != JsDocToken.LP ) getNumRepetitions
Code	if ( token != JsDocToken.LP ) getNumRepetitions
Distance : 13

55
Tree	if ( token != JsDocToken.LP ) varName
Code	if ( token != JsDocToken.LP ) varName
Distance : 13

56
Tree	if ( token != JsDocToken.LP ) traverseEs6
Code	if ( token != JsDocToken.LP ) traverseEs6
Distance : 13

57
Tree	if ( token != JsDocToken.LP ) createIllegalArgumentException
Code	if ( token != JsDocToken.LP ) createIllegalArgumentException
Distance : 13

58
Tree	if ( token != JsDocToken.LP ) classType
Code	if ( token != JsDocToken.LP ) classType
Distance : 13

59
Tree	if ( token != JsDocToken.LP ) anchorPoint
Code	if ( token != JsDocToken.LP ) anchorPoint
Distance : 13

60
Tree	if ( token != JsDocToken.LP ) mockingProgress
Code	if ( token != JsDocToken.LP ) mockingProgress
Distance : 13

61
Tree	if ( token != JsDocToken.LP ) EventHandler.Action.CONTINUE
Code	if ( token != JsDocToken.LP ) EventHandler.Action.CONTINUE
Distance : 13

62
Tree	if ( token != JsDocToken.LP ) getProp
Code	if ( token != JsDocToken.LP ) getProp
Distance : 13

63
Tree	if ( token != JsDocToken.LP ) jacobianEvaluations
Code	if ( token != JsDocToken.LP ) jacobianEvaluations
Distance : 13

64
Tree	if ( token != JsDocToken.LP ) LocalizedFormats.NO_OPTIMUM_COMPUTED_YET
Code	if ( token != JsDocToken.LP ) LocalizedFormats.NO_OPTIMUM_COMPUTED_YET
Distance : 13

65
Tree	if ( token != JsDocToken.LP ) shouldRunJ2clPasses
Code	if ( token != JsDocToken.LP ) shouldRunJ2clPasses
Distance : 13

66
Tree	if ( token != JsDocToken.LP ) statistic
Code	if ( token != JsDocToken.LP ) statistic
Distance : 13

67
Tree	if ( token != JsDocToken.LP ) LanguageMode.TYPESCRIPT
Code	if ( token != JsDocToken.LP ) LanguageMode.TYPESCRIPT
Distance : 13

68
Tree	if ( token != JsDocToken.LP ) JSDocInfo
Code	if ( token != JsDocToken.LP ) JSDocInfo
Distance : 13

69
Tree	if ( token != JsDocToken.LP ) that
Code	if ( token != JsDocToken.LP ) that
Distance : 13

70
Tree	if ( token != JsDocToken.LP ) cur
Code	if ( token != JsDocToken.LP ) cur
Distance : 13

71
Tree	if ( token != JsDocToken.LP ) receiver
Code	if ( token != JsDocToken.LP ) receiver
Distance : 13

72
Tree	if ( token != JsDocToken.LP ) checks
Code	if ( token != JsDocToken.LP ) checks
Distance : 13

73
Tree	if ( token != JsDocToken.LP ) getProcessor
Code	if ( token != JsDocToken.LP ) getProcessor
Distance : 13

74
Tree	if ( token != JsDocToken.LP ) value
Code	if ( token != JsDocToken.LP ) value
Distance : 13

75
Tree	if ( token != JsDocToken.LP ) sample
Code	if ( token != JsDocToken.LP ) sample
Distance : 13

76
Tree	if ( token != JsDocToken.LP ) CheckLevel.OFF
Code	if ( token != JsDocToken.LP ) CheckLevel.OFF
Distance : 13

77
Tree	if ( token != JsDocToken.LP ) declares
Code	if ( token != JsDocToken.LP ) declares
Distance : 13

78
Tree	if ( token != JsDocToken.LP ) parser
Code	if ( token != JsDocToken.LP ) parser
Distance : 13

79
Tree	if ( token != JsDocToken.LP ) @
Code	if ( token != JsDocToken.LP ) @
Distance : 13

80
Tree	if ( token != JsDocToken.LP ) flags.rewritePolyfills
Code	if ( token != JsDocToken.LP ) flags.rewritePolyfills
Distance : 13

81
Tree	if ( token != JsDocToken.LP ) MockHandler
Code	if ( token != JsDocToken.LP ) MockHandler
Distance : 13

82
Tree	if ( token != JsDocToken.LP ) useSourceInfoForNewQName
Code	if ( token != JsDocToken.LP ) useSourceInfoForNewQName
Distance : 13

83
Tree	if ( token != JsDocToken.LP ) createsBlockScope
Code	if ( token != JsDocToken.LP ) createsBlockScope
Distance : 13

84
Tree	if ( token != JsDocToken.LP ) children
Code	if ( token != JsDocToken.LP ) children
Distance : 13

85
Tree	if ( token != JsDocToken.LP ) stubbed
Code	if ( token != JsDocToken.LP ) stubbed
Distance : 13

86
Tree	if ( token != JsDocToken.LP ) TextFragment
Code	if ( token != JsDocToken.LP ) TextFragment
Distance : 13

87
Tree	if ( token != JsDocToken.LP ) columnLabels
Code	if ( token != JsDocToken.LP ) columnLabels
Distance : 13

88
Tree	if ( token != JsDocToken.LP ) CombinatoricsUtils
Code	if ( token != JsDocToken.LP ) CombinatoricsUtils
Distance : 13

89
Tree	if ( token != JsDocToken.LP ) PeriodFormat
Code	if ( token != JsDocToken.LP ) PeriodFormat
Distance : 13

90
Tree	if ( token != JsDocToken.LP ) Result
Code	if ( token != JsDocToken.LP ) Result
Distance : 13

91
Tree	if ( token != JsDocToken.LP ) callback
Code	if ( token != JsDocToken.LP ) callback
Distance : 13

92
Tree	if ( token != JsDocToken.LP ) maxIterationCount
Code	if ( token != JsDocToken.LP ) maxIterationCount
Distance : 13

93
Tree	if ( token != JsDocToken.LP ) actualMatcher
Code	if ( token != JsDocToken.LP ) actualMatcher
Distance : 13

94
Tree	if ( token != JsDocToken.LP ) breaker
Code	if ( token != JsDocToken.LP ) breaker
Distance : 13

95
Tree	if ( token != JsDocToken.LP ) parameter
Code	if ( token != JsDocToken.LP ) parameter
Distance : 13

96
Tree	if ( token != JsDocToken.LP ) stmts
Code	if ( token != JsDocToken.LP ) stmts
Distance : 13

97
Tree	if ( token != JsDocToken.LP ) PropListItem
Code	if ( token != JsDocToken.LP ) PropListItem
Distance : 13

98
Tree	if ( token != JsDocToken.LP ) matchingConstructors
Code	if ( token != JsDocToken.LP ) matchingConstructors
Distance : 13

99
Tree	if ( token != JsDocToken.LP ) rhs
Code	if ( token != JsDocToken.LP ) rhs
Distance : 13

100
Tree	if ( token != JsDocToken.LP ) googProvide
Code	if ( token != JsDocToken.LP ) googProvide
Distance : 13

101
Tree	if ( token != JsDocToken.LP ) injectMockCandidates
Code	if ( token != JsDocToken.LP ) injectMockCandidates
Distance : 13

102
Tree	if ( token != JsDocToken.LP ) float
Code	if ( token != JsDocToken.LP ) float
Distance : 13

103
Tree	if ( token != JsDocToken.LP ) --
Code	if ( token != JsDocToken.LP ) --
Distance : 13

104
Tree	if ( token != JsDocToken.LP ) synchronized
Code	if ( token != JsDocToken.LP ) synchronized
Distance : 13

105
Tree	if ( token != JsDocToken.LP ) ClassNotFoundException
Code	if ( token != JsDocToken.LP ) ClassNotFoundException
Distance : 13

106
Tree	if ( token != JsDocToken.LP ) cloned.chars
Code	if ( token != JsDocToken.LP ) cloned.chars
Distance : 13

107
Tree	if ( token != JsDocToken.LP ) !=
Code	if ( token != JsDocToken.LP ) !=
Distance : 13

108
Tree	if ( token != JsDocToken.LP ) super();
Code	if ( token != JsDocToken.LP ) super();
Distance : 13

109
Tree	if ( token != JsDocToken.LP ) var.scope
Code	if ( token != JsDocToken.LP ) var.scope
Distance : 13

110
Tree	if ( token != JsDocToken.LP ) assertMessageContains
Code	if ( token != JsDocToken.LP ) assertMessageContains
Distance : 13

111
Tree	if ( token != JsDocToken.LP ) break;
Code	if ( token != JsDocToken.LP ) break;
Distance : 13

112
Tree	if ( token != JsDocToken.LP ) %=
Code	if ( token != JsDocToken.LP ) %=
Distance : 13

113
Tree	if ( token != JsDocToken.LP ) FunctionEvaluationException
Code	if ( token != JsDocToken.LP ) FunctionEvaluationException
Distance : 13

114
Tree	if ( token != JsDocToken.LP ) objectType
Code	if ( token != JsDocToken.LP ) objectType
Distance : 13

115
Tree	if ( token != JsDocToken.LP ) rhs.isNaN
Code	if ( token != JsDocToken.LP ) rhs.isNaN
Distance : 13

116
Tree	if ( token != JsDocToken.LP ) {
Code	if ( token != JsDocToken.LP ) {
Distance : 12

117
Tree	if ( token != JsDocToken.LP ) crossing
Code	if ( token != JsDocToken.LP ) crossing
Distance : 13

118
Tree	if ( token != JsDocToken.LP ) in
Code	if ( token != JsDocToken.LP ) in
Distance : 13

119
Tree	if ( token != JsDocToken.LP ) *
Code	if ( token != JsDocToken.LP ) *
Distance : 13

120
Tree	if ( token != JsDocToken.LP ) DefaultToStringStyle
Code	if ( token != JsDocToken.LP ) DefaultToStringStyle
Distance : 13

121
Tree	if ( token != JsDocToken.LP ) ^=
Code	if ( token != JsDocToken.LP ) ^=
Distance : 13

122
Tree	if ( token != JsDocToken.LP ) AbstractScope
Code	if ( token != JsDocToken.LP ) AbstractScope
Distance : 13

123
Tree	if ( token != JsDocToken.LP ) assignNode
Code	if ( token != JsDocToken.LP ) assignNode
Distance : 13

124
Tree	if ( token != JsDocToken.LP ) :
Code	if ( token != JsDocToken.LP ) :
Distance : 13

125
Tree	if ( token != JsDocToken.LP ) /
Code	if ( token != JsDocToken.LP ) /
Distance : 13

126
Tree	if ( token != JsDocToken.LP ) %
Code	if ( token != JsDocToken.LP ) %
Distance : 13

127
Tree	if ( token != JsDocToken.LP ) throws
Code	if ( token != JsDocToken.LP ) throws
Distance : 13

128
Tree	if ( token != JsDocToken.LP ) protected
Code	if ( token != JsDocToken.LP ) protected
Distance : 13

129
Tree	if ( token != JsDocToken.LP ) private
Code	if ( token != JsDocToken.LP ) private
Distance : 13

130
Tree	if ( token != JsDocToken.LP ) ?
Code	if ( token != JsDocToken.LP ) ?
Distance : 13

131
Tree	if ( token != JsDocToken.LP ) &
Code	if ( token != JsDocToken.LP ) &
Distance : 13

132
Tree	if ( token != JsDocToken.LP ) ^
Code	if ( token != JsDocToken.LP ) ^
Distance : 13

133
Tree	if ( token != JsDocToken.LP ) >=
Code	if ( token != JsDocToken.LP ) >=
Distance : 13

134
Tree	if ( token != JsDocToken.LP ) /=
Code	if ( token != JsDocToken.LP ) /=
Distance : 13

135
Tree	if ( token != JsDocToken.LP ) ++
Code	if ( token != JsDocToken.LP ) ++
Distance : 13

136
Tree	if ( token != JsDocToken.LP ) *=
Code	if ( token != JsDocToken.LP ) *=
Distance : 13

137
Tree	if ( token != JsDocToken.LP ) extends
Code	if ( token != JsDocToken.LP ) extends
Distance : 13

138
Tree	if ( token != JsDocToken.LP ) &=
Code	if ( token != JsDocToken.LP ) &=
Distance : 13

139
Tree	if ( token != JsDocToken.LP ) ]
Code	if ( token != JsDocToken.LP ) ]
Distance : 13

140
Tree	if ( token != JsDocToken.LP ) +=
Code	if ( token != JsDocToken.LP ) +=
Distance : 13

141
Tree	if ( token != JsDocToken.LP ) for
Code	if ( token != JsDocToken.LP ) for
Distance : 13

142
Tree	if ( token != JsDocToken.LP ) &&
Code	if ( token != JsDocToken.LP ) &&
Distance : 13

143
Tree	if ( token != JsDocToken.LP ) instanceof
Code	if ( token != JsDocToken.LP ) instanceof
Distance : 13

144
Tree	if ( token != JsDocToken.LP ) try
Code	if ( token != JsDocToken.LP ) try
Distance : 13

145
Tree	if ( token != JsDocToken.LP ) basis
Code	if ( token != JsDocToken.LP ) basis
Distance : 13

146
Tree	if ( token != JsDocToken.LP ) case
Code	if ( token != JsDocToken.LP ) case
Distance : 13

147
Tree	if ( token != JsDocToken.LP ) Nullable
Code	if ( token != JsDocToken.LP ) Nullable
Distance : 13

148
Tree	if ( token != JsDocToken.LP ) SerialUtils
Code	if ( token != JsDocToken.LP ) SerialUtils
Distance : 13

149
Tree	if ( token != JsDocToken.LP ) prop
Code	if ( token != JsDocToken.LP ) prop
Distance : 13

150
Tree	if ( token != JsDocToken.LP ) final
Code	if ( token != JsDocToken.LP ) final
Distance : 13

151
Tree	if ( token != JsDocToken.LP ) other.liveSet
Code	if ( token != JsDocToken.LP ) other.liveSet
Distance : 13

152
Tree	if ( token != JsDocToken.LP ) Paint
Code	if ( token != JsDocToken.LP ) Paint
Distance : 13

153
Tree	if ( token != JsDocToken.LP ) continue;
Code	if ( token != JsDocToken.LP ) continue;
Distance : 13

154
Tree	if ( token != JsDocToken.LP ) hasMessageContaining
Code	if ( token != JsDocToken.LP ) hasMessageContaining
Distance : 13

155
Tree	if ( token != JsDocToken.LP ) mapToSelf
Code	if ( token != JsDocToken.LP ) mapToSelf
Distance : 13

156
Tree	if ( token != JsDocToken.LP ) rootNode
Code	if ( token != JsDocToken.LP ) rootNode
Distance : 13

157
Tree	if ( token != JsDocToken.LP ) Beta
Code	if ( token != JsDocToken.LP ) Beta
Distance : 13

158
Tree	if ( token != JsDocToken.LP ) standardDeviation.length
Code	if ( token != JsDocToken.LP ) standardDeviation.length
Distance : 13

159
Tree	if ( token != JsDocToken.LP ) ObjectInputStream
Code	if ( token != JsDocToken.LP ) ObjectInputStream
Distance : 13

160
Tree	if ( token != JsDocToken.LP ) add
Code	if ( token != JsDocToken.LP ) add
Distance : 13

161
Tree	if ( token != JsDocToken.LP ) ShapeUtils
Code	if ( token != JsDocToken.LP ) ShapeUtils
Distance : 13

162
Tree	if ( token != JsDocToken.LP ) jsDoc
Code	if ( token != JsDocToken.LP ) jsDoc
Distance : 13

163
Tree	if ( token != JsDocToken.LP ) assignment
Code	if ( token != JsDocToken.LP ) assignment
Distance : 13

164
Tree	if ( token != JsDocToken.LP ) token
Code	if ( token != JsDocToken.LP ) token
Distance : 12

165
Tree	if ( token != JsDocToken.LP ) doAnswer
Code	if ( token != JsDocToken.LP ) doAnswer
Distance : 13

166
Tree	if ( token != JsDocToken.LP ) functionName
Code	if ( token != JsDocToken.LP ) functionName
Distance : 13

167
Tree	if ( token != JsDocToken.LP ) validityCheck
Code	if ( token != JsDocToken.LP ) validityCheck
Distance : 13

168
Tree	if ( token != JsDocToken.LP ) LanguageMode.ECMASCRIPT3
Code	if ( token != JsDocToken.LP ) LanguageMode.ECMASCRIPT3
Distance : 13

169
Tree	if ( token != JsDocToken.LP ) fn
Code	if ( token != JsDocToken.LP ) fn
Distance : 13

170
Tree	if ( token != JsDocToken.LP ) seed
Code	if ( token != JsDocToken.LP ) seed
Distance : 13

171
Tree	if ( token != JsDocToken.LP ) invokedMethod
Code	if ( token != JsDocToken.LP ) invokedMethod
Distance : 13

172
Tree	if ( token != JsDocToken.LP ) throw
Code	if ( token != JsDocToken.LP ) throw
Distance : 13

173
Tree	if ( token != JsDocToken.LP ) abstract
Code	if ( token != JsDocToken.LP ) abstract
Distance : 13

174
Tree	if ( token != JsDocToken.LP ) fraction
Code	if ( token != JsDocToken.LP ) fraction
Distance : 13

175
Tree	if ( token != JsDocToken.LP ) reporter
Code	if ( token != JsDocToken.LP ) reporter
Distance : 13

176
Tree	if ( token != JsDocToken.LP ) public
Code	if ( token != JsDocToken.LP ) public
Distance : 13

177
Tree	if ( token != JsDocToken.LP ) isSwitchCase
Code	if ( token != JsDocToken.LP ) isSwitchCase
Distance : 13

178
Tree	if ( token != JsDocToken.LP ) checkArgument
Code	if ( token != JsDocToken.LP ) checkArgument
Distance : 13

179
Tree	if ( token != JsDocToken.LP ) constructor
Code	if ( token != JsDocToken.LP ) constructor
Distance : 13

180
Tree	if ( token != JsDocToken.LP ) mockInstance
Code	if ( token != JsDocToken.LP ) mockInstance
Distance : 13

181
Tree	if ( token != JsDocToken.LP ) NodeUtil
Code	if ( token != JsDocToken.LP ) NodeUtil
Distance : 13

182
Tree	if ( token != JsDocToken.LP ) isNameDeclaration
Code	if ( token != JsDocToken.LP ) isNameDeclaration
Distance : 13

183
Tree	if ( token != JsDocToken.LP ) Token.CALL
Code	if ( token != JsDocToken.LP ) Token.CALL
Distance : 13

184
Tree	if ( token != JsDocToken.LP ) scriptRoot
Code	if ( token != JsDocToken.LP ) scriptRoot
Distance : 13

185
Tree	if ( token != JsDocToken.LP ) j
Code	if ( token != JsDocToken.LP ) j
Distance : 13

186
Tree	if ( token != JsDocToken.LP ) S
Code	if ( token != JsDocToken.LP ) S
Distance : 13

187
Tree	if ( token != JsDocToken.LP ) cc
Code	if ( token != JsDocToken.LP ) cc
Distance : 13

188
Tree	if ( token != JsDocToken.LP ) ==
Code	if ( token != JsDocToken.LP ) ==
Distance : 13

189
Tree	if ( token != JsDocToken.LP ) IAnswer
Code	if ( token != JsDocToken.LP ) IAnswer
Distance : 13

190
Tree	if ( token != JsDocToken.LP ) traversal
Code	if ( token != JsDocToken.LP ) traversal
Distance : 13

191
Tree	if ( token != JsDocToken.LP ) minor
Code	if ( token != JsDocToken.LP ) minor
Distance : 13

192
Tree	if ( token != JsDocToken.LP ) node
Code	if ( token != JsDocToken.LP ) node
Distance : 13

193
Tree	if ( token != JsDocToken.LP ) declare
Code	if ( token != JsDocToken.LP ) declare
Distance : 13

194
Tree	if ( token != JsDocToken.LP ) flag
Code	if ( token != JsDocToken.LP ) flag
Distance : 13

195
Tree	if ( token != JsDocToken.LP ) TestUtils
Code	if ( token != JsDocToken.LP ) TestUtils
Distance : 13

196
Tree	if ( token != JsDocToken.LP ) currentFile
Code	if ( token != JsDocToken.LP ) currentFile
Distance : 13

197
Tree	if ( token != JsDocToken.LP ) Method
Code	if ( token != JsDocToken.LP ) Method
Distance : 13

198
Tree	if ( token != JsDocToken.LP ) <=
Code	if ( token != JsDocToken.LP ) <=
Distance : 13

199
Tree	if ( token != JsDocToken.LP ) invocationOnInterface
Code	if ( token != JsDocToken.LP ) invocationOnInterface
Distance : 13

========================================================================


========================================================================
Example Number: 22
Parent Code is: 
{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ initCompilerOptionsIfTesting () ; return toSource ( n , null , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=initCompilerOptionsIfTesting}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (802{val=toSource}) (214{val=(}) (800{val=n}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=initCompilerOptionsIfTesting}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (802{val=toSource}) (214{val=(}) (800{val=n}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/64/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 14

1
Tree	checkNotNull
Code	checkNotNull
Distance : 15

2
Tree	rhs
Code	rhs
Distance : 15

3
Tree	TranslationTransform
Code	TranslationTransform
Distance : 15

4
Tree	)
Code	)
Distance : 14

5
Tree	index
Code	index
Distance : 15

6
Tree	setEndMillis
Code	setEndMillis
Distance : 15

7
Tree	Function
Code	Function
Distance : 15

8
Tree	RenameLabels
Code	RenameLabels
Distance : 15

9
Tree	assertScope
Code	assertScope
Distance : 15

10
Tree	denominatorDegreesOfFreedom
Code	denominatorDegreesOfFreedom
Distance : 15

11
Tree	nvars
Code	nvars
Distance : 15

12
Tree	continue;
Code	continue;
Distance : 15

13
Tree	penalty
Code	penalty
Distance : 15

14
Tree	last
Code	last
Distance : 15

15
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 15

16
Tree	setShapesVisible
Code	setShapesVisible
Distance : 15

17
Tree	scale
Code	scale
Distance : 15

18
Tree	emptiedClinitMethods
Code	emptiedClinitMethods
Distance : 15

19
Tree	MockControl
Code	MockControl
Distance : 15

20
Tree	distribution
Code	distribution
Distance : 15

21
Tree	fail
Code	fail
Distance : 15

22
Tree	addAnswer
Code	addAnswer
Distance : 15

23
Tree	TestSubObject
Code	TestSubObject
Distance : 15

24
Tree	position
Code	position
Distance : 15

25
Tree	reportAnd
Code	reportAnd
Distance : 15

26
Tree	pow
Code	pow
Distance : 15

27
Tree	iStartMillis
Code	iStartMillis
Distance : 15

28
Tree	abstract
Code	abstract
Distance : 15

29
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 15

30
Tree	i
Code	i
Distance : 15

31
Tree	gamma
Code	gamma
Distance : 15

32
Tree	LastArguments
Code	LastArguments
Distance : 15

33
Tree	doNothing
Code	doNothing
Distance : 15

34
Tree	-
Code	-
Distance : 15

35
Tree	stream
Code	stream
Distance : 15

36
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 15

37
Tree	testTypes
Code	testTypes
Distance : 15

38
Tree	random
Code	random
Distance : 15

39
Tree	Object
Code	Object
Distance : 15

40
Tree	returnChar
Code	returnChar
Distance : 15

41
Tree	N
Code	N
Distance : 15

42
Tree	returnZero
Code	returnZero
Distance : 15

43
Tree	ComposableFunction.CEIL
Code	ComposableFunction.CEIL
Distance : 15

44
Tree	checkLocalityOfMarkedCalls
Code	checkLocalityOfMarkedCalls
Distance : 15

45
Tree	p2.vector
Code	p2.vector
Distance : 15

46
Tree	MockitoJUnitRunner
Code	MockitoJUnitRunner
Distance : 15

47
Tree	fieldName
Code	fieldName
Distance : 15

48
Tree	o.length
Code	o.length
Distance : 15

49
Tree	startParams
Code	startParams
Distance : 15

50
Tree	config
Code	config
Distance : 15

51
Tree	Gamma
Code	Gamma
Distance : 15

52
Tree	addResult
Code	addResult
Distance : 15

53
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 15

54
Tree	secRand
Code	secRand
Distance : 15

55
Tree	BigFractionMatrixConverter
Code	BigFractionMatrixConverter
Distance : 15

56
Tree	stubVoid
Code	stubVoid
Distance : 15

57
Tree	objects
Code	objects
Distance : 15

58
Tree	CompositeFormat
Code	CompositeFormat
Distance : 15

59
Tree	zones
Code	zones
Distance : 15

60
Tree	YearWeekType
Code	YearWeekType
Distance : 15

61
Tree	triple
Code	triple
Distance : 15

62
Tree	return
Code	return
Distance : 14

63
Tree	MockHandler
Code	MockHandler
Distance : 15

64
Tree	period
Code	period
Distance : 15

65
Tree	init
Code	init
Distance : 15

66
Tree	strictly
Code	strictly
Distance : 15

67
Tree	mean
Code	mean
Distance : 15

68
Tree	stubbed
Code	stubbed
Distance : 15

69
Tree	NestedClassWithNoArgConstructor
Code	NestedClassWithNoArgConstructor
Distance : 15

70
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 15

71
Tree	numerator
Code	numerator
Distance : 15

72
Tree	iValues
Code	iValues
Distance : 15

73
Tree	clone.zValues
Code	clone.zValues
Distance : 15

74
Tree	ContainsExtraTypeInfo
Code	ContainsExtraTypeInfo
Distance : 15

75
Tree	output.compiledCode
Code	output.compiledCode
Distance : 15

76
Tree	ISO8601TimeZoneStrategy
Code	ISO8601TimeZoneStrategy
Distance : 15

77
Tree	chronology
Code	chronology
Distance : 15

78
Tree	checkRelative
Code	checkRelative
Distance : 15

79
Tree	reportNot
Code	reportNot
Distance : 15

80
Tree	findStaticMembers
Code	findStaticMembers
Distance : 15

81
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 15

82
Tree	()
Code	()
Distance : 14

83
Tree	S
Code	S
Distance : 15

84
Tree	BackgroundInitializerTestImpl
Code	BackgroundInitializerTestImpl
Distance : 15

85
Tree	FieldUtils
Code	FieldUtils
Distance : 15

86
Tree	synchronized
Code	synchronized
Distance : 15

87
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 15

88
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 15

89
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 15

90
Tree	scriptRoot
Code	scriptRoot
Distance : 15

91
Tree	stubber
Code	stubber
Distance : 15

92
Tree	out.value
Code	out.value
Distance : 15

93
Tree	paint
Code	paint
Distance : 15

94
Tree	doAnswer
Code	doAnswer
Distance : 15

95
Tree	setStartMillis
Code	setStartMillis
Distance : 15

96
Tree	ret
Code	ret
Distance : 15

97
Tree	new
Code	new
Distance : 15

98
Tree	Args
Code	Args
Distance : 15

99
Tree	validateNodeType
Code	validateNodeType
Distance : 15

100
Tree	setField
Code	setField
Distance : 15

101
Tree	setSeedInternal
Code	setSeedInternal
Distance : 15

102
Tree	throwable
Code	throwable
Distance : 15

103
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 15

104
Tree	SerialUtils
Code	SerialUtils
Distance : 15

105
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 15

106
Tree	T
Code	T
Distance : 15

107
Tree	messageContains
Code	messageContains
Distance : 15

108
Tree	(
Code	(
Distance : 14

109
Tree	break;
Code	break;
Distance : 15

110
Tree	logBeta
Code	logBeta
Distance : 15

111
Tree	private
Code	private
Distance : 15

112
Tree	final
Code	final
Distance : 15

113
Tree	for
Code	for
Distance : 15

114
Tree	try
Code	try
Distance : 15

115
Tree	static
Code	static
Distance : 15

116
Tree	if
Code	if
Distance : 15

117
Tree	@
Code	@
Distance : 15

118
Tree	super();
Code	super();
Distance : 15

119
Tree	++
Code	++
Distance : 15

120
Tree	:
Code	:
Distance : 15

121
Tree	public
Code	public
Distance : 15

122
Tree	mockitoStubber
Code	mockitoStubber
Distance : 15

123
Tree	
Code	
Distance : 15

124
Tree	Paint
Code	Paint
Distance : 15

125
Tree	<=
Code	<=
Distance : 15

126
Tree	{}
Code	{}
Distance : 15

127
Tree	AbstractScope
Code	AbstractScope
Distance : 15

128
Tree	catch
Code	catch
Distance : 15

129
Tree	]
Code	]
Distance : 15

130
Tree	&&
Code	&&
Distance : 15

131
Tree	testModules
Code	testModules
Distance : 15

132
Tree	float
Code	float
Distance : 15

133
Tree	fieldType
Code	fieldType
Distance : 15

134
Tree	checkInitialize
Code	checkInitialize
Distance : 15

135
Tree	DateTimeUtils
Code	DateTimeUtils
Distance : 15

136
Tree	doReturn
Code	doReturn
Distance : 15

137
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 15

138
Tree	;
Code	;
Distance : 14

139
Tree	extends
Code	extends
Distance : 15

140
Tree	fn
Code	fn
Distance : 15

141
Tree	traversal
Code	traversal
Distance : 15

142
Tree	getLastArguments
Code	getLastArguments
Distance : 15

143
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 15

144
Tree	assertTrue
Code	assertTrue
Distance : 15

145
Tree	Comparable
Code	Comparable
Distance : 15

146
Tree	path
Code	path
Distance : 15

147
Tree	k
Code	k
Distance : 15

148
Tree	Result
Code	Result
Distance : 15

149
Tree	CharSequence
Code	CharSequence
Distance : 15

150
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 15

151
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 15

152
Tree	IMethods
Code	IMethods
Distance : 15

153
Tree	LogBeta
Code	LogBeta
Distance : 15

154
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 15

155
Tree	&
Code	&
Distance : 15

156
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 15

157
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 15

158
Tree	notNull
Code	notNull
Distance : 15

159
Tree	node
Code	node
Distance : 15

160
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 15

161
Tree	j
Code	j
Distance : 15

162
Tree	value
Code	value
Distance : 15

163
Tree	this
Code	this
Distance : 15

164
Tree	getEndMillis
Code	getEndMillis
Distance : 15

165
Tree	newValues
Code	newValues
Distance : 15

166
Tree	protected
Code	protected
Distance : 15

167
Tree	do
Code	do
Distance : 15

168
Tree	doThrow
Code	doThrow
Distance : 15

169
Tree	copyIn
Code	copyIn
Distance : 15

170
Tree	verify
Code	verify
Distance : 15

171
Tree	+=
Code	+=
Distance : 15

172
Tree	Answer
Code	Answer
Distance : 15

173
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 15

174
Tree	checkArgument
Code	checkArgument
Distance : 15

175
Tree	Rectangle2D
Code	Rectangle2D
Distance : 15

176
Tree	setBaseShapesVisible
Code	setBaseShapesVisible
Distance : 15

177
Tree	LocalizedFormats.CANNOT_PARSE
Code	LocalizedFormats.CANNOT_PARSE
Distance : 15

178
Tree	source.moment
Code	source.moment
Distance : 15

179
Tree	setEntry
Code	setEntry
Distance : 15

180
Tree	in
Code	in
Distance : 15

181
Tree	coeff
Code	coeff
Distance : 15

182
Tree	fsCalled
Code	fsCalled
Distance : 15

183
Tree	seed
Code	seed
Distance : 15

184
Tree	addExpr
Code	addExpr
Distance : 15

185
Tree	visitForOf
Code	visitForOf
Distance : 15

186
Tree	assertGetNameResult
Code	assertGetNameResult
Distance : 15

187
Tree	DefaultToStringStyle
Code	DefaultToStringStyle
Distance : 15

188
Tree	testOk
Code	testOk
Distance : 15

189
Tree	omega
Code	omega
Distance : 15

190
Tree	ParamChecks
Code	ParamChecks
Distance : 15

191
Tree	Stroke
Code	Stroke
Distance : 15

192
Tree	key
Code	key
Distance : 15

193
Tree	sampleStats
Code	sampleStats
Distance : 15

194
Tree	MockAccess
Code	MockAccess
Distance : 15

195
Tree	real
Code	real
Distance : 15

196
Tree	zFormat
Code	zFormat
Distance : 15

197
Tree	anyObject
Code	anyObject
Distance : 15

198
Tree	iEndMillis
Code	iEndMillis
Distance : 15

199
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 15

========================================================================


========================================================================
Example Number: 23
Parent Code is: 
String code = toSource ( root , sourceMap ) ;
-------------------------------------------------------------------------------
Child code is: 
String code = toSource ( root , sourceMap , inputSeqNum == NUMBER_CONSTANT ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (802{val=toSource}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=sourceMap}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (802{val=toSource}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=sourceMap}) (234{val=,}) (27 (800{val=inputSeqNum}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/64/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	String code = toSource ( root , code ) ; array
Code	String code = toSource ( root , code ) ; array
Distance : 6

1
Tree	String code = toSource ( root , code ) ; lines
Code	String code = toSource ( root , code ) ; lines
Distance : 6

2
Tree	String code = toSource ( root , code ) ; *
Code	String code = toSource ( root , code ) ; *
Distance : 6

3
Tree	String code = toSource ( root , code ) ; m
Code	String code = toSource ( root , code ) ; m
Distance : 6

4
Tree	String code = toSource ( root , code ) ; type
Code	String code = toSource ( root , code ) ; type
Distance : 6

5
Tree	String code = toSource ( root , code ) ; List
Code	String code = toSource ( root , code ) ; List
Distance : 6

6
Tree	String code = toSource ( root , code ) ; c
Code	String code = toSource ( root , code ) ; c
Distance : 6

7
Tree	String code = toSource ( root , code ) ; fail
Code	String code = toSource ( root , code ) ; fail
Distance : 6

8
Tree	String code = toSource ( root , code ) ; :
Code	String code = toSource ( root , code ) ; :
Distance : 6

9
Tree	String code = toSource ( root , code ) ; Args
Code	String code = toSource ( root , code ) ; Args
Distance : 6

10
Tree	String root = toSource ( code , code ) ;
Code	String root = toSource ( code , code ) ;
Distance : 7

11
Tree	String root = toSource ( root , code ) ;
Code	String root = toSource ( root , code ) ;
Distance : 6

12
Tree	String sourceMap = toSource ( root , root ) ;
Code	String sourceMap = toSource ( root , root ) ;
Distance : 6

13
Tree	String sourceMap = toSource ( sourceMap , sourceMap ) ;
Code	String sourceMap = toSource ( sourceMap , sourceMap ) ;
Distance : 6

14
Tree	String code = toSource ( root , code ) ;
Code	String code = toSource ( root , code ) ;
Distance : 5

15
Tree	String root = toSource ( root , sourceMap ) ;
Code	String root = toSource ( root , sourceMap ) ;
Distance : 5

16
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

17
Tree	String code = toSource ( sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap ) ;
Distance : 5

18
Tree	String code = toSource ( root , root ) ;
Code	String code = toSource ( root , root ) ;
Distance : 5

19
Tree	String sourceMap = toSource ( root , code ) ;
Code	String sourceMap = toSource ( root , code ) ;
Distance : 6

20
Tree	String sourceMap = toSource ( root , sourceMap ) ;
Code	String sourceMap = toSource ( root , sourceMap ) ;
Distance : 5

21
Tree	String sourceMap = toSource ( sourceMap , code ) ;
Code	String sourceMap = toSource ( sourceMap , code ) ;
Distance : 6

22
Tree	String code = toSource ( root , code ) ; boolean
Code	String code = toSource ( root , code ) ; boolean
Distance : 6

23
Tree	String code = toSource ( code , sourceMap ) ;
Code	String code = toSource ( code , sourceMap ) ;
Distance : 5

24
Tree	String code = toSource ( root , code ) ; join
Code	String code = toSource ( root , code ) ; join
Distance : 6

25
Tree	String code = toSource ( root , code ) ; getInstance
Code	String code = toSource ( root , code ) ; getInstance
Distance : 6

26
Tree	String code = toSource ( root , code ) ; fireChangeEvent
Code	String code = toSource ( root , code ) ; fireChangeEvent
Distance : 6

27
Tree	String code = toSource ( root , code ) ; str
Code	String code = toSource ( root , code ) ; str
Distance : 6

28
Tree	String code = toSource ( root , code ) ; testSame
Code	String code = toSource ( root , code ) ; testSame
Distance : 6

29
Tree	String code = toSource ( root , code ) ; createIllegalArgumentException
Code	String code = toSource ( root , code ) ; createIllegalArgumentException
Distance : 6

30
Tree	String code = toSource ( root , code ) ; x
Code	String code = toSource ( root , code ) ; x
Distance : 6

31
Tree	String code = toSource ( root , code ) ; LINE_JOINER
Code	String code = toSource ( root , code ) ; LINE_JOINER
Distance : 6

32
Tree	String code = toSource ( root , code ) ; IllegalArgumentException
Code	String code = toSource ( root , code ) ; IllegalArgumentException
Distance : 6

33
Tree	String code = toSource ( root , code ) ; expected
Code	String code = toSource ( root , code ) ; expected
Distance : 6

34
Tree	String code = toSource ( root , code ) ; FastMath
Code	String code = toSource ( root , code ) ; FastMath
Distance : 6

35
Tree	String code = toSource ( root , code ) ; reportCodeChange
Code	String code = toSource ( root , code ) ; reportCodeChange
Distance : 6

36
Tree	String code = toSource ( root , code ) ; name
Code	String code = toSource ( root , code ) ; name
Distance : 6

37
Tree	String code = toSource ( root , code ) ; t
Code	String code = toSource ( root , code ) ; t
Distance : 6

38
Tree	String code = toSource ( root , code ) ; checkArgument
Code	String code = toSource ( root , code ) ; checkArgument
Distance : 6

39
Tree	String code = toSource ( root , code ) ; <>
Code	String code = toSource ( root , code ) ; <>
Distance : 6

40
Tree	String code = toSource ( root , code ) ; invocation
Code	String code = toSource ( root , code ) ; invocation
Distance : 6

41
Tree	String code = toSource ( root , code ) ; result
Code	String code = toSource ( root , code ) ; result
Distance : 6

42
Tree	String code = toSource ( root , code ) ; field
Code	String code = toSource ( root , code ) ; field
Distance : 6

43
Tree	String code = toSource ( root , code ) ; try
Code	String code = toSource ( root , code ) ; try
Distance : 6

44
Tree	String code = toSource ( root , code ) ; paint
Code	String code = toSource ( root , code ) ; paint
Distance : 6

45
Tree	String code = toSource ( root , code ) ; parent
Code	String code = toSource ( root , code ) ; parent
Distance : 6

46
Tree	String code = toSource ( root , code ) ; ArrayList
Code	String code = toSource ( root , code ) ; ArrayList
Distance : 6

47
Tree	String code = toSource ( root , code ) ; serialised
Code	String code = toSource ( root , code ) ; serialised
Distance : 6

48
Tree	String code = toSource ( root , code ) ; assertThat
Code	String code = toSource ( root , code ) ; assertThat
Distance : 6

49
Tree	String sourceMap = toSource ( root , sourceMap ) ;
Code	String sourceMap = toSource ( root , sourceMap ) ;
Distance : 5

50
Tree	String sourceMap = toSource ( code , sourceMap ) ;
Code	String sourceMap = toSource ( code , sourceMap ) ;
Distance : 6

51
Tree	String code = toSource ( sourceMap , root ) ;
Code	String code = toSource ( sourceMap , root ) ;
Distance : 5

52
Tree	String sourceMap = toSource ( root , sourceMap ) ;
Code	String sourceMap = toSource ( root , sourceMap ) ;
Distance : 5

53
Tree	String root = toSource ( sourceMap , root ) ;
Code	String root = toSource ( sourceMap , root ) ;
Distance : 6

54
Tree	String code = toSource ( code , root ) ;
Code	String code = toSource ( code , root ) ;
Distance : 6

55
Tree	String root = toSource ( code , root ) ;
Code	String root = toSource ( code , root ) ;
Distance : 7

56
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

57
Tree	String code = toSource ( root , code ) ;
Code	String code = toSource ( root , code ) ;
Distance : 5

58
Tree	String sourceMap = toSource ( root , root ) ;
Code	String sourceMap = toSource ( root , root ) ;
Distance : 6

59
Tree	String root = toSource ( root , code ) ;
Code	String root = toSource ( root , code ) ;
Distance : 6

60
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

61
Tree	String root = toSource ( root , sourceMap ) ;
Code	String root = toSource ( root , sourceMap ) ;
Distance : 5

62
Tree	String sourceMap = toSource ( sourceMap , sourceMap ) ;
Code	String sourceMap = toSource ( sourceMap , sourceMap ) ;
Distance : 6

63
Tree	String sourceMap = toSource ( code , sourceMap ) ;
Code	String sourceMap = toSource ( code , sourceMap ) ;
Distance : 6

64
Tree	String code = toSource ( sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap ) ;
Distance : 5

65
Tree	String code = toSource ( root , root ) ;
Code	String code = toSource ( root , root ) ;
Distance : 5

66
Tree	String root = toSource ( sourceMap , sourceMap ) ;
Code	String root = toSource ( sourceMap , sourceMap ) ;
Distance : 6

67
Tree	String root = toSource ( root , root ) ;
Code	String root = toSource ( root , root ) ;
Distance : 6

68
Tree	String code = toSource ( sourceMap , code ) ;
Code	String code = toSource ( sourceMap , code ) ;
Distance : 5

69
Tree	String sourceMap = toSource ( sourceMap , root ) ;
Code	String sourceMap = toSource ( sourceMap , root ) ;
Distance : 6

70
Tree	String root = toSource ( sourceMap , code ) ;
Code	String root = toSource ( sourceMap , code ) ;
Distance : 6

71
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

72
Tree	String root = toSource ( code , sourceMap ) ;
Code	String root = toSource ( code , sourceMap ) ;
Distance : 6

73
Tree	String sourceMap = toSource ( root , sourceMap ) ;
Code	String sourceMap = toSource ( root , sourceMap ) ;
Distance : 5

74
Tree	String code = toSource ( code , sourceMap ) ;
Code	String code = toSource ( code , sourceMap ) ;
Distance : 5

75
Tree	String code = toSource ( sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap ) ;
Distance : 5

76
Tree	String sourceMap = toSource ( code , code ) ;
Code	String sourceMap = toSource ( code , code ) ;
Distance : 7

77
Tree	String code = toSource ( code , root ) ;
Code	String code = toSource ( code , root ) ;
Distance : 6

78
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

79
Tree	String code = toSource ( root , code ) ;
Code	String code = toSource ( root , code ) ;
Distance : 5

80
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

81
Tree	String sourceMap = toSource ( root , code ) ;
Code	String sourceMap = toSource ( root , code ) ;
Distance : 6

82
Tree	String code = toSource ( sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap ) ;
Distance : 5

83
Tree	String code = toSource ( root , root ) ;
Code	String code = toSource ( root , root ) ;
Distance : 5

84
Tree	String code = toSource ( sourceMap , code ) ;
Code	String code = toSource ( sourceMap , code ) ;
Distance : 5

85
Tree	String code = toSource ( code , sourceMap ) ;
Code	String code = toSource ( code , sourceMap ) ;
Distance : 5

86
Tree	String code = toSource ( code , code ) ;
Code	String code = toSource ( code , code ) ;
Distance : 6

87
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

88
Tree	String sourceMap = toSource ( code , root ) ;
Code	String sourceMap = toSource ( code , root ) ;
Distance : 7

89
Tree	String code = toSource ( sourceMap , root ) ;
Code	String code = toSource ( sourceMap , root ) ;
Distance : 5

90
Tree	String code = toSource ( code , code ) ;
Code	String code = toSource ( code , code ) ;
Distance : 6

91
Tree	String root = toSource ( root , sourceMap ) ;
Code	String root = toSource ( root , sourceMap ) ;
Distance : 5

92
Tree	String code = toSource ( code , sourceMap ) ;
Code	String code = toSource ( code , sourceMap ) ;
Distance : 5

93
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

94
Tree	String root = toSource ( root , sourceMap ) ;
Code	String root = toSource ( root , sourceMap ) ;
Distance : 5

95
Tree	String code = toSource ( root , root ) ;
Code	String code = toSource ( root , root ) ;
Distance : 5

96
Tree	String root = toSource ( root , root ) ;
Code	String root = toSource ( root , root ) ;
Distance : 6

97
Tree	String root = toSource ( sourceMap , sourceMap ) ;
Code	String root = toSource ( sourceMap , sourceMap ) ;
Distance : 6

98
Tree	String code = toSource ( root , code ) ; Test
Code	String code = toSource ( root , code ) ; Test
Distance : 6

99
Tree	String code = toSource ( root , code ) ;
Code	String code = toSource ( root , code ) ;
Distance : 5

100
Tree	String code = toSource ( root , code ) ; p
Code	String code = toSource ( root , code ) ; p
Distance : 6

101
Tree	String code = toSource ( root , code ) ; ()
Code	String code = toSource ( root , code ) ; ()
Distance : 6

102
Tree	String code = toSource ( root , code ) ; }
Code	String code = toSource ( root , code ) ; }
Distance : 6

103
Tree	String code = toSource ( root , code ) ; =
Code	String code = toSource ( root , code ) ; =
Distance : 6

104
Tree	String code = toSource ( root , code ) ; @
Code	String code = toSource ( root , code ) ; @
Distance : 6

105
Tree	String code = toSource ( root , code ) ; double
Code	String code = toSource ( root , code ) ; double
Distance : 6

106
Tree	String code = toSource ( root , code ) ; <s>
Code	String code = toSource ( root , code ) ; <s>
Distance : 6

107
Tree	String code = toSource ( root , code ) ; MathRuntimeException
Code	String code = toSource ( root , code ) ; MathRuntimeException
Distance : 6

108
Tree	String code = toSource ( root , code ) ; class
Code	String code = toSource ( root , code ) ; class
Distance : 6

109
Tree	String code = toSource ( root , code ) ; f
Code	String code = toSource ( root , code ) ; f
Distance : 6

110
Tree	String code = toSource ( root , code ) ; Override
Code	String code = toSource ( root , code ) ; Override
Distance : 6

111
Tree	String code = toSource ( root , code ) ; mock
Code	String code = toSource ( root , code ) ; mock
Distance : 6

112
Tree	String code = toSource ( root , code ) ; Object
Code	String code = toSource ( root , code ) ; Object
Distance : 6

113
Tree	String code = toSource ( root , code ) ; ParamChecks
Code	String code = toSource ( root , code ) ; ParamChecks
Distance : 6

114
Tree	String code = toSource ( root , code ) ; externs
Code	String code = toSource ( root , code ) ; externs
Distance : 6

115
Tree	String root = toSource ( code , sourceMap ) ;
Code	String root = toSource ( code , sourceMap ) ;
Distance : 6

116
Tree	String code = toSource ( root , code ) ; {
Code	String code = toSource ( root , code ) ; {
Distance : 6

117
Tree	String code = toSource ( root , code ) ; new
Code	String code = toSource ( root , code ) ; new
Distance : 6

118
Tree	String code = toSource ( root , code ) ; notifyListeners
Code	String code = toSource ( root , code ) ; notifyListeners
Distance : 6

119
Tree	String code = toSource ( root , code ) ; NUMBER_CONSTANT
Code	String code = toSource ( root , code ) ; NUMBER_CONSTANT
Distance : 6

120
Tree	String code = toSource ( root , code ) ; STRING_CONSTANT
Code	String code = toSource ( root , code ) ; STRING_CONSTANT
Distance : 6

121
Tree	String code = toSource ( root , code ) ; nullNotPermitted
Code	String code = toSource ( root , code ) ; nullNotPermitted
Distance : 6

122
Tree	String code = toSource ( root , code ) ; []
Code	String code = toSource ( root , code ) ; []
Distance : 6

123
Tree	String code = toSource ( root , code ) ; !
Code	String code = toSource ( root , code ) ; !
Distance : 6

124
Tree	String code = toSource ( root , code ) ; assertEquals
Code	String code = toSource ( root , code ) ; assertEquals
Distance : 6

125
Tree	String code = toSource ( root , code ) ; super
Code	String code = toSource ( root , code ) ; super
Distance : 6

126
Tree	String code = toSource ( root , code ) ; i
Code	String code = toSource ( root , code ) ; i
Distance : 6

127
Tree	String code = toSource ( root , code ) ; test
Code	String code = toSource ( root , code ) ; test
Distance : 6

128
Tree	String code = toSource ( root , code ) ; checkState
Code	String code = toSource ( root , code ) ; checkState
Distance : 6

129
Tree	String code = toSource ( root , code ) ; return
Code	String code = toSource ( root , code ) ; return
Distance : 6

130
Tree	String code = toSource ( root , code ) ; int
Code	String code = toSource ( root , code ) ; int
Distance : 6

131
Tree	String code = toSource ( root , code ) ; &&
Code	String code = toSource ( root , code ) ; &&
Distance : 6

132
Tree	String code = toSource ( root , code ) ; false
Code	String code = toSource ( root , code ) ; false
Distance : 6

133
Tree	String code = toSource ( root , code ) ; !=
Code	String code = toSource ( root , code ) ; !=
Distance : 6

134
Tree	String code = toSource ( root , code ) ; value
Code	String code = toSource ( root , code ) ; value
Distance : 6

135
Tree	String code = toSource ( root , code ) ; T
Code	String code = toSource ( root , code ) ; T
Distance : 6

136
Tree	String code = toSource ( root , code ) ; NodeTraversal
Code	String code = toSource ( root , code ) ; NodeTraversal
Distance : 6

137
Tree	String code = toSource ( root , code ) ; +
Code	String code = toSource ( root , code ) ; +
Distance : 6

138
Tree	String code = toSource ( root , code ) ; ,
Code	String code = toSource ( root , code ) ; ,
Distance : 6

139
Tree	String code = toSource ( root , code ) ; .
Code	String code = toSource ( root , code ) ; .
Distance : 6

140
Tree	String code = toSource ( root , code ) ; )
Code	String code = toSource ( root , code ) ; )
Distance : 6

141
Tree	String code = toSource ( root , code ) ; ;
Code	String code = toSource ( root , code ) ; ;
Distance : 6

142
Tree	String code = toSource ( root , code ) ; String
Code	String code = toSource ( root , code ) ; String
Distance : 6

143
Tree	String code = toSource ( root , code ) ; n
Code	String code = toSource ( root , code ) ; n
Distance : 6

144
Tree	String code = toSource ( root , code ) ; source
Code	String code = toSource ( root , code ) ; source
Distance : 6

145
Tree	String code = toSource ( root , code ) ; Class
Code	String code = toSource ( root , code ) ; Class
Distance : 6

146
Tree	String code = toSource ( root , code ) ; ex
Code	String code = toSource ( root , code ) ; ex
Distance : 6

147
Tree	String code = toSource ( root , code ) ; null
Code	String code = toSource ( root , code ) ; null
Distance : 6

148
Tree	String code = toSource ( root , code ) ; <blank>
Code	String code = toSource ( root , code ) ; <blank>
Distance : 6

149
Tree	String code = toSource ( root , code ) ; catch
Code	String code = toSource ( root , code ) ; catch
Distance : 6

150
Tree	String code = toSource ( root , code ) ; StrBuilder
Code	String code = toSource ( root , code ) ; StrBuilder
Distance : 6

151
Tree	String code = toSource ( root , code ) ; public
Code	String code = toSource ( root , code ) ; public
Distance : 6

152
Tree	String code = toSource ( root , code ) ; final
Code	String code = toSource ( root , code ) ; final
Distance : 6

153
Tree	String code = toSource ( root , code ) ; this
Code	String code = toSource ( root , code ) ; this
Distance : 6

154
Tree	String code = toSource ( root , code ) ; <
Code	String code = toSource ( root , code ) ; <
Distance : 6

155
Tree	String code = toSource ( root , code ) ; if
Code	String code = toSource ( root , code ) ; if
Distance : 6

156
Tree	String code = toSource ( root , code ) ; setUp
Code	String code = toSource ( root , code ) ; setUp
Distance : 6

157
Tree	String code = toSource ( root , code ) ; TestUtilities
Code	String code = toSource ( root , code ) ; TestUtilities
Distance : 6

158
Tree	String code = toSource ( root , code ) ; js
Code	String code = toSource ( root , code ) ; js
Distance : 6

159
Tree	String code = toSource ( root , code ) ; Invocation
Code	String code = toSource ( root , code ) ; Invocation
Distance : 6

160
Tree	String code = toSource ( root , code ) ; for
Code	String code = toSource ( root , code ) ; for
Distance : 6

161
Tree	String code = toSource ( root , code ) ; equals
Code	String code = toSource ( root , code ) ; equals
Distance : 6

162
Tree	String code = toSource ( root , code ) ; d
Code	String code = toSource ( root , code ) ; d
Distance : 6

163
Tree	String code = toSource ( root , code ) ; compiler
Code	String code = toSource ( root , code ) ; compiler
Distance : 6

164
Tree	String code = toSource ( root , code ) ; add
Code	String code = toSource ( root , code ) ; add
Distance : 6

165
Tree	String code = toSource ( root , code ) ; >
Code	String code = toSource ( root , code ) ; >
Distance : 6

166
Tree	String code = toSource ( root , code ) ; data
Code	String code = toSource ( root , code ) ; data
Distance : 6

167
Tree	String code = toSource ( root , code ) ; String
Code	String code = toSource ( root , code ) ; String
Distance : 6

168
Tree	String code = toSource ( root , code ) ; NodeUtil
Code	String code = toSource ( root , code ) ; NodeUtil
Distance : 6

169
Tree	String code = toSource ( root , code ) ; /
Code	String code = toSource ( root , code ) ; /
Distance : 6

170
Tree	String code = toSource ( root , code ) ; assertTrue
Code	String code = toSource ( root , code ) ; assertTrue
Distance : 6

171
Tree	String code = toSource ( root , code ) ; Exception
Code	String code = toSource ( root , code ) ; Exception
Distance : 6

172
Tree	String code = toSource ( root , code ) ; Assert
Code	String code = toSource ( root , code ) ; Assert
Distance : 6

173
Tree	String code = toSource ( root , code ) ; ?
Code	String code = toSource ( root , code ) ; ?
Distance : 6

174
Tree	String code = toSource ( root , code ) ; long
Code	String code = toSource ( root , code ) ; long
Distance : 6

175
Tree	String code = toSource ( root , code ) ; ]
Code	String code = toSource ( root , code ) ; ]
Distance : 6

176
Tree	String code = toSource ( root , code ) ; [
Code	String code = toSource ( root , code ) ; [
Distance : 6

177
Tree	String code = toSource ( root , code ) ; Preconditions
Code	String code = toSource ( root , code ) ; Preconditions
Distance : 6

178
Tree	String code = toSource ( root , code ) ; -
Code	String code = toSource ( root , code ) ; -
Distance : 6

179
Tree	String code = toSource ( root , code ) ; mode
Code	String code = toSource ( root , code ) ; mode
Distance : 6

180
Tree	String code = toSource ( root , code ) ; true
Code	String code = toSource ( root , code ) ; true
Distance : 6

181
Tree	String code = toSource ( root , code ) ; {}
Code	String code = toSource ( root , code ) ; {}
Distance : 6

182
Tree	String code = toSource ( root , code ) ; (
Code	String code = toSource ( root , code ) ; (
Distance : 6

183
Tree	String code = toSource ( root , code ) ; options
Code	String code = toSource ( root , code ) ; options
Distance : 6

184
Tree	String code = toSource ( root , code ) ; e
Code	String code = toSource ( root , code ) ; e
Distance : 6

185
Tree	String code = toSource ( root , code ) ; throw
Code	String code = toSource ( root , code ) ; throw
Distance : 6

186
Tree	String code = toSource ( root , code ) ; void
Code	String code = toSource ( root , code ) ; void
Distance : 6

187
Tree	String code = toSource ( root , code ) ; ==
Code	String code = toSource ( root , code ) ; ==
Distance : 6

188
Tree	String code = toSource ( root , code ) ; Integer
Code	String code = toSource ( root , code ) ; Integer
Distance : 6

189
Tree	String code = toSource ( root , code ) ; v
Code	String code = toSource ( root , code ) ; v
Distance : 6

190
Tree	String code = toSource ( root , code ) ; verify
Code	String code = toSource ( root , code ) ; verify
Distance : 6

191
Tree	String code = toSource ( root , code ) ; Node
Code	String code = toSource ( root , code ) ; Node
Distance : 6

192
Tree	String code = toSource ( root , code ) ; TestUtils
Code	String code = toSource ( root , code ) ; TestUtils
Distance : 6

193
Tree	String code = toSource ( root , code ) ; length
Code	String code = toSource ( root , code ) ; length
Distance : 6

194
Tree	String code = toSource ( root , code ) ; checkNotNull
Code	String code = toSource ( root , code ) ; checkNotNull
Distance : 6

195
Tree	String code = toSource ( root , code ) ; Fraction
Code	String code = toSource ( root , code ) ; Fraction
Distance : 6

196
Tree	String code = toSource ( root , code ) ; Math
Code	String code = toSource ( root , code ) ; Math
Distance : 6

197
Tree	String code = toSource ( root , code ) ; root
Code	String code = toSource ( root , code ) ; root
Distance : 6

198
Tree	String code = toSource ( root , code ) ; wanted
Code	String code = toSource ( root , code ) ; wanted
Distance : 6

199
Tree	String code = toSource ( root , code ) ; toString
Code	String code = toSource ( root , code ) ; toString
Distance : 6

========================================================================


========================================================================
Example Number: 24
Parent Code is: 
this . maybeAliased = ! assignNode . getParent () . isExprResult () ;
-------------------------------------------------------------------------------
Child code is: 
this . maybeAliased = NodeUtil . isExpressionResultUsed ( assignNode ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maybeAliased})) (204{val==}) (38 (207{val=!}) (32 (32 (800{val=assignNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isExprResult}) (216{val=()})))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maybeAliased})) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExpressionResultUsed}) (214{val=(}) (800{val=assignNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/45/parent/src_com_google_javascript_jscomp_RemoveUnusedVars.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	this
Code	this
Distance : 10

1
Tree	System
Code	System
Distance : 11

2
Tree	writeJsArray
Code	writeJsArray
Distance : 11

3
Tree	tableau
Code	tableau
Distance : 11

4
Tree	typeRegistry
Code	typeRegistry
Distance : 11

5
Tree	nordsieck
Code	nordsieck
Distance : 11

6
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

7
Tree	Set
Code	Set
Distance : 11

8
Tree	assertNull
Code	assertNull
Distance : 11

9
Tree	returnType
Code	returnType
Distance : 11

10
Tree	startIndex
Code	startIndex
Distance : 11

11
Tree	addListeners
Code	addListeners
Distance : 11

12
Tree	Reach.ALL
Code	Reach.ALL
Distance : 11

13
Tree	assertEarlyReferenceError
Code	assertEarlyReferenceError
Distance : 11

14
Tree	integ
Code	integ
Distance : 11

15
Tree	transpiledFeatures
Code	transpiledFeatures
Distance : 11

16
Tree	iRules
Code	iRules
Distance : 11

17
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 11

18
Tree	!=
Code	!=
Distance : 11

19
Tree	listeners
Code	listeners
Distance : 11

20
Tree	isEmptyType
Code	isEmptyType
Distance : 11

21
Tree	given
Code	given
Distance : 11

22
Tree	nullText
Code	nullText
Distance : 11

23
Tree	Class
Code	Class
Distance : 11

24
Tree	unresolvedNamedTypes
Code	unresolvedNamedTypes
Distance : 11

25
Tree	features
Code	features
Distance : 11

26
Tree	fieldNameValueSeparator
Code	fieldNameValueSeparator
Distance : 11

27
Tree	STRING_TYPE
Code	STRING_TYPE
Distance : 11

28
Tree	prefix
Code	prefix
Distance : 11

29
Tree	typeParameter
Code	typeParameter
Distance : 11

30
Tree	def
Code	def
Distance : 11

31
Tree	subtree
Code	subtree
Distance : 11

32
Tree	caseBody
Code	caseBody
Distance : 11

33
Tree	lo
Code	lo
Distance : 11

34
Tree	key
Code	key
Distance : 11

35
Tree	qrt
Code	qrt
Distance : 11

36
Tree	setMinorTickCount
Code	setMinorTickCount
Distance : 11

37
Tree	compilerOptions
Code	compilerOptions
Distance : 11

38
Tree	reinitialize
Code	reinitialize
Distance : 11

39
Tree	newChild
Code	newChild
Distance : 11

40
Tree	maybeWarnForInvalidDestructuring
Code	maybeWarnForInvalidDestructuring
Distance : 11

41
Tree	protoProps
Code	protoProps
Distance : 11

42
Tree	RandomProviderDefaultState
Code	RandomProviderDefaultState
Distance : 11

43
Tree	crossP
Code	crossP
Distance : 11

44
Tree	maybeBreak
Code	maybeBreak
Distance : 11

45
Tree	points
Code	points
Distance : 11

46
Tree	ITERABLE_TYPE
Code	ITERABLE_TYPE
Distance : 11

47
Tree	Iterator
Code	Iterator
Distance : 11

48
Tree	Streams
Code	Streams
Distance : 11

49
Tree	NULL_FUNCTION_MESSAGE
Code	NULL_FUNCTION_MESSAGE
Distance : 11

50
Tree	series
Code	series
Distance : 11

51
Tree	warning
Code	warning
Distance : 11

52
Tree	runner
Code	runner
Distance : 11

53
Tree	globalTypeInfo
Code	globalTypeInfo
Distance : 11

54
Tree	title
Code	title
Distance : 11

55
Tree	lit
Code	lit
Distance : 11

56
Tree	setReferencedType
Code	setReferencedType
Distance : 11

57
Tree	dist
Code	dist
Distance : 11

58
Tree	current
Code	current
Distance : 11

59
Tree	integrator
Code	integrator
Distance : 11

60
Tree	StepInterpolatorTestUtils
Code	StepInterpolatorTestUtils
Distance : 11

61
Tree	for
Code	for
Distance : 11

62
Tree	options
Code	options
Distance : 11

63
Tree	forAnnotations
Code	forAnnotations
Distance : 11

64
Tree	validateNullToStringStyleRegistry
Code	validateNullToStringStyleRegistry
Distance : 11

65
Tree	typeParam
Code	typeParam
Distance : 11

66
Tree	propAccess
Code	propAccess
Distance : 11

67
Tree	clone.tasks
Code	clone.tasks
Distance : 11

68
Tree	recordPropertyName
Code	recordPropertyName
Distance : 11

69
Tree	setLayout
Code	setLayout
Distance : 11

70
Tree	replacement
Code	replacement
Distance : 11

71
Tree	inliningReach
Code	inliningReach
Distance : 11

72
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 11

73
Tree	(
Code	(
Distance : 10

74
Tree	evaluations
Code	evaluations
Distance : 11

75
Tree	Type
Code	Type
Distance : 11

76
Tree	names
Code	names
Distance : 11

77
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 11

78
Tree	elem
Code	elem
Distance : 11

79
Tree	while
Code	while
Distance : 11

80
Tree	compiler
Code	compiler
Distance : 11

81
Tree	separator
Code	separator
Distance : 11

82
Tree	passes
Code	passes
Distance : 11

83
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 11

84
Tree	super
Code	super
Distance : 11

85
Tree	ignoreWarnings
Code	ignoreWarnings
Distance : 11

86
Tree	validateEmptyToStringStyleRegistry
Code	validateEmptyToStringStyleRegistry
Distance : 11

87
Tree	renderer
Code	renderer
Distance : 11

88
Tree	visible
Code	visible
Distance : 11

89
Tree	oneOverN
Code	oneOverN
Distance : 11

90
Tree	Arrays
Code	Arrays
Distance : 11

91
Tree	flag
Code	flag
Distance : 11

92
Tree	cal
Code	cal
Distance : 11

93
Tree	singletons
Code	singletons
Distance : 11

94
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 11

95
Tree	fix
Code	fix
Distance : 11

96
Tree	enableRunTypeCheckAfterProcessing
Code	enableRunTypeCheckAfterProcessing
Distance : 11

97
Tree	ImmutableSortedSet
Code	ImmutableSortedSet
Distance : 11

98
Tree	other.ns
Code	other.ns
Distance : 11

99
Tree	Args
Code	Args
Distance : 11

100
Tree	parseWarning
Code	parseWarning
Distance : 11

101
Tree	firstArg
Code	firstArg
Distance : 11

102
Tree	testSameEs6
Code	testSameEs6
Distance : 11

103
Tree	inputCharset
Code	inputCharset
Distance : 11

104
Tree	typeArguments
Code	typeArguments
Distance : 11

105
Tree	superCall
Code	superCall
Distance : 11

106
Tree	other
Code	other
Distance : 11

107
Tree	steps
Code	steps
Distance : 11

108
Tree	epsilon
Code	epsilon
Distance : 11

109
Tree	notifier
Code	notifier
Distance : 11

110
Tree	p
Code	p
Distance : 11

111
Tree	superType
Code	superType
Distance : 11

112
Tree	axis
Code	axis
Distance : 11

113
Tree	randomData
Code	randomData
Distance : 11

114
Tree	mockitoMethod
Code	mockitoMethod
Distance : 11

115
Tree	modType
Code	modType
Distance : 11

116
Tree	Collection
Code	Collection
Distance : 11

117
Tree	parent
Code	parent
Distance : 11

118
Tree	NUMBER_TYPE
Code	NUMBER_TYPE
Distance : 11

119
Tree	clone.rows
Code	clone.rows
Distance : 11

120
Tree	b1
Code	b1
Distance : 11

121
Tree	markConstAndCopyJsDoc
Code	markConstAndCopyJsDoc
Distance : 11

122
Tree	property
Code	property
Distance : 11

123
Tree	iInstantConverters
Code	iInstantConverters
Distance : 11

124
Tree	cachedU
Code	cachedU
Distance : 11

125
Tree	dY
Code	dY
Distance : 11

126
Tree	preciseType
Code	preciseType
Distance : 11

127
Tree	CharRange
Code	CharRange
Distance : 11

128
Tree	xval
Code	xval
Distance : 11

129
Tree	item
Code	item
Distance : 11

130
Tree	stopTime
Code	stopTime
Distance : 11

131
Tree	getSectionOutlinesVisible
Code	getSectionOutlinesVisible
Distance : 11

132
Tree	r1
Code	r1
Distance : 11

133
Tree	layer
Code	layer
Distance : 11

134
Tree	delegatedInstance
Code	delegatedInstance
Distance : 11

135
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 11

136
Tree	inputs
Code	inputs
Distance : 11

137
Tree	normps
Code	normps
Distance : 11

138
Tree	clone.legendLine
Code	clone.legendLine
Distance : 11

139
Tree	duration
Code	duration
Distance : 11

140
Tree	expectedMatchersSize
Code	expectedMatchersSize
Distance : 11

141
Tree	coeff
Code	coeff
Distance : 11

142
Tree	computeEscapedEs6
Code	computeEscapedEs6
Distance : 11

143
Tree	InvocationMatcher
Code	InvocationMatcher
Distance : 11

144
Tree	fireDatasetChanged
Code	fireDatasetChanged
Distance : 11

145
Tree	canonicalName
Code	canonicalName
Distance : 11

146
Tree	ratio
Code	ratio
Distance : 11

147
Tree	[
Code	[
Distance : 11

148
Tree	insets
Code	insets
Distance : 11

149
Tree	Reach.NONE
Code	Reach.NONE
Distance : 11

150
Tree	checkState
Code	checkState
Distance : 11

151
Tree	decomposition
Code	decomposition
Distance : 11

152
Tree	nameGenerator
Code	nameGenerator
Distance : 11

153
Tree	ref.scope
Code	ref.scope
Distance : 11

154
Tree	mockingProgress
Code	mockingProgress
Distance : 11

155
Tree	BOTTOM_OBJECT
Code	BOTTOM_OBJECT
Distance : 11

156
Tree	td
Code	td
Distance : 11

157
Tree	unused
Code	unused
Distance : 11

158
Tree	destinationIndex
Code	destinationIndex
Distance : 11

159
Tree	VECTOR_LENGTHS_MISMATCH
Code	VECTOR_LENGTHS_MISMATCH
Distance : 11

160
Tree	iZone
Code	iZone
Distance : 11

161
Tree	emptyToStringStyleRegistry
Code	emptyToStringStyleRegistry
Distance : 11

162
Tree	PlaneAngleRadians
Code	PlaneAngleRadians
Distance : 11

163
Tree	languageIn
Code	languageIn
Distance : 11

164
Tree	EXTERNS
Code	EXTERNS
Distance : 11

165
Tree	rings
Code	rings
Distance : 11

166
Tree	currentModule.importsByLongRequiredName
Code	currentModule.importsByLongRequiredName
Distance : 11

167
Tree	yDotK
Code	yDotK
Distance : 11

168
Tree	nanoTime
Code	nanoTime
Distance : 11

169
Tree	registry
Code	registry
Distance : 11

170
Tree	empiricalDistribution
Code	empiricalDistribution
Distance : 11

171
Tree	assertSame
Code	assertSame
Distance : 11

172
Tree	dateFormat
Code	dateFormat
Distance : 11

173
Tree	scalar
Code	scalar
Distance : 11

174
Tree	setLanguageOut
Code	setLanguageOut
Distance : 11

175
Tree	location
Code	location
Distance : 11

176
Tree	fields.year
Code	fields.year
Distance : 11

177
Tree	String
Code	String
Distance : 11

178
Tree	interfaces
Code	interfaces
Distance : 11

179
Tree	qr
Code	qr
Distance : 11

180
Tree	draw
Code	draw
Distance : 11

181
Tree	coeff1
Code	coeff1
Distance : 11

182
Tree	tracker
Code	tracker
Distance : 11

183
Tree	Coordinates3D
Code	Coordinates3D
Distance : 11

184
Tree	endIndex
Code	endIndex
Distance : 11

185
Tree	shortName
Code	shortName
Distance : 11

186
Tree	generator
Code	generator
Distance : 11

187
Tree	maybeWin
Code	maybeWin
Distance : 11

188
Tree	clone.data
Code	clone.data
Distance : 11

189
Tree	require
Code	require
Distance : 11

190
Tree	cachedD
Code	cachedD
Distance : 11

191
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 11

192
Tree	seenNames
Code	seenNames
Distance : 11

193
Tree	assertNotNull
Code	assertNotNull
Distance : 11

194
Tree	initTraversal
Code	initTraversal
Distance : 11

195
Tree	declList
Code	declList
Distance : 11

196
Tree	code
Code	code
Distance : 11

197
Tree	validateBlock
Code	validateBlock
Distance : 11

198
Tree	null
Code	null
Distance : 11

199
Tree	declRetType
Code	declRetType
Distance : 11

========================================================================


========================================================================
Example Number: 25
Parent Code is: 
if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( ( x < NUMBER_CONSTANT  negativeZero ) && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=prev}) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (800{val=negativeZero})) (215{val=)})) (249{val=&&}) (27 (800{val=prev}) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/38/parent/src_com_google_javascript_jscomp_CodeConsumer.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } invocations
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } invocations
Distance : 4

1
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } options
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } options
Distance : 4

2
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } p
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } p
Distance : 4

3
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } &&
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } &&
Distance : 4

4
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } T
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } T
Distance : 4

5
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } !=
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } !=
Distance : 4

6
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } value
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } value
Distance : 4

7
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ParamChecks
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ParamChecks
Distance : 4

8
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Object
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Object
Distance : 4

9
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mock
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mock
Distance : 4

10
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Override
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Override
Distance : 4

11
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertEquals
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertEquals
Distance : 4

12
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } !
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } !
Distance : 4

13
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } []
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } []
Distance : 4

14
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } nullNotPermitted
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } nullNotPermitted
Distance : 4

15
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } catch
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } catch
Distance : 4

16
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } throw
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } throw
Distance : 4

17
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } void
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } void
Distance : 4

18
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ==
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ==
Distance : 4

19
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } double
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } double
Distance : 4

20
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } index
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } index
Distance : 4

21
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } >
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } >
Distance : 4

22
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } source
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } source
Distance : 4

23
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } null
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } null
Distance : 4

24
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Class
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Class
Distance : 4

25
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } @
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } @
Distance : 4

26
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } {}
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } {}
Distance : 4

27
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } MathRuntimeException
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } MathRuntimeException
Distance : 4

28
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } if
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } if
Distance : 4

29
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <
Distance : 4

30
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } this
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } this
Distance : 4

31
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } final
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } final
Distance : 4

32
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } =
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } =
Distance : 4

33
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } }
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } }
Distance : 4

34
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mode
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mode
Distance : 4

35
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ()
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ()
Distance : 4

36
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <blank>
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <blank>
Distance : 4

37
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } (
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } (
Distance : 4

38
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <s>
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <s>
Distance : 4

39
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } (
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } (
Distance : 4

40
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ;
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ;
Distance : 4

41
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } )
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } )
Distance : 4

42
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } .
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } .
Distance : 4

43
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ,
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ,
Distance : 4

44
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } +
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } +
Distance : 4

45
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } {
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } {
Distance : 4

46
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } test
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } test
Distance : 4

47
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } false
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } false
Distance : 4

48
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } true
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } true
Distance : 4

49
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } new
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } new
Distance : 4

50
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } pattern
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } pattern
Distance : 4

51
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } IllegalArgumentException
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } IllegalArgumentException
Distance : 4

52
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } expected
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } expected
Distance : 4

53
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } FastMath
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } FastMath
Distance : 4

54
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } reportCodeChange
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } reportCodeChange
Distance : 4

55
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } -
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } -
Distance : 4

56
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } values
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } values
Distance : 4

57
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } [
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } [
Distance : 4

58
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Preconditions
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Preconditions
Distance : 4

59
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } get
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } get
Distance : 4

60
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } char
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } char
Distance : 4

61
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } JSType
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } JSType
Distance : 4

62
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isEmpty
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isEmpty
Distance : 4

63
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } abs
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } abs
Distance : 4

64
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } instant
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } instant
Distance : 4

65
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } setAcceptedLanguage
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } setAcceptedLanguage
Distance : 4

66
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } static
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } static
Distance : 4

67
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } stream
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } stream
Distance : 4

68
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } out
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } out
Distance : 4

69
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ]
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ]
Distance : 4

70
Tree	if ( x < NUMBER_CONSTANT && x == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && x == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Distance : 4

71
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Distance : 3

72
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } return
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } return
Distance : 4

73
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Collection
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Collection
Distance : 4

74
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NUMBER_CONSTANT
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NUMBER_CONSTANT
Distance : 4

75
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } protected
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } protected
Distance : 4

76
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } d
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } d
Distance : 4

77
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } equals
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } equals
Distance : 4

78
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } for
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } for
Distance : 4

79
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Invocation
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Invocation
Distance : 4

80
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertTrue
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertTrue
Distance : 4

81
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } /
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } /
Distance : 4

82
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } externs
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } externs
Distance : 4

83
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } public
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } public
Distance : 4

84
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } notifyListeners
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } notifyListeners
Distance : 4

85
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } StrBuilder
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } StrBuilder
Distance : 4

86
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } TestUtilities
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } TestUtilities
Distance : 4

87
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } js
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } js
Distance : 4

88
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } else
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } else
Distance : 4

89
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getMessage
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getMessage
Distance : 4

90
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } matcher
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } matcher
Distance : 4

91
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } reportMatcher
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } reportMatcher
Distance : 4

92
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } PeriodType
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } PeriodType
Distance : 4

93
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } s
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } s
Distance : 4

94
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } setUp
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } setUp
Distance : 4

95
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } solver
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } solver
Distance : 4

96
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getField
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getField
Distance : 4

97
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } STRING_CONSTANT
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } STRING_CONSTANT
Distance : 4

98
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isNormalBlock
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isNormalBlock
Distance : 4

99
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Distance : 3

100
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } a
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } a
Distance : 4

101
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 4

102
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } return;
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } return;
Distance : 4

103
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mockingProgress
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } mockingProgress
Distance : 4

104
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } stroke
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } stroke
Distance : 4

105
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } MutableTimePeriod
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } MutableTimePeriod
Distance : 4

106
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } StringBuilder
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } StringBuilder
Distance : 4

107
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } traverseEs6
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } traverseEs6
Distance : 4

108
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } UnivariateFunction
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } UnivariateFunction
Distance : 4

109
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } scope
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } scope
Distance : 4

110
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } size
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } size
Distance : 4

111
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getFirstChild
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getFirstChild
Distance : 4

112
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Double
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Double
Distance : 4

113
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <=
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <=
Distance : 4

114
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } clone
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } clone
Distance : 4

115
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } sqrt
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } sqrt
Distance : 4

116
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isBlock
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } isBlock
Distance : 4

117
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } append
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } append
Distance : 4

118
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } sb
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } sb
Distance : 4

119
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } y
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } y
Distance : 4

120
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } chrono
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } chrono
Distance : 4

121
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } throws
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } throws
Distance : 4

122
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } contains
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } contains
Distance : 4

123
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } obj
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } obj
Distance : 4

124
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } returnZero
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } returnZero
Distance : 4

125
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } verify
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } verify
Distance : 4

126
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Node
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Node
Distance : 4

127
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } str
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } str
Distance : 4

128
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } fireChangeEvent
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } fireChangeEvent
Distance : 4

129
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertThat
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } assertThat
Distance : 4

130
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } invocation
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } invocation
Distance : 4

131
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } parent
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } parent
Distance : 4

132
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ArrayList
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ArrayList
Distance : 4

133
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getInstance
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getInstance
Distance : 4

134
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } serialised
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } serialised
Distance : 4

135
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } testSame
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } testSame
Distance : 4

136
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } createIllegalArgumentException
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } createIllegalArgumentException
Distance : 4

137
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } x
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } x
Distance : 4

138
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LINE_JOINER
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LINE_JOINER
Distance : 4

139
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } :
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } :
Distance : 4

140
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } fail
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } fail
Distance : 4

141
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Args
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Args
Distance : 4

142
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } List
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } List
Distance : 4

143
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } valueOf
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } valueOf
Distance : 4

144
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } f
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } f
Distance : 4

145
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Distance : 4

146
Tree	if ( x < NUMBER_CONSTANT && x == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && x == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
Distance : 4

147
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } array
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } array
Distance : 4

148
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } class
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } class
Distance : 4

149
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ?
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ?
Distance : 4

150
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } try
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } try
Distance : 4

151
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } m
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } m
Distance : 4

152
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } join
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } join
Distance : 4

153
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } boolean
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } boolean
Distance : 4

154
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } type
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } type
Distance : 4

155
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } *
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } *
Distance : 4

156
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Fraction
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Fraction
Distance : 4

157
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkNotNull
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkNotNull
Distance : 4

158
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } length
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } length
Distance : 4

159
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Assert
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Assert
Distance : 4

160
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } TestUtils
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } TestUtils
Distance : 4

161
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NodeUtil
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NodeUtil
Distance : 4

162
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } root
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } root
Distance : 4

163
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Math
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Math
Distance : 4

164
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkArgument
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkArgument
Distance : 4

165
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } field
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } field
Distance : 4

166
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } t
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } t
Distance : 4

167
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } name
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } name
Distance : 4

168
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } data
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } data
Distance : 4

169
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NodeTraversal
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } NodeTraversal
Distance : 4

170
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } wanted
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } wanted
Distance : 4

171
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } result
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } result
Distance : 4

172
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } paint
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } paint
Distance : 4

173
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ex
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } ex
Distance : 4

174
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } long
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } long
Distance : 4

175
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } toString
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } toString
Distance : 4

176
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Test
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Test
Distance : 4

177
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } c
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } c
Distance : 4

178
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } lines
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } lines
Distance : 4

179
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } e
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } e
Distance : 4

180
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } n
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } n
Distance : 4

181
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } String
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } String
Distance : 4

182
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } add
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } add
Distance : 4

183
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkState
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } checkState
Distance : 4

184
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } compiler
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } compiler
Distance : 4

185
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } i
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } i
Distance : 4

186
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } super
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } super
Distance : 4

187
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } simpleMethod
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } simpleMethod
Distance : 4

188
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getArgumentMatcherStorage
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getArgumentMatcherStorage
Distance : 4

189
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } optimizer
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } optimizer
Distance : 4

190
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } alpha
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } alpha
Distance : 4

191
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } node
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } node
Distance : 4

192
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getParent
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } getParent
Distance : 4

193
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Exception
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Exception
Distance : 4

194
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <>
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } <>
Distance : 4

195
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } int
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } int
Distance : 4

196
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } v
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } v
Distance : 4

197
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Integer
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } Integer
Distance : 4

198
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } instance
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } instance
Distance : 4

199
Tree	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } b
Code	if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; } b
Distance : 4

========================================================================


========================================================================
Example Number: 26
Parent Code is: 
cc . listSeparator () ;
-------------------------------------------------------------------------------
Child code is: 
cc . addOp ( opStr , true ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=cc}) (235{val=.}) (802{val=listSeparator}) (216{val=()})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=cc}) (235{val=.}) (802{val=addOp}) (214{val=(}) (800{val=opStr}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/34/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	cc . listSeparator () ; invocations
Code	cc . listSeparator () ; invocations
Distance : 7

1
Tree	cc . listSeparator () ; options
Code	cc . listSeparator () ; options
Distance : 7

2
Tree	cc . listSeparator () ; p
Code	cc . listSeparator () ; p
Distance : 7

3
Tree	cc . listSeparator () ; &&
Code	cc . listSeparator () ; &&
Distance : 7

4
Tree	cc . listSeparator () ; T
Code	cc . listSeparator () ; T
Distance : 7

5
Tree	cc . listSeparator () ; !=
Code	cc . listSeparator () ; !=
Distance : 7

6
Tree	cc . listSeparator () ; value
Code	cc . listSeparator () ; value
Distance : 7

7
Tree	cc . listSeparator () ; ParamChecks
Code	cc . listSeparator () ; ParamChecks
Distance : 7

8
Tree	cc . listSeparator () ; Object
Code	cc . listSeparator () ; Object
Distance : 7

9
Tree	cc . listSeparator () ; mock
Code	cc . listSeparator () ; mock
Distance : 7

10
Tree	cc . listSeparator () ; Override
Code	cc . listSeparator () ; Override
Distance : 7

11
Tree	cc . listSeparator () ; assertEquals
Code	cc . listSeparator () ; assertEquals
Distance : 7

12
Tree	cc . listSeparator () ; !
Code	cc . listSeparator () ; !
Distance : 7

13
Tree	cc . listSeparator () ; []
Code	cc . listSeparator () ; []
Distance : 7

14
Tree	cc . listSeparator () ; nullNotPermitted
Code	cc . listSeparator () ; nullNotPermitted
Distance : 7

15
Tree	cc . listSeparator () ; catch
Code	cc . listSeparator () ; catch
Distance : 7

16
Tree	cc . listSeparator () ; throw
Code	cc . listSeparator () ; throw
Distance : 7

17
Tree	cc . listSeparator () ; void
Code	cc . listSeparator () ; void
Distance : 7

18
Tree	cc . listSeparator () ; ==
Code	cc . listSeparator () ; ==
Distance : 7

19
Tree	cc . listSeparator () ; double
Code	cc . listSeparator () ; double
Distance : 7

20
Tree	cc . listSeparator () ; index
Code	cc . listSeparator () ; index
Distance : 7

21
Tree	cc . listSeparator () ; >
Code	cc . listSeparator () ; >
Distance : 7

22
Tree	cc . listSeparator () ; source
Code	cc . listSeparator () ; source
Distance : 7

23
Tree	cc . listSeparator () ; null
Code	cc . listSeparator () ; null
Distance : 7

24
Tree	cc . listSeparator () ; Class
Code	cc . listSeparator () ; Class
Distance : 7

25
Tree	cc . listSeparator () ; @
Code	cc . listSeparator () ; @
Distance : 7

26
Tree	cc . listSeparator () ; {}
Code	cc . listSeparator () ; {}
Distance : 7

27
Tree	cc . listSeparator () ; MathRuntimeException
Code	cc . listSeparator () ; MathRuntimeException
Distance : 7

28
Tree	cc . listSeparator () ; if
Code	cc . listSeparator () ; if
Distance : 7

29
Tree	cc . listSeparator () ; <
Code	cc . listSeparator () ; <
Distance : 7

30
Tree	cc . listSeparator () ; this
Code	cc . listSeparator () ; this
Distance : 7

31
Tree	cc . listSeparator () ; final
Code	cc . listSeparator () ; final
Distance : 7

32
Tree	cc . listSeparator () ; =
Code	cc . listSeparator () ; =
Distance : 7

33
Tree	cc . listSeparator () ; }
Code	cc . listSeparator () ; }
Distance : 7

34
Tree	cc . listSeparator () ; mode
Code	cc . listSeparator () ; mode
Distance : 7

35
Tree	cc . listSeparator () ; ()
Code	cc . listSeparator () ; ()
Distance : 7

36
Tree	cc . listSeparator () ; <blank>
Code	cc . listSeparator () ; <blank>
Distance : 7

37
Tree	cc . listSeparator () ; .
Code	cc . listSeparator () ; .
Distance : 7

38
Tree	cc . listSeparator () ; <s>
Code	cc . listSeparator () ; <s>
Distance : 7

39
Tree	cc . listSeparator () ; (
Code	cc . listSeparator () ; (
Distance : 7

40
Tree	cc . listSeparator () ; ;
Code	cc . listSeparator () ; ;
Distance : 6

41
Tree	cc . listSeparator () ; )
Code	cc . listSeparator () ; )
Distance : 6

42
Tree	cc . listSeparator () ; .
Code	cc . listSeparator () ; .
Distance : 7

43
Tree	cc . listSeparator () ; ,
Code	cc . listSeparator () ; ,
Distance : 6

44
Tree	cc . listSeparator () ; +
Code	cc . listSeparator () ; +
Distance : 7

45
Tree	cc . listSeparator () ; {
Code	cc . listSeparator () ; {
Distance : 7

46
Tree	cc . listSeparator () ; test
Code	cc . listSeparator () ; test
Distance : 7

47
Tree	cc . listSeparator () ; false
Code	cc . listSeparator () ; false
Distance : 7

48
Tree	cc . listSeparator () ; true
Code	cc . listSeparator () ; true
Distance : 6

49
Tree	cc . listSeparator () ; new
Code	cc . listSeparator () ; new
Distance : 7

50
Tree	cc . listSeparator () ; pattern
Code	cc . listSeparator () ; pattern
Distance : 7

51
Tree	cc . listSeparator () ; IllegalArgumentException
Code	cc . listSeparator () ; IllegalArgumentException
Distance : 7

52
Tree	cc . listSeparator () ; expected
Code	cc . listSeparator () ; expected
Distance : 7

53
Tree	cc . listSeparator () ; FastMath
Code	cc . listSeparator () ; FastMath
Distance : 7

54
Tree	cc . listSeparator () ; reportCodeChange
Code	cc . listSeparator () ; reportCodeChange
Distance : 7

55
Tree	cc . listSeparator () ; -
Code	cc . listSeparator () ; -
Distance : 7

56
Tree	cc . listSeparator () ; values
Code	cc . listSeparator () ; values
Distance : 7

57
Tree	cc . listSeparator () ; [
Code	cc . listSeparator () ; [
Distance : 7

58
Tree	cc . listSeparator () ; Preconditions
Code	cc . listSeparator () ; Preconditions
Distance : 7

59
Tree	cc . listSeparator () ; get
Code	cc . listSeparator () ; get
Distance : 7

60
Tree	cc . listSeparator () ; char
Code	cc . listSeparator () ; char
Distance : 7

61
Tree	cc . listSeparator () ; JSType
Code	cc . listSeparator () ; JSType
Distance : 7

62
Tree	cc . listSeparator () ; isEmpty
Code	cc . listSeparator () ; isEmpty
Distance : 7

63
Tree	cc . listSeparator () ; abs
Code	cc . listSeparator () ; abs
Distance : 7

64
Tree	cc . listSeparator () ; instant
Code	cc . listSeparator () ; instant
Distance : 7

65
Tree	cc . listSeparator () ; setAcceptedLanguage
Code	cc . listSeparator () ; setAcceptedLanguage
Distance : 7

66
Tree	cc . listSeparator () ; static
Code	cc . listSeparator () ; static
Distance : 7

67
Tree	cc . listSeparator () ; stream
Code	cc . listSeparator () ; stream
Distance : 7

68
Tree	cc . listSeparator () ; out
Code	cc . listSeparator () ; out
Distance : 7

69
Tree	cc . listSeparator () ; ]
Code	cc . listSeparator () ; ]
Distance : 7

70
Tree	listSeparator . listSeparator () ;
Code	listSeparator . listSeparator () ;
Distance : 7

71
Tree	cc . listSeparator () ;
Code	cc . listSeparator () ;
Distance : 6

72
Tree	cc . listSeparator () ; return
Code	cc . listSeparator () ; return
Distance : 7

73
Tree	cc . listSeparator () ; Collection
Code	cc . listSeparator () ; Collection
Distance : 7

74
Tree	cc . listSeparator () ; NUMBER_CONSTANT
Code	cc . listSeparator () ; NUMBER_CONSTANT
Distance : 7

75
Tree	cc . listSeparator () ; protected
Code	cc . listSeparator () ; protected
Distance : 7

76
Tree	cc . listSeparator () ; d
Code	cc . listSeparator () ; d
Distance : 7

77
Tree	cc . listSeparator () ; equals
Code	cc . listSeparator () ; equals
Distance : 7

78
Tree	cc . listSeparator () ; for
Code	cc . listSeparator () ; for
Distance : 7

79
Tree	cc . listSeparator () ; Invocation
Code	cc . listSeparator () ; Invocation
Distance : 7

80
Tree	cc . listSeparator () ; assertTrue
Code	cc . listSeparator () ; assertTrue
Distance : 7

81
Tree	cc . listSeparator () ; /
Code	cc . listSeparator () ; /
Distance : 7

82
Tree	cc . listSeparator () ; externs
Code	cc . listSeparator () ; externs
Distance : 7

83
Tree	cc . listSeparator () ; public
Code	cc . listSeparator () ; public
Distance : 7

84
Tree	cc . listSeparator () ; notifyListeners
Code	cc . listSeparator () ; notifyListeners
Distance : 7

85
Tree	cc . listSeparator () ; StrBuilder
Code	cc . listSeparator () ; StrBuilder
Distance : 7

86
Tree	cc . listSeparator () ; TestUtilities
Code	cc . listSeparator () ; TestUtilities
Distance : 7

87
Tree	cc . listSeparator () ; js
Code	cc . listSeparator () ; js
Distance : 7

88
Tree	cc . listSeparator () ; else
Code	cc . listSeparator () ; else
Distance : 7

89
Tree	cc . listSeparator () ; getMessage
Code	cc . listSeparator () ; getMessage
Distance : 7

90
Tree	cc . listSeparator () ; matcher
Code	cc . listSeparator () ; matcher
Distance : 7

91
Tree	cc . listSeparator () ; reportMatcher
Code	cc . listSeparator () ; reportMatcher
Distance : 7

92
Tree	cc . listSeparator () ; PeriodType
Code	cc . listSeparator () ; PeriodType
Distance : 7

93
Tree	cc . listSeparator () ; s
Code	cc . listSeparator () ; s
Distance : 7

94
Tree	cc . listSeparator () ; setUp
Code	cc . listSeparator () ; setUp
Distance : 7

95
Tree	cc . listSeparator () ; solver
Code	cc . listSeparator () ; solver
Distance : 7

96
Tree	cc . listSeparator () ; getField
Code	cc . listSeparator () ; getField
Distance : 7

97
Tree	cc . listSeparator () ; STRING_CONSTANT
Code	cc . listSeparator () ; STRING_CONSTANT
Distance : 7

98
Tree	cc . listSeparator () ; isNormalBlock
Code	cc . listSeparator () ; isNormalBlock
Distance : 7

99
Tree	cc . listSeparator () ;
Code	cc . listSeparator () ;
Distance : 6

100
Tree	cc . listSeparator () ; a
Code	cc . listSeparator () ; a
Distance : 7

101
Tree	cc . listSeparator () ; LanguageMode.ECMASCRIPT_2015
Code	cc . listSeparator () ; LanguageMode.ECMASCRIPT_2015
Distance : 7

102
Tree	cc . listSeparator () ; return;
Code	cc . listSeparator () ; return;
Distance : 7

103
Tree	cc . listSeparator () ; mockingProgress
Code	cc . listSeparator () ; mockingProgress
Distance : 7

104
Tree	cc . listSeparator () ; stroke
Code	cc . listSeparator () ; stroke
Distance : 7

105
Tree	cc . listSeparator () ; MutableTimePeriod
Code	cc . listSeparator () ; MutableTimePeriod
Distance : 7

106
Tree	cc . listSeparator () ; StringBuilder
Code	cc . listSeparator () ; StringBuilder
Distance : 7

107
Tree	cc . listSeparator () ; traverseEs6
Code	cc . listSeparator () ; traverseEs6
Distance : 7

108
Tree	cc . listSeparator () ; UnivariateFunction
Code	cc . listSeparator () ; UnivariateFunction
Distance : 7

109
Tree	cc . listSeparator () ; scope
Code	cc . listSeparator () ; scope
Distance : 7

110
Tree	cc . listSeparator () ; size
Code	cc . listSeparator () ; size
Distance : 7

111
Tree	cc . listSeparator () ; getFirstChild
Code	cc . listSeparator () ; getFirstChild
Distance : 7

112
Tree	cc . listSeparator () ; Double
Code	cc . listSeparator () ; Double
Distance : 7

113
Tree	cc . listSeparator () ; <=
Code	cc . listSeparator () ; <=
Distance : 7

114
Tree	cc . listSeparator () ; clone
Code	cc . listSeparator () ; clone
Distance : 7

115
Tree	cc . listSeparator () ; sqrt
Code	cc . listSeparator () ; sqrt
Distance : 7

116
Tree	cc . listSeparator () ; isBlock
Code	cc . listSeparator () ; isBlock
Distance : 7

117
Tree	cc . listSeparator () ; append
Code	cc . listSeparator () ; append
Distance : 7

118
Tree	cc . listSeparator () ; sb
Code	cc . listSeparator () ; sb
Distance : 7

119
Tree	cc . listSeparator () ; y
Code	cc . listSeparator () ; y
Distance : 7

120
Tree	cc . listSeparator () ; chrono
Code	cc . listSeparator () ; chrono
Distance : 7

121
Tree	cc . listSeparator () ; throws
Code	cc . listSeparator () ; throws
Distance : 7

122
Tree	cc . listSeparator () ; contains
Code	cc . listSeparator () ; contains
Distance : 7

123
Tree	cc . listSeparator () ; obj
Code	cc . listSeparator () ; obj
Distance : 7

124
Tree	cc . listSeparator () ; returnZero
Code	cc . listSeparator () ; returnZero
Distance : 7

125
Tree	cc . listSeparator () ; verify
Code	cc . listSeparator () ; verify
Distance : 7

126
Tree	cc . listSeparator () ; Node
Code	cc . listSeparator () ; Node
Distance : 7

127
Tree	cc . listSeparator () ; str
Code	cc . listSeparator () ; str
Distance : 7

128
Tree	cc . listSeparator () ; fireChangeEvent
Code	cc . listSeparator () ; fireChangeEvent
Distance : 7

129
Tree	cc . listSeparator () ; assertThat
Code	cc . listSeparator () ; assertThat
Distance : 7

130
Tree	cc . listSeparator () ; invocation
Code	cc . listSeparator () ; invocation
Distance : 7

131
Tree	cc . listSeparator () ; parent
Code	cc . listSeparator () ; parent
Distance : 7

132
Tree	cc . listSeparator () ; ArrayList
Code	cc . listSeparator () ; ArrayList
Distance : 7

133
Tree	cc . listSeparator () ; getInstance
Code	cc . listSeparator () ; getInstance
Distance : 7

134
Tree	cc . listSeparator () ; serialised
Code	cc . listSeparator () ; serialised
Distance : 7

135
Tree	cc . listSeparator () ; testSame
Code	cc . listSeparator () ; testSame
Distance : 7

136
Tree	cc . listSeparator () ; createIllegalArgumentException
Code	cc . listSeparator () ; createIllegalArgumentException
Distance : 7

137
Tree	cc . listSeparator () ; x
Code	cc . listSeparator () ; x
Distance : 7

138
Tree	cc . listSeparator () ; LINE_JOINER
Code	cc . listSeparator () ; LINE_JOINER
Distance : 7

139
Tree	cc . listSeparator () ; :
Code	cc . listSeparator () ; :
Distance : 7

140
Tree	cc . listSeparator () ; fail
Code	cc . listSeparator () ; fail
Distance : 7

141
Tree	cc . listSeparator () ; Args
Code	cc . listSeparator () ; Args
Distance : 7

142
Tree	cc . listSeparator () ; List
Code	cc . listSeparator () ; List
Distance : 7

143
Tree	cc . listSeparator () ; valueOf
Code	cc . listSeparator () ; valueOf
Distance : 7

144
Tree	cc . listSeparator () ; f
Code	cc . listSeparator () ; f
Distance : 7

145
Tree	cc . listSeparator () ; LanguageMode.ECMASCRIPT6
Code	cc . listSeparator () ; LanguageMode.ECMASCRIPT6
Distance : 7

146
Tree	cc . listSeparator () ;
Code	cc . listSeparator () ;
Distance : 6

147
Tree	cc . listSeparator () ; array
Code	cc . listSeparator () ; array
Distance : 7

148
Tree	cc . listSeparator () ; class
Code	cc . listSeparator () ; class
Distance : 7

149
Tree	cc . listSeparator () ; ?
Code	cc . listSeparator () ; ?
Distance : 7

150
Tree	cc . listSeparator () ; try
Code	cc . listSeparator () ; try
Distance : 7

151
Tree	cc . listSeparator () ; m
Code	cc . listSeparator () ; m
Distance : 7

152
Tree	cc . listSeparator () ; join
Code	cc . listSeparator () ; join
Distance : 7

153
Tree	cc . listSeparator () ; boolean
Code	cc . listSeparator () ; boolean
Distance : 7

154
Tree	cc . listSeparator () ; type
Code	cc . listSeparator () ; type
Distance : 7

155
Tree	cc . listSeparator () ; *
Code	cc . listSeparator () ; *
Distance : 7

156
Tree	cc . listSeparator () ; Fraction
Code	cc . listSeparator () ; Fraction
Distance : 7

157
Tree	cc . listSeparator () ; checkNotNull
Code	cc . listSeparator () ; checkNotNull
Distance : 7

158
Tree	cc . listSeparator () ; length
Code	cc . listSeparator () ; length
Distance : 7

159
Tree	cc . listSeparator () ; Assert
Code	cc . listSeparator () ; Assert
Distance : 7

160
Tree	cc . listSeparator () ; TestUtils
Code	cc . listSeparator () ; TestUtils
Distance : 7

161
Tree	cc . listSeparator () ; NodeUtil
Code	cc . listSeparator () ; NodeUtil
Distance : 7

162
Tree	cc . listSeparator () ; root
Code	cc . listSeparator () ; root
Distance : 7

163
Tree	cc . listSeparator () ; Math
Code	cc . listSeparator () ; Math
Distance : 7

164
Tree	cc . listSeparator () ; checkArgument
Code	cc . listSeparator () ; checkArgument
Distance : 7

165
Tree	cc . listSeparator () ; field
Code	cc . listSeparator () ; field
Distance : 7

166
Tree	cc . listSeparator () ; t
Code	cc . listSeparator () ; t
Distance : 7

167
Tree	cc . listSeparator () ; name
Code	cc . listSeparator () ; name
Distance : 7

168
Tree	cc . listSeparator () ; data
Code	cc . listSeparator () ; data
Distance : 7

169
Tree	cc . listSeparator () ; NodeTraversal
Code	cc . listSeparator () ; NodeTraversal
Distance : 7

170
Tree	cc . listSeparator () ; wanted
Code	cc . listSeparator () ; wanted
Distance : 7

171
Tree	cc . listSeparator () ; result
Code	cc . listSeparator () ; result
Distance : 7

172
Tree	cc . listSeparator () ; paint
Code	cc . listSeparator () ; paint
Distance : 7

173
Tree	cc . listSeparator () ; ex
Code	cc . listSeparator () ; ex
Distance : 7

174
Tree	cc . listSeparator () ; long
Code	cc . listSeparator () ; long
Distance : 7

175
Tree	cc . listSeparator () ; toString
Code	cc . listSeparator () ; toString
Distance : 7

176
Tree	cc . listSeparator () ; Test
Code	cc . listSeparator () ; Test
Distance : 7

177
Tree	cc . listSeparator () ; c
Code	cc . listSeparator () ; c
Distance : 7

178
Tree	cc . listSeparator () ; lines
Code	cc . listSeparator () ; lines
Distance : 7

179
Tree	cc . listSeparator () ; e
Code	cc . listSeparator () ; e
Distance : 7

180
Tree	cc . listSeparator () ; n
Code	cc . listSeparator () ; n
Distance : 7

181
Tree	cc . listSeparator () ; String
Code	cc . listSeparator () ; String
Distance : 7

182
Tree	cc . listSeparator () ; add
Code	cc . listSeparator () ; add
Distance : 7

183
Tree	cc . listSeparator () ; checkState
Code	cc . listSeparator () ; checkState
Distance : 7

184
Tree	cc . listSeparator () ; compiler
Code	cc . listSeparator () ; compiler
Distance : 7

185
Tree	cc . listSeparator () ; i
Code	cc . listSeparator () ; i
Distance : 7

186
Tree	cc . listSeparator () ; super
Code	cc . listSeparator () ; super
Distance : 7

187
Tree	cc . listSeparator () ; simpleMethod
Code	cc . listSeparator () ; simpleMethod
Distance : 7

188
Tree	cc . listSeparator () ; getArgumentMatcherStorage
Code	cc . listSeparator () ; getArgumentMatcherStorage
Distance : 7

189
Tree	cc . listSeparator () ; optimizer
Code	cc . listSeparator () ; optimizer
Distance : 7

190
Tree	cc . listSeparator () ; alpha
Code	cc . listSeparator () ; alpha
Distance : 7

191
Tree	cc . listSeparator () ; node
Code	cc . listSeparator () ; node
Distance : 7

192
Tree	cc . listSeparator () ; getParent
Code	cc . listSeparator () ; getParent
Distance : 7

193
Tree	cc . listSeparator () ; Exception
Code	cc . listSeparator () ; Exception
Distance : 7

194
Tree	cc . listSeparator () ; <>
Code	cc . listSeparator () ; <>
Distance : 7

195
Tree	cc . listSeparator () ; int
Code	cc . listSeparator () ; int
Distance : 7

196
Tree	cc . listSeparator () ; v
Code	cc . listSeparator () ; v
Distance : 7

197
Tree	cc . listSeparator () ; Integer
Code	cc . listSeparator () ; Integer
Distance : 7

198
Tree	cc . listSeparator () ; instance
Code	cc . listSeparator () ; instance
Distance : 7

199
Tree	cc . listSeparator () ; b
Code	cc . listSeparator () ; b
Distance : 7

========================================================================


========================================================================
Example Number: 27
Parent Code is: 
options.dependencyOptions . needsManagement () && ! options.skipAllPasses && options.closurePass
-------------------------------------------------------------------------------
Child code is: 
options.dependencyOptions . needsManagement () && options.closurePass
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (40{val=options.dependencyOptions}) (235{val=.}) (802{val=needsManagement}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (40{val=options.skipAllPasses})) (249{val=&&}) (40{val=options.closurePass})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (40{val=options.dependencyOptions}) (235{val=.}) (802{val=needsManagement}) (216{val=()})) (249{val=&&}) (40{val=options.closurePass})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/31/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	for ( true : SECONDS_MILLIS ) {}
Code	for ( true : SECONDS_MILLIS ) {}
Distance : 7

1
Tree	for ( true : scopes ) %
Code	for ( true : scopes ) %
Distance : 7

2
Tree	for ( true : fullDetailRequest ) {}
Code	for ( true : fullDetailRequest ) {}
Distance : 7

3
Tree	for ( modType : SECONDS_MILLIS ) throws
Code	for ( modType : SECONDS_MILLIS ) throws
Distance : 7

4
Tree	for ( true : formattable ) {}
Code	for ( true : formattable ) {}
Distance : 7

5
Tree	for ( final : MASK_30BITS ) {}
Code	for ( final : MASK_30BITS ) {}
Distance : 7

6
Tree	for ( LanguageMode.ECMASCRIPT_2017 : SECONDS_MILLIS ) {}
Code	for ( LanguageMode.ECMASCRIPT_2017 : SECONDS_MILLIS ) {}
Distance : 7

7
Tree	for ( DescribedInvocation : SECONDS_MILLIS ) {}
Code	for ( DescribedInvocation : SECONDS_MILLIS ) {}
Distance : 7

8
Tree	for ( final : restrictedCallType ) ?
Code	for ( final : restrictedCallType ) ?
Distance : 7

9
Tree	for ( RegisteredInvocationsTest : scopes ) {}
Code	for ( RegisteredInvocationsTest : scopes ) {}
Distance : 7

10
Tree	for ( true : InvocationTargetException ) {}
Code	for ( true : InvocationTargetException ) {}
Distance : 7

11
Tree	for ( final : capture ) {}
Code	for ( final : capture ) {}
Distance : 7

12
Tree	for ( handler.invocationContainerImpl : SECONDS_MILLIS ) {}
Code	for ( handler.invocationContainerImpl : SECONDS_MILLIS ) {}
Distance : 7

13
Tree	for ( CHAR_CONS : Precision ) {}
Code	for ( CHAR_CONS : Precision ) {}
Distance : 7

14
Tree	for ( true : capture ) {}
Code	for ( true : capture ) {}
Distance : 7

15
Tree	for ( TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED : SECONDS_MILLIS ) {}
Code	for ( TypeValidator.INTERFACE_METHOD_NOT_IMPLEMENTED : SECONDS_MILLIS ) {}
Distance : 7

16
Tree	for ( true : currentCase ) {}
Code	for ( true : currentCase ) {}
Distance : 7

17
Tree	for ( stringType : SECONDS_MILLIS ) {}
Code	for ( stringType : SECONDS_MILLIS ) {}
Distance : 7

18
Tree	for ( true : unstubbed ) {}
Code	for ( true : unstubbed ) {}
Distance : 7

19
Tree	for ( ImmutableMap : scopes ) {}
Code	for ( ImmutableMap : scopes ) {}
Distance : 7

20
Tree	for ( true : commonTypes ) {}
Code	for ( true : commonTypes ) {}
Distance : 7

21
Tree	for ( final : modType ) /
Code	for ( final : modType ) /
Distance : 7

22
Tree	for ( true : unique ) {}
Code	for ( true : unique ) {}
Distance : 7

23
Tree	for ( JSTypes : SECONDS_MILLIS ) {}
Code	for ( JSTypes : SECONDS_MILLIS ) {}
Distance : 7

24
Tree	for ( true : absX ) {}
Code	for ( true : absX ) {}
Distance : 7

25
Tree	for ( final : keyValues ) ?
Code	for ( final : keyValues ) ?
Distance : 7

26
Tree	for ( true : name ) {}
Code	for ( true : name ) {}
Distance : 7

27
Tree	for ( true : classScope ) {}
Code	for ( true : classScope ) {}
Distance : 7

28
Tree	for ( true : restrictedCallType ) {}
Code	for ( true : restrictedCallType ) {}
Distance : 7

29
Tree	for ( true : getterType ) {}
Code	for ( true : getterType ) {}
Distance : 7

30
Tree	for ( %= : Precision ) {}
Code	for ( %= : Precision ) {}
Distance : 7

31
Tree	for ( ? : SECONDS_MILLIS ) /
Code	for ( ? : SECONDS_MILLIS ) /
Distance : 7

32
Tree	for ( &= : y0 ) {}
Code	for ( &= : y0 ) {}
Distance : 7

33
Tree	for ( true : ArgumentCaptor ) {}
Code	for ( true : ArgumentCaptor ) {}
Distance : 7

34
Tree	for ( namespace : Precision ) {}
Code	for ( namespace : Precision ) {}
Distance : 7

35
Tree	for ( true : delim ) {}
Code	for ( true : delim ) {}
Distance : 7

36
Tree	for ( funType : SECONDS_MILLIS ) {}
Code	for ( funType : SECONDS_MILLIS ) {}
Distance : 7

37
Tree	for ( true : WARNING ) {}
Code	for ( true : WARNING ) {}
Distance : 7

38
Tree	for ( final : currentCase ) {}
Code	for ( final : currentCase ) {}
Distance : 7

39
Tree	for ( FailureMetadata : SECONDS_MILLIS ) {}
Code	for ( FailureMetadata : SECONDS_MILLIS ) {}
Distance : 7

40
Tree	for ( true : transactions ) {}
Code	for ( true : transactions ) {}
Distance : 7

41
Tree	for ( true : text ) {}
Code	for ( true : text ) {}
Distance : 7

42
Tree	for ( final : JUnit45AndHigherRunnerImpl ) ?
Code	for ( final : JUnit45AndHigherRunnerImpl ) ?
Distance : 7

43
Tree	for ( final : y0 ) ?
Code	for ( final : y0 ) ?
Distance : 7

44
Tree	for ( true : halfW ) {}
Code	for ( true : halfW ) {}
Distance : 7

45
Tree	for ( final : SECONDS_MILLIS ) >=
Code	for ( final : SECONDS_MILLIS ) >=
Distance : 7

46
Tree	for ( true : mant.length ) {}
Code	for ( true : mant.length ) {}
Distance : 7

47
Tree	for ( PotentialStubbingProblem : SECONDS_MILLIS ) {}
Code	for ( PotentialStubbingProblem : SECONDS_MILLIS ) {}
Distance : 7

48
Tree	for ( final : capture ) ?
Code	for ( final : capture ) ?
Distance : 7

49
Tree	for ( final : JUnit45AndHigherRunnerImpl ) {}
Code	for ( final : JUnit45AndHigherRunnerImpl ) {}
Distance : 7

50
Tree	for ( final : qrRankingThreshold ) throws
Code	for ( final : qrRankingThreshold ) throws
Distance : 7

51
Tree	for ( %= : y0 ) {}
Code	for ( %= : y0 ) {}
Distance : 7

52
Tree	for ( true : stringType ) {}
Code	for ( true : stringType ) {}
Distance : 7

53
Tree	for ( Path : parameterizedType ) {}
Code	for ( Path : parameterizedType ) {}
Distance : 7

54
Tree	for ( final : keyValues ) {}
Code	for ( final : keyValues ) {}
Distance : 7

55
Tree	for ( final : delim ) ?
Code	for ( final : delim ) ?
Distance : 7

56
Tree	for ( Path : qrRankingThreshold ) {}
Code	for ( Path : qrRankingThreshold ) {}
Distance : 7

57
Tree	for ( final : y0 ) {}
Code	for ( final : y0 ) {}
Distance : 7

58
Tree	for ( final : interfacesBehavior ) ?
Code	for ( final : interfacesBehavior ) ?
Distance : 7

59
Tree	for ( final : argumentMatcherStorage ) ?
Code	for ( final : argumentMatcherStorage ) ?
Distance : 7

60
Tree	for ( final : hasStackTrace ) ?
Code	for ( final : hasStackTrace ) ?
Distance : 7

61
Tree	for ( true : maxUlps ) {}
Code	for ( true : maxUlps ) {}
Distance : 7

62
Tree	for ( true : modType ) throws
Code	for ( true : modType ) throws
Distance : 7

63
Tree	for ( ? : temp2 ) {}
Code	for ( ? : temp2 ) {}
Distance : 7

64
Tree	for ( true : Precision ) %
Code	for ( true : Precision ) %
Distance : 7

65
Tree	for ( Map.Entry : scopes ) {}
Code	for ( Map.Entry : scopes ) {}
Distance : 7

66
Tree	for ( final : defaults ) ?
Code	for ( final : defaults ) ?
Distance : 7

67
Tree	for ( true : AggregateSummaryStatistics ) {}
Code	for ( true : AggregateSummaryStatistics ) {}
Distance : 7

68
Tree	for ( Path : temp2 ) {}
Code	for ( Path : temp2 ) {}
Distance : 7

69
Tree	for ( true : STRING ) {}
Code	for ( true : STRING ) {}
Distance : 7

70
Tree	for ( true : iex ) {}
Code	for ( true : iex ) {}
Distance : 7

71
Tree	for ( final : VisibilityBasedEffectLocation ) ?
Code	for ( final : VisibilityBasedEffectLocation ) ?
Distance : 7

72
Tree	for ( true : isSwitchCase ) {}
Code	for ( true : isSwitchCase ) {}
Distance : 7

73
Tree	for ( true : impl ) {}
Code	for ( true : impl ) {}
Distance : 7

74
Tree	for ( mockCalculator : scopes ) {}
Code	for ( mockCalculator : scopes ) {}
Distance : 7

75
Tree	for ( ? : Precision ) ?
Code	for ( ? : Precision ) ?
Distance : 7

76
Tree	for ( true : objectInputStream ) {}
Code	for ( true : objectInputStream ) {}
Distance : 7

77
Tree	for ( true : threads ) {}
Code	for ( true : threads ) {}
Distance : 7

78
Tree	for ( EqualsBuilder : SECONDS_MILLIS ) {}
Code	for ( EqualsBuilder : SECONDS_MILLIS ) {}
Distance : 7

79
Tree	for ( true : assignsByVar ) {}
Code	for ( true : assignsByVar ) {}
Distance : 7

80
Tree	for ( true : za ) {}
Code	for ( true : za ) {}
Distance : 7

81
Tree	for ( TestProblem3 : SECONDS_MILLIS ) {}
Code	for ( TestProblem3 : SECONDS_MILLIS ) {}
Distance : 7

82
Tree	for ( true : rLimit ) {}
Code	for ( true : rLimit ) {}
Distance : 7

83
Tree	for ( caseBlock : SECONDS_MILLIS ) {}
Code	for ( caseBlock : SECONDS_MILLIS ) {}
Distance : 7

84
Tree	for ( final : SECONDS_MILLIS ) &=
Code	for ( final : SECONDS_MILLIS ) &=
Distance : 7

85
Tree	for ( final : ownerType ) ?
Code	for ( final : ownerType ) ?
Distance : 7

86
Tree	for ( Path : scopes ) throws
Code	for ( Path : scopes ) throws
Distance : 7

87
Tree	for ( true : pluginSwitch ) {}
Code	for ( true : pluginSwitch ) {}
Distance : 7

88
Tree	for ( true : ImmutableMap ) {}
Code	for ( true : ImmutableMap ) {}
Distance : 7

89
Tree	for ( CrossModuleReferenceCollector : SECONDS_MILLIS ) {}
Code	for ( CrossModuleReferenceCollector : SECONDS_MILLIS ) {}
Distance : 7

90
Tree	for ( true : files ) {}
Code	for ( true : files ) {}
Distance : 7

91
Tree	for ( ImmutableSet : SECONDS_MILLIS ) {}
Code	for ( ImmutableSet : SECONDS_MILLIS ) {}
Distance : 7

92
Tree	for ( true : facetB ) {}
Code	for ( true : facetB ) {}
Distance : 7

93
Tree	for ( final : yval ) ?
Code	for ( final : yval ) ?
Distance : 7

94
Tree	for ( BasePeriodFormatter : SECONDS_MILLIS ) {}
Code	for ( BasePeriodFormatter : SECONDS_MILLIS ) {}
Distance : 7

95
Tree	for ( &= : SECONDS_MILLIS ) throws
Code	for ( &= : SECONDS_MILLIS ) throws
Distance : 7

96
Tree	for ( final : Precision ) throws
Code	for ( final : Precision ) throws
Distance : 7

97
Tree	for ( final : restrictedCallType ) {}
Code	for ( final : restrictedCallType ) {}
Distance : 7

98
Tree	for ( Path : keyValues ) {}
Code	for ( Path : keyValues ) {}
Distance : 7

99
Tree	for ( true : prop ) {}
Code	for ( true : prop ) {}
Distance : 7

100
Tree	for ( SECONDS_MILLIS : SECONDS_MILLIS ) {}
Code	for ( SECONDS_MILLIS : SECONDS_MILLIS ) {}
Distance : 7

101
Tree	for ( final : modType ) ?
Code	for ( final : modType ) ?
Distance : 7

102
Tree	for ( true : temp2 ) {}
Code	for ( true : temp2 ) {}
Distance : 7

103
Tree	for ( true : definitionRValue ) {}
Code	for ( true : definitionRValue ) {}
Distance : 7

104
Tree	for ( CHAR_CONS : SECONDS_MILLIS ) {}
Code	for ( CHAR_CONS : SECONDS_MILLIS ) {}
Distance : 7

105
Tree	for ( Path : y0 ) {}
Code	for ( Path : y0 ) {}
Distance : 7

106
Tree	for ( final : modType ) {}
Code	for ( final : modType ) {}
Distance : 7

107
Tree	for ( ? : y0 ) {}
Code	for ( ? : y0 ) {}
Distance : 7

108
Tree	for ( final : scopes ) ?
Code	for ( final : scopes ) ?
Distance : 7

109
Tree	for ( true : SECONDS_MILLIS ) %
Code	for ( true : SECONDS_MILLIS ) %
Distance : 7

110
Tree	for ( true : Precision ) throws
Code	for ( true : Precision ) throws
Distance : 7

111
Tree	for ( &= : scopes ) {}
Code	for ( &= : scopes ) {}
Distance : 7

112
Tree	for ( ? : modType ) {}
Code	for ( ? : modType ) {}
Distance : 7

113
Tree	for ( RegisteredInvocationsTest : SECONDS_MILLIS ) {}
Code	for ( RegisteredInvocationsTest : SECONDS_MILLIS ) {}
Distance : 7

114
Tree	for ( final : scopes ) {}
Code	for ( final : scopes ) {}
Distance : 7

115
Tree	for ( modType : Precision ) {}
Code	for ( modType : Precision ) {}
Distance : 7

116
Tree	for ( true : DEFAULT_EPSILON ) {}
Code	for ( true : DEFAULT_EPSILON ) {}
Distance : 7

117
Tree	for ( true : mockInstance ) {}
Code	for ( true : mockInstance ) {}
Distance : 7

118
Tree	for ( true : types ) {}
Code	for ( true : types ) {}
Distance : 7

119
Tree	for ( Path : SECONDS_MILLIS ) throws
Code	for ( Path : SECONDS_MILLIS ) throws
Distance : 7

120
Tree	for ( ImmutableMap : SECONDS_MILLIS ) {}
Code	for ( ImmutableMap : SECONDS_MILLIS ) {}
Distance : 7

121
Tree	for ( true : defaults ) {}
Code	for ( true : defaults ) {}
Distance : 7

122
Tree	for ( modType : scopes ) {}
Code	for ( modType : scopes ) {}
Distance : 7

123
Tree	for ( final : qrRankingThreshold ) ?
Code	for ( final : qrRankingThreshold ) ?
Distance : 7

124
Tree	for ( ? : SECONDS_MILLIS ) throws
Code	for ( ? : SECONDS_MILLIS ) throws
Distance : 7

125
Tree	for ( namespace : SECONDS_MILLIS ) {}
Code	for ( namespace : SECONDS_MILLIS ) {}
Distance : 7

126
Tree	for ( final : SECONDS_MILLIS ) {}
Code	for ( final : SECONDS_MILLIS ) {}
Distance : 7

127
Tree	for ( true : scopes ) {}
Code	for ( true : scopes ) {}
Distance : 7

128
Tree	for ( final : SECONDS_MILLIS ) throws
Code	for ( final : SECONDS_MILLIS ) throws
Distance : 7

129
Tree	for ( true : Precision ) {}
Code	for ( true : Precision ) {}
Distance : 7

130
Tree	for ( ? : SECONDS_MILLIS ) {}
Code	for ( ? : SECONDS_MILLIS ) {}
Distance : 7

131
Tree	for ( Path : SECONDS_MILLIS ) {}
Code	for ( Path : SECONDS_MILLIS ) {}
Distance : 7

132
Tree	for ( final : SECONDS_MILLIS ) /
Code	for ( final : SECONDS_MILLIS ) /
Distance : 7

133
Tree	for ( true : y0 ) {}
Code	for ( true : y0 ) {}
Distance : 7

134
Tree	for ( final : SECONDS_MILLIS ) %
Code	for ( final : SECONDS_MILLIS ) %
Distance : 7

135
Tree	for ( true : SECONDS_MILLIS ) throws
Code	for ( true : SECONDS_MILLIS ) throws
Distance : 7

136
Tree	for ( ? : Precision ) {}
Code	for ( ? : Precision ) {}
Distance : 7

137
Tree	for ( modType : SECONDS_MILLIS ) {}
Code	for ( modType : SECONDS_MILLIS ) {}
Distance : 7

138
Tree	for ( ? : scopes ) {}
Code	for ( ? : scopes ) {}
Distance : 7

139
Tree	for ( Path : scopes ) {}
Code	for ( Path : scopes ) {}
Distance : 7

140
Tree	for ( true : modType ) {}
Code	for ( true : modType ) {}
Distance : 7

141
Tree	for ( &= : SECONDS_MILLIS ) {}
Code	for ( &= : SECONDS_MILLIS ) {}
Distance : 7

142
Tree	for ( true : keyValues ) {}
Code	for ( true : keyValues ) {}
Distance : 7

143
Tree	for ( Path : Precision ) {}
Code	for ( Path : Precision ) {}
Distance : 7

144
Tree	for ( %= : SECONDS_MILLIS ) {}
Code	for ( %= : SECONDS_MILLIS ) {}
Distance : 7

145
Tree	for ( true : scopes ) throws
Code	for ( true : scopes ) throws
Distance : 7

146
Tree	for ( true : parameterizedType ) {}
Code	for ( true : parameterizedType ) {}
Distance : 7

147
Tree	for ( true : qrRankingThreshold ) {}
Code	for ( true : qrRankingThreshold ) {}
Distance : 7

148
Tree	for ( true : deferredSetTypes ) {}
Code	for ( true : deferredSetTypes ) {}
Distance : 7

149
Tree	for ( true : MASK_30BITS ) {}
Code	for ( true : MASK_30BITS ) {}
Distance : 7

150
Tree	for ( true : currentDerivative ) {}
Code	for ( true : currentDerivative ) {}
Distance : 7

151
Tree	for ( true : globalExternsScope ) {}
Code	for ( true : globalExternsScope ) {}
Distance : 7

152
Tree	for ( true : empiricalDistribution2 ) {}
Code	for ( true : empiricalDistribution2 ) {}
Distance : 7

153
Tree	for ( true : hasStackTrace ) {}
Code	for ( true : hasStackTrace ) {}
Distance : 7

154
Tree	for ( Path : modType ) {}
Code	for ( Path : modType ) {}
Distance : 7

155
Tree	for ( StrMatcher : SECONDS_MILLIS ) {}
Code	for ( StrMatcher : SECONDS_MILLIS ) {}
Distance : 7

156
Tree	for ( final : Precision ) {}
Code	for ( final : Precision ) {}
Distance : 7

157
Tree	for ( final : scopes ) throws
Code	for ( final : scopes ) throws
Distance : 7

158
Tree	for ( ? : keyValues ) {}
Code	for ( ? : keyValues ) {}
Distance : 7

159
Tree	for ( ? : scopes ) throws
Code	for ( ? : scopes ) throws
Distance : 7

160
Tree	for ( final : currentCase ) ?
Code	for ( final : currentCase ) ?
Distance : 7

161
Tree	for ( iMethods : SECONDS_MILLIS ) {}
Code	for ( iMethods : SECONDS_MILLIS ) {}
Distance : 7

162
Tree	for ( true : getTypeI ) {}
Code	for ( true : getTypeI ) {}
Distance : 7

163
Tree	for ( CHAR_CONS : scopes ) {}
Code	for ( CHAR_CONS : scopes ) {}
Distance : 7

164
Tree	for ( true : increment ) {}
Code	for ( true : increment ) {}
Distance : 7

165
Tree	for ( true : yval ) {}
Code	for ( true : yval ) {}
Distance : 7

166
Tree	for ( ? : qrRankingThreshold ) {}
Code	for ( ? : qrRankingThreshold ) {}
Distance : 7

167
Tree	for ( true : convergenceChecker ) {}
Code	for ( true : convergenceChecker ) {}
Distance : 7

168
Tree	for ( true : useLU ) {}
Code	for ( true : useLU ) {}
Distance : 7

169
Tree	for ( true : SECONDS_MILLIS ) /
Code	for ( true : SECONDS_MILLIS ) /
Distance : 7

170
Tree	for ( ? : SECONDS_MILLIS ) %
Code	for ( ? : SECONDS_MILLIS ) %
Distance : 7

171
Tree	for ( final : SECONDS_MILLIS ) +=
Code	for ( final : SECONDS_MILLIS ) +=
Distance : 7

172
Tree	for ( true : wildcardType ) {}
Code	for ( true : wildcardType ) {}
Distance : 7

173
Tree	for ( final : qrRankingThreshold ) {}
Code	for ( final : qrRankingThreshold ) {}
Distance : 7

174
Tree	for ( final : MASK_30BITS ) ?
Code	for ( final : MASK_30BITS ) ?
Distance : 7

175
Tree	for ( true : ShapeUtils ) {}
Code	for ( true : ShapeUtils ) {}
Distance : 7

176
Tree	for ( %= : scopes ) {}
Code	for ( %= : scopes ) {}
Distance : 7

177
Tree	for ( &= : Precision ) {}
Code	for ( &= : Precision ) {}
Distance : 7

178
Tree	for ( final : Precision ) ?
Code	for ( final : Precision ) ?
Distance : 7

179
Tree	for ( Map.Entry : SECONDS_MILLIS ) {}
Code	for ( Map.Entry : SECONDS_MILLIS ) {}
Distance : 7

180
Tree	for ( ? : SECONDS_MILLIS ) ?
Code	for ( ? : SECONDS_MILLIS ) ?
Distance : 7

181
Tree	for ( mockCalculator : SECONDS_MILLIS ) {}
Code	for ( mockCalculator : SECONDS_MILLIS ) {}
Distance : 7

182
Tree	for ( true : y0 ) throws
Code	for ( true : y0 ) throws
Distance : 7

183
Tree	for ( true : allCases ) {}
Code	for ( true : allCases ) {}
Distance : 7

184
Tree	for ( true : SECONDS_MILLIS ) ?
Code	for ( true : SECONDS_MILLIS ) ?
Distance : 7

185
Tree	for ( true : offsetAdjusted ) {}
Code	for ( true : offsetAdjusted ) {}
Distance : 7

186
Tree	for ( true : usageScope ) {}
Code	for ( true : usageScope ) {}
Distance : 7

187
Tree	for ( false : SECONDS_MILLIS ) {}
Code	for ( false : SECONDS_MILLIS ) {}
Distance : 7

188
Tree	for ( ? : Precision ) throws
Code	for ( ? : Precision ) throws
Distance : 7

189
Tree	for ( true : JUnit45AndHigherRunnerImpl ) {}
Code	for ( true : JUnit45AndHigherRunnerImpl ) {}
Distance : 7

190
Tree	for ( modType : y0 ) {}
Code	for ( modType : y0 ) {}
Distance : 7

191
Tree	for ( namespace : scopes ) {}
Code	for ( namespace : scopes ) {}
Distance : 7

192
Tree	for ( Observable : SECONDS_MILLIS ) {}
Code	for ( Observable : SECONDS_MILLIS ) {}
Distance : 7

193
Tree	for ( true : NodeUtil ) {}
Code	for ( true : NodeUtil ) {}
Distance : 7

194
Tree	for ( true : VisibilityBasedEffectLocation ) {}
Code	for ( true : VisibilityBasedEffectLocation ) {}
Distance : 7

195
Tree	for ( true : options ) {}
Code	for ( true : options ) {}
Distance : 7

196
Tree	for ( true : ownerType ) {}
Code	for ( true : ownerType ) {}
Distance : 7

197
Tree	for ( final : modType ) throws
Code	for ( final : modType ) throws
Distance : 7

198
Tree	for ( final : SECONDS_MILLIS ) ?
Code	for ( final : SECONDS_MILLIS ) ?
Distance : 7

199
Tree	for ( final : scopes ) /
Code	for ( final : scopes ) /
Distance : 7

========================================================================


========================================================================
Example Number: 28
Parent Code is: 
{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ ( new NodeTraversal ( compiler , this ) ) . traverseRoots ( externs , root ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=traverse}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=traverseRoots}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/30/parent/src_com_google_javascript_jscomp_FlowSensitiveInlineVariables.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 18

1
Tree	setField
Code	setField
Distance : 19

2
Tree	checkNotNull
Code	checkNotNull
Distance : 19

3
Tree	[]
Code	[]
Distance : 19

4
Tree	checkRelative
Code	checkRelative
Distance : 19

5
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 19

6
Tree	LanguageMode.ECMASCRIPT5
Code	LanguageMode.ECMASCRIPT5
Distance : 19

7
Tree	Array
Code	Array
Distance : 19

8
Tree	i
Code	i
Distance : 19

9
Tree	throw
Code	throw
Distance : 19

10
Tree	FieldUtils
Code	FieldUtils
Distance : 19

11
Tree	DialLayerChangeEvent
Code	DialLayerChangeEvent
Distance : 19

12
Tree	*
Code	*
Distance : 19

13
Tree	bits
Code	bits
Distance : 19

14
Tree	assertEquals
Code	assertEquals
Distance : 19

15
Tree	setEntry
Code	setEntry
Distance : 19

16
Tree	rhs
Code	rhs
Distance : 19

17
Tree	getEndMillis
Code	getEndMillis
Distance : 19

18
Tree	checkInitialize
Code	checkInitialize
Distance : 19

19
Tree	true
Code	true
Distance : 19

20
Tree	null
Code	null
Distance : 19

21
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 19

22
Tree	MathArrays
Code	MathArrays
Distance : 19

23
Tree	synchronized
Code	synchronized
Distance : 19

24
Tree	setStartMillis
Code	setStartMillis
Distance : 19

25
Tree	-
Code	-
Distance : 19

26
Tree	Object
Code	Object
Distance : 19

27
Tree	int
Code	int
Distance : 19

28
Tree	setSeedInternal
Code	setSeedInternal
Distance : 19

29
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 19

30
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 19

31
Tree	fail
Code	fail
Distance : 19

32
Tree	doThrow
Code	doThrow
Distance : 19

33
Tree	Color
Code	Color
Distance : 19

34
Tree	LogBeta
Code	LogBeta
Distance : 19

35
Tree	TranslationTransform
Code	TranslationTransform
Distance : 19

36
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 19

37
Tree	mockingProgress
Code	mockingProgress
Distance : 19

38
Tree	root
Code	root
Distance : 18

39
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 19

40
Tree	long
Code	long
Distance : 19

41
Tree	TestUtils
Code	TestUtils
Distance : 19

42
Tree	printer
Code	printer
Distance : 19

43
Tree	CharSequence
Code	CharSequence
Distance : 19

44
Tree	traversal
Code	traversal
Distance : 19

45
Tree	chronology
Code	chronology
Distance : 19

46
Tree	forward
Code	forward
Distance : 19

47
Tree	writer
Code	writer
Distance : 19

48
Tree	String
Code	String
Distance : 19

49
Tree	typeCheck
Code	typeCheck
Distance : 19

50
Tree	MockControl
Code	MockControl
Distance : 19

51
Tree	Function
Code	Function
Distance : 19

52
Tree	iStartMillis
Code	iStartMillis
Distance : 19

53
Tree	&
Code	&
Distance : 19

54
Tree	ds
Code	ds
Distance : 19

55
Tree	writeField
Code	writeField
Distance : 19

56
Tree	LogGamma
Code	LogGamma
Distance : 19

57
Tree	increasing
Code	increasing
Distance : 19

58
Tree	config
Code	config
Distance : 19

59
Tree	numerator
Code	numerator
Distance : 19

60
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 19

61
Tree	addAnswer
Code	addAnswer
Distance : 19

62
Tree	text
Code	text
Distance : 19

63
Tree	times
Code	times
Distance : 19

64
Tree	maybeSanityCheck
Code	maybeSanityCheck
Distance : 19

65
Tree	copyIn
Code	copyIn
Distance : 19

66
Tree	scale
Code	scale
Distance : 19

67
Tree	TestSubObject
Code	TestSubObject
Distance : 19

68
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 19

69
Tree	getLastArguments
Code	getLastArguments
Distance : 19

70
Tree	RenameLabels
Code	RenameLabels
Distance : 19

71
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 19

72
Tree	omega
Code	omega
Distance : 19

73
Tree	findStaticMembers
Code	findStaticMembers
Distance : 19

74
Tree	YearWeekType
Code	YearWeekType
Distance : 19

75
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 19

76
Tree	classType
Code	classType
Distance : 19

77
Tree	mean
Code	mean
Distance : 19

78
Tree	ISO8601TimeZoneStrategy
Code	ISO8601TimeZoneStrategy
Distance : 19

79
Tree	parametersNames
Code	parametersNames
Distance : 19

80
Tree	source
Code	source
Distance : 19

81
Tree	ex
Code	ex
Distance : 19

82
Tree	Answer
Code	Answer
Distance : 19

83
Tree	ComposableFunction.CEIL
Code	ComposableFunction.CEIL
Distance : 19

84
Tree	stroke
Code	stroke
Distance : 19

85
Tree	mapToSelf
Code	mapToSelf
Distance : 19

86
Tree	checkLocalityOfMarkedCalls
Code	checkLocalityOfMarkedCalls
Distance : 19

87
Tree	original
Code	original
Distance : 19

88
Tree	Result
Code	Result
Distance : 19

89
Tree	extends
Code	extends
Distance : 19

90
Tree	FastMath
Code	FastMath
Distance : 19

91
Tree	N
Code	N
Distance : 19

92
Tree	<=
Code	<=
Distance : 19

93
Tree	++
Code	++
Distance : 19

94
Tree	scriptRoot
Code	scriptRoot
Distance : 19

95
Tree	ret
Code	ret
Distance : 19

96
Tree	out.value
Code	out.value
Distance : 19

97
Tree	&&
Code	&&
Distance : 19

98
Tree	Paint
Code	Paint
Distance : 19

99
Tree	paint
Code	paint
Distance : 19

100
Tree	throwable
Code	throwable
Distance : 19

101
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 19

102
Tree	break;
Code	break;
Distance : 19

103
Tree	checkArgument
Code	checkArgument
Distance : 19

104
Tree	()
Code	()
Distance : 19

105
Tree	testError
Code	testError
Distance : 19

106
Tree	k
Code	k
Distance : 19

107
Tree	SerialUtils
Code	SerialUtils
Distance : 19

108
Tree	value
Code	value
Distance : 19

109
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 19

110
Tree	checkState
Code	checkState
Distance : 19

111
Tree	float
Code	float
Distance : 19

112
Tree	+=
Code	+=
Distance : 19

113
Tree	;
Code	;
Distance : 18

114
Tree	logBeta
Code	logBeta
Distance : 19

115
Tree	private
Code	private
Distance : 19

116
Tree	try
Code	try
Distance : 19

117
Tree	protected
Code	protected
Distance : 19

118
Tree	final
Code	final
Distance : 19

119
Tree	if
Code	if
Distance : 19

120
Tree	mockitoStubber
Code	mockitoStubber
Distance : 19

121
Tree	static
Code	static
Distance : 19

122
Tree	
Code	
Distance : 19

123
Tree	new
Code	new
Distance : 18

124
Tree	]
Code	]
Distance : 19

125
Tree	:
Code	:
Distance : 19

126
Tree	super();
Code	super();
Distance : 19

127
Tree	{}
Code	{}
Distance : 19

128
Tree	(
Code	(
Distance : 18

129
Tree	Args
Code	Args
Distance : 19

130
Tree	public
Code	public
Distance : 19

131
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 19

132
Tree	AbstractScope
Code	AbstractScope
Distance : 19

133
Tree	@
Code	@
Distance : 19

134
Tree	catch
Code	catch
Distance : 19

135
Tree	verify
Code	verify
Distance : 19

136
Tree	this
Code	this
Distance : 18

137
Tree	T
Code	T
Distance : 19

138
Tree	path
Code	path
Distance : 19

139
Tree	position
Code	position
Distance : 19

140
Tree	doAnswer
Code	doAnswer
Distance : 19

141
Tree	strictly
Code	strictly
Distance : 19

142
Tree	stub
Code	stub
Distance : 19

143
Tree	Assert
Code	Assert
Distance : 19

144
Tree	last
Code	last
Distance : 19

145
Tree	random
Code	random
Distance : 19

146
Tree	anchor
Code	anchor
Distance : 19

147
Tree	test
Code	test
Distance : 19

148
Tree	stream
Code	stream
Distance : 19

149
Tree	abstract
Code	abstract
Distance : 19

150
Tree	assertTrue
Code	assertTrue
Distance : 19

151
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 19

152
Tree	createRegression
Code	createRegression
Distance : 19

153
Tree	notNull
Code	notNull
Distance : 19

154
Tree	stubber
Code	stubber
Distance : 19

155
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 19

156
Tree	validateNodeType
Code	validateNodeType
Distance : 19

157
Tree	testTypes
Code	testTypes
Distance : 19

158
Tree	index
Code	index
Distance : 19

159
Tree	Rectangle2D
Code	Rectangle2D
Distance : 19

160
Tree	newValues
Code	newValues
Distance : 19

161
Tree	do
Code	do
Distance : 19

162
Tree	double
Code	double
Distance : 19

163
Tree	node
Code	node
Distance : 19

164
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 19

165
Tree	messageContains
Code	messageContains
Distance : 19

166
Tree	j
Code	j
Distance : 19

167
Tree	testModules
Code	testModules
Distance : 19

168
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 19

169
Tree	key
Code	key
Distance : 19

170
Tree	IMethods
Code	IMethods
Distance : 19

171
Tree	pow
Code	pow
Distance : 19

172
Tree	LastArguments
Code	LastArguments
Distance : 19

173
Tree	fn
Code	fn
Distance : 19

174
Tree	distribution
Code	distribution
Distance : 19

175
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 19

176
Tree	)
Code	)
Distance : 18

177
Tree	for
Code	for
Distance : 19

178
Tree	iValues
Code	iValues
Distance : 19

179
Tree	fieldType
Code	fieldType
Distance : 19

180
Tree	NodeTraversal
Code	NodeTraversal
Distance : 18

181
Tree	return
Code	return
Distance : 19

182
Tree	zFormat
Code	zFormat
Distance : 19

183
Tree	RegularizedGamma.P
Code	RegularizedGamma.P
Distance : 19

184
Tree	reportAnd
Code	reportAnd
Distance : 19

185
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 19

186
Tree	secRand
Code	secRand
Distance : 19

187
Tree	grandparent
Code	grandparent
Distance : 19

188
Tree	Equals
Code	Equals
Distance : 19

189
Tree	seed
Code	seed
Distance : 19

190
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 19

191
Tree	noPrimitives
Code	noPrimitives
Distance : 19

192
Tree	t
Code	t
Distance : 19

193
Tree	gamma
Code	gamma
Distance : 19

194
Tree	formatter
Code	formatter
Distance : 19

195
Tree	argument
Code	argument
Distance : 19

196
Tree	separator
Code	separator
Distance : 19

197
Tree	mutNum
Code	mutNum
Distance : 19

198
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 19

199
Tree	newVar
Code	newVar
Distance : 19

========================================================================


========================================================================
Example Number: 29
Parent Code is: 
Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
-------------------------------------------------------------------------------
Child code is: 
Node catchBody = blockUnchecked ( catchNode ) . copyInformationFrom ( catchNode ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=catchBody}) (204{val==}) (32 (32 (802{val=block}) (214{val=(}) (800{val=catchNode}) (215{val=)})) (235{val=.}) (802{val=copyInformationFrom}) (214{val=(}) (800{val=catchNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=catchBody}) (204{val==}) (32 (32 (802{val=blockUnchecked}) (214{val=(}) (800{val=catchNode}) (215{val=)})) (235{val=.}) (802{val=copyInformationFrom}) (214{val=(}) (800{val=catchNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/27/parent/src_com_google_javascript_rhino_IR.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Fraction
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Fraction
Distance : 4

1
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ParamChecks
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ParamChecks
Distance : 4

2
Tree	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Distance : 4

3
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

4
Tree	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Distance : 2

5
Tree	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Distance : 3

6
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

7
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

8
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

9
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

10
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

11
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

12
Tree	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Distance : 3

13
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

14
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

15
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

16
Tree	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchBody ) ;
Distance : 4

17
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

18
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

19
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

20
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

21
Tree	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Distance : 4

22
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; long
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; long
Distance : 4

23
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

24
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ?
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ?
Distance : 4

25
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Exception
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Exception
Distance : 4

26
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Math
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Math
Distance : 4

27
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; root
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; root
Distance : 4

28
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NodeUtil
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NodeUtil
Distance : 4

29
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; wanted
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; wanted
Distance : 4

30
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; data
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; data
Distance : 4

31
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NodeTraversal
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NodeTraversal
Distance : 4

32
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ex
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ex
Distance : 4

33
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; array
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; array
Distance : 4

34
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <>
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <>
Distance : 4

35
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; class
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; class
Distance : 4

36
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; f
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; f
Distance : 4

37
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Override
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Override
Distance : 4

38
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; add
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; add
Distance : 4

39
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Object
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Object
Distance : 4

40
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; c
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; c
Distance : 4

41
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; mock
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; mock
Distance : 4

42
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; lines
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; lines
Distance : 4

43
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; notifyListeners
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; notifyListeners
Distance : 4

44
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; /
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; /
Distance : 4

45
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertTrue
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertTrue
Distance : 4

46
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; externs
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; externs
Distance : 4

47
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Assert
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Assert
Distance : 4

48
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkNotNull
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkNotNull
Distance : 4

49
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

50
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

51
Tree	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Distance : 2

52
Tree	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchNode ) ;
Distance : 2

53
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

54
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

55
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

56
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

57
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

58
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

59
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

60
Tree	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Distance : 3

61
Tree	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchNode ) ;
Distance : 3

62
Tree	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Distance : 2

63
Tree	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Distance : 3

64
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

65
Tree	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchBody ) ;
Distance : 3

66
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

67
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

68
Tree	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Distance : 4

69
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

70
Tree	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchBody ) ;
Distance : 4

71
Tree	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

72
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

73
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

74
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

75
Tree	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchBody ) ;
Distance : 3

76
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

77
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

78
Tree	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Distance : 3

79
Tree	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Distance : 3

80
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

81
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

82
Tree	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchBody ) ;
Distance : 4

83
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

84
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

85
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchNode ) ;
Distance : 2

86
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

87
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

88
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

89
Tree	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

90
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

91
Tree	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchNode ) ;
Distance : 2

92
Tree	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . block ( catchNode ) ;
Distance : 2

93
Tree	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = block ( catchBody ) . block ( catchNode ) ;
Distance : 3

94
Tree	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchBody ) . block ( catchNode ) ;
Distance : 3

95
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

96
Tree	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Code	Node catchBody = block ( catchNode ) . block ( catchBody ) ;
Distance : 3

97
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchNode ) ;
Distance : 1

98
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Test
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Test
Distance : 4

99
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ;
Distance : 3

100
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; p
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; p
Distance : 4

101
Tree	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Code	Node catchBody = copyInformationFrom ( catchNode ) . copyInformationFrom ( catchBody ) ;
Distance : 2

102
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ]
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ]
Distance : 4

103
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; .
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; .
Distance : 4

104
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ==
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ==
Distance : 4

105
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; throw
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; throw
Distance : 4

106
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; =
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; =
Distance : 4

107
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ()
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ()
Distance : 4

108
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; {
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; {
Distance : 4

109
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; new
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; new
Distance : 4

110
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; STRING_CONSTANT
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; STRING_CONSTANT
Distance : 4

111
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NUMBER_CONSTANT
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; NUMBER_CONSTANT
Distance : 4

112
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; return
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; return
Distance : 4

113
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; &&
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; &&
Distance : 4

114
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; }
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; }
Distance : 4

115
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; !=
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; !=
Distance : 4

116
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; void
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; void
Distance : 4

117
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; T
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; T
Distance : 4

118
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; catch
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; catch
Distance : 4

119
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; e
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; e
Distance : 4

120
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; String
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; String
Distance : 4

121
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; compiler
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; compiler
Distance : 4

122
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; n
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; n
Distance : 4

123
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; super
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; super
Distance : 4

124
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; i
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; i
Distance : 4

125
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; int
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; int
Distance : 4

126
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkState
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkState
Distance : 4

127
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; value
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; value
Distance : 4

128
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; getInstance
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; getInstance
Distance : 4

129
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <blank>
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <blank>
Distance : 4

130
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ArrayList
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ArrayList
Distance : 4

131
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ;
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ;
Distance : 4

132
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; (
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; (
Distance : 4

133
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; join
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; join
Distance : 4

134
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; reportCodeChange
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; reportCodeChange
Distance : 4

135
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Class
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Class
Distance : 4

136
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; IllegalArgumentException
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; IllegalArgumentException
Distance : 4

137
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; expected
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; expected
Distance : 4

138
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; FastMath
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; FastMath
Distance : 4

139
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; name
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; name
Distance : 4

140
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; t
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; t
Distance : 4

141
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <s>
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <s>
Distance : 4

142
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; source
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; source
Distance : 4

143
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; (
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; (
Distance : 4

144
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; str
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; str
Distance : 4

145
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; <
Distance : 4

146
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; parent
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; parent
Distance : 4

147
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; invocation
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; invocation
Distance : 4

148
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertThat
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertThat
Distance : 4

149
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; fireChangeEvent
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; fireChangeEvent
Distance : 4

150
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; field
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; field
Distance : 4

151
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; testSame
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; testSame
Distance : 4

152
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; createIllegalArgumentException
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; createIllegalArgumentException
Distance : 4

153
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; x
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; x
Distance : 4

154
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; LINE_JOINER
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; LINE_JOINER
Distance : 4

155
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; +
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; +
Distance : 4

156
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; null
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; null
Distance : 4

157
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; >
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; >
Distance : 4

158
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; public
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; public
Distance : 4

159
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; final
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; final
Distance : 4

160
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; this
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; this
Distance : 4

161
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; if
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; if
Distance : 4

162
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkArgument
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; checkArgument
Distance : 4

163
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; )
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; )
Distance : 4

164
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; fail
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; fail
Distance : 4

165
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; double
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; double
Distance : 4

166
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; false
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; false
Distance : 4

167
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; @
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; @
Distance : 4

168
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; test
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; test
Distance : 4

169
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; nullNotPermitted
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; nullNotPermitted
Distance : 4

170
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; []
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; []
Distance : 4

171
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; MathRuntimeException
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; MathRuntimeException
Distance : 4

172
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; !
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; !
Distance : 4

173
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Integer
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Integer
Distance : 4

174
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; v
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; v
Distance : 4

175
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; verify
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; verify
Distance : 4

176
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Node
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Node
Distance : 4

177
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; TestUtils
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; TestUtils
Distance : 4

178
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; length
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; length
Distance : 4

179
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertEquals
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; assertEquals
Distance : 4

180
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; {}
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; {}
Distance : 4

181
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; true
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; true
Distance : 4

182
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; mode
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; mode
Distance : 4

183
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Args
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Args
Distance : 4

184
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; List
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; List
Distance : 4

185
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; m
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; m
Distance : 4

186
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; try
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; try
Distance : 4

187
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; paint
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; paint
Distance : 4

188
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; result
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; result
Distance : 4

189
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; *
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; *
Distance : 4

190
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; type
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; type
Distance : 4

191
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; boolean
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; boolean
Distance : 4

192
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; serialised
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; serialised
Distance : 4

193
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; options
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; options
Distance : 4

194
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ,
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; ,
Distance : 4

195
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; [
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; [
Distance : 4

196
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Preconditions
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; Preconditions
Distance : 4

197
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; -
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; -
Distance : 4

198
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; :
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; :
Distance : 4

199
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; toString
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; toString
Distance : 4

========================================================================


========================================================================
Example Number: 30
Parent Code is: 
{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
-------------------------------------------------------------------------------
Child code is: 
{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.ON_EX , finallyNode ) ; } }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=finallyNode})) (226{val=:}) (32 (40{val=cfa.finallyMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=cfa}) (235{val=.}) (802{val=createEdge}) (214{val=(}) (800{val=fromNode}) (234{val=,}) (40{val=Branch.UNCOND}) (234{val=,}) (800{val=finallyNode}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=finallyNode})) (226{val=:}) (32 (40{val=cfa.finallyMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=cfa}) (235{val=.}) (802{val=createEdge}) (214{val=(}) (800{val=fromNode}) (234{val=,}) (40{val=Branch.ON_EX}) (234{val=,}) (800{val=finallyNode}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/14/parent/src_com_google_javascript_jscomp_ControlFlowAnalysis.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

1
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

2
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

3
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

4
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

5
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

6
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

7
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

8
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

9
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

10
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

11
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

12
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

13
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

14
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

15
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

16
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

17
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

18
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

19
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

20
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

21
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

22
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

23
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

24
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

25
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

26
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

27
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

28
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

29
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

30
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

31
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

32
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

33
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

34
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

35
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

36
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

37
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

38
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

39
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

40
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

41
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

42
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

43
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

44
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

45
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

46
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

47
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

48
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

49
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

50
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

51
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

52
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

53
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

54
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

55
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 4

56
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

57
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

58
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

59
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

60
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

61
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

62
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

63
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

64
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 4

65
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

66
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

67
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

68
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

69
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

70
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

71
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

72
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

73
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

74
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 2

75
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

76
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

77
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

78
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

79
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

80
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

81
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

82
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

83
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

84
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

85
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

86
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

87
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

88
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

89
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

90
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

91
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

92
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

93
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

94
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

95
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

96
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 2

97
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

98
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

99
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

100
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

101
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

102
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

103
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

104
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

105
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

106
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 5

107
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

108
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 2

109
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

110
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 5

111
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

112
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

113
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

114
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

115
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

116
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

117
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

118
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 1

119
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 5

120
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

121
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

122
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

123
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 1

124
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 5

125
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

126
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

127
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

128
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

129
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

130
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

131
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

132
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

133
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

134
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

135
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

136
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

137
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

138
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

139
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

140
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

141
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

142
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

143
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

144
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

145
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

146
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

147
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

148
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 6

149
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

150
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

151
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

152
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 4

153
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 5

154
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

155
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

156
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

157
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 3

158
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

159
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 4

160
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

161
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

162
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 3

163
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

164
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

165
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

166
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

167
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

168
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

169
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

170
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 4

171
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

172
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

173
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

174
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

175
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

176
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

177
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

178
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

179
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( parent , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

180
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 3

181
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

182
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

183
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , parent ) ; } }
Distance : 3

184
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( fromNode ) ) { cfa . get ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

185
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

186
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 3

187
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 5

188
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

189
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 4

190
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 3

191
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

192
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

193
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 7

194
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { parent . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 4

195
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { parent . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

196
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 3

197
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( parent , Branch.UNCOND , fromNode ) ; } }
Distance : 7

198
Tree	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( fromNode ) ) { fromNode . get ( fromNode , Branch.UNCOND , fromNode ) ; } }
Distance : 6

199
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( fromNode ) ) { fromNode . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
Distance : 5

========================================================================


========================================================================
Example Number: 31
Parent Code is: 
{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
-------------------------------------------------------------------------------
Child code is: 
{ if ( recurse ) { return anyResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=recurse}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=allResultsMatch}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=MAY_BE_STRING_PREDICATE}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mayBeStringHelper}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=recurse}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyResultsMatch}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=MAY_BE_STRING_PREDICATE}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mayBeStringHelper}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/10/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } notifyListeners
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } notifyListeners
Distance : 2

1
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } FastMath
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } FastMath
Distance : 2

2
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } expected
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } expected
Distance : 2

3
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } IllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } IllegalArgumentException
Distance : 2

4
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } super
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } super
Distance : 2

5
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } LINE_JOINER
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } LINE_JOINER
Distance : 2

6
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Distance : 2

7
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } testSame
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } testSame
Distance : 2

8
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } str
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } str
Distance : 2

9
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } fireChangeEvent
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } fireChangeEvent
Distance : 2

10
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertThat
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertThat
Distance : 2

11
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } invocation
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } invocation
Distance : 2

12
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ,
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ,
Distance : 2

13
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } .
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } .
Distance : 2

14
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } x
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } x
Distance : 2

15
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertEquals
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertEquals
Distance : 2

16
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } T
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } T
Distance : 2

17
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } []
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } []
Distance : 2

18
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } scope
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } scope
Distance : 2

19
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getFirstChild
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getFirstChild
Distance : 2

20
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } throws
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } throws
Distance : 2

21
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } returnZero
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } returnZero
Distance : 2

22
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } reportCodeChange
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } reportCodeChange
Distance : 2

23
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } sb
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } sb
Distance : 2

24
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } name
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } name
Distance : 2

25
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } field
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } field
Distance : 2

26
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } (
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } (
Distance : 2

27
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } =
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } =
Distance : 2

28
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } }
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } }
Distance : 2

29
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ()
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ()
Distance : 2

30
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } {
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } {
Distance : 2

31
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } new
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } new
Distance : 2

32
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } STRING_CONSTANT
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } STRING_CONSTANT
Distance : 2

33
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NUMBER_CONSTANT
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NUMBER_CONSTANT
Distance : 2

34
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } return
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } return
Distance : 2

35
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } &&
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } &&
Distance : 2

36
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } externs
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } externs
Distance : 2

37
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } !=
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } !=
Distance : 2

38
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } value
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } value
Distance : 2

39
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkState
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkState
Distance : 2

40
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } int
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } int
Distance : 2

41
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } i
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } i
Distance : 2

42
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } else
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } else
Distance : 2

43
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <blank>
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <blank>
Distance : 2

44
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ;
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ;
Distance : 2

45
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } )
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } )
Distance : 2

46
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkArgument
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkArgument
Distance : 2

47
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } t
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } t
Distance : 2

48
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <s>
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <s>
Distance : 2

49
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } !
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } !
Distance : 2

50
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } d
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } d
Distance : 2

51
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } invocations
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } invocations
Distance : 2

52
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } :
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } :
Distance : 2

53
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } fail
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } fail
Distance : 2

54
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Args
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Args
Distance : 2

55
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } List
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } List
Distance : 2

56
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } m
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } m
Distance : 2

57
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } node
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } node
Distance : 2

58
Tree	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

59
Tree	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

60
Tree	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 3

61
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 1

62
Tree	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

63
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 1

64
Tree	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

65
Tree	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 3

66
Tree	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 3

67
Tree	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

68
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 1

69
Tree	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

70
Tree	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

71
Tree	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , n ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 3

72
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } index
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } index
Distance : 2

73
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isBlock
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isBlock
Distance : 2

74
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getParent
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getParent
Distance : 2

75
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } values
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } values
Distance : 2

76
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } equals
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } equals
Distance : 2

77
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } for
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } for
Distance : 2

78
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Invocation
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Invocation
Distance : 2

79
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } js
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } js
Distance : 2

80
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } TestUtilities
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } TestUtilities
Distance : 2

81
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } StrBuilder
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } StrBuilder
Distance : 2

82
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } setUp
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } setUp
Distance : 2

83
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } size
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } size
Distance : 2

84
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } LanguageMode.ECMASCRIPT_2015
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } LanguageMode.ECMASCRIPT_2015
Distance : 2

85
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } UnivariateFunction
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } UnivariateFunction
Distance : 2

86
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } result
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } result
Distance : 2

87
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } append
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } append
Distance : 2

88
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } try
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } try
Distance : 2

89
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } nullNotPermitted
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } nullNotPermitted
Distance : 2

90
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } paint
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } paint
Distance : 2

91
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } @
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } @
Distance : 2

92
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } false
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } false
Distance : 2

93
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } double
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } double
Distance : 2

94
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } stream
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } stream
Distance : 2

95
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } out
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } out
Distance : 2

96
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } protected
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } protected
Distance : 2

97
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } test
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } test
Distance : 2

98
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } return;
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } return;
Distance : 2

99
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 1

100
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isEmpty
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isEmpty
Distance : 2

101
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } >
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } >
Distance : 2

102
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } public
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } public
Distance : 2

103
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } final
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } final
Distance : 2

104
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } this
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } this
Distance : 2

105
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <
Distance : 2

106
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } if
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } if
Distance : 2

107
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } parent
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } parent
Distance : 2

108
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ArrayList
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ArrayList
Distance : 2

109
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getInstance
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getInstance
Distance : 2

110
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } join
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } join
Distance : 2

111
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } JSType
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } JSType
Distance : 2

112
Tree	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Code	{ if ( n ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
Distance : 2

113
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ]
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ]
Distance : 2

114
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkNotNull
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } checkNotNull
Distance : 2

115
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } length
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } length
Distance : 2

116
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } TestUtils
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } TestUtils
Distance : 2

117
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Node
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Node
Distance : 2

118
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } null
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } null
Distance : 2

119
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } +
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } +
Distance : 2

120
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } static
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } static
Distance : 2

121
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Distance : 2

122
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } c
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } c
Distance : 2

123
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } lines
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } lines
Distance : 2

124
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } MathRuntimeException
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } MathRuntimeException
Distance : 2

125
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } {}
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } {}
Distance : 2

126
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } true
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } true
Distance : 2

127
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mode
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mode
Distance : 2

128
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } type
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } type
Distance : 2

129
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } -
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } -
Distance : 2

130
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } verify
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } verify
Distance : 2

131
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } boolean
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } boolean
Distance : 2

132
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } char
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } char
Distance : 2

133
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } get
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } get
Distance : 2

134
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } reportMatcher
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } reportMatcher
Distance : 2

135
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } matcher
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } matcher
Distance : 2

136
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getMessage
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } getMessage
Distance : 2

137
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } else
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } else
Distance : 2

138
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } abs
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } abs
Distance : 2

139
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } instant
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } instant
Distance : 2

140
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } serialised
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } serialised
Distance : 2

141
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } v
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } v
Distance : 2

142
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Preconditions
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Preconditions
Distance : 2

143
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } compiler
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } compiler
Distance : 2

144
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } class
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } class
Distance : 2

145
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <>
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <>
Distance : 2

146
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } array
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } array
Distance : 2

147
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } contains
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } contains
Distance : 2

148
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } obj
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } obj
Distance : 2

149
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Integer
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Integer
Distance : 2

150
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } a
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } a
Distance : 2

151
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } stroke
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } stroke
Distance : 2

152
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } MutableTimePeriod
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } MutableTimePeriod
Distance : 2

153
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } StringBuilder
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } StringBuilder
Distance : 2

154
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } traverseEs6
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } traverseEs6
Distance : 2

155
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } PeriodType
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } PeriodType
Distance : 2

156
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } s
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } s
Distance : 2

157
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isNormalBlock
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } isNormalBlock
Distance : 2

158
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } b
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } b
Distance : 2

159
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Double
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Double
Distance : 2

160
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } clone
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } clone
Distance : 2

161
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } f
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } f
Distance : 2

162
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Override
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Override
Distance : 2

163
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } chrono
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } chrono
Distance : 2

164
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Object
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Object
Distance : 2

165
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } String
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } String
Distance : 2

166
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mock
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mock
Distance : 2

167
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } e
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } e
Distance : 2

168
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } catch
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } catch
Distance : 2

169
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } throw
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } throw
Distance : 2

170
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } void
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } void
Distance : 2

171
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ==
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ==
Distance : 2

172
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } long
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } long
Distance : 2

173
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ?
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ?
Distance : 2

174
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } n
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } n
Distance : 2

175
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Exception
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Exception
Distance : 2

176
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertTrue
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } assertTrue
Distance : 2

177
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } /
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } /
Distance : 2

178
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Fraction
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Fraction
Distance : 2

179
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } [
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } [
Distance : 2

180
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } sqrt
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } sqrt
Distance : 2

181
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <=
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } <=
Distance : 2

182
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ParamChecks
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ParamChecks
Distance : 2

183
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Assert
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Assert
Distance : 2

184
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } *
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } *
Distance : 2

185
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Math
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Math
Distance : 2

186
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } root
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } root
Distance : 2

187
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NodeUtil
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NodeUtil
Distance : 2

188
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } wanted
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } wanted
Distance : 2

189
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } data
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } data
Distance : 2

190
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } add
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } add
Distance : 2

191
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } source
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } source
Distance : 2

192
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ex
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } ex
Distance : 2

193
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Class
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Class
Distance : 2

194
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } options
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } options
Distance : 2

195
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } p
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } p
Distance : 2

196
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } toString
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } toString
Distance : 2

197
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Test
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } Test
Distance : 2

198
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NodeTraversal
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } NodeTraversal
Distance : 2

199
Tree	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mockingProgress
Code	{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } } mockingProgress
Distance : 2

========================================================================


========================================================================
Example Number: 32
Parent Code is: 
String moduleName = guessCJSModuleName ( normalizeSourceName ( script . getSourceFileName () ) ) ;
-------------------------------------------------------------------------------
Child code is: 
String moduleName = guessCJSModuleName ( script . getSourceFileName () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (802{val=guessCJSModuleName}) (214{val=(}) (32 (802{val=normalizeSourceName}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (802{val=guessCJSModuleName}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/9/parent/src_com_google_javascript_jscomp_ProcessCommonJSModules.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	String
Code	String
Distance : 10

1
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

2
Tree	ScopeCreator
Code	ScopeCreator
Distance : 11

3
Tree	given
Code	given
Distance : 11

4
Tree	Locale
Code	Locale
Distance : 11

5
Tree	GlobalTypeInfoCollector
Code	GlobalTypeInfoCollector
Distance : 11

6
Tree	void
Code	void
Distance : 11

7
Tree	DateTimeField
Code	DateTimeField
Distance : 11

8
Tree	Test
Code	Test
Distance : 11

9
Tree	ProcessCommonJSModules
Code	ProcessCommonJSModules
Distance : 11

10
Tree	Preconditions
Code	Preconditions
Distance : 11

11
Tree	UnitSphereRandomVectorGenerator
Code	UnitSphereRandomVectorGenerator
Distance : 11

12
Tree	testTypes
Code	testTypes
Distance : 11

13
Tree	computeEscapedEs6
Code	computeEscapedEs6
Distance : 11

14
Tree	TimeZone
Code	TimeZone
Distance : 11

15
Tree	testExternChanges
Code	testExternChanges
Distance : 11

16
Tree	Require
Code	Require
Distance : 11

17
Tree	LinkedHashMap
Code	LinkedHashMap
Distance : 11

18
Tree	exceptionContext
Code	exceptionContext
Distance : 11

19
Tree	chars
Code	chars
Distance : 11

20
Tree	Map
Code	Map
Distance : 11

21
Tree	CharSet
Code	CharSet
Distance : 11

22
Tree	ParamChecks
Code	ParamChecks
Distance : 11

23
Tree	VerificationMode
Code	VerificationMode
Distance : 11

24
Tree	public
Code	public
Distance : 11

25
Tree	InvocationsCalculator
Code	InvocationsCalculator
Distance : 11

26
Tree	SourceFile
Code	SourceFile
Distance : 11

27
Tree	ArgumentCaptor
Code	ArgumentCaptor
Distance : 11

28
Tree	InvocationContainer
Code	InvocationContainer
Distance : 11

29
Tree	pos
Code	pos
Distance : 11

30
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 11

31
Tree	separator
Code	separator
Distance : 11

32
Tree	HashSet
Code	HashSet
Distance : 11

33
Tree	Long
Code	Long
Distance : 11

34
Tree	testTypesWithCommonExterns
Code	testTypesWithCommonExterns
Distance : 11

35
Tree	super
Code	super
Distance : 11

36
Tree	sourceMap
Code	sourceMap
Distance : 11

37
Tree	MutableDuration
Code	MutableDuration
Distance : 11

38
Tree	RenameLabels
Code	RenameLabels
Distance : 11

39
Tree	checkArgument
Code	checkArgument
Distance : 11

40
Tree	testSameEs6
Code	testSameEs6
Distance : 11

41
Tree	ProcessDefines
Code	ProcessDefines
Distance : 11

42
Tree	char
Code	char
Distance : 11

43
Tree	source
Code	source
Distance : 11

44
Tree	VerificationMode
Code	VerificationMode
Distance : 11

45
Tree	public
Code	public
Distance : 11

46
Tree	ImmutableList
Code	ImmutableList
Distance : 11

47
Tree	XYLineAnnotation
Code	XYLineAnnotation
Distance : 11

48
Tree	T
Code	T
Distance : 11

49
Tree	FormatFactory
Code	FormatFactory
Distance : 11

50
Tree	Arrays
Code	Arrays
Distance : 11

51
Tree	InvocationsCalculator
Code	InvocationsCalculator
Distance : 11

52
Tree	Duration
Code	Duration
Distance : 11

53
Tree	EmpiricalDistribution
Code	EmpiricalDistribution
Distance : 11

54
Tree	SourceFile
Code	SourceFile
Distance : 11

55
Tree	checkState
Code	checkState
Distance : 11

56
Tree	ArgumentCaptor
Code	ArgumentCaptor
Distance : 11

57
Tree	String
Code	String
Distance : 10

58
Tree	StringBuilder
Code	StringBuilder
Distance : 11

59
Tree	typeCheck
Code	typeCheck
Distance : 11

60
Tree	markConstAndCopyJsDoc
Code	markConstAndCopyJsDoc
Distance : 11

61
Tree	ResizableDoubleArray
Code	ResizableDoubleArray
Distance : 11

62
Tree	QualifiedName
Code	QualifiedName
Distance : 11

63
Tree	File
Code	File
Distance : 11

64
Tree	minadj
Code	minadj
Distance : 11

65
Tree	LocalQName
Code	LocalQName
Distance : 11

66
Tree	Set
Code	Set
Distance : 11

67
Tree	LINE_JOINER
Code	LINE_JOINER
Distance : 11

68
Tree	parseWarning
Code	parseWarning
Distance : 11

69
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 11

70
Tree	System
Code	System
Distance : 11

71
Tree	iValues
Code	iValues
Distance : 11

72
Tree	GradientPaint
Code	GradientPaint
Distance : 11

73
Tree	TypeI
Code	TypeI
Distance : 11

74
Tree	final
Code	final
Distance : 11

75
Tree	allSymbols
Code	allSymbols
Distance : 11

76
Tree	assertChanges
Code	assertChanges
Distance : 11

77
Tree	assertNotNull
Code	assertNotNull
Distance : 11

78
Tree	checkNumberOfInvocations
Code	checkNumberOfInvocations
Distance : 11

79
Tree	info
Code	info
Distance : 11

80
Tree	Vector3D
Code	Vector3D
Distance : 11

81
Tree	Foo
Code	Foo
Distance : 11

82
Tree	Var
Code	Var
Distance : 11

83
Tree	Vector3D
Code	Vector3D
Distance : 11

84
Tree	buf
Code	buf
Distance : 11

85
Tree	Object
Code	Object
Distance : 11

86
Tree	compiler
Code	compiler
Distance : 11

87
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 11

88
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

89
Tree	CharSequence
Code	CharSequence
Distance : 11

90
Tree	Chronology
Code	Chronology
Distance : 11

91
Tree	[
Code	[
Distance : 11

92
Tree	NumberOfInvocationsChecker
Code	NumberOfInvocationsChecker
Distance : 11

93
Tree	int
Code	int
Distance : 11

94
Tree	testEs6
Code	testEs6
Distance : 11

95
Tree	MutableTimePeriod
Code	MutableTimePeriod
Distance : 11

96
Tree	Calendar
Code	Calendar
Distance : 11

97
Tree	assertEquals
Code	assertEquals
Distance : 11

98
Tree	Invocation
Code	Invocation
Distance : 11

99
Tree	testWarning
Code	testWarning
Distance : 11

100
Tree	testModules
Code	testModules
Distance : 11

101
Tree	testNoWarning
Code	testNoWarning
Distance : 11

102
Tree	EigenDecompositionImpl
Code	EigenDecompositionImpl
Distance : 11

103
Tree	List
Code	List
Distance : 11

104
Tree	PolymerClassDefinition
Code	PolymerClassDefinition
Distance : 11

105
Tree	result
Code	result
Distance : 11

106
Tree	testWarning
Code	testWarning
Distance : 11

107
Tree	Node
Code	Node
Distance : 11

108
Tree	Node
Code	Node
Distance : 11

109
Tree	long
Code	long
Distance : 11

110
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 11

111
Tree	Assertions
Code	Assertions
Distance : 11

112
Tree	Interval
Code	Interval
Distance : 11

113
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 11

114
Tree	Assertions
Code	Assertions
Distance : 11

115
Tree	InvocationMatcher
Code	InvocationMatcher
Distance : 11

116
Tree	Interval
Code	Interval
Distance : 11

117
Tree	List
Code	List
Distance : 11

118
Tree	CharSequence
Code	CharSequence
Distance : 11

119
Tree	Chronology
Code	Chronology
Distance : 11

120
Tree	NumberOfInvocationsChecker
Code	NumberOfInvocationsChecker
Distance : 11

121
Tree	int
Code	int
Distance : 11

122
Tree	testEs6
Code	testEs6
Distance : 11

123
Tree	InvocationMatcher
Code	InvocationMatcher
Distance : 11

124
Tree	testNoWarning
Code	testNoWarning
Distance : 11

125
Tree	Type
Code	Type
Distance : 11

126
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 11

127
Tree	assumeTrue
Code	assumeTrue
Distance : 11

128
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

129
Tree	ScopeCreator
Code	ScopeCreator
Distance : 11

130
Tree	void
Code	void
Distance : 11

131
Tree	Preconditions
Code	Preconditions
Distance : 11

132
Tree	testTypes
Code	testTypes
Distance : 11

133
Tree	TimeZone
Code	TimeZone
Distance : 11

134
Tree	EigenDecompositionImpl
Code	EigenDecompositionImpl
Distance : 11

135
Tree	Require
Code	Require
Distance : 11

136
Tree	checkArgument
Code	checkArgument
Distance : 11

137
Tree	LinkedHashMap
Code	LinkedHashMap
Distance : 11

138
Tree	ProcessDefines
Code	ProcessDefines
Distance : 11

139
Tree	LocalQName
Code	LocalQName
Distance : 11

140
Tree	Type
Code	Type
Distance : 11

141
Tree	LINE_JOINER
Code	LINE_JOINER
Distance : 11

142
Tree	assumeTrue
Code	assumeTrue
Distance : 11

143
Tree	result
Code	result
Distance : 11

144
Tree	final
Code	final
Distance : 11

145
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 11

146
Tree	PolymerClassDefinition
Code	PolymerClassDefinition
Distance : 11

147
Tree	testModules
Code	testModules
Distance : 11

148
Tree	testSameEs6
Code	testSameEs6
Distance : 11

149
Tree	Invocation
Code	Invocation
Distance : 11

150
Tree	long
Code	long
Distance : 11

151
Tree	CharSet
Code	CharSet
Distance : 11

152
Tree	compiler
Code	compiler
Distance : 11

153
Tree	Object
Code	Object
Distance : 11

154
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

155
Tree	ParamChecks
Code	ParamChecks
Distance : 11

156
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 11

157
Tree	[
Code	[
Distance : 11

158
Tree	InvocationContainer
Code	InvocationContainer
Distance : 11

159
Tree	GradientPaint
Code	GradientPaint
Distance : 11

160
Tree	MutableTimePeriod
Code	MutableTimePeriod
Distance : 11

161
Tree	Calendar
Code	Calendar
Distance : 11

162
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 11

163
Tree	separator
Code	separator
Distance : 11

164
Tree	HashSet
Code	HashSet
Distance : 11

165
Tree	pos
Code	pos
Distance : 11

166
Tree	assertEquals
Code	assertEquals
Distance : 11

167
Tree	Long
Code	Long
Distance : 11

168
Tree	ProcessCommonJSModules
Code	ProcessCommonJSModules
Distance : 11

169
Tree	for
Code	for
Distance : 11

170
Tree	sourceMap
Code	sourceMap
Distance : 11

171
Tree	super
Code	super
Distance : 11

172
Tree	Equals
Code	Equals
Distance : 11

173
Tree	HasStackTrace
Code	HasStackTrace
Distance : 11

174
Tree	testTypesWithCommonExterns
Code	testTypesWithCommonExterns
Distance : 11

175
Tree	DateParser
Code	DateParser
Distance : 11

176
Tree	ReferenceCollectingCallback
Code	ReferenceCollectingCallback
Distance : 11

177
Tree	UniformRandomProvider
Code	UniformRandomProvider
Distance : 11

178
Tree	markVerifiedInOrder
Code	markVerifiedInOrder
Distance : 11

179
Tree	ImportLogBean
Code	ImportLogBean
Distance : 11

180
Tree	CHAR_CONS
Code	CHAR_CONS
Distance : 11

181
Tree	NormalDistribution
Code	NormalDistribution
Distance : 11

182
Tree	RenameLabels
Code	RenameLabels
Distance : 11

183
Tree	CharRange
Code	CharRange
Distance : 11

184
Tree	Map
Code	Map
Distance : 11

185
Tree	LastArguments
Code	LastArguments
Distance : 11

186
Tree	exceptionContext
Code	exceptionContext
Distance : 11

187
Tree	given
Code	given
Distance : 11

188
Tree	parent
Code	parent
Distance : 11

189
Tree	Class
Code	Class
Distance : 11

190
Tree	Locale
Code	Locale
Distance : 11

191
Tree	GlobalTypeInfoCollector
Code	GlobalTypeInfoCollector
Distance : 11

192
Tree	DateTimeField
Code	DateTimeField
Distance : 11

193
Tree	TimePeriod
Code	TimePeriod
Distance : 11

194
Tree	Sources
Code	Sources
Distance : 11

195
Tree	MutableDuration
Code	MutableDuration
Distance : 11

196
Tree	CompilerPass
Code	CompilerPass
Distance : 11

197
Tree	UnivariateRealSolver
Code	UnivariateRealSolver
Distance : 11

198
Tree	Test
Code	Test
Distance : 11

199
Tree	UnitSphereRandomVectorGenerator
Code	UnitSphereRandomVectorGenerator
Distance : 11

========================================================================


========================================================================
Example Number: 33
Parent Code is: 
c . canInline ()
-------------------------------------------------------------------------------
Child code is: 
c . canInline ( t . getScope () )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=canInline}) (216{val=()})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=canInline}) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/3/parent/src_com_google_javascript_jscomp_FlowSensitiveInlineVariables.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	c
Code	c
Distance : 8

1
Tree	stmt
Code	stmt
Distance : 9

2
Tree	test
Code	test
Distance : 9

3
Tree	chart
Code	chart
Distance : 9

4
Tree	mLocale
Code	mLocale
Distance : 9

5
Tree	getChronology
Code	getChronology
Distance : 9

6
Tree	compilerOptions
Code	compilerOptions
Distance : 9

7
Tree	converter
Code	converter
Distance : 9

8
Tree	checker
Code	checker
Distance : 9

9
Tree	InvocationContainerImpl
Code	InvocationContainerImpl
Distance : 9

10
Tree	parseFunctionTail
Code	parseFunctionTail
Distance : 9

11
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 9

12
Tree	set
Code	set
Distance : 9

13
Tree	Complex
Code	Complex
Distance : 9

14
Tree	iChronology
Code	iChronology
Distance : 9

15
Tree	STATIC_C
Code	STATIC_C
Distance : 9

16
Tree	factor
Code	factor
Distance : 9

17
Tree	VerificationModeFactory
Code	VerificationModeFactory
Distance : 9

18
Tree	strategy
Code	strategy
Distance : 9

19
Tree	getISOUTC
Code	getISOUTC
Distance : 9

20
Tree	position
Code	position
Distance : 9

21
Tree	URI
Code	URI
Distance : 9

22
Tree	axis
Code	axis
Distance : 9

23
Tree	CharSequence
Code	CharSequence
Distance : 9

24
Tree	BaseGJChronology
Code	BaseGJChronology
Distance : 9

25
Tree	inputs
Code	inputs
Distance : 9

26
Tree	Path
Code	Path
Distance : 9

27
Tree	r
Code	r
Distance : 9

28
Tree	transformer
Code	transformer
Distance : 9

29
Tree	description
Code	description
Distance : 9

30
Tree	ReadablePartial
Code	ReadablePartial
Distance : 9

31
Tree	integ
Code	integ
Distance : 9

32
Tree	date
Code	date
Distance : 9

33
Tree	Chronology
Code	Chronology
Distance : 9

34
Tree	scriptRoot
Code	scriptRoot
Distance : 9

35
Tree	zone
Code	zone
Distance : 9

36
Tree	mutNum
Code	mutNum
Distance : 9

37
Tree	BasicChronology
Code	BasicChronology
Distance : 9

38
Tree	testSame
Code	testSame
Distance : 9

39
Tree	registry
Code	registry
Distance : 9

40
Tree	newChild
Code	newChild
Distance : 9

41
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 9

42
Tree	startInstant
Code	startInstant
Distance : 9

43
Tree	block
Code	block
Distance : 9

44
Tree	LocalDate
Code	LocalDate
Distance : 9

45
Tree	instant
Code	instant
Distance : 9

46
Tree	parentClass
Code	parentClass
Distance : 9

47
Tree	sub
Code	sub
Distance : 9

48
Tree	factor
Code	factor
Distance : 9

49
Tree	cal
Code	cal
Distance : 9

50
Tree	features
Code	features
Distance : 9

51
Tree	STATIC_C
Code	STATIC_C
Distance : 9

52
Tree	parentClass
Code	parentClass
Distance : 9

53
Tree	VerificationMode
Code	VerificationMode
Distance : 9

54
Tree	Chronology
Code	Chronology
Distance : 9

55
Tree	sub
Code	sub
Distance : 9

56
Tree	Calendar.JANUARY
Code	Calendar.JANUARY
Distance : 9

57
Tree	target
Code	target
Distance : 9

58
Tree	Times
Code	Times
Distance : 9

59
Tree	BaseGJChronology
Code	BaseGJChronology
Distance : 9

60
Tree	zone
Code	zone
Distance : 9

61
Tree	registry
Code	registry
Distance : 9

62
Tree	newChild
Code	newChild
Distance : 9

63
Tree	block
Code	block
Distance : 9

64
Tree	CharSequence
Code	CharSequence
Distance : 9

65
Tree	STATIC_C
Code	STATIC_C
Distance : 9

66
Tree	cal
Code	cal
Distance : 9

67
Tree	CharSequence
Code	CharSequence
Distance : 9

68
Tree	block
Code	block
Distance : 9

69
Tree	compilerOptions
Code	compilerOptions
Distance : 9

70
Tree	getChronology
Code	getChronology
Distance : 9

71
Tree	VerificationMode
Code	VerificationMode
Distance : 9

72
Tree	scopeCreator
Code	scopeCreator
Distance : 9

73
Tree	error
Code	error
Distance : 9

74
Tree	getLastChild
Code	getLastChild
Distance : 9

75
Tree	r
Code	r
Distance : 9

76
Tree	ReadablePartial
Code	ReadablePartial
Distance : 9

77
Tree	Calendar.JANUARY
Code	Calendar.JANUARY
Distance : 9

78
Tree	integ
Code	integ
Distance : 9

79
Tree	scriptRoot
Code	scriptRoot
Distance : 9

80
Tree	verifier
Code	verifier
Distance : 9

81
Tree	target
Code	target
Distance : 9

82
Tree	BaseGJChronology
Code	BaseGJChronology
Distance : 9

83
Tree	BasicChronology
Code	BasicChronology
Distance : 9

84
Tree	testSame
Code	testSame
Distance : 9

85
Tree	zone
Code	zone
Distance : 9

86
Tree	URI
Code	URI
Distance : 9

87
Tree	registry
Code	registry
Distance : 9

88
Tree	newChild
Code	newChild
Distance : 9

89
Tree	test
Code	test
Distance : 9

90
Tree	chart
Code	chart
Distance : 9

91
Tree	Times
Code	Times
Distance : 9

92
Tree	millis
Code	millis
Distance : 9

93
Tree	getLastChild
Code	getLastChild
Distance : 9

94
Tree	Times
Code	Times
Distance : 9

95
Tree	compilerOptions
Code	compilerOptions
Distance : 9

96
Tree	CompositeFormat
Code	CompositeFormat
Distance : 9

97
Tree	late
Code	late
Distance : 9

98
Tree	chrono
Code	chrono
Distance : 9

99
Tree	axis
Code	axis
Distance : 9

100
Tree	test1
Code	test1
Distance : 9

101
Tree	position
Code	position
Distance : 9

102
Tree	stmt
Code	stmt
Distance : 9

103
Tree	stubber
Code	stubber
Distance : 9

104
Tree	mLocale
Code	mLocale
Distance : 9

105
Tree	suffix
Code	suffix
Distance : 9

106
Tree	getDurationType
Code	getDurationType
Distance : 9

107
Tree	converter
Code	converter
Distance : 9

108
Tree	iMillis
Code	iMillis
Distance : 9

109
Tree	BaseTranspiler.CompileResult
Code	BaseTranspiler.CompileResult
Distance : 9

110
Tree	c2
Code	c2
Distance : 9

111
Tree	checker
Code	checker
Distance : 9

112
Tree	style
Code	style
Distance : 9

113
Tree	InvocationContainerImpl
Code	InvocationContainerImpl
Distance : 9

114
Tree	getChronology
Code	getChronology
Distance : 9

115
Tree	startInstant
Code	startInstant
Distance : 9

116
Tree	chart
Code	chart
Distance : 9

117
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 9

118
Tree	c
Code	c
Distance : 8

119
Tree	transformer
Code	transformer
Distance : 9

120
Tree	description
Code	description
Distance : 9

121
Tree	insets
Code	insets
Distance : 9

122
Tree	BasicChronology
Code	BasicChronology
Distance : 9

123
Tree	getAllType
Code	getAllType
Distance : 9

124
Tree	date
Code	date
Distance : 9

125
Tree	testSame
Code	testSame
Distance : 9

126
Tree	LocalDate
Code	LocalDate
Distance : 9

127
Tree	typeRegistry
Code	typeRegistry
Distance : 9

128
Tree	EigenDecomposition
Code	EigenDecomposition
Distance : 9

129
Tree	script
Code	script
Distance : 9

130
Tree	getOptions
Code	getOptions
Distance : 9

131
Tree	parse
Code	parse
Distance : 9

132
Tree	mutNum
Code	mutNum
Distance : 9

133
Tree	passName
Code	passName
Distance : 9

134
Tree	number
Code	number
Distance : 9

135
Tree	URI
Code	URI
Distance : 9

136
Tree	inEnv
Code	inEnv
Distance : 9

137
Tree	test
Code	test
Distance : 9

138
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 9

139
Tree	parseFunctionTail
Code	parseFunctionTail
Distance : 9

140
Tree	transpiledFeatures
Code	transpiledFeatures
Distance : 9

141
Tree	factor
Code	factor
Distance : 9

142
Tree	VerificationMode
Code	VerificationMode
Distance : 9

143
Tree	callback
Code	callback
Distance : 9

144
Tree	maybeMarkFeaturesAsTranspiledAway
Code	maybeMarkFeaturesAsTranspiledAway
Distance : 9

145
Tree	LanguageMode.ECMASCRIPT_NEXT
Code	LanguageMode.ECMASCRIPT_NEXT
Distance : 9

146
Tree	verifier
Code	verifier
Distance : 9

147
Tree	process
Code	process
Distance : 9

148
Tree	atLeastOnce
Code	atLeastOnce
Distance : 9

149
Tree	regex
Code	regex
Distance : 9

150
Tree	invocationListeners
Code	invocationListeners
Distance : 9

151
Tree	orientation
Code	orientation
Distance : 9

152
Tree	DateTimeZone
Code	DateTimeZone
Distance : 9

153
Tree	rule
Code	rule
Distance : 9

154
Tree	Require
Code	Require
Distance : 9

155
Tree	scopeCreator
Code	scopeCreator
Distance : 9

156
Tree	Calendar.JANUARY
Code	Calendar.JANUARY
Distance : 9

157
Tree	VerificationModeImpl
Code	VerificationModeImpl
Distance : 9

158
Tree	error
Code	error
Distance : 9

159
Tree	discrepancy
Code	discrepancy
Distance : 9

160
Tree	partial
Code	partial
Distance : 9

161
Tree	target
Code	target
Distance : 9

162
Tree	c . canInline ( CharSequence , STRING_CONSTANT , c )
Code	c . canInline ( CharSequence , STRING_CONSTANT , c )
Distance : 5

163
Tree	features
Code	features
Distance : 9

164
Tree	c . canInline ( c , STRING_CONSTANT , c )
Code	c . canInline ( c , STRING_CONSTANT , c )
Distance : 5

165
Tree	series
Code	series
Distance : 9

166
Tree	locale
Code	locale
Distance : 9

167
Tree	JSTypeRegistry
Code	JSTypeRegistry
Distance : 9

168
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 9

169
Tree	filtered
Code	filtered
Distance : 9

170
Tree	this
Code	this
Distance : 9

171
Tree	c . canInline ( false , STRING_CONSTANT , c )
Code	c . canInline ( false , STRING_CONSTANT , c )
Distance : 5

172
Tree	code
Code	code
Distance : 9

173
Tree	pass
Code	pass
Distance : 9

174
Tree	set
Code	set
Distance : 9

175
Tree	isBlock
Code	isBlock
Distance : 9

176
Tree	Complex
Code	Complex
Distance : 9

177
Tree	assign
Code	assign
Distance : 9

178
Tree	chronology
Code	chronology
Distance : 9

179
Tree	UnivariateFunction
Code	UnivariateFunction
Distance : 9

180
Tree	WINDOW_NAME
Code	WINDOW_NAME
Distance : 9

181
Tree	ImmutableSet
Code	ImmutableSet
Distance : 9

182
Tree	VerificationModeFactory
Code	VerificationModeFactory
Distance : 9

183
Tree	parentClass
Code	parentClass
Distance : 9

184
Tree	strategy
Code	strategy
Distance : 9

185
Tree	getISOUTC
Code	getISOUTC
Distance : 9

186
Tree	iChronology
Code	iChronology
Distance : 9

187
Tree	Chronology
Code	Chronology
Distance : 9

188
Tree	scopeRoot
Code	scopeRoot
Distance : 9

189
Tree	Period
Code	Period
Distance : 9

190
Tree	c
Code	c
Distance : 8

191
Tree	Period
Code	Period
Distance : 9

192
Tree	sub
Code	sub
Distance : 9

193
Tree	features
Code	features
Distance : 9

194
Tree	cal
Code	cal
Distance : 9

195
Tree	Period
Code	Period
Distance : 9

196
Tree	SymbolTable
Code	SymbolTable
Distance : 9

197
Tree	visitForOf
Code	visitForOf
Distance : 9

198
Tree	Path
Code	Path
Distance : 9

199
Tree	inputs
Code	inputs
Distance : 9

========================================================================


========================================================================
Example Number: 34
Parent Code is: 
int len = thisBuf.length - strLen ;
-------------------------------------------------------------------------------
Child code is: 
int len = size - strLen + NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=len}) (204{val==}) (27 (40{val=thisBuf.length}) (201{val=-}) (800{val=strLen}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=len}) (204{val==}) (27 (27 (800{val=size}) (201{val=-}) (800{val=strLen})) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/61/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	super ( strLen , strLen , null , false ) ;
Code	super ( strLen , strLen , null , false ) ;
Distance : 10

1
Tree	super ( size , strLen , continue; , true ) ;
Code	super ( size , strLen , continue; , true ) ;
Distance : 9

2
Tree	super ( len , size , return; , true ) ;
Code	super ( len , size , return; , true ) ;
Distance : 8

3
Tree	super ( len , size , break; , true ) ;
Code	super ( len , size , break; , true ) ;
Distance : 8

4
Tree	super ( len , size , default: , false ) ;
Code	super ( len , size , default: , false ) ;
Distance : 8

5
Tree	super ( strLen , size , default: , true ) ;
Code	super ( strLen , size , default: , true ) ;
Distance : 9

6
Tree	super ( len , size , continue; , true ) ;
Code	super ( len , size , continue; , true ) ;
Distance : 8

7
Tree	super ( size , len , return; , false ) ;
Code	super ( size , len , return; , false ) ;
Distance : 10

8
Tree	super ( size , len , break; , false ) ;
Code	super ( size , len , break; , false ) ;
Distance : 10

9
Tree	super ( size , len , super(); , true ) ;
Code	super ( size , len , super(); , true ) ;
Distance : 10

10
Tree	super ( size , len , continue; , false ) ;
Code	super ( size , len , continue; , false ) ;
Distance : 10

11
Tree	super ( size , strLen , return; , false ) ;
Code	super ( size , strLen , return; , false ) ;
Distance : 9

12
Tree	super ( size , strLen , super(); , true ) ;
Code	super ( size , strLen , super(); , true ) ;
Distance : 9

13
Tree	super ( size , strLen , default: , false ) ;
Code	super ( size , strLen , default: , false ) ;
Distance : 9

14
Tree	super ( size , strLen , break; , false ) ;
Code	super ( size , strLen , break; , false ) ;
Distance : 9

15
Tree	super ( strLen , size , return; , true ) ;
Code	super ( strLen , size , return; , true ) ;
Distance : 9

16
Tree	super ( len , size , super(); , true ) ;
Code	super ( len , size , super(); , true ) ;
Distance : 8

17
Tree	super ( len , size , return; , false ) ;
Code	super ( len , size , return; , false ) ;
Distance : 8

18
Tree	super ( strLen , size , break; , true ) ;
Code	super ( strLen , size , break; , true ) ;
Distance : 9

19
Tree	super ( len , size , break; , false ) ;
Code	super ( len , size , break; , false ) ;
Distance : 8

20
Tree	super ( strLen , size , continue; , true ) ;
Code	super ( strLen , size , continue; , true ) ;
Distance : 9

21
Tree	super ( strLen , size , default: , false ) ;
Code	super ( strLen , size , default: , false ) ;
Distance : 9

22
Tree	super ( len , size , continue; , false ) ;
Code	super ( len , size , continue; , false ) ;
Distance : 8

23
Tree	super ( size , len , super(); , false ) ;
Code	super ( size , len , super(); , false ) ;
Distance : 10

24
Tree	super ( size , size , null , true ) ;
Code	super ( size , size , null , true ) ;
Distance : 9

25
Tree	super ( size , strLen , super(); , false ) ;
Code	super ( size , strLen , super(); , false ) ;
Distance : 9

26
Tree	super ( len , size , super(); , false ) ;
Code	super ( len , size , super(); , false ) ;
Distance : 8

27
Tree	super ( size , strLen , continue; , false ) ;
Code	super ( size , strLen , continue; , false ) ;
Distance : 9

28
Tree	super ( strLen , size , super(); , true ) ;
Code	super ( strLen , size , super(); , true ) ;
Distance : 9

29
Tree	super ( size , strLen , break; , true ) ;
Code	super ( size , strLen , break; , true ) ;
Distance : 9

30
Tree	super ( size , len , continue; , true ) ;
Code	super ( size , len , continue; , true ) ;
Distance : 10

31
Tree	super ( strLen , strLen , null , false ) ; class
Code	super ( strLen , strLen , null , false ) ; class
Distance : 11

32
Tree	super ( strLen , strLen , null , false ) ; f
Code	super ( strLen , strLen , null , false ) ; f
Distance : 11

33
Tree	super ( strLen , strLen , null , false ) ; Override
Code	super ( strLen , strLen , null , false ) ; Override
Distance : 11

34
Tree	super ( strLen , strLen , null , false ) ; mode
Code	super ( strLen , strLen , null , false ) ; mode
Distance : 11

35
Tree	super ( strLen , strLen , null , false ) ; true
Code	super ( strLen , strLen , null , false ) ; true
Distance : 11

36
Tree	super ( strLen , strLen , null , false ) ; mock
Code	super ( strLen , strLen , null , false ) ; mock
Distance : 11

37
Tree	super ( strLen , strLen , null , false ) ; MathRuntimeException
Code	super ( strLen , strLen , null , false ) ; MathRuntimeException
Distance : 11

38
Tree	super ( strLen , strLen , null , false ) ; array
Code	super ( strLen , strLen , null , false ) ; array
Distance : 11

39
Tree	super ( strLen , strLen , null , false ) ; <>
Code	super ( strLen , strLen , null , false ) ; <>
Distance : 11

40
Tree	super ( strLen , strLen , null , false ) ; {}
Code	super ( strLen , strLen , null , false ) ; {}
Distance : 11

41
Tree	super ( strLen , strLen , null , false ) ; x
Code	super ( strLen , strLen , null , false ) ; x
Distance : 11

42
Tree	super ( size , size , default: , true ) ;
Code	super ( size , size , default: , true ) ;
Distance : 9

43
Tree	super ( size , strLen , return; , true ) ;
Code	super ( size , strLen , return; , true ) ;
Distance : 9

44
Tree	super ( size , size , return; , true ) ;
Code	super ( size , size , return; , true ) ;
Distance : 9

45
Tree	super ( size , size , default: , false ) ;
Code	super ( size , size , default: , false ) ;
Distance : 9

46
Tree	super ( size , size , continue; , true ) ;
Code	super ( size , size , continue; , true ) ;
Distance : 9

47
Tree	super ( size , size , super(); , true ) ;
Code	super ( size , size , super(); , true ) ;
Distance : 9

48
Tree	super ( size , size , return; , false ) ;
Code	super ( size , size , return; , false ) ;
Distance : 9

49
Tree	super ( size , size , continue; , false ) ;
Code	super ( size , size , continue; , false ) ;
Distance : 9

50
Tree	super ( size , size , super(); , false ) ;
Code	super ( size , size , super(); , false ) ;
Distance : 9

51
Tree	super ( size , len , default: , true ) ;
Code	super ( size , len , default: , true ) ;
Distance : 10

52
Tree	super ( size , strLen , default: , true ) ;
Code	super ( size , strLen , default: , true ) ;
Distance : 9

53
Tree	super ( len , size , default: , true ) ;
Code	super ( len , size , default: , true ) ;
Distance : 8

54
Tree	super ( size , len , return; , true ) ;
Code	super ( size , len , return; , true ) ;
Distance : 10

55
Tree	super ( size , len , break; , true ) ;
Code	super ( size , len , break; , true ) ;
Distance : 10

56
Tree	super ( size , len , default: , false ) ;
Code	super ( size , len , default: , false ) ;
Distance : 10

57
Tree	super ( size , size , break; , true ) ;
Code	super ( size , size , break; , true ) ;
Distance : 9

58
Tree	super ( strLen , size , return; , false ) ;
Code	super ( strLen , size , return; , false ) ;
Distance : 9

59
Tree	super ( size , size , break; , false ) ;
Code	super ( size , size , break; , false ) ;
Distance : 9

60
Tree	super ( strLen , size , break; , false ) ;
Code	super ( strLen , size , break; , false ) ;
Distance : 9

61
Tree	super ( size , strLen , null , true ) ;
Code	super ( size , strLen , null , true ) ;
Distance : 9

62
Tree	super ( len , len , super(); , false ) ;
Code	super ( len , len , super(); , false ) ;
Distance : 9

63
Tree	super ( strLen , len , return; , false ) ;
Code	super ( strLen , len , return; , false ) ;
Distance : 10

64
Tree	super ( strLen , len , super(); , true ) ;
Code	super ( strLen , len , super(); , true ) ;
Distance : 10

65
Tree	super ( strLen , len , break; , false ) ;
Code	super ( strLen , len , break; , false ) ;
Distance : 10

66
Tree	super ( len , size , null , true ) ;
Code	super ( len , size , null , true ) ;
Distance : 8

67
Tree	super ( strLen , len , continue; , false ) ;
Code	super ( strLen , len , continue; , false ) ;
Distance : 10

68
Tree	super ( len , strLen , super(); , false ) ;
Code	super ( len , strLen , super(); , false ) ;
Distance : 9

69
Tree	super ( strLen , strLen , super(); , true ) ;
Code	super ( strLen , strLen , super(); , true ) ;
Distance : 10

70
Tree	super ( strLen , strLen , return; , false ) ;
Code	super ( strLen , strLen , return; , false ) ;
Distance : 10

71
Tree	super ( strLen , strLen , break; , false ) ;
Code	super ( strLen , strLen , break; , false ) ;
Distance : 10

72
Tree	super ( strLen , strLen , continue; , false ) ;
Code	super ( strLen , strLen , continue; , false ) ;
Distance : 10

73
Tree	super ( strLen , strLen , continue; , true ) ;
Code	super ( strLen , strLen , continue; , true ) ;
Distance : 10

74
Tree	super ( size , len , null , false ) ;
Code	super ( size , len , null , false ) ;
Distance : 10

75
Tree	super ( strLen , len , super(); , false ) ;
Code	super ( strLen , len , super(); , false ) ;
Distance : 10

76
Tree	super ( strLen , size , null , true ) ;
Code	super ( strLen , size , null , true ) ;
Distance : 9

77
Tree	super ( strLen , strLen , super(); , false ) ;
Code	super ( strLen , strLen , super(); , false ) ;
Distance : 10

78
Tree	super ( len , size , null , false ) ;
Code	super ( len , size , null , false ) ;
Distance : 8

79
Tree	super ( strLen , size , null , false ) ;
Code	super ( strLen , size , null , false ) ;
Distance : 9

80
Tree	super ( len , len , null , true ) ;
Code	super ( len , len , null , true ) ;
Distance : 9

81
Tree	super ( len , strLen , null , true ) ;
Code	super ( len , strLen , null , true ) ;
Distance : 9

82
Tree	super ( strLen , len , null , true ) ;
Code	super ( strLen , len , null , true ) ;
Distance : 10

83
Tree	super ( len , len , null , false ) ;
Code	super ( len , len , null , false ) ;
Distance : 9

84
Tree	super ( strLen , strLen , null , true ) ;
Code	super ( strLen , strLen , null , true ) ;
Distance : 10

85
Tree	super ( len , strLen , null , false ) ;
Code	super ( len , strLen , null , false ) ;
Distance : 9

86
Tree	super ( len , len , default: , true ) ;
Code	super ( len , len , default: , true ) ;
Distance : 9

87
Tree	super ( size , strLen , null , false ) ;
Code	super ( size , strLen , null , false ) ;
Distance : 9

88
Tree	super ( len , strLen , continue; , false ) ;
Code	super ( len , strLen , continue; , false ) ;
Distance : 9

89
Tree	super ( strLen , len , null , false ) ;
Code	super ( strLen , len , null , false ) ;
Distance : 10

90
Tree	super ( size , len , null , true ) ;
Code	super ( size , len , null , true ) ;
Distance : 10

91
Tree	super ( strLen , size , continue; , false ) ;
Code	super ( strLen , size , continue; , false ) ;
Distance : 9

92
Tree	super ( strLen , strLen , default: , false ) ;
Code	super ( strLen , strLen , default: , false ) ;
Distance : 10

93
Tree	super ( len , strLen , default: , true ) ;
Code	super ( len , strLen , default: , true ) ;
Distance : 9

94
Tree	super ( size , size , null , false ) ;
Code	super ( size , size , null , false ) ;
Distance : 9

95
Tree	super ( len , len , return; , true ) ;
Code	super ( len , len , return; , true ) ;
Distance : 9

96
Tree	super ( len , len , break; , true ) ;
Code	super ( len , len , break; , true ) ;
Distance : 9

97
Tree	super ( strLen , size , super(); , false ) ;
Code	super ( strLen , size , super(); , false ) ;
Distance : 9

98
Tree	super ( strLen , len , default: , true ) ;
Code	super ( strLen , len , default: , true ) ;
Distance : 10

99
Tree	super ( len , len , continue; , true ) ;
Code	super ( len , len , continue; , true ) ;
Distance : 9

100
Tree	super ( len , strLen , return; , true ) ;
Code	super ( len , strLen , return; , true ) ;
Distance : 9

101
Tree	super ( len , strLen , break; , true ) ;
Code	super ( len , strLen , break; , true ) ;
Distance : 9

102
Tree	super ( len , strLen , default: , false ) ;
Code	super ( len , strLen , default: , false ) ;
Distance : 9

103
Tree	super ( len , strLen , continue; , true ) ;
Code	super ( len , strLen , continue; , true ) ;
Distance : 9

104
Tree	super ( strLen , strLen , default: , true ) ;
Code	super ( strLen , strLen , default: , true ) ;
Distance : 10

105
Tree	super ( len , len , default: , false ) ;
Code	super ( len , len , default: , false ) ;
Distance : 9

106
Tree	super ( strLen , len , return; , true ) ;
Code	super ( strLen , len , return; , true ) ;
Distance : 10

107
Tree	super ( len , strLen , break; , false ) ;
Code	super ( len , strLen , break; , false ) ;
Distance : 9

108
Tree	super ( strLen , strLen , break; , true ) ;
Code	super ( strLen , strLen , break; , true ) ;
Distance : 10

109
Tree	super ( len , len , return; , false ) ;
Code	super ( len , len , return; , false ) ;
Distance : 9

110
Tree	super ( len , strLen , super(); , true ) ;
Code	super ( len , strLen , super(); , true ) ;
Distance : 9

111
Tree	super ( len , strLen , return; , false ) ;
Code	super ( len , strLen , return; , false ) ;
Distance : 9

112
Tree	super ( strLen , len , continue; , true ) ;
Code	super ( strLen , len , continue; , true ) ;
Distance : 10

113
Tree	super ( strLen , strLen , return; , true ) ;
Code	super ( strLen , strLen , return; , true ) ;
Distance : 10

114
Tree	super ( len , len , continue; , false ) ;
Code	super ( len , len , continue; , false ) ;
Distance : 9

115
Tree	super ( strLen , len , default: , false ) ;
Code	super ( strLen , len , default: , false ) ;
Distance : 10

116
Tree	super ( strLen , len , break; , true ) ;
Code	super ( strLen , len , break; , true ) ;
Distance : 10

117
Tree	super ( len , len , super(); , true ) ;
Code	super ( len , len , super(); , true ) ;
Distance : 9

118
Tree	super ( len , len , break; , false ) ;
Code	super ( len , len , break; , false ) ;
Distance : 9

119
Tree	super ( strLen , strLen , null , false ) ; n
Code	super ( strLen , strLen , null , false ) ; n
Distance : 11

120
Tree	super ( strLen , strLen , null , false ) ; +
Code	super ( strLen , strLen , null , false ) ; +
Distance : 11

121
Tree	super ( strLen , strLen , null , false ) ; str
Code	super ( strLen , strLen , null , false ) ; str
Distance : 11

122
Tree	super ( strLen , strLen , null , false ) ; compiler
Code	super ( strLen , strLen , null , false ) ; compiler
Distance : 11

123
Tree	super ( strLen , strLen , null , false ) ; String
Code	super ( strLen , strLen , null , false ) ; String
Distance : 11

124
Tree	super ( strLen , strLen , null , false ) ; [
Code	super ( strLen , strLen , null , false ) ; [
Distance : 11

125
Tree	super ( strLen , strLen , null , false ) ; e
Code	super ( strLen , strLen , null , false ) ; e
Distance : 11

126
Tree	super ( strLen , strLen , null , false ) ; reportCodeChange
Code	super ( strLen , strLen , null , false ) ; reportCodeChange
Distance : 11

127
Tree	super ( strLen , strLen , null , false ) ; int
Code	super ( strLen , strLen , null , false ) ; int
Distance : 11

128
Tree	super ( strLen , strLen , null , false ) ; i
Code	super ( strLen , strLen , null , false ) ; i
Distance : 11

129
Tree	super ( strLen , strLen , null , false ) ; super
Code	super ( strLen , strLen , null , false ) ; super
Distance : 11

130
Tree	super ( strLen , strLen , null , false ) ; FastMath
Code	super ( strLen , strLen , null , false ) ; FastMath
Distance : 11

131
Tree	super ( strLen , strLen , null , false ) ; expected
Code	super ( strLen , strLen , null , false ) ; expected
Distance : 11

132
Tree	super ( strLen , strLen , null , false ) ; IllegalArgumentException
Code	super ( strLen , strLen , null , false ) ; IllegalArgumentException
Distance : 11

133
Tree	super ( strLen , strLen , null , false ) ; Preconditions
Code	super ( strLen , strLen , null , false ) ; Preconditions
Distance : 11

134
Tree	super ( strLen , strLen , null , false ) ; double
Code	super ( strLen , strLen , null , false ) ; double
Distance : 11

135
Tree	super ( strLen , strLen , null , false ) ; checkState
Code	super ( strLen , strLen , null , false ) ; checkState
Distance : 11

136
Tree	super ( strLen , strLen , null , false ) ; null
Code	super ( strLen , strLen , null , false ) ; null
Distance : 11

137
Tree	super ( strLen , strLen , null , false ) ; return
Code	super ( strLen , strLen , null , false ) ; return
Distance : 11

138
Tree	super ( strLen , strLen , null , false ) ; if
Code	super ( strLen , strLen , null , false ) ; if
Distance : 11

139
Tree	super ( strLen , strLen , null , false ) ; createIllegalArgumentException
Code	super ( strLen , strLen , null , false ) ; createIllegalArgumentException
Distance : 11

140
Tree	super ( strLen , strLen , null , false ) ; -
Code	super ( strLen , strLen , null , false ) ; -
Distance : 11

141
Tree	super ( strLen , strLen , null , false ) ; value
Code	super ( strLen , strLen , null , false ) ; value
Distance : 11

142
Tree	super ( strLen , strLen , null , false ) ; !=
Code	super ( strLen , strLen , null , false ) ; !=
Distance : 11

143
Tree	super ( strLen , strLen , null , false ) ; T
Code	super ( strLen , strLen , null , false ) ; T
Distance : 11

144
Tree	super ( strLen , strLen , null , false ) ; &&
Code	super ( strLen , strLen , null , false ) ; &&
Distance : 11

145
Tree	super ( strLen , strLen , null , false ) ; false
Code	super ( strLen , strLen , null , false ) ; false
Distance : 11

146
Tree	super ( strLen , strLen , null , false ) ; NUMBER_CONSTANT
Code	super ( strLen , strLen , null , false ) ; NUMBER_CONSTANT
Distance : 11

147
Tree	super ( strLen , strLen , null , false ) ; STRING_CONSTANT
Code	super ( strLen , strLen , null , false ) ; STRING_CONSTANT
Distance : 11

148
Tree	super ( strLen , strLen , null , false ) ; new
Code	super ( strLen , strLen , null , false ) ; new
Distance : 11

149
Tree	super ( strLen , strLen , null , false ) ; (
Code	super ( strLen , strLen , null , false ) ; (
Distance : 11

150
Tree	super ( strLen , strLen , null , false ) ; <s>
Code	super ( strLen , strLen , null , false ) ; <s>
Distance : 11

151
Tree	super ( strLen , strLen , null , false ) ; int
Code	super ( strLen , strLen , null , false ) ; int
Distance : 11

152
Tree	super ( strLen , strLen , null , false ) ; <blank>
Code	super ( strLen , strLen , null , false ) ; <blank>
Distance : 11

153
Tree	super ( strLen , strLen , null , false ) ; final
Code	super ( strLen , strLen , null , false ) ; final
Distance : 11

154
Tree	super ( strLen , strLen , null , false ) ; this
Code	super ( strLen , strLen , null , false ) ; this
Distance : 11

155
Tree	super ( strLen , strLen , null , false ) ; <
Code	super ( strLen , strLen , null , false ) ; <
Distance : 11

156
Tree	super ( strLen , strLen , null , false ) ; >
Code	super ( strLen , strLen , null , false ) ; >
Distance : 11

157
Tree	super ( strLen , strLen , null , false ) ; @
Code	super ( strLen , strLen , null , false ) ; @
Distance : 11

158
Tree	super ( strLen , strLen , null , false ) ; =
Code	super ( strLen , strLen , null , false ) ; =
Distance : 11

159
Tree	super ( strLen , strLen , null , false ) ; invocation
Code	super ( strLen , strLen , null , false ) ; invocation
Distance : 11

160
Tree	super ( strLen , strLen , null , false ) ; getInstance
Code	super ( strLen , strLen , null , false ) ; getInstance
Distance : 11

161
Tree	super ( strLen , strLen , null , false ) ; serialised
Code	super ( strLen , strLen , null , false ) ; serialised
Distance : 11

162
Tree	super ( strLen , strLen , null , false ) ; testSame
Code	super ( strLen , strLen , null , false ) ; testSame
Distance : 11

163
Tree	super ( strLen , strLen , null , false ) ; type
Code	super ( strLen , strLen , null , false ) ; type
Distance : 11

164
Tree	super ( strLen , strLen , null , false ) ; *
Code	super ( strLen , strLen , null , false ) ; *
Distance : 11

165
Tree	super ( strLen , strLen , null , false ) ; Object
Code	super ( strLen , strLen , null , false ) ; Object
Distance : 11

166
Tree	super ( strLen , strLen , null , false ) ; catch
Code	super ( strLen , strLen , null , false ) ; catch
Distance : 11

167
Tree	super ( strLen , strLen , null , false ) ; nullNotPermitted
Code	super ( strLen , strLen , null , false ) ; nullNotPermitted
Distance : 11

168
Tree	super ( strLen , strLen , null , false ) ; []
Code	super ( strLen , strLen , null , false ) ; []
Distance : 11

169
Tree	super ( strLen , strLen , null , false ) ; !
Code	super ( strLen , strLen , null , false ) ; !
Distance : 11

170
Tree	super ( strLen , strLen , null , false ) ; ParamChecks
Code	super ( strLen , strLen , null , false ) ; ParamChecks
Distance : 11

171
Tree	super ( strLen , strLen , null , false ) ; :
Code	super ( strLen , strLen , null , false ) ; :
Distance : 11

172
Tree	super ( strLen , strLen , null , false ) ; fail
Code	super ( strLen , strLen , null , false ) ; fail
Distance : 11

173
Tree	super ( strLen , strLen , null , false ) ; Args
Code	super ( strLen , strLen , null , false ) ; Args
Distance : 11

174
Tree	super ( strLen , strLen , null , false ) ; List
Code	super ( strLen , strLen , null , false ) ; List
Distance : 11

175
Tree	super ( strLen , strLen , null , false ) ; assertEquals
Code	super ( strLen , strLen , null , false ) ; assertEquals
Distance : 11

176
Tree	super ( strLen , strLen , null , false ) ; LINE_JOINER
Code	super ( strLen , strLen , null , false ) ; LINE_JOINER
Distance : 11

177
Tree	super ( strLen , strLen , null , false ) ; ArrayList
Code	super ( strLen , strLen , null , false ) ; ArrayList
Distance : 11

178
Tree	super ( strLen , strLen , null , false ) ; test
Code	super ( strLen , strLen , null , false ) ; test
Distance : 11

179
Tree	super ( strLen , strLen , null , false ) ; parent
Code	super ( strLen , strLen , null , false ) ; parent
Distance : 11

180
Tree	super ( strLen , strLen , null , false ) ; .
Code	super ( strLen , strLen , null , false ) ; .
Distance : 11

181
Tree	super ( strLen , strLen , null , false ) ; assertThat
Code	super ( strLen , strLen , null , false ) ; assertThat
Distance : 11

182
Tree	super ( strLen , strLen , null , false ) ; fireChangeEvent
Code	super ( strLen , strLen , null , false ) ; fireChangeEvent
Distance : 11

183
Tree	super ( strLen , strLen , null , false ) ; ]
Code	super ( strLen , strLen , null , false ) ; ]
Distance : 11

184
Tree	super ( strLen , strLen , null , false ) ; ==
Code	super ( strLen , strLen , null , false ) ; ==
Distance : 11

185
Tree	super ( strLen , strLen , null , false ) ; public
Code	super ( strLen , strLen , null , false ) ; public
Distance : 11

186
Tree	super ( strLen , strLen , null , false ) ; throw
Code	super ( strLen , strLen , null , false ) ; throw
Distance : 11

187
Tree	super ( strLen , strLen , null , false ) ; boolean
Code	super ( strLen , strLen , null , false ) ; boolean
Distance : 11

188
Tree	super ( strLen , strLen , null , false ) ; void
Code	super ( strLen , strLen , null , false ) ; void
Distance : 11

189
Tree	super ( strLen , strLen , null , false ) ; m
Code	super ( strLen , strLen , null , false ) ; m
Distance : 11

190
Tree	super ( strLen , strLen , null , false ) ; try
Code	super ( strLen , strLen , null , false ) ; try
Distance : 11

191
Tree	super ( strLen , strLen , null , false ) ; paint
Code	super ( strLen , strLen , null , false ) ; paint
Distance : 11

192
Tree	super ( strLen , strLen , null , false ) ; result
Code	super ( strLen , strLen , null , false ) ; result
Distance : 11

193
Tree	super ( strLen , strLen , null , false ) ; }
Code	super ( strLen , strLen , null , false ) ; }
Distance : 11

194
Tree	super ( strLen , strLen , null , false ) ; ()
Code	super ( strLen , strLen , null , false ) ; ()
Distance : 11

195
Tree	super ( strLen , strLen , null , false ) ; {
Code	super ( strLen , strLen , null , false ) ; {
Distance : 11

196
Tree	super ( strLen , strLen , null , false ) ; ;
Code	super ( strLen , strLen , null , false ) ; ;
Distance : 11

197
Tree	super ( strLen , strLen , null , false ) ; )
Code	super ( strLen , strLen , null , false ) ; )
Distance : 11

198
Tree	super ( strLen , strLen , null , false ) ; ,
Code	super ( strLen , strLen , null , false ) ; ,
Distance : 11

199
Tree	super ( strLen , strLen , null , false ) ; join
Code	super ( strLen , strLen , null , false ) ; join
Distance : 11

========================================================================


========================================================================
Example Number: 35
Parent Code is: 
i < thisBuf.length
-------------------------------------------------------------------------------
Child code is: 
i < size
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (40{val=thisBuf.length})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (800{val=size})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/60/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	i < thisBuf.length values
Code	i < thisBuf.length values
Distance : 2

1
Tree	i < thisBuf.length Test
Code	i < thisBuf.length Test
Distance : 2

2
Tree	i < thisBuf.length MathRuntimeException
Code	i < thisBuf.length MathRuntimeException
Distance : 2

3
Tree	i < thisBuf.length {}
Code	i < thisBuf.length {}
Distance : 2

4
Tree	i < thisBuf.length f
Code	i < thisBuf.length f
Distance : 2

5
Tree	i < thisBuf.length class
Code	i < thisBuf.length class
Distance : 2

6
Tree	i < thisBuf.length -
Code	i < thisBuf.length -
Distance : 2

7
Tree	i < thisBuf.length Preconditions
Code	i < thisBuf.length Preconditions
Distance : 2

8
Tree	i < thisBuf.length T
Code	i < thisBuf.length T
Distance : 2

9
Tree	i < thisBuf.length &&
Code	i < thisBuf.length &&
Distance : 2

10
Tree	i < thisBuf.length ]
Code	i < thisBuf.length ]
Distance : 2

11
Tree	i < thisBuf.length [
Code	i < thisBuf.length [
Distance : 2

12
Tree	i < thisBuf.length Object
Code	i < thisBuf.length Object
Distance : 2

13
Tree	i < thisBuf.length ParamChecks
Code	i < thisBuf.length ParamChecks
Distance : 2

14
Tree	i < thisBuf.length test
Code	i < thisBuf.length test
Distance : 2

15
Tree	i < thisBuf.length @
Code	i < thisBuf.length @
Distance : 2

16
Tree	i < thisBuf.length !
Code	i < thisBuf.length !
Distance : 2

17
Tree	i < thisBuf.length assertEquals
Code	i < thisBuf.length assertEquals
Distance : 2

18
Tree	i < thisBuf.length ==
Code	i < thisBuf.length ==
Distance : 2

19
Tree	i < thisBuf.length void
Code	i < thisBuf.length void
Distance : 2

20
Tree	i < thisBuf.length []
Code	i < thisBuf.length []
Distance : 2

21
Tree	i < thisBuf.length checkState
Code	i < thisBuf.length checkState
Distance : 2

22
Tree	i < thisBuf.length toString
Code	i < thisBuf.length toString
Distance : 2

23
Tree	i < thisBuf.length protected
Code	i < thisBuf.length protected
Distance : 2

24
Tree	i < thisBuf.length nullNotPermitted
Code	i < thisBuf.length nullNotPermitted
Distance : 2

25
Tree	i < thisBuf.length e
Code	i < thisBuf.length e
Distance : 2

26
Tree	i < thisBuf.length super
Code	i < thisBuf.length super
Distance : 2

27
Tree	i < thisBuf.length i
Code	i < thisBuf.length i
Distance : 2

28
Tree	i < thisBuf.length mock
Code	i < thisBuf.length mock
Distance : 2

29
Tree	i < thisBuf.length Override
Code	i < thisBuf.length Override
Distance : 2

30
Tree	i < thisBuf.length public
Code	i < thisBuf.length public
Distance : 2

31
Tree	i < thisBuf.length >
Code	i < thisBuf.length >
Distance : 2

32
Tree	i < thisBuf.length new
Code	i < thisBuf.length new
Distance : 2

33
Tree	i < thisBuf.length STRING_CONSTANT
Code	i < thisBuf.length STRING_CONSTANT
Distance : 2

34
Tree	i < thisBuf.length ,
Code	i < thisBuf.length ,
Distance : 2

35
Tree	i < thisBuf.length .
Code	i < thisBuf.length .
Distance : 2

36
Tree	i < thisBuf.length }
Code	i < thisBuf.length }
Distance : 2

37
Tree	i < thisBuf.length =
Code	i < thisBuf.length =
Distance : 2

38
Tree	i < thisBuf.length (
Code	i < thisBuf.length (
Distance : 2

39
Tree	i < thisBuf.length <s>
Code	i < thisBuf.length <s>
Distance : 2

40
Tree	i < thisBuf.length <blank>
Code	i < thisBuf.length <blank>
Distance : 2

41
Tree	i < thisBuf.length <
Code	i < thisBuf.length <
Distance : 2

42
Tree	i < thisBuf.length )
Code	i < thisBuf.length )
Distance : 2

43
Tree	i < thisBuf.length ;
Code	i < thisBuf.length ;
Distance : 2

44
Tree	i < thisBuf.length ()
Code	i < thisBuf.length ()
Distance : 2

45
Tree	i < thisBuf.length {
Code	i < thisBuf.length {
Distance : 2

46
Tree	i < thisBuf.length false
Code	i < thisBuf.length false
Distance : 2

47
Tree	i < thisBuf.length int
Code	i < thisBuf.length int
Distance : 2

48
Tree	i < thisBuf.length double
Code	i < thisBuf.length double
Distance : 2

49
Tree	i < thisBuf.length n
Code	i < thisBuf.length n
Distance : 2

50
Tree	i < thisBuf.length matcher
Code	i < thisBuf.length matcher
Distance : 2

51
Tree	i < thisBuf.length NUMBER_CONSTANT
Code	i < thisBuf.length NUMBER_CONSTANT
Distance : 2

52
Tree	i < thisBuf.length this
Code	i < thisBuf.length this
Distance : 2

53
Tree	i < thisBuf.length final
Code	i < thisBuf.length final
Distance : 2

54
Tree	i < thisBuf.length name
Code	i < thisBuf.length name
Distance : 2

55
Tree	i < thisBuf.length t
Code	i < thisBuf.length t
Distance : 2

56
Tree	i < thisBuf.length solver
Code	i < thisBuf.length solver
Distance : 2

57
Tree	i < thisBuf.length getField
Code	i < thisBuf.length getField
Distance : 2

58
Tree	i < thisBuf.length pattern
Code	i < thisBuf.length pattern
Distance : 2

59
Tree	i < thisBuf.length out
Code	i < thisBuf.length out
Distance : 2

60
Tree	i < thisBuf.length Collection
Code	i < thisBuf.length Collection
Distance : 2

61
Tree	i < thisBuf.length mode
Code	i < thisBuf.length mode
Distance : 2

62
Tree	i < thisBuf.length mockingProgress
Code	i < thisBuf.length mockingProgress
Distance : 2

63
Tree	i < thisBuf.length return;
Code	i < thisBuf.length return;
Distance : 2

64
Tree	i < thisBuf.length char
Code	i < thisBuf.length char
Distance : 2

65
Tree	i < thisBuf.length get
Code	i < thisBuf.length get
Distance : 2

66
Tree	i < thisBuf.length static
Code	i < thisBuf.length static
Distance : 2

67
Tree	i < thisBuf.length setAcceptedLanguage
Code	i < thisBuf.length setAcceptedLanguage
Distance : 2

68
Tree	i < thisBuf.length JSType
Code	i < thisBuf.length JSType
Distance : 2

69
Tree	i < thisBuf.length isEmpty
Code	i < thisBuf.length isEmpty
Distance : 2

70
Tree	i < thisBuf.length else
Code	i < thisBuf.length else
Distance : 2

71
Tree	i < thisBuf.length true
Code	i < thisBuf.length true
Distance : 2

72
Tree	i < thisBuf.length return
Code	i < thisBuf.length return
Distance : 2

73
Tree	i < thisBuf.length if
Code	i < thisBuf.length if
Distance : 2

74
Tree	i < thisBuf.length getMessage
Code	i < thisBuf.length getMessage
Distance : 2

75
Tree	i < thisBuf.length <
Code	i < thisBuf.length <
Distance : 2

76
Tree	i < thisBuf.length dataset
Code	i < thisBuf.length dataset
Distance : 2

77
Tree	i < thisBuf.length getChronology
Code	i < thisBuf.length getChronology
Distance : 2

78
Tree	i < thisBuf.length js
Code	i < thisBuf.length js
Distance : 2

79
Tree	i < thisBuf.length TestUtilities
Code	i < thisBuf.length TestUtilities
Distance : 2

80
Tree	i < thisBuf.length equals
Code	i < thisBuf.length equals
Distance : 2

81
Tree	i < thisBuf.length d
Code	i < thisBuf.length d
Distance : 2

82
Tree	i < thisBuf.length notifyListeners
Code	i < thisBuf.length notifyListeners
Distance : 2

83
Tree	i < thisBuf.length externs
Code	i < thisBuf.length externs
Distance : 2

84
Tree	i < thisBuf.length for
Code	i < thisBuf.length for
Distance : 2

85
Tree	i < thisBuf.length Invocation
Code	i < thisBuf.length Invocation
Distance : 2

86
Tree	i < thisBuf.length node
Code	i < thisBuf.length node
Distance : 2

87
Tree	i < thisBuf.length getParent
Code	i < thisBuf.length getParent
Distance : 2

88
Tree	i < thisBuf.length StrBuilder
Code	i < thisBuf.length StrBuilder
Distance : 2

89
Tree	i < thisBuf.length setUp
Code	i < thisBuf.length setUp
Distance : 2

90
Tree	i < thisBuf.length invocations
Code	i < thisBuf.length invocations
Distance : 2

91
Tree	i < thisBuf.length index
Code	i < thisBuf.length index
Distance : 2

92
Tree	i < thisBuf.length instant
Code	i < thisBuf.length instant
Distance : 2

93
Tree	i < thisBuf.length abs
Code	i < thisBuf.length abs
Distance : 2

94
Tree	i < thisBuf.length Double
Code	i < thisBuf.length Double
Distance : 2

95
Tree	i < thisBuf.length <=
Code	i < thisBuf.length <=
Distance : 2

96
Tree	i < thisBuf.length reportMatcher
Code	i < thisBuf.length reportMatcher
Distance : 2

97
Tree	i < thisBuf.length stream
Code	i < thisBuf.length stream
Distance : 2

98
Tree	i < thisBuf.length s
Code	i < thisBuf.length s
Distance : 2

99
Tree	i < thisBuf.length
Code	i < thisBuf.length
Distance : 1

100
Tree	i < thisBuf.length contains
Code	i < thisBuf.length contains
Distance : 2

101
Tree	i < thisBuf.length b
Code	i < thisBuf.length b
Distance : 2

102
Tree	i < thisBuf.length stroke
Code	i < thisBuf.length stroke
Distance : 2

103
Tree	i < thisBuf.length MutableTimePeriod
Code	i < thisBuf.length MutableTimePeriod
Distance : 2

104
Tree	i < thisBuf.length LanguageMode.ECMASCRIPT_2015
Code	i < thisBuf.length LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	i < thisBuf.length size
Code	i < thisBuf.length size
Distance : 1

106
Tree	i < thisBuf.length traverseEs6
Code	i < thisBuf.length traverseEs6
Distance : 2

107
Tree	i < thisBuf.length StringBuilder
Code	i < thisBuf.length StringBuilder
Distance : 2

108
Tree	i < thisBuf.length chrono
Code	i < thisBuf.length chrono
Distance : 2

109
Tree	i < thisBuf.length a
Code	i < thisBuf.length a
Distance : 2

110
Tree	i < thisBuf.length returnZero
Code	i < thisBuf.length returnZero
Distance : 2

111
Tree	i < thisBuf.length sb
Code	i < thisBuf.length sb
Distance : 2

112
Tree	i < thisBuf.length scope
Code	i < thisBuf.length scope
Distance : 2

113
Tree	i < thisBuf.length UnivariateFunction
Code	i < thisBuf.length UnivariateFunction
Distance : 2

114
Tree	i < thisBuf.length sqrt
Code	i < thisBuf.length sqrt
Distance : 2

115
Tree	i < thisBuf.length clone
Code	i < thisBuf.length clone
Distance : 2

116
Tree	i < thisBuf.length getFirstChild
Code	i < thisBuf.length getFirstChild
Distance : 2

117
Tree	i < thisBuf.length throws
Code	i < thisBuf.length throws
Distance : 2

118
Tree	i < thisBuf.length simpleMethod
Code	i < thisBuf.length simpleMethod
Distance : 2

119
Tree	i < thisBuf.length getArgumentMatcherStorage
Code	i < thisBuf.length getArgumentMatcherStorage
Distance : 2

120
Tree	i < thisBuf.length append
Code	i < thisBuf.length append
Distance : 2

121
Tree	i < thisBuf.length alpha
Code	i < thisBuf.length alpha
Distance : 2

122
Tree	i < thisBuf.length isNormalBlock
Code	i < thisBuf.length isNormalBlock
Distance : 2

123
Tree	i < thisBuf.length obj
Code	i < thisBuf.length obj
Distance : 2

124
Tree	i < thisBuf.length isBlock
Code	i < thisBuf.length isBlock
Distance : 2

125
Tree	i < thisBuf.length array
Code	i < thisBuf.length array
Distance : 2

126
Tree	i < thisBuf.length TestUtils
Code	i < thisBuf.length TestUtils
Distance : 2

127
Tree	i < thisBuf.length length
Code	i < thisBuf.length length
Distance : 2

128
Tree	i < thisBuf.length expected
Code	i < thisBuf.length expected
Distance : 2

129
Tree	i < thisBuf.length IllegalArgumentException
Code	i < thisBuf.length IllegalArgumentException
Distance : 2

130
Tree	i < thisBuf.length invocation
Code	i < thisBuf.length invocation
Distance : 2

131
Tree	i < thisBuf.length assertThat
Code	i < thisBuf.length assertThat
Distance : 2

132
Tree	i < thisBuf.length FastMath
Code	i < thisBuf.length FastMath
Distance : 2

133
Tree	i < thisBuf.length reportCodeChange
Code	i < thisBuf.length reportCodeChange
Distance : 2

134
Tree	i < thisBuf.length testSame
Code	i < thisBuf.length testSame
Distance : 2

135
Tree	i < thisBuf.length createIllegalArgumentException
Code	i < thisBuf.length createIllegalArgumentException
Distance : 2

136
Tree	i < thisBuf.length ArrayList
Code	i < thisBuf.length ArrayList
Distance : 2

137
Tree	i < thisBuf.length parent
Code	i < thisBuf.length parent
Distance : 2

138
Tree	i < thisBuf.length LINE_JOINER
Code	i < thisBuf.length LINE_JOINER
Distance : 2

139
Tree	i < thisBuf.length x
Code	i < thisBuf.length x
Distance : 2

140
Tree	i < thisBuf.length fireChangeEvent
Code	i < thisBuf.length fireChangeEvent
Distance : 2

141
Tree	i < thisBuf.length str
Code	i < thisBuf.length str
Distance : 2

142
Tree	i < thisBuf.length m
Code	i < thisBuf.length m
Distance : 2

143
Tree	i < thisBuf.length try
Code	i < thisBuf.length try
Distance : 2

144
Tree	i < thisBuf.length fail
Code	i < thisBuf.length fail
Distance : 2

145
Tree	i < thisBuf.length :
Code	i < thisBuf.length :
Distance : 2

146
Tree	i < thisBuf.length LanguageMode.ECMASCRIPT6
Code	i < thisBuf.length LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	i < thisBuf.length optimizer
Code	i < thisBuf.length optimizer
Distance : 2

148
Tree	size < thisBuf.length
Code	size < thisBuf.length
Distance : 2

149
Tree	i < thisBuf.length <>
Code	i < thisBuf.length <>
Distance : 2

150
Tree	i < thisBuf.length ?
Code	i < thisBuf.length ?
Distance : 2

151
Tree	i < thisBuf.length boolean
Code	i < thisBuf.length boolean
Distance : 2

152
Tree	i < thisBuf.length paint
Code	i < thisBuf.length paint
Distance : 2

153
Tree	i < thisBuf.length result
Code	i < thisBuf.length result
Distance : 2

154
Tree	i < thisBuf.length *
Code	i < thisBuf.length *
Distance : 2

155
Tree	i < thisBuf.length type
Code	i < thisBuf.length type
Distance : 2

156
Tree	i < thisBuf.length getInstance
Code	i < thisBuf.length getInstance
Distance : 2

157
Tree	i < thisBuf.length serialised
Code	i < thisBuf.length serialised
Distance : 2

158
Tree	i < thisBuf.length Exception
Code	i < thisBuf.length Exception
Distance : 2

159
Tree	i < thisBuf.length Assert
Code	i < thisBuf.length Assert
Distance : 2

160
Tree	i < thisBuf.length source
Code	i < thisBuf.length source
Distance : 2

161
Tree	i < thisBuf.length Class
Code	i < thisBuf.length Class
Distance : 2

162
Tree	i < thisBuf.length Math
Code	i < thisBuf.length Math
Distance : 2

163
Tree	i < thisBuf.length root
Code	i < thisBuf.length root
Distance : 2

164
Tree	i < thisBuf.length options
Code	i < thisBuf.length options
Distance : 2

165
Tree	i < thisBuf.length p
Code	i < thisBuf.length p
Distance : 2

166
Tree	i < thisBuf.length data
Code	i < thisBuf.length data
Distance : 2

167
Tree	i < thisBuf.length add
Code	i < thisBuf.length add
Distance : 2

168
Tree	i < thisBuf.length field
Code	i < thisBuf.length field
Distance : 2

169
Tree	i < thisBuf.length checkArgument
Code	i < thisBuf.length checkArgument
Distance : 2

170
Tree	i < thisBuf.length ex
Code	i < thisBuf.length ex
Distance : 2

171
Tree	i < thisBuf.length NodeUtil
Code	i < thisBuf.length NodeUtil
Distance : 2

172
Tree	i < thisBuf.length join
Code	i < thisBuf.length join
Distance : 2

173
Tree	i < thisBuf.length List
Code	i < thisBuf.length List
Distance : 2

174
Tree	i < thisBuf.length NodeTraversal
Code	i < thisBuf.length NodeTraversal
Distance : 2

175
Tree	i < thisBuf.length Args
Code	i < thisBuf.length Args
Distance : 2

176
Tree	i < thisBuf.length v
Code	i < thisBuf.length v
Distance : 2

177
Tree	i < thisBuf.length Integer
Code	i < thisBuf.length Integer
Distance : 2

178
Tree	i < thisBuf.length lines
Code	i < thisBuf.length lines
Distance : 2

179
Tree	i < thisBuf.length c
Code	i < thisBuf.length c
Distance : 2

180
Tree	i < thisBuf.length verify
Code	i < thisBuf.length verify
Distance : 2

181
Tree	i < thisBuf.length Node
Code	i < thisBuf.length Node
Distance : 2

182
Tree	i < thisBuf.length compiler
Code	i < thisBuf.length compiler
Distance : 2

183
Tree	i < thisBuf.length String
Code	i < thisBuf.length String
Distance : 2

184
Tree	i < thisBuf.length null
Code	i < thisBuf.length null
Distance : 2

185
Tree	i < thisBuf.length wanted
Code	i < thisBuf.length wanted
Distance : 2

186
Tree	i < thisBuf.length +
Code	i < thisBuf.length +
Distance : 2

187
Tree	i < thisBuf.length catch
Code	i < thisBuf.length catch
Distance : 2

188
Tree	i < thisBuf.length !=
Code	i < thisBuf.length !=
Distance : 2

189
Tree	i < thisBuf.length value
Code	i < thisBuf.length value
Distance : 2

190
Tree	i < thisBuf.length /
Code	i < thisBuf.length /
Distance : 2

191
Tree	i < thisBuf.length assertTrue
Code	i < thisBuf.length assertTrue
Distance : 2

192
Tree	i < thisBuf.length checkNotNull
Code	i < thisBuf.length checkNotNull
Distance : 2

193
Tree	i < thisBuf.length Fraction
Code	i < thisBuf.length Fraction
Distance : 2

194
Tree	i < thisBuf.length valueOf
Code	i < thisBuf.length valueOf
Distance : 2

195
Tree	i < thisBuf.length instance
Code	i < thisBuf.length instance
Distance : 2

196
Tree	i < thisBuf.length long
Code	i < thisBuf.length long
Distance : 2

197
Tree	i < thisBuf.length throw
Code	i < thisBuf.length throw
Distance : 2

198
Tree	i < thisBuf.length y
Code	i < thisBuf.length y
Distance : 2

199
Tree	i < thisBuf.length PeriodType
Code	i < thisBuf.length PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 36
Parent Code is: 
i < thisBuf.length
-------------------------------------------------------------------------------
Child code is: 
i < this . size
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (40{val=thisBuf.length})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (22 (315{val=this}) (235{val=.}) (800{val=size}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/60/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	i < thisBuf.length values
Code	i < thisBuf.length values
Distance : 3

1
Tree	i < thisBuf.length Test
Code	i < thisBuf.length Test
Distance : 3

2
Tree	i < thisBuf.length MathRuntimeException
Code	i < thisBuf.length MathRuntimeException
Distance : 3

3
Tree	i < thisBuf.length {}
Code	i < thisBuf.length {}
Distance : 3

4
Tree	i < thisBuf.length f
Code	i < thisBuf.length f
Distance : 3

5
Tree	i < thisBuf.length class
Code	i < thisBuf.length class
Distance : 3

6
Tree	i < thisBuf.length -
Code	i < thisBuf.length -
Distance : 3

7
Tree	i < thisBuf.length Preconditions
Code	i < thisBuf.length Preconditions
Distance : 3

8
Tree	i < thisBuf.length T
Code	i < thisBuf.length T
Distance : 3

9
Tree	i < thisBuf.length &&
Code	i < thisBuf.length &&
Distance : 3

10
Tree	i < thisBuf.length ]
Code	i < thisBuf.length ]
Distance : 3

11
Tree	i < thisBuf.length [
Code	i < thisBuf.length [
Distance : 3

12
Tree	i < thisBuf.length Object
Code	i < thisBuf.length Object
Distance : 3

13
Tree	i < thisBuf.length ParamChecks
Code	i < thisBuf.length ParamChecks
Distance : 3

14
Tree	i < thisBuf.length test
Code	i < thisBuf.length test
Distance : 3

15
Tree	i < thisBuf.length @
Code	i < thisBuf.length @
Distance : 3

16
Tree	i < thisBuf.length !
Code	i < thisBuf.length !
Distance : 3

17
Tree	i < thisBuf.length assertEquals
Code	i < thisBuf.length assertEquals
Distance : 3

18
Tree	i < thisBuf.length ==
Code	i < thisBuf.length ==
Distance : 3

19
Tree	i < thisBuf.length void
Code	i < thisBuf.length void
Distance : 3

20
Tree	i < thisBuf.length []
Code	i < thisBuf.length []
Distance : 3

21
Tree	i < thisBuf.length checkState
Code	i < thisBuf.length checkState
Distance : 3

22
Tree	i < thisBuf.length toString
Code	i < thisBuf.length toString
Distance : 3

23
Tree	i < thisBuf.length protected
Code	i < thisBuf.length protected
Distance : 3

24
Tree	i < thisBuf.length nullNotPermitted
Code	i < thisBuf.length nullNotPermitted
Distance : 3

25
Tree	i < thisBuf.length e
Code	i < thisBuf.length e
Distance : 3

26
Tree	i < thisBuf.length super
Code	i < thisBuf.length super
Distance : 3

27
Tree	i < thisBuf.length i
Code	i < thisBuf.length i
Distance : 3

28
Tree	i < thisBuf.length mock
Code	i < thisBuf.length mock
Distance : 3

29
Tree	i < thisBuf.length Override
Code	i < thisBuf.length Override
Distance : 3

30
Tree	i < thisBuf.length public
Code	i < thisBuf.length public
Distance : 3

31
Tree	i < thisBuf.length >
Code	i < thisBuf.length >
Distance : 3

32
Tree	i < thisBuf.length new
Code	i < thisBuf.length new
Distance : 3

33
Tree	i < thisBuf.length STRING_CONSTANT
Code	i < thisBuf.length STRING_CONSTANT
Distance : 3

34
Tree	i < thisBuf.length ,
Code	i < thisBuf.length ,
Distance : 3

35
Tree	i < thisBuf.length .
Code	i < thisBuf.length .
Distance : 2

36
Tree	i < thisBuf.length }
Code	i < thisBuf.length }
Distance : 3

37
Tree	i < thisBuf.length =
Code	i < thisBuf.length =
Distance : 3

38
Tree	i < thisBuf.length (
Code	i < thisBuf.length (
Distance : 3

39
Tree	i < thisBuf.length <s>
Code	i < thisBuf.length <s>
Distance : 3

40
Tree	i < thisBuf.length <blank>
Code	i < thisBuf.length <blank>
Distance : 3

41
Tree	i < thisBuf.length <
Code	i < thisBuf.length <
Distance : 3

42
Tree	i < thisBuf.length )
Code	i < thisBuf.length )
Distance : 3

43
Tree	i < thisBuf.length ;
Code	i < thisBuf.length ;
Distance : 3

44
Tree	i < thisBuf.length ()
Code	i < thisBuf.length ()
Distance : 3

45
Tree	i < thisBuf.length {
Code	i < thisBuf.length {
Distance : 3

46
Tree	i < thisBuf.length false
Code	i < thisBuf.length false
Distance : 3

47
Tree	i < thisBuf.length int
Code	i < thisBuf.length int
Distance : 3

48
Tree	i < thisBuf.length double
Code	i < thisBuf.length double
Distance : 3

49
Tree	i < thisBuf.length n
Code	i < thisBuf.length n
Distance : 3

50
Tree	i < thisBuf.length matcher
Code	i < thisBuf.length matcher
Distance : 3

51
Tree	i < thisBuf.length NUMBER_CONSTANT
Code	i < thisBuf.length NUMBER_CONSTANT
Distance : 3

52
Tree	i < thisBuf.length this
Code	i < thisBuf.length this
Distance : 3

53
Tree	i < thisBuf.length final
Code	i < thisBuf.length final
Distance : 3

54
Tree	i < thisBuf.length name
Code	i < thisBuf.length name
Distance : 3

55
Tree	i < thisBuf.length t
Code	i < thisBuf.length t
Distance : 3

56
Tree	i < thisBuf.length solver
Code	i < thisBuf.length solver
Distance : 3

57
Tree	i < thisBuf.length getField
Code	i < thisBuf.length getField
Distance : 3

58
Tree	i < thisBuf.length pattern
Code	i < thisBuf.length pattern
Distance : 3

59
Tree	i < thisBuf.length out
Code	i < thisBuf.length out
Distance : 3

60
Tree	i < thisBuf.length Collection
Code	i < thisBuf.length Collection
Distance : 3

61
Tree	i < thisBuf.length mode
Code	i < thisBuf.length mode
Distance : 3

62
Tree	i < thisBuf.length mockingProgress
Code	i < thisBuf.length mockingProgress
Distance : 3

63
Tree	i < thisBuf.length return;
Code	i < thisBuf.length return;
Distance : 3

64
Tree	i < thisBuf.length char
Code	i < thisBuf.length char
Distance : 3

65
Tree	i < thisBuf.length get
Code	i < thisBuf.length get
Distance : 3

66
Tree	i < thisBuf.length static
Code	i < thisBuf.length static
Distance : 3

67
Tree	i < thisBuf.length setAcceptedLanguage
Code	i < thisBuf.length setAcceptedLanguage
Distance : 3

68
Tree	i < thisBuf.length JSType
Code	i < thisBuf.length JSType
Distance : 3

69
Tree	i < thisBuf.length isEmpty
Code	i < thisBuf.length isEmpty
Distance : 3

70
Tree	i < thisBuf.length else
Code	i < thisBuf.length else
Distance : 3

71
Tree	i < thisBuf.length true
Code	i < thisBuf.length true
Distance : 3

72
Tree	i < thisBuf.length return
Code	i < thisBuf.length return
Distance : 3

73
Tree	i < thisBuf.length if
Code	i < thisBuf.length if
Distance : 3

74
Tree	i < thisBuf.length getMessage
Code	i < thisBuf.length getMessage
Distance : 3

75
Tree	i < thisBuf.length <
Code	i < thisBuf.length <
Distance : 3

76
Tree	i < thisBuf.length dataset
Code	i < thisBuf.length dataset
Distance : 3

77
Tree	i < thisBuf.length getChronology
Code	i < thisBuf.length getChronology
Distance : 3

78
Tree	i < thisBuf.length js
Code	i < thisBuf.length js
Distance : 3

79
Tree	i < thisBuf.length TestUtilities
Code	i < thisBuf.length TestUtilities
Distance : 3

80
Tree	i < thisBuf.length equals
Code	i < thisBuf.length equals
Distance : 3

81
Tree	i < thisBuf.length d
Code	i < thisBuf.length d
Distance : 3

82
Tree	i < thisBuf.length notifyListeners
Code	i < thisBuf.length notifyListeners
Distance : 3

83
Tree	i < thisBuf.length externs
Code	i < thisBuf.length externs
Distance : 3

84
Tree	i < thisBuf.length for
Code	i < thisBuf.length for
Distance : 3

85
Tree	i < thisBuf.length Invocation
Code	i < thisBuf.length Invocation
Distance : 3

86
Tree	i < thisBuf.length node
Code	i < thisBuf.length node
Distance : 3

87
Tree	i < thisBuf.length getParent
Code	i < thisBuf.length getParent
Distance : 3

88
Tree	i < thisBuf.length StrBuilder
Code	i < thisBuf.length StrBuilder
Distance : 3

89
Tree	i < thisBuf.length setUp
Code	i < thisBuf.length setUp
Distance : 3

90
Tree	i < thisBuf.length invocations
Code	i < thisBuf.length invocations
Distance : 3

91
Tree	i < thisBuf.length index
Code	i < thisBuf.length index
Distance : 3

92
Tree	i < thisBuf.length instant
Code	i < thisBuf.length instant
Distance : 3

93
Tree	i < thisBuf.length abs
Code	i < thisBuf.length abs
Distance : 3

94
Tree	i < thisBuf.length Double
Code	i < thisBuf.length Double
Distance : 3

95
Tree	i < thisBuf.length <=
Code	i < thisBuf.length <=
Distance : 3

96
Tree	i < thisBuf.length reportMatcher
Code	i < thisBuf.length reportMatcher
Distance : 3

97
Tree	i < thisBuf.length stream
Code	i < thisBuf.length stream
Distance : 3

98
Tree	i < thisBuf.length s
Code	i < thisBuf.length s
Distance : 3

99
Tree	i < thisBuf.length
Code	i < thisBuf.length
Distance : 3

100
Tree	i < thisBuf.length contains
Code	i < thisBuf.length contains
Distance : 3

101
Tree	i < thisBuf.length b
Code	i < thisBuf.length b
Distance : 3

102
Tree	i < thisBuf.length stroke
Code	i < thisBuf.length stroke
Distance : 3

103
Tree	i < thisBuf.length MutableTimePeriod
Code	i < thisBuf.length MutableTimePeriod
Distance : 3

104
Tree	i < thisBuf.length LanguageMode.ECMASCRIPT_2015
Code	i < thisBuf.length LanguageMode.ECMASCRIPT_2015
Distance : 3

105
Tree	i < thisBuf.length size
Code	i < thisBuf.length size
Distance : 2

106
Tree	i < thisBuf.length traverseEs6
Code	i < thisBuf.length traverseEs6
Distance : 3

107
Tree	i < thisBuf.length StringBuilder
Code	i < thisBuf.length StringBuilder
Distance : 3

108
Tree	i < thisBuf.length chrono
Code	i < thisBuf.length chrono
Distance : 3

109
Tree	i < thisBuf.length a
Code	i < thisBuf.length a
Distance : 3

110
Tree	i < thisBuf.length returnZero
Code	i < thisBuf.length returnZero
Distance : 3

111
Tree	i < thisBuf.length sb
Code	i < thisBuf.length sb
Distance : 3

112
Tree	i < thisBuf.length scope
Code	i < thisBuf.length scope
Distance : 3

113
Tree	i < thisBuf.length UnivariateFunction
Code	i < thisBuf.length UnivariateFunction
Distance : 3

114
Tree	i < thisBuf.length sqrt
Code	i < thisBuf.length sqrt
Distance : 3

115
Tree	i < thisBuf.length clone
Code	i < thisBuf.length clone
Distance : 3

116
Tree	i < thisBuf.length getFirstChild
Code	i < thisBuf.length getFirstChild
Distance : 3

117
Tree	i < thisBuf.length throws
Code	i < thisBuf.length throws
Distance : 3

118
Tree	i < thisBuf.length simpleMethod
Code	i < thisBuf.length simpleMethod
Distance : 3

119
Tree	i < thisBuf.length getArgumentMatcherStorage
Code	i < thisBuf.length getArgumentMatcherStorage
Distance : 3

120
Tree	i < thisBuf.length append
Code	i < thisBuf.length append
Distance : 3

121
Tree	i < thisBuf.length alpha
Code	i < thisBuf.length alpha
Distance : 3

122
Tree	i < thisBuf.length isNormalBlock
Code	i < thisBuf.length isNormalBlock
Distance : 3

123
Tree	i < thisBuf.length obj
Code	i < thisBuf.length obj
Distance : 3

124
Tree	i < thisBuf.length isBlock
Code	i < thisBuf.length isBlock
Distance : 3

125
Tree	i < thisBuf.length array
Code	i < thisBuf.length array
Distance : 3

126
Tree	i < thisBuf.length TestUtils
Code	i < thisBuf.length TestUtils
Distance : 3

127
Tree	i < thisBuf.length length
Code	i < thisBuf.length length
Distance : 3

128
Tree	i < thisBuf.length expected
Code	i < thisBuf.length expected
Distance : 3

129
Tree	i < thisBuf.length IllegalArgumentException
Code	i < thisBuf.length IllegalArgumentException
Distance : 3

130
Tree	i < thisBuf.length invocation
Code	i < thisBuf.length invocation
Distance : 3

131
Tree	i < thisBuf.length assertThat
Code	i < thisBuf.length assertThat
Distance : 3

132
Tree	i < thisBuf.length FastMath
Code	i < thisBuf.length FastMath
Distance : 3

133
Tree	i < thisBuf.length reportCodeChange
Code	i < thisBuf.length reportCodeChange
Distance : 3

134
Tree	i < thisBuf.length testSame
Code	i < thisBuf.length testSame
Distance : 3

135
Tree	i < thisBuf.length createIllegalArgumentException
Code	i < thisBuf.length createIllegalArgumentException
Distance : 3

136
Tree	i < thisBuf.length ArrayList
Code	i < thisBuf.length ArrayList
Distance : 3

137
Tree	i < thisBuf.length parent
Code	i < thisBuf.length parent
Distance : 3

138
Tree	i < thisBuf.length LINE_JOINER
Code	i < thisBuf.length LINE_JOINER
Distance : 3

139
Tree	i < thisBuf.length x
Code	i < thisBuf.length x
Distance : 3

140
Tree	i < thisBuf.length fireChangeEvent
Code	i < thisBuf.length fireChangeEvent
Distance : 3

141
Tree	i < thisBuf.length str
Code	i < thisBuf.length str
Distance : 3

142
Tree	i < thisBuf.length m
Code	i < thisBuf.length m
Distance : 3

143
Tree	i < thisBuf.length try
Code	i < thisBuf.length try
Distance : 3

144
Tree	i < thisBuf.length fail
Code	i < thisBuf.length fail
Distance : 3

145
Tree	i < thisBuf.length :
Code	i < thisBuf.length :
Distance : 3

146
Tree	i < thisBuf.length LanguageMode.ECMASCRIPT6
Code	i < thisBuf.length LanguageMode.ECMASCRIPT6
Distance : 3

147
Tree	i < thisBuf.length optimizer
Code	i < thisBuf.length optimizer
Distance : 3

148
Tree	size < thisBuf.length
Code	size < thisBuf.length
Distance : 4

149
Tree	i < thisBuf.length <>
Code	i < thisBuf.length <>
Distance : 3

150
Tree	i < thisBuf.length ?
Code	i < thisBuf.length ?
Distance : 3

151
Tree	i < thisBuf.length boolean
Code	i < thisBuf.length boolean
Distance : 3

152
Tree	i < thisBuf.length paint
Code	i < thisBuf.length paint
Distance : 3

153
Tree	i < thisBuf.length result
Code	i < thisBuf.length result
Distance : 3

154
Tree	i < thisBuf.length *
Code	i < thisBuf.length *
Distance : 3

155
Tree	i < thisBuf.length type
Code	i < thisBuf.length type
Distance : 3

156
Tree	i < thisBuf.length getInstance
Code	i < thisBuf.length getInstance
Distance : 3

157
Tree	i < thisBuf.length serialised
Code	i < thisBuf.length serialised
Distance : 3

158
Tree	i < thisBuf.length Exception
Code	i < thisBuf.length Exception
Distance : 3

159
Tree	i < thisBuf.length Assert
Code	i < thisBuf.length Assert
Distance : 3

160
Tree	i < thisBuf.length source
Code	i < thisBuf.length source
Distance : 3

161
Tree	i < thisBuf.length Class
Code	i < thisBuf.length Class
Distance : 3

162
Tree	i < thisBuf.length Math
Code	i < thisBuf.length Math
Distance : 3

163
Tree	i < thisBuf.length root
Code	i < thisBuf.length root
Distance : 3

164
Tree	i < thisBuf.length options
Code	i < thisBuf.length options
Distance : 3

165
Tree	i < thisBuf.length p
Code	i < thisBuf.length p
Distance : 3

166
Tree	i < thisBuf.length data
Code	i < thisBuf.length data
Distance : 3

167
Tree	i < thisBuf.length add
Code	i < thisBuf.length add
Distance : 3

168
Tree	i < thisBuf.length field
Code	i < thisBuf.length field
Distance : 3

169
Tree	i < thisBuf.length checkArgument
Code	i < thisBuf.length checkArgument
Distance : 3

170
Tree	i < thisBuf.length ex
Code	i < thisBuf.length ex
Distance : 3

171
Tree	i < thisBuf.length NodeUtil
Code	i < thisBuf.length NodeUtil
Distance : 3

172
Tree	i < thisBuf.length join
Code	i < thisBuf.length join
Distance : 3

173
Tree	i < thisBuf.length List
Code	i < thisBuf.length List
Distance : 3

174
Tree	i < thisBuf.length NodeTraversal
Code	i < thisBuf.length NodeTraversal
Distance : 3

175
Tree	i < thisBuf.length Args
Code	i < thisBuf.length Args
Distance : 3

176
Tree	i < thisBuf.length v
Code	i < thisBuf.length v
Distance : 3

177
Tree	i < thisBuf.length Integer
Code	i < thisBuf.length Integer
Distance : 3

178
Tree	i < thisBuf.length lines
Code	i < thisBuf.length lines
Distance : 3

179
Tree	i < thisBuf.length c
Code	i < thisBuf.length c
Distance : 3

180
Tree	i < thisBuf.length verify
Code	i < thisBuf.length verify
Distance : 3

181
Tree	i < thisBuf.length Node
Code	i < thisBuf.length Node
Distance : 3

182
Tree	i < thisBuf.length compiler
Code	i < thisBuf.length compiler
Distance : 3

183
Tree	i < thisBuf.length String
Code	i < thisBuf.length String
Distance : 3

184
Tree	i < thisBuf.length null
Code	i < thisBuf.length null
Distance : 3

185
Tree	i < thisBuf.length wanted
Code	i < thisBuf.length wanted
Distance : 3

186
Tree	i < thisBuf.length +
Code	i < thisBuf.length +
Distance : 3

187
Tree	i < thisBuf.length catch
Code	i < thisBuf.length catch
Distance : 3

188
Tree	i < thisBuf.length !=
Code	i < thisBuf.length !=
Distance : 3

189
Tree	i < thisBuf.length value
Code	i < thisBuf.length value
Distance : 3

190
Tree	i < thisBuf.length /
Code	i < thisBuf.length /
Distance : 3

191
Tree	i < thisBuf.length assertTrue
Code	i < thisBuf.length assertTrue
Distance : 3

192
Tree	i < thisBuf.length checkNotNull
Code	i < thisBuf.length checkNotNull
Distance : 3

193
Tree	i < thisBuf.length Fraction
Code	i < thisBuf.length Fraction
Distance : 3

194
Tree	i < thisBuf.length valueOf
Code	i < thisBuf.length valueOf
Distance : 3

195
Tree	i < thisBuf.length instance
Code	i < thisBuf.length instance
Distance : 3

196
Tree	i < thisBuf.length long
Code	i < thisBuf.length long
Distance : 3

197
Tree	i < thisBuf.length throw
Code	i < thisBuf.length throw
Distance : 3

198
Tree	i < thisBuf.length y
Code	i < thisBuf.length y
Distance : 3

199
Tree	i < thisBuf.length PeriodType
Code	i < thisBuf.length PeriodType
Distance : 3

========================================================================


========================================================================
Example Number: 37
Parent Code is: 
{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ str . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=str}) (235{val=.}) (802{val=getChars}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=strLen}) (234{val=,}) (800{val=buffer}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=str}) (235{val=.}) (802{val=getChars}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=width}) (234{val=,}) (800{val=buffer}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/59/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Distance : 9

1
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , buffer , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , buffer , buffer , CharUtils.NUL )
Distance : 9

2
Tree	new PeepholeOptimizationsPass ( FastMath.PI , Fraction , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( FastMath.PI , Fraction , buffer , CharUtils.NUL )
Distance : 9

3
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Color.BLUE , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Color.BLUE , buffer , CharUtils.NUL )
Distance : 9

4
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 8

5
Tree	new PeepholeOptimizationsPass ( Feature.ARROW_FUNCTIONS , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Feature.ARROW_FUNCTIONS , strLen , buffer , CharUtils.NUL )
Distance : 9

6
Tree	new getChars ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , CharUtils.NUL )
Code	new getChars ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , CharUtils.NUL )
Distance : 8

7
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , -= )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , -= )
Distance : 8

8
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , destination , buffer , CharUtils.NUL )
Distance : 9

9
Tree	new getChars ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , CharUtils.NUL )
Code	new getChars ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , CharUtils.NUL )
Distance : 8

10
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , delimiters.length )
Distance : 9

11
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , getVarCount )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , getVarCount )
Distance : 9

12
Tree	new PeepholeOptimizationsPass ( CharUtils.NUL , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( CharUtils.NUL , strLen , buffer , size )
Distance : 8

13
Tree	new PeepholeOptimizationsPass ( Locale.UK , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Locale.UK , strLen , buffer , size )
Distance : 8

14
Tree	new PeepholeOptimizationsPass ( FastMath.PI , Locale.UK , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( FastMath.PI , Locale.UK , buffer , CharUtils.NUL )
Distance : 9

15
Tree	new PeepholeOptimizationsPass ( config.parseTypeSyntax , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( config.parseTypeSyntax , strLen , buffer , CharUtils.NUL )
Distance : 9

16
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , identity , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , identity , buffer , CharUtils.NUL )
Distance : 9

17
Tree	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , -= )
Distance : 9

18
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , b2.value )
Distance : 9

19
Tree	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

20
Tree	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , delimiters.length )
Distance : 9

21
Tree	new PeepholeOptimizationsPass ( options.moduleRoots , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( options.moduleRoots , strLen , buffer , size )
Distance : 8

22
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , mocks.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , mocks.length )
Distance : 9

23
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , buffer , CharUtils.NUL )
Distance : 9

24
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , DateUtils.MILLIS_PER_MINUTE , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , DateUtils.MILLIS_PER_MINUTE , buffer , CharUtils.NUL )
Distance : 9

25
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , delimiters.length )
Distance : 9

26
Tree	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , delimiters.length )
Distance : 9

27
Tree	new PeepholeOptimizationsPass ( xArray.length , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( xArray.length , strLen , buffer , CharUtils.NUL )
Distance : 9

28
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

29
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , options.moduleRoots , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , options.moduleRoots , buffer , CharUtils.NUL )
Distance : 9

30
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED )
Distance : 9

31
Tree	new getChars ( FastMath.PI , strLen , buffer , size )
Code	new getChars ( FastMath.PI , strLen , buffer , size )
Distance : 7

32
Tree	new PeepholeOptimizationsPass ( Double.NEGATIVE_INFINITY , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Double.NEGATIVE_INFINITY , strLen , buffer , CharUtils.NUL )
Distance : 9

33
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , RandomNameGenerator.FIRST_CHAR )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , RandomNameGenerator.FIRST_CHAR )
Distance : 9

34
Tree	new PeepholeOptimizationsPass ( Fraction , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Fraction , destination , buffer , CharUtils.NUL )
Distance : 9

35
Tree	new PeepholeOptimizationsPass ( str.buffer , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( str.buffer , strLen , buffer , CharUtils.NUL )
Distance : 9

36
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , -= )
Distance : 9

37
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , delimiters.length )
Distance : 9

38
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , b2.value )
Distance : 9

39
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , objective.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , objective.length )
Distance : 9

40
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

41
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , b2.value )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , b2.value )
Distance : 8

42
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

43
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , withZoneUTC , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , withZoneUTC , buffer , CharUtils.NUL )
Distance : 9

44
Tree	new PeepholeOptimizationsPass ( strLen , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( strLen , strLen , buffer , size )
Distance : 8

45
Tree	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , size )
Distance : 8

46
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , -= )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , -= )
Distance : 9

47
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , destination , buffer , CharUtils.NUL )
Distance : 9

48
Tree	new PeepholeOptimizationsPass ( ReadablePartialConverter.INSTANCE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( ReadablePartialConverter.INSTANCE , strLen , buffer , CharUtils.NUL )
Distance : 9

49
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , delimiters.length )
Distance : 9

50
Tree	new getChars ( Calendar.JANUARY , CharUtils.NUL , buffer , CharUtils.NUL )
Code	new getChars ( Calendar.JANUARY , CharUtils.NUL , buffer , CharUtils.NUL )
Distance : 8

51
Tree	new getChars ( strLen , strLen , buffer , CharUtils.NUL )
Code	new getChars ( strLen , strLen , buffer , CharUtils.NUL )
Distance : 8

52
Tree	new getChars ( FastMath.PI , strLen , buffer , delimiters.length )
Code	new getChars ( FastMath.PI , strLen , buffer , delimiters.length )
Distance : 8

53
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , len )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , len )
Distance : 9

54
Tree	new PeepholeOptimizationsPass ( createFractionMatrix , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( createFractionMatrix , strLen , buffer , size )
Distance : 8

55
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , circle.tolerance )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , circle.tolerance )
Distance : 9

56
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

57
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , len )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , len )
Distance : 8

58
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , subMatrix.length )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , subMatrix.length )
Distance : 9

59
Tree	new PeepholeOptimizationsPass ( NaNStrategy.MAXIMAL , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( NaNStrategy.MAXIMAL , strLen , buffer , CharUtils.NUL )
Distance : 9

60
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NUMBER_OF_POINTS , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NUMBER_OF_POINTS , strLen , buffer , size )
Distance : 8

61
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , buffer , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , buffer , buffer , CharUtils.NUL )
Distance : 9

62
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , strLen , buffer , size )
Distance : 8

63
Tree	new PeepholeOptimizationsPass ( strLen , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( strLen , strLen , buffer , delimiters.length )
Distance : 9

64
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED , strLen , buffer , CharUtils.NUL )
Distance : 9

65
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , b2.value )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , b2.value )
Distance : 8

66
Tree	new PeepholeOptimizationsPass ( Integer.MAX_VALUE , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Integer.MAX_VALUE , strLen , buffer , size )
Distance : 8

67
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

68
Tree	new getChars ( FastMath.PI , destination , buffer , CharUtils.NUL )
Code	new getChars ( FastMath.PI , destination , buffer , CharUtils.NUL )
Distance : 8

69
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , identity , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , identity , buffer , CharUtils.NUL )
Distance : 9

70
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , CharUtils.NUL , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , CharUtils.NUL , buffer , delimiters.length )
Distance : 9

71
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , BooleanLiteralSet.EMPTY )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , BooleanLiteralSet.EMPTY )
Distance : 9

72
Tree	new PeepholeOptimizationsPass ( v.length , CharUtils.NUL , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( v.length , CharUtils.NUL , buffer , CharUtils.NUL )
Distance : 9

73
Tree	new PeepholeOptimizationsPass ( DateTickUnitType.MONTH , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( DateTickUnitType.MONTH , strLen , buffer , CharUtils.NUL )
Distance : 9

74
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , -= )
Distance : 9

75
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

76
Tree	new PeepholeOptimizationsPass ( pData , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( pData , strLen , buffer , CharUtils.NUL )
Distance : 9

77
Tree	new getChars ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , CharUtils.NUL )
Code	new getChars ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , CharUtils.NUL )
Distance : 8

78
Tree	new getChars ( Any.ANY , strLen , buffer , CharUtils.NUL )
Code	new getChars ( Any.ANY , strLen , buffer , CharUtils.NUL )
Distance : 8

79
Tree	new PeepholeOptimizationsPass ( Calendar.OCTOBER , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Calendar.OCTOBER , strLen , buffer , size )
Distance : 8

80
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , destination , buffer , CharUtils.NUL )
Distance : 9

81
Tree	new PeepholeOptimizationsPass ( Color.BLUE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Color.BLUE , strLen , buffer , CharUtils.NUL )
Distance : 9

82
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , b2.value )
Distance : 9

83
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , TextAnchor.CENTER )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , TextAnchor.CENTER )
Distance : 9

84
Tree	new OrientedPoint ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Code	new OrientedPoint ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Distance : 9

85
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Distance : 9

86
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , b2.value )
Distance : 9

87
Tree	new PeepholeOptimizationsPass ( ReadableInstantConverter.INSTANCE , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( ReadableInstantConverter.INSTANCE , strLen , buffer , size )
Distance : 8

88
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , strLen , buffer , CharUtils.NUL )
Distance : 9

89
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , -= )
Distance : 9

90
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , withZoneUTC , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , withZoneUTC , buffer , CharUtils.NUL )
Distance : 9

91
Tree	new PeepholeOptimizationsPass ( Any.ANY , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Any.ANY , destination , buffer , CharUtils.NUL )
Distance : 9

92
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , objective.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , objective.length )
Distance : 9

93
Tree	new PeepholeOptimizationsPass ( FastMath.PI , destination , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( FastMath.PI , destination , buffer , delimiters.length )
Distance : 9

94
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , DateUtils.MILLIS_PER_MINUTE , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , DateUtils.MILLIS_PER_MINUTE , buffer , CharUtils.NUL )
Distance : 9

95
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT , strLen , buffer , CharUtils.NUL )
Distance : 9

96
Tree	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , delimiters.length )
Distance : 9

97
Tree	new PeepholeOptimizationsPass ( obj1.props , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( obj1.props , strLen , buffer , CharUtils.NUL )
Distance : 9

98
Tree	new getChars ( Fraction , strLen , buffer , CharUtils.NUL )
Code	new getChars ( Fraction , strLen , buffer , CharUtils.NUL )
Distance : 8

99
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , b.length )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , b.length )
Distance : 9

100
Tree	new getChars ( MathUtils.TWO_PI , destination , buffer , CharUtils.NUL )
Code	new getChars ( MathUtils.TWO_PI , destination , buffer , CharUtils.NUL )
Distance : 8

101
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , len )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , len )
Distance : 9

102
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , d.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , d.length )
Distance : 9

103
Tree	new PeepholeOptimizationsPass ( FastMath.PI , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( FastMath.PI , destination , buffer , CharUtils.NUL )
Distance : 9

104
Tree	new getChars ( FastMath.PI , strLen , buffer , CharUtils.NUL )
Code	new getChars ( FastMath.PI , strLen , buffer , CharUtils.NUL )
Distance : 8

105
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , CharUtils.NUL , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , CharUtils.NUL , buffer , CharUtils.NUL )
Distance : 9

106
Tree	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR , strLen , buffer , CharUtils.NUL )
Distance : 9

107
Tree	new PeepholeOptimizationsPass ( strLen , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( strLen , strLen , buffer , CharUtils.NUL )
Distance : 9

108
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , ModifyType.TRUNCATE )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , ModifyType.TRUNCATE )
Distance : 9

109
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , -= )
Distance : 9

110
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , len )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , len )
Distance : 9

111
Tree	new PeepholeOptimizationsPass ( CharUtils.NUL , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( CharUtils.NUL , strLen , buffer , CharUtils.NUL )
Distance : 9

112
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , size )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , size )
Distance : 7

113
Tree	new PeepholeOptimizationsPass ( Locale.UK , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Locale.UK , strLen , buffer , CharUtils.NUL )
Distance : 9

114
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , d.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , d.length )
Distance : 9

115
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

116
Tree	new PeepholeOptimizationsPass ( options.moduleRoots , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( options.moduleRoots , strLen , buffer , CharUtils.NUL )
Distance : 9

117
Tree	new PeepholeOptimizationsPass ( Calendar.OCTOBER , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.OCTOBER , strLen , buffer , CharUtils.NUL )
Distance : 9

118
Tree	new PeepholeOptimizationsPass ( ReadableInstantConverter.INSTANCE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( ReadableInstantConverter.INSTANCE , strLen , buffer , CharUtils.NUL )
Distance : 9

119
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , size )
Distance : 8

120
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , Fraction , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , Fraction , buffer , CharUtils.NUL )
Distance : 9

121
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , ModifyType.TRUNCATE )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , ModifyType.TRUNCATE )
Distance : 9

122
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , b2.value )
Distance : 9

123
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , CharUtils.NUL )
Distance : 9

124
Tree	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , CharUtils.NUL )
Distance : 9

125
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , delimiters.length )
Distance : 9

126
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , -= )
Distance : 9

127
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , CharUtils.NUL )
Distance : 9

128
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , size )
Distance : 8

129
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , size )
Distance : 8

130
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , delimiters.length )
Distance : 9

131
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , CharUtils.NUL )
Distance : 8

132
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , CharUtils.NUL )
Distance : 9

133
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , CharUtils.NUL )
Distance : 9

134
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , delimiters.length )
Distance : 9

135
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

136
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , getVarCount )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , getVarCount )
Distance : 9

137
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , -= )
Distance : 9

138
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , CharUtils.NUL )
Distance : 9

139
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , CharUtils.NUL )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , CharUtils.NUL )
Distance : 8

140
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , size )
Distance : 8

141
Tree	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , CharUtils.NUL )
Distance : 9

142
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , b2.value )
Distance : 9

143
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , -= )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , -= )
Distance : 9

144
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

145
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , CharUtils.NUL )
Distance : 9

146
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , CharUtils.NUL )
Distance : 9

147
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , CharUtils.NUL , buffer , CharUtils.NUL )
Distance : 9

148
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , CharUtils.NUL )
Distance : 9

149
Tree	new PeepholeOptimizationsPass ( createFractionMatrix , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( createFractionMatrix , strLen , buffer , CharUtils.NUL )
Distance : 9

150
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , CharUtils.NUL )
Distance : 9

151
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , mocks.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , mocks.length )
Distance : 9

152
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , len )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , len )
Distance : 9

153
Tree	new getChars ( v.length , strLen , buffer , CharUtils.NUL )
Code	new getChars ( v.length , strLen , buffer , CharUtils.NUL )
Distance : 8

154
Tree	new PeepholeOptimizationsPass ( v.length , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( v.length , destination , buffer , CharUtils.NUL )
Distance : 9

155
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , d.length )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , d.length )
Distance : 9

156
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Distance : 9

157
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NO_DEGREES_OF_FREEDOM , strLen , buffer , size )
Distance : 8

158
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , RandomNameGenerator.FIRST_CHAR )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , RandomNameGenerator.FIRST_CHAR )
Distance : 9

159
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , destination , buffer , delimiters.length )
Distance : 9

160
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 8

161
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , LocalizedFormats.OVERFLOW_IN_ADDITION )
Distance : 9

162
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , -= )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , -= )
Distance : 8

163
Tree	new getChars ( BigInteger.ZERO , strLen , buffer , CharUtils.NUL )
Code	new getChars ( BigInteger.ZERO , strLen , buffer , CharUtils.NUL )
Distance : 8

164
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , destination , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , destination , buffer , CharUtils.NUL )
Distance : 9

165
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , -= )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , -= )
Distance : 9

166
Tree	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Any.ANY , strLen , buffer , size )
Distance : 8

167
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.EVALUATION_FAILED , strLen , buffer , size )
Distance : 8

168
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , subMatrix.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , subMatrix.length )
Distance : 9

169
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , ModifyType.TRUNCATE )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , ModifyType.TRUNCATE )
Distance : 9

170
Tree	new PeepholeOptimizationsPass ( coefficients , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( coefficients , strLen , buffer , CharUtils.NUL )
Distance : 9

171
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , Color.BLUE , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , Color.BLUE , buffer , CharUtils.NUL )
Distance : 9

172
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , delimiters.length )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , delimiters.length )
Distance : 8

173
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , delimiters.length )
Distance : 9

174
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , options.moduleRoots , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , options.moduleRoots , buffer , CharUtils.NUL )
Distance : 9

175
Tree	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , b2.value )
Code	new PeepholeOptimizationsPass ( FastMath.PI , strLen , buffer , b2.value )
Distance : 9

176
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED )
Distance : 9

177
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , strLen , buffer , CharUtils.NUL )
Distance : 9

178
Tree	new PeepholeOptimizationsPass ( Integer.MAX_VALUE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Integer.MAX_VALUE , strLen , buffer , CharUtils.NUL )
Distance : 9

179
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , ExpansionMode.MULTIPLICATIVE )
Distance : 9

180
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , b.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , b.length )
Distance : 9

181
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , Locale.UK , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , Locale.UK , buffer , CharUtils.NUL )
Distance : 9

182
Tree	new getChars ( MathUtils.TWO_PI , strLen , buffer , size )
Code	new getChars ( MathUtils.TWO_PI , strLen , buffer , size )
Distance : 7

183
Tree	new PeepholeOptimizationsPass ( TypeCheck.INEXISTENT_PROPERTY , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( TypeCheck.INEXISTENT_PROPERTY , strLen , buffer , CharUtils.NUL )
Distance : 9

184
Tree	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( Fraction , strLen , buffer , size )
Distance : 8

185
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Fraction , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Fraction , buffer , CharUtils.NUL )
Distance : 9

186
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , b.length )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , b.length )
Distance : 9

187
Tree	new PeepholeOptimizationsPass ( FastMath.PI , CharUtils.NUL , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( FastMath.PI , CharUtils.NUL , buffer , CharUtils.NUL )
Distance : 9

188
Tree	new PeepholeOptimizationsPass ( DateUtils.MILLIS_PER_MINUTE , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( DateUtils.MILLIS_PER_MINUTE , strLen , buffer , CharUtils.NUL )
Distance : 9

189
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , subMatrix.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , strLen , buffer , subMatrix.length )
Distance : 9

190
Tree	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( Calendar.JANUARY , destination , buffer , delimiters.length )
Distance : 9

191
Tree	new PeepholeOptimizationsPass ( v.length , strLen , buffer , delimiters.length )
Code	new PeepholeOptimizationsPass ( v.length , strLen , buffer , delimiters.length )
Distance : 9

192
Tree	new getChars ( Calendar.JANUARY , destination , buffer , CharUtils.NUL )
Code	new getChars ( Calendar.JANUARY , destination , buffer , CharUtils.NUL )
Distance : 8

193
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , getVarCount )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , strLen , buffer , getVarCount )
Distance : 9

194
Tree	new getChars ( Calendar.JANUARY , strLen , buffer , delimiters.length )
Code	new getChars ( Calendar.JANUARY , strLen , buffer , delimiters.length )
Distance : 8

195
Tree	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Locale.UK , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( MathUtils.TWO_PI , Locale.UK , buffer , CharUtils.NUL )
Distance : 9

196
Tree	new PeepholeOptimizationsPass ( DateTickUnitType.DAY , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( DateTickUnitType.DAY , strLen , buffer , CharUtils.NUL )
Distance : 9

197
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , strLen , buffer , size )
Distance : 8

198
Tree	new PeepholeOptimizationsPass ( LocalizedFormats.NUMBER_OF_POINTS , strLen , buffer , CharUtils.NUL )
Code	new PeepholeOptimizationsPass ( LocalizedFormats.NUMBER_OF_POINTS , strLen , buffer , CharUtils.NUL )
Distance : 9

199
Tree	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , size )
Code	new PeepholeOptimizationsPass ( BigInteger.ZERO , strLen , buffer , size )
Distance : 8

========================================================================


========================================================================
Example Number: 38
Parent Code is: 
{ return cAvailableLocaleSet . contains ( locale ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return availableLocaleList () . contains ( locale ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=cAvailableLocaleSet}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=availableLocaleList}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/57/parent/src_java_org_apache_commons_lang_LocaleUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 10

1
Tree	stubVoid
Code	stubVoid
Distance : 11

2
Tree	seed
Code	seed
Distance : 11

3
Tree	pow
Code	pow
Distance : 11

4
Tree	TypeI
Code	TypeI
Distance : 11

5
Tree	zFormat
Code	zFormat
Distance : 11

6
Tree	readShape
Code	readShape
Distance : 11

7
Tree	Require
Code	Require
Distance : 11

8
Tree	LastArguments
Code	LastArguments
Distance : 11

9
Tree	BackgroundInitializerTestImpl
Code	BackgroundInitializerTestImpl
Distance : 11

10
Tree	error
Code	error
Distance : 11

11
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

12
Tree	strictly
Code	strictly
Distance : 11

13
Tree	Rectangle2D
Code	Rectangle2D
Distance : 11

14
Tree	fieldName
Code	fieldName
Distance : 11

15
Tree	z
Code	z
Distance : 11

16
Tree	fireAnnotationChanged
Code	fireAnnotationChanged
Distance : 11

17
Tree	LocalizedFormats.CANNOT_PARSE
Code	LocalizedFormats.CANNOT_PARSE
Distance : 11

18
Tree	mapToSelf
Code	mapToSelf
Distance : 11

19
Tree	node
Code	node
Distance : 11

20
Tree	source
Code	source
Distance : 11

21
Tree	formatter
Code	formatter
Distance : 11

22
Tree	fieldType
Code	fieldType
Distance : 11

23
Tree	isScriptEs6OrHigher
Code	isScriptEs6OrHigher
Distance : 11

24
Tree	Args
Code	Args
Distance : 11

25
Tree	emptiedClinitMethods
Code	emptiedClinitMethods
Distance : 11

26
Tree	printer
Code	printer
Distance : 11

27
Tree	answer
Code	answer
Distance : 11

28
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 11

29
Tree	MockitoMatcher
Code	MockitoMatcher
Distance : 11

30
Tree	readPaint
Code	readPaint
Distance : 11

31
Tree	argument
Code	argument
Distance : 11

32
Tree	period
Code	period
Distance : 11

33
Tree	validateNodeType
Code	validateNodeType
Distance : 11

34
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 11

35
Tree	getFirstFirstChild
Code	getFirstFirstChild
Distance : 11

36
Tree	traversal
Code	traversal
Distance : 11

37
Tree	out.value
Code	out.value
Distance : 11

38
Tree	Stroke
Code	Stroke
Distance : 11

39
Tree	unfinishedVerificationHere
Code	unfinishedVerificationHere
Distance : 11

40
Tree	get
Code	get
Distance : 11

41
Tree	continue;
Code	continue;
Distance : 11

42
Tree	addAnswer
Code	addAnswer
Distance : 11

43
Tree	checkState
Code	checkState
Distance : 11

44
Tree	checkInitialize
Code	checkInitialize
Distance : 11

45
Tree	throw
Code	throw
Distance : 11

46
Tree	fn
Code	fn
Distance : 11

47
Tree	startParams
Code	startParams
Distance : 11

48
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 11

49
Tree	Gamma
Code	Gamma
Distance : 11

50
Tree	NodeTraversal
Code	NodeTraversal
Distance : 11

51
Tree	font
Code	font
Distance : 11

52
Tree	output.compiledCode
Code	output.compiledCode
Distance : 11

53
Tree	sample1
Code	sample1
Distance : 11

54
Tree	ParamChecks
Code	ParamChecks
Distance : 11

55
Tree	INDEX_OFFSET
Code	INDEX_OFFSET
Distance : 11

56
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 11

57
Tree	mock
Code	mock
Distance : 11

58
Tree	addMessage
Code	addMessage
Distance : 11

59
Tree	LINE_JOINER
Code	LINE_JOINER
Distance : 11

60
Tree	Decimal64Field
Code	Decimal64Field
Distance : 11

61
Tree	delegate
Code	delegate
Distance : 11

62
Tree	nextInt
Code	nextInt
Distance : 11

63
Tree	MockitoVerificationMode
Code	MockitoVerificationMode
Distance : 11

64
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 11

65
Tree	mutNum
Code	mutNum
Distance : 11

66
Tree	+=
Code	+=
Distance : 11

67
Tree	copyIn
Code	copyIn
Distance : 11

68
Tree	specific
Code	specific
Distance : 11

69
Tree	setSeed
Code	setSeed
Distance : 11

70
Tree	setField
Code	setField
Distance : 11

71
Tree	matcher
Code	matcher
Distance : 11

72
Tree	partial
Code	partial
Distance : 11

73
Tree	ds
Code	ds
Distance : 11

74
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 11

75
Tree	ObjectInputStream
Code	ObjectInputStream
Distance : 11

76
Tree	Period
Code	Period
Distance : 11

77
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 11

78
Tree	init
Code	init
Distance : 11

79
Tree	LanguageMode.ECMASCRIPT_2015
Code	LanguageMode.ECMASCRIPT_2015
Distance : 11

80
Tree	stream
Code	stream
Distance : 11

81
Tree	newValues
Code	newValues
Distance : 11

82
Tree	visitForOf
Code	visitForOf
Distance : 11

83
Tree	VerificationMode
Code	VerificationMode
Distance : 11

84
Tree	TestSubObject
Code	TestSubObject
Distance : 11

85
Tree	key
Code	key
Distance : 11

86
Tree	assertNull
Code	assertNull
Distance : 11

87
Tree	ReadablePartial
Code	ReadablePartial
Distance : 11

88
Tree	canonicalTotallyUnremovableVarInfo
Code	canonicalTotallyUnremovableVarInfo
Distance : 11

89
Tree	rhs
Code	rhs
Distance : 11

90
Tree	createIllegalStateException
Code	createIllegalStateException
Distance : 11

91
Tree	long
Code	long
Distance : 11

92
Tree	last
Code	last
Distance : 11

93
Tree	TypeInferenceMode.BOTH
Code	TypeInferenceMode.BOTH
Distance : 11

94
Tree	random
Code	random
Distance : 11

95
Tree	logBeta
Code	logBeta
Distance : 11

96
Tree	stroke
Code	stroke
Distance : 11

97
Tree	CharSequence
Code	CharSequence
Distance : 11

98
Tree	Paint
Code	Paint
Distance : 11

99
Tree	)
Code	)
Distance : 10

100
Tree	SerialUtils
Code	SerialUtils
Distance : 11

101
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 11

102
Tree	()
Code	()
Distance : 10

103
Tree	AbstractScope
Code	AbstractScope
Distance : 11

104
Tree	assertScope
Code	assertScope
Distance : 11

105
Tree	*
Code	*
Distance : 11

106
Tree	notNull
Code	notNull
Distance : 11

107
Tree	paint
Code	paint
Distance : 11

108
Tree	checkNotNull
Code	checkNotNull
Distance : 11

109
Tree	float
Code	float
Distance : 11

110
Tree	getEndMillis
Code	getEndMillis
Distance : 11

111
Tree	null
Code	null
Distance : 11

112
Tree	returnZero
Code	returnZero
Distance : 11

113
Tree	path
Code	path
Distance : 11

114
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 11

115
Tree	InternalParser
Code	InternalParser
Distance : 11

116
Tree	testSame
Code	testSame
Distance : 11

117
Tree	detach
Code	detach
Distance : 11

118
Tree	this
Code	this
Distance : 11

119
Tree	scriptRoot
Code	scriptRoot
Distance : 11

120
Tree	break;
Code	break;
Distance : 11

121
Tree	protected
Code	protected
Distance : 11

122
Tree	final
Code	final
Distance : 11

123
Tree	private
Code	private
Distance : 11

124
Tree	:
Code	:
Distance : 11

125
Tree	if
Code	if
Distance : 11

126
Tree	static
Code	static
Distance : 11

127
Tree	for
Code	for
Distance : 11

128
Tree	{}
Code	{}
Distance : 11

129
Tree	super();
Code	super();
Distance : 11

130
Tree	]
Code	]
Distance : 11

131
Tree	&&
Code	&&
Distance : 11

132
Tree	
Code	
Distance : 11

133
Tree	public
Code	public
Distance : 11

134
Tree	catch
Code	catch
Distance : 11

135
Tree	<=
Code	<=
Distance : 11

136
Tree	;
Code	;
Distance : 10

137
Tree	stubber
Code	stubber
Distance : 11

138
Tree	new
Code	new
Distance : 11

139
Tree	Coordinates3D
Code	Coordinates3D
Distance : 11

140
Tree	++
Code	++
Distance : 11

141
Tree	try
Code	try
Distance : 11

142
Tree	DateTimeUtils
Code	DateTimeUtils
Distance : 11

143
Tree	setStartMillis
Code	setStartMillis
Distance : 11

144
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 11

145
Tree	extends
Code	extends
Distance : 11

146
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 11

147
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 11

148
Tree	throwable
Code	throwable
Distance : 11

149
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 11

150
Tree	chronology
Code	chronology
Distance : 11

151
Tree	[]
Code	[]
Distance : 11

152
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 11

153
Tree	times
Code	times
Distance : 11

154
Tree	Answer
Code	Answer
Distance : 11

155
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

156
Tree	>
Code	>
Distance : 11

157
Tree	checkArgument
Code	checkArgument
Distance : 11

158
Tree	doAnswer
Code	doAnswer
Distance : 11

159
Tree	notifyListeners
Code	notifyListeners
Distance : 11

160
Tree	Path
Code	Path
Distance : 11

161
Tree	DefaultToStringStyle
Code	DefaultToStringStyle
Distance : 11

162
Tree	index
Code	index
Distance : 11

163
Tree	k
Code	k
Distance : 11

164
Tree	UnivariateInterpolator
Code	UnivariateInterpolator
Distance : 11

165
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 11

166
Tree	setSeedInternal
Code	setSeedInternal
Distance : 11

167
Tree	position
Code	position
Distance : 11

168
Tree	reportNot
Code	reportNot
Distance : 11

169
Tree	enableRunTypeCheckAfterProcessing
Code	enableRunTypeCheckAfterProcessing
Distance : 11

170
Tree	throws
Code	throws
Distance : 11

171
Tree	value
Code	value
Distance : 11

172
Tree	T
Code	T
Distance : 11

173
Tree	(
Code	(
Distance : 10

174
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 11

175
Tree	useSourceInfoForNewQName
Code	useSourceInfoForNewQName
Distance : 11

176
Tree	&
Code	&
Distance : 11

177
Tree	VerificationModeImpl
Code	VerificationModeImpl
Distance : 11

178
Tree	fail
Code	fail
Distance : 11

179
Tree	setValues
Code	setValues
Distance : 11

180
Tree	getLastArguments
Code	getLastArguments
Distance : 11

181
Tree	,
Code	,
Distance : 11

182
Tree	UnivariateFunction
Code	UnivariateFunction
Distance : 11

183
Tree	IMethods
Code	IMethods
Distance : 11

184
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 11

185
Tree	return
Code	return
Distance : 10

186
Tree	messageContains
Code	messageContains
Distance : 11

187
Tree	reportAnd
Code	reportAnd
Distance : 11

188
Tree	Printable
Code	Printable
Distance : 11

189
Tree	returnChar
Code	returnChar
Distance : 11

190
Tree	i
Code	i
Distance : 11

191
Tree	@
Code	@
Distance : 11

192
Tree	js
Code	js
Distance : 11

193
Tree	getInvalidationsErrors
Code	getInvalidationsErrors
Distance : 11

194
Tree	assertType
Code	assertType
Distance : 11

195
Tree	+
Code	+
Distance : 11

196
Tree	other.value
Code	other.value
Distance : 11

197
Tree	ModulesTestUtils
Code	ModulesTestUtils
Distance : 11

198
Tree	addAnswerForVoidMethod
Code	addAnswerForVoidMethod
Distance : 11

199
Tree	doThrow
Code	doThrow
Distance : 11

========================================================================


========================================================================
Example Number: 39
Parent Code is: 
{ escapeJavaStyleString ( out , str , true ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ escapeJavaStyleString ( out , str , true , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

1
Tree	new MatchersPrinter ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

2
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , Boolean.TRUE )
Distance : 8

3
Tree	new PascalDistribution ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

4
Tree	new registerMessage ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

5
Tree	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

6
Tree	new testExternChanges ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new testExternChanges ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

7
Tree	new translate ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

8
Tree	new NumberAxis3D ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new NumberAxis3D ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

9
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Distance : 8

10
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

11
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

12
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

13
Tree	new registerMessage ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

14
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

15
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Distance : 8

16
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

17
Tree	new translate ( v.length , out , StringConverter.INSTANCE , Boolean.TRUE )
Code	new translate ( v.length , out , StringConverter.INSTANCE , Boolean.TRUE )
Distance : 8

18
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

19
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

20
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

21
Tree	new testExternChanges ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new testExternChanges ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

22
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

23
Tree	new translate ( FastMath.PI , out , circle.y , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , circle.y , FunctionFlavor.NORMAL )
Distance : 8

24
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , Boolean.TRUE )
Distance : 8

25
Tree	new translate ( FastMath.PI , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Distance : 8

26
Tree	new registerMessage ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

27
Tree	new PascalDistribution ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

28
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

29
Tree	new NumberAxis3D ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new NumberAxis3D ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

30
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

31
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

32
Tree	new testExternChanges ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new testExternChanges ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

33
Tree	new MatchersPrinter ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

34
Tree	new registerMessage ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

35
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

36
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

37
Tree	new registerMessage ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

38
Tree	new registerMessage ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

39
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , circle.y , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , circle.y , FunctionFlavor.NORMAL )
Distance : 8

40
Tree	new NumberAxis3D ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new NumberAxis3D ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

41
Tree	new translate ( FastMath.PI , out , StringConverter.INSTANCE , Boolean.TRUE )
Code	new translate ( FastMath.PI , out , StringConverter.INSTANCE , Boolean.TRUE )
Distance : 8

42
Tree	new translate ( v.length , out , a2.value , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , a2.value , FunctionFlavor.NORMAL )
Distance : 8

43
Tree	new translate ( v.length , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Distance : 8

44
Tree	new PascalDistribution ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

45
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , circle.y , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , circle.y , FunctionFlavor.NORMAL )
Distance : 8

46
Tree	new registerMessage ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

47
Tree	new translate ( v.length , out , circle.y , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , circle.y , FunctionFlavor.NORMAL )
Distance : 8

48
Tree	new ModulePath ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ModulePath ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

49
Tree	new translate ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

50
Tree	new LimitAngle ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

51
Tree	new registerMessage ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

52
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

53
Tree	new registerMessage ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

54
Tree	new translate ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

55
Tree	new ConcurrentHashMap ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

56
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

57
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

58
Tree	new ConcurrentHashMap ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

59
Tree	new translate ( v.length , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

60
Tree	new ModulePath ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ModulePath ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

61
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

62
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , data.length , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , data.length , EscapeUtils.ESCAPE_JAVA )
Distance : 8

63
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , data.length , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , data.length , EscapeUtils.ESCAPE_JAVA )
Distance : 8

64
Tree	new translate ( FastMath.PI , v.length , System.err , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , v.length , System.err , FunctionFlavor.NORMAL )
Distance : 8

65
Tree	new LimitAngle ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

66
Tree	new registerMessage ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

67
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

68
Tree	new translate ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Distance : 8

69
Tree	new translate ( v.length , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

70
Tree	new PascalDistribution ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

71
Tree	new translate ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Distance : 8

72
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , System.err , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , System.err , FunctionFlavor.NORMAL )
Distance : 8

73
Tree	new NumberAxis3D ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new NumberAxis3D ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

74
Tree	new registerMessage ( v.length , out , System.err , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

75
Tree	new translate ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

76
Tree	new registerMessage ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new registerMessage ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

77
Tree	new testExternChanges ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new testExternChanges ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

78
Tree	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

79
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Distance : 8

80
Tree	new translate ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

81
Tree	new ConcurrentHashMap ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

82
Tree	new registerMessage ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

83
Tree	new ModulePath ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ModulePath ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

84
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Distance : 8

85
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

86
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

87
Tree	new translate ( FastMath.PI , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , v.length , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

88
Tree	new translate ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , v.length , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

89
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

90
Tree	new ModulePath ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ModulePath ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

91
Tree	new translate ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , FunctionFlavor.NORMAL )
Distance : 8

92
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , System.err , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , System.err , FunctionFlavor.NORMAL )
Distance : 8

93
Tree	new registerMessage ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

94
Tree	new translate ( FastMath.PI , out , a2.value , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , a2.value , FunctionFlavor.NORMAL )
Distance : 8

95
Tree	new translate ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , LocalizedFormats.OVERFLOW_IN_ADDITION , EscapeUtils.ESCAPE_JAVA )
Distance : 8

96
Tree	new translate ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

97
Tree	new PascalDistribution ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

98
Tree	new registerMessage ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

99
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

100
Tree	new PascalDistribution ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

101
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

102
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

103
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

104
Tree	new ConcurrentHashMap ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

105
Tree	new registerMessage ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

106
Tree	new PascalDistribution ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

107
Tree	new registerMessage ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

108
Tree	new translate ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

109
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

110
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

111
Tree	new LimitAngle ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

112
Tree	new ConcurrentHashMap ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

113
Tree	new ConcurrentHashMap ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

114
Tree	new registerMessage ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

115
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

116
Tree	new translate ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

117
Tree	new translate ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

118
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

119
Tree	new PascalDistribution ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

120
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

121
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

122
Tree	new translate ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

123
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

124
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

125
Tree	new translate ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

126
Tree	new translate ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

127
Tree	new translate ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

128
Tree	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

129
Tree	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

130
Tree	new registerMessage ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

131
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

132
Tree	new registerMessage ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

133
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

134
Tree	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

135
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

136
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

137
Tree	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

138
Tree	new translate ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

139
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

140
Tree	new translate ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new translate ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

141
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

142
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

143
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

144
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

145
Tree	new translate ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , CompilerTestCase.LINE_JOINER , EscapeUtils.ESCAPE_JAVA )
Distance : 8

146
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

147
Tree	new ZoneInfoProvider ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

148
Tree	new ZoneInfoProvider ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

149
Tree	new translate ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

150
Tree	new MutableLong ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new MutableLong ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

151
Tree	new translate ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

152
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

153
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

154
Tree	new translate ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

155
Tree	new MutableLong ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

156
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

157
Tree	new MutableLong ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new MutableLong ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

158
Tree	new MatchersPrinter ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

159
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

160
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Distance : 8

161
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , circle.y , EscapeUtils.ESCAPE_JAVA )
Distance : 8

162
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , a2.value , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , a2.value , FunctionFlavor.NORMAL )
Distance : 8

163
Tree	new translate ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

164
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , a2.value , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , a2.value , FunctionFlavor.NORMAL )
Distance : 8

165
Tree	new MatchersPrinter ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

166
Tree	new translate ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

167
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

168
Tree	new translate ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

169
Tree	new LimitAngle ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new LimitAngle ( FastMath.PI , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

170
Tree	new translate ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

171
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

172
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

173
Tree	new LimitAngle ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

174
Tree	new translate ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

175
Tree	new ConcurrentHashMap ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

176
Tree	new translate ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

177
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

178
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

179
Tree	new translate ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , System.err , EscapeUtils.ESCAPE_JAVA )
Distance : 8

180
Tree	new ZoneInfoProvider ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

181
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

182
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

183
Tree	new translate ( v.length , out , System.err , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

184
Tree	new MutableLong ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( FastMath.PI , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

185
Tree	new ZoneInfoProvider ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_JAVA )
Distance : 8

186
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

187
Tree	new LimitAngle ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new LimitAngle ( v.length , out , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

188
Tree	new translate ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( v.length , out , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

189
Tree	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

190
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

191
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , System.err , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , System.err , FunctionFlavor.NORMAL )
Distance : 8

192
Tree	new registerMessage ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , a2.value , EscapeUtils.ESCAPE_JAVA )
Distance : 8

193
Tree	new LimitAngle ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new LimitAngle ( FastMath.PI , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

194
Tree	new translate ( v.length , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Code	new translate ( v.length , v.length , CompilerTestCase.LINE_JOINER , FunctionFlavor.NORMAL )
Distance : 8

195
Tree	new registerMessage ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , Percentile.EstimationType , FunctionFlavor.NORMAL )
Distance : 8

196
Tree	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( FastMath.PI , v.length , StringConverter.INSTANCE , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

197
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , Percentile.EstimationType , EscapeUtils.ESCAPE_JAVA )
Distance : 8

198
Tree	new ConcurrentHashMap ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( v.length , v.length , StringConverter.INSTANCE , FunctionFlavor.NORMAL )
Distance : 8

199
Tree	new translate ( FastMath.PI , out , data.length , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , data.length , EscapeUtils.ESCAPE_JAVA )
Distance : 8

========================================================================


========================================================================
Example Number: 40
Parent Code is: 
{ return escapeJavaStyleString ( str , true ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return escapeJavaStyleString ( str , true , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return escapeJavaStyleString ( str , false ) ; } values
Code	{ return escapeJavaStyleString ( str , false ) ; } values
Distance : 4

1
Tree	{ return escapeJavaStyleString ( str , false ) ; } Test
Code	{ return escapeJavaStyleString ( str , false ) ; } Test
Distance : 4

2
Tree	{ return escapeJavaStyleString ( str , false ) ; } MathRuntimeException
Code	{ return escapeJavaStyleString ( str , false ) ; } MathRuntimeException
Distance : 4

3
Tree	{ return escapeJavaStyleString ( str , false ) ; } {}
Code	{ return escapeJavaStyleString ( str , false ) ; } {}
Distance : 4

4
Tree	{ return escapeJavaStyleString ( str , false ) ; } f
Code	{ return escapeJavaStyleString ( str , false ) ; } f
Distance : 4

5
Tree	{ return escapeJavaStyleString ( str , false ) ; } class
Code	{ return escapeJavaStyleString ( str , false ) ; } class
Distance : 4

6
Tree	{ return escapeJavaStyleString ( str , false ) ; } -
Code	{ return escapeJavaStyleString ( str , false ) ; } -
Distance : 4

7
Tree	{ return escapeJavaStyleString ( str , false ) ; } Preconditions
Code	{ return escapeJavaStyleString ( str , false ) ; } Preconditions
Distance : 4

8
Tree	{ return escapeJavaStyleString ( str , false ) ; } T
Code	{ return escapeJavaStyleString ( str , false ) ; } T
Distance : 4

9
Tree	{ return escapeJavaStyleString ( str , false ) ; } &&
Code	{ return escapeJavaStyleString ( str , false ) ; } &&
Distance : 4

10
Tree	{ return escapeJavaStyleString ( str , false ) ; } ]
Code	{ return escapeJavaStyleString ( str , false ) ; } ]
Distance : 4

11
Tree	{ return escapeJavaStyleString ( str , false ) ; } [
Code	{ return escapeJavaStyleString ( str , false ) ; } [
Distance : 4

12
Tree	{ return escapeJavaStyleString ( str , false ) ; } Object
Code	{ return escapeJavaStyleString ( str , false ) ; } Object
Distance : 4

13
Tree	{ return escapeJavaStyleString ( str , false ) ; } ParamChecks
Code	{ return escapeJavaStyleString ( str , false ) ; } ParamChecks
Distance : 4

14
Tree	{ return escapeJavaStyleString ( str , false ) ; } test
Code	{ return escapeJavaStyleString ( str , false ) ; } test
Distance : 4

15
Tree	{ return escapeJavaStyleString ( str , false ) ; } @
Code	{ return escapeJavaStyleString ( str , false ) ; } @
Distance : 4

16
Tree	{ return escapeJavaStyleString ( str , false ) ; } !
Code	{ return escapeJavaStyleString ( str , false ) ; } !
Distance : 4

17
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertEquals
Code	{ return escapeJavaStyleString ( str , false ) ; } assertEquals
Distance : 4

18
Tree	{ return escapeJavaStyleString ( str , false ) ; } ==
Code	{ return escapeJavaStyleString ( str , false ) ; } ==
Distance : 4

19
Tree	{ return escapeJavaStyleString ( str , false ) ; } void
Code	{ return escapeJavaStyleString ( str , false ) ; } void
Distance : 4

20
Tree	{ return escapeJavaStyleString ( str , false ) ; } []
Code	{ return escapeJavaStyleString ( str , false ) ; } []
Distance : 4

21
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkState
Code	{ return escapeJavaStyleString ( str , false ) ; } checkState
Distance : 4

22
Tree	{ return escapeJavaStyleString ( str , false ) ; } toString
Code	{ return escapeJavaStyleString ( str , false ) ; } toString
Distance : 4

23
Tree	{ return escapeJavaStyleString ( str , false ) ; } protected
Code	{ return escapeJavaStyleString ( str , false ) ; } protected
Distance : 4

24
Tree	{ return escapeJavaStyleString ( str , false ) ; } nullNotPermitted
Code	{ return escapeJavaStyleString ( str , false ) ; } nullNotPermitted
Distance : 4

25
Tree	{ return escapeJavaStyleString ( str , false ) ; } e
Code	{ return escapeJavaStyleString ( str , false ) ; } e
Distance : 4

26
Tree	{ return escapeJavaStyleString ( str , false ) ; } super
Code	{ return escapeJavaStyleString ( str , false ) ; } super
Distance : 4

27
Tree	{ return escapeJavaStyleString ( str , false ) ; } i
Code	{ return escapeJavaStyleString ( str , false ) ; } i
Distance : 4

28
Tree	{ return escapeJavaStyleString ( str , false ) ; } mock
Code	{ return escapeJavaStyleString ( str , false ) ; } mock
Distance : 4

29
Tree	{ return escapeJavaStyleString ( str , false ) ; } Override
Code	{ return escapeJavaStyleString ( str , false ) ; } Override
Distance : 4

30
Tree	{ return escapeJavaStyleString ( str , false ) ; } public
Code	{ return escapeJavaStyleString ( str , false ) ; } public
Distance : 4

31
Tree	{ return escapeJavaStyleString ( str , false ) ; } >
Code	{ return escapeJavaStyleString ( str , false ) ; } >
Distance : 4

32
Tree	{ return escapeJavaStyleString ( str , false ) ; } new
Code	{ return escapeJavaStyleString ( str , false ) ; } new
Distance : 4

33
Tree	{ return escapeJavaStyleString ( str , false ) ; } STRING_CONSTANT
Code	{ return escapeJavaStyleString ( str , false ) ; } STRING_CONSTANT
Distance : 4

34
Tree	{ return escapeJavaStyleString ( str , false ) ; } ,
Code	{ return escapeJavaStyleString ( str , false ) ; } ,
Distance : 4

35
Tree	{ return escapeJavaStyleString ( str , false ) ; } .
Code	{ return escapeJavaStyleString ( str , false ) ; } .
Distance : 4

36
Tree	{ return escapeJavaStyleString ( str , false ) ; } }
Code	{ return escapeJavaStyleString ( str , false ) ; } }
Distance : 4

37
Tree	{ return escapeJavaStyleString ( str , false ) ; } =
Code	{ return escapeJavaStyleString ( str , false ) ; } =
Distance : 4

38
Tree	{ return escapeJavaStyleString ( str , false ) ; } (
Code	{ return escapeJavaStyleString ( str , false ) ; } (
Distance : 4

39
Tree	{ return escapeJavaStyleString ( str , false ) ; } <s>
Code	{ return escapeJavaStyleString ( str , false ) ; } <s>
Distance : 4

40
Tree	{ return escapeJavaStyleString ( str , false ) ; } <blank>
Code	{ return escapeJavaStyleString ( str , false ) ; } <blank>
Distance : 4

41
Tree	{ return escapeJavaStyleString ( str , false ) ; } return
Code	{ return escapeJavaStyleString ( str , false ) ; } return
Distance : 4

42
Tree	{ return escapeJavaStyleString ( str , false ) ; } )
Code	{ return escapeJavaStyleString ( str , false ) ; } )
Distance : 4

43
Tree	{ return escapeJavaStyleString ( str , false ) ; } ;
Code	{ return escapeJavaStyleString ( str , false ) ; } ;
Distance : 4

44
Tree	{ return escapeJavaStyleString ( str , false ) ; } ()
Code	{ return escapeJavaStyleString ( str , false ) ; } ()
Distance : 4

45
Tree	{ return escapeJavaStyleString ( str , false ) ; } {
Code	{ return escapeJavaStyleString ( str , false ) ; } {
Distance : 4

46
Tree	{ return escapeJavaStyleString ( str , false ) ; } false
Code	{ return escapeJavaStyleString ( str , false ) ; } false
Distance : 4

47
Tree	{ return escapeJavaStyleString ( str , false ) ; } int
Code	{ return escapeJavaStyleString ( str , false ) ; } int
Distance : 4

48
Tree	{ return escapeJavaStyleString ( str , false ) ; } double
Code	{ return escapeJavaStyleString ( str , false ) ; } double
Distance : 4

49
Tree	{ return escapeJavaStyleString ( str , false ) ; } n
Code	{ return escapeJavaStyleString ( str , false ) ; } n
Distance : 4

50
Tree	{ return escapeJavaStyleString ( str , false ) ; } matcher
Code	{ return escapeJavaStyleString ( str , false ) ; } matcher
Distance : 4

51
Tree	{ return escapeJavaStyleString ( str , false ) ; } NUMBER_CONSTANT
Code	{ return escapeJavaStyleString ( str , false ) ; } NUMBER_CONSTANT
Distance : 4

52
Tree	{ return escapeJavaStyleString ( str , false ) ; } this
Code	{ return escapeJavaStyleString ( str , false ) ; } this
Distance : 4

53
Tree	{ return escapeJavaStyleString ( str , false ) ; } final
Code	{ return escapeJavaStyleString ( str , false ) ; } final
Distance : 4

54
Tree	{ return escapeJavaStyleString ( str , false ) ; } name
Code	{ return escapeJavaStyleString ( str , false ) ; } name
Distance : 4

55
Tree	{ return escapeJavaStyleString ( str , false ) ; } t
Code	{ return escapeJavaStyleString ( str , false ) ; } t
Distance : 4

56
Tree	{ return escapeJavaStyleString ( str , false ) ; } solver
Code	{ return escapeJavaStyleString ( str , false ) ; } solver
Distance : 4

57
Tree	{ return escapeJavaStyleString ( str , false ) ; } getField
Code	{ return escapeJavaStyleString ( str , false ) ; } getField
Distance : 4

58
Tree	{ return escapeJavaStyleString ( str , false ) ; } pattern
Code	{ return escapeJavaStyleString ( str , false ) ; } pattern
Distance : 4

59
Tree	{ return escapeJavaStyleString ( str , false ) ; } out
Code	{ return escapeJavaStyleString ( str , false ) ; } out
Distance : 4

60
Tree	{ return escapeJavaStyleString ( str , false ) ; } Collection
Code	{ return escapeJavaStyleString ( str , false ) ; } Collection
Distance : 4

61
Tree	{ return escapeJavaStyleString ( str , false ) ; } mode
Code	{ return escapeJavaStyleString ( str , false ) ; } mode
Distance : 4

62
Tree	{ return escapeJavaStyleString ( str , false ) ; } mockingProgress
Code	{ return escapeJavaStyleString ( str , false ) ; } mockingProgress
Distance : 4

63
Tree	{ return escapeJavaStyleString ( str , false ) ; } return;
Code	{ return escapeJavaStyleString ( str , false ) ; } return;
Distance : 4

64
Tree	{ return escapeJavaStyleString ( str , false ) ; } char
Code	{ return escapeJavaStyleString ( str , false ) ; } char
Distance : 4

65
Tree	{ return escapeJavaStyleString ( str , false ) ; } get
Code	{ return escapeJavaStyleString ( str , false ) ; } get
Distance : 4

66
Tree	{ return escapeJavaStyleString ( str , false ) ; } static
Code	{ return escapeJavaStyleString ( str , false ) ; } static
Distance : 4

67
Tree	{ return escapeJavaStyleString ( str , false ) ; } setAcceptedLanguage
Code	{ return escapeJavaStyleString ( str , false ) ; } setAcceptedLanguage
Distance : 4

68
Tree	{ return escapeJavaStyleString ( str , false ) ; } JSType
Code	{ return escapeJavaStyleString ( str , false ) ; } JSType
Distance : 4

69
Tree	{ return escapeJavaStyleString ( str , false ) ; } isEmpty
Code	{ return escapeJavaStyleString ( str , false ) ; } isEmpty
Distance : 4

70
Tree	{ return escapeJavaStyleString ( str , false ) ; } else
Code	{ return escapeJavaStyleString ( str , false ) ; } else
Distance : 4

71
Tree	{ return escapeJavaStyleString ( str , false ) ; } true
Code	{ return escapeJavaStyleString ( str , false ) ; } true
Distance : 4

72
Tree	{ return escapeJavaStyleString ( str , false ) ; } return
Code	{ return escapeJavaStyleString ( str , false ) ; } return
Distance : 4

73
Tree	{ return escapeJavaStyleString ( str , false ) ; } if
Code	{ return escapeJavaStyleString ( str , false ) ; } if
Distance : 4

74
Tree	{ return escapeJavaStyleString ( str , false ) ; } getMessage
Code	{ return escapeJavaStyleString ( str , false ) ; } getMessage
Distance : 4

75
Tree	{ return escapeJavaStyleString ( str , false ) ; } <
Code	{ return escapeJavaStyleString ( str , false ) ; } <
Distance : 4

76
Tree	{ return escapeJavaStyleString ( str , false ) ; } dataset
Code	{ return escapeJavaStyleString ( str , false ) ; } dataset
Distance : 4

77
Tree	{ return escapeJavaStyleString ( str , false ) ; } getChronology
Code	{ return escapeJavaStyleString ( str , false ) ; } getChronology
Distance : 4

78
Tree	{ return escapeJavaStyleString ( str , false ) ; } js
Code	{ return escapeJavaStyleString ( str , false ) ; } js
Distance : 4

79
Tree	{ return escapeJavaStyleString ( str , false ) ; } TestUtilities
Code	{ return escapeJavaStyleString ( str , false ) ; } TestUtilities
Distance : 4

80
Tree	{ return escapeJavaStyleString ( str , false ) ; } equals
Code	{ return escapeJavaStyleString ( str , false ) ; } equals
Distance : 4

81
Tree	{ return escapeJavaStyleString ( str , false ) ; } d
Code	{ return escapeJavaStyleString ( str , false ) ; } d
Distance : 4

82
Tree	{ return escapeJavaStyleString ( str , false ) ; } notifyListeners
Code	{ return escapeJavaStyleString ( str , false ) ; } notifyListeners
Distance : 4

83
Tree	{ return escapeJavaStyleString ( str , false ) ; } externs
Code	{ return escapeJavaStyleString ( str , false ) ; } externs
Distance : 4

84
Tree	{ return escapeJavaStyleString ( str , false ) ; } for
Code	{ return escapeJavaStyleString ( str , false ) ; } for
Distance : 4

85
Tree	{ return escapeJavaStyleString ( str , false ) ; } Invocation
Code	{ return escapeJavaStyleString ( str , false ) ; } Invocation
Distance : 4

86
Tree	{ return escapeJavaStyleString ( str , false ) ; } node
Code	{ return escapeJavaStyleString ( str , false ) ; } node
Distance : 4

87
Tree	{ return escapeJavaStyleString ( str , false ) ; } getParent
Code	{ return escapeJavaStyleString ( str , false ) ; } getParent
Distance : 4

88
Tree	{ return escapeJavaStyleString ( str , false ) ; } StrBuilder
Code	{ return escapeJavaStyleString ( str , false ) ; } StrBuilder
Distance : 4

89
Tree	{ return escapeJavaStyleString ( str , false ) ; } setUp
Code	{ return escapeJavaStyleString ( str , false ) ; } setUp
Distance : 4

90
Tree	{ return escapeJavaStyleString ( str , false ) ; } invocations
Code	{ return escapeJavaStyleString ( str , false ) ; } invocations
Distance : 4

91
Tree	{ return escapeJavaStyleString ( str , false ) ; } index
Code	{ return escapeJavaStyleString ( str , false ) ; } index
Distance : 4

92
Tree	{ return escapeJavaStyleString ( str , false ) ; } instant
Code	{ return escapeJavaStyleString ( str , false ) ; } instant
Distance : 4

93
Tree	{ return escapeJavaStyleString ( str , false ) ; } abs
Code	{ return escapeJavaStyleString ( str , false ) ; } abs
Distance : 4

94
Tree	{ return escapeJavaStyleString ( str , false ) ; } Double
Code	{ return escapeJavaStyleString ( str , false ) ; } Double
Distance : 4

95
Tree	{ return escapeJavaStyleString ( str , false ) ; } <=
Code	{ return escapeJavaStyleString ( str , false ) ; } <=
Distance : 4

96
Tree	{ return escapeJavaStyleString ( str , false ) ; } reportMatcher
Code	{ return escapeJavaStyleString ( str , false ) ; } reportMatcher
Distance : 4

97
Tree	{ return escapeJavaStyleString ( str , false ) ; } stream
Code	{ return escapeJavaStyleString ( str , false ) ; } stream
Distance : 4

98
Tree	{ return escapeJavaStyleString ( str , false ) ; } s
Code	{ return escapeJavaStyleString ( str , false ) ; } s
Distance : 4

99
Tree	{ return escapeJavaStyleString ( str , false ) ; }
Code	{ return escapeJavaStyleString ( str , false ) ; }
Distance : 3

100
Tree	{ return escapeJavaStyleString ( str , false ) ; } contains
Code	{ return escapeJavaStyleString ( str , false ) ; } contains
Distance : 4

101
Tree	{ return escapeJavaStyleString ( str , false ) ; } b
Code	{ return escapeJavaStyleString ( str , false ) ; } b
Distance : 4

102
Tree	{ return escapeJavaStyleString ( str , false ) ; } stroke
Code	{ return escapeJavaStyleString ( str , false ) ; } stroke
Distance : 4

103
Tree	{ return escapeJavaStyleString ( str , false ) ; } MutableTimePeriod
Code	{ return escapeJavaStyleString ( str , false ) ; } MutableTimePeriod
Distance : 4

104
Tree	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 4

105
Tree	{ return escapeJavaStyleString ( str , false ) ; } size
Code	{ return escapeJavaStyleString ( str , false ) ; } size
Distance : 4

106
Tree	{ return escapeJavaStyleString ( str , false ) ; } traverseEs6
Code	{ return escapeJavaStyleString ( str , false ) ; } traverseEs6
Distance : 4

107
Tree	{ return escapeJavaStyleString ( str , false ) ; } StringBuilder
Code	{ return escapeJavaStyleString ( str , false ) ; } StringBuilder
Distance : 4

108
Tree	{ return escapeJavaStyleString ( str , false ) ; } chrono
Code	{ return escapeJavaStyleString ( str , false ) ; } chrono
Distance : 4

109
Tree	{ return escapeJavaStyleString ( str , false ) ; } a
Code	{ return escapeJavaStyleString ( str , false ) ; } a
Distance : 4

110
Tree	{ return escapeJavaStyleString ( str , false ) ; } returnZero
Code	{ return escapeJavaStyleString ( str , false ) ; } returnZero
Distance : 4

111
Tree	{ return escapeJavaStyleString ( str , false ) ; } sb
Code	{ return escapeJavaStyleString ( str , false ) ; } sb
Distance : 4

112
Tree	{ return escapeJavaStyleString ( str , false ) ; } scope
Code	{ return escapeJavaStyleString ( str , false ) ; } scope
Distance : 4

113
Tree	{ return escapeJavaStyleString ( str , false ) ; } UnivariateFunction
Code	{ return escapeJavaStyleString ( str , false ) ; } UnivariateFunction
Distance : 4

114
Tree	{ return escapeJavaStyleString ( str , false ) ; } sqrt
Code	{ return escapeJavaStyleString ( str , false ) ; } sqrt
Distance : 4

115
Tree	{ return escapeJavaStyleString ( str , false ) ; } clone
Code	{ return escapeJavaStyleString ( str , false ) ; } clone
Distance : 4

116
Tree	{ return escapeJavaStyleString ( str , false ) ; } getFirstChild
Code	{ return escapeJavaStyleString ( str , false ) ; } getFirstChild
Distance : 4

117
Tree	{ return escapeJavaStyleString ( str , false ) ; } throws
Code	{ return escapeJavaStyleString ( str , false ) ; } throws
Distance : 4

118
Tree	{ return escapeJavaStyleString ( str , false ) ; } simpleMethod
Code	{ return escapeJavaStyleString ( str , false ) ; } simpleMethod
Distance : 4

119
Tree	{ return escapeJavaStyleString ( str , false ) ; } getArgumentMatcherStorage
Code	{ return escapeJavaStyleString ( str , false ) ; } getArgumentMatcherStorage
Distance : 4

120
Tree	{ return escapeJavaStyleString ( str , false ) ; } append
Code	{ return escapeJavaStyleString ( str , false ) ; } append
Distance : 4

121
Tree	{ return escapeJavaStyleString ( str , false ) ; } alpha
Code	{ return escapeJavaStyleString ( str , false ) ; } alpha
Distance : 4

122
Tree	{ return escapeJavaStyleString ( str , false ) ; } isNormalBlock
Code	{ return escapeJavaStyleString ( str , false ) ; } isNormalBlock
Distance : 4

123
Tree	{ return escapeJavaStyleString ( str , false ) ; } obj
Code	{ return escapeJavaStyleString ( str , false ) ; } obj
Distance : 4

124
Tree	{ return escapeJavaStyleString ( str , false ) ; } isBlock
Code	{ return escapeJavaStyleString ( str , false ) ; } isBlock
Distance : 4

125
Tree	{ return escapeJavaStyleString ( str , false ) ; } array
Code	{ return escapeJavaStyleString ( str , false ) ; } array
Distance : 4

126
Tree	{ return escapeJavaStyleString ( str , false ) ; } TestUtils
Code	{ return escapeJavaStyleString ( str , false ) ; } TestUtils
Distance : 4

127
Tree	{ return escapeJavaStyleString ( str , false ) ; } length
Code	{ return escapeJavaStyleString ( str , false ) ; } length
Distance : 4

128
Tree	{ return escapeJavaStyleString ( str , false ) ; } expected
Code	{ return escapeJavaStyleString ( str , false ) ; } expected
Distance : 4

129
Tree	{ return escapeJavaStyleString ( str , false ) ; } IllegalArgumentException
Code	{ return escapeJavaStyleString ( str , false ) ; } IllegalArgumentException
Distance : 4

130
Tree	{ return escapeJavaStyleString ( str , false ) ; } invocation
Code	{ return escapeJavaStyleString ( str , false ) ; } invocation
Distance : 4

131
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertThat
Code	{ return escapeJavaStyleString ( str , false ) ; } assertThat
Distance : 4

132
Tree	{ return escapeJavaStyleString ( str , false ) ; } FastMath
Code	{ return escapeJavaStyleString ( str , false ) ; } FastMath
Distance : 4

133
Tree	{ return escapeJavaStyleString ( str , false ) ; } reportCodeChange
Code	{ return escapeJavaStyleString ( str , false ) ; } reportCodeChange
Distance : 4

134
Tree	{ return escapeJavaStyleString ( str , false ) ; } testSame
Code	{ return escapeJavaStyleString ( str , false ) ; } testSame
Distance : 4

135
Tree	{ return escapeJavaStyleString ( str , false ) ; } createIllegalArgumentException
Code	{ return escapeJavaStyleString ( str , false ) ; } createIllegalArgumentException
Distance : 4

136
Tree	{ return escapeJavaStyleString ( str , false ) ; } ArrayList
Code	{ return escapeJavaStyleString ( str , false ) ; } ArrayList
Distance : 4

137
Tree	{ return escapeJavaStyleString ( str , false ) ; } parent
Code	{ return escapeJavaStyleString ( str , false ) ; } parent
Distance : 4

138
Tree	{ return escapeJavaStyleString ( str , false ) ; } LINE_JOINER
Code	{ return escapeJavaStyleString ( str , false ) ; } LINE_JOINER
Distance : 4

139
Tree	{ return escapeJavaStyleString ( str , false ) ; } x
Code	{ return escapeJavaStyleString ( str , false ) ; } x
Distance : 4

140
Tree	{ return escapeJavaStyleString ( str , false ) ; } fireChangeEvent
Code	{ return escapeJavaStyleString ( str , false ) ; } fireChangeEvent
Distance : 4

141
Tree	{ return escapeJavaStyleString ( str , false ) ; } str
Code	{ return escapeJavaStyleString ( str , false ) ; } str
Distance : 4

142
Tree	{ return escapeJavaStyleString ( str , false ) ; } m
Code	{ return escapeJavaStyleString ( str , false ) ; } m
Distance : 4

143
Tree	{ return escapeJavaStyleString ( str , false ) ; } try
Code	{ return escapeJavaStyleString ( str , false ) ; } try
Distance : 4

144
Tree	{ return escapeJavaStyleString ( str , false ) ; } fail
Code	{ return escapeJavaStyleString ( str , false ) ; } fail
Distance : 4

145
Tree	{ return escapeJavaStyleString ( str , false ) ; } :
Code	{ return escapeJavaStyleString ( str , false ) ; } :
Distance : 4

146
Tree	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT6
Code	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT6
Distance : 4

147
Tree	{ return escapeJavaStyleString ( str , false ) ; } optimizer
Code	{ return escapeJavaStyleString ( str , false ) ; } optimizer
Distance : 4

148
Tree	{ return escapeJavaStyleString ( str , true ) ; }
Code	{ return escapeJavaStyleString ( str , true ) ; }
Distance : 2

149
Tree	{ return escapeJavaStyleString ( str , false ) ; } <>
Code	{ return escapeJavaStyleString ( str , false ) ; } <>
Distance : 4

150
Tree	{ return escapeJavaStyleString ( str , false ) ; } ?
Code	{ return escapeJavaStyleString ( str , false ) ; } ?
Distance : 4

151
Tree	{ return escapeJavaStyleString ( str , false ) ; } boolean
Code	{ return escapeJavaStyleString ( str , false ) ; } boolean
Distance : 4

152
Tree	{ return escapeJavaStyleString ( str , false ) ; } paint
Code	{ return escapeJavaStyleString ( str , false ) ; } paint
Distance : 4

153
Tree	{ return escapeJavaStyleString ( str , false ) ; } result
Code	{ return escapeJavaStyleString ( str , false ) ; } result
Distance : 4

154
Tree	{ return escapeJavaStyleString ( str , false ) ; } *
Code	{ return escapeJavaStyleString ( str , false ) ; } *
Distance : 4

155
Tree	{ return escapeJavaStyleString ( str , false ) ; } type
Code	{ return escapeJavaStyleString ( str , false ) ; } type
Distance : 4

156
Tree	{ return escapeJavaStyleString ( str , false ) ; } getInstance
Code	{ return escapeJavaStyleString ( str , false ) ; } getInstance
Distance : 4

157
Tree	{ return escapeJavaStyleString ( str , false ) ; } serialised
Code	{ return escapeJavaStyleString ( str , false ) ; } serialised
Distance : 4

158
Tree	{ return escapeJavaStyleString ( str , false ) ; } Exception
Code	{ return escapeJavaStyleString ( str , false ) ; } Exception
Distance : 4

159
Tree	{ return escapeJavaStyleString ( str , false ) ; } Assert
Code	{ return escapeJavaStyleString ( str , false ) ; } Assert
Distance : 4

160
Tree	{ return escapeJavaStyleString ( str , false ) ; } source
Code	{ return escapeJavaStyleString ( str , false ) ; } source
Distance : 4

161
Tree	{ return escapeJavaStyleString ( str , false ) ; } Class
Code	{ return escapeJavaStyleString ( str , false ) ; } Class
Distance : 4

162
Tree	{ return escapeJavaStyleString ( str , false ) ; } Math
Code	{ return escapeJavaStyleString ( str , false ) ; } Math
Distance : 4

163
Tree	{ return escapeJavaStyleString ( str , false ) ; } root
Code	{ return escapeJavaStyleString ( str , false ) ; } root
Distance : 4

164
Tree	{ return escapeJavaStyleString ( str , false ) ; } options
Code	{ return escapeJavaStyleString ( str , false ) ; } options
Distance : 4

165
Tree	{ return escapeJavaStyleString ( str , false ) ; } p
Code	{ return escapeJavaStyleString ( str , false ) ; } p
Distance : 4

166
Tree	{ return escapeJavaStyleString ( str , false ) ; } data
Code	{ return escapeJavaStyleString ( str , false ) ; } data
Distance : 4

167
Tree	{ return escapeJavaStyleString ( str , false ) ; } add
Code	{ return escapeJavaStyleString ( str , false ) ; } add
Distance : 4

168
Tree	{ return escapeJavaStyleString ( str , false ) ; } field
Code	{ return escapeJavaStyleString ( str , false ) ; } field
Distance : 4

169
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkArgument
Code	{ return escapeJavaStyleString ( str , false ) ; } checkArgument
Distance : 4

170
Tree	{ return escapeJavaStyleString ( str , false ) ; } ex
Code	{ return escapeJavaStyleString ( str , false ) ; } ex
Distance : 4

171
Tree	{ return escapeJavaStyleString ( str , false ) ; } NodeUtil
Code	{ return escapeJavaStyleString ( str , false ) ; } NodeUtil
Distance : 4

172
Tree	{ return escapeJavaStyleString ( str , false ) ; } join
Code	{ return escapeJavaStyleString ( str , false ) ; } join
Distance : 4

173
Tree	{ return escapeJavaStyleString ( str , false ) ; } List
Code	{ return escapeJavaStyleString ( str , false ) ; } List
Distance : 4

174
Tree	{ return escapeJavaStyleString ( str , false ) ; } NodeTraversal
Code	{ return escapeJavaStyleString ( str , false ) ; } NodeTraversal
Distance : 4

175
Tree	{ return escapeJavaStyleString ( str , false ) ; } Args
Code	{ return escapeJavaStyleString ( str , false ) ; } Args
Distance : 4

176
Tree	{ return escapeJavaStyleString ( str , false ) ; } v
Code	{ return escapeJavaStyleString ( str , false ) ; } v
Distance : 4

177
Tree	{ return escapeJavaStyleString ( str , false ) ; } Integer
Code	{ return escapeJavaStyleString ( str , false ) ; } Integer
Distance : 4

178
Tree	{ return escapeJavaStyleString ( str , false ) ; } lines
Code	{ return escapeJavaStyleString ( str , false ) ; } lines
Distance : 4

179
Tree	{ return escapeJavaStyleString ( str , false ) ; } c
Code	{ return escapeJavaStyleString ( str , false ) ; } c
Distance : 4

180
Tree	{ return escapeJavaStyleString ( str , false ) ; } verify
Code	{ return escapeJavaStyleString ( str , false ) ; } verify
Distance : 4

181
Tree	{ return escapeJavaStyleString ( str , false ) ; } Node
Code	{ return escapeJavaStyleString ( str , false ) ; } Node
Distance : 4

182
Tree	{ return escapeJavaStyleString ( str , false ) ; } compiler
Code	{ return escapeJavaStyleString ( str , false ) ; } compiler
Distance : 4

183
Tree	{ return escapeJavaStyleString ( str , false ) ; } String
Code	{ return escapeJavaStyleString ( str , false ) ; } String
Distance : 4

184
Tree	{ return escapeJavaStyleString ( str , false ) ; } null
Code	{ return escapeJavaStyleString ( str , false ) ; } null
Distance : 4

185
Tree	{ return escapeJavaStyleString ( str , false ) ; } wanted
Code	{ return escapeJavaStyleString ( str , false ) ; } wanted
Distance : 4

186
Tree	{ return escapeJavaStyleString ( str , false ) ; } +
Code	{ return escapeJavaStyleString ( str , false ) ; } +
Distance : 4

187
Tree	{ return escapeJavaStyleString ( str , false ) ; } catch
Code	{ return escapeJavaStyleString ( str , false ) ; } catch
Distance : 4

188
Tree	{ return escapeJavaStyleString ( str , false ) ; } !=
Code	{ return escapeJavaStyleString ( str , false ) ; } !=
Distance : 4

189
Tree	{ return escapeJavaStyleString ( str , false ) ; } value
Code	{ return escapeJavaStyleString ( str , false ) ; } value
Distance : 4

190
Tree	{ return escapeJavaStyleString ( str , false ) ; } /
Code	{ return escapeJavaStyleString ( str , false ) ; } /
Distance : 4

191
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertTrue
Code	{ return escapeJavaStyleString ( str , false ) ; } assertTrue
Distance : 4

192
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkNotNull
Code	{ return escapeJavaStyleString ( str , false ) ; } checkNotNull
Distance : 4

193
Tree	{ return escapeJavaStyleString ( str , false ) ; } Fraction
Code	{ return escapeJavaStyleString ( str , false ) ; } Fraction
Distance : 4

194
Tree	{ return escapeJavaStyleString ( str , false ) ; } valueOf
Code	{ return escapeJavaStyleString ( str , false ) ; } valueOf
Distance : 4

195
Tree	{ return escapeJavaStyleString ( str , false ) ; } instance
Code	{ return escapeJavaStyleString ( str , false ) ; } instance
Distance : 4

196
Tree	{ return escapeJavaStyleString ( str , false ) ; } long
Code	{ return escapeJavaStyleString ( str , false ) ; } long
Distance : 4

197
Tree	{ return escapeJavaStyleString ( str , false ) ; } throw
Code	{ return escapeJavaStyleString ( str , false ) ; } throw
Distance : 4

198
Tree	{ return escapeJavaStyleString ( str , false ) ; } y
Code	{ return escapeJavaStyleString ( str , false ) ; } y
Distance : 4

199
Tree	{ return escapeJavaStyleString ( str , false ) ; } PeriodType
Code	{ return escapeJavaStyleString ( str , false ) ; } PeriodType
Distance : 4

========================================================================


========================================================================
Example Number: 41
Parent Code is: 
{ escapeJavaStyleString ( out , str , false ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ escapeJavaStyleString ( out , str , false , false ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

1
Tree	new DurationConverter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new DurationConverter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

2
Tree	new PomComparator ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PomComparator ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

3
Tree	new SymmLQEvent ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new SymmLQEvent ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

4
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , v.data , FunctionFlavor.NORMAL )
Distance : 8

5
Tree	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

6
Tree	new ModulePath ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ModulePath ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

7
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

8
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

9
Tree	new NumberAxis3D ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new NumberAxis3D ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

10
Tree	new testExternChanges ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new testExternChanges ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

11
Tree	new PascalDistribution ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new PascalDistribution ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

12
Tree	new translate ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

13
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Distance : 8

14
Tree	new translate ( v.length , v.length , CharUtils.NUL , Boolean.TRUE )
Code	new translate ( v.length , v.length , CharUtils.NUL , Boolean.TRUE )
Distance : 8

15
Tree	new IntervalConverter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new IntervalConverter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

16
Tree	new MatchersPrinter ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new MatchersPrinter ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

17
Tree	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

18
Tree	new CGLIBHacker ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new CGLIBHacker ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

19
Tree	new TimeZonePrinter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new TimeZonePrinter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

20
Tree	new testExternChanges ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new testExternChanges ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

21
Tree	new UniformContinuousDistribution ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UniformContinuousDistribution ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

22
Tree	new ExceptionWithCause ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ExceptionWithCause ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

23
Tree	new registerMessage ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new registerMessage ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

24
Tree	new translate ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

25
Tree	new NumberAxis3D ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new NumberAxis3D ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

26
Tree	new translate ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

27
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , Boolean.TRUE )
Distance : 8

28
Tree	new testExternChanges ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new testExternChanges ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

29
Tree	new MatchersPrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new MatchersPrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

30
Tree	new SymmLQEvent ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new SymmLQEvent ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

31
Tree	new PascalDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new PascalDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

32
Tree	new LimitAngle ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

33
Tree	new UniformContinuousDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new UniformContinuousDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

34
Tree	new ConcurrentHashMap ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

35
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

36
Tree	new ModulePath ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ModulePath ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

37
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

38
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

39
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

40
Tree	new NumberAxis3D ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new NumberAxis3D ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

41
Tree	new MutableLong ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

42
Tree	new Rule ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new Rule ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

43
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

44
Tree	new ZoneInfoProvider ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

45
Tree	new JsMessage.Builder ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new JsMessage.Builder ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

46
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

47
Tree	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

48
Tree	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

49
Tree	new translate ( v.length , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( v.length , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

50
Tree	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

51
Tree	new testExternChanges ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new testExternChanges ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

52
Tree	new PluginFinder ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PluginFinder ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

53
Tree	new ByteBuddy ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ByteBuddy ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

54
Tree	new SymmLQEvent ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new SymmLQEvent ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

55
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

56
Tree	new DurationConverter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new DurationConverter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

57
Tree	new translate ( v.length , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Code	new translate ( v.length , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Distance : 8

58
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , data.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , data.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

59
Tree	new LimitAngle ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new LimitAngle ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

60
Tree	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Code	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

61
Tree	new ModulePath ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ModulePath ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

62
Tree	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

63
Tree	new Decimal64 ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new Decimal64 ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

64
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

65
Tree	new NumberFormat ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new NumberFormat ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

66
Tree	new TimeZonePrinter ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new TimeZonePrinter ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

67
Tree	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

68
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , Calendar.JANUARY , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , Calendar.JANUARY , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

69
Tree	new translate ( FastMath.PI , v.length , CharUtils.NUL , Boolean.TRUE )
Code	new translate ( FastMath.PI , v.length , CharUtils.NUL , Boolean.TRUE )
Distance : 8

70
Tree	new UniformContinuousDistribution ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new UniformContinuousDistribution ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

71
Tree	new PomComparator ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PomComparator ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

72
Tree	new TimeZonePrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new TimeZonePrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

73
Tree	new SymmLQEvent ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new SymmLQEvent ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

74
Tree	new PomComparator ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new PomComparator ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

75
Tree	new DevirtualizePrototypeMethods ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new DevirtualizePrototypeMethods ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

76
Tree	new translate ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

77
Tree	new LimitAngle ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

78
Tree	new registerMessage ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

79
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , MathUtils.OrderDirection.INCREASING )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , MathUtils.OrderDirection.INCREASING )
Distance : 8

80
Tree	new MatchersPrinter ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

81
Tree	new ModulePath ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ModulePath ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

82
Tree	new ChineseRings ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ChineseRings ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

83
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

84
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

85
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , Calendar.JANUARY , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

86
Tree	new testFunctionNamesAndIds ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new testFunctionNamesAndIds ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

87
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

88
Tree	new Rule ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new Rule ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

89
Tree	new translate ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

90
Tree	new MutableLong ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

91
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , v.data , EscapeUtils.ESCAPE_JAVA )
Distance : 8

92
Tree	new NumberAxis3D ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new NumberAxis3D ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

93
Tree	new JsMessage.Builder ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new JsMessage.Builder ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

94
Tree	new TimeZonePrinter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new TimeZonePrinter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

95
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , Boolean.TRUE )
Distance : 8

96
Tree	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

97
Tree	new PascalDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

98
Tree	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

99
Tree	new MutableLong ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MutableLong ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

100
Tree	new registerMessage ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

101
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

102
Tree	new ConcurrentHashMap ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

103
Tree	new translate ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

104
Tree	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

105
Tree	new PascalDistribution ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

106
Tree	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

107
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

108
Tree	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

109
Tree	new ZoneInfoProvider ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

110
Tree	new UniformContinuousDistribution ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UniformContinuousDistribution ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

111
Tree	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

112
Tree	new LimitAngle ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new LimitAngle ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

113
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

114
Tree	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

115
Tree	new translate ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

116
Tree	new ConcurrentHashMap ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

117
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

118
Tree	new LimitAngle ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new LimitAngle ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

119
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

120
Tree	new MatchersPrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

121
Tree	new MutableLong ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MutableLong ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

122
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

123
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

124
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

125
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

126
Tree	new MatchersPrinter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

127
Tree	new registerMessage ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

128
Tree	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

129
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

130
Tree	new PascalDistribution ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

131
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

132
Tree	new translate ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

133
Tree	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

134
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

135
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

136
Tree	new registerMessage ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

137
Tree	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

138
Tree	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

139
Tree	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

140
Tree	new translate ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

141
Tree	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

142
Tree	new registerMessage ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new registerMessage ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

143
Tree	new MatchersPrinter ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MatchersPrinter ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

144
Tree	new translate ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new translate ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

145
Tree	new SymmLQEvent ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new SymmLQEvent ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

146
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

147
Tree	new UniformContinuousDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new UniformContinuousDistribution ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

148
Tree	new ZoneInfoProvider ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

149
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

150
Tree	new LimitAngle ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

151
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

152
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

153
Tree	new registerMessage ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

154
Tree	new ConcurrentHashMap ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

155
Tree	new SymmLQEvent ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new SymmLQEvent ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

156
Tree	new MutableLong ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

157
Tree	new PomComparator ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PomComparator ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

158
Tree	new UniformContinuousDistribution ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UniformContinuousDistribution ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

159
Tree	new SymmLQEvent ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new SymmLQEvent ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

160
Tree	new LimitAngle ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new LimitAngle ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

161
Tree	new ModulePath ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ModulePath ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

162
Tree	new translate ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Code	new translate ( FastMath.PI , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

163
Tree	new PascalDistribution ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

164
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

165
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

166
Tree	new MatchersPrinter ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( FastMath.PI , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

167
Tree	new testExternChanges ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new testExternChanges ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

168
Tree	new translate ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new translate ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

169
Tree	new MutableLong ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MutableLong ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

170
Tree	new LimitAngle ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new LimitAngle ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

171
Tree	new MutableLong ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MutableLong ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

172
Tree	new PascalDistribution ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new PascalDistribution ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

173
Tree	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new translate ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

174
Tree	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ZoneInfoProvider ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

175
Tree	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

176
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

177
Tree	new registerMessage ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new registerMessage ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

178
Tree	new ConcurrentHashMap ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ConcurrentHashMap ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

179
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , CharUtils.NUL , Boolean.TRUE )
Distance : 8

180
Tree	new ConcurrentHashMap ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new ConcurrentHashMap ( FastMath.PI , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

181
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

182
Tree	new ModulePath ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ModulePath ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

183
Tree	new PascalDistribution ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new PascalDistribution ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

184
Tree	new MutableLong ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new MutableLong ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

185
Tree	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

186
Tree	new NumberAxis3D ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new NumberAxis3D ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

187
Tree	new UniformContinuousDistribution ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UniformContinuousDistribution ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

188
Tree	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new UnescapeUtils.UNESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

189
Tree	new ZoneInfoProvider ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( FastMath.PI , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

190
Tree	new LimitAngle ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new LimitAngle ( v.length , v.length , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

191
Tree	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new EscapeUtils.ESCAPE_ECMASCRIPT ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

192
Tree	new ZoneInfoProvider ( v.length , out , v.data , FunctionFlavor.NORMAL )
Code	new ZoneInfoProvider ( v.length , out , v.data , FunctionFlavor.NORMAL )
Distance : 8

193
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , out , CharUtils.NUL , Feature.LET_DECLARATIONS )
Distance : 8

194
Tree	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new MatchersPrinter ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

195
Tree	new EscapeUtils.ESCAPE_JAVA ( out , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( out , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 7

196
Tree	new JsMessage.Builder ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Code	new JsMessage.Builder ( v.length , out , CharUtils.NUL , EscapeUtils.ESCAPE_JAVA )
Distance : 8

197
Tree	new registerMessage ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Code	new registerMessage ( v.length , v.length , CharUtils.NUL , EscapeUtils.ESCAPE_ECMASCRIPT )
Distance : 8

198
Tree	new IntervalConverter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Code	new IntervalConverter ( FastMath.PI , out , CharUtils.NUL , FunctionFlavor.NORMAL )
Distance : 8

199
Tree	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , v.data , FunctionFlavor.NORMAL )
Code	new EscapeUtils.ESCAPE_JAVA ( FastMath.PI , v.length , v.data , FunctionFlavor.NORMAL )
Distance : 8

========================================================================


========================================================================
Example Number: 42
Parent Code is: 
{ return escapeJavaStyleString ( str , false ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return escapeJavaStyleString ( str , false , false ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return escapeJavaStyleString ( str , false ) ; } values
Code	{ return escapeJavaStyleString ( str , false ) ; } values
Distance : 3

1
Tree	{ return escapeJavaStyleString ( str , false ) ; } Test
Code	{ return escapeJavaStyleString ( str , false ) ; } Test
Distance : 3

2
Tree	{ return escapeJavaStyleString ( str , false ) ; } MathRuntimeException
Code	{ return escapeJavaStyleString ( str , false ) ; } MathRuntimeException
Distance : 3

3
Tree	{ return escapeJavaStyleString ( str , false ) ; } {}
Code	{ return escapeJavaStyleString ( str , false ) ; } {}
Distance : 3

4
Tree	{ return escapeJavaStyleString ( str , false ) ; } f
Code	{ return escapeJavaStyleString ( str , false ) ; } f
Distance : 3

5
Tree	{ return escapeJavaStyleString ( str , false ) ; } class
Code	{ return escapeJavaStyleString ( str , false ) ; } class
Distance : 3

6
Tree	{ return escapeJavaStyleString ( str , false ) ; } -
Code	{ return escapeJavaStyleString ( str , false ) ; } -
Distance : 3

7
Tree	{ return escapeJavaStyleString ( str , false ) ; } Preconditions
Code	{ return escapeJavaStyleString ( str , false ) ; } Preconditions
Distance : 3

8
Tree	{ return escapeJavaStyleString ( str , false ) ; } T
Code	{ return escapeJavaStyleString ( str , false ) ; } T
Distance : 3

9
Tree	{ return escapeJavaStyleString ( str , false ) ; } &&
Code	{ return escapeJavaStyleString ( str , false ) ; } &&
Distance : 3

10
Tree	{ return escapeJavaStyleString ( str , false ) ; } ]
Code	{ return escapeJavaStyleString ( str , false ) ; } ]
Distance : 3

11
Tree	{ return escapeJavaStyleString ( str , false ) ; } [
Code	{ return escapeJavaStyleString ( str , false ) ; } [
Distance : 3

12
Tree	{ return escapeJavaStyleString ( str , false ) ; } Object
Code	{ return escapeJavaStyleString ( str , false ) ; } Object
Distance : 3

13
Tree	{ return escapeJavaStyleString ( str , false ) ; } ParamChecks
Code	{ return escapeJavaStyleString ( str , false ) ; } ParamChecks
Distance : 3

14
Tree	{ return escapeJavaStyleString ( str , false ) ; } test
Code	{ return escapeJavaStyleString ( str , false ) ; } test
Distance : 3

15
Tree	{ return escapeJavaStyleString ( str , false ) ; } @
Code	{ return escapeJavaStyleString ( str , false ) ; } @
Distance : 3

16
Tree	{ return escapeJavaStyleString ( str , false ) ; } !
Code	{ return escapeJavaStyleString ( str , false ) ; } !
Distance : 3

17
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertEquals
Code	{ return escapeJavaStyleString ( str , false ) ; } assertEquals
Distance : 3

18
Tree	{ return escapeJavaStyleString ( str , false ) ; } ==
Code	{ return escapeJavaStyleString ( str , false ) ; } ==
Distance : 3

19
Tree	{ return escapeJavaStyleString ( str , false ) ; } void
Code	{ return escapeJavaStyleString ( str , false ) ; } void
Distance : 3

20
Tree	{ return escapeJavaStyleString ( str , false ) ; } []
Code	{ return escapeJavaStyleString ( str , false ) ; } []
Distance : 3

21
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkState
Code	{ return escapeJavaStyleString ( str , false ) ; } checkState
Distance : 3

22
Tree	{ return escapeJavaStyleString ( str , false ) ; } toString
Code	{ return escapeJavaStyleString ( str , false ) ; } toString
Distance : 3

23
Tree	{ return escapeJavaStyleString ( str , false ) ; } protected
Code	{ return escapeJavaStyleString ( str , false ) ; } protected
Distance : 3

24
Tree	{ return escapeJavaStyleString ( str , false ) ; } nullNotPermitted
Code	{ return escapeJavaStyleString ( str , false ) ; } nullNotPermitted
Distance : 3

25
Tree	{ return escapeJavaStyleString ( str , false ) ; } e
Code	{ return escapeJavaStyleString ( str , false ) ; } e
Distance : 3

26
Tree	{ return escapeJavaStyleString ( str , false ) ; } super
Code	{ return escapeJavaStyleString ( str , false ) ; } super
Distance : 3

27
Tree	{ return escapeJavaStyleString ( str , false ) ; } i
Code	{ return escapeJavaStyleString ( str , false ) ; } i
Distance : 3

28
Tree	{ return escapeJavaStyleString ( str , false ) ; } mock
Code	{ return escapeJavaStyleString ( str , false ) ; } mock
Distance : 3

29
Tree	{ return escapeJavaStyleString ( str , false ) ; } Override
Code	{ return escapeJavaStyleString ( str , false ) ; } Override
Distance : 3

30
Tree	{ return escapeJavaStyleString ( str , false ) ; } public
Code	{ return escapeJavaStyleString ( str , false ) ; } public
Distance : 3

31
Tree	{ return escapeJavaStyleString ( str , false ) ; } >
Code	{ return escapeJavaStyleString ( str , false ) ; } >
Distance : 3

32
Tree	{ return escapeJavaStyleString ( str , false ) ; } new
Code	{ return escapeJavaStyleString ( str , false ) ; } new
Distance : 3

33
Tree	{ return escapeJavaStyleString ( str , false ) ; } STRING_CONSTANT
Code	{ return escapeJavaStyleString ( str , false ) ; } STRING_CONSTANT
Distance : 3

34
Tree	{ return escapeJavaStyleString ( str , false ) ; } ,
Code	{ return escapeJavaStyleString ( str , false ) ; } ,
Distance : 3

35
Tree	{ return escapeJavaStyleString ( str , false ) ; } .
Code	{ return escapeJavaStyleString ( str , false ) ; } .
Distance : 3

36
Tree	{ return escapeJavaStyleString ( str , false ) ; } }
Code	{ return escapeJavaStyleString ( str , false ) ; } }
Distance : 3

37
Tree	{ return escapeJavaStyleString ( str , false ) ; } =
Code	{ return escapeJavaStyleString ( str , false ) ; } =
Distance : 3

38
Tree	{ return escapeJavaStyleString ( str , false ) ; } (
Code	{ return escapeJavaStyleString ( str , false ) ; } (
Distance : 3

39
Tree	{ return escapeJavaStyleString ( str , false ) ; } <s>
Code	{ return escapeJavaStyleString ( str , false ) ; } <s>
Distance : 3

40
Tree	{ return escapeJavaStyleString ( str , false ) ; } <blank>
Code	{ return escapeJavaStyleString ( str , false ) ; } <blank>
Distance : 3

41
Tree	{ return escapeJavaStyleString ( str , false ) ; } return
Code	{ return escapeJavaStyleString ( str , false ) ; } return
Distance : 3

42
Tree	{ return escapeJavaStyleString ( str , false ) ; } )
Code	{ return escapeJavaStyleString ( str , false ) ; } )
Distance : 3

43
Tree	{ return escapeJavaStyleString ( str , false ) ; } ;
Code	{ return escapeJavaStyleString ( str , false ) ; } ;
Distance : 3

44
Tree	{ return escapeJavaStyleString ( str , false ) ; } ()
Code	{ return escapeJavaStyleString ( str , false ) ; } ()
Distance : 3

45
Tree	{ return escapeJavaStyleString ( str , false ) ; } {
Code	{ return escapeJavaStyleString ( str , false ) ; } {
Distance : 3

46
Tree	{ return escapeJavaStyleString ( str , false ) ; } false
Code	{ return escapeJavaStyleString ( str , false ) ; } false
Distance : 3

47
Tree	{ return escapeJavaStyleString ( str , false ) ; } int
Code	{ return escapeJavaStyleString ( str , false ) ; } int
Distance : 3

48
Tree	{ return escapeJavaStyleString ( str , false ) ; } double
Code	{ return escapeJavaStyleString ( str , false ) ; } double
Distance : 3

49
Tree	{ return escapeJavaStyleString ( str , false ) ; } n
Code	{ return escapeJavaStyleString ( str , false ) ; } n
Distance : 3

50
Tree	{ return escapeJavaStyleString ( str , false ) ; } matcher
Code	{ return escapeJavaStyleString ( str , false ) ; } matcher
Distance : 3

51
Tree	{ return escapeJavaStyleString ( str , false ) ; } NUMBER_CONSTANT
Code	{ return escapeJavaStyleString ( str , false ) ; } NUMBER_CONSTANT
Distance : 3

52
Tree	{ return escapeJavaStyleString ( str , false ) ; } this
Code	{ return escapeJavaStyleString ( str , false ) ; } this
Distance : 3

53
Tree	{ return escapeJavaStyleString ( str , false ) ; } final
Code	{ return escapeJavaStyleString ( str , false ) ; } final
Distance : 3

54
Tree	{ return escapeJavaStyleString ( str , false ) ; } name
Code	{ return escapeJavaStyleString ( str , false ) ; } name
Distance : 3

55
Tree	{ return escapeJavaStyleString ( str , false ) ; } t
Code	{ return escapeJavaStyleString ( str , false ) ; } t
Distance : 3

56
Tree	{ return escapeJavaStyleString ( str , false ) ; } solver
Code	{ return escapeJavaStyleString ( str , false ) ; } solver
Distance : 3

57
Tree	{ return escapeJavaStyleString ( str , false ) ; } getField
Code	{ return escapeJavaStyleString ( str , false ) ; } getField
Distance : 3

58
Tree	{ return escapeJavaStyleString ( str , false ) ; } pattern
Code	{ return escapeJavaStyleString ( str , false ) ; } pattern
Distance : 3

59
Tree	{ return escapeJavaStyleString ( str , false ) ; } out
Code	{ return escapeJavaStyleString ( str , false ) ; } out
Distance : 3

60
Tree	{ return escapeJavaStyleString ( str , false ) ; } Collection
Code	{ return escapeJavaStyleString ( str , false ) ; } Collection
Distance : 3

61
Tree	{ return escapeJavaStyleString ( str , false ) ; } mode
Code	{ return escapeJavaStyleString ( str , false ) ; } mode
Distance : 3

62
Tree	{ return escapeJavaStyleString ( str , false ) ; } mockingProgress
Code	{ return escapeJavaStyleString ( str , false ) ; } mockingProgress
Distance : 3

63
Tree	{ return escapeJavaStyleString ( str , false ) ; } return;
Code	{ return escapeJavaStyleString ( str , false ) ; } return;
Distance : 3

64
Tree	{ return escapeJavaStyleString ( str , false ) ; } char
Code	{ return escapeJavaStyleString ( str , false ) ; } char
Distance : 3

65
Tree	{ return escapeJavaStyleString ( str , false ) ; } get
Code	{ return escapeJavaStyleString ( str , false ) ; } get
Distance : 3

66
Tree	{ return escapeJavaStyleString ( str , false ) ; } static
Code	{ return escapeJavaStyleString ( str , false ) ; } static
Distance : 3

67
Tree	{ return escapeJavaStyleString ( str , false ) ; } setAcceptedLanguage
Code	{ return escapeJavaStyleString ( str , false ) ; } setAcceptedLanguage
Distance : 3

68
Tree	{ return escapeJavaStyleString ( str , false ) ; } JSType
Code	{ return escapeJavaStyleString ( str , false ) ; } JSType
Distance : 3

69
Tree	{ return escapeJavaStyleString ( str , false ) ; } isEmpty
Code	{ return escapeJavaStyleString ( str , false ) ; } isEmpty
Distance : 3

70
Tree	{ return escapeJavaStyleString ( str , false ) ; } else
Code	{ return escapeJavaStyleString ( str , false ) ; } else
Distance : 3

71
Tree	{ return escapeJavaStyleString ( str , false ) ; } true
Code	{ return escapeJavaStyleString ( str , false ) ; } true
Distance : 3

72
Tree	{ return escapeJavaStyleString ( str , false ) ; } return
Code	{ return escapeJavaStyleString ( str , false ) ; } return
Distance : 3

73
Tree	{ return escapeJavaStyleString ( str , false ) ; } if
Code	{ return escapeJavaStyleString ( str , false ) ; } if
Distance : 3

74
Tree	{ return escapeJavaStyleString ( str , false ) ; } getMessage
Code	{ return escapeJavaStyleString ( str , false ) ; } getMessage
Distance : 3

75
Tree	{ return escapeJavaStyleString ( str , false ) ; } <
Code	{ return escapeJavaStyleString ( str , false ) ; } <
Distance : 3

76
Tree	{ return escapeJavaStyleString ( str , false ) ; } dataset
Code	{ return escapeJavaStyleString ( str , false ) ; } dataset
Distance : 3

77
Tree	{ return escapeJavaStyleString ( str , false ) ; } getChronology
Code	{ return escapeJavaStyleString ( str , false ) ; } getChronology
Distance : 3

78
Tree	{ return escapeJavaStyleString ( str , false ) ; } js
Code	{ return escapeJavaStyleString ( str , false ) ; } js
Distance : 3

79
Tree	{ return escapeJavaStyleString ( str , false ) ; } TestUtilities
Code	{ return escapeJavaStyleString ( str , false ) ; } TestUtilities
Distance : 3

80
Tree	{ return escapeJavaStyleString ( str , false ) ; } equals
Code	{ return escapeJavaStyleString ( str , false ) ; } equals
Distance : 3

81
Tree	{ return escapeJavaStyleString ( str , false ) ; } d
Code	{ return escapeJavaStyleString ( str , false ) ; } d
Distance : 3

82
Tree	{ return escapeJavaStyleString ( str , false ) ; } notifyListeners
Code	{ return escapeJavaStyleString ( str , false ) ; } notifyListeners
Distance : 3

83
Tree	{ return escapeJavaStyleString ( str , false ) ; } externs
Code	{ return escapeJavaStyleString ( str , false ) ; } externs
Distance : 3

84
Tree	{ return escapeJavaStyleString ( str , false ) ; } for
Code	{ return escapeJavaStyleString ( str , false ) ; } for
Distance : 3

85
Tree	{ return escapeJavaStyleString ( str , false ) ; } Invocation
Code	{ return escapeJavaStyleString ( str , false ) ; } Invocation
Distance : 3

86
Tree	{ return escapeJavaStyleString ( str , false ) ; } node
Code	{ return escapeJavaStyleString ( str , false ) ; } node
Distance : 3

87
Tree	{ return escapeJavaStyleString ( str , false ) ; } getParent
Code	{ return escapeJavaStyleString ( str , false ) ; } getParent
Distance : 3

88
Tree	{ return escapeJavaStyleString ( str , false ) ; } StrBuilder
Code	{ return escapeJavaStyleString ( str , false ) ; } StrBuilder
Distance : 3

89
Tree	{ return escapeJavaStyleString ( str , false ) ; } setUp
Code	{ return escapeJavaStyleString ( str , false ) ; } setUp
Distance : 3

90
Tree	{ return escapeJavaStyleString ( str , false ) ; } invocations
Code	{ return escapeJavaStyleString ( str , false ) ; } invocations
Distance : 3

91
Tree	{ return escapeJavaStyleString ( str , false ) ; } index
Code	{ return escapeJavaStyleString ( str , false ) ; } index
Distance : 3

92
Tree	{ return escapeJavaStyleString ( str , false ) ; } instant
Code	{ return escapeJavaStyleString ( str , false ) ; } instant
Distance : 3

93
Tree	{ return escapeJavaStyleString ( str , false ) ; } abs
Code	{ return escapeJavaStyleString ( str , false ) ; } abs
Distance : 3

94
Tree	{ return escapeJavaStyleString ( str , false ) ; } Double
Code	{ return escapeJavaStyleString ( str , false ) ; } Double
Distance : 3

95
Tree	{ return escapeJavaStyleString ( str , false ) ; } <=
Code	{ return escapeJavaStyleString ( str , false ) ; } <=
Distance : 3

96
Tree	{ return escapeJavaStyleString ( str , false ) ; } reportMatcher
Code	{ return escapeJavaStyleString ( str , false ) ; } reportMatcher
Distance : 3

97
Tree	{ return escapeJavaStyleString ( str , false ) ; } stream
Code	{ return escapeJavaStyleString ( str , false ) ; } stream
Distance : 3

98
Tree	{ return escapeJavaStyleString ( str , false ) ; } s
Code	{ return escapeJavaStyleString ( str , false ) ; } s
Distance : 3

99
Tree	{ return escapeJavaStyleString ( str , false ) ; }
Code	{ return escapeJavaStyleString ( str , false ) ; }
Distance : 2

100
Tree	{ return escapeJavaStyleString ( str , false ) ; } contains
Code	{ return escapeJavaStyleString ( str , false ) ; } contains
Distance : 3

101
Tree	{ return escapeJavaStyleString ( str , false ) ; } b
Code	{ return escapeJavaStyleString ( str , false ) ; } b
Distance : 3

102
Tree	{ return escapeJavaStyleString ( str , false ) ; } stroke
Code	{ return escapeJavaStyleString ( str , false ) ; } stroke
Distance : 3

103
Tree	{ return escapeJavaStyleString ( str , false ) ; } MutableTimePeriod
Code	{ return escapeJavaStyleString ( str , false ) ; } MutableTimePeriod
Distance : 3

104
Tree	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

105
Tree	{ return escapeJavaStyleString ( str , false ) ; } size
Code	{ return escapeJavaStyleString ( str , false ) ; } size
Distance : 3

106
Tree	{ return escapeJavaStyleString ( str , false ) ; } traverseEs6
Code	{ return escapeJavaStyleString ( str , false ) ; } traverseEs6
Distance : 3

107
Tree	{ return escapeJavaStyleString ( str , false ) ; } StringBuilder
Code	{ return escapeJavaStyleString ( str , false ) ; } StringBuilder
Distance : 3

108
Tree	{ return escapeJavaStyleString ( str , false ) ; } chrono
Code	{ return escapeJavaStyleString ( str , false ) ; } chrono
Distance : 3

109
Tree	{ return escapeJavaStyleString ( str , false ) ; } a
Code	{ return escapeJavaStyleString ( str , false ) ; } a
Distance : 3

110
Tree	{ return escapeJavaStyleString ( str , false ) ; } returnZero
Code	{ return escapeJavaStyleString ( str , false ) ; } returnZero
Distance : 3

111
Tree	{ return escapeJavaStyleString ( str , false ) ; } sb
Code	{ return escapeJavaStyleString ( str , false ) ; } sb
Distance : 3

112
Tree	{ return escapeJavaStyleString ( str , false ) ; } scope
Code	{ return escapeJavaStyleString ( str , false ) ; } scope
Distance : 3

113
Tree	{ return escapeJavaStyleString ( str , false ) ; } UnivariateFunction
Code	{ return escapeJavaStyleString ( str , false ) ; } UnivariateFunction
Distance : 3

114
Tree	{ return escapeJavaStyleString ( str , false ) ; } sqrt
Code	{ return escapeJavaStyleString ( str , false ) ; } sqrt
Distance : 3

115
Tree	{ return escapeJavaStyleString ( str , false ) ; } clone
Code	{ return escapeJavaStyleString ( str , false ) ; } clone
Distance : 3

116
Tree	{ return escapeJavaStyleString ( str , false ) ; } getFirstChild
Code	{ return escapeJavaStyleString ( str , false ) ; } getFirstChild
Distance : 3

117
Tree	{ return escapeJavaStyleString ( str , false ) ; } throws
Code	{ return escapeJavaStyleString ( str , false ) ; } throws
Distance : 3

118
Tree	{ return escapeJavaStyleString ( str , false ) ; } simpleMethod
Code	{ return escapeJavaStyleString ( str , false ) ; } simpleMethod
Distance : 3

119
Tree	{ return escapeJavaStyleString ( str , false ) ; } getArgumentMatcherStorage
Code	{ return escapeJavaStyleString ( str , false ) ; } getArgumentMatcherStorage
Distance : 3

120
Tree	{ return escapeJavaStyleString ( str , false ) ; } append
Code	{ return escapeJavaStyleString ( str , false ) ; } append
Distance : 3

121
Tree	{ return escapeJavaStyleString ( str , false ) ; } alpha
Code	{ return escapeJavaStyleString ( str , false ) ; } alpha
Distance : 3

122
Tree	{ return escapeJavaStyleString ( str , false ) ; } isNormalBlock
Code	{ return escapeJavaStyleString ( str , false ) ; } isNormalBlock
Distance : 3

123
Tree	{ return escapeJavaStyleString ( str , false ) ; } obj
Code	{ return escapeJavaStyleString ( str , false ) ; } obj
Distance : 3

124
Tree	{ return escapeJavaStyleString ( str , false ) ; } isBlock
Code	{ return escapeJavaStyleString ( str , false ) ; } isBlock
Distance : 3

125
Tree	{ return escapeJavaStyleString ( str , false ) ; } array
Code	{ return escapeJavaStyleString ( str , false ) ; } array
Distance : 3

126
Tree	{ return escapeJavaStyleString ( str , false ) ; } TestUtils
Code	{ return escapeJavaStyleString ( str , false ) ; } TestUtils
Distance : 3

127
Tree	{ return escapeJavaStyleString ( str , false ) ; } length
Code	{ return escapeJavaStyleString ( str , false ) ; } length
Distance : 3

128
Tree	{ return escapeJavaStyleString ( str , false ) ; } expected
Code	{ return escapeJavaStyleString ( str , false ) ; } expected
Distance : 3

129
Tree	{ return escapeJavaStyleString ( str , false ) ; } IllegalArgumentException
Code	{ return escapeJavaStyleString ( str , false ) ; } IllegalArgumentException
Distance : 3

130
Tree	{ return escapeJavaStyleString ( str , false ) ; } invocation
Code	{ return escapeJavaStyleString ( str , false ) ; } invocation
Distance : 3

131
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertThat
Code	{ return escapeJavaStyleString ( str , false ) ; } assertThat
Distance : 3

132
Tree	{ return escapeJavaStyleString ( str , false ) ; } FastMath
Code	{ return escapeJavaStyleString ( str , false ) ; } FastMath
Distance : 3

133
Tree	{ return escapeJavaStyleString ( str , false ) ; } reportCodeChange
Code	{ return escapeJavaStyleString ( str , false ) ; } reportCodeChange
Distance : 3

134
Tree	{ return escapeJavaStyleString ( str , false ) ; } testSame
Code	{ return escapeJavaStyleString ( str , false ) ; } testSame
Distance : 3

135
Tree	{ return escapeJavaStyleString ( str , false ) ; } createIllegalArgumentException
Code	{ return escapeJavaStyleString ( str , false ) ; } createIllegalArgumentException
Distance : 3

136
Tree	{ return escapeJavaStyleString ( str , false ) ; } ArrayList
Code	{ return escapeJavaStyleString ( str , false ) ; } ArrayList
Distance : 3

137
Tree	{ return escapeJavaStyleString ( str , false ) ; } parent
Code	{ return escapeJavaStyleString ( str , false ) ; } parent
Distance : 3

138
Tree	{ return escapeJavaStyleString ( str , false ) ; } LINE_JOINER
Code	{ return escapeJavaStyleString ( str , false ) ; } LINE_JOINER
Distance : 3

139
Tree	{ return escapeJavaStyleString ( str , false ) ; } x
Code	{ return escapeJavaStyleString ( str , false ) ; } x
Distance : 3

140
Tree	{ return escapeJavaStyleString ( str , false ) ; } fireChangeEvent
Code	{ return escapeJavaStyleString ( str , false ) ; } fireChangeEvent
Distance : 3

141
Tree	{ return escapeJavaStyleString ( str , false ) ; } str
Code	{ return escapeJavaStyleString ( str , false ) ; } str
Distance : 3

142
Tree	{ return escapeJavaStyleString ( str , false ) ; } m
Code	{ return escapeJavaStyleString ( str , false ) ; } m
Distance : 3

143
Tree	{ return escapeJavaStyleString ( str , false ) ; } try
Code	{ return escapeJavaStyleString ( str , false ) ; } try
Distance : 3

144
Tree	{ return escapeJavaStyleString ( str , false ) ; } fail
Code	{ return escapeJavaStyleString ( str , false ) ; } fail
Distance : 3

145
Tree	{ return escapeJavaStyleString ( str , false ) ; } :
Code	{ return escapeJavaStyleString ( str , false ) ; } :
Distance : 3

146
Tree	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT6
Code	{ return escapeJavaStyleString ( str , false ) ; } LanguageMode.ECMASCRIPT6
Distance : 3

147
Tree	{ return escapeJavaStyleString ( str , false ) ; } optimizer
Code	{ return escapeJavaStyleString ( str , false ) ; } optimizer
Distance : 3

148
Tree	{ return escapeJavaStyleString ( str , true ) ; }
Code	{ return escapeJavaStyleString ( str , true ) ; }
Distance : 3

149
Tree	{ return escapeJavaStyleString ( str , false ) ; } <>
Code	{ return escapeJavaStyleString ( str , false ) ; } <>
Distance : 3

150
Tree	{ return escapeJavaStyleString ( str , false ) ; } ?
Code	{ return escapeJavaStyleString ( str , false ) ; } ?
Distance : 3

151
Tree	{ return escapeJavaStyleString ( str , false ) ; } boolean
Code	{ return escapeJavaStyleString ( str , false ) ; } boolean
Distance : 3

152
Tree	{ return escapeJavaStyleString ( str , false ) ; } paint
Code	{ return escapeJavaStyleString ( str , false ) ; } paint
Distance : 3

153
Tree	{ return escapeJavaStyleString ( str , false ) ; } result
Code	{ return escapeJavaStyleString ( str , false ) ; } result
Distance : 3

154
Tree	{ return escapeJavaStyleString ( str , false ) ; } *
Code	{ return escapeJavaStyleString ( str , false ) ; } *
Distance : 3

155
Tree	{ return escapeJavaStyleString ( str , false ) ; } type
Code	{ return escapeJavaStyleString ( str , false ) ; } type
Distance : 3

156
Tree	{ return escapeJavaStyleString ( str , false ) ; } getInstance
Code	{ return escapeJavaStyleString ( str , false ) ; } getInstance
Distance : 3

157
Tree	{ return escapeJavaStyleString ( str , false ) ; } serialised
Code	{ return escapeJavaStyleString ( str , false ) ; } serialised
Distance : 3

158
Tree	{ return escapeJavaStyleString ( str , false ) ; } Exception
Code	{ return escapeJavaStyleString ( str , false ) ; } Exception
Distance : 3

159
Tree	{ return escapeJavaStyleString ( str , false ) ; } Assert
Code	{ return escapeJavaStyleString ( str , false ) ; } Assert
Distance : 3

160
Tree	{ return escapeJavaStyleString ( str , false ) ; } source
Code	{ return escapeJavaStyleString ( str , false ) ; } source
Distance : 3

161
Tree	{ return escapeJavaStyleString ( str , false ) ; } Class
Code	{ return escapeJavaStyleString ( str , false ) ; } Class
Distance : 3

162
Tree	{ return escapeJavaStyleString ( str , false ) ; } Math
Code	{ return escapeJavaStyleString ( str , false ) ; } Math
Distance : 3

163
Tree	{ return escapeJavaStyleString ( str , false ) ; } root
Code	{ return escapeJavaStyleString ( str , false ) ; } root
Distance : 3

164
Tree	{ return escapeJavaStyleString ( str , false ) ; } options
Code	{ return escapeJavaStyleString ( str , false ) ; } options
Distance : 3

165
Tree	{ return escapeJavaStyleString ( str , false ) ; } p
Code	{ return escapeJavaStyleString ( str , false ) ; } p
Distance : 3

166
Tree	{ return escapeJavaStyleString ( str , false ) ; } data
Code	{ return escapeJavaStyleString ( str , false ) ; } data
Distance : 3

167
Tree	{ return escapeJavaStyleString ( str , false ) ; } add
Code	{ return escapeJavaStyleString ( str , false ) ; } add
Distance : 3

168
Tree	{ return escapeJavaStyleString ( str , false ) ; } field
Code	{ return escapeJavaStyleString ( str , false ) ; } field
Distance : 3

169
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkArgument
Code	{ return escapeJavaStyleString ( str , false ) ; } checkArgument
Distance : 3

170
Tree	{ return escapeJavaStyleString ( str , false ) ; } ex
Code	{ return escapeJavaStyleString ( str , false ) ; } ex
Distance : 3

171
Tree	{ return escapeJavaStyleString ( str , false ) ; } NodeUtil
Code	{ return escapeJavaStyleString ( str , false ) ; } NodeUtil
Distance : 3

172
Tree	{ return escapeJavaStyleString ( str , false ) ; } join
Code	{ return escapeJavaStyleString ( str , false ) ; } join
Distance : 3

173
Tree	{ return escapeJavaStyleString ( str , false ) ; } List
Code	{ return escapeJavaStyleString ( str , false ) ; } List
Distance : 3

174
Tree	{ return escapeJavaStyleString ( str , false ) ; } NodeTraversal
Code	{ return escapeJavaStyleString ( str , false ) ; } NodeTraversal
Distance : 3

175
Tree	{ return escapeJavaStyleString ( str , false ) ; } Args
Code	{ return escapeJavaStyleString ( str , false ) ; } Args
Distance : 3

176
Tree	{ return escapeJavaStyleString ( str , false ) ; } v
Code	{ return escapeJavaStyleString ( str , false ) ; } v
Distance : 3

177
Tree	{ return escapeJavaStyleString ( str , false ) ; } Integer
Code	{ return escapeJavaStyleString ( str , false ) ; } Integer
Distance : 3

178
Tree	{ return escapeJavaStyleString ( str , false ) ; } lines
Code	{ return escapeJavaStyleString ( str , false ) ; } lines
Distance : 3

179
Tree	{ return escapeJavaStyleString ( str , false ) ; } c
Code	{ return escapeJavaStyleString ( str , false ) ; } c
Distance : 3

180
Tree	{ return escapeJavaStyleString ( str , false ) ; } verify
Code	{ return escapeJavaStyleString ( str , false ) ; } verify
Distance : 3

181
Tree	{ return escapeJavaStyleString ( str , false ) ; } Node
Code	{ return escapeJavaStyleString ( str , false ) ; } Node
Distance : 3

182
Tree	{ return escapeJavaStyleString ( str , false ) ; } compiler
Code	{ return escapeJavaStyleString ( str , false ) ; } compiler
Distance : 3

183
Tree	{ return escapeJavaStyleString ( str , false ) ; } String
Code	{ return escapeJavaStyleString ( str , false ) ; } String
Distance : 3

184
Tree	{ return escapeJavaStyleString ( str , false ) ; } null
Code	{ return escapeJavaStyleString ( str , false ) ; } null
Distance : 3

185
Tree	{ return escapeJavaStyleString ( str , false ) ; } wanted
Code	{ return escapeJavaStyleString ( str , false ) ; } wanted
Distance : 3

186
Tree	{ return escapeJavaStyleString ( str , false ) ; } +
Code	{ return escapeJavaStyleString ( str , false ) ; } +
Distance : 3

187
Tree	{ return escapeJavaStyleString ( str , false ) ; } catch
Code	{ return escapeJavaStyleString ( str , false ) ; } catch
Distance : 3

188
Tree	{ return escapeJavaStyleString ( str , false ) ; } !=
Code	{ return escapeJavaStyleString ( str , false ) ; } !=
Distance : 3

189
Tree	{ return escapeJavaStyleString ( str , false ) ; } value
Code	{ return escapeJavaStyleString ( str , false ) ; } value
Distance : 3

190
Tree	{ return escapeJavaStyleString ( str , false ) ; } /
Code	{ return escapeJavaStyleString ( str , false ) ; } /
Distance : 3

191
Tree	{ return escapeJavaStyleString ( str , false ) ; } assertTrue
Code	{ return escapeJavaStyleString ( str , false ) ; } assertTrue
Distance : 3

192
Tree	{ return escapeJavaStyleString ( str , false ) ; } checkNotNull
Code	{ return escapeJavaStyleString ( str , false ) ; } checkNotNull
Distance : 3

193
Tree	{ return escapeJavaStyleString ( str , false ) ; } Fraction
Code	{ return escapeJavaStyleString ( str , false ) ; } Fraction
Distance : 3

194
Tree	{ return escapeJavaStyleString ( str , false ) ; } valueOf
Code	{ return escapeJavaStyleString ( str , false ) ; } valueOf
Distance : 3

195
Tree	{ return escapeJavaStyleString ( str , false ) ; } instance
Code	{ return escapeJavaStyleString ( str , false ) ; } instance
Distance : 3

196
Tree	{ return escapeJavaStyleString ( str , false ) ; } long
Code	{ return escapeJavaStyleString ( str , false ) ; } long
Distance : 3

197
Tree	{ return escapeJavaStyleString ( str , false ) ; } throw
Code	{ return escapeJavaStyleString ( str , false ) ; } throw
Distance : 3

198
Tree	{ return escapeJavaStyleString ( str , false ) ; } y
Code	{ return escapeJavaStyleString ( str , false ) ; } y
Distance : 3

199
Tree	{ return escapeJavaStyleString ( str , false ) ; } PeriodType
Code	{ return escapeJavaStyleString ( str , false ) ; } PeriodType
Distance : 3

========================================================================


========================================================================
Example Number: 43
Parent Code is: 
if ( element != null ) { type = element . getClass () ; } else { type = Object . class ; }
-------------------------------------------------------------------------------
Child code is: 
if ( element != null ) { type = element . getClass () ; } else { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=element}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=element}) (235{val=.}) (802{val=getClass}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=element}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=element}) (235{val=.}) (802{val=getClass}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/35/parent/src_main_java_org_apache_commons_lang3_ArrayUtils.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( element != null ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 6

1
Tree	if ( element != null ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 6

2
Tree	if ( element != null ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 7

3
Tree	if ( element != null ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 7

4
Tree	if ( element != null ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 7

5
Tree	if ( element != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

6
Tree	if ( element != null ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 6

7
Tree	if ( element != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

8
Tree	if ( element != null ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 7

9
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 7

10
Tree	if ( element != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

11
Tree	if ( element != null ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 6

12
Tree	if ( element != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

13
Tree	if ( element != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

14
Tree	if ( type != null ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

15
Tree	if ( element != null ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 6

16
Tree	if ( element != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

17
Tree	if ( element != return; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

18
Tree	if ( element != null ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 7

19
Tree	if ( Object != null ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

20
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 7

21
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 7

22
Tree	if ( element != null ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 6

23
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = element . class ; }
Distance : 7

24
Tree	if ( element != null ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 7

25
Tree	if ( type != null ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

26
Tree	if ( element != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

27
Tree	if ( Object != null ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

28
Tree	if ( element != return; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

29
Tree	if ( Object != null ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

30
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

31
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = type . class ; }
Distance : 7

32
Tree	if ( element != null ) { type = type . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = type . class ; }
Distance : 7

33
Tree	if ( element != break; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

34
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

35
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = type . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = type . class ; }
Distance : 6

36
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

37
Tree	if ( element != break; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

38
Tree	if ( element != null ) { element = type . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = type . class ; }
Distance : 8

39
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

40
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = Object . class ; }
Distance : 7

41
Tree	if ( element != null ) { type = type . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = Object . class ; }
Distance : 7

42
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

43
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = Object . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = Object . class ; }
Distance : 6

44
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

45
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

46
Tree	if ( element != break; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 7

47
Tree	if ( type != null ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 7

48
Tree	if ( type != null ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

49
Tree	if ( element != null ) { type = type . getClass () ; } else { element = element . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = element . class ; }
Distance : 7

50
Tree	if ( element != continue; ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

51
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

52
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

53
Tree	if ( element != null ) { element = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = Object . class ; }
Distance : 8

54
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

55
Tree	if ( element != null ) { element = type . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = element . class ; }
Distance : 8

56
Tree	if ( type != null ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

57
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

58
Tree	if ( type != null ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

59
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

60
Tree	if ( element != null ) { element = type . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { element = type . getClass () ; } else { element = Object . class ; }
Distance : 8

61
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

62
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

63
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

64
Tree	if ( element != null ) { Object = type . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { Object = type . getClass () ; } else { type = type . class ; }
Distance : 8

65
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

66
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

67
Tree	if ( element != default: ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( element != default: ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 8

68
Tree	if ( element != null ) { type = type . getClass () ; } else { Object = type . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { Object = type . class ; }
Distance : 7

69
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

70
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

71
Tree	if ( element != null ) { element = element . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = type . class ; }
Distance : 7

72
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = element . class ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = element . class ; }
Distance : 6

73
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 7

74
Tree	if ( element != super(); ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

75
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

76
Tree	if ( element != null ) { Object = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { Object = type . getClass () ; } else { type = Object . class ; }
Distance : 8

77
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

78
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

79
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

80
Tree	if ( type != null ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

81
Tree	if ( element != default: ) { type = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != default: ) { type = type . getClass () ; } else { type = Object . class ; }
Distance : 8

82
Tree	if ( element != null ) { type = type . getClass () ; } else { Object = Object . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { Object = Object . class ; }
Distance : 7

83
Tree	if ( element != null ) { Object = type . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { Object = type . getClass () ; } else { type = element . class ; }
Distance : 8

84
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

85
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

86
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = type . class ; }
Distance : 8

87
Tree	if ( element != default: ) { type = type . getClass () ; } else { type = element . class ; }
Code	if ( element != default: ) { type = type . getClass () ; } else { type = element . class ; }
Distance : 8

88
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

89
Tree	if ( element != null ) { element = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = Object . class ; }
Distance : 7

90
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

91
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

92
Tree	if ( element != null ) { type = type . getClass () ; } else { Object = element . class ; }
Code	if ( element != null ) { type = type . getClass () ; } else { Object = element . class ; }
Distance : 7

93
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

94
Tree	if ( element != super(); ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

95
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = Object . class ; }
Distance : 7

96
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

97
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = type . class ; }
Distance : 7

98
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

99
Tree	if ( type != null ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

100
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

101
Tree	if ( element != null ) { element = element . getClass () ; } else { element = element . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = element . class ; }
Distance : 7

102
Tree	if ( element != super(); ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != super(); ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

103
Tree	if ( element != continue; ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != continue; ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

104
Tree	if ( type != null ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( type != null ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

105
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = element . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = element . class ; }
Distance : 7

106
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

107
Tree	if ( type != null ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

108
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

109
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

110
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

111
Tree	if ( element != continue; ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != continue; ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

112
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

113
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

114
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

115
Tree	if ( element != return; ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != return; ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

116
Tree	if ( type != null ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

117
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

118
Tree	if ( Object != null ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( Object != null ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

119
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

120
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

121
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

122
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

123
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = element . class ; }
Distance : 8

124
Tree	if ( type != return; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != return; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

125
Tree	if ( type != null ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

126
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

127
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

128
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

129
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

130
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

131
Tree	if ( element != super(); ) { Object = element . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { Object = element . getClass () ; } else { type = type . class ; }
Distance : 8

132
Tree	if ( type != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( type != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

133
Tree	if ( element != super(); ) { type = type . getClass () ; } else { element = type . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { element = type . class ; }
Distance : 8

134
Tree	if ( element != null ) { Object = element . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { element = type . class ; }
Distance : 7

135
Tree	if ( element != break; ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != break; ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

136
Tree	if ( type != null ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

137
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

138
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

139
Tree	if ( element != default: ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

140
Tree	if ( element != super(); ) { type = element . getClass () ; } else { Object = type . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { Object = type . class ; }
Distance : 7

141
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

142
Tree	if ( element != continue; ) { Object = element . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { Object = element . getClass () ; } else { type = type . class ; }
Distance : 8

143
Tree	if ( type != null ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( type != null ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

144
Tree	if ( Object != return; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != return; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

145
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

146
Tree	if ( element != continue; ) { type = type . getClass () ; } else { element = type . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { element = type . class ; }
Distance : 8

147
Tree	if ( element != return; ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != return; ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

148
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

149
Tree	if ( Object != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( Object != null ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

150
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

151
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

152
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

153
Tree	if ( element != return; ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != return; ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

154
Tree	if ( element != super(); ) { element = type . getClass () ; } else { type = type . class ; }
Code	if ( element != super(); ) { element = type . getClass () ; } else { type = type . class ; }
Distance : 9

155
Tree	if ( Object != null ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( Object != null ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

156
Tree	if ( element != null ) { element = type . getClass () ; } else { element = type . class ; }
Code	if ( element != null ) { element = type . getClass () ; } else { element = type . class ; }
Distance : 8

157
Tree	if ( type != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

158
Tree	if ( element != null ) { Object = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != null ) { Object = Object . getClass () ; } else { type = type . class ; }
Distance : 8

159
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = Object . class ; }
Distance : 8

160
Tree	if ( Object != break; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( Object != break; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

161
Tree	if ( element != super(); ) { Object = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { Object = element . getClass () ; } else { type = Object . class ; }
Distance : 8

162
Tree	if ( element != default: ) { element = element . getClass () ; } else { type = type . class ; }
Code	if ( element != default: ) { element = element . getClass () ; } else { type = type . class ; }
Distance : 8

163
Tree	if ( element != super(); ) { type = type . getClass () ; } else { element = Object . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { element = Object . class ; }
Distance : 8

164
Tree	if ( element != null ) { Object = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { element = Object . class ; }
Distance : 7

165
Tree	if ( element != null ) { element = element . getClass () ; } else { Object = type . class ; }
Code	if ( element != null ) { element = element . getClass () ; } else { Object = type . class ; }
Distance : 7

166
Tree	if ( element != continue; ) { element = type . getClass () ; } else { type = type . class ; }
Code	if ( element != continue; ) { element = type . getClass () ; } else { type = type . class ; }
Distance : 9

167
Tree	if ( element != break; ) { type = Object . getClass () ; } else { type = Object . class ; }
Code	if ( element != break; ) { type = Object . getClass () ; } else { type = Object . class ; }
Distance : 8

168
Tree	if ( element != default: ) { type = Object . getClass () ; } else { type = type . class ; }
Code	if ( element != default: ) { type = Object . getClass () ; } else { type = type . class ; }
Distance : 8

169
Tree	if ( type != return; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( type != return; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

170
Tree	if ( element != null ) { type = Object . getClass () ; } else { Object = type . class ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { Object = type . class ; }
Distance : 7

171
Tree	if ( element != default: ) { type = element . getClass () ; } else { element = Object . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { element = Object . class ; }
Distance : 7

172
Tree	if ( element != continue; ) { type = element . getClass () ; } else { Object = type . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { Object = type . class ; }
Distance : 7

173
Tree	if ( element != super(); ) { type = element . getClass () ; } else { Object = Object . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { Object = Object . class ; }
Distance : 7

174
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = element . class ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = element . class ; }
Distance : 8

175
Tree	if ( type != break; ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != break; ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

176
Tree	if ( element != continue; ) { Object = element . getClass () ; } else { type = Object . class ; }
Code	if ( element != continue; ) { Object = element . getClass () ; } else { type = Object . class ; }
Distance : 8

177
Tree	if ( element != continue; ) { type = type . getClass () ; } else { element = Object . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { element = Object . class ; }
Distance : 8

178
Tree	if ( Object != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( Object != return; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

179
Tree	if ( element != super(); ) { Object = element . getClass () ; } else { type = element . class ; }
Code	if ( element != super(); ) { Object = element . getClass () ; } else { type = element . class ; }
Distance : 8

180
Tree	if ( type != null ) { Object = element . getClass () ; } else { type = type . class ; }
Code	if ( type != null ) { Object = element . getClass () ; } else { type = type . class ; }
Distance : 8

181
Tree	if ( element != super(); ) { type = type . getClass () ; } else { element = element . class ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { element = element . class ; }
Distance : 8

182
Tree	if ( type != null ) { type = type . getClass () ; } else { element = type . class ; }
Code	if ( type != null ) { type = type . getClass () ; } else { element = type . class ; }
Distance : 8

183
Tree	if ( element != null ) { Object = element . getClass () ; } else { element = element . class ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { element = element . class ; }
Distance : 7

184
Tree	if ( element != break; ) { type = Object . getClass () ; } else { type = element . class ; }
Code	if ( element != break; ) { type = Object . getClass () ; } else { type = element . class ; }
Distance : 8

185
Tree	if ( type != break; ) { type = element . getClass () ; } else { type = Object . class ; }
Code	if ( type != break; ) { type = element . getClass () ; } else { type = Object . class ; }
Distance : 8

186
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = type . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = type . class ; }
Distance : 7

187
Tree	if ( type != default: ) { type = element . getClass () ; } else { type = type . class ; }
Code	if ( type != default: ) { type = element . getClass () ; } else { type = type . class ; }
Distance : 8

188
Tree	if ( element != default: ) { type = element . getClass () ; } else { element = element . class ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { element = element . class ; }
Distance : 7

189
Tree	if ( element != super(); ) { type = element . getClass () ; } else { Object = element . class ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { Object = element . class ; }
Distance : 7

190
Tree	if ( type != null ) { type = element . getClass () ; } else { Object = type . class ; }
Code	if ( type != null ) { type = element . getClass () ; } else { Object = type . class ; }
Distance : 7

191
Tree	if ( type != continue; ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( type != continue; ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 9

192
Tree	if ( element != continue; ) { Object = element . getClass () ; } else { type = element . class ; }
Code	if ( element != continue; ) { Object = element . getClass () ; } else { type = element . class ; }
Distance : 8

193
Tree	if ( Object != return; ) { type = element . getClass () ; } else { type = element . class ; }
Code	if ( Object != return; ) { type = element . getClass () ; } else { type = element . class ; }
Distance : 8

194
Tree	if ( element != continue; ) { type = type . getClass () ; } else { element = element . class ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { element = element . class ; }
Distance : 8

195
Tree	if ( element != super(); ) { element = type . getClass () ; } else { type = Object . class ; }
Code	if ( element != super(); ) { element = type . getClass () ; } else { type = Object . class ; }
Distance : 9

196
Tree	if ( element != return; ) { Object = element . getClass () ; } else { type = type . class ; }
Code	if ( element != return; ) { Object = element . getClass () ; } else { type = type . class ; }
Distance : 8

197
Tree	if ( type != super(); ) { type = type . getClass () ; } else { type = type . class ; }
Code	if ( type != super(); ) { type = type . getClass () ; } else { type = type . class ; }
Distance : 9

198
Tree	if ( element != continue; ) { type = element . getClass () ; } else { Object = Object . class ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { Object = Object . class ; }
Distance : 7

199
Tree	if ( element != return; ) { type = type . getClass () ; } else { element = type . class ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { element = type . class ; }
Distance : 8

========================================================================


========================================================================
Example Number: 44
Parent Code is: 
return m . containsKey ( value ) ;
-------------------------------------------------------------------------------
Child code is: 
return m != null && m . containsKey ( value ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=m}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=m}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=m}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=value}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/34/parent/src_main_java_org_apache_commons_lang3_builder_ToStringStyle.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return UnescapeUtils ;
Code	return UnescapeUtils ;
Distance : 10

2
Tree	return & ;
Code	return & ;
Distance : 10

3
Tree	return ObjectMethodsGuru ;
Code	return ObjectMethodsGuru ;
Distance : 10

4
Tree	return missingEntries ;
Code	return missingEntries ;
Distance : 10

5
Tree	return maxEvaluations ;
Code	return maxEvaluations ;
Distance : 10

6
Tree	return : ;
Code	return : ;
Distance : 10

7
Tree	return columns ;
Code	return columns ;
Distance : 10

8
Tree	return RealVector ;
Code	return RealVector ;
Distance : 10

9
Tree	return JSType ;
Code	return JSType ;
Distance : 10

10
Tree	return ImmutableList ;
Code	return ImmutableList ;
Distance : 10

11
Tree	return row ;
Code	return row ;
Distance : 10

12
Tree	return == ;
Code	return == ;
Distance : 10

13
Tree	return % ;
Code	return % ;
Distance : 10

14
Tree	return UNKNOWN ;
Code	return UNKNOWN ;
Distance : 10

15
Tree	values
Code	values
Distance : 12

16
Tree	return d ;
Code	return d ;
Distance : 10

17
Tree	return maxIterations ;
Code	return maxIterations ;
Distance : 10

18
Tree	return x ;
Code	return x ;
Distance : 10

19
Tree	return mock1 ;
Code	return mock1 ;
Distance : 10

20
Tree	class
Code	class
Distance : 12

21
Tree	return context ;
Code	return context ;
Distance : 10

22
Tree	this
Code	this
Distance : 12

23
Tree	return -= ;
Code	return -= ;
Distance : 10

24
Tree	assertThat
Code	assertThat
Distance : 12

25
Tree	return offset ;
Code	return offset ;
Distance : 10

26
Tree	Complex
Code	Complex
Distance : 12

27
Tree	super
Code	super
Distance : 12

28
Tree	return ObjectUtils ;
Code	return ObjectUtils ;
Distance : 10

29
Tree	return SUM ;
Code	return SUM ;
Distance : 10

30
Tree	return MockHandler ;
Code	return MockHandler ;
Distance : 10

31
Tree	return field ;
Code	return field ;
Distance : 10

32
Tree	return ArrayFieldVector ;
Code	return ArrayFieldVector ;
Distance : 10

33
Tree	return arguments ;
Code	return arguments ;
Distance : 10

34
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 12

35
Tree	return name ;
Code	return name ;
Distance : 10

36
Tree	return [ ;
Code	return [ ;
Distance : 10

37
Tree	return objType ;
Code	return objType ;
Distance : 10

38
Tree	return matrix ;
Code	return matrix ;
Distance : 10

39
Tree	return start ;
Code	return start ;
Distance : 10

40
Tree	return MockCreationSettings ;
Code	return MockCreationSettings ;
Distance : 10

41
Tree	return functionType ;
Code	return functionType ;
Distance : 10

42
Tree	matrix
Code	matrix
Distance : 12

43
Tree	return FastFourierTransformer ;
Code	return FastFourierTransformer ;
Distance : 10

44
Tree	return VARIANCE ;
Code	return VARIANCE ;
Distance : 10

45
Tree	return sample ;
Code	return sample ;
Distance : 10

46
Tree	return rows ;
Code	return rows ;
Distance : 10

47
Tree	MathArrays
Code	MathArrays
Distance : 12

48
Tree	return reportOr ;
Code	return reportOr ;
Distance : 10

49
Tree	str
Code	str
Distance : 12

50
Tree	DiffResult
Code	DiffResult
Distance : 12

51
Tree	return instanceof ;
Code	return instanceof ;
Distance : 10

52
Tree	StringBuilder
Code	StringBuilder
Distance : 12

53
Tree	return weightSqrt ;
Code	return weightSqrt ;
Distance : 10

54
Tree	return ArrayUtils ;
Code	return ArrayUtils ;
Distance : 10

55
Tree	return methodProxy ;
Code	return methodProxy ;
Distance : 10

56
Tree	return Cartesian3D ;
Code	return Cartesian3D ;
Distance : 10

57
Tree	return short ;
Code	return short ;
Distance : 10

58
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

59
Tree	<
Code	<
Distance : 12

60
Tree	return randomData ;
Code	return randomData ;
Distance : 10

61
Tree	return VerificationModeFactory ;
Code	return VerificationModeFactory ;
Distance : 10

62
Tree	if
Code	if
Distance : 12

63
Tree	return FastMath ;
Code	return FastMath ;
Distance : 10

64
Tree	TypedVar
Code	TypedVar
Distance : 12

65
Tree	.
Code	.
Distance : 11

66
Tree	@
Code	@
Distance : 12

67
Tree	return returnTypeExpr ;
Code	return returnTypeExpr ;
Distance : 10

68
Tree	return Answer ;
Code	return Answer ;
Distance : 10

69
Tree	case
Code	case
Distance : 12

70
Tree	return DateTime ;
Code	return DateTime ;
Distance : 10

71
Tree	return Exception ;
Code	return Exception ;
Distance : 10

72
Tree	false
Code	false
Distance : 12

73
Tree	field
Code	field
Distance : 12

74
Tree	return Printable ;
Code	return Printable ;
Distance : 10

75
Tree	Coordinates3D
Code	Coordinates3D
Distance : 12

76
Tree	return PoissonDistribution ;
Code	return PoissonDistribution ;
Distance : 10

77
Tree	new
Code	new
Distance : 12

78
Tree	return differentMethod ;
Code	return differentMethod ;
Distance : 10

79
Tree	return alpha ;
Code	return alpha ;
Distance : 10

80
Tree	return ArgumentsAreDifferent ;
Code	return ArgumentsAreDifferent ;
Distance : 10

81
Tree	return registry ;
Code	return registry ;
Distance : 10

82
Tree	return matchers ;
Code	return matchers ;
Distance : 10

83
Tree	TypeI
Code	TypeI
Distance : 12

84
Tree	return catch ;
Code	return catch ;
Distance : 10

85
Tree	return runner ;
Code	return runner ;
Distance : 10

86
Tree	return throws ;
Code	return throws ;
Distance : 10

87
Tree	bp
Code	bp
Distance : 12

88
Tree	int
Code	int
Distance : 12

89
Tree	return Primitives ;
Code	return Primitives ;
Distance : 10

90
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

91
Tree	return legacyNamespace ;
Code	return legacyNamespace ;
Distance : 10

92
Tree	return solver ;
Code	return solver ;
Distance : 10

93
Tree	return Math ;
Code	return Math ;
Distance : 10

94
Tree	return iField ;
Code	return iField ;
Distance : 10

95
Tree	return ArrayIndexOutOfBoundsException ;
Code	return ArrayIndexOutOfBoundsException ;
Distance : 10

96
Tree	return MathIllegalArgumentException ;
Code	return MathIllegalArgumentException ;
Distance : 10

97
Tree	int
Code	int
Distance : 12

98
Tree	return
Code	return
Distance : 11

99
Tree	final
Code	final
Distance : 12

100
Tree	return case ;
Code	return case ;
Distance : 10

101
Tree	return super(); ;
Code	return super(); ;
Distance : 10

102
Tree	return * ;
Code	return * ;
Distance : 10

103
Tree	return else ;
Code	return else ;
Distance : 10

104
Tree	super
Code	super
Distance : 12

105
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

106
Tree	return @ ;
Code	return @ ;
Distance : 10

107
Tree	return currentScope ;
Code	return currentScope ;
Distance : 10

108
Tree	return ArgumentsAreDifferentException ;
Code	return ArgumentsAreDifferentException ;
Distance : 10

109
Tree	return int ;
Code	return int ;
Distance : 10

110
Tree	return TooLittleActualInvocations ;
Code	return TooLittleActualInvocations ;
Distance : 10

111
Tree	!
Code	!
Distance : 12

112
Tree	return MockUtil ;
Code	return MockUtil ;
Distance : 10

113
Tree	return null ;
Code	return null ;
Distance : 9

114
Tree	new
Code	new
Distance : 12

115
Tree	TypeI
Code	TypeI
Distance : 12

116
Tree	int
Code	int
Distance : 12

117
Tree	return /= ;
Code	return /= ;
Distance : 10

118
Tree	return Complex ;
Code	return Complex ;
Distance : 10

119
Tree	return str ;
Code	return str ;
Distance : 10

120
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

121
Tree	throw
Code	throw
Distance : 12

122
Tree	return values ;
Code	return values ;
Distance : 10

123
Tree	return byte ;
Code	return byte ;
Distance : 10

124
Tree	return
Code	return
Distance : 11

125
Tree	return ? ;
Code	return ? ;
Distance : 10

126
Tree	return false ;
Code	return false ;
Distance : 10

127
Tree	return super ;
Code	return super ;
Distance : 10

128
Tree	return / ;
Code	return / ;
Distance : 10

129
Tree	return class ;
Code	return class ;
Distance : 10

130
Tree	return return ;
Code	return return ;
Distance : 10

131
Tree	return true ;
Code	return true ;
Distance : 10

132
Tree	return MOCKING_PROGRESS ;
Code	return MOCKING_PROGRESS ;
Distance : 10

133
Tree	return InvocationImpl ;
Code	return InvocationImpl ;
Distance : 10

134
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

135
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

136
Tree	return cache ;
Code	return cache ;
Distance : 10

137
Tree	return data ;
Code	return data ;
Distance : 10

138
Tree	return {} ;
Code	return {} ;
Distance : 10

139
Tree	return += ;
Code	return += ;
Distance : 10

140
Tree	!
Code	!
Distance : 12

141
Tree	return throw ;
Code	return throw ;
Distance : 10

142
Tree	return ! ;
Code	return ! ;
Distance : 10

143
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

144
Tree	return >= ;
Code	return >= ;
Distance : 10

145
Tree	return obj ;
Code	return obj ;
Distance : 10

146
Tree	return T ;
Code	return T ;
Distance : 10

147
Tree	return extends ;
Code	return extends ;
Distance : 10

148
Tree	return SingularMatrixException ;
Code	return SingularMatrixException ;
Distance : 10

149
Tree	return timeZone ;
Code	return timeZone ;
Distance : 10

150
Tree	return Strings ;
Code	return Strings ;
Distance : 10

151
Tree	return length ;
Code	return length ;
Distance : 10

152
Tree	assertType
Code	assertType
Distance : 12

153
Tree	T
Code	T
Distance : 12

154
Tree	return Path ;
Code	return Path ;
Distance : 10

155
Tree	throw
Code	throw
Distance : 12

156
Tree	return commonTypes ;
Code	return commonTypes ;
Distance : 10

157
Tree	return assert ;
Code	return assert ;
Distance : 10

158
Tree	return ParseBucket ;
Code	return ParseBucket ;
Distance : 10

159
Tree	return NullArgumentException ;
Code	return NullArgumentException ;
Distance : 10

160
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

161
Tree	return InvocationDiffersFromActual ;
Code	return InvocationDiffersFromActual ;
Distance : 10

162
Tree	return break; ;
Code	return break; ;
Distance : 10

163
Tree	new
Code	new
Distance : 12

164
Tree	TypeI
Code	TypeI
Distance : 12

165
Tree	return UnsupportedDateTimeField ;
Code	return UnsupportedDateTimeField ;
Distance : 10

166
Tree	calendar
Code	calendar
Distance : 12

167
Tree	return [] ;
Code	return [] ;
Distance : 10

168
Tree	return Coordinates2D ;
Code	return Coordinates2D ;
Distance : 10

169
Tree	return MathUserException ;
Code	return MathUserException ;
Distance : 10

170
Tree	return TypeI ;
Code	return TypeI ;
Distance : 10

171
Tree	return Coordinates3D ;
Code	return Coordinates3D ;
Distance : 10

172
Tree	return boolean ;
Code	return boolean ;
Distance : 10

173
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

174
Tree	<
Code	<
Distance : 12

175
Tree	throw
Code	throw
Distance : 12

176
Tree	return != ;
Code	return != ;
Distance : 9

177
Tree	return Invocation ;
Code	return Invocation ;
Distance : 10

178
Tree	return invocation ;
Code	return invocation ;
Distance : 10

179
Tree	return parameterTypes ;
Code	return parameterTypes ;
Distance : 10

180
Tree	return Period ;
Code	return Period ;
Distance : 10

181
Tree	return DimensionMismatchException ;
Code	return DimensionMismatchException ;
Distance : 10

182
Tree	!
Code	!
Distance : 12

183
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

184
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 10

185
Tree	double
Code	double
Distance : 12

186
Tree	super
Code	super
Distance : 12

187
Tree	MathArrays
Code	MathArrays
Distance : 12

188
Tree	return continue; ;
Code	return continue; ;
Distance : 10

189
Tree	return array ;
Code	return array ;
Distance : 10

190
Tree	return double ;
Code	return double ;
Distance : 10

191
Tree	return wanted ;
Code	return wanted ;
Distance : 10

192
Tree	return MockitoException ;
Code	return MockitoException ;
Distance : 10

193
Tree	DiffResult
Code	DiffResult
Distance : 12

194
Tree	return Character ;
Code	return Character ;
Distance : 10

195
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

196
Tree	return jacobian ;
Code	return jacobian ;
Distance : 10

197
Tree	return Charset ;
Code	return Charset ;
Distance : 10

198
Tree	Invocation
Code	Invocation
Distance : 12

199
Tree	return ToStringStyle ;
Code	return ToStringStyle ;
Distance : 10

========================================================================


========================================================================
Example Number: 45
Parent Code is: 
CharSequence cs
-------------------------------------------------------------------------------
Child code is: 
String cs
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (44 (43 (801{val=CharSequence})) (800{val=cs})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=cs})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/30/parent/src_main_java_org_apache_commons_lang3_StringUtils.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Correct
========================================================================
True

0
Tree	CharSequence cs values
Code	CharSequence cs values
Distance : 2

1
Tree	CharSequence cs Test
Code	CharSequence cs Test
Distance : 2

2
Tree	CharSequence cs MathRuntimeException
Code	CharSequence cs MathRuntimeException
Distance : 2

3
Tree	CharSequence cs {}
Code	CharSequence cs {}
Distance : 2

4
Tree	CharSequence cs f
Code	CharSequence cs f
Distance : 2

5
Tree	CharSequence cs class
Code	CharSequence cs class
Distance : 2

6
Tree	CharSequence cs -
Code	CharSequence cs -
Distance : 2

7
Tree	CharSequence cs Preconditions
Code	CharSequence cs Preconditions
Distance : 2

8
Tree	CharSequence cs T
Code	CharSequence cs T
Distance : 2

9
Tree	CharSequence cs &&
Code	CharSequence cs &&
Distance : 2

10
Tree	CharSequence cs ]
Code	CharSequence cs ]
Distance : 2

11
Tree	CharSequence cs [
Code	CharSequence cs [
Distance : 2

12
Tree	CharSequence cs Object
Code	CharSequence cs Object
Distance : 2

13
Tree	CharSequence cs ParamChecks
Code	CharSequence cs ParamChecks
Distance : 2

14
Tree	CharSequence cs test
Code	CharSequence cs test
Distance : 2

15
Tree	CharSequence cs @
Code	CharSequence cs @
Distance : 2

16
Tree	CharSequence cs !
Code	CharSequence cs !
Distance : 2

17
Tree	CharSequence cs assertEquals
Code	CharSequence cs assertEquals
Distance : 2

18
Tree	CharSequence cs ==
Code	CharSequence cs ==
Distance : 2

19
Tree	CharSequence cs void
Code	CharSequence cs void
Distance : 2

20
Tree	CharSequence cs []
Code	CharSequence cs []
Distance : 2

21
Tree	CharSequence cs checkState
Code	CharSequence cs checkState
Distance : 2

22
Tree	CharSequence cs toString
Code	CharSequence cs toString
Distance : 2

23
Tree	CharSequence cs protected
Code	CharSequence cs protected
Distance : 2

24
Tree	CharSequence cs nullNotPermitted
Code	CharSequence cs nullNotPermitted
Distance : 2

25
Tree	CharSequence cs e
Code	CharSequence cs e
Distance : 2

26
Tree	CharSequence cs super
Code	CharSequence cs super
Distance : 2

27
Tree	CharSequence cs i
Code	CharSequence cs i
Distance : 2

28
Tree	CharSequence cs mock
Code	CharSequence cs mock
Distance : 2

29
Tree	CharSequence cs Override
Code	CharSequence cs Override
Distance : 2

30
Tree	CharSequence cs public
Code	CharSequence cs public
Distance : 2

31
Tree	CharSequence cs >
Code	CharSequence cs >
Distance : 2

32
Tree	CharSequence cs new
Code	CharSequence cs new
Distance : 2

33
Tree	CharSequence cs STRING_CONSTANT
Code	CharSequence cs STRING_CONSTANT
Distance : 2

34
Tree	CharSequence cs ,
Code	CharSequence cs ,
Distance : 2

35
Tree	CharSequence cs .
Code	CharSequence cs .
Distance : 2

36
Tree	CharSequence cs }
Code	CharSequence cs }
Distance : 2

37
Tree	CharSequence cs =
Code	CharSequence cs =
Distance : 2

38
Tree	CharSequence cs (
Code	CharSequence cs (
Distance : 2

39
Tree	CharSequence cs <s>
Code	CharSequence cs <s>
Distance : 2

40
Tree	CharSequence cs <blank>
Code	CharSequence cs <blank>
Distance : 2

41
Tree	CharSequence cs CharSequence
Code	CharSequence cs CharSequence
Distance : 2

42
Tree	CharSequence cs )
Code	CharSequence cs )
Distance : 2

43
Tree	CharSequence cs ;
Code	CharSequence cs ;
Distance : 2

44
Tree	CharSequence cs ()
Code	CharSequence cs ()
Distance : 2

45
Tree	CharSequence cs {
Code	CharSequence cs {
Distance : 2

46
Tree	CharSequence cs false
Code	CharSequence cs false
Distance : 2

47
Tree	CharSequence cs int
Code	CharSequence cs int
Distance : 2

48
Tree	CharSequence cs double
Code	CharSequence cs double
Distance : 2

49
Tree	CharSequence cs n
Code	CharSequence cs n
Distance : 2

50
Tree	CharSequence cs matcher
Code	CharSequence cs matcher
Distance : 2

51
Tree	CharSequence cs NUMBER_CONSTANT
Code	CharSequence cs NUMBER_CONSTANT
Distance : 2

52
Tree	CharSequence cs this
Code	CharSequence cs this
Distance : 2

53
Tree	CharSequence cs final
Code	CharSequence cs final
Distance : 2

54
Tree	CharSequence cs name
Code	CharSequence cs name
Distance : 2

55
Tree	CharSequence cs t
Code	CharSequence cs t
Distance : 2

56
Tree	CharSequence cs solver
Code	CharSequence cs solver
Distance : 2

57
Tree	CharSequence cs getField
Code	CharSequence cs getField
Distance : 2

58
Tree	CharSequence cs pattern
Code	CharSequence cs pattern
Distance : 2

59
Tree	CharSequence cs out
Code	CharSequence cs out
Distance : 2

60
Tree	CharSequence cs Collection
Code	CharSequence cs Collection
Distance : 2

61
Tree	CharSequence cs mode
Code	CharSequence cs mode
Distance : 2

62
Tree	CharSequence cs mockingProgress
Code	CharSequence cs mockingProgress
Distance : 2

63
Tree	CharSequence cs return;
Code	CharSequence cs return;
Distance : 2

64
Tree	CharSequence cs char
Code	CharSequence cs char
Distance : 2

65
Tree	CharSequence cs get
Code	CharSequence cs get
Distance : 2

66
Tree	CharSequence cs static
Code	CharSequence cs static
Distance : 2

67
Tree	CharSequence cs setAcceptedLanguage
Code	CharSequence cs setAcceptedLanguage
Distance : 2

68
Tree	CharSequence cs JSType
Code	CharSequence cs JSType
Distance : 2

69
Tree	CharSequence cs isEmpty
Code	CharSequence cs isEmpty
Distance : 2

70
Tree	CharSequence cs else
Code	CharSequence cs else
Distance : 2

71
Tree	CharSequence cs true
Code	CharSequence cs true
Distance : 2

72
Tree	CharSequence cs return
Code	CharSequence cs return
Distance : 2

73
Tree	CharSequence cs if
Code	CharSequence cs if
Distance : 2

74
Tree	CharSequence cs getMessage
Code	CharSequence cs getMessage
Distance : 2

75
Tree	CharSequence cs <
Code	CharSequence cs <
Distance : 2

76
Tree	CharSequence cs dataset
Code	CharSequence cs dataset
Distance : 2

77
Tree	CharSequence cs getChronology
Code	CharSequence cs getChronology
Distance : 2

78
Tree	CharSequence cs js
Code	CharSequence cs js
Distance : 2

79
Tree	CharSequence cs TestUtilities
Code	CharSequence cs TestUtilities
Distance : 2

80
Tree	CharSequence cs equals
Code	CharSequence cs equals
Distance : 2

81
Tree	CharSequence cs d
Code	CharSequence cs d
Distance : 2

82
Tree	CharSequence cs notifyListeners
Code	CharSequence cs notifyListeners
Distance : 2

83
Tree	CharSequence cs externs
Code	CharSequence cs externs
Distance : 2

84
Tree	CharSequence cs for
Code	CharSequence cs for
Distance : 2

85
Tree	CharSequence cs Invocation
Code	CharSequence cs Invocation
Distance : 2

86
Tree	CharSequence cs node
Code	CharSequence cs node
Distance : 2

87
Tree	CharSequence cs getParent
Code	CharSequence cs getParent
Distance : 2

88
Tree	CharSequence cs StrBuilder
Code	CharSequence cs StrBuilder
Distance : 2

89
Tree	CharSequence cs setUp
Code	CharSequence cs setUp
Distance : 2

90
Tree	CharSequence cs invocations
Code	CharSequence cs invocations
Distance : 2

91
Tree	CharSequence cs index
Code	CharSequence cs index
Distance : 2

92
Tree	CharSequence cs instant
Code	CharSequence cs instant
Distance : 2

93
Tree	CharSequence cs abs
Code	CharSequence cs abs
Distance : 2

94
Tree	CharSequence cs Double
Code	CharSequence cs Double
Distance : 2

95
Tree	CharSequence cs <=
Code	CharSequence cs <=
Distance : 2

96
Tree	CharSequence cs reportMatcher
Code	CharSequence cs reportMatcher
Distance : 2

97
Tree	CharSequence cs stream
Code	CharSequence cs stream
Distance : 2

98
Tree	CharSequence cs s
Code	CharSequence cs s
Distance : 2

99
Tree	CharSequence cs
Code	CharSequence cs
Distance : 1

100
Tree	CharSequence cs contains
Code	CharSequence cs contains
Distance : 2

101
Tree	CharSequence cs b
Code	CharSequence cs b
Distance : 2

102
Tree	CharSequence cs stroke
Code	CharSequence cs stroke
Distance : 2

103
Tree	CharSequence cs MutableTimePeriod
Code	CharSequence cs MutableTimePeriod
Distance : 2

104
Tree	CharSequence cs LanguageMode.ECMASCRIPT_2015
Code	CharSequence cs LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	CharSequence cs size
Code	CharSequence cs size
Distance : 2

106
Tree	CharSequence cs traverseEs6
Code	CharSequence cs traverseEs6
Distance : 2

107
Tree	CharSequence cs StringBuilder
Code	CharSequence cs StringBuilder
Distance : 2

108
Tree	CharSequence cs chrono
Code	CharSequence cs chrono
Distance : 2

109
Tree	CharSequence cs a
Code	CharSequence cs a
Distance : 2

110
Tree	CharSequence cs returnZero
Code	CharSequence cs returnZero
Distance : 2

111
Tree	CharSequence cs sb
Code	CharSequence cs sb
Distance : 2

112
Tree	CharSequence cs scope
Code	CharSequence cs scope
Distance : 2

113
Tree	CharSequence cs UnivariateFunction
Code	CharSequence cs UnivariateFunction
Distance : 2

114
Tree	CharSequence cs sqrt
Code	CharSequence cs sqrt
Distance : 2

115
Tree	CharSequence cs clone
Code	CharSequence cs clone
Distance : 2

116
Tree	CharSequence cs getFirstChild
Code	CharSequence cs getFirstChild
Distance : 2

117
Tree	CharSequence cs throws
Code	CharSequence cs throws
Distance : 2

118
Tree	CharSequence cs simpleMethod
Code	CharSequence cs simpleMethod
Distance : 2

119
Tree	CharSequence cs getArgumentMatcherStorage
Code	CharSequence cs getArgumentMatcherStorage
Distance : 2

120
Tree	CharSequence cs append
Code	CharSequence cs append
Distance : 2

121
Tree	CharSequence cs alpha
Code	CharSequence cs alpha
Distance : 2

122
Tree	CharSequence cs isNormalBlock
Code	CharSequence cs isNormalBlock
Distance : 2

123
Tree	CharSequence cs obj
Code	CharSequence cs obj
Distance : 2

124
Tree	CharSequence cs isBlock
Code	CharSequence cs isBlock
Distance : 2

125
Tree	CharSequence cs array
Code	CharSequence cs array
Distance : 2

126
Tree	CharSequence cs TestUtils
Code	CharSequence cs TestUtils
Distance : 2

127
Tree	CharSequence cs length
Code	CharSequence cs length
Distance : 2

128
Tree	CharSequence cs expected
Code	CharSequence cs expected
Distance : 2

129
Tree	CharSequence cs IllegalArgumentException
Code	CharSequence cs IllegalArgumentException
Distance : 2

130
Tree	CharSequence cs invocation
Code	CharSequence cs invocation
Distance : 2

131
Tree	CharSequence cs assertThat
Code	CharSequence cs assertThat
Distance : 2

132
Tree	CharSequence cs FastMath
Code	CharSequence cs FastMath
Distance : 2

133
Tree	CharSequence cs reportCodeChange
Code	CharSequence cs reportCodeChange
Distance : 2

134
Tree	CharSequence cs testSame
Code	CharSequence cs testSame
Distance : 2

135
Tree	CharSequence cs createIllegalArgumentException
Code	CharSequence cs createIllegalArgumentException
Distance : 2

136
Tree	CharSequence cs ArrayList
Code	CharSequence cs ArrayList
Distance : 2

137
Tree	CharSequence cs parent
Code	CharSequence cs parent
Distance : 2

138
Tree	CharSequence cs LINE_JOINER
Code	CharSequence cs LINE_JOINER
Distance : 2

139
Tree	CharSequence cs x
Code	CharSequence cs x
Distance : 2

140
Tree	CharSequence cs fireChangeEvent
Code	CharSequence cs fireChangeEvent
Distance : 2

141
Tree	CharSequence cs str
Code	CharSequence cs str
Distance : 2

142
Tree	CharSequence cs m
Code	CharSequence cs m
Distance : 2

143
Tree	CharSequence cs try
Code	CharSequence cs try
Distance : 2

144
Tree	CharSequence cs fail
Code	CharSequence cs fail
Distance : 2

145
Tree	CharSequence cs :
Code	CharSequence cs :
Distance : 2

146
Tree	CharSequence cs LanguageMode.ECMASCRIPT6
Code	CharSequence cs LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	CharSequence cs optimizer
Code	CharSequence cs optimizer
Distance : 2

148
Tree	String cs
Code	String cs
Distance : 0

149
Tree	CharSequence cs <>
Code	CharSequence cs <>
Distance : 2

150
Tree	CharSequence cs ?
Code	CharSequence cs ?
Distance : 2

151
Tree	CharSequence cs boolean
Code	CharSequence cs boolean
Distance : 2

152
Tree	CharSequence cs paint
Code	CharSequence cs paint
Distance : 2

153
Tree	CharSequence cs result
Code	CharSequence cs result
Distance : 2

154
Tree	CharSequence cs *
Code	CharSequence cs *
Distance : 2

155
Tree	CharSequence cs type
Code	CharSequence cs type
Distance : 2

156
Tree	CharSequence cs getInstance
Code	CharSequence cs getInstance
Distance : 2

157
Tree	CharSequence cs serialised
Code	CharSequence cs serialised
Distance : 2

158
Tree	CharSequence cs Exception
Code	CharSequence cs Exception
Distance : 2

159
Tree	CharSequence cs Assert
Code	CharSequence cs Assert
Distance : 2

160
Tree	CharSequence cs source
Code	CharSequence cs source
Distance : 2

161
Tree	CharSequence cs Class
Code	CharSequence cs Class
Distance : 2

162
Tree	CharSequence cs Math
Code	CharSequence cs Math
Distance : 2

163
Tree	CharSequence cs root
Code	CharSequence cs root
Distance : 2

164
Tree	CharSequence cs options
Code	CharSequence cs options
Distance : 2

165
Tree	CharSequence cs p
Code	CharSequence cs p
Distance : 2

166
Tree	CharSequence cs data
Code	CharSequence cs data
Distance : 2

167
Tree	CharSequence cs add
Code	CharSequence cs add
Distance : 2

168
Tree	CharSequence cs field
Code	CharSequence cs field
Distance : 2

169
Tree	CharSequence cs checkArgument
Code	CharSequence cs checkArgument
Distance : 2

170
Tree	CharSequence cs ex
Code	CharSequence cs ex
Distance : 2

171
Tree	CharSequence cs NodeUtil
Code	CharSequence cs NodeUtil
Distance : 2

172
Tree	CharSequence cs join
Code	CharSequence cs join
Distance : 2

173
Tree	CharSequence cs List
Code	CharSequence cs List
Distance : 2

174
Tree	CharSequence cs NodeTraversal
Code	CharSequence cs NodeTraversal
Distance : 2

175
Tree	CharSequence cs Args
Code	CharSequence cs Args
Distance : 2

176
Tree	CharSequence cs v
Code	CharSequence cs v
Distance : 2

177
Tree	CharSequence cs Integer
Code	CharSequence cs Integer
Distance : 2

178
Tree	CharSequence cs lines
Code	CharSequence cs lines
Distance : 2

179
Tree	CharSequence cs c
Code	CharSequence cs c
Distance : 2

180
Tree	CharSequence cs verify
Code	CharSequence cs verify
Distance : 2

181
Tree	CharSequence cs Node
Code	CharSequence cs Node
Distance : 2

182
Tree	CharSequence cs compiler
Code	CharSequence cs compiler
Distance : 2

183
Tree	CharSequence cs String
Code	CharSequence cs String
Distance : 2

184
Tree	CharSequence cs null
Code	CharSequence cs null
Distance : 2

185
Tree	CharSequence cs wanted
Code	CharSequence cs wanted
Distance : 2

186
Tree	CharSequence cs +
Code	CharSequence cs +
Distance : 2

187
Tree	CharSequence cs catch
Code	CharSequence cs catch
Distance : 2

188
Tree	CharSequence cs !=
Code	CharSequence cs !=
Distance : 2

189
Tree	CharSequence cs value
Code	CharSequence cs value
Distance : 2

190
Tree	CharSequence cs /
Code	CharSequence cs /
Distance : 2

191
Tree	CharSequence cs assertTrue
Code	CharSequence cs assertTrue
Distance : 2

192
Tree	CharSequence cs checkNotNull
Code	CharSequence cs checkNotNull
Distance : 2

193
Tree	CharSequence cs Fraction
Code	CharSequence cs Fraction
Distance : 2

194
Tree	CharSequence cs valueOf
Code	CharSequence cs valueOf
Distance : 2

195
Tree	CharSequence cs instance
Code	CharSequence cs instance
Distance : 2

196
Tree	CharSequence cs long
Code	CharSequence cs long
Distance : 2

197
Tree	CharSequence cs throw
Code	CharSequence cs throw
Distance : 2

198
Tree	CharSequence cs y
Code	CharSequence cs y
Distance : 2

199
Tree	CharSequence cs PeriodType
Code	CharSequence cs PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 46
Parent Code is: 
Calendar c = new GregorianCalendar ( mTimeZone ) ;
-------------------------------------------------------------------------------
Child code is: 
Calendar c = new GregorianCalendar ( mTimeZone , mLocale ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Calendar})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=GregorianCalendar})) (214{val=(}) (800{val=mTimeZone}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Calendar})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=GregorianCalendar})) (214{val=(}) (800{val=mTimeZone}) (234{val=,}) (800{val=mLocale}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/26/parent/src_main_java_org_apache_commons_lang3_time_FastDateFormat.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Calendar c = new Calendar ( mLocale ) ; Integer
Code	Calendar c = new Calendar ( mLocale ) ; Integer
Distance : 4

1
Tree	Calendar c = new Calendar ( mLocale ) ; createIllegalArgumentException
Code	Calendar c = new Calendar ( mLocale ) ; createIllegalArgumentException
Distance : 4

2
Tree	Calendar c = new Calendar ( mLocale ) ; x
Code	Calendar c = new Calendar ( mLocale ) ; x
Distance : 4

3
Tree	Calendar c = new Calendar ( mLocale ) ; LINE_JOINER
Code	Calendar c = new Calendar ( mLocale ) ; LINE_JOINER
Distance : 4

4
Tree	Calendar c = new Calendar ( mLocale ) ; ?
Code	Calendar c = new Calendar ( mLocale ) ; ?
Distance : 4

5
Tree	Calendar c = new Calendar ( mLocale ) ; Assert
Code	Calendar c = new Calendar ( mLocale ) ; Assert
Distance : 4

6
Tree	Calendar c = new Calendar ( mLocale ) ; assertThat
Code	Calendar c = new Calendar ( mLocale ) ; assertThat
Distance : 4

7
Tree	Calendar c = new Calendar ( mLocale ) ; TestUtils
Code	Calendar c = new Calendar ( mLocale ) ; TestUtils
Distance : 4

8
Tree	Calendar c = new Calendar ( mLocale ) ; Exception
Code	Calendar c = new Calendar ( mLocale ) ; Exception
Distance : 4

9
Tree	Calendar c = new Calendar ( mLocale ) ; index
Code	Calendar c = new Calendar ( mLocale ) ; index
Distance : 4

10
Tree	Calendar c = new Calendar ( mLocale ) ; invocations
Code	Calendar c = new Calendar ( mLocale ) ; invocations
Distance : 4

11
Tree	Calendar c = new Calendar ( mLocale ) ; Class
Code	Calendar c = new Calendar ( mLocale ) ; Class
Distance : 4

12
Tree	Calendar c = new Calendar ( mLocale ) ; source
Code	Calendar c = new Calendar ( mLocale ) ; source
Distance : 4

13
Tree	Calendar c = new Calendar ( mLocale ) ; options
Code	Calendar c = new Calendar ( mLocale ) ; options
Distance : 4

14
Tree	Calendar c = new Calendar ( mLocale ) ; p
Code	Calendar c = new Calendar ( mLocale ) ; p
Distance : 4

15
Tree	Calendar c = new Calendar ( mLocale ) ; @
Code	Calendar c = new Calendar ( mLocale ) ; @
Distance : 4

16
Tree	Calendar c = new Calendar ( mLocale ) ; false
Code	Calendar c = new Calendar ( mLocale ) ; false
Distance : 4

17
Tree	Calendar c = new Calendar ( mLocale ) ; double
Code	Calendar c = new Calendar ( mLocale ) ; double
Distance : 4

18
Tree	Calendar c = new Calendar ( mLocale ) ; ==
Code	Calendar c = new Calendar ( mLocale ) ; ==
Distance : 4

19
Tree	Calendar c = new Calendar ( mLocale ) ; void
Code	Calendar c = new Calendar ( mLocale ) ; void
Distance : 4

20
Tree	Calendar c = new Calendar ( mLocale ) ; throw
Code	Calendar c = new Calendar ( mLocale ) ; throw
Distance : 4

21
Tree	Calendar c = new Calendar ( mLocale ) ; catch
Code	Calendar c = new Calendar ( mLocale ) ; catch
Distance : 4

22
Tree	Calendar c = new Calendar ( mLocale ) ; testSame
Code	Calendar c = new Calendar ( mLocale ) ; testSame
Distance : 4

23
Tree	Calendar c = new Calendar ( mLocale ) ; test
Code	Calendar c = new Calendar ( mLocale ) ; test
Distance : 4

24
Tree	Calendar c = new Calendar ( mLocale ) ; array
Code	Calendar c = new Calendar ( mLocale ) ; array
Distance : 4

25
Tree	Calendar c = new Calendar ( mLocale ) ; class
Code	Calendar c = new Calendar ( mLocale ) ; class
Distance : 4

26
Tree	Calendar c = new Calendar ( mLocale ) ; :
Code	Calendar c = new Calendar ( mLocale ) ; :
Distance : 4

27
Tree	Calendar c = new Calendar ( mLocale ) ; fail
Code	Calendar c = new Calendar ( mLocale ) ; fail
Distance : 4

28
Tree	Calendar c = new Calendar ( mLocale ) ; Args
Code	Calendar c = new Calendar ( mLocale ) ; Args
Distance : 4

29
Tree	Calendar c = new Calendar ( mLocale ) ; List
Code	Calendar c = new Calendar ( mLocale ) ; List
Distance : 4

30
Tree	Calendar c = new Calendar ( mLocale ) ; IllegalArgumentException
Code	Calendar c = new Calendar ( mLocale ) ; IllegalArgumentException
Distance : 4

31
Tree	Calendar c = new Calendar ( mLocale ) ; expected
Code	Calendar c = new Calendar ( mLocale ) ; expected
Distance : 4

32
Tree	Calendar c = new Calendar ( mLocale ) ; FastMath
Code	Calendar c = new Calendar ( mLocale ) ; FastMath
Distance : 4

33
Tree	Calendar c = new Calendar ( mLocale ) ; reportCodeChange
Code	Calendar c = new Calendar ( mLocale ) ; reportCodeChange
Distance : 4

34
Tree	Calendar c = new Calendar ( mLocale ) ; parent
Code	Calendar c = new Calendar ( mLocale ) ; parent
Distance : 4

35
Tree	Calendar c = new Calendar ( mLocale ) ; ArrayList
Code	Calendar c = new Calendar ( mLocale ) ; ArrayList
Distance : 4

36
Tree	Calendar c = new Calendar ( mLocale ) ; getInstance
Code	Calendar c = new Calendar ( mLocale ) ; getInstance
Distance : 4

37
Tree	Calendar c = new Calendar ( mLocale ) ; serialised
Code	Calendar c = new Calendar ( mLocale ) ; serialised
Distance : 4

38
Tree	Calendar c = new Calendar ( mLocale ) ; str
Code	Calendar c = new Calendar ( mLocale ) ; str
Distance : 4

39
Tree	Calendar c = new Calendar ( mLocale ) ; fireChangeEvent
Code	Calendar c = new Calendar ( mLocale ) ; fireChangeEvent
Distance : 4

40
Tree	Calendar c = new Calendar ( mLocale ) ; v
Code	Calendar c = new Calendar ( mLocale ) ; v
Distance : 4

41
Tree	Calendar c = new Calendar ( mLocale ) ; invocation
Code	Calendar c = new Calendar ( mLocale ) ; invocation
Distance : 4

42
Tree	Calendar c = new Calendar ( mLocale ) ; result
Code	Calendar c = new Calendar ( mLocale ) ; result
Distance : 4

43
Tree	Calendar c = new Calendar ( mLocale ) ; paint
Code	Calendar c = new Calendar ( mLocale ) ; paint
Distance : 4

44
Tree	Calendar c = new Calendar ( mLocale ) ; try
Code	Calendar c = new Calendar ( mLocale ) ; try
Distance : 4

45
Tree	Calendar c = new Calendar ( mLocale ) ; m
Code	Calendar c = new Calendar ( mLocale ) ; m
Distance : 4

46
Tree	Calendar c = new Calendar ( mLocale ) ; f
Code	Calendar c = new Calendar ( mLocale ) ; f
Distance : 4

47
Tree	Calendar c = new Calendar ( mLocale ) ; <>
Code	Calendar c = new Calendar ( mLocale ) ; <>
Distance : 4

48
Tree	Calendar c = new Calendar ( mLocale ) ; long
Code	Calendar c = new Calendar ( mLocale ) ; long
Distance : 4

49
Tree	Calendar c = new Calendar ( mLocale ) ; []
Code	Calendar c = new Calendar ( mLocale ) ; []
Distance : 4

50
Tree	Calendar c = new Calendar ( mLocale ) ; nullNotPermitted
Code	Calendar c = new Calendar ( mLocale ) ; nullNotPermitted
Distance : 4

51
Tree	Calendar c = new Calendar ( mTimeZone ) ;
Code	Calendar c = new Calendar ( mTimeZone ) ;
Distance : 3

52
Tree	Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 3

53
Tree	GregorianCalendar c = new GregorianCalendar ( mLocale ) ;
Code	GregorianCalendar c = new GregorianCalendar ( mLocale ) ;
Distance : 3

54
Tree	Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 3

55
Tree	GregorianCalendar mLocale = new Calendar ( c ) ;
Code	GregorianCalendar mLocale = new Calendar ( c ) ;
Distance : 6

56
Tree	GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Code	GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Distance : 5

57
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( c ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( c ) ;
Distance : 5

58
Tree	GregorianCalendar mTimeZone = new Calendar ( c ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( c ) ;
Distance : 6

59
Tree	GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Distance : 5

60
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

61
Tree	Calendar mTimeZone = new GregorianCalendar ( c ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( c ) ;
Distance : 4

62
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 4

63
Tree	GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 5

64
Tree	Calendar mTimeZone = new Calendar ( c ) ;
Code	Calendar mTimeZone = new Calendar ( c ) ;
Distance : 5

65
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 5

66
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

67
Tree	Calendar mLocale = new GregorianCalendar ( c ) ;
Code	Calendar mLocale = new GregorianCalendar ( c ) ;
Distance : 4

68
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 4

69
Tree	GregorianCalendar c = new GregorianCalendar ( c ) ;
Code	GregorianCalendar c = new GregorianCalendar ( c ) ;
Distance : 4

70
Tree	GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Code	GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 5

71
Tree	Calendar mLocale = new Calendar ( c ) ;
Code	Calendar mLocale = new Calendar ( c ) ;
Distance : 5

72
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ;
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ;
Distance : 2

73
Tree	Calendar c = new Calendar ( mLocale ) ; length
Code	Calendar c = new Calendar ( mLocale ) ; length
Distance : 4

74
Tree	GregorianCalendar c = new Calendar ( mLocale ) ;
Code	GregorianCalendar c = new Calendar ( mLocale ) ;
Distance : 4

75
Tree	GregorianCalendar c = new Calendar ( mTimeZone ) ;
Code	GregorianCalendar c = new Calendar ( mTimeZone ) ;
Distance : 4

76
Tree	Calendar c = new Calendar ( mLocale ) ; checkNotNull
Code	Calendar c = new Calendar ( mLocale ) ; checkNotNull
Distance : 4

77
Tree	Calendar c = new Calendar ( mLocale ) ; Fraction
Code	Calendar c = new Calendar ( mLocale ) ; Fraction
Distance : 4

78
Tree	Calendar c = new Calendar ( mLocale ) ; &&
Code	Calendar c = new Calendar ( mLocale ) ; &&
Distance : 4

79
Tree	Calendar c = new Calendar ( mLocale ) ; !=
Code	Calendar c = new Calendar ( mLocale ) ; !=
Distance : 4

80
Tree	Calendar c = new Calendar ( mLocale ) ; value
Code	Calendar c = new Calendar ( mLocale ) ; value
Distance : 4

81
Tree	Calendar c = new Calendar ( mLocale ) ; T
Code	Calendar c = new Calendar ( mLocale ) ; T
Distance : 4

82
Tree	Calendar c = new Calendar ( mLocale ) ; -
Code	Calendar c = new Calendar ( mLocale ) ; -
Distance : 4

83
Tree	Calendar c = new Calendar ( mLocale ) ; Preconditions
Code	Calendar c = new Calendar ( mLocale ) ; Preconditions
Distance : 4

84
Tree	Calendar c = new Calendar ( mLocale ) ; [
Code	Calendar c = new Calendar ( mLocale ) ; [
Distance : 4

85
Tree	Calendar c = new Calendar ( mLocale ) ; ]
Code	Calendar c = new Calendar ( mLocale ) ; ]
Distance : 4

86
Tree	Calendar c = new Calendar ( mLocale ) ; assertEquals
Code	Calendar c = new Calendar ( mLocale ) ; assertEquals
Distance : 4

87
Tree	Calendar c = new Calendar ( mLocale ) ; !
Code	Calendar c = new Calendar ( mLocale ) ; !
Distance : 4

88
Tree	Calendar c = new GregorianCalendar ( c ) ;
Code	Calendar c = new GregorianCalendar ( c ) ;
Distance : 3

89
Tree	Calendar mTimeZone = new Calendar ( mLocale ) ;
Code	Calendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 4

90
Tree	Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 3

91
Tree	Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 3

92
Tree	GregorianCalendar c = new GregorianCalendar ( mTimeZone ) ;
Code	GregorianCalendar c = new GregorianCalendar ( mTimeZone ) ;
Distance : 3

93
Tree	Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 4

94
Tree	Calendar mLocale = new Calendar ( mTimeZone ) ;
Code	Calendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 4

95
Tree	Calendar c = new GregorianCalendar ( mLocale ) ;
Code	Calendar c = new GregorianCalendar ( mLocale ) ;
Distance : 2

96
Tree	Calendar mLocale = new Calendar ( mLocale ) ;
Code	Calendar mLocale = new Calendar ( mLocale ) ;
Distance : 4

97
Tree	Calendar c = new Calendar ( c ) ;
Code	Calendar c = new Calendar ( c ) ;
Distance : 4

98
Tree	Calendar c = new Calendar ( mLocale ) ; getParent
Code	Calendar c = new Calendar ( mLocale ) ; getParent
Distance : 4

99
Tree	Calendar c = new Calendar ( mLocale ) ;
Code	Calendar c = new Calendar ( mLocale ) ;
Distance : 3

100
Tree	Calendar c = new Calendar ( mLocale ) ; compiler
Code	Calendar c = new Calendar ( mLocale ) ; compiler
Distance : 4

101
Tree	Calendar c = new Calendar ( mLocale ) ; <
Code	Calendar c = new Calendar ( mLocale ) ; <
Distance : 4

102
Tree	Calendar c = new Calendar ( mLocale ) ; this
Code	Calendar c = new Calendar ( mLocale ) ; this
Distance : 4

103
Tree	Calendar c = new Calendar ( mLocale ) ; final
Code	Calendar c = new Calendar ( mLocale ) ; final
Distance : 4

104
Tree	Calendar c = new Calendar ( mLocale ) ; =
Code	Calendar c = new Calendar ( mLocale ) ; =
Distance : 4

105
Tree	Calendar c = new Calendar ( mLocale ) ; }
Code	Calendar c = new Calendar ( mLocale ) ; }
Distance : 4

106
Tree	Calendar c = new Calendar ( mLocale ) ; ()
Code	Calendar c = new Calendar ( mLocale ) ; ()
Distance : 4

107
Tree	Calendar c = new Calendar ( mLocale ) ; {
Code	Calendar c = new Calendar ( mLocale ) ; {
Distance : 4

108
Tree	Calendar c = new Calendar ( mLocale ) ; checkArgument
Code	Calendar c = new Calendar ( mLocale ) ; checkArgument
Distance : 4

109
Tree	Calendar c = new Calendar ( mLocale ) ; field
Code	Calendar c = new Calendar ( mLocale ) ; field
Distance : 4

110
Tree	Calendar c = new Calendar ( mLocale ) ; t
Code	Calendar c = new Calendar ( mLocale ) ; t
Distance : 4

111
Tree	Calendar c = new Calendar ( mLocale ) ; name
Code	Calendar c = new Calendar ( mLocale ) ; name
Distance : 4

112
Tree	Calendar c = new Calendar ( mLocale ) ; data
Code	Calendar c = new Calendar ( mLocale ) ; data
Distance : 4

113
Tree	Calendar c = new Calendar ( mLocale ) ; add
Code	Calendar c = new Calendar ( mLocale ) ; add
Distance : 4

114
Tree	Calendar c = new Calendar ( mLocale ) ; NodeTraversal
Code	Calendar c = new Calendar ( mLocale ) ; NodeTraversal
Distance : 4

115
Tree	Calendar c = new Calendar ( mLocale ) ; stream
Code	Calendar c = new Calendar ( mLocale ) ; stream
Distance : 4

116
Tree	GregorianCalendar c = new Calendar ( c ) ;
Code	GregorianCalendar c = new Calendar ( c ) ;
Distance : 5

117
Tree	Calendar c = new Calendar ( mLocale ) ; String
Code	Calendar c = new Calendar ( mLocale ) ; String
Distance : 4

118
Tree	Calendar c = new Calendar ( mLocale ) ; mode
Code	Calendar c = new Calendar ( mLocale ) ; mode
Distance : 4

119
Tree	Calendar c = new Calendar ( mLocale ) ; mock
Code	Calendar c = new Calendar ( mLocale ) ; mock
Distance : 4

120
Tree	Calendar c = new Calendar ( mLocale ) ; Object
Code	Calendar c = new Calendar ( mLocale ) ; Object
Distance : 4

121
Tree	Calendar c = new Calendar ( mLocale ) ; ParamChecks
Code	Calendar c = new Calendar ( mLocale ) ; ParamChecks
Distance : 4

122
Tree	Calendar c = new Calendar ( mLocale ) ; <blank>
Code	Calendar c = new Calendar ( mLocale ) ; <blank>
Distance : 4

123
Tree	Calendar c = new Calendar ( mLocale ) ; (
Code	Calendar c = new Calendar ( mLocale ) ; (
Distance : 4

124
Tree	Calendar c = new Calendar ( mLocale ) ; <s>
Code	Calendar c = new Calendar ( mLocale ) ; <s>
Distance : 4

125
Tree	Calendar c = new Calendar ( mLocale ) ; (
Code	Calendar c = new Calendar ( mLocale ) ; (
Distance : 4

126
Tree	Calendar c = new Calendar ( mLocale ) ; ;
Code	Calendar c = new Calendar ( mLocale ) ; ;
Distance : 4

127
Tree	Calendar c = new Calendar ( mLocale ) ; )
Code	Calendar c = new Calendar ( mLocale ) ; )
Distance : 4

128
Tree	Calendar c = new Calendar ( mLocale ) ; .
Code	Calendar c = new Calendar ( mLocale ) ; .
Distance : 4

129
Tree	Calendar c = new Calendar ( mLocale ) ; ,
Code	Calendar c = new Calendar ( mLocale ) ; ,
Distance : 4

130
Tree	Calendar c = new Calendar ( mLocale ) ; if
Code	Calendar c = new Calendar ( mLocale ) ; if
Distance : 4

131
Tree	Calendar c = new Calendar ( mLocale ) ; Math
Code	Calendar c = new Calendar ( mLocale ) ; Math
Distance : 4

132
Tree	Calendar c = new Calendar ( mLocale ) ; protected
Code	Calendar c = new Calendar ( mLocale ) ; protected
Distance : 4

133
Tree	Calendar c = new Calendar ( mLocale ) ; NodeUtil
Code	Calendar c = new Calendar ( mLocale ) ; NodeUtil
Distance : 4

134
Tree	Calendar c = new Calendar ( mLocale ) ; root
Code	Calendar c = new Calendar ( mLocale ) ; root
Distance : 4

135
Tree	Calendar c = new Calendar ( mLocale ) ; StringBuilder
Code	Calendar c = new Calendar ( mLocale ) ; StringBuilder
Distance : 4

136
Tree	Calendar c = new Calendar ( mLocale ) ; stroke
Code	Calendar c = new Calendar ( mLocale ) ; stroke
Distance : 4

137
Tree	Calendar c = new Calendar ( mLocale ) ; toString
Code	Calendar c = new Calendar ( mLocale ) ; toString
Distance : 4

138
Tree	Calendar c = new Calendar ( mLocale ) ; Test
Code	Calendar c = new Calendar ( mLocale ) ; Test
Distance : 4

139
Tree	Calendar c = new Calendar ( mLocale ) ; c
Code	Calendar c = new Calendar ( mLocale ) ; c
Distance : 4

140
Tree	Calendar c = new Calendar ( mLocale ) ; lines
Code	Calendar c = new Calendar ( mLocale ) ; lines
Distance : 4

141
Tree	Calendar c = new Calendar ( mLocale ) ; return;
Code	Calendar c = new Calendar ( mLocale ) ; return;
Distance : 4

142
Tree	Calendar c = new Calendar ( mLocale ) ; LanguageMode.ECMASCRIPT_2015
Code	Calendar c = new Calendar ( mLocale ) ; LanguageMode.ECMASCRIPT_2015
Distance : 4

143
Tree	Calendar c = new Calendar ( mLocale ) ; size
Code	Calendar c = new Calendar ( mLocale ) ; size
Distance : 4

144
Tree	Calendar c = new Calendar ( mLocale ) ; join
Code	Calendar c = new Calendar ( mLocale ) ; join
Distance : 4

145
Tree	Calendar c = new Calendar ( mLocale ) ; boolean
Code	Calendar c = new Calendar ( mLocale ) ; boolean
Distance : 4

146
Tree	Calendar c = new Calendar ( mLocale ) ; type
Code	Calendar c = new Calendar ( mLocale ) ; type
Distance : 4

147
Tree	Calendar c = new Calendar ( mLocale ) ; *
Code	Calendar c = new Calendar ( mLocale ) ; *
Distance : 4

148
Tree	Calendar c = new Calendar ( mLocale ) ; mockingProgress
Code	Calendar c = new Calendar ( mLocale ) ; mockingProgress
Distance : 4

149
Tree	Calendar c = new Calendar ( mLocale ) ; i
Code	Calendar c = new Calendar ( mLocale ) ; i
Distance : 4

150
Tree	Calendar c = new Calendar ( mLocale ) ; wanted
Code	Calendar c = new Calendar ( mLocale ) ; wanted
Distance : 4

151
Tree	Calendar c = new Calendar ( mLocale ) ; super
Code	Calendar c = new Calendar ( mLocale ) ; super
Distance : 4

152
Tree	Calendar c = new Calendar ( mLocale ) ; Node
Code	Calendar c = new Calendar ( mLocale ) ; Node
Distance : 4

153
Tree	Calendar c = new Calendar ( mLocale ) ; verify
Code	Calendar c = new Calendar ( mLocale ) ; verify
Distance : 4

154
Tree	Calendar c = new Calendar ( mLocale ) ; ex
Code	Calendar c = new Calendar ( mLocale ) ; ex
Distance : 4

155
Tree	Calendar c = new Calendar ( mLocale ) ; traverseEs6
Code	Calendar c = new Calendar ( mLocale ) ; traverseEs6
Distance : 4

156
Tree	Calendar c = new Calendar ( mLocale ) ; MutableTimePeriod
Code	Calendar c = new Calendar ( mLocale ) ; MutableTimePeriod
Distance : 4

157
Tree	Calendar c = new Calendar ( mLocale ) ; out
Code	Calendar c = new Calendar ( mLocale ) ; out
Distance : 4

158
Tree	Calendar c = new Calendar ( mLocale ) ; isEmpty
Code	Calendar c = new Calendar ( mLocale ) ; isEmpty
Distance : 4

159
Tree	Calendar c = new Calendar ( mLocale ) ; JSType
Code	Calendar c = new Calendar ( mLocale ) ; JSType
Distance : 4

160
Tree	Calendar c = new Calendar ( mLocale ) ; char
Code	Calendar c = new Calendar ( mLocale ) ; char
Distance : 4

161
Tree	Calendar c = new Calendar ( mLocale ) ; get
Code	Calendar c = new Calendar ( mLocale ) ; get
Distance : 4

162
Tree	Calendar c = new Calendar ( mLocale ) ; checkState
Code	Calendar c = new Calendar ( mLocale ) ; checkState
Distance : 4

163
Tree	Calendar c = new Calendar ( mLocale ) ; int
Code	Calendar c = new Calendar ( mLocale ) ; int
Distance : 4

164
Tree	Calendar c = new Calendar ( mLocale ) ; notifyListeners
Code	Calendar c = new Calendar ( mLocale ) ; notifyListeners
Distance : 4

165
Tree	Calendar c = new Calendar ( mLocale ) ; Invocation
Code	Calendar c = new Calendar ( mLocale ) ; Invocation
Distance : 4

166
Tree	Calendar c = new Calendar ( mLocale ) ; assertTrue
Code	Calendar c = new Calendar ( mLocale ) ; assertTrue
Distance : 4

167
Tree	Calendar c = new Calendar ( mLocale ) ; /
Code	Calendar c = new Calendar ( mLocale ) ; /
Distance : 4

168
Tree	Calendar c = new Calendar ( mLocale ) ; externs
Code	Calendar c = new Calendar ( mLocale ) ; externs
Distance : 4

169
Tree	Calendar c = new Calendar ( mLocale ) ; for
Code	Calendar c = new Calendar ( mLocale ) ; for
Distance : 4

170
Tree	Calendar c = new Calendar ( mLocale ) ; setUp
Code	Calendar c = new Calendar ( mLocale ) ; setUp
Distance : 4

171
Tree	Calendar c = new Calendar ( mLocale ) ; reportMatcher
Code	Calendar c = new Calendar ( mLocale ) ; reportMatcher
Distance : 4

172
Tree	Calendar c = new Calendar ( mLocale ) ; TestUtilities
Code	Calendar c = new Calendar ( mLocale ) ; TestUtilities
Distance : 4

173
Tree	Calendar c = new Calendar ( mLocale ) ; js
Code	Calendar c = new Calendar ( mLocale ) ; js
Distance : 4

174
Tree	Calendar c = new Calendar ( mLocale ) ; else
Code	Calendar c = new Calendar ( mLocale ) ; else
Distance : 4

175
Tree	Calendar c = new Calendar ( mLocale ) ; getMessage
Code	Calendar c = new Calendar ( mLocale ) ; getMessage
Distance : 4

176
Tree	Calendar c = new Calendar ( mLocale ) ; matcher
Code	Calendar c = new Calendar ( mLocale ) ; matcher
Distance : 4

177
Tree	Calendar c = new Calendar ( mLocale ) ; MathRuntimeException
Code	Calendar c = new Calendar ( mLocale ) ; MathRuntimeException
Distance : 4

178
Tree	Calendar c = new Calendar ( mLocale ) ; equals
Code	Calendar c = new Calendar ( mLocale ) ; equals
Distance : 4

179
Tree	Calendar c = new Calendar ( mLocale ) ; StrBuilder
Code	Calendar c = new Calendar ( mLocale ) ; StrBuilder
Distance : 4

180
Tree	Calendar c = new Calendar ( mLocale ) ; d
Code	Calendar c = new Calendar ( mLocale ) ; d
Distance : 4

181
Tree	Calendar c = new Calendar ( mLocale ) ; public
Code	Calendar c = new Calendar ( mLocale ) ; public
Distance : 4

182
Tree	Calendar c = new Calendar ( mLocale ) ; setAcceptedLanguage
Code	Calendar c = new Calendar ( mLocale ) ; setAcceptedLanguage
Distance : 4

183
Tree	Calendar c = new Calendar ( mLocale ) ; +
Code	Calendar c = new Calendar ( mLocale ) ; +
Distance : 4

184
Tree	Calendar c = new Calendar ( mLocale ) ; null
Code	Calendar c = new Calendar ( mLocale ) ; null
Distance : 4

185
Tree	Calendar c = new Calendar ( mLocale ) ; >
Code	Calendar c = new Calendar ( mLocale ) ; >
Distance : 4

186
Tree	Calendar c = new Calendar ( mLocale ) ; new
Code	Calendar c = new Calendar ( mLocale ) ; new
Distance : 4

187
Tree	Calendar c = new Calendar ( mLocale ) ; STRING_CONSTANT
Code	Calendar c = new Calendar ( mLocale ) ; STRING_CONSTANT
Distance : 4

188
Tree	Calendar c = new Calendar ( mLocale ) ; NUMBER_CONSTANT
Code	Calendar c = new Calendar ( mLocale ) ; NUMBER_CONSTANT
Distance : 4

189
Tree	Calendar c = new Calendar ( mLocale ) ; return
Code	Calendar c = new Calendar ( mLocale ) ; return
Distance : 4

190
Tree	Calendar c = new Calendar ( mLocale ) ; e
Code	Calendar c = new Calendar ( mLocale ) ; e
Distance : 4

191
Tree	Calendar c = new Calendar ( mLocale ) ; n
Code	Calendar c = new Calendar ( mLocale ) ; n
Distance : 4

192
Tree	Calendar c = new Calendar ( mLocale ) ; Override
Code	Calendar c = new Calendar ( mLocale ) ; Override
Distance : 4

193
Tree	Calendar c = new Calendar ( mLocale ) ; true
Code	Calendar c = new Calendar ( mLocale ) ; true
Distance : 4

194
Tree	Calendar c = new Calendar ( mLocale ) ; values
Code	Calendar c = new Calendar ( mLocale ) ; values
Distance : 4

195
Tree	Calendar c = new Calendar ( mLocale ) ; {}
Code	Calendar c = new Calendar ( mLocale ) ; {}
Distance : 4

196
Tree	Calendar c = new Calendar ( mLocale ) ; abs
Code	Calendar c = new Calendar ( mLocale ) ; abs
Distance : 4

197
Tree	Calendar c = new Calendar ( mLocale ) ; instant
Code	Calendar c = new Calendar ( mLocale ) ; instant
Distance : 4

198
Tree	Calendar c = new Calendar ( mLocale ) ; static
Code	Calendar c = new Calendar ( mLocale ) ; static
Distance : 4

199
Tree	Calendar c = new Calendar ( mLocale ) ; node
Code	Calendar c = new Calendar ( mLocale ) ; node
Distance : 4

========================================================================


========================================================================
Example Number: 47
Parent Code is: 
if ( chars [ i ] == CHAR_CONS  chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
-------------------------------------------------------------------------------
Child code is: 
if ( chars [ i ] == CHAR_CONS  chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp && ! hasDecPoint ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS})) (250{val=||}) (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=foundDigit}) (249{val=&&}) (38 (207{val=!}) (800{val=hasExp}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS})) (250{val=||}) (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=foundDigit}) (249{val=&&}) (38 (207{val=!}) (800{val=hasExp})) (249{val=&&}) (38 (207{val=!}) (800{val=hasDecPoint}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/24/parent/src_main_java_org_apache_commons_lang3_math_NumberUtils.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } notifyListeners
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } notifyListeners
Distance : 5

1
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } FastMath
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } FastMath
Distance : 5

2
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } expected
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } expected
Distance : 5

3
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } IllegalArgumentException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } IllegalArgumentException
Distance : 5

4
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } super
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } super
Distance : 5

5
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LINE_JOINER
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LINE_JOINER
Distance : 5

6
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } createIllegalArgumentException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } createIllegalArgumentException
Distance : 5

7
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } testSame
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } testSame
Distance : 5

8
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } str
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } str
Distance : 5

9
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fireChangeEvent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fireChangeEvent
Distance : 5

10
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertThat
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertThat
Distance : 5

11
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocation
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocation
Distance : 5

12
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ,
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ,
Distance : 5

13
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } .
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } .
Distance : 5

14
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } x
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } x
Distance : 5

15
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertEquals
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertEquals
Distance : 5

16
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } T
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } T
Distance : 5

17
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } []
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } []
Distance : 5

18
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } scope
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } scope
Distance : 5

19
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getFirstChild
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getFirstChild
Distance : 5

20
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throws
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throws
Distance : 5

21
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } returnZero
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } returnZero
Distance : 5

22
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportCodeChange
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportCodeChange
Distance : 5

23
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sb
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sb
Distance : 5

24
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } name
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } name
Distance : 5

25
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } field
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } field
Distance : 5

26
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } (
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } (
Distance : 5

27
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } =
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } =
Distance : 5

28
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } }
Distance : 5

29
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ()
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ()
Distance : 5

30
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {
Distance : 5

31
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } new
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } new
Distance : 5

32
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } STRING_CONSTANT
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } STRING_CONSTANT
Distance : 5

33
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NUMBER_CONSTANT
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NUMBER_CONSTANT
Distance : 5

34
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return
Distance : 5

35
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } &&
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } &&
Distance : 5

36
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } externs
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } externs
Distance : 5

37
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !=
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !=
Distance : 5

38
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } value
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } value
Distance : 5

39
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkState
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkState
Distance : 5

40
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } int
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } int
Distance : 5

41
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } i
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } i
Distance : 5

42
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Distance : 5

43
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <blank>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <blank>
Distance : 5

44
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Distance : 5

45
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } )
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } )
Distance : 5

46
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkArgument
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkArgument
Distance : 5

47
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } t
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } t
Distance : 5

48
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <s>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <s>
Distance : 5

49
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !
Distance : 5

50
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } d
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } d
Distance : 5

51
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocations
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocations
Distance : 5

52
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } :
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } :
Distance : 5

53
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fail
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fail
Distance : 5

54
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Args
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Args
Distance : 5

55
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } List
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } List
Distance : 5

56
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } m
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } m
Distance : 5

57
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } node
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } node
Distance : 5

58
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

59
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

60
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

61
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

62
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

63
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

64
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

65
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

66
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

67
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

68
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

69
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

70
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

71
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

72
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } index
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } index
Distance : 5

73
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isBlock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isBlock
Distance : 5

74
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getParent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getParent
Distance : 5

75
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } values
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } values
Distance : 5

76
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } equals
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } equals
Distance : 5

77
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } for
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } for
Distance : 5

78
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Invocation
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Invocation
Distance : 5

79
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } js
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } js
Distance : 5

80
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtilities
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtilities
Distance : 5

81
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StrBuilder
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StrBuilder
Distance : 5

82
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setUp
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setUp
Distance : 5

83
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } size
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } size
Distance : 5

84
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LanguageMode.ECMASCRIPT_2015
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

85
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } UnivariateFunction
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } UnivariateFunction
Distance : 5

86
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } result
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } result
Distance : 5

87
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } append
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } append
Distance : 5

88
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } try
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } try
Distance : 5

89
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } nullNotPermitted
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } nullNotPermitted
Distance : 5

90
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } paint
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } paint
Distance : 5

91
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } @
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } @
Distance : 5

92
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } false
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } false
Distance : 5

93
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } double
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } double
Distance : 5

94
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stream
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stream
Distance : 5

95
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } out
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } out
Distance : 5

96
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } protected
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } protected
Distance : 5

97
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } test
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } test
Distance : 5

98
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return;
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return;
Distance : 5

99
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

100
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isEmpty
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isEmpty
Distance : 5

101
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } >
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } >
Distance : 5

102
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } public
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } public
Distance : 5

103
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } final
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } final
Distance : 5

104
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } this
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } this
Distance : 5

105
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <
Distance : 5

106
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } if
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } if
Distance : 5

107
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } parent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } parent
Distance : 5

108
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ArrayList
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ArrayList
Distance : 5

109
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getInstance
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getInstance
Distance : 5

110
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } join
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } join
Distance : 5

111
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } JSType
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } JSType
Distance : 5

112
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

113
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ]
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ]
Distance : 5

114
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkNotNull
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkNotNull
Distance : 5

115
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } length
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } length
Distance : 5

116
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtils
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtils
Distance : 5

117
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Node
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Node
Distance : 5

118
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } null
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } null
Distance : 5

119
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } +
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } +
Distance : 5

120
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } static
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } static
Distance : 5

121
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setAcceptedLanguage
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setAcceptedLanguage
Distance : 5

122
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } c
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } c
Distance : 5

123
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } lines
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } lines
Distance : 5

124
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MathRuntimeException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MathRuntimeException
Distance : 5

125
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {}
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {}
Distance : 5

126
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } true
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } true
Distance : 5

127
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mode
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mode
Distance : 5

128
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } type
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } type
Distance : 5

129
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } -
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } -
Distance : 5

130
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } verify
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } verify
Distance : 5

131
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } boolean
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } boolean
Distance : 5

132
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } char
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } char
Distance : 5

133
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } get
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } get
Distance : 5

134
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportMatcher
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportMatcher
Distance : 5

135
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } matcher
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } matcher
Distance : 5

136
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getMessage
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getMessage
Distance : 5

137
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } else
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } else
Distance : 5

138
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } abs
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } abs
Distance : 5

139
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } instant
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } instant
Distance : 5

140
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } serialised
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } serialised
Distance : 5

141
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } v
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } v
Distance : 5

142
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Preconditions
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Preconditions
Distance : 5

143
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } compiler
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } compiler
Distance : 5

144
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } class
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } class
Distance : 5

145
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <>
Distance : 5

146
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } array
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } array
Distance : 5

147
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } contains
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } contains
Distance : 5

148
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } obj
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } obj
Distance : 5

149
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Integer
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Integer
Distance : 5

150
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } a
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } a
Distance : 5

151
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stroke
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stroke
Distance : 5

152
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MutableTimePeriod
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MutableTimePeriod
Distance : 5

153
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StringBuilder
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StringBuilder
Distance : 5

154
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } traverseEs6
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } traverseEs6
Distance : 5

155
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } PeriodType
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } PeriodType
Distance : 5

156
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } s
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } s
Distance : 5

157
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isNormalBlock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isNormalBlock
Distance : 5

158
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } b
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } b
Distance : 5

159
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Double
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Double
Distance : 5

160
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } clone
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } clone
Distance : 5

161
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } f
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } f
Distance : 5

162
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Override
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Override
Distance : 5

163
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } chrono
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } chrono
Distance : 5

164
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Object
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Object
Distance : 5

165
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } String
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } String
Distance : 5

166
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mock
Distance : 5

167
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } e
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } e
Distance : 5

168
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } catch
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } catch
Distance : 5

169
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throw
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throw
Distance : 5

170
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } void
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } void
Distance : 5

171
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Distance : 5

172
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } long
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } long
Distance : 5

173
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ?
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ?
Distance : 5

174
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } n
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } n
Distance : 5

175
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Exception
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Exception
Distance : 5

176
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertTrue
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertTrue
Distance : 5

177
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } /
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } /
Distance : 5

178
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Fraction
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Fraction
Distance : 5

179
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } [
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } [
Distance : 5

180
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sqrt
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sqrt
Distance : 5

181
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <=
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <=
Distance : 5

182
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ParamChecks
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ParamChecks
Distance : 5

183
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Assert
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Assert
Distance : 5

184
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } *
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } *
Distance : 5

185
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Math
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Math
Distance : 5

186
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } root
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } root
Distance : 5

187
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeUtil
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeUtil
Distance : 5

188
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } wanted
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } wanted
Distance : 5

189
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } data
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } data
Distance : 5

190
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } add
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } add
Distance : 5

191
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } source
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } source
Distance : 5

192
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ex
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ex
Distance : 5

193
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Class
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Class
Distance : 5

194
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } options
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } options
Distance : 5

195
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } p
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } p
Distance : 5

196
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } toString
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } toString
Distance : 5

197
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Test
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Test
Distance : 5

198
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeTraversal
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeTraversal
Distance : 5

199
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mockingProgress
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mockingProgress
Distance : 5

========================================================================


========================================================================
Example Number: 48
Parent Code is: 
cal1 . get ( Calendar.HOUR ) == cal2 . get ( Calendar.HOUR )
-------------------------------------------------------------------------------
Child code is: 
cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=cal1}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR}) (215{val=)})) (236{val===}) (32 (800{val=cal2}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR}) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=cal1}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR_OF_DAY}) (215{val=)})) (236{val===}) (32 (800{val=cal2}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR_OF_DAY}) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/21/parent/src_main_java_org_apache_commons_lang3_time_DateUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	NUMBER_CONSTANT * NUMBER_CONSTANT
Code	NUMBER_CONSTANT * NUMBER_CONSTANT
Distance : 13

1
Tree	userOrderedInput > get
Code	userOrderedInput > get
Distance : 12

2
Tree	RegisteredInvocationsAllTest > get
Code	RegisteredInvocationsAllTest > get
Distance : 12

3
Tree	lastIndex > get
Code	lastIndex > get
Distance : 12

4
Tree	constructorI > get
Code	constructorI > get
Distance : 12

5
Tree	objectMethodsGuru > get
Code	objectMethodsGuru > get
Distance : 12

6
Tree	NPointCrossover > get
Code	NPointCrossover > get
Distance : 12

7
Tree	LineFunction2D > .
Code	LineFunction2D > .
Distance : 12

8
Tree	MockitoVerificationModeTest > get
Code	MockitoVerificationModeTest > get
Distance : 12

9
Tree	markInvocationsAsVerified > get
Code	markInvocationsAsVerified > get
Distance : 12

10
Tree	expressionWithScopeCall > get
Code	expressionWithScopeCall > get
Distance : 12

11
Tree	caseMatches > get
Code	caseMatches > get
Distance : 12

12
Tree	loops > get
Code	loops > get
Distance : 12

13
Tree	ttlObj > get
Code	ttlObj > get
Distance : 12

14
Tree	polymerVersion > get
Code	polymerVersion > get
Distance : 12

15
Tree	umdPattern.activeBranch > get
Code	umdPattern.activeBranch > get
Distance : 12

16
Tree	Time > get
Code	Time > get
Distance : 12

17
Tree	constructorNameNode > get
Code	constructorNameNode > get
Distance : 12

18
Tree	renamerStack > get
Code	renamerStack > get
Distance : 12

19
Tree	allDeps > get
Code	allDeps > get
Distance : 12

20
Tree	renderer1 > get
Code	renderer1 > get
Distance : 12

21
Tree	COMPILATION_LEVEL_MAP > get
Code	COMPILATION_LEVEL_MAP > get
Distance : 12

22
Tree	CglibClassImposterizerTest > get
Code	CglibClassImposterizerTest > get
Distance : 12

23
Tree	CategoryLabelPosition > get
Code	CategoryLabelPosition > get
Distance : 12

24
Tree	stripOutlineVisible > get
Code	stripOutlineVisible > get
Distance : 12

25
Tree	assertPasses > get
Code	assertPasses > get
Distance : 12

26
Tree	incrementValue > get
Code	incrementValue > get
Distance : 12

27
Tree	packed > get
Code	packed > get
Distance : 12

28
Tree	BubbleXYItemLabelGenerator > get
Code	BubbleXYItemLabelGenerator > get
Distance : 12

29
Tree	yield > get
Code	yield > get
Distance : 12

30
Tree	DefaultKeyedValue > get
Code	DefaultKeyedValue > get
Distance : 12

31
Tree	updateCrosshairValues > get
Code	updateCrosshairValues > get
Distance : 12

32
Tree	withPrintSettings > get
Code	withPrintSettings > get
Distance : 12

33
Tree	VerificationModeTest > get
Code	VerificationModeTest > get
Distance : 12

34
Tree	langs > get
Code	langs > get
Distance : 12

35
Tree	typesIndexedByProperty > get
Code	typesIndexedByProperty > get
Distance : 12

36
Tree	CachingMockBytecodeGeneratorTest > get
Code	CachingMockBytecodeGeneratorTest > get
Distance : 12

37
Tree	unequalCounts > get
Code	unequalCounts > get
Distance : 12

38
Tree	orientation2 > get
Code	orientation2 > get
Distance : 12

39
Tree	CompositeTitle > get
Code	CompositeTitle > get
Distance : 12

40
Tree	handleStubDefinition > .
Code	handleStubDefinition > .
Distance : 12

41
Tree	FunctionScopeBuilder > get
Code	FunctionScopeBuilder > get
Distance : 12

42
Tree	guardA > get
Code	guardA > get
Distance : 12

43
Tree	MockingProgressImplTest > get
Code	MockingProgressImplTest > get
Distance : 12

44
Tree	patternParam > get
Code	patternParam > get
Distance : 12

45
Tree	exitEnv > get
Code	exitEnv > get
Distance : 12

46
Tree	pluginSwitch > .
Code	pluginSwitch > .
Distance : 12

47
Tree	MockHandlerImplTest > get
Code	MockHandlerImplTest > get
Distance : 12

48
Tree	Queue > get
Code	Queue > get
Distance : 12

49
Tree	MockHandlerTest > get
Code	MockHandlerTest > get
Distance : 12

50
Tree	enclosingCall > get
Code	enclosingCall > get
Distance : 12

51
Tree	tightenNameTypeAndDontWarn > get
Code	tightenNameTypeAndDontWarn > get
Distance : 12

52
Tree	RegisteredInvocationsTest > get
Code	RegisteredInvocationsTest > get
Distance : 12

53
Tree	InvocationImplTest > get
Code	InvocationImplTest > get
Distance : 12

54
Tree	VerificationModeImplTest > get
Code	VerificationModeImplTest > get
Distance : 12

55
Tree	# > get
Code	# > get
Distance : 12

56
Tree	m.featureSet > get
Code	m.featureSet > get
Distance : 12

57
Tree	subformats > get
Code	subformats > get
Distance : 12

58
Tree	sourceMapOriginalSources > get
Code	sourceMapOriginalSources > get
Distance : 12

59
Tree	convention > get
Code	convention > get
Distance : 12

60
Tree	activeXObject > get
Code	activeXObject > get
Distance : 12

61
Tree	dst > get
Code	dst > get
Distance : 12

62
Tree	assignmentParent > get
Code	assignmentParent > get
Distance : 12

63
Tree	allJsDocParams > get
Code	allJsDocParams > get
Distance : 12

64
Tree	Instantiator > get
Code	Instantiator > get
Distance : 12

65
Tree	defUse > get
Code	defUse > get
Distance : 12

66
Tree	verifiers > get
Code	verifiers > get
Distance : 12

67
Tree	addParserWarning > get
Code	addParserWarning > get
Distance : 12

68
Tree	Transformer.ForMethod > get
Code	Transformer.ForMethod > get
Distance : 12

69
Tree	optimizations > get
Code	optimizations > get
Distance : 12

70
Tree	exprResultNode > get
Code	exprResultNode > get
Distance : 12

71
Tree	thisProps > get
Code	thisProps > get
Distance : 12

72
Tree	shouldAddTypes > get
Code	shouldAddTypes > get
Distance : 12

73
Tree	MarkerAxisBand > get
Code	MarkerAxisBand > get
Distance : 12

74
Tree	FailingOnPurposeBecauseIncorrectStubbingSyntax > get
Code	FailingOnPurposeBecauseIncorrectStubbingSyntax > get
Distance : 12

75
Tree	DefaultClassImposterizerTest > get
Code	DefaultClassImposterizerTest > get
Distance : 12

76
Tree	loadModuleStatement > get
Code	loadModuleStatement > get
Distance : 12

77
Tree	tournamentPopulation > get
Code	tournamentPopulation > get
Distance : 12

78
Tree	MyComparableObjectSeries > get
Code	MyComparableObjectSeries > get
Distance : 12

79
Tree	outcome.booleanValues > get
Code	outcome.booleanValues > get
Distance : 12

80
Tree	ImmutableSortedSet > get
Code	ImmutableSortedSet > get
Distance : 12

81
Tree	j2clClinitPass > get
Code	j2clClinitPass > get
Distance : 12

82
Tree	notifyStubbedAnswerLookup > get
Code	notifyStubbedAnswerLookup > get
Distance : 12

83
Tree	FailingConstructor > get
Code	FailingConstructor > get
Distance : 12

84
Tree	nameGen > get
Code	nameGen > get
Distance : 12

85
Tree	XYPolygonAnnotation > get
Code	XYPolygonAnnotation > get
Distance : 12

86
Tree	TimesTest > get
Code	TimesTest > get
Distance : 12

87
Tree	StatisticalBarRenderer > get
Code	StatisticalBarRenderer > get
Distance : 12

88
Tree	fsave > get
Code	fsave > get
Distance : 12

89
Tree	namedA > get
Code	namedA > get
Distance : 12

90
Tree	curScope > get
Code	curScope > get
Distance : 12

91
Tree	suppressors > get
Code	suppressors > get
Distance : 12

92
Tree	iIntervalConverters > get
Code	iIntervalConverters > get
Distance : 12

93
Tree	Deque > get
Code	Deque > get
Distance : 12

94
Tree	PotentialStubbingProblem > get
Code	PotentialStubbingProblem > get
Distance : 12

95
Tree	partialDerivatives > get
Code	partialDerivatives > get
Distance : 12

96
Tree	SQRT_TWO_PI > get
Code	SQRT_TWO_PI > get
Distance : 12

97
Tree	baseline > get
Code	baseline > get
Distance : 12

98
Tree	PinNeedle > get
Code	PinNeedle > get
Distance : 12

99
Tree	triple2 > get
Code	triple2 > get
Distance : 12

100
Tree	assertPassOrder > get
Code	assertPassOrder > get
Distance : 12

101
Tree	binStats > get
Code	binStats > get
Distance : 12

102
Tree	list0 > get
Code	list0 > get
Distance : 12

103
Tree	iPartialConverters > get
Code	iPartialConverters > get
Distance : 12

104
Tree	numberOfInvocations > .
Code	numberOfInvocations > .
Distance : 12

105
Tree	zb > get
Code	zb > get
Distance : 12

106
Tree	varsInFunctionBody > get
Code	varsInFunctionBody > get
Distance : 12

107
Tree	OngoingVerifyingModeTest > get
Code	OngoingVerifyingModeTest > get
Distance : 12

108
Tree	SRC_PATH > get
Code	SRC_PATH > get
Distance : 12

109
Tree	nameStack > get
Code	nameStack > get
Distance : 12

110
Tree	ZoneInfoLogger > get
Code	ZoneInfoLogger > get
Distance : 12

111
Tree	instantiatorProvider > .
Code	instantiatorProvider > .
Distance : 12

112
Tree	notch > get
Code	notch > get
Distance : 12

113
Tree	TokenType.STAR_STAR_EQUAL > get
Code	TokenType.STAR_STAR_EQUAL > get
Distance : 12

114
Tree	wm > get
Code	wm > get
Distance : 12

115
Tree	BorderArrangement > get
Code	BorderArrangement > get
Distance : 12

116
Tree	iMethods > get
Code	iMethods > get
Distance : 12

117
Tree	visitNamespacePropertyDeclaration > get
Code	visitNamespacePropertyDeclaration > get
Distance : 12

118
Tree	SerializableAndNoDefaultConstructor > get
Code	SerializableAndNoDefaultConstructor > get
Distance : 12

119
Tree	patterns > get
Code	patterns > get
Distance : 12

120
Tree	OtherClass > get
Code	OtherClass > get
Distance : 12

121
Tree	languageLevel > get
Code	languageLevel > get
Distance : 12

122
Tree	scopeType > get
Code	scopeType > get
Distance : 12

123
Tree	CombinedRangeXYPlot > get
Code	CombinedRangeXYPlot > get
Distance : 12

124
Tree	allSymbols > get
Code	allSymbols > get
Distance : 12

125
Tree	StandardPieSectionLabelGenerator > get
Code	StandardPieSectionLabelGenerator > get
Distance : 12

126
Tree	mult > get
Code	mult > get
Distance : 12

127
Tree	typeVarAssigns > get
Code	typeVarAssigns > get
Distance : 12

128
Tree	Single > get
Code	Single > get
Distance : 12

129
Tree	hoistNode > get
Code	hoistNode > get
Distance : 12

130
Tree	moduleResolutionMode > get
Code	moduleResolutionMode > get
Distance : 12

131
Tree	LinkedDurationField > get
Code	LinkedDurationField > get
Distance : 12

132
Tree	HoldingAReference > get
Code	HoldingAReference > get
Distance : 12

133
Tree	iInstantConverters > get
Code	iInstantConverters > get
Distance : 12

134
Tree	certifiedValues > get
Code	certifiedValues > get
Distance : 12

135
Tree	loader > get
Code	loader > get
Distance : 12

136
Tree	clusters > get
Code	clusters > get
Distance : 12

137
Tree	isLhsOfAssign > get
Code	isLhsOfAssign > get
Distance : 12

138
Tree	DateAxis > get
Code	DateAxis > get
Distance : 12

139
Tree	argObjectType > get
Code	argObjectType > get
Distance : 12

140
Tree	the_mock_type > get
Code	the_mock_type > get
Distance : 12

141
Tree	ClassImposterizerTest > get
Code	ClassImposterizerTest > get
Distance : 12

142
Tree	StandardPieToolTipGenerator > get
Code	StandardPieToolTipGenerator > get
Distance : 12

143
Tree	SymmLQEvent > get
Code	SymmLQEvent > get
Distance : 12

144
Tree	inputSourceMaps > get
Code	inputSourceMaps > get
Distance : 12

145
Tree	Map.Entry > get
Code	Map.Entry > get
Distance : 12

146
Tree	AggregateSummaryStatistics > get
Code	AggregateSummaryStatistics > get
Distance : 12

147
Tree	normps > get
Code	normps > get
Distance : 12

148
Tree	annotationEngine > get
Code	annotationEngine > get
Distance : 12

149
Tree	dest.contractionCriterion > get
Code	dest.contractionCriterion > get
Distance : 12

150
Tree	ptile > get
Code	ptile > get
Distance : 12

151
Tree	isUp > get
Code	isUp > get
Distance : 12

152
Tree	serializationSupport > get
Code	serializationSupport > get
Distance : 12

153
Tree	LogFormat > get
Code	LogFormat > get
Distance : 12

154
Tree	protoProps > get
Code	protoProps > get
Distance : 12

155
Tree	testForOf_wrongLoopVarType4a > get
Code	testForOf_wrongLoopVarType4a > get
Distance : 12

156
Tree	zipEntryUrl > get
Code	zipEntryUrl > get
Distance : 12

157
Tree	inheritsCall > get
Code	inheritsCall > get
Distance : 12

158
Tree	WindItemRenderer > get
Code	WindItemRenderer > get
Distance : 12

159
Tree	microsphereData > get
Code	microsphereData > get
Distance : 12

160
Tree	AnswerFactoryTest > get
Code	AnswerFactoryTest > get
Distance : 12

161
Tree	compilationLevelParsed > get
Code	compilationLevelParsed > get
Distance : 12

162
Tree	NormalScopeBuilder > get
Code	NormalScopeBuilder > get
Distance : 12

163
Tree	iPeriodConverters > get
Code	iPeriodConverters > get
Distance : 12

164
Tree	se > get
Code	se > get
Distance : 12

165
Tree	scopeBuilder > get
Code	scopeBuilder > get
Distance : 12

166
Tree	UnpaddedNumberField > get
Code	UnpaddedNumberField > get
Distance : 12

167
Tree	applySingletonGetter > get
Code	applySingletonGetter > get
Distance : 12

168
Tree	nDataPoints > get
Code	nDataPoints > get
Distance : 12

169
Tree	namespaceToRequire > get
Code	namespaceToRequire > get
Distance : 12

170
Tree	newInput > get
Code	newInput > get
Distance : 12

171
Tree	bundler > get
Code	bundler > get
Distance : 12

172
Tree	reserved > get
Code	reserved > get
Distance : 12

173
Tree	test4 > get
Code	test4 > get
Distance : 12

174
Tree	copyList > get
Code	copyList > get
Distance : 12

175
Tree	lvalueType > get
Code	lvalueType > get
Distance : 12

176
Tree	dfa > get
Code	dfa > get
Distance : 12

177
Tree	PolymerPassStaticUtils > get
Code	PolymerPassStaticUtils > get
Distance : 12

178
Tree	UnfinishedMockingSessionException > get
Code	UnfinishedMockingSessionException > get
Distance : 12

179
Tree	markVerifiedInOrder > get
Code	markVerifiedInOrder > get
Distance : 12

180
Tree	wantedInvocation > get
Code	wantedInvocation > get
Distance : 12

181
Tree	closureRelativePath > .
Code	closureRelativePath > .
Distance : 12

182
Tree	hasStaticProp > get
Code	hasStaticProp > get
Distance : 12

183
Tree	LabelBlock > get
Code	LabelBlock > get
Distance : 12

184
Tree	ImmutableList.Builder > get
Code	ImmutableList.Builder > get
Distance : 12

185
Tree	readInputs > get
Code	readInputs > get
Distance : 12

186
Tree	CombinedEventsManager > get
Code	CombinedEventsManager > get
Distance : 12

187
Tree	preciseType > get
Code	preciseType > get
Distance : 12

188
Tree	ClickableStackTracesTest > get
Code	ClickableStackTracesTest > get
Distance : 12

189
Tree	expectStringOrNumber > get
Code	expectStringOrNumber > get
Distance : 12

190
Tree	JOptionPane > get
Code	JOptionPane > get
Distance : 12

191
Tree	rootInput > get
Code	rootInput > get
Distance : 12

192
Tree	widthSufficient > get
Code	widthSufficient > get
Distance : 12

193
Tree	suffixes > get
Code	suffixes > get
Distance : 12

194
Tree	ScopedChangeHandler > get
Code	ScopedChangeHandler > get
Distance : 12

195
Tree	DefaultRegisteredInvocationsTest > get
Code	DefaultRegisteredInvocationsTest > get
Distance : 12

196
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) array
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) array
Distance : 1

197
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) data
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) data
Distance : 1

198
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) add
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) add
Distance : 1

199
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) NodeTraversal
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) NodeTraversal
Distance : 1

========================================================================


========================================================================
Example Number: 49
Parent Code is: 
{ pos += Character . charCount ( Character . codePointAt ( input , pos ) ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ pos += Character . charCount ( Character . codePointAt ( input , pt ) ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=pos}) (237{val=+=}) (32 (800{val=Character}) (235{val=.}) (802{val=charCount}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=codePointAt}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=pos}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=pos}) (237{val=+=}) (32 (800{val=Character}) (235{val=.}) (802{val=charCount}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=codePointAt}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=pt}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/6/parent/src_main_java_org_apache_commons_lang3_text_translate_CharSequenceTranslator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 17

1
Tree	Foo
Code	Foo
Distance : 18

2
Tree	mean
Code	mean
Distance : 18

3
Tree	this
Code	this
Distance : 18

4
Tree	reportAnd
Code	reportAnd
Distance : 18

5
Tree	addAnswer
Code	addAnswer
Distance : 18

6
Tree	copyIn
Code	copyIn
Distance : 18

7
Tree	&
Code	&
Distance : 18

8
Tree	doThrow
Code	doThrow
Distance : 18

9
Tree	reportNot
Code	reportNot
Distance : 18

10
Tree	omega
Code	omega
Distance : 18

11
Tree	LogBeta
Code	LogBeta
Distance : 18

12
Tree	validateNodeType
Code	validateNodeType
Distance : 18

13
Tree	stroke
Code	stroke
Distance : 18

14
Tree	returnChar
Code	returnChar
Distance : 18

15
Tree	ScopeCreator
Code	ScopeCreator
Distance : 18

16
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 18

17
Tree	Month
Code	Month
Distance : 18

18
Tree	i
Code	i
Distance : 18

19
Tree	MockControl
Code	MockControl
Distance : 18

20
Tree	mapToSelf
Code	mapToSelf
Distance : 18

21
Tree	NodeTraversal
Code	NodeTraversal
Distance : 18

22
Tree	Mockito
Code	Mockito
Distance : 18

23
Tree	ISO8601TimeZoneStrategy
Code	ISO8601TimeZoneStrategy
Distance : 18

24
Tree	scale
Code	scale
Distance : 18

25
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 18

26
Tree	FieldUtils
Code	FieldUtils
Distance : 18

27
Tree	return
Code	return
Distance : 18

28
Tree	checkInitialize
Code	checkInitialize
Distance : 18

29
Tree	traversal
Code	traversal
Distance : 18

30
Tree	iStartMillis
Code	iStartMillis
Distance : 18

31
Tree	Result
Code	Result
Distance : 18

32
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 18

33
Tree	()
Code	()
Distance : 18

34
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 18

35
Tree	returnZero
Code	returnZero
Distance : 18

36
Tree	rhs
Code	rhs
Distance : 18

37
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 18

38
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 18

39
Tree	stubber
Code	stubber
Distance : 18

40
Tree	getLastArguments
Code	getLastArguments
Distance : 18

41
Tree	index
Code	index
Distance : 18

42
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 18

43
Tree	int
Code	int
Distance : 18

44
Tree	Equals
Code	Equals
Distance : 18

45
Tree	mock
Code	mock
Distance : 18

46
Tree	triple
Code	triple
Distance : 18

47
Tree	Answer
Code	Answer
Distance : 18

48
Tree	Object
Code	Object
Distance : 18

49
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 18

50
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 18

51
Tree	r
Code	r
Distance : 18

52
Tree	out
Code	out
Distance : 18

53
Tree	last
Code	last
Distance : 18

54
Tree	Separator
Code	Separator
Distance : 18

55
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 18

56
Tree	anyObject
Code	anyObject
Distance : 18

57
Tree	Node
Code	Node
Distance : 18

58
Tree	printer
Code	printer
Distance : 18

59
Tree	test
Code	test
Distance : 18

60
Tree	iValues
Code	iValues
Distance : 18

61
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 18

62
Tree	DateTimeUtils
Code	DateTimeUtils
Distance : 18

63
Tree	defaultReadObject
Code	defaultReadObject
Distance : 18

64
Tree	<>
Code	<>
Distance : 18

65
Tree	checkLocalityOfMarkedCalls
Code	checkLocalityOfMarkedCalls
Distance : 18

66
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 18

67
Tree	min
Code	min
Distance : 18

68
Tree	PolarPlot
Code	PolarPlot
Distance : 18

69
Tree	ConstructorInjection.SimpleArgumentResolver
Code	ConstructorInjection.SimpleArgumentResolver
Distance : 18

70
Tree	TranslationTransform
Code	TranslationTransform
Distance : 18

71
Tree	Returns
Code	Returns
Distance : 18

72
Tree	numerator
Code	numerator
Distance : 18

73
Tree	Function
Code	Function
Distance : 18

74
Tree	return;
Code	return;
Distance : 18

75
Tree	Math
Code	Math
Distance : 18

76
Tree	throws
Code	throws
Distance : 18

77
Tree	source.moment
Code	source.moment
Distance : 18

78
Tree	TypeInferenceMode.BOTH
Code	TypeInferenceMode.BOTH
Distance : 18

79
Tree	penalty
Code	penalty
Distance : 18

80
Tree	LanguageMode.ECMASCRIPT_2015
Code	LanguageMode.ECMASCRIPT_2015
Distance : 18

81
Tree	AnswerFactory
Code	AnswerFactory
Distance : 18

82
Tree	nvars
Code	nvars
Distance : 18

83
Tree	ArithmeticUtils
Code	ArithmeticUtils
Distance : 18

84
Tree	matcher
Code	matcher
Distance : 18

85
Tree	key
Code	key
Distance : 18

86
Tree	typeCheck
Code	typeCheck
Distance : 18

87
Tree	setEndMillis
Code	setEndMillis
Distance : 18

88
Tree	setShapesVisible
Code	setShapesVisible
Distance : 18

89
Tree	continue;
Code	continue;
Distance : 18

90
Tree	Comparable
Code	Comparable
Distance : 18

91
Tree	text
Code	text
Distance : 18

92
Tree	TestSubObject
Code	TestSubObject
Distance : 18

93
Tree	doNothing
Code	doNothing
Distance : 18

94
Tree	stubbed
Code	stubbed
Distance : 18

95
Tree	assertPureCallsMarked
Code	assertPureCallsMarked
Distance : 18

96
Tree	o.length
Code	o.length
Distance : 18

97
Tree	SerializableClass
Code	SerializableClass
Distance : 18

98
Tree	assertTrue
Code	assertTrue
Distance : 18

99
Tree	setField
Code	setField
Distance : 18

100
Tree	checkState
Code	checkState
Distance : 18

101
Tree	Paint
Code	Paint
Distance : 18

102
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 18

103
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 18

104
Tree	testModules
Code	testModules
Distance : 18

105
Tree	node
Code	node
Distance : 18

106
Tree	break;
Code	break;
Distance : 18

107
Tree	;
Code	;
Distance : 17

108
Tree	paint
Code	paint
Distance : 18

109
Tree	checkArgument
Code	checkArgument
Distance : 18

110
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 18

111
Tree	null
Code	null
Distance : 18

112
Tree	do
Code	do
Distance : 18

113
Tree	*
Code	*
Distance : 18

114
Tree	value
Code	value
Distance : 18

115
Tree	[]
Code	[]
Distance : 18

116
Tree	out.value
Code	out.value
Distance : 18

117
Tree	LastArguments
Code	LastArguments
Distance : 18

118
Tree	logBeta
Code	logBeta
Distance : 18

119
Tree	ret
Code	ret
Distance : 18

120
Tree	public
Code	public
Distance : 18

121
Tree	long
Code	long
Distance : 18

122
Tree	float
Code	float
Distance : 18

123
Tree	(
Code	(
Distance : 17

124
Tree	extends
Code	extends
Distance : 18

125
Tree	scriptRoot
Code	scriptRoot
Distance : 18

126
Tree	for
Code	for
Distance : 18

127
Tree	private
Code	private
Distance : 18

128
Tree	:
Code	:
Distance : 18

129
Tree	mockitoStubber
Code	mockitoStubber
Distance : 18

130
Tree	try
Code	try
Distance : 18

131
Tree	static
Code	static
Distance : 18

132
Tree	@
Code	@
Distance : 18

133
Tree	if
Code	if
Distance : 18

134
Tree	super();
Code	super();
Distance : 18

135
Tree	<=
Code	<=
Distance : 18

136
Tree	]
Code	]
Distance : 18

137
Tree	AbstractScope
Code	AbstractScope
Distance : 18

138
Tree	
Code	
Distance : 18

139
Tree	new
Code	new
Distance : 18

140
Tree	verify
Code	verify
Distance : 18

141
Tree	IMethods
Code	IMethods
Distance : 18

142
Tree	{}
Code	{}
Distance : 18

143
Tree	final
Code	final
Distance : 18

144
Tree	++
Code	++
Distance : 18

145
Tree	&&
Code	&&
Distance : 18

146
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 18

147
Tree	catch
Code	catch
Distance : 18

148
Tree	+=
Code	+=
Distance : 17

149
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 18

150
Tree	throwable
Code	throwable
Distance : 18

151
Tree	times
Code	times
Distance : 18

152
Tree	j
Code	j
Distance : 18

153
Tree	CharSequence
Code	CharSequence
Distance : 18

154
Tree	distribution
Code	distribution
Distance : 18

155
Tree	VerificationModeImpl
Code	VerificationModeImpl
Distance : 18

156
Tree	abstract
Code	abstract
Distance : 18

157
Tree	synchronized
Code	synchronized
Distance : 18

158
Tree	fn
Code	fn
Distance : 18

159
Tree	Args
Code	Args
Distance : 18

160
Tree	fieldType
Code	fieldType
Distance : 18

161
Tree	N
Code	N
Distance : 18

162
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 18

163
Tree	Array
Code	Array
Distance : 18

164
Tree	assertEquals
Code	assertEquals
Distance : 18

165
Tree	setSeedInternal
Code	setSeedInternal
Distance : 18

166
Tree	k
Code	k
Distance : 18

167
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 18

168
Tree	getEndMillis
Code	getEndMillis
Distance : 18

169
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 18

170
Tree	setStartMillis
Code	setStartMillis
Distance : 18

171
Tree	Color
Code	Color
Distance : 18

172
Tree	DateParser
Code	DateParser
Distance : 18

173
Tree	-
Code	-
Distance : 18

174
Tree	testError
Code	testError
Distance : 18

175
Tree	Rectangle2D
Code	Rectangle2D
Distance : 18

176
Tree	messageContains
Code	messageContains
Distance : 18

177
Tree	pow
Code	pow
Distance : 18

178
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 18

179
Tree	ParamChecks
Code	ParamChecks
Distance : 18

180
Tree	newValues
Code	newValues
Distance : 18

181
Tree	strictly
Code	strictly
Distance : 18

182
Tree	random
Code	random
Distance : 18

183
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 18

184
Tree	stub
Code	stub
Distance : 18

185
Tree	path
Code	path
Distance : 18

186
Tree	S
Code	S
Distance : 18

187
Tree	stream
Code	stream
Distance : 18

188
Tree	doAnswer
Code	doAnswer
Distance : 18

189
Tree	SerialUtils
Code	SerialUtils
Distance : 18

190
Tree	setEntry
Code	setEntry
Distance : 18

191
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 18

192
Tree	position
Code	position
Distance : 18

193
Tree	testTypes
Code	testTypes
Distance : 18

194
Tree	checkNotNull
Code	checkNotNull
Distance : 18

195
Tree	)
Code	)
Distance : 17

196
Tree	RenameLabels
Code	RenameLabels
Distance : 18

197
Tree	fail
Code	fail
Distance : 18

198
Tree	T
Code	T
Distance : 18

199
Tree	protected
Code	protected
Distance : 18

========================================================================


========================================================================
Example Number: 50
Parent Code is: 
final CharSequence result = lookupMap . get ( subSeq ) ;
-------------------------------------------------------------------------------
Child code is: 
final CharSequence result = lookupMap . get ( subSeq . toString () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CharSequence})) (59 (800{val=result}) (204{val==}) (32 (800{val=lookupMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=subSeq}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CharSequence})) (59 (800{val=result}) (204{val==}) (32 (800{val=lookupMap}) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=subSeq}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/4/parent/src_main_java_org_apache_commons_lang3_text_translate_LookupTranslator.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	static CharSequence result = lookupMap . toString ( result ) ;
Code	static CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

1
Tree	public CharSequence result = result . get ( subSeq ) ;
Code	public CharSequence result = result . get ( subSeq ) ;
Distance : 5

2
Tree	abstract CharSequence result = lookupMap . get ( subSeq ) ;
Code	abstract CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

3
Tree	private CharSequence result = result . get ( subSeq ) ;
Code	private CharSequence result = result . get ( subSeq ) ;
Distance : 5

4
Tree	static CharSequence result = result . get ( subSeq ) ;
Code	static CharSequence result = result . get ( subSeq ) ;
Distance : 5

5
Tree	public CharSequence result = lookupMap . get ( result ) ;
Code	public CharSequence result = lookupMap . get ( result ) ;
Distance : 5

6
Tree	private CharSequence result = lookupMap . get ( result ) ;
Code	private CharSequence result = lookupMap . get ( result ) ;
Distance : 5

7
Tree	protected CharSequence result = result . get ( subSeq ) ;
Code	protected CharSequence result = result . get ( subSeq ) ;
Distance : 5

8
Tree	static CharSequence result = lookupMap . get ( result ) ;
Code	static CharSequence result = lookupMap . get ( result ) ;
Distance : 5

9
Tree	protected CharSequence result = lookupMap . get ( subSeq ) ;
Code	protected CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

10
Tree	protected CharSequence result = lookupMap . get ( result ) ;
Code	protected CharSequence result = lookupMap . get ( result ) ;
Distance : 5

11
Tree	abstract CharSequence result = result . get ( subSeq ) ;
Code	abstract CharSequence result = result . get ( subSeq ) ;
Distance : 5

12
Tree	public CharSequence result = result . get ( result ) ;
Code	public CharSequence result = result . get ( result ) ;
Distance : 6

13
Tree	abstract CharSequence result = lookupMap . get ( result ) ;
Code	abstract CharSequence result = lookupMap . get ( result ) ;
Distance : 5

14
Tree	private CharSequence result = result . get ( result ) ;
Code	private CharSequence result = result . get ( result ) ;
Distance : 6

15
Tree	static CharSequence result = result . get ( result ) ;
Code	static CharSequence result = result . get ( result ) ;
Distance : 6

16
Tree	public CharSequence result = lookupMap . toString ( result ) ;
Code	public CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

17
Tree	public CharSequence result = result . get ( subSeq ) ;
Code	public CharSequence result = result . get ( subSeq ) ;
Distance : 5

18
Tree	abstract CharSequence result = result . toString ( result ) ;
Code	abstract CharSequence result = result . toString ( result ) ;
Distance : 7

19
Tree	final CharSequence result = lookupMap . toString ( subSeq ) ;
Code	final CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 4

20
Tree	protected CharSequence result = result . get ( result ) ;
Code	protected CharSequence result = result . get ( result ) ;
Distance : 6

21
Tree	static CharSequence result = lookupMap . get ( subSeq ) ;
Code	static CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

22
Tree	public CharSequence result = lookupMap . get ( subSeq ) ;
Code	public CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

23
Tree	public CharSequence result = lookupMap . toString ( subSeq ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

24
Tree	private CharSequence result = lookupMap . toString ( subSeq ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

25
Tree	static CharSequence result = lookupMap . toString ( subSeq ) ;
Code	static CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

26
Tree	public CharSequence result = lookupMap . get ( subSeq ) ;
Code	public CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

27
Tree	protected CharSequence result = lookupMap . toString ( subSeq ) ;
Code	protected CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

28
Tree	private CharSequence result = lookupMap . get ( subSeq ) ;
Code	private CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

29
Tree	static CharSequence result = lookupMap . get ( subSeq ) ;
Code	static CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

30
Tree	abstract CharSequence result = lookupMap . toString ( subSeq ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

31
Tree	private CharSequence result = lookupMap . get ( subSeq ) ;
Code	private CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

32
Tree	public CharSequence result = result . toString ( subSeq ) ;
Code	public CharSequence result = result . toString ( subSeq ) ;
Distance : 6

33
Tree	protected CharSequence result = lookupMap . get ( subSeq ) ;
Code	protected CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

34
Tree	protected CharSequence result = result . get ( result ) ;
Code	protected CharSequence result = result . get ( result ) ;
Distance : 6

35
Tree	static CharSequence result = result . toString ( subSeq ) ;
Code	static CharSequence result = result . toString ( subSeq ) ;
Distance : 6

36
Tree	synchronized CharSequence result = lookupMap . get ( subSeq ) ;
Code	synchronized CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

37
Tree	final CharSequence result = lookupMap . get ( subSeq ) ;
Code	final CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 3

38
Tree	final CharSequence result = result . get ( subSeq ) ;
Code	final CharSequence result = result . get ( subSeq ) ;
Distance : 4

39
Tree	final CharSequence result = lookupMap . get ( result ) ;
Code	final CharSequence result = lookupMap . get ( result ) ;
Distance : 4

40
Tree	final CharSequence result = result . get ( result ) ;
Code	final CharSequence result = result . get ( result ) ;
Distance : 5

41
Tree	private CharSequence result = result . toString ( subSeq ) ;
Code	private CharSequence result = result . toString ( subSeq ) ;
Distance : 6

42
Tree	final CharSequence result = result . toString ( subSeq ) ;
Code	final CharSequence result = result . toString ( subSeq ) ;
Distance : 5

43
Tree	protected CharSequence result = result . toString ( subSeq ) ;
Code	protected CharSequence result = result . toString ( subSeq ) ;
Distance : 6

44
Tree	final CharSequence result = lookupMap . toString ( result ) ;
Code	final CharSequence result = lookupMap . toString ( result ) ;
Distance : 5

45
Tree	abstract CharSequence result = lookupMap . get ( subSeq ) ;
Code	abstract CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

46
Tree	private CharSequence result = result . get ( subSeq ) ;
Code	private CharSequence result = result . get ( subSeq ) ;
Distance : 5

47
Tree	public CharSequence result = lookupMap . get ( result ) ;
Code	public CharSequence result = lookupMap . get ( result ) ;
Distance : 5

48
Tree	synchronized CharSequence result = result . toString ( subSeq ) ;
Code	synchronized CharSequence result = result . toString ( subSeq ) ;
Distance : 6

49
Tree	static CharSequence result = result . get ( subSeq ) ;
Code	static CharSequence result = result . get ( subSeq ) ;
Distance : 5

50
Tree	private CharSequence result = lookupMap . get ( result ) ;
Code	private CharSequence result = lookupMap . get ( result ) ;
Distance : 5

51
Tree	abstract CharSequence result = result . toString ( subSeq ) ;
Code	abstract CharSequence result = result . toString ( subSeq ) ;
Distance : 6

52
Tree	protected CharSequence result = result . get ( subSeq ) ;
Code	protected CharSequence result = result . get ( subSeq ) ;
Distance : 5

53
Tree	static CharSequence result = lookupMap . get ( result ) ;
Code	static CharSequence result = lookupMap . get ( result ) ;
Distance : 5

54
Tree	abstract CharSequence result = lookupMap . toString ( result ) ;
Code	abstract CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

55
Tree	public CharSequence result = result . toString ( result ) ;
Code	public CharSequence result = result . toString ( result ) ;
Distance : 7

56
Tree	private CharSequence result = result . toString ( result ) ;
Code	private CharSequence result = result . toString ( result ) ;
Distance : 7

57
Tree	final CharSequence result = lookupMap . toString ( subSeq ) ;
Code	final CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 4

58
Tree	protected CharSequence result = lookupMap . get ( result ) ;
Code	protected CharSequence result = lookupMap . get ( result ) ;
Distance : 5

59
Tree	static CharSequence result = result . toString ( result ) ;
Code	static CharSequence result = result . toString ( result ) ;
Distance : 7

60
Tree	synchronized CharSequence result = lookupMap . toString ( subSeq ) ;
Code	synchronized CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

61
Tree	abstract CharSequence result = result . get ( subSeq ) ;
Code	abstract CharSequence result = result . get ( subSeq ) ;
Distance : 5

62
Tree	public CharSequence result = result . get ( result ) ;
Code	public CharSequence result = result . get ( result ) ;
Distance : 6

63
Tree	protected CharSequence result = result . toString ( result ) ;
Code	protected CharSequence result = result . toString ( result ) ;
Distance : 7

64
Tree	static CharSequence result = lookupMap . toString ( result ) ;
Code	static CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

65
Tree	protected CharSequence result = result . toString ( subSeq ) ;
Code	protected CharSequence result = result . toString ( subSeq ) ;
Distance : 6

66
Tree	protected CharSequence result = lookupMap . toString ( result ) ;
Code	protected CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

67
Tree	static CharSequence result = result . get ( result ) ;
Code	static CharSequence result = result . get ( result ) ;
Distance : 6

68
Tree	synchronized CharSequence result = lookupMap . toString ( result ) ;
Code	synchronized CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

69
Tree	abstract CharSequence result = result . get ( result ) ;
Code	abstract CharSequence result = result . get ( result ) ;
Distance : 6

70
Tree	synchronized CharSequence result = result . get ( subSeq ) ;
Code	synchronized CharSequence result = result . get ( subSeq ) ;
Distance : 5

71
Tree	abstract CharSequence result = lookupMap . get ( result ) ;
Code	abstract CharSequence result = lookupMap . get ( result ) ;
Distance : 5

72
Tree	final CharSequence result = result . toString ( result ) ;
Code	final CharSequence result = result . toString ( result ) ;
Distance : 6

73
Tree	synchronized CharSequence result = result . toString ( result ) ;
Code	synchronized CharSequence result = result . toString ( result ) ;
Distance : 7

74
Tree	synchronized CharSequence result = result . get ( result ) ;
Code	synchronized CharSequence result = result . get ( result ) ;
Distance : 6

75
Tree	public CharSequence result = lookupMap . toString ( subSeq ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

76
Tree	private CharSequence result = lookupMap . toString ( subSeq ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

77
Tree	synchronized CharSequence result = lookupMap . get ( result ) ;
Code	synchronized CharSequence result = lookupMap . get ( result ) ;
Distance : 5

78
Tree	protected CharSequence result = lookupMap . toString ( subSeq ) ;
Code	protected CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

79
Tree	static CharSequence result = lookupMap . toString ( subSeq ) ;
Code	static CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

80
Tree	private CharSequence result = lookupMap . toString ( result ) ;
Code	private CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

81
Tree	synchronized CharSequence result = lookupMap . get ( subSeq ) ;
Code	synchronized CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 4

82
Tree	static CharSequence result = result . toString ( subSeq ) ;
Code	static CharSequence result = result . toString ( subSeq ) ;
Distance : 6

83
Tree	private CharSequence result = result . get ( result ) ;
Code	private CharSequence result = result . get ( result ) ;
Distance : 6

84
Tree	private CharSequence result = result . toString ( subSeq ) ;
Code	private CharSequence result = result . toString ( subSeq ) ;
Distance : 6

85
Tree	abstract CharSequence result = lookupMap . toString ( subSeq ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

86
Tree	public CharSequence result = result . toString ( subSeq ) ;
Code	public CharSequence result = result . toString ( subSeq ) ;
Distance : 6

87
Tree	public CharSequence result = lookupMap . toString ( result ) ;
Code	public CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

88
Tree	final CharSequence result = lookupMap . get ( subSeq ) ;
Code	final CharSequence result = lookupMap . get ( subSeq ) ;
Distance : 3

89
Tree	synchronized CharSequence result = result . get ( result ) ;
Code	synchronized CharSequence result = result . get ( result ) ;
Distance : 6

90
Tree	final CharSequence result = result . toString ( result ) ;
Code	final CharSequence result = result . toString ( result ) ;
Distance : 6

91
Tree	synchronized CharSequence result = lookupMap . get ( result ) ;
Code	synchronized CharSequence result = lookupMap . get ( result ) ;
Distance : 5

92
Tree	final CharSequence result = lookupMap . get ( result ) ;
Code	final CharSequence result = lookupMap . get ( result ) ;
Distance : 4

93
Tree	synchronized CharSequence result = result . get ( subSeq ) ;
Code	synchronized CharSequence result = result . get ( subSeq ) ;
Distance : 5

94
Tree	final CharSequence result = result . get ( subSeq ) ;
Code	final CharSequence result = result . get ( subSeq ) ;
Distance : 4

95
Tree	abstract CharSequence result = result . get ( result ) ;
Code	abstract CharSequence result = result . get ( result ) ;
Distance : 6

96
Tree	final CharSequence result = lookupMap . toString ( result ) ;
Code	final CharSequence result = lookupMap . toString ( result ) ;
Distance : 5

97
Tree	final CharSequence result = result . toString ( subSeq ) ;
Code	final CharSequence result = result . toString ( subSeq ) ;
Distance : 5

98
Tree	private CharSequence result = lookupMap . toString ( result ) ;
Code	private CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

99
Tree	final CharSequence result = result . get ( result ) ;
Code	final CharSequence result = result . get ( result ) ;
Distance : 5

100
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; parent
Code	final CharSequence result = lookupMap . get ( subSeq ) ; parent
Distance : 4

101
Tree	public CharSequence result = result . toString ( result ) ;
Code	public CharSequence result = result . toString ( result ) ;
Distance : 7

102
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; testSame
Code	final CharSequence result = lookupMap . get ( subSeq ) ; testSame
Distance : 4

103
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; str
Code	final CharSequence result = lookupMap . get ( subSeq ) ; str
Distance : 4

104
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; fireChangeEvent
Code	final CharSequence result = lookupMap . get ( subSeq ) ; fireChangeEvent
Distance : 4

105
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; assertThat
Code	final CharSequence result = lookupMap . get ( subSeq ) ; assertThat
Distance : 4

106
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; invocation
Code	final CharSequence result = lookupMap . get ( subSeq ) ; invocation
Distance : 4

107
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; value
Code	final CharSequence result = lookupMap . get ( subSeq ) ; value
Distance : 4

108
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; assertEquals
Code	final CharSequence result = lookupMap . get ( subSeq ) ; assertEquals
Distance : 4

109
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; []
Code	final CharSequence result = lookupMap . get ( subSeq ) ; []
Distance : 4

110
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; nullNotPermitted
Code	final CharSequence result = lookupMap . get ( subSeq ) ; nullNotPermitted
Distance : 4

111
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; test
Code	final CharSequence result = lookupMap . get ( subSeq ) ; test
Distance : 4

112
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; @
Code	final CharSequence result = lookupMap . get ( subSeq ) ; @
Distance : 4

113
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; false
Code	final CharSequence result = lookupMap . get ( subSeq ) ; false
Distance : 4

114
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; double
Code	final CharSequence result = lookupMap . get ( subSeq ) ; double
Distance : 4

115
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; &&
Code	final CharSequence result = lookupMap . get ( subSeq ) ; &&
Distance : 4

116
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; T
Code	final CharSequence result = lookupMap . get ( subSeq ) ; T
Distance : 4

117
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; !
Code	final CharSequence result = lookupMap . get ( subSeq ) ; !
Distance : 4

118
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; n
Code	final CharSequence result = lookupMap . get ( subSeq ) ; n
Distance : 4

119
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; this
Code	final CharSequence result = lookupMap . get ( subSeq ) ; this
Distance : 4

120
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; catch
Code	final CharSequence result = lookupMap . get ( subSeq ) ; catch
Distance : 4

121
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; m
Code	final CharSequence result = lookupMap . get ( subSeq ) ; m
Distance : 4

122
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; List
Code	final CharSequence result = lookupMap . get ( subSeq ) ; List
Distance : 4

123
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; createIllegalArgumentException
Code	final CharSequence result = lookupMap . get ( subSeq ) ; createIllegalArgumentException
Distance : 4

124
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; Args
Code	final CharSequence result = lookupMap . get ( subSeq ) ; Args
Distance : 4

125
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; x
Code	final CharSequence result = lookupMap . get ( subSeq ) ; x
Distance : 4

126
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; !=
Code	final CharSequence result = lookupMap . get ( subSeq ) ; !=
Distance : 4

127
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; i
Code	final CharSequence result = lookupMap . get ( subSeq ) ; i
Distance : 4

128
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; super
Code	final CharSequence result = lookupMap . get ( subSeq ) ; super
Distance : 4

129
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; =
Code	final CharSequence result = lookupMap . get ( subSeq ) ; =
Distance : 4

130
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; }
Code	final CharSequence result = lookupMap . get ( subSeq ) ; }
Distance : 4

131
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ()
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ()
Distance : 4

132
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; {
Code	final CharSequence result = lookupMap . get ( subSeq ) ; {
Distance : 4

133
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; new
Code	final CharSequence result = lookupMap . get ( subSeq ) ; new
Distance : 4

134
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; STRING_CONSTANT
Code	final CharSequence result = lookupMap . get ( subSeq ) ; STRING_CONSTANT
Distance : 4

135
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; int
Code	final CharSequence result = lookupMap . get ( subSeq ) ; int
Distance : 4

136
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; NUMBER_CONSTANT
Code	final CharSequence result = lookupMap . get ( subSeq ) ; NUMBER_CONSTANT
Distance : 4

137
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; +
Code	final CharSequence result = lookupMap . get ( subSeq ) ; +
Distance : 4

138
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; null
Code	final CharSequence result = lookupMap . get ( subSeq ) ; null
Distance : 4

139
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; >
Code	final CharSequence result = lookupMap . get ( subSeq ) ; >
Distance : 4

140
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; public
Code	final CharSequence result = lookupMap . get ( subSeq ) ; public
Distance : 4

141
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; final
Code	final CharSequence result = lookupMap . get ( subSeq ) ; final
Distance : 4

142
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; <
Code	final CharSequence result = lookupMap . get ( subSeq ) ; <
Distance : 4

143
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; if
Code	final CharSequence result = lookupMap . get ( subSeq ) ; if
Distance : 4

144
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; compiler
Code	final CharSequence result = lookupMap . get ( subSeq ) ; compiler
Distance : 4

145
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; return
Code	final CharSequence result = lookupMap . get ( subSeq ) ; return
Distance : 4

146
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; String
Code	final CharSequence result = lookupMap . get ( subSeq ) ; String
Distance : 4

147
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; checkState
Code	final CharSequence result = lookupMap . get ( subSeq ) ; checkState
Distance : 4

148
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; LINE_JOINER
Code	final CharSequence result = lookupMap . get ( subSeq ) ; LINE_JOINER
Distance : 4

149
Tree	abstract CharSequence result = result . toString ( subSeq ) ;
Code	abstract CharSequence result = result . toString ( subSeq ) ;
Distance : 6

150
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; e
Code	final CharSequence result = lookupMap . get ( subSeq ) ; e
Distance : 4

151
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ,
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ,
Distance : 4

152
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; mock
Code	final CharSequence result = lookupMap . get ( subSeq ) ; mock
Distance : 4

153
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; array
Code	final CharSequence result = lookupMap . get ( subSeq ) ; array
Distance : 4

154
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ParamChecks
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ParamChecks
Distance : 4

155
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; Object
Code	final CharSequence result = lookupMap . get ( subSeq ) ; Object
Distance : 4

156
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; {}
Code	final CharSequence result = lookupMap . get ( subSeq ) ; {}
Distance : 4

157
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; true
Code	final CharSequence result = lookupMap . get ( subSeq ) ; true
Distance : 4

158
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; mode
Code	final CharSequence result = lookupMap . get ( subSeq ) ; mode
Distance : 4

159
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ArrayList
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ArrayList
Distance : 4

160
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; Preconditions
Code	final CharSequence result = lookupMap . get ( subSeq ) ; Preconditions
Distance : 4

161
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; [
Code	final CharSequence result = lookupMap . get ( subSeq ) ; [
Distance : 4

162
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ]
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ]
Distance : 4

163
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; -
Code	final CharSequence result = lookupMap . get ( subSeq ) ; -
Distance : 4

164
Tree	protected CharSequence result = lookupMap . toString ( result ) ;
Code	protected CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

165
Tree	synchronized CharSequence result = result . toString ( result ) ;
Code	synchronized CharSequence result = result . toString ( result ) ;
Distance : 7

166
Tree	synchronized CharSequence result = result . toString ( subSeq ) ;
Code	synchronized CharSequence result = result . toString ( subSeq ) ;
Distance : 6

167
Tree	abstract CharSequence result = result . toString ( result ) ;
Code	abstract CharSequence result = result . toString ( result ) ;
Distance : 7

168
Tree	protected CharSequence result = result . toString ( result ) ;
Code	protected CharSequence result = result . toString ( result ) ;
Distance : 7

169
Tree	synchronized CharSequence result = lookupMap . toString ( subSeq ) ;
Code	synchronized CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

170
Tree	static CharSequence result = result . toString ( result ) ;
Code	static CharSequence result = result . toString ( result ) ;
Distance : 7

171
Tree	private CharSequence result = result . toString ( result ) ;
Code	private CharSequence result = result . toString ( result ) ;
Distance : 7

172
Tree	abstract CharSequence result = lookupMap . toString ( result ) ;
Code	abstract CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

173
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; Override
Code	final CharSequence result = lookupMap . get ( subSeq ) ; Override
Distance : 4

174
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; :
Code	final CharSequence result = lookupMap . get ( subSeq ) ; :
Distance : 4

175
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; f
Code	final CharSequence result = lookupMap . get ( subSeq ) ; f
Distance : 4

176
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; <>
Code	final CharSequence result = lookupMap . get ( subSeq ) ; <>
Distance : 4

177
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; .
Code	final CharSequence result = lookupMap . get ( subSeq ) ; .
Distance : 4

178
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; )
Code	final CharSequence result = lookupMap . get ( subSeq ) ; )
Distance : 4

179
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ;
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ;
Distance : 4

180
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; <blank>
Code	final CharSequence result = lookupMap . get ( subSeq ) ; <blank>
Distance : 4

181
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; final
Code	final CharSequence result = lookupMap . get ( subSeq ) ; final
Distance : 4

182
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; <s>
Code	final CharSequence result = lookupMap . get ( subSeq ) ; <s>
Distance : 4

183
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; (
Code	final CharSequence result = lookupMap . get ( subSeq ) ; (
Distance : 4

184
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; *
Code	final CharSequence result = lookupMap . get ( subSeq ) ; *
Distance : 4

185
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; type
Code	final CharSequence result = lookupMap . get ( subSeq ) ; type
Distance : 4

186
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; boolean
Code	final CharSequence result = lookupMap . get ( subSeq ) ; boolean
Distance : 4

187
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; join
Code	final CharSequence result = lookupMap . get ( subSeq ) ; join
Distance : 4

188
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; serialised
Code	final CharSequence result = lookupMap . get ( subSeq ) ; serialised
Distance : 4

189
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; getInstance
Code	final CharSequence result = lookupMap . get ( subSeq ) ; getInstance
Distance : 4

190
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; try
Code	final CharSequence result = lookupMap . get ( subSeq ) ; try
Distance : 4

191
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; paint
Code	final CharSequence result = lookupMap . get ( subSeq ) ; paint
Distance : 4

192
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; fail
Code	final CharSequence result = lookupMap . get ( subSeq ) ; fail
Distance : 4

193
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; MathRuntimeException
Code	final CharSequence result = lookupMap . get ( subSeq ) ; MathRuntimeException
Distance : 4

194
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; throw
Code	final CharSequence result = lookupMap . get ( subSeq ) ; throw
Distance : 4

195
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; void
Code	final CharSequence result = lookupMap . get ( subSeq ) ; void
Distance : 4

196
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; ==
Code	final CharSequence result = lookupMap . get ( subSeq ) ; ==
Distance : 4

197
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; result
Code	final CharSequence result = lookupMap . get ( subSeq ) ; result
Distance : 4

198
Tree	final CharSequence result = lookupMap . get ( subSeq ) ; class
Code	final CharSequence result = lookupMap . get ( subSeq ) ; class
Distance : 4

199
Tree	synchronized CharSequence result = lookupMap . toString ( result ) ;
Code	synchronized CharSequence result = lookupMap . toString ( result ) ;
Distance : 6

========================================================================


========================================================================
Example Number: 51
Parent Code is: 
final int cols = problem . getAllParameters () . length ;
-------------------------------------------------------------------------------
Child code is: 
final int cols = problem . getUnboundParameters () . length ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=cols}) (204{val==}) (22 (32 (800{val=problem}) (235{val=.}) (802{val=getAllParameters}) (216{val=()})) (235{val=.}) (800{val=length}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=cols}) (204{val==}) (22 (32 (800{val=problem}) (235{val=.}) (802{val=getUnboundParameters}) (216{val=()})) (235{val=.}) (800{val=length}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/100/parent/src_java_org_apache_commons_math_estimation_AbstractEstimator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	final int cols = problem . getAllParameters () . length ;
Code	final int cols = problem . getAllParameters () . length ;
Distance : 1

1
Tree	final int problem = problem . getAllParameters () . length ;
Code	final int problem = problem . getAllParameters () . length ;
Distance : 2

2
Tree	final byte cols = problem . getAllParameters () . length ;
Code	final byte cols = problem . getAllParameters () . length ;
Distance : 2

3
Tree	final boolean cols = problem . getAllParameters () . length ;
Code	final boolean cols = problem . getAllParameters () . length ;
Distance : 2

4
Tree	final int cols = cols . getAllParameters () . length ;
Code	final int cols = cols . getAllParameters () . length ;
Distance : 2

5
Tree	final char cols = problem . getAllParameters () . length ;
Code	final char cols = problem . getAllParameters () . length ;
Distance : 2

6
Tree	final long cols = problem . getAllParameters () . length ;
Code	final long cols = problem . getAllParameters () . length ;
Distance : 2

7
Tree	final int length = problem . getAllParameters () . length ;
Code	final int length = problem . getAllParameters () . length ;
Distance : 2

8
Tree	public int cols = problem . getAllParameters () . length ;
Code	public int cols = problem . getAllParameters () . length ;
Distance : 2

9
Tree	final double problem = problem . getAllParameters () . length ;
Code	final double problem = problem . getAllParameters () . length ;
Distance : 3

10
Tree	private int cols = problem . getAllParameters () . length ;
Code	private int cols = problem . getAllParameters () . length ;
Distance : 2

11
Tree	final void cols = problem . getAllParameters () . length ;
Code	final void cols = problem . getAllParameters () . length ;
Distance : 2

12
Tree	final short cols = problem . getAllParameters () . length ;
Code	final short cols = problem . getAllParameters () . length ;
Distance : 2

13
Tree	final float cols = problem . getAllParameters () . length ;
Code	final float cols = problem . getAllParameters () . length ;
Distance : 2

14
Tree	final byte problem = problem . getAllParameters () . length ;
Code	final byte problem = problem . getAllParameters () . length ;
Distance : 3

15
Tree	static int cols = problem . getAllParameters () . length ;
Code	static int cols = problem . getAllParameters () . length ;
Distance : 2

16
Tree	final double cols = cols . getAllParameters () . length ;
Code	final double cols = cols . getAllParameters () . length ;
Distance : 3

17
Tree	protected int cols = problem . getAllParameters () . length ;
Code	protected int cols = problem . getAllParameters () . length ;
Distance : 2

18
Tree	final int cols = length . getAllParameters () . length ;
Code	final int cols = length . getAllParameters () . length ;
Distance : 2

19
Tree	abstract int cols = problem . getAllParameters () . length ;
Code	abstract int cols = problem . getAllParameters () . length ;
Distance : 2

20
Tree	public double cols = problem . getAllParameters () . length ;
Code	public double cols = problem . getAllParameters () . length ;
Distance : 3

21
Tree	final int problem = cols . getAllParameters () . length ;
Code	final int problem = cols . getAllParameters () . length ;
Distance : 3

22
Tree	final double cols = problem . getAllParameters () . length ;
Code	final double cols = problem . getAllParameters () . length ;
Distance : 2

23
Tree	final int cols = problem . getAllParameters () . cols ;
Code	final int cols = problem . getAllParameters () . cols ;
Distance : 2

24
Tree	final boolean problem = problem . getAllParameters () . length ;
Code	final boolean problem = problem . getAllParameters () . length ;
Distance : 3

25
Tree	public char cols = problem . getAllParameters () . length ;
Code	public char cols = problem . getAllParameters () . length ;
Distance : 3

26
Tree	final long problem = problem . getAllParameters () . length ;
Code	final long problem = problem . getAllParameters () . length ;
Distance : 3

27
Tree	private double cols = problem . getAllParameters () . length ;
Code	private double cols = problem . getAllParameters () . length ;
Distance : 3

28
Tree	public int problem = problem . getAllParameters () . length ;
Code	public int problem = problem . getAllParameters () . length ;
Distance : 3

29
Tree	final byte length = problem . getAllParameters () . length ;
Code	final byte length = problem . getAllParameters () . length ;
Distance : 3

30
Tree	public byte cols = problem . getAllParameters () . length ;
Code	public byte cols = problem . getAllParameters () . length ;
Distance : 3

31
Tree	final boolean cols = cols . getAllParameters () . length ;
Code	final boolean cols = cols . getAllParameters () . length ;
Distance : 3

32
Tree	synchronized int cols = problem . getAllParameters () . length ;
Code	synchronized int cols = problem . getAllParameters () . length ;
Distance : 2

33
Tree	final void problem = problem . getAllParameters () . length ;
Code	final void problem = problem . getAllParameters () . length ;
Distance : 3

34
Tree	private int problem = problem . getAllParameters () . length ;
Code	private int problem = problem . getAllParameters () . length ;
Distance : 3

35
Tree	private byte cols = problem . getAllParameters () . length ;
Code	private byte cols = problem . getAllParameters () . length ;
Distance : 3

36
Tree	final char cols = cols . getAllParameters () . length ;
Code	final char cols = cols . getAllParameters () . length ;
Distance : 3

37
Tree	static double cols = problem . getAllParameters () . length ;
Code	static double cols = problem . getAllParameters () . length ;
Distance : 3

38
Tree	public boolean cols = problem . getAllParameters () . length ;
Code	public boolean cols = problem . getAllParameters () . length ;
Distance : 3

39
Tree	protected double cols = problem . getAllParameters () . length ;
Code	protected double cols = problem . getAllParameters () . length ;
Distance : 3

40
Tree	final long cols = cols . getAllParameters () . length ;
Code	final long cols = cols . getAllParameters () . length ;
Distance : 3

41
Tree	final short problem = problem . getAllParameters () . length ;
Code	final short problem = problem . getAllParameters () . length ;
Distance : 3

42
Tree	final float problem = problem . getAllParameters () . length ;
Code	final float problem = problem . getAllParameters () . length ;
Distance : 3

43
Tree	final boolean length = problem . getAllParameters () . length ;
Code	final boolean length = problem . getAllParameters () . length ;
Distance : 3

44
Tree	abstract double cols = problem . getAllParameters () . length ;
Code	abstract double cols = problem . getAllParameters () . length ;
Distance : 3

45
Tree	final double cols = length . getAllParameters () . length ;
Code	final double cols = length . getAllParameters () . length ;
Distance : 3

46
Tree	final char problem = problem . getAllParameters () . length ;
Code	final char problem = problem . getAllParameters () . length ;
Distance : 3

47
Tree	final double length = problem . getAllParameters () . length ;
Code	final double length = problem . getAllParameters () . length ;
Distance : 3

48
Tree	final byte cols = cols . getAllParameters () . length ;
Code	final byte cols = cols . getAllParameters () . length ;
Distance : 3

49
Tree	final int length = cols . getAllParameters () . length ;
Code	final int length = cols . getAllParameters () . length ;
Distance : 3

50
Tree	private int length = problem . getAllParameters () . length ;
Code	private int length = problem . getAllParameters () . length ;
Distance : 3

51
Tree	private boolean cols = problem . getAllParameters () . length ;
Code	private boolean cols = problem . getAllParameters () . length ;
Distance : 3

52
Tree	public long cols = problem . getAllParameters () . length ;
Code	public long cols = problem . getAllParameters () . length ;
Distance : 3

53
Tree	static int problem = problem . getAllParameters () . length ;
Code	static int problem = problem . getAllParameters () . length ;
Distance : 3

54
Tree	final double problem = cols . getAllParameters () . length ;
Code	final double problem = cols . getAllParameters () . length ;
Distance : 4

55
Tree	static byte cols = problem . getAllParameters () . length ;
Code	static byte cols = problem . getAllParameters () . length ;
Distance : 3

56
Tree	final long length = problem . getAllParameters () . length ;
Code	final long length = problem . getAllParameters () . length ;
Distance : 3

57
Tree	protected int problem = problem . getAllParameters () . length ;
Code	protected int problem = problem . getAllParameters () . length ;
Distance : 3

58
Tree	private char cols = problem . getAllParameters () . length ;
Code	private char cols = problem . getAllParameters () . length ;
Distance : 3

59
Tree	protected byte cols = problem . getAllParameters () . length ;
Code	protected byte cols = problem . getAllParameters () . length ;
Distance : 3

60
Tree	protected int problem = cols . getAllParameters () . length ;
Code	protected int problem = cols . getAllParameters () . length ;
Distance : 4

61
Tree	final int problem = length . getAllParameters () . length ;
Code	final int problem = length . getAllParameters () . length ;
Distance : 3

62
Tree	abstract int problem = problem . getAllParameters () . length ;
Code	abstract int problem = problem . getAllParameters () . length ;
Distance : 3

63
Tree	abstract byte cols = problem . getAllParameters () . length ;
Code	abstract byte cols = problem . getAllParameters () . length ;
Distance : 3

64
Tree	private long cols = problem . getAllParameters () . length ;
Code	private long cols = problem . getAllParameters () . length ;
Distance : 3

65
Tree	final void cols = cols . getAllParameters () . length ;
Code	final void cols = cols . getAllParameters () . length ;
Distance : 3

66
Tree	public int length = problem . getAllParameters () . length ;
Code	public int length = problem . getAllParameters () . length ;
Distance : 3

67
Tree	final byte cols = length . getAllParameters () . length ;
Code	final byte cols = length . getAllParameters () . length ;
Distance : 3

68
Tree	public double problem = problem . getAllParameters () . length ;
Code	public double problem = problem . getAllParameters () . length ;
Distance : 4

69
Tree	final short cols = cols . getAllParameters () . length ;
Code	final short cols = cols . getAllParameters () . length ;
Distance : 3

70
Tree	static boolean cols = problem . getAllParameters () . length ;
Code	static boolean cols = problem . getAllParameters () . length ;
Distance : 3

71
Tree	public void cols = problem . getAllParameters () . length ;
Code	public void cols = problem . getAllParameters () . length ;
Distance : 3

72
Tree	final char length = problem . getAllParameters () . length ;
Code	final char length = problem . getAllParameters () . length ;
Distance : 3

73
Tree	public int cols = cols . getAllParameters () . length ;
Code	public int cols = cols . getAllParameters () . length ;
Distance : 3

74
Tree	final float cols = cols . getAllParameters () . length ;
Code	final float cols = cols . getAllParameters () . length ;
Distance : 3

75
Tree	final byte problem = cols . getAllParameters () . length ;
Code	final byte problem = cols . getAllParameters () . length ;
Distance : 4

76
Tree	protected char cols = problem . getAllParameters () . length ;
Code	protected char cols = problem . getAllParameters () . length ;
Distance : 3

77
Tree	final void length = problem . getAllParameters () . length ;
Code	final void length = problem . getAllParameters () . length ;
Distance : 3

78
Tree	abstract boolean cols = problem . getAllParameters () . length ;
Code	abstract boolean cols = problem . getAllParameters () . length ;
Distance : 3

79
Tree	static int cols = cols . getAllParameters () . length ;
Code	static int cols = cols . getAllParameters () . length ;
Distance : 3

80
Tree	static long cols = problem . getAllParameters () . length ;
Code	static long cols = problem . getAllParameters () . length ;
Distance : 3

81
Tree	public float cols = problem . getAllParameters () . length ;
Code	public float cols = problem . getAllParameters () . length ;
Distance : 3

82
Tree	public short cols = problem . getAllParameters () . length ;
Code	public short cols = problem . getAllParameters () . length ;
Distance : 3

83
Tree	protected int cols = cols . getAllParameters () . length ;
Code	protected int cols = cols . getAllParameters () . length ;
Distance : 3

84
Tree	synchronized double cols = problem . getAllParameters () . length ;
Code	synchronized double cols = problem . getAllParameters () . length ;
Distance : 3

85
Tree	abstract char cols = problem . getAllParameters () . length ;
Code	abstract char cols = problem . getAllParameters () . length ;
Distance : 3

86
Tree	protected long cols = problem . getAllParameters () . length ;
Code	protected long cols = problem . getAllParameters () . length ;
Distance : 3

87
Tree	private void cols = problem . getAllParameters () . length ;
Code	private void cols = problem . getAllParameters () . length ;
Distance : 3

88
Tree	final short length = problem . getAllParameters () . length ;
Code	final short length = problem . getAllParameters () . length ;
Distance : 3

89
Tree	private double problem = problem . getAllParameters () . length ;
Code	private double problem = problem . getAllParameters () . length ;
Distance : 4

90
Tree	final boolean cols = length . getAllParameters () . length ;
Code	final boolean cols = length . getAllParameters () . length ;
Distance : 3

91
Tree	final float length = problem . getAllParameters () . length ;
Code	final float length = problem . getAllParameters () . length ;
Distance : 3

92
Tree	abstract int cols = cols . getAllParameters () . length ;
Code	abstract int cols = cols . getAllParameters () . length ;
Distance : 3

93
Tree	abstract long cols = problem . getAllParameters () . length ;
Code	abstract long cols = problem . getAllParameters () . length ;
Distance : 3

94
Tree	public byte problem = problem . getAllParameters () . length ;
Code	public byte problem = problem . getAllParameters () . length ;
Distance : 4

95
Tree	private short cols = problem . getAllParameters () . length ;
Code	private short cols = problem . getAllParameters () . length ;
Distance : 3

96
Tree	static char cols = problem . getAllParameters () . length ;
Code	static char cols = problem . getAllParameters () . length ;
Distance : 3

97
Tree	protected boolean cols = problem . getAllParameters () . length ;
Code	protected boolean cols = problem . getAllParameters () . length ;
Distance : 3

98
Tree	final int cols = problem . getAllParameters () . problem ;
Code	final int cols = problem . getAllParameters () . problem ;
Distance : 2

99
Tree	final char cols = length . getAllParameters () . length ;
Code	final char cols = length . getAllParameters () . length ;
Distance : 3

100
Tree	private float cols = problem . getAllParameters () . length ;
Code	private float cols = problem . getAllParameters () . length ;
Distance : 3

101
Tree	final boolean problem = cols . getAllParameters () . length ;
Code	final boolean problem = cols . getAllParameters () . length ;
Distance : 4

102
Tree	static int length = problem . getAllParameters () . length ;
Code	static int length = problem . getAllParameters () . length ;
Distance : 3

103
Tree	final long cols = length . getAllParameters () . length ;
Code	final long cols = length . getAllParameters () . length ;
Distance : 3

104
Tree	final double cols = problem . getAllParameters () . cols ;
Code	final double cols = problem . getAllParameters () . cols ;
Distance : 3

105
Tree	protected int length = problem . getAllParameters () . length ;
Code	protected int length = problem . getAllParameters () . length ;
Distance : 3

106
Tree	final double length = cols . getAllParameters () . length ;
Code	final double length = cols . getAllParameters () . length ;
Distance : 4

107
Tree	synchronized int problem = problem . getAllParameters () . length ;
Code	synchronized int problem = problem . getAllParameters () . length ;
Distance : 3

108
Tree	synchronized byte cols = problem . getAllParameters () . length ;
Code	synchronized byte cols = problem . getAllParameters () . length ;
Distance : 3

109
Tree	final char problem = cols . getAllParameters () . length ;
Code	final char problem = cols . getAllParameters () . length ;
Distance : 4

110
Tree	private byte problem = problem . getAllParameters () . length ;
Code	private byte problem = problem . getAllParameters () . length ;
Distance : 4

111
Tree	static void cols = problem . getAllParameters () . length ;
Code	static void cols = problem . getAllParameters () . length ;
Distance : 3

112
Tree	abstract int length = problem . getAllParameters () . length ;
Code	abstract int length = problem . getAllParameters () . length ;
Distance : 3

113
Tree	public boolean problem = problem . getAllParameters () . length ;
Code	public boolean problem = problem . getAllParameters () . length ;
Distance : 4

114
Tree	static double problem = problem . getAllParameters () . length ;
Code	static double problem = problem . getAllParameters () . length ;
Distance : 4

115
Tree	protected void cols = problem . getAllParameters () . length ;
Code	protected void cols = problem . getAllParameters () . length ;
Distance : 3

116
Tree	final int length = length . getAllParameters () . length ;
Code	final int length = length . getAllParameters () . length ;
Distance : 3

117
Tree	final long problem = cols . getAllParameters () . length ;
Code	final long problem = cols . getAllParameters () . length ;
Distance : 4

118
Tree	public int cols = length . getAllParameters () . length ;
Code	public int cols = length . getAllParameters () . length ;
Distance : 3

119
Tree	protected double problem = problem . getAllParameters () . length ;
Code	protected double problem = problem . getAllParameters () . length ;
Distance : 4

120
Tree	public double length = problem . getAllParameters () . length ;
Code	public double length = problem . getAllParameters () . length ;
Distance : 4

121
Tree	static short cols = problem . getAllParameters () . length ;
Code	static short cols = problem . getAllParameters () . length ;
Distance : 3

122
Tree	abstract void cols = problem . getAllParameters () . length ;
Code	abstract void cols = problem . getAllParameters () . length ;
Distance : 3

123
Tree	protected short cols = problem . getAllParameters () . length ;
Code	protected short cols = problem . getAllParameters () . length ;
Distance : 3

124
Tree	private double cols = cols . getAllParameters () . length ;
Code	private double cols = cols . getAllParameters () . length ;
Distance : 4

125
Tree	final double problem = length . getAllParameters () . length ;
Code	final double problem = length . getAllParameters () . length ;
Distance : 4

126
Tree	static float cols = problem . getAllParameters () . length ;
Code	static float cols = problem . getAllParameters () . length ;
Distance : 3

127
Tree	abstract double problem = problem . getAllParameters () . length ;
Code	abstract double problem = problem . getAllParameters () . length ;
Distance : 4

128
Tree	public char problem = problem . getAllParameters () . length ;
Code	public char problem = problem . getAllParameters () . length ;
Distance : 4

129
Tree	final int problem = problem . getAllParameters () . cols ;
Code	final int problem = problem . getAllParameters () . cols ;
Distance : 3

130
Tree	protected float cols = problem . getAllParameters () . length ;
Code	protected float cols = problem . getAllParameters () . length ;
Distance : 3

131
Tree	synchronized boolean cols = problem . getAllParameters () . length ;
Code	synchronized boolean cols = problem . getAllParameters () . length ;
Distance : 3

132
Tree	private int cols = length . getAllParameters () . length ;
Code	private int cols = length . getAllParameters () . length ;
Distance : 3

133
Tree	public int problem = cols . getAllParameters () . length ;
Code	public int problem = cols . getAllParameters () . length ;
Distance : 4

134
Tree	abstract short cols = problem . getAllParameters () . length ;
Code	abstract short cols = problem . getAllParameters () . length ;
Distance : 3

135
Tree	final byte length = cols . getAllParameters () . length ;
Code	final byte length = cols . getAllParameters () . length ;
Distance : 4

136
Tree	private boolean problem = problem . getAllParameters () . length ;
Code	private boolean problem = problem . getAllParameters () . length ;
Distance : 4

137
Tree	public byte cols = cols . getAllParameters () . length ;
Code	public byte cols = cols . getAllParameters () . length ;
Distance : 4

138
Tree	final byte cols = problem . getAllParameters () . cols ;
Code	final byte cols = problem . getAllParameters () . cols ;
Distance : 3

139
Tree	final void cols = length . getAllParameters () . length ;
Code	final void cols = length . getAllParameters () . length ;
Distance : 3

140
Tree	abstract float cols = problem . getAllParameters () . length ;
Code	abstract float cols = problem . getAllParameters () . length ;
Distance : 3

141
Tree	synchronized char cols = problem . getAllParameters () . length ;
Code	synchronized char cols = problem . getAllParameters () . length ;
Distance : 3

142
Tree	public long problem = problem . getAllParameters () . length ;
Code	public long problem = problem . getAllParameters () . length ;
Distance : 4

143
Tree	static byte problem = problem . getAllParameters () . length ;
Code	static byte problem = problem . getAllParameters () . length ;
Distance : 4

144
Tree	protected byte problem = problem . getAllParameters () . length ;
Code	protected byte problem = problem . getAllParameters () . length ;
Distance : 4

145
Tree	private char problem = problem . getAllParameters () . length ;
Code	private char problem = problem . getAllParameters () . length ;
Distance : 4

146
Tree	synchronized int cols = cols . getAllParameters () . length ;
Code	synchronized int cols = cols . getAllParameters () . length ;
Distance : 3

147
Tree	private double length = problem . getAllParameters () . length ;
Code	private double length = problem . getAllParameters () . length ;
Distance : 4

148
Tree	public double cols = cols . getAllParameters () . length ;
Code	public double cols = cols . getAllParameters () . length ;
Distance : 4

149
Tree	synchronized long cols = problem . getAllParameters () . length ;
Code	synchronized long cols = problem . getAllParameters () . length ;
Distance : 3

150
Tree	abstract byte problem = problem . getAllParameters () . length ;
Code	abstract byte problem = problem . getAllParameters () . length ;
Distance : 4

151
Tree	private int problem = cols . getAllParameters () . length ;
Code	private int problem = cols . getAllParameters () . length ;
Distance : 4

152
Tree	private long problem = problem . getAllParameters () . length ;
Code	private long problem = problem . getAllParameters () . length ;
Distance : 4

153
Tree	final float cols = length . getAllParameters () . length ;
Code	final float cols = length . getAllParameters () . length ;
Distance : 3

154
Tree	static double cols = cols . getAllParameters () . length ;
Code	static double cols = cols . getAllParameters () . length ;
Distance : 4

155
Tree	private byte cols = cols . getAllParameters () . length ;
Code	private byte cols = cols . getAllParameters () . length ;
Distance : 4

156
Tree	public byte length = problem . getAllParameters () . length ;
Code	public byte length = problem . getAllParameters () . length ;
Distance : 4

157
Tree	final byte problem = length . getAllParameters () . length ;
Code	final byte problem = length . getAllParameters () . length ;
Distance : 4

158
Tree	public boolean cols = cols . getAllParameters () . length ;
Code	public boolean cols = cols . getAllParameters () . length ;
Distance : 4

159
Tree	protected double cols = cols . getAllParameters () . length ;
Code	protected double cols = cols . getAllParameters () . length ;
Distance : 4

160
Tree	static int cols = length . getAllParameters () . length ;
Code	static int cols = length . getAllParameters () . length ;
Distance : 3

161
Tree	final short problem = cols . getAllParameters () . length ;
Code	final short problem = cols . getAllParameters () . length ;
Distance : 4

162
Tree	static boolean problem = problem . getAllParameters () . length ;
Code	static boolean problem = problem . getAllParameters () . length ;
Distance : 4

163
Tree	protected int cols = length . getAllParameters () . length ;
Code	protected int cols = length . getAllParameters () . length ;
Distance : 3

164
Tree	public void problem = problem . getAllParameters () . length ;
Code	public void problem = problem . getAllParameters () . length ;
Distance : 4

165
Tree	final float problem = cols . getAllParameters () . length ;
Code	final float problem = cols . getAllParameters () . length ;
Distance : 4

166
Tree	final boolean length = cols . getAllParameters () . length ;
Code	final boolean length = cols . getAllParameters () . length ;
Distance : 4

167
Tree	abstract double cols = cols . getAllParameters () . length ;
Code	abstract double cols = cols . getAllParameters () . length ;
Distance : 4

168
Tree	protected boolean problem = problem . getAllParameters () . length ;
Code	protected boolean problem = problem . getAllParameters () . length ;
Distance : 4

169
Tree	final boolean cols = problem . getAllParameters () . cols ;
Code	final boolean cols = problem . getAllParameters () . cols ;
Distance : 3

170
Tree	public char cols = cols . getAllParameters () . length ;
Code	public char cols = cols . getAllParameters () . length ;
Distance : 4

171
Tree	synchronized int length = problem . getAllParameters () . length ;
Code	synchronized int length = problem . getAllParameters () . length ;
Distance : 3

172
Tree	final void problem = cols . getAllParameters () . length ;
Code	final void problem = cols . getAllParameters () . length ;
Distance : 4

173
Tree	final int cols = cols . getAllParameters () . cols ;
Code	final int cols = cols . getAllParameters () . cols ;
Distance : 3

174
Tree	static char problem = problem . getAllParameters () . length ;
Code	static char problem = problem . getAllParameters () . length ;
Distance : 4

175
Tree	final short cols = length . getAllParameters () . length ;
Code	final short cols = length . getAllParameters () . length ;
Distance : 3

176
Tree	abstract int cols = length . getAllParameters () . length ;
Code	abstract int cols = length . getAllParameters () . length ;
Distance : 3

177
Tree	protected char problem = problem . getAllParameters () . length ;
Code	protected char problem = problem . getAllParameters () . length ;
Distance : 4

178
Tree	final double cols = problem . getAllParameters () . problem ;
Code	final double cols = problem . getAllParameters () . problem ;
Distance : 3

179
Tree	public boolean length = problem . getAllParameters () . length ;
Code	public boolean length = problem . getAllParameters () . length ;
Distance : 4

180
Tree	abstract boolean problem = problem . getAllParameters () . length ;
Code	abstract boolean problem = problem . getAllParameters () . length ;
Distance : 4

181
Tree	final char length = cols . getAllParameters () . length ;
Code	final char length = cols . getAllParameters () . length ;
Distance : 4

182
Tree	static double length = problem . getAllParameters () . length ;
Code	static double length = problem . getAllParameters () . length ;
Distance : 4

183
Tree	private boolean cols = cols . getAllParameters () . length ;
Code	private boolean cols = cols . getAllParameters () . length ;
Distance : 4

184
Tree	final char cols = problem . getAllParameters () . cols ;
Code	final char cols = problem . getAllParameters () . cols ;
Distance : 3

185
Tree	public long cols = cols . getAllParameters () . length ;
Code	public long cols = cols . getAllParameters () . length ;
Distance : 4

186
Tree	private int cols = cols . getAllParameters () . length ;
Code	private int cols = cols . getAllParameters () . length ;
Distance : 3

187
Tree	synchronized void cols = problem . getAllParameters () . length ;
Code	synchronized void cols = problem . getAllParameters () . length ;
Distance : 3

188
Tree	protected double length = problem . getAllParameters () . length ;
Code	protected double length = problem . getAllParameters () . length ;
Distance : 4

189
Tree	static long problem = problem . getAllParameters () . length ;
Code	static long problem = problem . getAllParameters () . length ;
Distance : 4

190
Tree	public float problem = problem . getAllParameters () . length ;
Code	public float problem = problem . getAllParameters () . length ;
Distance : 4

191
Tree	public short problem = problem . getAllParameters () . length ;
Code	public short problem = problem . getAllParameters () . length ;
Distance : 4

192
Tree	final long length = cols . getAllParameters () . length ;
Code	final long length = cols . getAllParameters () . length ;
Distance : 4

193
Tree	static byte cols = cols . getAllParameters () . length ;
Code	static byte cols = cols . getAllParameters () . length ;
Distance : 4

194
Tree	abstract char problem = problem . getAllParameters () . length ;
Code	abstract char problem = problem . getAllParameters () . length ;
Distance : 4

195
Tree	private void problem = problem . getAllParameters () . length ;
Code	private void problem = problem . getAllParameters () . length ;
Distance : 4

196
Tree	final long cols = problem . getAllParameters () . cols ;
Code	final long cols = problem . getAllParameters () . cols ;
Distance : 3

197
Tree	private byte length = problem . getAllParameters () . length ;
Code	private byte length = problem . getAllParameters () . length ;
Distance : 4

198
Tree	static int problem = cols . getAllParameters () . length ;
Code	static int problem = cols . getAllParameters () . length ;
Distance : 4

199
Tree	synchronized double problem = problem . getAllParameters () . length ;
Code	synchronized double problem = problem . getAllParameters () . length ;
Distance : 4

========================================================================


========================================================================
Example Number: 52
Parent Code is: 
final BigDecimal [] out = new BigDecimal [ v.length ] ;
-------------------------------------------------------------------------------
Child code is: 
final BigDecimal [] out = new BigDecimal [ nRows ] ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=BigDecimal})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=BigDecimal})) (221{val=[})) (40{val=v.length}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=BigDecimal})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=BigDecimal})) (221{val=[})) (800{val=nRows}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/98/parent/src_java_org_apache_commons_math_linear_BigMatrixImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	final
Code	final
Distance : 10

1
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 11

2
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 11

3
Tree	Rectangle2D
Code	Rectangle2D
Distance : 11

4
Tree	replaceWith
Code	replaceWith
Distance : 11

5
Tree	separator
Code	separator
Distance : 11

6
Tree	stub
Code	stub
Distance : 11

7
Tree	RealMatrix
Code	RealMatrix
Distance : 11

8
Tree	MatrixUtils
Code	MatrixUtils
Distance : 11

9
Tree	reportCodeChange
Code	reportCodeChange
Distance : 11

10
Tree	File
Code	File
Distance : 11

11
Tree	+=
Code	+=
Distance : 11

12
Tree	mapper
Code	mapper
Distance : 11

13
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 11

14
Tree	Range
Code	Range
Distance : 11

15
Tree	result
Code	result
Distance : 11

16
Tree	t
Code	t
Distance : 11

17
Tree	TestUtils
Code	TestUtils
Distance : 11

18
Tree	Class
Code	Class
Distance : 11

19
Tree	void
Code	void
Distance : 11

20
Tree	assertTrue
Code	assertTrue
Distance : 11

21
Tree	Coordinates2D
Code	Coordinates2D
Distance : 11

22
Tree	Fraction
Code	Fraction
Distance : 11

23
Tree	List
Code	List
Distance : 11

24
Tree	Args
Code	Args
Distance : 11

25
Tree	UnivariateFunction
Code	UnivariateFunction
Distance : 11

26
Tree	getLastArguments
Code	getLastArguments
Distance : 11

27
Tree	Collection
Code	Collection
Distance : 11

28
Tree	Assertions
Code	Assertions
Distance : 11

29
Tree	if
Code	if
Distance : 11

30
Tree	DateTimePrinter
Code	DateTimePrinter
Distance : 11

31
Tree	for
Code	for
Distance : 11

32
Tree	short
Code	short
Distance : 11

33
Tree	res
Code	res
Distance : 11

34
Tree	assertNull
Code	assertNull
Distance : 11

35
Tree	private
Code	private
Distance : 11

36
Tree	IMethods
Code	IMethods
Distance : 11

37
Tree	Comparable
Code	Comparable
Distance : 11

38
Tree	random
Code	random
Distance : 11

39
Tree	assertEquals
Code	assertEquals
Distance : 11

40
Tree	Coordinates3D
Code	Coordinates3D
Distance : 11

41
Tree	@
Code	@
Distance : 11

42
Tree	BSPTree
Code	BSPTree
Distance : 11

43
Tree	testError
Code	testError
Distance : 11

44
Tree	CharSequence
Code	CharSequence
Distance : 11

45
Tree	JSType
Code	JSType
Distance : 11

46
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 11

47
Tree	LinearCombination
Code	LinearCombination
Distance : 11

48
Tree	NodeTraversal
Code	NodeTraversal
Distance : 11

49
Tree	ArrayRealVector
Code	ArrayRealVector
Distance : 11

50
Tree	RegionFactory
Code	RegionFactory
Distance : 11

51
Tree	Cartesian3D
Code	Cartesian3D
Distance : 11

52
Tree	FunctionUtils
Code	FunctionUtils
Distance : 11

53
Tree	assertError
Code	assertError
Distance : 11

54
Tree	accum3
Code	accum3
Distance : 11

55
Tree	out
Code	out
Distance : 10

56
Tree	ReadablePartial
Code	ReadablePartial
Distance : 11

57
Tree	Point2D
Code	Point2D
Distance : 11

58
Tree	while
Code	while
Distance : 11

59
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 11

60
Tree	step
Code	step
Distance : 11

61
Tree	FieldMatrix
Code	FieldMatrix
Distance : 11

62
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 11

63
Tree	assertContains
Code	assertContains
Distance : 11

64
Tree	try
Code	try
Distance : 11

65
Tree	Integer
Code	Integer
Distance : 11

66
Tree	za
Code	za
Distance : 11

67
Tree	Double
Code	Double
Distance : 11

68
Tree	(
Code	(
Distance : 11

69
Tree	sum
Code	sum
Distance : 11

70
Tree	outData
Code	outData
Distance : 11

71
Tree	checker
Code	checker
Distance : 11

72
Tree	assertClose
Code	assertClose
Distance : 11

73
Tree	RealFieldElement
Code	RealFieldElement
Distance : 11

74
Tree	str
Code	str
Distance : 11

75
Tree	Path
Code	Path
Distance : 11

76
Tree	assertFalse
Code	assertFalse
Distance : 11

77
Tree	ReadableDuration
Code	ReadableDuration
Distance : 11

78
Tree	
Code	
Distance : 11

79
Tree	synchronized
Code	synchronized
Distance : 11

80
Tree	Vector2D
Code	Vector2D
Distance : 11

81
Tree	static
Code	static
Distance : 11

82
Tree	field
Code	field
Distance : 11

83
Tree	UnitSphereSampler
Code	UnitSphereSampler
Distance : 11

84
Tree	-
Code	-
Distance : 11

85
Tree	dev
Code	dev
Distance : 11

86
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 11

87
Tree	StrLookup
Code	StrLookup
Distance : 11

88
Tree	MockControl
Code	MockControl
Distance : 11

89
Tree	FastMath
Code	FastMath
Distance : 11

90
Tree	n
Code	n
Distance : 11

91
Tree	ret
Code	ret
Distance : 11

92
Tree	checkArgument
Code	checkArgument
Distance : 11

93
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

94
Tree	StringBuilder
Code	StringBuilder
Distance : 11

95
Tree	LastArguments
Code	LastArguments
Distance : 11

96
Tree	Object
Code	Object
Distance : 11

97
Tree	TransformUtils
Code	TransformUtils
Distance : 11

98
Tree	return
Code	return
Distance : 11

99
Tree	new
Code	new
Distance : 10

100
Tree	Vector3D
Code	Vector3D
Distance : 11

101
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 11

102
Tree	mockingProgress
Code	mockingProgress
Distance : 11

103
Tree	Throwable
Code	Throwable
Distance : 11

104
Tree	Map
Code	Map
Distance : 11

105
Tree	long
Code	long
Distance : 11

106
Tree	int
Code	int
Distance : 11

107
Tree	Calendar
Code	Calendar
Distance : 11

108
Tree	public
Code	public
Distance : 11

109
Tree	boolean
Code	boolean
Distance : 11

110
Tree	Args
Code	Args
Distance : 11

111
Tree	MathArrays
Code	MathArrays
Distance : 11

112
Tree	Collection
Code	Collection
Distance : 11

113
Tree	checkState
Code	checkState
Distance : 11

114
Tree	Assert
Code	Assert
Distance : 11

115
Tree	this
Code	this
Distance : 11

116
Tree	{
Code	{
Distance : 11

117
Tree	inputLineLength
Code	inputLineLength
Distance : 11

118
Tree	String
Code	String
Distance : 11

119
Tree	T
Code	T
Distance : 11

120
Tree	double
Code	double
Distance : 11

121
Tree	float
Code	float
Distance : 11

122
Tree	String
Code	String
Distance : 11

123
Tree	{
Code	{
Distance : 11

124
Tree	Object
Code	Object
Distance : 11

125
Tree	T
Code	T
Distance : 11

126
Tree	if
Code	if
Distance : 11

127
Tree	Vector3D
Code	Vector3D
Distance : 11

128
Tree	float
Code	float
Distance : 11

129
Tree	long
Code	long
Distance : 11

130
Tree	int
Code	int
Distance : 11

131
Tree	Calendar
Code	Calendar
Distance : 11

132
Tree	boolean
Code	boolean
Distance : 11

133
Tree	MathArrays
Code	MathArrays
Distance : 11

134
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 11

135
Tree	abstract
Code	abstract
Distance : 11

136
Tree	char
Code	char
Distance : 11

137
Tree	double
Code	double
Distance : 11

138
Tree	for
Code	for
Distance : 11

139
Tree	final
Code	final
Distance : 10

140
Tree	short
Code	short
Distance : 11

141
Tree	-
Code	-
Distance : 11

142
Tree	(
Code	(
Distance : 11

143
Tree	LinearCombination
Code	LinearCombination
Distance : 11

144
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 11

145
Tree	NodeTraversal
Code	NodeTraversal
Distance : 11

146
Tree	mockingProgress
Code	mockingProgress
Distance : 11

147
Tree	RegionFactory
Code	RegionFactory
Distance : 11

148
Tree	Throwable
Code	Throwable
Distance : 11

149
Tree	Map
Code	Map
Distance : 11

150
Tree	static
Code	static
Distance : 11

151
Tree	out
Code	out
Distance : 10

152
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 11

153
Tree	assertContains
Code	assertContains
Distance : 11

154
Tree	Integer
Code	Integer
Distance : 11

155
Tree	DateTimeParser
Code	DateTimeParser
Distance : 11

156
Tree	Color
Code	Color
Distance : 11

157
Tree	array
Code	array
Distance : 11

158
Tree	Invocation
Code	Invocation
Distance : 11

159
Tree	public
Code	public
Distance : 11

160
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

161
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 11

162
Tree	Vector2D
Code	Vector2D
Distance : 11

163
Tree	field
Code	field
Distance : 11

164
Tree	JSType
Code	JSType
Distance : 11

165
Tree	abstract
Code	abstract
Distance : 11

166
Tree	char
Code	char
Distance : 11

167
Tree	Comparable
Code	Comparable
Distance : 11

168
Tree	assertEquals
Code	assertEquals
Distance : 11

169
Tree	Coordinates3D
Code	Coordinates3D
Distance : 11

170
Tree	this
Code	this
Distance : 11

171
Tree	assertTrue
Code	assertTrue
Distance : 11

172
Tree	Assert
Code	Assert
Distance : 11

173
Tree	new
Code	new
Distance : 10

174
Tree	checkState
Code	checkState
Distance : 11

175
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 11

176
Tree	StringBuilder
Code	StringBuilder
Distance : 11

177
Tree	LastArguments
Code	LastArguments
Distance : 11

178
Tree	RealMatrix
Code	RealMatrix
Distance : 11

179
Tree	TransformUtils
Code	TransformUtils
Distance : 11

180
Tree	t
Code	t
Distance : 11

181
Tree	return
Code	return
Distance : 11

182
Tree	Class
Code	Class
Distance : 11

183
Tree	Coordinates2D
Code	Coordinates2D
Distance : 11

184
Tree	CharSequence
Code	CharSequence
Distance : 11

185
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 11

186
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

187
Tree	append
Code	append
Distance : 11

188
Tree	Invocation
Code	Invocation
Distance : 11

189
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

190
Tree	extends
Code	extends
Distance : 11

191
Tree	MutableDuration
Code	MutableDuration
Distance : 11

192
Tree	Complex
Code	Complex
Distance : 11

193
Tree	Chronology
Code	Chronology
Distance : 11

194
Tree	baseStr
Code	baseStr
Distance : 11

195
Tree	DateTimeParser
Code	DateTimeParser
Distance : 11

196
Tree	array
Code	array
Distance : 11

197
Tree	Color
Code	Color
Distance : 11

198
Tree	DateTimeZone
Code	DateTimeZone
Distance : 11

199
Tree	forward
Code	forward
Distance : 11

========================================================================


========================================================================
Example Number: 53
Parent Code is: 
final double [] out = new double [ v.length ] ;
-------------------------------------------------------------------------------
Child code is: 
final double [] out = new double [ nRows ] ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=v.length}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (800{val=nRows}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/98/parent/src_java_org_apache_commons_math_linear_RealMatrixImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	final
Code	final
Distance : 10

1
Tree	testData
Code	testData
Distance : 11

2
Tree	Shape
Code	Shape
Distance : 11

3
Tree	replaceWith
Code	replaceWith
Distance : 11

4
Tree	za
Code	za
Distance : 11

5
Tree	outData
Code	outData
Distance : 11

6
Tree	v1
Code	v1
Distance : 11

7
Tree	stub
Code	stub
Distance : 11

8
Tree	Double
Code	Double
Distance : 11

9
Tree	fail
Code	fail
Distance : 11

10
Tree	FieldMatrix
Code	FieldMatrix
Distance : 11

11
Tree	values
Code	values
Distance : 11

12
Tree	writer
Code	writer
Distance : 11

13
Tree	Assertions
Code	Assertions
Distance : 11

14
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 11

15
Tree	byte
Code	byte
Distance : 11

16
Tree	reportChangeToEnclosingScope
Code	reportChangeToEnclosingScope
Distance : 11

17
Tree	TypeParameters
Code	TypeParameters
Distance : 11

18
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 11

19
Tree	getField
Code	getField
Distance : 11

20
Tree	prop
Code	prop
Distance : 11

21
Tree	DiffResult
Code	DiffResult
Distance : 11

22
Tree	EigenDecomposition
Code	EigenDecomposition
Distance : 11

23
Tree	FlowScope
Code	FlowScope
Distance : 11

24
Tree	extends
Code	extends
Distance : 11

25
Tree	index
Code	index
Distance : 11

26
Tree	ds
Code	ds
Distance : 11

27
Tree	Path
Code	Path
Distance : 11

28
Tree	Fraction
Code	Fraction
Distance : 11

29
Tree	assertNotSame
Code	assertNotSame
Distance : 11

30
Tree	Complex
Code	Complex
Distance : 11

31
Tree	forward
Code	forward
Distance : 11

32
Tree	RealVector
Code	RealVector
Distance : 11

33
Tree	mutNum
Code	mutNum
Distance : 11

34
Tree	DurationType
Code	DurationType
Distance : 11

35
Tree	DateTimeParser
Code	DateTimeParser
Distance : 11

36
Tree	ReadableDuration
Code	ReadableDuration
Distance : 11

37
Tree	inOrder
Code	inOrder
Distance : 11

38
Tree	n
Code	n
Distance : 11

39
Tree	assertClose
Code	assertClose
Distance : 11

40
Tree	reportOr
Code	reportOr
Distance : 11

41
Tree	testSame
Code	testSame
Distance : 11

42
Tree	baseStr
Code	baseStr
Distance : 11

43
Tree	assertFalse
Code	assertFalse
Distance : 11

44
Tree	step
Code	step
Distance : 11

45
Tree	DateTimeZone
Code	DateTimeZone
Distance : 11

46
Tree	Array2DRowRealMatrix
Code	Array2DRowRealMatrix
Distance : 11

47
Tree	ReadablePartial
Code	ReadablePartial
Distance : 11

48
Tree	FastMath
Code	FastMath
Distance : 11

49
Tree	y.length
Code	y.length
Distance : 11

50
Tree	interpolator
Code	interpolator
Distance : 11

51
Tree	PlaneAngleRadians
Code	PlaneAngleRadians
Distance : 11

52
Tree	value
Code	value
Distance : 11

53
Tree	PointValuePair
Code	PointValuePair
Distance : 11

54
Tree	MutablePeriod
Code	MutablePeriod
Distance : 11

55
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 11

56
Tree	LogGamma
Code	LogGamma
Distance : 11

57
Tree	SerialUtils
Code	SerialUtils
Distance : 11

58
Tree	JFreeChart
Code	JFreeChart
Distance : 11

59
Tree	MutableDuration
Code	MutableDuration
Distance : 11

60
Tree	seed
Code	seed
Distance : 11

61
Tree	originOffset
Code	originOffset
Distance : 11

62
Tree	DURATION_SIZE
Code	DURATION_SIZE
Distance : 11

63
Tree	SymbolTable
Code	SymbolTable
Distance : 11

64
Tree	>=
Code	>=
Distance : 11

65
Tree	PARTIAL_SIZE
Code	PARTIAL_SIZE
Distance : 11

66
Tree	SparseFieldVector
Code	SparseFieldVector
Distance : 11

67
Tree	f
Code	f
Distance : 11

68
Tree	HashSet
Code	HashSet
Distance : 11

69
Tree	inputLineLength
Code	inputLineLength
Distance : 11

70
Tree	replacement
Code	replacement
Distance : 11

71
Tree	roots
Code	roots
Distance : 11

72
Tree	str
Code	str
Distance : 11

73
Tree	while
Code	while
Distance : 11

74
Tree	testError
Code	testError
Distance : 11

75
Tree	direction
Code	direction
Distance : 11

76
Tree	norm
Code	norm
Distance : 11

77
Tree	Constructor
Code	Constructor
Distance : 11

78
Tree	Chronology
Code	Chronology
Distance : 11

79
Tree	separator
Code	separator
Distance : 11

80
Tree	List
Code	List
Distance : 11

81
Tree	epsilon
Code	epsilon
Distance : 11

82
Tree	try
Code	try
Distance : 11

83
Tree	ret
Code	ret
Distance : 11

84
Tree	Color
Code	Color
Distance : 11

85
Tree	optimizer
Code	optimizer
Distance : 11

86
Tree	break;
Code	break;
Distance : 11

87
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 11

88
Tree	assertThat
Code	assertThat
Distance : 11

89
Tree	MockitoMethod
Code	MockitoMethod
Distance : 11

90
Tree	File
Code	File
Distance : 11

91
Tree	v
Code	v
Distance : 11

92
Tree	BlockFieldMatrix
Code	BlockFieldMatrix
Distance : 11

93
Tree	null
Code	null
Distance : 11

94
Tree	i
Code	i
Distance : 11

95
Tree	RealFieldElement
Code	RealFieldElement
Distance : 11

96
Tree	FunctionUtils
Code	FunctionUtils
Distance : 11

97
Tree	DBSCANClusterer
Code	DBSCANClusterer
Distance : 11

98
Tree	solver
Code	solver
Distance : 11

99
Tree	IMethods
Code	IMethods
Distance : 11

100
Tree	Require
Code	Require
Distance : 11

101
Tree	abstract
Code	abstract
Distance : 11

102
Tree	if
Code	if
Distance : 11

103
Tree	UnivariateFunction
Code	UnivariateFunction
Distance : 11

104
Tree	RealMatrix
Code	RealMatrix
Distance : 11

105
Tree	TransformUtils
Code	TransformUtils
Distance : 11

106
Tree	this
Code	this
Distance : 11

107
Tree	Args
Code	Args
Distance : 11

108
Tree	new
Code	new
Distance : 10

109
Tree	short
Code	short
Distance : 11

110
Tree	LastArguments
Code	LastArguments
Distance : 11

111
Tree	Assert
Code	Assert
Distance : 11

112
Tree	public
Code	public
Distance : 11

113
Tree	@
Code	@
Distance : 11

114
Tree	out
Code	out
Distance : 10

115
Tree	Map
Code	Map
Distance : 11

116
Tree	for
Code	for
Distance : 11

117
Tree	Integer
Code	Integer
Distance : 11

118
Tree	BSPTree
Code	BSPTree
Distance : 11

119
Tree	mockingProgress
Code	mockingProgress
Distance : 11

120
Tree	Period
Code	Period
Distance : 11

121
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 11

122
Tree	Cartesian3D
Code	Cartesian3D
Distance : 11

123
Tree	MatrixUtils
Code	MatrixUtils
Distance : 11

124
Tree	checkState
Code	checkState
Distance : 11

125
Tree	Collection
Code	Collection
Distance : 11

126
Tree	{
Code	{
Distance : 11

127
Tree	double
Code	double
Distance : 10

128
Tree	float
Code	float
Distance : 11

129
Tree	String
Code	String
Distance : 11

130
Tree	boolean
Code	boolean
Distance : 11

131
Tree	T
Code	T
Distance : 11

132
Tree	MathArrays
Code	MathArrays
Distance : 11

133
Tree	char
Code	char
Distance : 11

134
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 11

135
Tree	long
Code	long
Distance : 11

136
Tree	int
Code	int
Distance : 11

137
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 11

138
Tree	Calendar
Code	Calendar
Distance : 11

139
Tree	Coordinates2D
Code	Coordinates2D
Distance : 11

140
Tree	assertTrue
Code	assertTrue
Distance : 11

141
Tree	Throwable
Code	Throwable
Distance : 11

142
Tree	Class
Code	Class
Distance : 11

143
Tree	CharSequence
Code	CharSequence
Distance : 11

144
Tree	Object
Code	Object
Distance : 11

145
Tree	StringBuilder
Code	StringBuilder
Distance : 11

146
Tree	field
Code	field
Distance : 11

147
Tree	Vector3D
Code	Vector3D
Distance : 11

148
Tree	JSType
Code	JSType
Distance : 11

149
Tree	LinearCombination
Code	LinearCombination
Distance : 11

150
Tree	return
Code	return
Distance : 11

151
Tree	AbstractScope
Code	AbstractScope
Distance : 11

152
Tree	+=
Code	+=
Distance : 11

153
Tree	mapper
Code	mapper
Distance : 11

154
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 11

155
Tree	-
Code	-
Distance : 11

156
Tree	w
Code	w
Distance : 11

157
Tree	a
Code	a
Distance : 11

158
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 11

159
Tree	Invocation
Code	Invocation
Distance : 11

160
Tree	Rectangle2D
Code	Rectangle2D
Distance : 11

161
Tree	sum
Code	sum
Distance : 11

162
Tree	checker
Code	checker
Distance : 11

163
Tree	reportCodeChange
Code	reportCodeChange
Distance : 11

164
Tree	StrMatcher
Code	StrMatcher
Distance : 11

165
Tree	result
Code	result
Distance : 11

166
Tree	res
Code	res
Distance : 11

167
Tree	StringBuffer
Code	StringBuffer
Distance : 11

168
Tree	UnitSphereSampler
Code	UnitSphereSampler
Distance : 11

169
Tree	NodeUtil
Code	NodeUtil
Distance : 11

170
Tree	data
Code	data
Distance : 11

171
Tree	[]
Code	[]
Distance : 10

172
Tree	private
Code	private
Distance : 11

173
Tree	Point
Code	Point
Distance : 11

174
Tree	v.length
Code	v.length
Distance : 11

175
Tree	Vector2D
Code	Vector2D
Distance : 11

176
Tree	random
Code	random
Distance : 11

177
Tree	RegionFactory
Code	RegionFactory
Distance : 11

178
Tree	static
Code	static
Distance : 11

179
Tree	StrLookup
Code	StrLookup
Distance : 11

180
Tree	true
Code	true
Distance : 11

181
Tree	array
Code	array
Distance : 11

182
Tree	t
Code	t
Distance : 11

183
Tree	integ
Code	integ
Distance : 11

184
Tree	ArrayRealVector
Code	ArrayRealVector
Distance : 11

185
Tree	DateTimePrinter
Code	DateTimePrinter
Distance : 11

186
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 11

187
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 11

188
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 11

189
Tree	Comparable
Code	Comparable
Distance : 11

190
Tree	
Code	
Distance : 11

191
Tree	NodeTraversal
Code	NodeTraversal
Distance : 11

192
Tree	TestUtils
Code	TestUtils
Distance : 11

193
Tree	getLastArguments
Code	getLastArguments
Distance : 11

194
Tree	assertContains
Code	assertContains
Distance : 11

195
Tree	synchronized
Code	synchronized
Distance : 11

196
Tree	checkArgument
Code	checkArgument
Distance : 11

197
Tree	assertNull
Code	assertNull
Distance : 11

198
Tree	Range
Code	Range
Distance : 11

199
Tree	Coordinates3D
Code	Coordinates3D
Distance : 11

========================================================================


========================================================================
Example Number: 54
Parent Code is: 
int start = getNumObjectiveFunctions () ;
-------------------------------------------------------------------------------
Child code is: 
int start = ignoreObjectiveRows ? getNumObjectiveFunctions () : NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=start}) (204{val==}) (32 (802{val=getNumObjectiveFunctions}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=start}) (204{val==}) (16 (800{val=ignoreObjectiveRows}) (233{val=?}) (32 (802{val=getNumObjectiveFunctions}) (216{val=()})) (226{val=:}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/83/parent/src_main_java_org_apache_commons_math_optimization_linear_SimplexTableau.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	super ( start , start , null , false ) ;
Code	super ( start , start , null , false ) ;
Distance : 9

1
Tree	super ( Coordinates1D.ZERO , start ) ;
Code	super ( Coordinates1D.ZERO , start ) ;
Distance : 9

2
Tree	super ( messages , start ) ;
Code	super ( messages , start ) ;
Distance : 9

3
Tree	super ( ctor , start ) ;
Code	super ( ctor , start ) ;
Distance : 9

4
Tree	super ( LegendItemCollection , start ) ;
Code	super ( LegendItemCollection , start ) ;
Distance : 9

5
Tree	super ( VerificationModeImplTest , start ) ;
Code	super ( VerificationModeImplTest , start ) ;
Distance : 9

6
Tree	super ( str1 , start ) ;
Code	super ( str1 , start ) ;
Distance : 9

7
Tree	super ( intersection , start ) ;
Code	super ( intersection , start ) ;
Distance : 9

8
Tree	super ( numUnfilledTemplateKeys , start ) ;
Code	super ( numUnfilledTemplateKeys , start ) ;
Distance : 9

9
Tree	super ( binaryComparator , start ) ;
Code	super ( binaryComparator , start ) ;
Distance : 9

10
Tree	super ( PropAccess.STRUCT , start ) ;
Code	super ( PropAccess.STRUCT , start ) ;
Distance : 9

11
Tree	super ( NO_CLASS_NAME_STYLE , start ) ;
Code	super ( NO_CLASS_NAME_STYLE , start ) ;
Distance : 9

12
Tree	super ( LineSearchFunction , start ) ;
Code	super ( LineSearchFunction , start ) ;
Distance : 9

13
Tree	super ( LocalizedFormats.DIFFERENT_ROWS_LENGTHS , start ) ;
Code	super ( LocalizedFormats.DIFFERENT_ROWS_LENGTHS , start ) ;
Distance : 9

14
Tree	super ( nextNode , start ) ;
Code	super ( nextNode , start ) ;
Distance : 9

15
Tree	super ( TiesStrategy.MINIMUM , start ) ;
Code	super ( TiesStrategy.MINIMUM , start ) ;
Distance : 9

16
Tree	super ( Mode.ES8_OR_GREATER , start ) ;
Code	super ( Mode.ES8_OR_GREATER , start ) ;
Distance : 9

17
Tree	super ( Interfaces , start ) ;
Code	super ( Interfaces , start ) ;
Distance : 9

18
Tree	super ( scopeType , start ) ;
Code	super ( scopeType , start ) ;
Distance : 9

19
Tree	super ( charCount , start ) ;
Code	super ( charCount , start ) ;
Distance : 9

20
Tree	super ( newCachedThreadPool , start ) ;
Code	super ( newCachedThreadPool , start ) ;
Distance : 9

21
Tree	super ( BOTH_NULL , start ) ;
Code	super ( BOTH_NULL , start ) ;
Distance : 9

22
Tree	super ( getMinimumDaysInFirstWeek , start ) ;
Code	super ( getMinimumDaysInFirstWeek , start ) ;
Distance : 9

23
Tree	super ( Entities.HTML40_ARRAY_LENGTH , start ) ;
Code	super ( Entities.HTML40_ARRAY_LENGTH , start ) ;
Distance : 9

24
Tree	super ( options.deadAssignmentElimination , start ) ;
Code	super ( options.deadAssignmentElimination , start ) ;
Distance : 9

25
Tree	super ( Feature.GETTER , start ) ;
Code	super ( Feature.GETTER , start ) ;
Distance : 9

26
Tree	super ( expect , start ) ;
Code	super ( expect , start ) ;
Distance : 9

27
Tree	super ( Instantiator , start ) ;
Code	super ( Instantiator , start ) ;
Distance : 9

28
Tree	super ( IncrementalCheckMode.OFF , start ) ;
Code	super ( IncrementalCheckMode.OFF , start ) ;
Distance : 9

29
Tree	super ( pt2 , start ) ;
Code	super ( pt2 , start ) ;
Distance : 9

30
Tree	super ( newCssNames , start ) ;
Code	super ( newCssNames , start ) ;
Distance : 9

31
Tree	super ( Cartesian3D.NaN , start ) ;
Code	super ( Cartesian3D.NaN , start ) ;
Distance : 9

32
Tree	super ( Feature.SETTER , start ) ;
Code	super ( Feature.SETTER , start ) ;
Distance : 9

33
Tree	super ( MockitoSpy , start ) ;
Code	super ( MockitoSpy , start ) ;
Distance : 9

34
Tree	super ( isCreatable , start ) ;
Code	super ( isCreatable , start ) ;
Distance : 9

35
Tree	super ( LocalizedFormats.URL_CONTAINS_NO_DATA , start ) ;
Code	super ( LocalizedFormats.URL_CONTAINS_NO_DATA , start ) ;
Distance : 9

36
Tree	super ( MonotoneChain , start ) ;
Code	super ( MonotoneChain , start ) ;
Distance : 9

37
Tree	super ( ReadablePeriodConverter , start ) ;
Code	super ( ReadablePeriodConverter , start ) ;
Distance : 9

38
Tree	super ( tightenNameTypeAndDontWarn , start ) ;
Code	super ( tightenNameTypeAndDontWarn , start ) ;
Distance : 9

39
Tree	super ( binStats , start ) ;
Code	super ( binStats , start ) ;
Distance : 9

40
Tree	super ( java.lang.Class , start ) ;
Code	super ( java.lang.Class , start ) ;
Distance : 9

41
Tree	super ( RandomNameGenerator.NONFIRST_CHAR , start ) ;
Code	super ( RandomNameGenerator.NONFIRST_CHAR , start ) ;
Distance : 9

42
Tree	super ( num1 , start ) ;
Code	super ( num1 , start ) ;
Distance : 9

43
Tree	super ( getJavaIoTmpDir , start ) ;
Code	super ( getJavaIoTmpDir , start ) ;
Distance : 9

44
Tree	super ( getPrototypeNameOfMethod , start ) ;
Code	super ( getPrototypeNameOfMethod , start ) ;
Distance : 9

45
Tree	super ( extractLineno , start ) ;
Code	super ( extractLineno , start ) ;
Distance : 9

46
Tree	super ( TOKYO , start ) ;
Code	super ( TOKYO , start ) ;
Distance : 9

47
Tree	super ( ListUtil , start ) ;
Code	super ( ListUtil , start ) ;
Distance : 9

48
Tree	super ( YEAR_MONTH , start ) ;
Code	super ( YEAR_MONTH , start ) ;
Distance : 9

49
Tree	super ( GlobalConfiguration , start ) ;
Code	super ( GlobalConfiguration , start ) ;
Distance : 9

50
Tree	super ( getDefaultOptions , start ) ;
Code	super ( getDefaultOptions , start ) ;
Distance : 9

51
Tree	super ( shouldDisambiguateProperties , start ) ;
Code	super ( shouldDisambiguateProperties , start ) ;
Distance : 9

52
Tree	super ( chart.subtitles , start ) ;
Code	super ( chart.subtitles , start ) ;
Distance : 9

53
Tree	super ( skipStringLiteralChar , start ) ;
Code	super ( skipStringLiteralChar , start ) ;
Distance : 9

54
Tree	super ( DeclaredFunctionType , start ) ;
Code	super ( DeclaredFunctionType , start ) ;
Distance : 9

55
Tree	super ( checkSuperCall , start ) ;
Code	super ( checkSuperCall , start ) ;
Distance : 9

56
Tree	super ( Coordinates3D.NaN , start ) ;
Code	super ( Coordinates3D.NaN , start ) ;
Distance : 9

57
Tree	super ( com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders , start ) ;
Code	super ( com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders , start ) ;
Distance : 9

58
Tree	super ( vectorData , start ) ;
Code	super ( vectorData , start ) ;
Distance : 9

59
Tree	super ( leftOfArrow.type , start ) ;
Code	super ( leftOfArrow.type , start ) ;
Distance : 9

60
Tree	super ( recordPassStop , start ) ;
Code	super ( recordPassStop , start ) ;
Distance : 9

61
Tree	super ( createScopeCreator , start ) ;
Code	super ( createScopeCreator , start ) ;
Distance : 9

62
Tree	super ( copy.serializableMode , start ) ;
Code	super ( copy.serializableMode , start ) ;
Distance : 9

63
Tree	super ( emptyAsNull , start ) ;
Code	super ( emptyAsNull , start ) ;
Distance : 9

64
Tree	super ( assertRedeclare , start ) ;
Code	super ( assertRedeclare , start ) ;
Distance : 9

65
Tree	super ( TypeLiteral , start ) ;
Code	super ( TypeLiteral , start ) ;
Distance : 9

66
Tree	super ( GoalType.MINIMIZE , start ) ;
Code	super ( GoalType.MINIMIZE , start ) ;
Distance : 9

67
Tree	super ( readInputs , start ) ;
Code	super ( readInputs , start ) ;
Distance : 9

68
Tree	super ( r.type , start ) ;
Code	super ( r.type , start ) ;
Distance : 9

69
Tree	super ( LocalizedFormats.COVARIANCE_MATRIX , start ) ;
Code	super ( LocalizedFormats.COVARIANCE_MATRIX , start ) ;
Distance : 9

70
Tree	super ( unitize , start ) ;
Code	super ( unitize , start ) ;
Distance : 9

71
Tree	super ( Coordinates3D.NEGATIVE_INFINITY , start ) ;
Code	super ( Coordinates3D.NEGATIVE_INFINITY , start ) ;
Distance : 9

72
Tree	super ( Locale.KOREAN , start ) ;
Code	super ( Locale.KOREAN , start ) ;
Distance : 9

73
Tree	super ( withDurationTypeUsingTotalMillis , start ) ;
Code	super ( withDurationTypeUsingTotalMillis , start ) ;
Distance : 9

74
Tree	super ( %= , start ) ;
Code	super ( %= , start ) ;
Distance : 9

75
Tree	super ( Thread.UncaughtExceptionHandler , start ) ;
Code	super ( Thread.UncaughtExceptionHandler , start ) ;
Distance : 9

76
Tree	super ( MockPreciseDateTimeField , start ) ;
Code	super ( MockPreciseDateTimeField , start ) ;
Distance : 9

77
Tree	super ( canTestForShallowEqualityWith , start ) ;
Code	super ( canTestForShallowEqualityWith , start ) ;
Distance : 9

78
Tree	super ( triple2 , start ) ;
Code	super ( triple2 , start ) ;
Distance : 9

79
Tree	super ( getMillisPerUnit , start ) ;
Code	super ( getMillisPerUnit , start ) ;
Distance : 9

80
Tree	super ( isFull , start ) ;
Code	super ( isFull , start ) ;
Distance : 9

81
Tree	super ( toDateTimeAtCurrentTime , start ) ;
Code	super ( toDateTimeAtCurrentTime , start ) ;
Distance : 9

82
Tree	super ( lastIndex , start ) ;
Code	super ( lastIndex , start ) ;
Distance : 9

83
Tree	super ( rs.iRules , start ) ;
Code	super ( rs.iRules , start ) ;
Distance : 9

84
Tree	super ( ServletUtilities.tempFilePrefix , start ) ;
Code	super ( ServletUtilities.tempFilePrefix , start ) ;
Distance : 9

85
Tree	super ( instantiate , start ) ;
Code	super ( instantiate , start ) ;
Distance : 9

86
Tree	super ( newSecantSolver , start ) ;
Code	super ( newSecantSolver , start ) ;
Distance : 9

87
Tree	super ( maxX , start ) ;
Code	super ( maxX , start ) ;
Distance : 9

88
Tree	super ( computeSigma , start ) ;
Code	super ( computeSigma , start ) ;
Distance : 9

89
Tree	super ( dottedName , start ) ;
Code	super ( dottedName , start ) ;
Distance : 9

90
Tree	super ( mValues , start ) ;
Code	super ( mValues , start ) ;
Distance : 9

91
Tree	super ( source.contractionCriterion , start ) ;
Code	super ( source.contractionCriterion , start ) ;
Distance : 9

92
Tree	super ( mockInstance , start ) ;
Code	super ( mockInstance , start ) ;
Distance : 9

93
Tree	super ( inverseCumAccuracy , start ) ;
Code	super ( inverseCumAccuracy , start ) ;
Distance : 9

94
Tree	super ( sinEpsA , start ) ;
Code	super ( sinEpsA , start ) ;
Distance : 9

95
Tree	super ( other.entries , start ) ;
Code	super ( other.entries , start ) ;
Distance : 9

96
Tree	super ( isEnumType , start ) ;
Code	super ( isEnumType , start ) ;
Distance : 9

97
Tree	super ( Feature.NEW_TARGET , start ) ;
Code	super ( Feature.NEW_TARGET , start ) ;
Distance : 9

98
Tree	super ( tabMatcher , start ) ;
Code	super ( tabMatcher , start ) ;
Distance : 9

99
Tree	super ( fieldIndex , start ) ;
Code	super ( fieldIndex , start ) ;
Distance : 9

100
Tree	super ( Cartesian3D.POSITIVE_INFINITY , start ) ;
Code	super ( Cartesian3D.POSITIVE_INFINITY , start ) ;
Distance : 9

101
Tree	super ( chars.length , start ) ;
Code	super ( chars.length , start ) ;
Distance : 9

102
Tree	super ( CategoryLabelPosition , start ) ;
Code	super ( CategoryLabelPosition , start ) ;
Distance : 9

103
Tree	super ( setAnonymousFunctionNameMap , start ) ;
Code	super ( setAnonymousFunctionNameMap , start ) ;
Distance : 9

104
Tree	super ( Cartesian2D.NaN , start ) ;
Code	super ( Cartesian2D.NaN , start ) ;
Distance : 9

105
Tree	super ( flags.chromePass , start ) ;
Code	super ( flags.chromePass , start ) ;
Distance : 9

106
Tree	super ( EquivalenceMethod.DATA_FLOW , start ) ;
Code	super ( EquivalenceMethod.DATA_FLOW , start ) ;
Distance : 9

107
Tree	super ( set.length , start ) ;
Code	super ( set.length , start ) ;
Distance : 9

108
Tree	super ( Frequency , start ) ;
Code	super ( Frequency , start ) ;
Distance : 9

109
Tree	super ( toDateTimeAtMidnight , start ) ;
Code	super ( toDateTimeAtMidnight , start ) ;
Distance : 9

110
Tree	super ( # , start ) ;
Code	super ( # , start ) ;
Distance : 9

111
Tree	super ( countActual , start ) ;
Code	super ( countActual , start ) ;
Distance : 9

112
Tree	super ( isNoObjectType , start ) ;
Code	super ( isNoObjectType , start ) ;
Distance : 9

113
Tree	super ( MockStandardBaseDateTimeField , start ) ;
Code	super ( MockStandardBaseDateTimeField , start ) ;
Distance : 9

114
Tree	super ( Config.StrictMode.SLOPPY , start ) ;
Code	super ( Config.StrictMode.SLOPPY , start ) ;
Distance : 9

115
Tree	super ( testDestructuringForOfLoops2 , start ) ;
Code	super ( testDestructuringForOfLoops2 , start ) ;
Distance : 9

116
Tree	super ( areEqual , start ) ;
Code	super ( areEqual , start ) ;
Distance : 9

117
Tree	super ( LocalizedFormats.LCM_OVERFLOW_64_BITS , start ) ;
Code	super ( LocalizedFormats.LCM_OVERFLOW_64_BITS , start ) ;
Distance : 9

118
Tree	super ( LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END , start ) ;
Code	super ( LocalizedFormats.SUBARRAY_ENDS_AFTER_ARRAY_END , start ) ;
Distance : 9

119
Tree	super ( EventHandler.Action.CONTINUE , start ) ;
Code	super ( EventHandler.Action.CONTINUE , start ) ;
Distance : 9

120
Tree	super ( currentState , start ) ;
Code	super ( currentState , start ) ;
Distance : 9

121
Tree	super ( RuleSet , start ) ;
Code	super ( RuleSet , start ) ;
Distance : 9

122
Tree	super ( NaNStrategy.MAXIMAL , start ) ;
Code	super ( NaNStrategy.MAXIMAL , start ) ;
Distance : 9

123
Tree	super ( DiscreteDistribution.Sampler , start ) ;
Code	super ( DiscreteDistribution.Sampler , start ) ;
Distance : 9

124
Tree	super ( start , start , null , true ) ;
Code	super ( start , start , null , true ) ;
Distance : 9

125
Tree	super ( TimesTest , start ) ;
Code	super ( TimesTest , start ) ;
Distance : 9

126
Tree	super ( toDateTimeToday , start ) ;
Code	super ( toDateTimeToday , start ) ;
Distance : 9

127
Tree	super ( invocationsInOrder , start ) ;
Code	super ( invocationsInOrder , start ) ;
Distance : 9

128
Tree	super ( AINV , start ) ;
Code	super ( AINV , start ) ;
Distance : 9

129
Tree	super ( compiler.typeCheckingHasRun , start ) ;
Code	super ( compiler.typeCheckingHasRun , start ) ;
Distance : 9

130
Tree	super ( config.tracerMode , start ) ;
Code	super ( config.tracerMode , start ) ;
Distance : 9

131
Tree	super ( prop.type , start ) ;
Code	super ( prop.type , start ) ;
Distance : 9

132
Tree	super ( Coordinates2D.NEGATIVE_INFINITY , start ) ;
Code	super ( Coordinates2D.NEGATIVE_INFINITY , start ) ;
Distance : 9

133
Tree	super ( Cartesian1D.NaN , start ) ;
Code	super ( Cartesian1D.NaN , start ) ;
Distance : 9

134
Tree	super ( Cartesian1D.ZERO , start ) ;
Code	super ( Cartesian1D.ZERO , start ) ;
Distance : 9

135
Tree	super ( PARAM.escapePlus , start ) ;
Code	super ( PARAM.escapePlus , start ) ;
Distance : 9

136
Tree	super ( Cartesian2D.NEGATIVE_INFINITY , start ) ;
Code	super ( Cartesian2D.NEGATIVE_INFINITY , start ) ;
Distance : 9

137
Tree	super ( InvocationImplTest , start ) ;
Code	super ( InvocationImplTest , start ) ;
Distance : 9

138
Tree	super ( Level.FINE , start ) ;
Code	super ( Level.FINE , start ) ;
Distance : 9

139
Tree	super ( toBeExposed.realMethod , start ) ;
Code	super ( toBeExposed.realMethod , start ) ;
Distance : 9

140
Tree	super ( getAvailableLocales , start ) ;
Code	super ( getAvailableLocales , start ) ;
Distance : 9

141
Tree	super ( getNamespaceOrTypedefType , start ) ;
Code	super ( getNamespaceOrTypedefType , start ) ;
Distance : 9

142
Tree	super ( createExactH , start ) ;
Code	super ( createExactH , start ) ;
Distance : 9

143
Tree	super ( PRIMITIVE_TYPES , start ) ;
Code	super ( PRIMITIVE_TYPES , start ) ;
Distance : 9

144
Tree	super ( Feature.ACCESSIBILITY_MODIFIER , start ) ;
Code	super ( Feature.ACCESSIBILITY_MODIFIER , start ) ;
Distance : 9

145
Tree	super ( getPropertyMap , start ) ;
Code	super ( getPropertyMap , start ) ;
Distance : 9

146
Tree	super ( PropAccess.DICT , start ) ;
Code	super ( PropAccess.DICT , start ) ;
Distance : 9

147
Tree	super ( PivotSelectionRule.DANTZIG , start ) ;
Code	super ( PivotSelectionRule.DANTZIG , start ) ;
Distance : 9

148
Tree	super ( wxi , start ) ;
Code	super ( wxi , start ) ;
Distance : 9

149
Tree	super ( builder.daemon , start ) ;
Code	super ( builder.daemon , start ) ;
Distance : 9

150
Tree	super ( centers , start ) ;
Code	super ( centers , start ) ;
Distance : 9

151
Tree	super ( Config.StrictMode.STRICT , start ) ;
Code	super ( Config.StrictMode.STRICT , start ) ;
Distance : 9

152
Tree	super ( StandardPieToolTipGenerator , start ) ;
Code	super ( StandardPieToolTipGenerator , start ) ;
Distance : 9

153
Tree	super ( LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS , start ) ;
Code	super ( LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS , start ) ;
Distance : 9

154
Tree	super ( forDigit , start ) ;
Code	super ( forDigit , start ) ;
Distance : 9

155
Tree	super ( FloatRange , start ) ;
Code	super ( FloatRange , start ) ;
Distance : 9

156
Tree	super ( PropertyType , start ) ;
Code	super ( PropertyType , start ) ;
Distance : 9

157
Tree	super ( quadrilateral , start ) ;
Code	super ( quadrilateral , start ) ;
Distance : 9

158
Tree	super ( serializationSupport , start ) ;
Code	super ( serializationSupport , start ) ;
Distance : 9

159
Tree	super ( isNumberObjectType , start ) ;
Code	super ( isNumberObjectType , start ) ;
Distance : 9

160
Tree	super ( LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS , start ) ;
Code	super ( LocalizedFormats.INVALID_INTERVAL_INITIAL_VALUE_PARAMETERS , start ) ;
Distance : 9

161
Tree	super ( items.length , start ) ;
Code	super ( items.length , start ) ;
Distance : 9

162
Tree	super ( getActiveExecutor , start ) ;
Code	super ( getActiveExecutor , start ) ;
Distance : 9

163
Tree	super ( LocalizedFormats.OVERFLOW_IN_FRACTION , start ) ;
Code	super ( LocalizedFormats.OVERFLOW_IN_FRACTION , start ) ;
Distance : 9

164
Tree	super ( shouldAddTypes , start ) ;
Code	super ( shouldAddTypes , start ) ;
Distance : 9

165
Tree	super ( DfpField.FLAG_INVALID , start ) ;
Code	super ( DfpField.FLAG_INVALID , start ) ;
Distance : 9

166
Tree	super ( TextBlock , start ) ;
Code	super ( TextBlock , start ) ;
Distance : 9

167
Tree	super ( Calendar.DAY_OF_WEEK , start ) ;
Code	super ( Calendar.DAY_OF_WEEK , start ) ;
Distance : 9

168
Tree	super ( Cartesian1D.POSITIVE_INFINITY , start ) ;
Code	super ( Cartesian1D.POSITIVE_INFINITY , start ) ;
Distance : 9

169
Tree	super ( matchedTemplates , start ) ;
Code	super ( matchedTemplates , start ) ;
Distance : 9

170
Tree	super ( transform2 , start ) ;
Code	super ( transform2 , start ) ;
Distance : 9

171
Tree	super ( methodEquals , start ) ;
Code	super ( methodEquals , start ) ;
Distance : 9

172
Tree	super ( PREVIOUS_CLASSES , start ) ;
Code	super ( PREVIOUS_CLASSES , start ) ;
Distance : 9

173
Tree	super ( tag , start ) ;
Code	super ( tag , start ) ;
Distance : 9

174
Tree	super ( insertLen , start ) ;
Code	super ( insertLen , start ) ;
Distance : 9

175
Tree	super ( getSerializedIdMappings , start ) ;
Code	super ( getSerializedIdMappings , start ) ;
Distance : 9

176
Tree	super ( isAsyncContext , start ) ;
Code	super ( isAsyncContext , start ) ;
Distance : 9

177
Tree	super ( getProperNumerator , start ) ;
Code	super ( getProperNumerator , start ) ;
Distance : 9

178
Tree	super ( low , start ) ;
Code	super ( low , start ) ;
Distance : 9

179
Tree	super ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT , start ) ;
Code	super ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT , start ) ;
Distance : 9

180
Tree	super ( emitUseStrict , start ) ;
Code	super ( emitUseStrict , start ) ;
Distance : 9

181
Tree	super ( BigFraction.ZERO , start ) ;
Code	super ( BigFraction.ZERO , start ) ;
Distance : 9

182
Tree	super ( start , start , null , false ) ; createIllegalArgumentException
Code	super ( start , start , null , false ) ; createIllegalArgumentException
Distance : 10

183
Tree	super ( start , start , null , false ) ; testSame
Code	super ( start , start , null , false ) ; testSame
Distance : 10

184
Tree	super ( start , start , null , false ) ; notifyListeners
Code	super ( start , start , null , false ) ; notifyListeners
Distance : 10

185
Tree	super ( start , start , null , false ) ; x
Code	super ( start , start , null , false ) ; x
Distance : 10

186
Tree	super ( start , start , null , false ) ; expected
Code	super ( start , start , null , false ) ; expected
Distance : 10

187
Tree	super ( start , start , null , false ) ; IllegalArgumentException
Code	super ( start , start , null , false ) ; IllegalArgumentException
Distance : 10

188
Tree	super ( start , start , null , false ) ; reportCodeChange
Code	super ( start , start , null , false ) ; reportCodeChange
Distance : 10

189
Tree	super ( start , start , null , false ) ; FastMath
Code	super ( start , start , null , false ) ; FastMath
Distance : 10

190
Tree	super ( start , start , null , false ) ; name
Code	super ( start , start , null , false ) ; name
Distance : 10

191
Tree	super ( start , start , null , false ) ; LINE_JOINER
Code	super ( start , start , null , false ) ; LINE_JOINER
Distance : 10

192
Tree	super ( start , start , null , false ) ; nullNotPermitted
Code	super ( start , start , null , false ) ; nullNotPermitted
Distance : 10

193
Tree	super ( start , int , default: , true ) ;
Code	super ( start , int , default: , true ) ;
Distance : 9

194
Tree	super ( start , start , null , false ) ; @
Code	super ( start , start , null , false ) ; @
Distance : 10

195
Tree	super ( start , start , null , false ) ; false
Code	super ( start , start , null , false ) ; false
Distance : 10

196
Tree	super ( start , start , null , false ) ; /
Code	super ( start , start , null , false ) ; /
Distance : 10

197
Tree	super ( start , start , null , false ) ; invocation
Code	super ( start , start , null , false ) ; invocation
Distance : 10

198
Tree	super ( start , start , null , false ) ; assertThat
Code	super ( start , start , null , false ) ; assertThat
Distance : 10

199
Tree	super ( start , start , null , false ) ; fireChangeEvent
Code	super ( start , start , null , false ) ; fireChangeEvent
Distance : 10

========================================================================


========================================================================
Example Number: 55
Parent Code is: 
int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Child code is: 
int j = NUMBER_CONSTANT * ( n - NUMBER_CONSTANT ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=j}) (204{val==}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=n})) (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=j}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/80/parent/src_main_java_org_apache_commons_math_linear_EigenDecompositionImpl.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Integer
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Integer
Distance : 3

1
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; createIllegalArgumentException
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; createIllegalArgumentException
Distance : 3

2
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; x
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; x
Distance : 3

3
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; LINE_JOINER
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; LINE_JOINER
Distance : 3

4
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ?
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ?
Distance : 3

5
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Assert
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Assert
Distance : 3

6
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertThat
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertThat
Distance : 3

7
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; TestUtils
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; TestUtils
Distance : 3

8
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Exception
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Exception
Distance : 3

9
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; index
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; index
Distance : 3

10
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; invocations
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; invocations
Distance : 3

11
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Class
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Class
Distance : 3

12
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; source
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; source
Distance : 3

13
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; options
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; options
Distance : 3

14
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; p
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; p
Distance : 3

15
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; @
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; @
Distance : 3

16
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; false
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; false
Distance : 3

17
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; double
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; double
Distance : 3

18
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ==
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ==
Distance : 3

19
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; void
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; void
Distance : 3

20
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; throw
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; throw
Distance : 3

21
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; catch
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; catch
Distance : 3

22
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; testSame
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; testSame
Distance : 3

23
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; test
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; test
Distance : 3

24
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; array
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; array
Distance : 3

25
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; class
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; class
Distance : 3

26
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; :
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; :
Distance : 3

27
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; fail
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; fail
Distance : 3

28
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Args
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Args
Distance : 3

29
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; List
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; List
Distance : 3

30
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; IllegalArgumentException
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; IllegalArgumentException
Distance : 3

31
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; expected
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; expected
Distance : 3

32
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; FastMath
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; FastMath
Distance : 3

33
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; reportCodeChange
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; reportCodeChange
Distance : 3

34
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; parent
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; parent
Distance : 3

35
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ArrayList
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ArrayList
Distance : 3

36
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getInstance
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getInstance
Distance : 3

37
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; serialised
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; serialised
Distance : 3

38
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; str
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; str
Distance : 3

39
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; fireChangeEvent
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; fireChangeEvent
Distance : 3

40
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; v
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; v
Distance : 3

41
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; invocation
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; invocation
Distance : 3

42
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; result
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; result
Distance : 3

43
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; paint
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; paint
Distance : 3

44
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; try
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; try
Distance : 3

45
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; m
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; m
Distance : 3

46
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; f
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; f
Distance : 3

47
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <>
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <>
Distance : 3

48
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; long
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; long
Distance : 3

49
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; []
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; []
Distance : 3

50
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; nullNotPermitted
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; nullNotPermitted
Distance : 3

51
Tree	double j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	double j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

52
Tree	long j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	long j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

53
Tree	void j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	void j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

54
Tree	boolean n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	boolean n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

55
Tree	long n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	long n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

56
Tree	byte n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	byte n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

57
Tree	short n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	short n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

58
Tree	void n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	void n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

59
Tree	float n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	float n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

60
Tree	char n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	char n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

61
Tree	byte n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	byte n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

62
Tree	boolean n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	boolean n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

63
Tree	double n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	double n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 5

64
Tree	int n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	int n = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

65
Tree	void n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	void n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

66
Tree	short n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	short n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

67
Tree	float n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	float n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

68
Tree	long n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	long n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

69
Tree	char n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	char n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

70
Tree	short j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	short j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

71
Tree	void j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	void j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

72
Tree	byte j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	byte j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

73
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; length
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; length
Distance : 3

74
Tree	char j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	char j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

75
Tree	float j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	float j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

76
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkNotNull
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkNotNull
Distance : 3

77
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Fraction
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Fraction
Distance : 3

78
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; &&
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; &&
Distance : 3

79
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; !=
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; !=
Distance : 3

80
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; value
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; value
Distance : 3

81
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; T
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; T
Distance : 3

82
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; -
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; -
Distance : 3

83
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Preconditions
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Preconditions
Distance : 3

84
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; [
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; [
Distance : 3

85
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ]
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ]
Distance : 3

86
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertEquals
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertEquals
Distance : 3

87
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; !
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; !
Distance : 3

88
Tree	int n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	int n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

89
Tree	double n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	double n = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 4

90
Tree	byte j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	byte j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

91
Tree	boolean j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	boolean j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

92
Tree	double j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	double j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

93
Tree	char j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	char j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

94
Tree	int j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	int j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 3

95
Tree	boolean j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	boolean j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

96
Tree	short j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	short j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

97
Tree	long j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	long j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 3

98
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getParent
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getParent
Distance : 3

99
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
Distance : 2

100
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; compiler
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; compiler
Distance : 3

101
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <
Distance : 3

102
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; this
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; this
Distance : 3

103
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; final
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; final
Distance : 3

104
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; =
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; =
Distance : 3

105
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; }
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; }
Distance : 3

106
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ()
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ()
Distance : 3

107
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; {
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; {
Distance : 3

108
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkArgument
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkArgument
Distance : 3

109
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; field
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; field
Distance : 3

110
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; t
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; t
Distance : 3

111
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; name
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; name
Distance : 3

112
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; data
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; data
Distance : 3

113
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; add
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; add
Distance : 3

114
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NodeTraversal
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NodeTraversal
Distance : 3

115
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; stream
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; stream
Distance : 3

116
Tree	float j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Code	float j = NUMBER_CONSTANT * j - NUMBER_CONSTANT ;
Distance : 4

117
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; String
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; String
Distance : 3

118
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mode
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mode
Distance : 3

119
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mock
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mock
Distance : 3

120
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Object
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Object
Distance : 3

121
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ParamChecks
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ParamChecks
Distance : 3

122
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <blank>
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <blank>
Distance : 3

123
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; -
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; -
Distance : 3

124
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <s>
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; <s>
Distance : 3

125
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; (
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; (
Distance : 3

126
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ;
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ;
Distance : 2

127
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; )
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; )
Distance : 3

128
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; .
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; .
Distance : 3

129
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ,
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ,
Distance : 3

130
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; if
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; if
Distance : 3

131
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Math
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Math
Distance : 3

132
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; protected
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; protected
Distance : 3

133
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NodeUtil
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NodeUtil
Distance : 3

134
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; root
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; root
Distance : 3

135
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; StringBuilder
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; StringBuilder
Distance : 3

136
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; stroke
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; stroke
Distance : 3

137
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; toString
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; toString
Distance : 3

138
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Test
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Test
Distance : 3

139
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; c
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; c
Distance : 3

140
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; lines
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; lines
Distance : 3

141
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; return;
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; return;
Distance : 3

142
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Distance : 3

143
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; size
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; size
Distance : 3

144
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; join
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; join
Distance : 3

145
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; boolean
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; boolean
Distance : 3

146
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; type
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; type
Distance : 3

147
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; *
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; *
Distance : 3

148
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mockingProgress
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; mockingProgress
Distance : 3

149
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; i
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; i
Distance : 3

150
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; wanted
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; wanted
Distance : 3

151
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; super
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; super
Distance : 3

152
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Node
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Node
Distance : 3

153
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; verify
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; verify
Distance : 3

154
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ex
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; ex
Distance : 3

155
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; traverseEs6
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; traverseEs6
Distance : 3

156
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; MutableTimePeriod
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; MutableTimePeriod
Distance : 3

157
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; out
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; out
Distance : 3

158
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; isEmpty
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; isEmpty
Distance : 3

159
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; JSType
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; JSType
Distance : 3

160
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; char
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; char
Distance : 3

161
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; get
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; get
Distance : 3

162
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkState
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; checkState
Distance : 3

163
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; int
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; int
Distance : 3

164
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; notifyListeners
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; notifyListeners
Distance : 3

165
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Invocation
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Invocation
Distance : 3

166
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertTrue
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; assertTrue
Distance : 3

167
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; /
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; /
Distance : 3

168
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; externs
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; externs
Distance : 3

169
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; for
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; for
Distance : 3

170
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; setUp
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; setUp
Distance : 3

171
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; reportMatcher
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; reportMatcher
Distance : 3

172
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; TestUtilities
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; TestUtilities
Distance : 3

173
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; js
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; js
Distance : 3

174
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; else
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; else
Distance : 3

175
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getMessage
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; getMessage
Distance : 3

176
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; matcher
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; matcher
Distance : 3

177
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; MathRuntimeException
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; MathRuntimeException
Distance : 3

178
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; equals
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; equals
Distance : 3

179
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; StrBuilder
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; StrBuilder
Distance : 3

180
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; d
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; d
Distance : 3

181
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; public
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; public
Distance : 3

182
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; setAcceptedLanguage
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; setAcceptedLanguage
Distance : 3

183
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; +
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; +
Distance : 3

184
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; null
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; null
Distance : 3

185
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; >
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; >
Distance : 3

186
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; new
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; new
Distance : 3

187
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; STRING_CONSTANT
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; STRING_CONSTANT
Distance : 3

188
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NUMBER_CONSTANT
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; NUMBER_CONSTANT
Distance : 3

189
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; return
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; return
Distance : 3

190
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; e
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; e
Distance : 3

191
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; n
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; n
Distance : 3

192
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Override
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; Override
Distance : 3

193
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; true
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; true
Distance : 3

194
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; values
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; values
Distance : 3

195
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; {}
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; {}
Distance : 3

196
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; abs
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; abs
Distance : 3

197
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; instant
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; instant
Distance : 3

198
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; static
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; static
Distance : 3

199
Tree	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; node
Code	int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ; node
Distance : 3

========================================================================


========================================================================
Example Number: 56
Parent Code is: 
{ return getCumPct ( ( Comparable < > ) v ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return getPct ( ( Comparable < > ) v ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumPct}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (215{val=)}) (800{val=v})) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPct}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (215{val=)}) (800{val=v})) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/75/parent/src_main_java_org_apache_commons_math_stat_Frequency.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	final int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

1
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

2
Tree	final int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

3
Tree	protected int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

4
Tree	final int /= ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

5
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

6
Tree	private int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

7
Tree	final int /= ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

8
Tree	private int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

9
Tree	private int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

10
Tree	final int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

11
Tree	final int /= ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

12
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

13
Tree	final int /= ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

14
Tree	protected double [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

15
Tree	final int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

16
Tree	protected double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

17
Tree	protected int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

18
Tree	final int /= ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

19
Tree	protected int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

20
Tree	final int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

21
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

22
Tree	final int /= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

23
Tree	final int /= ( T < T > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

24
Tree	final int /= ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

25
Tree	final int /= ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

26
Tree	final int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

27
Tree	final int /= ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

28
Tree	final int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

29
Tree	final int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

30
Tree	private int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

31
Tree	final int /= ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

32
Tree	protected int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

33
Tree	final int /= ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

34
Tree	final int /= ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

35
Tree	final int /= ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

36
Tree	final int /= ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

37
Tree	protected int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

38
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

39
Tree	private double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

40
Tree	private int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

41
Tree	private int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

42
Tree	protected int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

43
Tree	final int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

44
Tree	private int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

45
Tree	final int /= ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

46
Tree	final int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

47
Tree	final int /= ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

48
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

49
Tree	protected int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

50
Tree	final int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

51
Tree	protected double [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

52
Tree	final int [] ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

53
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

54
Tree	final int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

55
Tree	final int /= ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

56
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

57
Tree	private double [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private double [] ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

58
Tree	final int /= ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

59
Tree	private int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

60
Tree	final int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

61
Tree	final int [] ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

62
Tree	final int [] ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

63
Tree	protected int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

64
Tree	final int /= ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

65
Tree	protected int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

66
Tree	final int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

67
Tree	protected int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

68
Tree	final int /= ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

69
Tree	private int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

70
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

71
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

72
Tree	private int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

73
Tree	final int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

74
Tree	final int /= ( T < ? > [] , double extends , double <> , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double <> , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

75
Tree	protected double [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

76
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

77
Tree	final int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

78
Tree	final int /= ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

79
Tree	protected double [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double extends , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

80
Tree	final int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

81
Tree	final int /= ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

82
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

83
Tree	final int /= ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

84
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

85
Tree	protected double [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

86
Tree	final int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

87
Tree	protected int [] ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

88
Tree	final int /= ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

89
Tree	protected int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

90
Tree	protected int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

91
Tree	protected int [] ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

92
Tree	protected int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

93
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

94
Tree	final int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

95
Tree	final int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

96
Tree	final int [] ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

97
Tree	final int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

98
Tree	private int [] ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

99
Tree	private int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

100
Tree	final int /= ( T < ? > [] , double T , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

101
Tree	final int [] ( T < T > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < T > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

102
Tree	final int [] ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

103
Tree	final int /= ( T < ? > [] , double extends , double <> , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double <> , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

104
Tree	final int /= ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

105
Tree	final int [] ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

106
Tree	private int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

107
Tree	private int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

108
Tree	private int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

109
Tree	private int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

110
Tree	final int /= ( T < ? > [] , boolean extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

111
Tree	final int [] ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

112
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

113
Tree	private int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

114
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

115
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

116
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

117
Tree	protected int [] ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

118
Tree	final int /= ( T < T > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

119
Tree	private int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , boolean T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

120
Tree	final int [] ( T < ? > [] , void T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , void T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

121
Tree	final int /= ( T < ? > [] , double extends , double <> , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double <> , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

122
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

123
Tree	final int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

124
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < strings > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < strings > {} ) throws CHAR_CONS ;
Distance : 21

125
Tree	final int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

126
Tree	protected int [] ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

127
Tree	protected int [] ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

128
Tree	final double /= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final double /= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

129
Tree	protected int [] ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

130
Tree	final int /= ( T < T > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

131
Tree	final int [] ( T < ? > [] , boolean T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , boolean T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

132
Tree	final int /= ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

133
Tree	final int /= ( T < ? > [] , double extends , double extends , false < strings > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < strings > {} ) throws CHAR_CONS ;
Distance : 21

134
Tree	final int [] ( T < ? > extends , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > extends , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

135
Tree	final int /= ( T < ? > [] , boolean T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

136
Tree	final double /= ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final double /= ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

137
Tree	final int /= ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

138
Tree	final int /= ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

139
Tree	private int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

140
Tree	final int /= ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

141
Tree	final int [] ( T < ? > [] , double T , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

142
Tree	final int [] ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

143
Tree	final int [] ( T < T > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < T > [] , double extends , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

144
Tree	protected int [] ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

145
Tree	private double [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	private double [] ( T < ? > [] , double T , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

146
Tree	final int -= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int -= ( T < ? > [] , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

147
Tree	final int /= ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

148
Tree	final int /= ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

149
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

150
Tree	final int [] ( T < ? > [] , double T , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Distance : 21

151
Tree	private int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

152
Tree	final int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

153
Tree	private int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

154
Tree	final int /= ( T < ? > [] , double ++ , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ++ , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

155
Tree	private int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

156
Tree	final double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final double [] ( T < ? > [] , double T , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

157
Tree	protected int [] ( T < ? > [] , boolean ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , boolean ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

158
Tree	private int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , boolean extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

159
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

160
Tree	protected int [] ( T < ? > [] , double ? , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

161
Tree	private int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

162
Tree	protected double [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double extends , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

163
Tree	final int /= ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

164
Tree	protected int [] ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double T , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

165
Tree	final int /= ( T < ? > [] , double extends , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Distance : 21

166
Tree	final int /= ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double T , double extends , false < natural > {} ) throws CHAR_CONS ;
Distance : 21

167
Tree	private int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

168
Tree	protected int [] ( T < ? > [] , double extends , double extends , false < LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double extends , double extends , false < LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE > {} ) throws CHAR_CONS ;
Distance : 21

169
Tree	final int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

170
Tree	final int /= ( T < ? > [] , boolean ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , boolean ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

171
Tree	final int /= ( T < ? > [] , double extends , double extends , false < LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE > {} ) throws CHAR_CONS ;
Distance : 21

172
Tree	final int /= ( T < ? > [] , double ? , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

173
Tree	final int /= ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

174
Tree	final int /= ( T < T > [] , double extends , double extends , arguments < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , double extends , double extends , arguments < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

175
Tree	final int [] ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double <> , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

176
Tree	private double [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private double [] ( T < ? > [] , double T , double T , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

177
Tree	private int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double extends , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

178
Tree	private int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double T , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

179
Tree	private int [] ( T < ? > [] , double ? , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

180
Tree	private int [] ( T < ? > [] , double ? , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < currentState.length > {} ) throws CHAR_CONS ;
Distance : 21

181
Tree	private int [] ( T < ? > [] , double ? , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < CachingBytecodeGenerator > {} ) throws CHAR_CONS ;
Distance : 21

182
Tree	final int [] ( T < ? > [] , double extends , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double extends , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Distance : 21

183
Tree	private double [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	private double [] ( T < ? > [] , double ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

184
Tree	private int [] ( T < ? > [] , double ? , double extends , false < data.length > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < data.length > {} ) throws CHAR_CONS ;
Distance : 21

185
Tree	final int [] ( T < ? > [] , double T , double extends , false < strings > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < strings > {} ) throws CHAR_CONS ;
Distance : 21

186
Tree	final int /= ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double extends , double extends , false < y.length > {} ) throws CHAR_CONS ;
Distance : 21

187
Tree	final int [] ( T < ? > [] , double T , double extends , false < Boolean.TRUE > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < Boolean.TRUE > {} ) throws CHAR_CONS ;
Distance : 21

188
Tree	final int [] ( T < ? > extends , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > extends , double extends , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

189
Tree	final int /= ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Code	final int /= ( T < ? > [] , double ? , double extends , false < IncrementalCheckMode.GENERATE_IJS > {} ) throws CHAR_CONS ;
Distance : 21

190
Tree	final int /= ( T < T > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , boolean ? , double extends , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

191
Tree	final int [] ( T < ? > [] , double T , double extends , false < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED > {} ) throws CHAR_CONS ;
Distance : 21

192
Tree	final int [] ( T < ? > [] , double T , double extends , false < LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double T , double extends , false < LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE > {} ) throws CHAR_CONS ;
Distance : 21

193
Tree	final int /= ( T < T > [] , double ? , double extends , arguments < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int /= ( T < T > [] , double ? , double extends , arguments < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

194
Tree	protected double [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Code	protected double [] ( T < ? > [] , double ? , double extends , false < StringUtils.EMPTY > {} ) throws CHAR_CONS ;
Distance : 21

195
Tree	final int [] ( T < T > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Code	final int [] ( T < T > [] , double ? , double <> , false < PlotOrientation.VERTICAL > {} ) throws CHAR_CONS ;
Distance : 21

196
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < Verification.EXPLICIT > {} ) throws CHAR_CONS ;
Distance : 21

197
Tree	final int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Code	final int [] ( T < ? > [] , double ? , double extends , false < getCumPct > {} ) throws CHAR_CONS ;
Distance : 21

198
Tree	protected int [] ( T < ? > [] , double ? , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Code	protected int [] ( T < ? > [] , double ? , double extends , false < Token.CATCH > {} ) throws CHAR_CONS ;
Distance : 21

199
Tree	private int [] ( T < ? > [] , double ? , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Code	private int [] ( T < ? > [] , double ? , double extends , false < FractionFormat > {} ) throws CHAR_CONS ;
Distance : 21

========================================================================


========================================================================
Example Number: 57
Parent Code is: 
{ return solve ( min , max ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return solve ( f , min , max ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/70/parent/src_main_java_org_apache_commons_math_analysis_solvers_BisectionSolver.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return solve ( min , max ) ; } StrBuilder
Code	{ return solve ( min , max ) ; } StrBuilder
Distance : 3

1
Tree	{ return solve ( min , max ) ; } add
Code	{ return solve ( min , max ) ; } add
Distance : 3

2
Tree	{ return solve ( min , max ) ; } checkArgument
Code	{ return solve ( min , max ) ; } checkArgument
Distance : 3

3
Tree	{ return solve ( min , max ) ; } data
Code	{ return solve ( min , max ) ; } data
Distance : 3

4
Tree	{ return solve ( min , max ) ; } NodeUtil
Code	{ return solve ( min , max ) ; } NodeUtil
Distance : 3

5
Tree	{ return solve ( min , max ) ; } void
Code	{ return solve ( min , max ) ; } void
Distance : 3

6
Tree	{ return solve ( min , max ) ; } catch
Code	{ return solve ( min , max ) ; } catch
Distance : 3

7
Tree	{ return solve ( min , max ) ; } compiler
Code	{ return solve ( min , max ) ; } compiler
Distance : 3

8
Tree	{ return solve ( min , max ) ; } throw
Code	{ return solve ( min , max ) ; } throw
Distance : 3

9
Tree	{ return solve ( min , max ) ; } n
Code	{ return solve ( min , max ) ; } n
Distance : 3

10
Tree	{ return solve ( min , max ) ; } +
Code	{ return solve ( min , max ) ; } +
Distance : 3

11
Tree	{ return solve ( min , max ) ; } e
Code	{ return solve ( min , max ) ; } e
Distance : 3

12
Tree	{ return solve ( min , max ) ; } NodeTraversal
Code	{ return solve ( min , max ) ; } NodeTraversal
Distance : 3

13
Tree	{ return solve ( min , max ) ; } expected
Code	{ return solve ( min , max ) ; } expected
Distance : 3

14
Tree	{ return solve ( min , max ) ; } {}
Code	{ return solve ( min , max ) ; } {}
Distance : 3

15
Tree	{ return solve ( min , max ) ; } ]
Code	{ return solve ( min , max ) ; } ]
Distance : 3

16
Tree	{ return solve ( min , max ) ; } mode
Code	{ return solve ( min , max ) ; } mode
Distance : 3

17
Tree	{ return solve ( min , max ) ; } &&
Code	{ return solve ( min , max ) ; } &&
Distance : 3

18
Tree	{ return solve ( min , max ) ; } public
Code	{ return solve ( min , max ) ; } public
Distance : 3

19
Tree	{ return solve ( min , max ) ; } final
Code	{ return solve ( min , max ) ; } final
Distance : 3

20
Tree	{ return solve ( min , max ) ; } null
Code	{ return solve ( min , max ) ; } null
Distance : 3

21
Tree	{ return solve ( min , max ) ; } getArgumentMatcherStorage
Code	{ return solve ( min , max ) ; } getArgumentMatcherStorage
Distance : 3

22
Tree	{ return solve ( min , max ) ; } wanted
Code	{ return solve ( min , max ) ; } wanted
Distance : 3

23
Tree	{ return solve ( min , max ) ; } if
Code	{ return solve ( min , max ) ; } if
Distance : 3

24
Tree	{ return solve ( min , max ) ; } ex
Code	{ return solve ( min , max ) ; } ex
Distance : 3

25
Tree	{ return solve ( min , max ) ; } Preconditions
Code	{ return solve ( min , max ) ; } Preconditions
Distance : 3

26
Tree	{ return solve ( min , max ) ; } new
Code	{ return solve ( min , max ) ; } new
Distance : 3

27
Tree	{ return solve ( min , max ) ; } =
Code	{ return solve ( min , max ) ; } =
Distance : 3

28
Tree	{ return solve ( min , max ) ; } STRING_CONSTANT
Code	{ return solve ( min , max ) ; } STRING_CONSTANT
Distance : 3

29
Tree	{ return solve ( min , max ) ; } ()
Code	{ return solve ( min , max ) ; } ()
Distance : 3

30
Tree	{ return solve ( min , max ) ; } ,
Code	{ return solve ( min , max ) ; } ,
Distance : 3

31
Tree	{ return solve ( min , max ) ; } {
Code	{ return solve ( min , max ) ; } {
Distance : 3

32
Tree	{ return solve ( min , max ) ; } }
Code	{ return solve ( min , max ) ; } }
Distance : 3

33
Tree	{ return solve ( min , max ) ; } <
Code	{ return solve ( min , max ) ; } <
Distance : 3

34
Tree	{ return solve ( min , max ) ; } .
Code	{ return solve ( min , max ) ; } .
Distance : 3

35
Tree	{ return solve ( min , max ) ; } (
Code	{ return solve ( min , max ) ; } (
Distance : 3

36
Tree	{ return solve ( min , max ) ; } ;
Code	{ return solve ( min , max ) ; } ;
Distance : 3

37
Tree	{ return solve ( min , max ) ; } <blank>
Code	{ return solve ( min , max ) ; } <blank>
Distance : 3

38
Tree	{ return solve ( min , max ) ; } return
Code	{ return solve ( min , max ) ; } return
Distance : 3

39
Tree	{ return solve ( min , max ) ; } <s>
Code	{ return solve ( min , max ) ; } <s>
Distance : 3

40
Tree	{ return solve ( min , max ) ; } )
Code	{ return solve ( min , max ) ; } )
Distance : 3

41
Tree	{ return solve ( min , max ) ; } >
Code	{ return solve ( min , max ) ; } >
Distance : 3

42
Tree	{ return solve ( min , max ) ; } js
Code	{ return solve ( min , max ) ; } js
Distance : 3

43
Tree	{ return solve ( min , max ) ; } return
Code	{ return solve ( min , max ) ; } return
Distance : 3

44
Tree	{ return solve ( min , max ) ; } true
Code	{ return solve ( min , max ) ; } true
Distance : 3

45
Tree	{ return solve ( min , max ) ; } this
Code	{ return solve ( min , max ) ; } this
Distance : 3

46
Tree	{ return solve ( min , max ) ; } -
Code	{ return solve ( min , max ) ; } -
Distance : 3

47
Tree	{ return solve ( min , max ) ; } root
Code	{ return solve ( min , max ) ; } root
Distance : 3

48
Tree	{ return solve ( min , max ) ; } NUMBER_CONSTANT
Code	{ return solve ( min , max ) ; } NUMBER_CONSTANT
Distance : 3

49
Tree	{ return solve ( min , max ) ; } assertTrue
Code	{ return solve ( min , max ) ; } assertTrue
Distance : 3

50
Tree	{ return solve ( min , max ) ; } /
Code	{ return solve ( min , max ) ; } /
Distance : 3

51
Tree	{ return solve ( min , max ) ; } value
Code	{ return solve ( min , max ) ; } value
Distance : 3

52
Tree	{ return solve ( min , max ) ; } T
Code	{ return solve ( min , max ) ; } T
Distance : 3

53
Tree	{ return solve ( min , max ) ; } setAcceptedLanguage
Code	{ return solve ( min , max ) ; } setAcceptedLanguage
Distance : 3

54
Tree	{ return solve ( min , max ) ; } !=
Code	{ return solve ( min , max ) ; } !=
Distance : 3

55
Tree	{ return solve ( min , max ) ; } reportMatcher
Code	{ return solve ( min , max ) ; } reportMatcher
Distance : 3

56
Tree	{ return solve ( min , max ) ; } instant
Code	{ return solve ( min , max ) ; } instant
Distance : 3

57
Tree	{ return solve ( min , max ) ; } getMessage
Code	{ return solve ( min , max ) ; } getMessage
Distance : 3

58
Tree	{ return solve ( min , max ) ; } stream
Code	{ return solve ( min , max ) ; } stream
Distance : 3

59
Tree	{ return solve ( min , max ) ; } else
Code	{ return solve ( min , max ) ; } else
Distance : 3

60
Tree	{ return solve ( min , max ) ; } matcher
Code	{ return solve ( min , max ) ; } matcher
Distance : 3

61
Tree	{ return solve ( min , max ) ; } type
Code	{ return solve ( min , max ) ; } type
Distance : 3

62
Tree	{ return solve ( min , max ) ; } optimizer
Code	{ return solve ( min , max ) ; } optimizer
Distance : 3

63
Tree	{ return solve ( min , max ) ; } isBlock
Code	{ return solve ( min , max ) ; } isBlock
Distance : 3

64
Tree	{ return solve ( min , max ) ; } abs
Code	{ return solve ( min , max ) ; } abs
Distance : 3

65
Tree	{ return solve ( max , max ) ; }
Code	{ return solve ( max , max ) ; }
Distance : 3

66
Tree	{ return solve ( min , min ) ; }
Code	{ return solve ( min , min ) ; }
Distance : 3

67
Tree	{ return solve ( min , f ) ; }
Code	{ return solve ( min , f ) ; }
Distance : 3

68
Tree	{ return solve ( f , f ) ; }
Code	{ return solve ( f , f ) ; }
Distance : 3

69
Tree	{ return solve ( f , max ) ; }
Code	{ return solve ( f , max ) ; }
Distance : 2

70
Tree	{ return solve ( max , f ) ; }
Code	{ return solve ( max , f ) ; }
Distance : 4

71
Tree	{ return solve ( f , min ) ; }
Code	{ return solve ( f , min ) ; }
Distance : 2

72
Tree	{ return solve ( min , max ) ; } super
Code	{ return solve ( min , max ) ; } super
Distance : 3

73
Tree	{ return solve ( min , max ) ; } long
Code	{ return solve ( min , max ) ; } long
Distance : 3

74
Tree	{ return solve ( min , max ) ; } valueOf
Code	{ return solve ( min , max ) ; } valueOf
Distance : 3

75
Tree	{ return solve ( min , max ) ; } double
Code	{ return solve ( min , max ) ; } double
Distance : 3

76
Tree	{ return solve ( min , max ) ; } Assert
Code	{ return solve ( min , max ) ; } Assert
Distance : 3

77
Tree	{ return solve ( min , max ) ; } Fraction
Code	{ return solve ( min , max ) ; } Fraction
Distance : 3

78
Tree	{ return solve ( min , max ) ; } Exception
Code	{ return solve ( min , max ) ; } Exception
Distance : 3

79
Tree	{ return solve ( min , max ) ; } LanguageMode.ECMASCRIPT6
Code	{ return solve ( min , max ) ; } LanguageMode.ECMASCRIPT6
Distance : 3

80
Tree	{ return solve ( min , max ) ; } index
Code	{ return solve ( min , max ) ; } index
Distance : 3

81
Tree	{ return solve ( min , max ) ; } node
Code	{ return solve ( min , max ) ; } node
Distance : 3

82
Tree	{ return solve ( min , max ) ; } setUp
Code	{ return solve ( min , max ) ; } setUp
Distance : 3

83
Tree	{ return solve ( min , max ) ; } getParent
Code	{ return solve ( min , max ) ; } getParent
Distance : 3

84
Tree	{ return solve ( min , max ) ; } protected
Code	{ return solve ( min , max ) ; } protected
Distance : 3

85
Tree	{ return solve ( min , max ) ; } invocations
Code	{ return solve ( min , max ) ; } invocations
Distance : 3

86
Tree	{ return solve ( min , max ) ; } values
Code	{ return solve ( min , max ) ; } values
Distance : 3

87
Tree	{ return solve ( min , max ) ; } out
Code	{ return solve ( min , max ) ; } out
Distance : 3

88
Tree	{ return solve ( min , max ) ; } obj
Code	{ return solve ( min , max ) ; } obj
Distance : 3

89
Tree	{ return solve ( min , max ) ; } a
Code	{ return solve ( min , max ) ; } a
Distance : 3

90
Tree	{ return solve ( min , max ) ; } instance
Code	{ return solve ( min , max ) ; } instance
Distance : 3

91
Tree	{ return solve ( min , max ) ; } alpha
Code	{ return solve ( min , max ) ; } alpha
Distance : 3

92
Tree	{ return solve ( min , max ) ; } externs
Code	{ return solve ( min , max ) ; } externs
Distance : 3

93
Tree	{ return solve ( min , max ) ; } simpleMethod
Code	{ return solve ( min , max ) ; } simpleMethod
Distance : 3

94
Tree	{ return solve ( min , max ) ; } [
Code	{ return solve ( min , max ) ; } [
Distance : 3

95
Tree	{ return solve ( min , max ) ; } i
Code	{ return solve ( min , max ) ; } i
Distance : 3

96
Tree	{ return solve ( min , max ) ; } checkState
Code	{ return solve ( min , max ) ; } checkState
Distance : 3

97
Tree	{ return solve ( min , max ) ; } int
Code	{ return solve ( min , max ) ; } int
Distance : 3

98
Tree	{ return solve ( min , max ) ; } traverseEs6
Code	{ return solve ( min , max ) ; } traverseEs6
Distance : 3

99
Tree	{ return solve ( min , max ) ; }
Code	{ return solve ( min , max ) ; }
Distance : 2

100
Tree	{ return solve ( min , max ) ; } MutableTimePeriod
Code	{ return solve ( min , max ) ; } MutableTimePeriod
Distance : 3

101
Tree	{ return solve ( min , max ) ; } return;
Code	{ return solve ( min , max ) ; } return;
Distance : 3

102
Tree	{ return solve ( min , max ) ; } get
Code	{ return solve ( min , max ) ; } get
Distance : 3

103
Tree	{ return solve ( min , max ) ; } mockingProgress
Code	{ return solve ( min , max ) ; } mockingProgress
Distance : 3

104
Tree	{ return solve ( min , max ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return solve ( min , max ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

105
Tree	{ return solve ( min , max ) ; } clone
Code	{ return solve ( min , max ) ; } clone
Distance : 3

106
Tree	{ return solve ( min , max ) ; } Double
Code	{ return solve ( min , max ) ; } Double
Distance : 3

107
Tree	{ return solve ( min , max ) ; } PeriodType
Code	{ return solve ( min , max ) ; } PeriodType
Distance : 3

108
Tree	{ return solve ( min , max ) ; } <=
Code	{ return solve ( min , max ) ; } <=
Distance : 3

109
Tree	{ return solve ( min , max ) ; } isNormalBlock
Code	{ return solve ( min , max ) ; } isNormalBlock
Distance : 3

110
Tree	{ return solve ( min , max ) ; } contains
Code	{ return solve ( min , max ) ; } contains
Distance : 3

111
Tree	{ return solve ( min , max ) ; } b
Code	{ return solve ( min , max ) ; } b
Distance : 3

112
Tree	{ return solve ( min , max ) ; } String
Code	{ return solve ( min , max ) ; } String
Distance : 3

113
Tree	{ return solve ( min , max ) ; } assertThat
Code	{ return solve ( min , max ) ; } assertThat
Distance : 3

114
Tree	{ return solve ( min , max ) ; } str
Code	{ return solve ( min , max ) ; } str
Distance : 3

115
Tree	{ return solve ( min , max ) ; } LINE_JOINER
Code	{ return solve ( min , max ) ; } LINE_JOINER
Distance : 3

116
Tree	{ return solve ( min , max ) ; } createIllegalArgumentException
Code	{ return solve ( min , max ) ; } createIllegalArgumentException
Distance : 3

117
Tree	{ return solve ( min , max ) ; } size
Code	{ return solve ( min , max ) ; } size
Distance : 3

118
Tree	{ return solve ( max , min ) ; }
Code	{ return solve ( max , min ) ; }
Distance : 3

119
Tree	{ return solve ( min , max ) ; } Object
Code	{ return solve ( min , max ) ; } Object
Distance : 3

120
Tree	{ return solve ( min , max ) ; } JSType
Code	{ return solve ( min , max ) ; } JSType
Distance : 3

121
Tree	{ return solve ( min , max ) ; } throws
Code	{ return solve ( min , max ) ; } throws
Distance : 3

122
Tree	{ return solve ( min , max ) ; } static
Code	{ return solve ( min , max ) ; } static
Distance : 3

123
Tree	{ return solve ( min , max ) ; } char
Code	{ return solve ( min , max ) ; } char
Distance : 3

124
Tree	{ return solve ( min , max ) ; } source
Code	{ return solve ( min , max ) ; } source
Distance : 3

125
Tree	{ return solve ( min , max ) ; } v
Code	{ return solve ( min , max ) ; } v
Distance : 3

126
Tree	{ return solve ( min , max ) ; } join
Code	{ return solve ( min , max ) ; } join
Distance : 3

127
Tree	{ return solve ( min , max ) ; } result
Code	{ return solve ( min , max ) ; } result
Distance : 3

128
Tree	{ return solve ( min , max ) ; } boolean
Code	{ return solve ( min , max ) ; } boolean
Distance : 3

129
Tree	{ return solve ( min , max ) ; } getInstance
Code	{ return solve ( min , max ) ; } getInstance
Distance : 3

130
Tree	{ return solve ( min , max ) ; } *
Code	{ return solve ( min , max ) ; } *
Distance : 3

131
Tree	{ return solve ( min , max ) ; } serialised
Code	{ return solve ( min , max ) ; } serialised
Distance : 3

132
Tree	{ return solve ( min , max ) ; } ArrayList
Code	{ return solve ( min , max ) ; } ArrayList
Distance : 3

133
Tree	{ return solve ( min , max ) ; } <>
Code	{ return solve ( min , max ) ; } <>
Distance : 3

134
Tree	{ return solve ( min , max ) ; } f
Code	{ return solve ( min , max ) ; } f
Distance : 3

135
Tree	{ return solve ( min , max ) ; } ParamChecks
Code	{ return solve ( min , max ) ; } ParamChecks
Distance : 3

136
Tree	{ return solve ( min , max ) ; } class
Code	{ return solve ( min , max ) ; } class
Distance : 3

137
Tree	{ return solve ( min , max ) ; } testSame
Code	{ return solve ( min , max ) ; } testSame
Distance : 3

138
Tree	{ return solve ( min , max ) ; } mock
Code	{ return solve ( min , max ) ; } mock
Distance : 3

139
Tree	{ return solve ( min , max ) ; } parent
Code	{ return solve ( min , max ) ; } parent
Distance : 3

140
Tree	{ return solve ( min , max ) ; } fireChangeEvent
Code	{ return solve ( min , max ) ; } fireChangeEvent
Distance : 3

141
Tree	{ return solve ( min , max ) ; } stroke
Code	{ return solve ( min , max ) ; } stroke
Distance : 3

142
Tree	{ return solve ( min , max ) ; } StringBuilder
Code	{ return solve ( min , max ) ; } StringBuilder
Distance : 3

143
Tree	{ return solve ( min , max ) ; } isEmpty
Code	{ return solve ( min , max ) ; } isEmpty
Distance : 3

144
Tree	{ return solve ( min , max ) ; } sqrt
Code	{ return solve ( min , max ) ; } sqrt
Distance : 3

145
Tree	{ return solve ( min , max ) ; } MathRuntimeException
Code	{ return solve ( min , max ) ; } MathRuntimeException
Distance : 3

146
Tree	{ return solve ( min , max ) ; } returnZero
Code	{ return solve ( min , max ) ; } returnZero
Distance : 3

147
Tree	{ return solve ( min , max ) ; } Args
Code	{ return solve ( min , max ) ; } Args
Distance : 3

148
Tree	{ return solve ( min , max ) ; } getFirstChild
Code	{ return solve ( min , max ) ; } getFirstChild
Distance : 3

149
Tree	{ return solve ( min , max ) ; } :
Code	{ return solve ( min , max ) ; } :
Distance : 3

150
Tree	{ return solve ( min , max ) ; } m
Code	{ return solve ( min , max ) ; } m
Distance : 3

151
Tree	{ return solve ( min , max ) ; } paint
Code	{ return solve ( min , max ) ; } paint
Distance : 3

152
Tree	{ return solve ( min , max ) ; } length
Code	{ return solve ( min , max ) ; } length
Distance : 3

153
Tree	{ return solve ( min , max ) ; } Node
Code	{ return solve ( min , max ) ; } Node
Distance : 3

154
Tree	{ return solve ( min , max ) ; } lines
Code	{ return solve ( min , max ) ; } lines
Distance : 3

155
Tree	{ return solve ( min , max ) ; } verify
Code	{ return solve ( min , max ) ; } verify
Distance : 3

156
Tree	{ return solve ( min , max ) ; } TestUtils
Code	{ return solve ( min , max ) ; } TestUtils
Distance : 3

157
Tree	{ return solve ( min , max ) ; } Integer
Code	{ return solve ( min , max ) ; } Integer
Distance : 3

158
Tree	{ return solve ( min , max ) ; } checkNotNull
Code	{ return solve ( min , max ) ; } checkNotNull
Distance : 3

159
Tree	{ return solve ( min , max ) ; } s
Code	{ return solve ( min , max ) ; } s
Distance : 3

160
Tree	{ return solve ( min , max ) ; } scope
Code	{ return solve ( min , max ) ; } scope
Distance : 3

161
Tree	{ return solve ( min , max ) ; } reportCodeChange
Code	{ return solve ( min , max ) ; } reportCodeChange
Distance : 3

162
Tree	{ return solve ( min , max ) ; } invocation
Code	{ return solve ( min , max ) ; } invocation
Distance : 3

163
Tree	{ return solve ( min , max ) ; } FastMath
Code	{ return solve ( min , max ) ; } FastMath
Distance : 3

164
Tree	{ return solve ( min , max ) ; } t
Code	{ return solve ( min , max ) ; } t
Distance : 3

165
Tree	{ return solve ( min , max ) ; } name
Code	{ return solve ( min , max ) ; } name
Distance : 3

166
Tree	{ return solve ( min , max ) ; } array
Code	{ return solve ( min , max ) ; } array
Distance : 3

167
Tree	{ return solve ( min , max ) ; } List
Code	{ return solve ( min , max ) ; } List
Distance : 3

168
Tree	{ return solve ( min , max ) ; } try
Code	{ return solve ( min , max ) ; } try
Distance : 3

169
Tree	{ return solve ( min , max ) ; } IllegalArgumentException
Code	{ return solve ( min , max ) ; } IllegalArgumentException
Distance : 3

170
Tree	{ return solve ( min , max ) ; } UnivariateFunction
Code	{ return solve ( min , max ) ; } UnivariateFunction
Distance : 3

171
Tree	{ return solve ( min , max ) ; } append
Code	{ return solve ( min , max ) ; } append
Distance : 3

172
Tree	{ return solve ( min , max ) ; } ?
Code	{ return solve ( min , max ) ; } ?
Distance : 3

173
Tree	{ return solve ( min , max ) ; } !
Code	{ return solve ( min , max ) ; } !
Distance : 3

174
Tree	{ return solve ( min , max ) ; } nullNotPermitted
Code	{ return solve ( min , max ) ; } nullNotPermitted
Distance : 3

175
Tree	{ return solve ( min , max ) ; } fail
Code	{ return solve ( min , max ) ; } fail
Distance : 3

176
Tree	{ return solve ( min , max ) ; } []
Code	{ return solve ( min , max ) ; } []
Distance : 3

177
Tree	{ return solve ( min , max ) ; } @
Code	{ return solve ( min , max ) ; } @
Distance : 3

178
Tree	{ return solve ( min , max ) ; } assertEquals
Code	{ return solve ( min , max ) ; } assertEquals
Distance : 3

179
Tree	{ return solve ( min , max ) ; } test
Code	{ return solve ( min , max ) ; } test
Distance : 3

180
Tree	{ return solve ( min , max ) ; } ==
Code	{ return solve ( min , max ) ; } ==
Distance : 3

181
Tree	{ return solve ( min , max ) ; } equals
Code	{ return solve ( min , max ) ; } equals
Distance : 3

182
Tree	{ return solve ( min , max ) ; } Invocation
Code	{ return solve ( min , max ) ; } Invocation
Distance : 3

183
Tree	{ return solve ( min , max ) ; } notifyListeners
Code	{ return solve ( min , max ) ; } notifyListeners
Distance : 3

184
Tree	{ return solve ( min , max ) ; } for
Code	{ return solve ( min , max ) ; } for
Distance : 3

185
Tree	{ return solve ( min , max ) ; } TestUtilities
Code	{ return solve ( min , max ) ; } TestUtilities
Distance : 3

186
Tree	{ return solve ( min , max ) ; } d
Code	{ return solve ( min , max ) ; } d
Distance : 3

187
Tree	{ return solve ( min , max ) ; } sb
Code	{ return solve ( min , max ) ; } sb
Distance : 3

188
Tree	{ return solve ( min , max ) ; } Override
Code	{ return solve ( min , max ) ; } Override
Distance : 3

189
Tree	{ return solve ( min , max ) ; } field
Code	{ return solve ( min , max ) ; } field
Distance : 3

190
Tree	{ return solve ( min , max ) ; } false
Code	{ return solve ( min , max ) ; } false
Distance : 3

191
Tree	{ return solve ( min , max ) ; } x
Code	{ return solve ( min , max ) ; } x
Distance : 3

192
Tree	{ return solve ( min , max ) ; } c
Code	{ return solve ( min , max ) ; } c
Distance : 3

193
Tree	{ return solve ( min , max ) ; } toString
Code	{ return solve ( min , max ) ; } toString
Distance : 3

194
Tree	{ return solve ( min , max ) ; } p
Code	{ return solve ( min , max ) ; } p
Distance : 3

195
Tree	{ return solve ( min , max ) ; } Test
Code	{ return solve ( min , max ) ; } Test
Distance : 3

196
Tree	{ return solve ( min , max ) ; } options
Code	{ return solve ( min , max ) ; } options
Distance : 3

197
Tree	{ return solve ( min , max ) ; } Math
Code	{ return solve ( min , max ) ; } Math
Distance : 3

198
Tree	{ return solve ( min , max ) ; } Class
Code	{ return solve ( min , max ) ; } Class
Distance : 3

199
Tree	{ return solve ( min , max ) ; } chrono
Code	{ return solve ( min , max ) ; } chrono
Distance : 3

========================================================================


========================================================================
Example Number: 58
Parent Code is: 
out [ i ] [ j ] = NUMBER_CONSTANT * ( NUMBER_CONSTANT - tDistribution . cumulativeProbability ( t ) ) ;
-------------------------------------------------------------------------------
Child code is: 
out [ i ] [ j ] = NUMBER_CONSTANT * tDistribution . cumulativeProbability ( - t ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (2 (2 (801{val=out}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=t}) (215{val=)}))) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (2 (2 (801{val=out}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/69/parent/src_main_java_org_apache_commons_math_stat_correlation_PearsonsCorrelation.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	out
Code	out
Distance : 17

1
Tree	ArrayList
Code	ArrayList
Distance : 18

2
Tree	isEmpty
Code	isEmpty
Distance : 18

3
Tree	NonCorrelatedWeight
Code	NonCorrelatedWeight
Distance : 18

4
Tree	getField
Code	getField
Distance : 18

5
Tree	String
Code	String
Distance : 18

6
Tree	Array
Code	Array
Distance : 18

7
Tree	instant
Code	instant
Distance : 18

8
Tree	DiffResult
Code	DiffResult
Distance : 18

9
Tree	sb
Code	sb
Distance : 18

10
Tree	Crosshair
Code	Crosshair
Distance : 18

11
Tree	divide
Code	divide
Distance : 18

12
Tree	orderedVars
Code	orderedVars
Distance : 18

13
Tree	arg
Code	arg
Distance : 18

14
Tree	Period
Code	Period
Distance : 18

15
Tree	Coordinates2D
Code	Coordinates2D
Distance : 18

16
Tree	ParseBucket
Code	ParseBucket
Distance : 18

17
Tree	a
Code	a
Distance : 18

18
Tree	RealFieldElement
Code	RealFieldElement
Distance : 18

19
Tree	validateNullToStringStyleRegistry
Code	validateNullToStringStyleRegistry
Distance : 18

20
Tree	getGlobalType
Code	getGlobalType
Distance : 18

21
Tree	setDefaultToolTipGenerator
Code	setDefaultToolTipGenerator
Distance : 18

22
Tree	Coordinates1D
Code	Coordinates1D
Distance : 18

23
Tree	r1
Code	r1
Distance : 18

24
Tree	FieldDecompositionSolver
Code	FieldDecompositionSolver
Distance : 18

25
Tree	maxY
Code	maxY
Distance : 18

26
Tree	pads
Code	pads
Distance : 18

27
Tree	transform
Code	transform
Distance : 18

28
Tree	RegionFactory
Code	RegionFactory
Distance : 18

29
Tree	y1
Code	y1
Distance : 18

30
Tree	points
Code	points
Distance : 18

31
Tree	n0
Code	n0
Distance : 18

32
Tree	tableau
Code	tableau
Distance : 18

33
Tree	coefficients
Code	coefficients
Distance : 18

34
Tree	StandardXYToolTipGenerator
Code	StandardXYToolTipGenerator
Distance : 18

35
Tree	startIndex
Code	startIndex
Distance : 18

36
Tree	ch
Code	ch
Distance : 18

37
Tree	pb
Code	pb
Distance : 18

38
Tree	Require
Code	Require
Distance : 18

39
Tree	factors
Code	factors
Distance : 18

40
Tree	b1
Code	b1
Distance : 18

41
Tree	LocalizedFormats.VECTOR_LENGTH_MISMATCH
Code	LocalizedFormats.VECTOR_LENGTH_MISMATCH
Distance : 18

42
Tree	SUM
Code	SUM
Distance : 18

43
Tree	offset
Code	offset
Distance : 18

44
Tree	lKeyValues
Code	lKeyValues
Distance : 18

45
Tree	scopeRoot
Code	scopeRoot
Distance : 18

46
Tree	originOffset
Code	originOffset
Distance : 18

47
Tree	renderer
Code	renderer
Distance : 18

48
Tree	Class
Code	Class
Distance : 18

49
Tree	mapper
Code	mapper
Distance : 18

50
Tree	empiricalDistribution
Code	empiricalDistribution
Distance : 18

51
Tree	matrix
Code	matrix
Distance : 18

52
Tree	step
Code	step
Distance : 18

53
Tree	originalTypeofNode
Code	originalTypeofNode
Distance : 18

54
Tree	STRING_TYPE
Code	STRING_TYPE
Distance : 18

55
Tree	JFreeChart
Code	JFreeChart
Distance : 18

56
Tree	ft
Code	ft
Distance : 18

57
Tree	cachedU
Code	cachedU
Distance : 18

58
Tree	MethodInterceptorFilter
Code	MethodInterceptorFilter
Distance : 18

59
Tree	EmpiricalDistribution
Code	EmpiricalDistribution
Distance : 18

60
Tree	this
Code	this
Distance : 18

61
Tree	newChild
Code	newChild
Distance : 18

62
Tree	Modifier
Code	Modifier
Distance : 18

63
Tree	converter
Code	converter
Distance : 18

64
Tree	NumberOfInvocationsChecker
Code	NumberOfInvocationsChecker
Distance : 18

65
Tree	dotProduct
Code	dotProduct
Distance : 18

66
Tree	concat
Code	concat
Distance : 18

67
Tree	MutableInt
Code	MutableInt
Distance : 18

68
Tree	outData
Code	outData
Distance : 18

69
Tree	reportCodeChange
Code	reportCodeChange
Distance : 18

70
Tree	gcd
Code	gcd
Distance : 18

71
Tree	module
Code	module
Distance : 18

72
Tree	domHelperType
Code	domHelperType
Distance : 18

73
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 18

74
Tree	function
Code	function
Distance : 18

75
Tree	SimplexTableau
Code	SimplexTableau
Distance : 18

76
Tree	strategy
Code	strategy
Distance : 18

77
Tree	style
Code	style
Distance : 18

78
Tree	StrBuilder
Code	StrBuilder
Distance : 18

79
Tree	newLiteralNode
Code	newLiteralNode
Distance : 18

80
Tree	OpenIntToFieldHashMap
Code	OpenIntToFieldHashMap
Distance : 18

81
Tree	RealMatrix
Code	RealMatrix
Distance : 18

82
Tree	-=
Code	-=
Distance : 18

83
Tree	ClassCastException
Code	ClassCastException
Distance : 18

84
Tree	comparison
Code	comparison
Distance : 18

85
Tree	ofCartesian
Code	ofCartesian
Distance : 18

86
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 18

87
Tree	padChar
Code	padChar
Distance : 18

88
Tree	legacyNamespace
Code	legacyNamespace
Distance : 18

89
Tree	setMaxIterations
Code	setMaxIterations
Distance : 18

90
Tree	StringBuilder
Code	StringBuilder
Distance : 18

91
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 18

92
Tree	FieldHermiteInterpolator
Code	FieldHermiteInterpolator
Distance : 18

93
Tree	dev
Code	dev
Distance : 18

94
Tree	stopTime
Code	stopTime
Distance : 18

95
Tree	replacementNode
Code	replacementNode
Distance : 18

96
Tree	test
Code	test
Distance : 18

97
Tree	modify
Code	modify
Distance : 18

98
Tree	iMillis
Code	iMillis
Distance : 18

99
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 18

100
Tree	FastMath
Code	FastMath
Distance : 18

101
Tree	nRows
Code	nRows
Distance : 18

102
Tree	passes
Code	passes
Distance : 18

103
Tree	ObjectUtils
Code	ObjectUtils
Distance : 18

104
Tree	Color.BLACK
Code	Color.BLACK
Distance : 18

105
Tree	Coordinates3D
Code	Coordinates3D
Distance : 18

106
Tree	v
Code	v
Distance : 18

107
Tree	Iterator
Code	Iterator
Distance : 18

108
Tree	sum
Code	sum
Distance : 18

109
Tree	h
Code	h
Distance : 18

110
Tree	factor
Code	factor
Distance : 18

111
Tree	DateTimePrinter
Code	DateTimePrinter
Distance : 18

112
Tree	interpolator
Code	interpolator
Distance : 18

113
Tree	getTimeInMillis
Code	getTimeInMillis
Distance : 18

114
Tree	cal
Code	cal
Distance : 18

115
Tree	v.length
Code	v.length
Distance : 18

116
Tree	while
Code	while
Distance : 18

117
Tree	data
Code	data
Distance : 18

118
Tree	replaceWith
Code	replaceWith
Distance : 18

119
Tree	crossP
Code	crossP
Distance : 18

120
Tree	cls
Code	cls
Distance : 18

121
Tree	w
Code	w
Distance : 18

122
Tree	circle
Code	circle
Distance : 18

123
Tree	Range
Code	Range
Distance : 18

124
Tree	type
Code	type
Distance : 18

125
Tree	separator
Code	separator
Distance : 18

126
Tree	MathArrays
Code	MathArrays
Distance : 18

127
Tree	FieldMatrix
Code	FieldMatrix
Distance : 18

128
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 18

129
Tree	Complex
Code	Complex
Distance : 18

130
Tree	Vector3D
Code	Vector3D
Distance : 18

131
Tree	info
Code	info
Distance : 18

132
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 18

133
Tree	testData
Code	testData
Distance : 18

134
Tree	Fraction
Code	Fraction
Distance : 18

135
Tree	Cartesian3D
Code	Cartesian3D
Distance : 18

136
Tree	integ
Code	integ
Distance : 18

137
Tree	chars
Code	chars
Distance : 18

138
Tree	SparseFieldVector
Code	SparseFieldVector
Distance : 18

139
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 18

140
Tree	Invocation
Code	Invocation
Distance : 18

141
Tree	d
Code	d
Distance : 18

142
Tree	Appendable
Code	Appendable
Distance : 18

143
Tree	newNode
Code	newNode
Distance : 18

144
Tree	BigFraction
Code	BigFraction
Distance : 18

145
Tree	calendar
Code	calendar
Distance : 18

146
Tree	array
Code	array
Distance : 18

147
Tree	str
Code	str
Distance : 18

148
Tree	checkSubMatrixIndex
Code	checkSubMatrixIndex
Distance : 18

149
Tree	definingCalendar
Code	definingCalendar
Distance : 18

150
Tree	validateChildCount
Code	validateChildCount
Distance : 18

151
Tree	buildArray
Code	buildArray
Distance : 18

152
Tree	data.length
Code	data.length
Distance : 18

153
Tree	XYDifferenceRenderer
Code	XYDifferenceRenderer
Distance : 18

154
Tree	Calendar
Code	Calendar
Distance : 18

155
Tree	s
Code	s
Distance : 18

156
Tree	subtree
Code	subtree
Distance : 18

157
Tree	TransformUtils
Code	TransformUtils
Distance : 18

158
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 18

159
Tree	a1
Code	a1
Distance : 18

160
Tree	MatrixUtils
Code	MatrixUtils
Distance : 18

161
Tree	getTypeRegistry
Code	getTypeRegistry
Distance : 18

162
Tree	height
Code	height
Distance : 18

163
Tree	mu
Code	mu
Distance : 18

164
Tree	suffix
Code	suffix
Distance : 18

165
Tree	regex
Code	regex
Distance : 18

166
Tree	element
Code	element
Distance : 18

167
Tree	NonLinearConjugateGradientOptimizer
Code	NonLinearConjugateGradientOptimizer
Distance : 18

168
Tree	obj
Code	obj
Distance : 18

169
Tree	final
Code	final
Distance : 18

170
Tree	b
Code	b
Distance : 18

171
Tree	Type
Code	Type
Distance : 18

172
Tree	Precision
Code	Precision
Distance : 18

173
Tree	StepInterpolatorTestUtils
Code	StepInterpolatorTestUtils
Distance : 18

174
Tree	left
Code	left
Distance : 18

175
Tree	registry
Code	registry
Distance : 18

176
Tree	x0
Code	x0
Distance : 18

177
Tree	bp
Code	bp
Distance : 18

178
Tree	ArithmeticsUtils
Code	ArithmeticsUtils
Distance : 18

179
Tree	buffer
Code	buffer
Distance : 18

180
Tree	c
Code	c
Distance : 18

181
Tree	returnType
Code	returnType
Distance : 18

182
Tree	v2
Code	v2
Distance : 18

183
Tree	Constructor
Code	Constructor
Distance : 18

184
Tree	dataset
Code	dataset
Distance : 18

185
Tree	p
Code	p
Distance : 18

186
Tree	types
Code	types
Distance : 18

187
Tree	Collection
Code	Collection
Distance : 18

188
Tree	field
Code	field
Distance : 18

189
Tree	jsScope
Code	jsScope
Distance : 18

190
Tree	GradientPaint
Code	GradientPaint
Distance : 18

191
Tree	nordsieck
Code	nordsieck
Distance : 18

192
Tree	target
Code	target
Distance : 18

193
Tree	int
Code	int
Distance : 18

194
Tree	entries
Code	entries
Distance : 18

195
Tree	typeRegistry
Code	typeRegistry
Distance : 18

196
Tree	m
Code	m
Distance : 18

197
Tree	MathUtils
Code	MathUtils
Distance : 18

198
Tree	OrientedPoint
Code	OrientedPoint
Distance : 18

199
Tree	BlockFieldMatrix
Code	BlockFieldMatrix
Distance : 18

========================================================================


========================================================================
Example Number: 59
Parent Code is: 
if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.MEAN , p ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotStrictlyPositiveException})) (214{val=(}) (40{val=LocalizedFormats.MEAN}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/61/parent/src_main_java_org_apache_commons_math_distribution_PoissonDistributionImpl.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } notifyListeners
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } notifyListeners
Distance : 5

1
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } FastMath
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } FastMath
Distance : 5

2
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } expected
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } expected
Distance : 5

3
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } IllegalArgumentException
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } IllegalArgumentException
Distance : 5

4
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } super
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } super
Distance : 5

5
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LINE_JOINER
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LINE_JOINER
Distance : 5

6
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } createIllegalArgumentException
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } createIllegalArgumentException
Distance : 5

7
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } testSame
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } testSame
Distance : 5

8
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } str
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } str
Distance : 5

9
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } fireChangeEvent
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } fireChangeEvent
Distance : 5

10
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertThat
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertThat
Distance : 5

11
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } invocation
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } invocation
Distance : 5

12
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ,
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ,
Distance : 5

13
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } .
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } .
Distance : 5

14
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } x
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } x
Distance : 5

15
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertEquals
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertEquals
Distance : 5

16
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } T
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } T
Distance : 5

17
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } []
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } []
Distance : 5

18
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } scope
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } scope
Distance : 5

19
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getFirstChild
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getFirstChild
Distance : 5

20
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throws
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throws
Distance : 5

21
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } returnZero
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } returnZero
Distance : 5

22
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } reportCodeChange
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } reportCodeChange
Distance : 5

23
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } sb
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } sb
Distance : 5

24
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } name
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } name
Distance : 5

25
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } field
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } field
Distance : 5

26
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } (
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } (
Distance : 5

27
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } =
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } =
Distance : 5

28
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } }
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } }
Distance : 5

29
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ()
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ()
Distance : 5

30
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } {
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } {
Distance : 5

31
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } new
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } new
Distance : 5

32
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } STRING_CONSTANT
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } STRING_CONSTANT
Distance : 5

33
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NUMBER_CONSTANT
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NUMBER_CONSTANT
Distance : 5

34
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } return
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } return
Distance : 5

35
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } &&
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } &&
Distance : 5

36
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } externs
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } externs
Distance : 5

37
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } !=
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } !=
Distance : 5

38
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } value
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } value
Distance : 5

39
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkState
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkState
Distance : 5

40
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } int
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } int
Distance : 5

41
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } i
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } i
Distance : 5

42
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throw
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throw
Distance : 5

43
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <blank>
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <blank>
Distance : 5

44
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ;
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ;
Distance : 5

45
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } )
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } )
Distance : 5

46
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkArgument
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkArgument
Distance : 5

47
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } t
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } t
Distance : 5

48
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <s>
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <s>
Distance : 5

49
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } !
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } !
Distance : 5

50
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } d
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } d
Distance : 5

51
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } invocations
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } invocations
Distance : 5

52
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } :
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } :
Distance : 5

53
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } fail
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } fail
Distance : 5

54
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Args
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Args
Distance : 5

55
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } List
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } List
Distance : 5

56
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } m
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } m
Distance : 5

57
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } node
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } node
Distance : 5

58
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , p ) ; }
Distance : 4

59
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 5

60
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 5

61
Tree	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 4

62
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , p ) ; }
Distance : 5

63
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Distance : 5

64
Tree	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , p ) ; }
Distance : 4

65
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Distance : 6

66
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 5

67
Tree	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 5

68
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , p ) ; }
Distance : 5

69
Tree	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Distance : 5

70
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 6

71
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw p . createIllegalArgumentException ( p , MathRuntimeException ) ; }
Distance : 6

72
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } index
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } index
Distance : 5

73
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isBlock
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isBlock
Distance : 5

74
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getParent
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getParent
Distance : 5

75
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } values
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } values
Distance : 5

76
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } equals
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } equals
Distance : 5

77
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } for
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } for
Distance : 5

78
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Invocation
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Invocation
Distance : 5

79
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } js
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } js
Distance : 5

80
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } TestUtilities
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } TestUtilities
Distance : 5

81
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } StrBuilder
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } StrBuilder
Distance : 5

82
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } setUp
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } setUp
Distance : 5

83
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } size
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } size
Distance : 5

84
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

85
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } UnivariateFunction
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } UnivariateFunction
Distance : 5

86
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } result
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } result
Distance : 5

87
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } append
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } append
Distance : 5

88
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } try
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } try
Distance : 5

89
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } nullNotPermitted
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } nullNotPermitted
Distance : 5

90
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } paint
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } paint
Distance : 5

91
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } @
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } @
Distance : 5

92
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } false
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } false
Distance : 5

93
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } double
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } double
Distance : 5

94
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } stream
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } stream
Distance : 5

95
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } out
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } out
Distance : 5

96
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } protected
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } protected
Distance : 5

97
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } test
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } test
Distance : 5

98
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } return;
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } return;
Distance : 5

99
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 4

100
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isEmpty
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isEmpty
Distance : 5

101
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } >
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } >
Distance : 5

102
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } public
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } public
Distance : 5

103
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } final
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } final
Distance : 5

104
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } this
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } this
Distance : 5

105
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <
Distance : 5

106
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } if
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } if
Distance : 5

107
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } parent
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } parent
Distance : 5

108
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ArrayList
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ArrayList
Distance : 5

109
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getInstance
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getInstance
Distance : 5

110
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } join
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } join
Distance : 5

111
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } JSType
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } JSType
Distance : 5

112
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 6

113
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ]
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ]
Distance : 5

114
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkNotNull
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkNotNull
Distance : 5

115
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } length
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } length
Distance : 5

116
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } TestUtils
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } TestUtils
Distance : 5

117
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Node
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Node
Distance : 5

118
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } null
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } null
Distance : 5

119
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } +
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } +
Distance : 5

120
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } static
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } static
Distance : 5

121
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } setAcceptedLanguage
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } setAcceptedLanguage
Distance : 5

122
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } c
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } c
Distance : 5

123
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } lines
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } lines
Distance : 5

124
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } MathRuntimeException
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } MathRuntimeException
Distance : 5

125
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } {}
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } {}
Distance : 5

126
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } true
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } true
Distance : 5

127
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mode
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mode
Distance : 5

128
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } type
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } type
Distance : 5

129
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } -
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } -
Distance : 5

130
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } verify
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } verify
Distance : 5

131
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } boolean
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } boolean
Distance : 5

132
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } char
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } char
Distance : 5

133
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } get
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } get
Distance : 5

134
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } reportMatcher
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } reportMatcher
Distance : 5

135
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } matcher
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } matcher
Distance : 5

136
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getMessage
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getMessage
Distance : 5

137
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } else
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } else
Distance : 5

138
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } abs
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } abs
Distance : 5

139
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instant
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instant
Distance : 5

140
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } serialised
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } serialised
Distance : 5

141
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } v
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } v
Distance : 5

142
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Preconditions
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Preconditions
Distance : 5

143
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } compiler
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } compiler
Distance : 5

144
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } class
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } class
Distance : 5

145
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <>
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <>
Distance : 5

146
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } array
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } array
Distance : 5

147
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } contains
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } contains
Distance : 5

148
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } obj
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } obj
Distance : 5

149
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Integer
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Integer
Distance : 5

150
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } a
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } a
Distance : 5

151
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } stroke
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } stroke
Distance : 5

152
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } MutableTimePeriod
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } MutableTimePeriod
Distance : 5

153
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } StringBuilder
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } StringBuilder
Distance : 5

154
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } traverseEs6
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } traverseEs6
Distance : 5

155
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } PeriodType
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } PeriodType
Distance : 5

156
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } s
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } s
Distance : 5

157
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isNormalBlock
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } isNormalBlock
Distance : 5

158
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } b
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } b
Distance : 5

159
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Double
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Double
Distance : 5

160
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } clone
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } clone
Distance : 5

161
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } f
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } f
Distance : 5

162
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Override
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Override
Distance : 5

163
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } chrono
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } chrono
Distance : 5

164
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Object
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Object
Distance : 5

165
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } String
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } String
Distance : 5

166
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mock
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mock
Distance : 5

167
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } e
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } e
Distance : 5

168
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } catch
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } catch
Distance : 5

169
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throw
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } throw
Distance : 5

170
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } void
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } void
Distance : 5

171
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ==
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ==
Distance : 5

172
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } long
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } long
Distance : 5

173
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ?
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ?
Distance : 5

174
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } n
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } n
Distance : 5

175
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Exception
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Exception
Distance : 5

176
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertTrue
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertTrue
Distance : 5

177
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } /
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } /
Distance : 5

178
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Fraction
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Fraction
Distance : 5

179
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } [
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } [
Distance : 5

180
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } sqrt
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } sqrt
Distance : 5

181
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <=
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } <=
Distance : 5

182
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ParamChecks
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ParamChecks
Distance : 5

183
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Assert
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Assert
Distance : 5

184
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } *
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } *
Distance : 5

185
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Math
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Math
Distance : 5

186
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } root
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } root
Distance : 5

187
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NodeUtil
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NodeUtil
Distance : 5

188
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } wanted
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } wanted
Distance : 5

189
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } data
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } data
Distance : 5

190
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } add
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } add
Distance : 5

191
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } source
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } source
Distance : 5

192
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ex
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } ex
Distance : 5

193
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Class
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Class
Distance : 5

194
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } options
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } options
Distance : 5

195
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } p
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } p
Distance : 5

196
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } toString
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } toString
Distance : 5

197
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Test
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } Test
Distance : 5

198
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NodeTraversal
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } NodeTraversal
Distance : 5

199
Tree	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mockingProgress
Code	if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } mockingProgress
Distance : 5

========================================================================


========================================================================
Example Number: 60
Parent Code is: 
{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=a}) (252{val=<=}) (800{val=b})) (215{val=)})) (233{val=?}) (800{val=b}) (226{val=:}) (36 (214{val=(}) (16 (32 (800{val=Float}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (27 (800{val=a}) (200{val=+}) (800{val=b})) (215{val=)})) (233{val=?}) (40{val=Float.NaN}) (226{val=:}) (800{val=b})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=a}) (252{val=<=}) (800{val=b})) (215{val=)})) (233{val=?}) (800{val=b}) (226{val=:}) (36 (214{val=(}) (16 (32 (800{val=Float}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (27 (800{val=a}) (200{val=+}) (800{val=b})) (215{val=)})) (233{val=?}) (40{val=Float.NaN}) (226{val=:}) (800{val=a})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/59/parent/src_main_java_org_apache_commons_math_util_FastMath.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Correct
========================================================================
True

0
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 1

1
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 2

2
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

3
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 0

4
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

5
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 2

6
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 2

7
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

8
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

9
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

10
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 2

11
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

12
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

13
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

14
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

15
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

16
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 1

17
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

18
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 1

19
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

20
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

21
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

22
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

23
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

24
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

25
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

26
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

27
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

28
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

29
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

30
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

31
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 1

32
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

33
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

34
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 3

35
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

36
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

37
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

38
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

39
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 1

40
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

41
Tree	{ return ( Float <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

42
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

43
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

44
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

45
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

46
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 3

47
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

48
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

49
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

50
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

51
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 2

52
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

53
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

54
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

55
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

56
Tree	{ return ( a <= Float ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

57
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

58
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

59
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

60
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

61
Tree	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

62
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

63
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

64
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

65
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

66
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

67
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

68
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

69
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

70
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 3

71
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

72
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 1

73
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

74
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

75
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

76
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

77
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

78
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

79
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

80
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

81
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

82
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

83
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

84
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + Float ) ? Float.NaN : b ) ; }
Distance : 3

85
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

86
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 2

87
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

88
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 2

89
Tree	{ return ( Float <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

90
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

91
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

92
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

93
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

94
Tree	{ return ( Float <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

95
Tree	{ return ( a <= b ) ? Float : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

96
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

97
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

98
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

99
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

100
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

101
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

102
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

103
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

104
Tree	{ return ( Float <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

105
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

106
Tree	{ return ( Float <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

107
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

108
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

109
Tree	{ return ( b <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

110
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 2

111
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

112
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : Float ) ; }
Distance : 2

113
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

114
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

115
Tree	{ return ( a <= Float ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

116
Tree	{ return ( b <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

117
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

118
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

119
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

120
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Distance : 2

121
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

122
Tree	{ return ( Float <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

123
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

124
Tree	{ return ( a <= a ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

125
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

126
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

127
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : Float ) ; }
Distance : 2

128
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

129
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

130
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

131
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

132
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

133
Tree	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

134
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

135
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

136
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

137
Tree	{ return ( a <= Float ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

138
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

139
Tree	{ return ( Float <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

140
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

141
Tree	{ return ( a <= a ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 5

142
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

143
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 2

144
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

145
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

146
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

147
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

148
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

149
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

150
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

151
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

152
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

153
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 4

154
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

155
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

156
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

157
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

158
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

159
Tree	{ return ( a <= Float ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

160
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

161
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 2

162
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

163
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

164
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

165
Tree	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 3

166
Tree	{ return ( b <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

167
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

168
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

169
Tree	{ return ( a <= Float ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

170
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

171
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

172
Tree	{ return ( Float <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

173
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

174
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

175
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

176
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 5

177
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

178
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 4

179
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

180
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

181
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

182
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + Float ) ? Float.NaN : b ) ; }
Distance : 4

183
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 3

184
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : a ) ; }
Distance : 2

185
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 3

186
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

187
Tree	{ return ( Float <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

188
Tree	{ return ( Float <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

189
Tree	{ return ( Float <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

190
Tree	{ return ( a <= b ) ? Float : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

191
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

192
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

193
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

194
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

195
Tree	{ return ( a <= a ) ? Float : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? Float : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

196
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Distance : 3

197
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

198
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

199
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

========================================================================


========================================================================
Example Number: 61
Parent Code is: 
return fit ( new Gaussian.Parametric () , guess ) ;
-------------------------------------------------------------------------------
Child code is: 
return fit ( guess ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=fit}) (214{val=(}) (14 (304{val=new}) (43 (40{val=Gaussian.Parametric})) (216{val=()})) (234{val=,}) (800{val=guess}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=fit}) (214{val=(}) (800{val=guess}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/58/parent/src_main_java_org_apache_commons_math_optimization_fitting_GaussianFitter.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 5

1
Tree	return VARIANCE ;
Code	return VARIANCE ;
Distance : 4

2
Tree	return DateTimePrinter ;
Code	return DateTimePrinter ;
Distance : 4

3
Tree	FastMath
Code	FastMath
Distance : 6

4
Tree	TypedVar
Code	TypedVar
Distance : 6

5
Tree	return Charset ;
Code	return Charset ;
Distance : 4

6
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 4

7
Tree	invocation
Code	invocation
Distance : 6

8
Tree	return Arrays ;
Code	return Arrays ;
Distance : 4

9
Tree	TimeSeries
Code	TimeSeries
Distance : 6

10
Tree	String
Code	String
Distance : 6

11
Tree	return ArgumentsAreDifferentException ;
Code	return ArgumentsAreDifferentException ;
Distance : 4

12
Tree	return null ;
Code	return null ;
Distance : 4

13
Tree	return ? ;
Code	return ? ;
Distance : 4

14
Tree	Comparable
Code	Comparable
Distance : 6

15
Tree	return parts.length ;
Code	return parts.length ;
Distance : 4

16
Tree	return TransformUtils ;
Code	return TransformUtils ;
Distance : 4

17
Tree	checkState
Code	checkState
Distance : 6

18
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 6

19
Tree	wildCardBoundedType
Code	wildCardBoundedType
Distance : 6

20
Tree	return assertChanges ;
Code	return assertChanges ;
Distance : 4

21
Tree	return T ;
Code	return T ;
Distance : 4

22
Tree	return DimensionMismatchException ;
Code	return DimensionMismatchException ;
Distance : 4

23
Tree	TypedScope
Code	TypedScope
Distance : 6

24
Tree	Gaussian
Code	Gaussian
Distance : 6

25
Tree	DiffResult
Code	DiffResult
Distance : 6

26
Tree	return -= ;
Code	return -= ;
Distance : 4

27
Tree	return jsScope ;
Code	return jsScope ;
Distance : 4

28
Tree	return case ;
Code	return case ;
Distance : 4

29
Tree	GaussNewtonOptimizer
Code	GaussNewtonOptimizer
Distance : 6

30
Tree	d
Code	d
Distance : 6

31
Tree	LegendGraphic
Code	LegendGraphic
Distance : 6

32
Tree	void
Code	void
Distance : 6

33
Tree	File
Code	File
Distance : 6

34
Tree	TemplateAstMatcher
Code	TemplateAstMatcher
Distance : 6

35
Tree	return tree ;
Code	return tree ;
Distance : 4

36
Tree	Scope
Code	Scope
Distance : 6

37
Tree	isForward
Code	isForward
Distance : 6

38
Tree	return converter ;
Code	return converter ;
Distance : 4

39
Tree	return calculator ;
Code	return calculator ;
Distance : 4

40
Tree	return type ;
Code	return type ;
Distance : 4

41
Tree	return Scope ;
Code	return Scope ;
Distance : 4

42
Tree	return mismatches ;
Code	return mismatches ;
Distance : 4

43
Tree	return ParseBucket ;
Code	return ParseBucket ;
Distance : 4

44
Tree	mismatches
Code	mismatches
Distance : 6

45
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 6

46
Tree	StubbingArgMismatches
Code	StubbingArgMismatches
Distance : 6

47
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 6

48
Tree	return break; ;
Code	return break; ;
Distance : 4

49
Tree	stepHandlers
Code	stepHandlers
Distance : 6

50
Tree	return functionTree ;
Code	return functionTree ;
Distance : 4

51
Tree	return options ;
Code	return options ;
Distance : 4

52
Tree	MethodInterceptorFilter
Code	MethodInterceptorFilter
Distance : 6

53
Tree	objType
Code	objType
Distance : 6

54
Tree	return Calendar ;
Code	return Calendar ;
Distance : 4

55
Tree	return MatrixUtils ;
Code	return MatrixUtils ;
Distance : 4

56
Tree	return chunker ;
Code	return chunker ;
Distance : 4

57
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 6

58
Tree	return JColorChooser ;
Code	return JColorChooser ;
Distance : 4

59
Tree	return NonLinearConjugateGradientOptimizer ;
Code	return NonLinearConjugateGradientOptimizer ;
Distance : 4

60
Tree	getSlot
Code	getSlot
Distance : 6

61
Tree	return objType ;
Code	return objType ;
Distance : 4

62
Tree	[
Code	[
Distance : 6

63
Tree	return UNKNOWN ;
Code	return UNKNOWN ;
Distance : 4

64
Tree	return singularValues ;
Code	return singularValues ;
Distance : 4

65
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 6

66
Tree	testTypes
Code	testTypes
Distance : 6

67
Tree	Primitives
Code	Primitives
Distance : 6

68
Tree	return actualbyName ;
Code	return actualbyName ;
Distance : 4

69
Tree	scale
Code	scale
Distance : 6

70
Tree	return ArrayIndexOutOfBoundsException ;
Code	return ArrayIndexOutOfBoundsException ;
Distance : 4

71
Tree	getTimeInMillis
Code	getTimeInMillis
Distance : 6

72
Tree	ConfigurationAccess
Code	ConfigurationAccess
Distance : 6

73
Tree	return TooLittleActualInvocations ;
Code	return TooLittleActualInvocations ;
Distance : 4

74
Tree	recordImplicitInterfaceUses
Code	recordImplicitInterfaceUses
Distance : 6

75
Tree	return * ;
Code	return * ;
Distance : 4

76
Tree	assumeTrue
Code	assumeTrue
Distance : 6

77
Tree	EnvTypePair
Code	EnvTypePair
Distance : 6

78
Tree	pluginType
Code	pluginType
Distance : 6

79
Tree	return scopeRoot ;
Code	return scopeRoot ;
Distance : 4

80
Tree	return SUM ;
Code	return SUM ;
Distance : 4

81
Tree	MutableInterval
Code	MutableInterval
Distance : 6

82
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 6

83
Tree	StringBuilder
Code	StringBuilder
Distance : 6

84
Tree	that
Code	that
Distance : 6

85
Tree	return EigenDecompositionImpl ;
Code	return EigenDecompositionImpl ;
Distance : 4

86
Tree	legacyNamespace
Code	legacyNamespace
Distance : 6

87
Tree	iValues
Code	iValues
Distance : 6

88
Tree	return MathUtils ;
Code	return MathUtils ;
Distance : 4

89
Tree	return t ;
Code	return t ;
Distance : 4

90
Tree	VARIANCE
Code	VARIANCE
Distance : 6

91
Tree	DifferentiableMultivariateVectorOptimizer
Code	DifferentiableMultivariateVectorOptimizer
Distance : 6

92
Tree	return DateTimeParser ;
Code	return DateTimeParser ;
Distance : 4

93
Tree	return values ;
Code	return values ;
Distance : 4

94
Tree	WindNeedle
Code	WindNeedle
Distance : 6

95
Tree	Period
Code	Period
Distance : 6

96
Tree	ImportLogBean
Code	ImportLogBean
Distance : 6

97
Tree	getBinaryModuleNamespace
Code	getBinaryModuleNamespace
Distance : 6

98
Tree	return while ;
Code	return while ;
Distance : 4

99
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 6

100
Tree	case
Code	case
Distance : 6

101
Tree	Var
Code	Var
Distance : 6

102
Tree	RealMatrix
Code	RealMatrix
Distance : 6

103
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 4

104
Tree	str
Code	str
Distance : 6

105
Tree	return data ;
Code	return data ;
Distance : 4

106
Tree	matrix
Code	matrix
Distance : 6

107
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 4

108
Tree	List
Code	List
Distance : 6

109
Tree	Complex
Code	Complex
Distance : 6

110
Tree	Field
Code	Field
Distance : 6

111
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 6

112
Tree	assertChanges
Code	assertChanges
Distance : 6

113
Tree	Assertions
Code	Assertions
Distance : 6

114
Tree	x
Code	x
Distance : 6

115
Tree	return this ;
Code	return this ;
Distance : 4

116
Tree	return else ;
Code	return else ;
Distance : 4

117
Tree	BetaDistribution
Code	BetaDistribution
Distance : 6

118
Tree	boolean
Code	boolean
Distance : 6

119
Tree	this
Code	this
Distance : 6

120
Tree	dev
Code	dev
Distance : 6

121
Tree	return assert ;
Code	return assert ;
Distance : 4

122
Tree	bp
Code	bp
Distance : 6

123
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 6

124
Tree	return /= ;
Code	return /= ;
Distance : 4

125
Tree	ArrayList
Code	ArrayList
Distance : 6

126
Tree	return double ;
Code	return double ;
Distance : 4

127
Tree	return += ;
Code	return += ;
Distance : 4

128
Tree	NonLinearConjugateGradientOptimizer
Code	NonLinearConjugateGradientOptimizer
Distance : 6

129
Tree	return super(); ;
Code	return super(); ;
Distance : 4

130
Tree	return commonTypes ;
Code	return commonTypes ;
Distance : 4

131
Tree	return super ;
Code	return super ;
Distance : 4

132
Tree	return / ;
Code	return / ;
Distance : 4

133
Tree	return false ;
Code	return false ;
Distance : 4

134
Tree	return true ;
Code	return true ;
Distance : 4

135
Tree	double
Code	double
Distance : 6

136
Tree	int
Code	int
Distance : 6

137
Tree	return cache ;
Code	return cache ;
Distance : 4

138
Tree	return Invocation ;
Code	return Invocation ;
Distance : 4

139
Tree	return class ;
Code	return class ;
Distance : 4

140
Tree	throw
Code	throw
Distance : 6

141
Tree	super
Code	super
Distance : 6

142
Tree	TransformUtils
Code	TransformUtils
Distance : 6

143
Tree	MathArrays
Code	MathArrays
Distance : 6

144
Tree	!
Code	!
Distance : 6

145
Tree	Invocation
Code	Invocation
Distance : 6

146
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 6

147
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 6

148
Tree	new
Code	new
Distance : 6

149
Tree	return - ;
Code	return - ;
Distance : 4

150
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 4

151
Tree	T
Code	T
Distance : 6

152
Tree	accum3
Code	accum3
Distance : 6

153
Tree	JSType
Code	JSType
Distance : 6

154
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 6

155
Tree	calendar
Code	calendar
Distance : 6

156
Tree	return return ;
Code	return return ;
Distance : 4

157
Tree	<
Code	<
Distance : 6

158
Tree	Vector3D
Code	Vector3D
Distance : 6

159
Tree	TypeMismatch
Code	TypeMismatch
Distance : 6

160
Tree	compiler
Code	compiler
Distance : 6

161
Tree	field
Code	field
Distance : 6

162
Tree	ParseBucket
Code	ParseBucket
Distance : 6

163
Tree	return registry ;
Code	return registry ;
Distance : 4

164
Tree	return currentScope ;
Code	return currentScope ;
Distance : 4

165
Tree	return MockUtil ;
Code	return MockUtil ;
Distance : 4

166
Tree	return PeepholeOptimizationsPass ;
Code	return PeepholeOptimizationsPass ;
Distance : 4

167
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 6

168
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 4

169
Tree	return runner ;
Code	return runner ;
Distance : 4

170
Tree	return ArgumentsAreDifferent ;
Code	return ArgumentsAreDifferent ;
Distance : 4

171
Tree	return extends ;
Code	return extends ;
Distance : 4

172
Tree	return ! ;
Code	return ! ;
Distance : 4

173
Tree	+=
Code	+=
Distance : 6

174
Tree	return != ;
Code	return != ;
Distance : 4

175
Tree	Object
Code	Object
Distance : 6

176
Tree	return Complex ;
Code	return Complex ;
Distance : 4

177
Tree	DateTimeParser
Code	DateTimeParser
Distance : 6

178
Tree	if
Code	if
Distance : 6

179
Tree	return [ ;
Code	return [ ;
Distance : 4

180
Tree	NodeTraversal
Code	NodeTraversal
Distance : 6

181
Tree	MockUtil
Code	MockUtil
Distance : 6

182
Tree	return int ;
Code	return int ;
Distance : 4

183
Tree	FieldMatrix
Code	FieldMatrix
Distance : 6

184
Tree	standardDeviation
Code	standardDeviation
Distance : 6

185
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 6

186
Tree	return : ;
Code	return : ;
Distance : 4

187
Tree	MutableDuration
Code	MutableDuration
Distance : 6

188
Tree	return InvocationDiffersFromActual ;
Code	return InvocationDiffersFromActual ;
Distance : 4

189
Tree	return MutableDuration ;
Code	return MutableDuration ;
Distance : 4

190
Tree	peepholePass
Code	peepholePass
Distance : 6

191
Tree	return invocation ;
Code	return invocation ;
Distance : 4

192
Tree	UnivariateRealSolver
Code	UnivariateRealSolver
Distance : 6

193
Tree	return DurationType ;
Code	return DurationType ;
Distance : 4

194
Tree	byte
Code	byte
Distance : 6

195
Tree	return flowScope ;
Code	return flowScope ;
Distance : 4

196
Tree	return continue; ;
Code	return continue; ;
Distance : 4

197
Tree	restricted
Code	restricted
Distance : 6

198
Tree	AnalyzePrototypeProperties
Code	AnalyzePrototypeProperties
Distance : 6

199
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 6

========================================================================


========================================================================
Example Number: 62
Parent Code is: 
int sum = NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Child code is: 
double sum = NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=sum}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sum}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/57/parent/src_main_java_org_apache_commons_math_stat_clustering_KMeansPlusPlusClusterer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Correct
========================================================================
True

0
Tree	int sum = NUMBER_CONSTANT ; StrBuilder
Code	int sum = NUMBER_CONSTANT ; StrBuilder
Distance : 2

1
Tree	int sum = NUMBER_CONSTANT ; add
Code	int sum = NUMBER_CONSTANT ; add
Distance : 2

2
Tree	int sum = NUMBER_CONSTANT ; checkArgument
Code	int sum = NUMBER_CONSTANT ; checkArgument
Distance : 2

3
Tree	int sum = NUMBER_CONSTANT ; data
Code	int sum = NUMBER_CONSTANT ; data
Distance : 2

4
Tree	int sum = NUMBER_CONSTANT ; NodeUtil
Code	int sum = NUMBER_CONSTANT ; NodeUtil
Distance : 2

5
Tree	int sum = NUMBER_CONSTANT ; void
Code	int sum = NUMBER_CONSTANT ; void
Distance : 2

6
Tree	int sum = NUMBER_CONSTANT ; catch
Code	int sum = NUMBER_CONSTANT ; catch
Distance : 2

7
Tree	int sum = NUMBER_CONSTANT ; compiler
Code	int sum = NUMBER_CONSTANT ; compiler
Distance : 2

8
Tree	int sum = NUMBER_CONSTANT ; throw
Code	int sum = NUMBER_CONSTANT ; throw
Distance : 2

9
Tree	int sum = NUMBER_CONSTANT ; n
Code	int sum = NUMBER_CONSTANT ; n
Distance : 2

10
Tree	int sum = NUMBER_CONSTANT ; +
Code	int sum = NUMBER_CONSTANT ; +
Distance : 2

11
Tree	int sum = NUMBER_CONSTANT ; e
Code	int sum = NUMBER_CONSTANT ; e
Distance : 2

12
Tree	int sum = NUMBER_CONSTANT ; NodeTraversal
Code	int sum = NUMBER_CONSTANT ; NodeTraversal
Distance : 2

13
Tree	int sum = NUMBER_CONSTANT ; expected
Code	int sum = NUMBER_CONSTANT ; expected
Distance : 2

14
Tree	int sum = NUMBER_CONSTANT ; {}
Code	int sum = NUMBER_CONSTANT ; {}
Distance : 2

15
Tree	int sum = NUMBER_CONSTANT ; ]
Code	int sum = NUMBER_CONSTANT ; ]
Distance : 2

16
Tree	int sum = NUMBER_CONSTANT ; mode
Code	int sum = NUMBER_CONSTANT ; mode
Distance : 2

17
Tree	int sum = NUMBER_CONSTANT ; &&
Code	int sum = NUMBER_CONSTANT ; &&
Distance : 2

18
Tree	int sum = NUMBER_CONSTANT ; public
Code	int sum = NUMBER_CONSTANT ; public
Distance : 2

19
Tree	int sum = NUMBER_CONSTANT ; final
Code	int sum = NUMBER_CONSTANT ; final
Distance : 2

20
Tree	int sum = NUMBER_CONSTANT ; null
Code	int sum = NUMBER_CONSTANT ; null
Distance : 2

21
Tree	int sum = NUMBER_CONSTANT ; getArgumentMatcherStorage
Code	int sum = NUMBER_CONSTANT ; getArgumentMatcherStorage
Distance : 2

22
Tree	int sum = NUMBER_CONSTANT ; wanted
Code	int sum = NUMBER_CONSTANT ; wanted
Distance : 2

23
Tree	int sum = NUMBER_CONSTANT ; if
Code	int sum = NUMBER_CONSTANT ; if
Distance : 2

24
Tree	int sum = NUMBER_CONSTANT ; ex
Code	int sum = NUMBER_CONSTANT ; ex
Distance : 2

25
Tree	int sum = NUMBER_CONSTANT ; Preconditions
Code	int sum = NUMBER_CONSTANT ; Preconditions
Distance : 2

26
Tree	int sum = NUMBER_CONSTANT ; new
Code	int sum = NUMBER_CONSTANT ; new
Distance : 2

27
Tree	int sum = NUMBER_CONSTANT ; =
Code	int sum = NUMBER_CONSTANT ; =
Distance : 2

28
Tree	int sum = NUMBER_CONSTANT ; STRING_CONSTANT
Code	int sum = NUMBER_CONSTANT ; STRING_CONSTANT
Distance : 2

29
Tree	int sum = NUMBER_CONSTANT ; ()
Code	int sum = NUMBER_CONSTANT ; ()
Distance : 2

30
Tree	int sum = NUMBER_CONSTANT ; ,
Code	int sum = NUMBER_CONSTANT ; ,
Distance : 2

31
Tree	int sum = NUMBER_CONSTANT ; {
Code	int sum = NUMBER_CONSTANT ; {
Distance : 2

32
Tree	int sum = NUMBER_CONSTANT ; }
Code	int sum = NUMBER_CONSTANT ; }
Distance : 2

33
Tree	int sum = NUMBER_CONSTANT ; <
Code	int sum = NUMBER_CONSTANT ; <
Distance : 2

34
Tree	int sum = NUMBER_CONSTANT ; .
Code	int sum = NUMBER_CONSTANT ; .
Distance : 2

35
Tree	int sum = NUMBER_CONSTANT ; (
Code	int sum = NUMBER_CONSTANT ; (
Distance : 2

36
Tree	int sum = NUMBER_CONSTANT ; ;
Code	int sum = NUMBER_CONSTANT ; ;
Distance : 2

37
Tree	int sum = NUMBER_CONSTANT ; <blank>
Code	int sum = NUMBER_CONSTANT ; <blank>
Distance : 2

38
Tree	int sum = NUMBER_CONSTANT ; int
Code	int sum = NUMBER_CONSTANT ; int
Distance : 2

39
Tree	int sum = NUMBER_CONSTANT ; <s>
Code	int sum = NUMBER_CONSTANT ; <s>
Distance : 2

40
Tree	int sum = NUMBER_CONSTANT ; )
Code	int sum = NUMBER_CONSTANT ; )
Distance : 2

41
Tree	int sum = NUMBER_CONSTANT ; >
Code	int sum = NUMBER_CONSTANT ; >
Distance : 2

42
Tree	int sum = NUMBER_CONSTANT ; js
Code	int sum = NUMBER_CONSTANT ; js
Distance : 2

43
Tree	int sum = NUMBER_CONSTANT ; return
Code	int sum = NUMBER_CONSTANT ; return
Distance : 2

44
Tree	int sum = NUMBER_CONSTANT ; true
Code	int sum = NUMBER_CONSTANT ; true
Distance : 2

45
Tree	int sum = NUMBER_CONSTANT ; this
Code	int sum = NUMBER_CONSTANT ; this
Distance : 2

46
Tree	int sum = NUMBER_CONSTANT ; -
Code	int sum = NUMBER_CONSTANT ; -
Distance : 2

47
Tree	int sum = NUMBER_CONSTANT ; root
Code	int sum = NUMBER_CONSTANT ; root
Distance : 2

48
Tree	int sum = NUMBER_CONSTANT ; NUMBER_CONSTANT
Code	int sum = NUMBER_CONSTANT ; NUMBER_CONSTANT
Distance : 2

49
Tree	int sum = NUMBER_CONSTANT ; assertTrue
Code	int sum = NUMBER_CONSTANT ; assertTrue
Distance : 2

50
Tree	int sum = NUMBER_CONSTANT ; /
Code	int sum = NUMBER_CONSTANT ; /
Distance : 2

51
Tree	int sum = NUMBER_CONSTANT ; value
Code	int sum = NUMBER_CONSTANT ; value
Distance : 2

52
Tree	int sum = NUMBER_CONSTANT ; T
Code	int sum = NUMBER_CONSTANT ; T
Distance : 2

53
Tree	int sum = NUMBER_CONSTANT ; setAcceptedLanguage
Code	int sum = NUMBER_CONSTANT ; setAcceptedLanguage
Distance : 2

54
Tree	int sum = NUMBER_CONSTANT ; !=
Code	int sum = NUMBER_CONSTANT ; !=
Distance : 2

55
Tree	int sum = NUMBER_CONSTANT ; reportMatcher
Code	int sum = NUMBER_CONSTANT ; reportMatcher
Distance : 2

56
Tree	int sum = NUMBER_CONSTANT ; instant
Code	int sum = NUMBER_CONSTANT ; instant
Distance : 2

57
Tree	int sum = NUMBER_CONSTANT ; getMessage
Code	int sum = NUMBER_CONSTANT ; getMessage
Distance : 2

58
Tree	int sum = NUMBER_CONSTANT ; stream
Code	int sum = NUMBER_CONSTANT ; stream
Distance : 2

59
Tree	int sum = NUMBER_CONSTANT ; else
Code	int sum = NUMBER_CONSTANT ; else
Distance : 2

60
Tree	int sum = NUMBER_CONSTANT ; matcher
Code	int sum = NUMBER_CONSTANT ; matcher
Distance : 2

61
Tree	int sum = NUMBER_CONSTANT ; type
Code	int sum = NUMBER_CONSTANT ; type
Distance : 2

62
Tree	int sum = NUMBER_CONSTANT ; optimizer
Code	int sum = NUMBER_CONSTANT ; optimizer
Distance : 2

63
Tree	int sum = NUMBER_CONSTANT ; isBlock
Code	int sum = NUMBER_CONSTANT ; isBlock
Distance : 2

64
Tree	int sum = NUMBER_CONSTANT ; abs
Code	int sum = NUMBER_CONSTANT ; abs
Distance : 2

65
Tree	double sum = NUMBER_CONSTANT ;
Code	double sum = NUMBER_CONSTANT ;
Distance : 0

66
Tree	byte sum = NUMBER_CONSTANT ;
Code	byte sum = NUMBER_CONSTANT ;
Distance : 1

67
Tree	boolean sum = NUMBER_CONSTANT ;
Code	boolean sum = NUMBER_CONSTANT ;
Distance : 1

68
Tree	float sum = NUMBER_CONSTANT ;
Code	float sum = NUMBER_CONSTANT ;
Distance : 1

69
Tree	long sum = NUMBER_CONSTANT ;
Code	long sum = NUMBER_CONSTANT ;
Distance : 1

70
Tree	void sum = NUMBER_CONSTANT ;
Code	void sum = NUMBER_CONSTANT ;
Distance : 1

71
Tree	short sum = NUMBER_CONSTANT ;
Code	short sum = NUMBER_CONSTANT ;
Distance : 1

72
Tree	int sum = NUMBER_CONSTANT ; super
Code	int sum = NUMBER_CONSTANT ; super
Distance : 2

73
Tree	int sum = NUMBER_CONSTANT ; long
Code	int sum = NUMBER_CONSTANT ; long
Distance : 2

74
Tree	int sum = NUMBER_CONSTANT ; valueOf
Code	int sum = NUMBER_CONSTANT ; valueOf
Distance : 2

75
Tree	int sum = NUMBER_CONSTANT ; double
Code	int sum = NUMBER_CONSTANT ; double
Distance : 2

76
Tree	int sum = NUMBER_CONSTANT ; Assert
Code	int sum = NUMBER_CONSTANT ; Assert
Distance : 2

77
Tree	int sum = NUMBER_CONSTANT ; Fraction
Code	int sum = NUMBER_CONSTANT ; Fraction
Distance : 2

78
Tree	int sum = NUMBER_CONSTANT ; Exception
Code	int sum = NUMBER_CONSTANT ; Exception
Distance : 2

79
Tree	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT6
Code	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT6
Distance : 2

80
Tree	int sum = NUMBER_CONSTANT ; index
Code	int sum = NUMBER_CONSTANT ; index
Distance : 2

81
Tree	int sum = NUMBER_CONSTANT ; node
Code	int sum = NUMBER_CONSTANT ; node
Distance : 2

82
Tree	int sum = NUMBER_CONSTANT ; setUp
Code	int sum = NUMBER_CONSTANT ; setUp
Distance : 2

83
Tree	int sum = NUMBER_CONSTANT ; getParent
Code	int sum = NUMBER_CONSTANT ; getParent
Distance : 2

84
Tree	int sum = NUMBER_CONSTANT ; protected
Code	int sum = NUMBER_CONSTANT ; protected
Distance : 2

85
Tree	int sum = NUMBER_CONSTANT ; invocations
Code	int sum = NUMBER_CONSTANT ; invocations
Distance : 2

86
Tree	int sum = NUMBER_CONSTANT ; values
Code	int sum = NUMBER_CONSTANT ; values
Distance : 2

87
Tree	int sum = NUMBER_CONSTANT ; out
Code	int sum = NUMBER_CONSTANT ; out
Distance : 2

88
Tree	int sum = NUMBER_CONSTANT ; obj
Code	int sum = NUMBER_CONSTANT ; obj
Distance : 2

89
Tree	int sum = NUMBER_CONSTANT ; a
Code	int sum = NUMBER_CONSTANT ; a
Distance : 2

90
Tree	int sum = NUMBER_CONSTANT ; instance
Code	int sum = NUMBER_CONSTANT ; instance
Distance : 2

91
Tree	int sum = NUMBER_CONSTANT ; alpha
Code	int sum = NUMBER_CONSTANT ; alpha
Distance : 2

92
Tree	int sum = NUMBER_CONSTANT ; externs
Code	int sum = NUMBER_CONSTANT ; externs
Distance : 2

93
Tree	int sum = NUMBER_CONSTANT ; simpleMethod
Code	int sum = NUMBER_CONSTANT ; simpleMethod
Distance : 2

94
Tree	int sum = NUMBER_CONSTANT ; [
Code	int sum = NUMBER_CONSTANT ; [
Distance : 2

95
Tree	int sum = NUMBER_CONSTANT ; i
Code	int sum = NUMBER_CONSTANT ; i
Distance : 2

96
Tree	int sum = NUMBER_CONSTANT ; checkState
Code	int sum = NUMBER_CONSTANT ; checkState
Distance : 2

97
Tree	int sum = NUMBER_CONSTANT ; int
Code	int sum = NUMBER_CONSTANT ; int
Distance : 2

98
Tree	int sum = NUMBER_CONSTANT ; traverseEs6
Code	int sum = NUMBER_CONSTANT ; traverseEs6
Distance : 2

99
Tree	int sum = NUMBER_CONSTANT ;
Code	int sum = NUMBER_CONSTANT ;
Distance : 1

100
Tree	int sum = NUMBER_CONSTANT ; MutableTimePeriod
Code	int sum = NUMBER_CONSTANT ; MutableTimePeriod
Distance : 2

101
Tree	int sum = NUMBER_CONSTANT ; return;
Code	int sum = NUMBER_CONSTANT ; return;
Distance : 2

102
Tree	int sum = NUMBER_CONSTANT ; get
Code	int sum = NUMBER_CONSTANT ; get
Distance : 2

103
Tree	int sum = NUMBER_CONSTANT ; mockingProgress
Code	int sum = NUMBER_CONSTANT ; mockingProgress
Distance : 2

104
Tree	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Code	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	int sum = NUMBER_CONSTANT ; clone
Code	int sum = NUMBER_CONSTANT ; clone
Distance : 2

106
Tree	int sum = NUMBER_CONSTANT ; Double
Code	int sum = NUMBER_CONSTANT ; Double
Distance : 2

107
Tree	int sum = NUMBER_CONSTANT ; PeriodType
Code	int sum = NUMBER_CONSTANT ; PeriodType
Distance : 2

108
Tree	int sum = NUMBER_CONSTANT ; <=
Code	int sum = NUMBER_CONSTANT ; <=
Distance : 2

109
Tree	int sum = NUMBER_CONSTANT ; isNormalBlock
Code	int sum = NUMBER_CONSTANT ; isNormalBlock
Distance : 2

110
Tree	int sum = NUMBER_CONSTANT ; contains
Code	int sum = NUMBER_CONSTANT ; contains
Distance : 2

111
Tree	int sum = NUMBER_CONSTANT ; b
Code	int sum = NUMBER_CONSTANT ; b
Distance : 2

112
Tree	int sum = NUMBER_CONSTANT ; String
Code	int sum = NUMBER_CONSTANT ; String
Distance : 2

113
Tree	int sum = NUMBER_CONSTANT ; assertThat
Code	int sum = NUMBER_CONSTANT ; assertThat
Distance : 2

114
Tree	int sum = NUMBER_CONSTANT ; str
Code	int sum = NUMBER_CONSTANT ; str
Distance : 2

115
Tree	int sum = NUMBER_CONSTANT ; LINE_JOINER
Code	int sum = NUMBER_CONSTANT ; LINE_JOINER
Distance : 2

116
Tree	int sum = NUMBER_CONSTANT ; createIllegalArgumentException
Code	int sum = NUMBER_CONSTANT ; createIllegalArgumentException
Distance : 2

117
Tree	int sum = NUMBER_CONSTANT ; size
Code	int sum = NUMBER_CONSTANT ; size
Distance : 2

118
Tree	char sum = NUMBER_CONSTANT ;
Code	char sum = NUMBER_CONSTANT ;
Distance : 1

119
Tree	int sum = NUMBER_CONSTANT ; Object
Code	int sum = NUMBER_CONSTANT ; Object
Distance : 2

120
Tree	int sum = NUMBER_CONSTANT ; JSType
Code	int sum = NUMBER_CONSTANT ; JSType
Distance : 2

121
Tree	int sum = NUMBER_CONSTANT ; throws
Code	int sum = NUMBER_CONSTANT ; throws
Distance : 2

122
Tree	int sum = NUMBER_CONSTANT ; static
Code	int sum = NUMBER_CONSTANT ; static
Distance : 2

123
Tree	int sum = NUMBER_CONSTANT ; char
Code	int sum = NUMBER_CONSTANT ; char
Distance : 2

124
Tree	int sum = NUMBER_CONSTANT ; source
Code	int sum = NUMBER_CONSTANT ; source
Distance : 2

125
Tree	int sum = NUMBER_CONSTANT ; v
Code	int sum = NUMBER_CONSTANT ; v
Distance : 2

126
Tree	int sum = NUMBER_CONSTANT ; join
Code	int sum = NUMBER_CONSTANT ; join
Distance : 2

127
Tree	int sum = NUMBER_CONSTANT ; result
Code	int sum = NUMBER_CONSTANT ; result
Distance : 2

128
Tree	int sum = NUMBER_CONSTANT ; boolean
Code	int sum = NUMBER_CONSTANT ; boolean
Distance : 2

129
Tree	int sum = NUMBER_CONSTANT ; getInstance
Code	int sum = NUMBER_CONSTANT ; getInstance
Distance : 2

130
Tree	int sum = NUMBER_CONSTANT ; *
Code	int sum = NUMBER_CONSTANT ; *
Distance : 2

131
Tree	int sum = NUMBER_CONSTANT ; serialised
Code	int sum = NUMBER_CONSTANT ; serialised
Distance : 2

132
Tree	int sum = NUMBER_CONSTANT ; ArrayList
Code	int sum = NUMBER_CONSTANT ; ArrayList
Distance : 2

133
Tree	int sum = NUMBER_CONSTANT ; <>
Code	int sum = NUMBER_CONSTANT ; <>
Distance : 2

134
Tree	int sum = NUMBER_CONSTANT ; f
Code	int sum = NUMBER_CONSTANT ; f
Distance : 2

135
Tree	int sum = NUMBER_CONSTANT ; ParamChecks
Code	int sum = NUMBER_CONSTANT ; ParamChecks
Distance : 2

136
Tree	int sum = NUMBER_CONSTANT ; class
Code	int sum = NUMBER_CONSTANT ; class
Distance : 2

137
Tree	int sum = NUMBER_CONSTANT ; testSame
Code	int sum = NUMBER_CONSTANT ; testSame
Distance : 2

138
Tree	int sum = NUMBER_CONSTANT ; mock
Code	int sum = NUMBER_CONSTANT ; mock
Distance : 2

139
Tree	int sum = NUMBER_CONSTANT ; parent
Code	int sum = NUMBER_CONSTANT ; parent
Distance : 2

140
Tree	int sum = NUMBER_CONSTANT ; fireChangeEvent
Code	int sum = NUMBER_CONSTANT ; fireChangeEvent
Distance : 2

141
Tree	int sum = NUMBER_CONSTANT ; stroke
Code	int sum = NUMBER_CONSTANT ; stroke
Distance : 2

142
Tree	int sum = NUMBER_CONSTANT ; StringBuilder
Code	int sum = NUMBER_CONSTANT ; StringBuilder
Distance : 2

143
Tree	int sum = NUMBER_CONSTANT ; isEmpty
Code	int sum = NUMBER_CONSTANT ; isEmpty
Distance : 2

144
Tree	int sum = NUMBER_CONSTANT ; sqrt
Code	int sum = NUMBER_CONSTANT ; sqrt
Distance : 2

145
Tree	int sum = NUMBER_CONSTANT ; MathRuntimeException
Code	int sum = NUMBER_CONSTANT ; MathRuntimeException
Distance : 2

146
Tree	int sum = NUMBER_CONSTANT ; returnZero
Code	int sum = NUMBER_CONSTANT ; returnZero
Distance : 2

147
Tree	int sum = NUMBER_CONSTANT ; Args
Code	int sum = NUMBER_CONSTANT ; Args
Distance : 2

148
Tree	int sum = NUMBER_CONSTANT ; getFirstChild
Code	int sum = NUMBER_CONSTANT ; getFirstChild
Distance : 2

149
Tree	int sum = NUMBER_CONSTANT ; :
Code	int sum = NUMBER_CONSTANT ; :
Distance : 2

150
Tree	int sum = NUMBER_CONSTANT ; m
Code	int sum = NUMBER_CONSTANT ; m
Distance : 2

151
Tree	int sum = NUMBER_CONSTANT ; paint
Code	int sum = NUMBER_CONSTANT ; paint
Distance : 2

152
Tree	int sum = NUMBER_CONSTANT ; length
Code	int sum = NUMBER_CONSTANT ; length
Distance : 2

153
Tree	int sum = NUMBER_CONSTANT ; Node
Code	int sum = NUMBER_CONSTANT ; Node
Distance : 2

154
Tree	int sum = NUMBER_CONSTANT ; lines
Code	int sum = NUMBER_CONSTANT ; lines
Distance : 2

155
Tree	int sum = NUMBER_CONSTANT ; verify
Code	int sum = NUMBER_CONSTANT ; verify
Distance : 2

156
Tree	int sum = NUMBER_CONSTANT ; TestUtils
Code	int sum = NUMBER_CONSTANT ; TestUtils
Distance : 2

157
Tree	int sum = NUMBER_CONSTANT ; Integer
Code	int sum = NUMBER_CONSTANT ; Integer
Distance : 2

158
Tree	int sum = NUMBER_CONSTANT ; checkNotNull
Code	int sum = NUMBER_CONSTANT ; checkNotNull
Distance : 2

159
Tree	int sum = NUMBER_CONSTANT ; s
Code	int sum = NUMBER_CONSTANT ; s
Distance : 2

160
Tree	int sum = NUMBER_CONSTANT ; scope
Code	int sum = NUMBER_CONSTANT ; scope
Distance : 2

161
Tree	int sum = NUMBER_CONSTANT ; reportCodeChange
Code	int sum = NUMBER_CONSTANT ; reportCodeChange
Distance : 2

162
Tree	int sum = NUMBER_CONSTANT ; invocation
Code	int sum = NUMBER_CONSTANT ; invocation
Distance : 2

163
Tree	int sum = NUMBER_CONSTANT ; FastMath
Code	int sum = NUMBER_CONSTANT ; FastMath
Distance : 2

164
Tree	int sum = NUMBER_CONSTANT ; t
Code	int sum = NUMBER_CONSTANT ; t
Distance : 2

165
Tree	int sum = NUMBER_CONSTANT ; name
Code	int sum = NUMBER_CONSTANT ; name
Distance : 2

166
Tree	int sum = NUMBER_CONSTANT ; array
Code	int sum = NUMBER_CONSTANT ; array
Distance : 2

167
Tree	int sum = NUMBER_CONSTANT ; List
Code	int sum = NUMBER_CONSTANT ; List
Distance : 2

168
Tree	int sum = NUMBER_CONSTANT ; try
Code	int sum = NUMBER_CONSTANT ; try
Distance : 2

169
Tree	int sum = NUMBER_CONSTANT ; IllegalArgumentException
Code	int sum = NUMBER_CONSTANT ; IllegalArgumentException
Distance : 2

170
Tree	int sum = NUMBER_CONSTANT ; UnivariateFunction
Code	int sum = NUMBER_CONSTANT ; UnivariateFunction
Distance : 2

171
Tree	int sum = NUMBER_CONSTANT ; append
Code	int sum = NUMBER_CONSTANT ; append
Distance : 2

172
Tree	int sum = NUMBER_CONSTANT ; ?
Code	int sum = NUMBER_CONSTANT ; ?
Distance : 2

173
Tree	int sum = NUMBER_CONSTANT ; !
Code	int sum = NUMBER_CONSTANT ; !
Distance : 2

174
Tree	int sum = NUMBER_CONSTANT ; nullNotPermitted
Code	int sum = NUMBER_CONSTANT ; nullNotPermitted
Distance : 2

175
Tree	int sum = NUMBER_CONSTANT ; fail
Code	int sum = NUMBER_CONSTANT ; fail
Distance : 2

176
Tree	int sum = NUMBER_CONSTANT ; []
Code	int sum = NUMBER_CONSTANT ; []
Distance : 2

177
Tree	int sum = NUMBER_CONSTANT ; @
Code	int sum = NUMBER_CONSTANT ; @
Distance : 2

178
Tree	int sum = NUMBER_CONSTANT ; assertEquals
Code	int sum = NUMBER_CONSTANT ; assertEquals
Distance : 2

179
Tree	int sum = NUMBER_CONSTANT ; test
Code	int sum = NUMBER_CONSTANT ; test
Distance : 2

180
Tree	int sum = NUMBER_CONSTANT ; ==
Code	int sum = NUMBER_CONSTANT ; ==
Distance : 2

181
Tree	int sum = NUMBER_CONSTANT ; equals
Code	int sum = NUMBER_CONSTANT ; equals
Distance : 2

182
Tree	int sum = NUMBER_CONSTANT ; Invocation
Code	int sum = NUMBER_CONSTANT ; Invocation
Distance : 2

183
Tree	int sum = NUMBER_CONSTANT ; notifyListeners
Code	int sum = NUMBER_CONSTANT ; notifyListeners
Distance : 2

184
Tree	int sum = NUMBER_CONSTANT ; for
Code	int sum = NUMBER_CONSTANT ; for
Distance : 2

185
Tree	int sum = NUMBER_CONSTANT ; TestUtilities
Code	int sum = NUMBER_CONSTANT ; TestUtilities
Distance : 2

186
Tree	int sum = NUMBER_CONSTANT ; d
Code	int sum = NUMBER_CONSTANT ; d
Distance : 2

187
Tree	int sum = NUMBER_CONSTANT ; sb
Code	int sum = NUMBER_CONSTANT ; sb
Distance : 2

188
Tree	int sum = NUMBER_CONSTANT ; Override
Code	int sum = NUMBER_CONSTANT ; Override
Distance : 2

189
Tree	int sum = NUMBER_CONSTANT ; field
Code	int sum = NUMBER_CONSTANT ; field
Distance : 2

190
Tree	int sum = NUMBER_CONSTANT ; false
Code	int sum = NUMBER_CONSTANT ; false
Distance : 2

191
Tree	int sum = NUMBER_CONSTANT ; x
Code	int sum = NUMBER_CONSTANT ; x
Distance : 2

192
Tree	int sum = NUMBER_CONSTANT ; c
Code	int sum = NUMBER_CONSTANT ; c
Distance : 2

193
Tree	int sum = NUMBER_CONSTANT ; toString
Code	int sum = NUMBER_CONSTANT ; toString
Distance : 2

194
Tree	int sum = NUMBER_CONSTANT ; p
Code	int sum = NUMBER_CONSTANT ; p
Distance : 2

195
Tree	int sum = NUMBER_CONSTANT ; Test
Code	int sum = NUMBER_CONSTANT ; Test
Distance : 2

196
Tree	int sum = NUMBER_CONSTANT ; options
Code	int sum = NUMBER_CONSTANT ; options
Distance : 2

197
Tree	int sum = NUMBER_CONSTANT ; Math
Code	int sum = NUMBER_CONSTANT ; Math
Distance : 2

198
Tree	int sum = NUMBER_CONSTANT ; Class
Code	int sum = NUMBER_CONSTANT ; Class
Distance : 2

199
Tree	int sum = NUMBER_CONSTANT ; chrono
Code	int sum = NUMBER_CONSTANT ; chrono
Distance : 2

========================================================================


========================================================================
Example Number: 63
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator () ; values
Code	Iterator iter = res.entries . iterator () ; values
Distance : 2

1
Tree	Iterator iter = res.entries . iterator () ; Test
Code	Iterator iter = res.entries . iterator () ; Test
Distance : 2

2
Tree	Iterator iter = res.entries . iterator () ; MathRuntimeException
Code	Iterator iter = res.entries . iterator () ; MathRuntimeException
Distance : 2

3
Tree	Iterator iter = res.entries . iterator () ; {}
Code	Iterator iter = res.entries . iterator () ; {}
Distance : 2

4
Tree	Iterator iter = res.entries . iterator () ; f
Code	Iterator iter = res.entries . iterator () ; f
Distance : 2

5
Tree	Iterator iter = res.entries . iterator () ; class
Code	Iterator iter = res.entries . iterator () ; class
Distance : 2

6
Tree	Iterator iter = res.entries . iterator () ; -
Code	Iterator iter = res.entries . iterator () ; -
Distance : 2

7
Tree	Iterator iter = res.entries . iterator () ; Preconditions
Code	Iterator iter = res.entries . iterator () ; Preconditions
Distance : 2

8
Tree	Iterator iter = res.entries . iterator () ; T
Code	Iterator iter = res.entries . iterator () ; T
Distance : 2

9
Tree	Iterator iter = res.entries . iterator () ; &&
Code	Iterator iter = res.entries . iterator () ; &&
Distance : 2

10
Tree	Iterator iter = res.entries . iterator () ; ]
Code	Iterator iter = res.entries . iterator () ; ]
Distance : 2

11
Tree	Iterator iter = res.entries . iterator () ; [
Code	Iterator iter = res.entries . iterator () ; [
Distance : 2

12
Tree	Iterator iter = res.entries . iterator () ; Object
Code	Iterator iter = res.entries . iterator () ; Object
Distance : 2

13
Tree	Iterator iter = res.entries . iterator () ; ParamChecks
Code	Iterator iter = res.entries . iterator () ; ParamChecks
Distance : 2

14
Tree	Iterator iter = res.entries . iterator () ; test
Code	Iterator iter = res.entries . iterator () ; test
Distance : 2

15
Tree	Iterator iter = res.entries . iterator () ; @
Code	Iterator iter = res.entries . iterator () ; @
Distance : 2

16
Tree	Iterator iter = res.entries . iterator () ; !
Code	Iterator iter = res.entries . iterator () ; !
Distance : 2

17
Tree	Iterator iter = res.entries . iterator () ; assertEquals
Code	Iterator iter = res.entries . iterator () ; assertEquals
Distance : 2

18
Tree	Iterator iter = res.entries . iterator () ; ==
Code	Iterator iter = res.entries . iterator () ; ==
Distance : 2

19
Tree	Iterator iter = res.entries . iterator () ; void
Code	Iterator iter = res.entries . iterator () ; void
Distance : 2

20
Tree	Iterator iter = res.entries . iterator () ; []
Code	Iterator iter = res.entries . iterator () ; []
Distance : 2

21
Tree	Iterator iter = res.entries . iterator () ; checkState
Code	Iterator iter = res.entries . iterator () ; checkState
Distance : 2

22
Tree	Iterator iter = res.entries . iterator () ; toString
Code	Iterator iter = res.entries . iterator () ; toString
Distance : 2

23
Tree	Iterator iter = res.entries . iterator () ; protected
Code	Iterator iter = res.entries . iterator () ; protected
Distance : 2

24
Tree	Iterator iter = res.entries . iterator () ; nullNotPermitted
Code	Iterator iter = res.entries . iterator () ; nullNotPermitted
Distance : 2

25
Tree	Iterator iter = res.entries . iterator () ; e
Code	Iterator iter = res.entries . iterator () ; e
Distance : 2

26
Tree	Iterator iter = res.entries . iterator () ; super
Code	Iterator iter = res.entries . iterator () ; super
Distance : 2

27
Tree	Iterator iter = res.entries . iterator () ; i
Code	Iterator iter = res.entries . iterator () ; i
Distance : 2

28
Tree	Iterator iter = res.entries . iterator () ; mock
Code	Iterator iter = res.entries . iterator () ; mock
Distance : 2

29
Tree	Iterator iter = res.entries . iterator () ; Override
Code	Iterator iter = res.entries . iterator () ; Override
Distance : 2

30
Tree	Iterator iter = res.entries . iterator () ; public
Code	Iterator iter = res.entries . iterator () ; public
Distance : 2

31
Tree	Iterator iter = res.entries . iterator () ; >
Code	Iterator iter = res.entries . iterator () ; >
Distance : 2

32
Tree	Iterator iter = res.entries . iterator () ; new
Code	Iterator iter = res.entries . iterator () ; new
Distance : 2

33
Tree	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Code	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Distance : 2

34
Tree	Iterator iter = res.entries . iterator () ; ,
Code	Iterator iter = res.entries . iterator () ; ,
Distance : 2

35
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

36
Tree	Iterator iter = res.entries . iterator () ; }
Code	Iterator iter = res.entries . iterator () ; }
Distance : 2

37
Tree	Iterator iter = res.entries . iterator () ; =
Code	Iterator iter = res.entries . iterator () ; =
Distance : 2

38
Tree	Iterator iter = res.entries . iterator () ; (
Code	Iterator iter = res.entries . iterator () ; (
Distance : 2

39
Tree	Iterator iter = res.entries . iterator () ; <s>
Code	Iterator iter = res.entries . iterator () ; <s>
Distance : 2

40
Tree	Iterator iter = res.entries . iterator () ; <blank>
Code	Iterator iter = res.entries . iterator () ; <blank>
Distance : 2

41
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

42
Tree	Iterator iter = res.entries . iterator () ; )
Code	Iterator iter = res.entries . iterator () ; )
Distance : 2

43
Tree	Iterator iter = res.entries . iterator () ; ;
Code	Iterator iter = res.entries . iterator () ; ;
Distance : 2

44
Tree	Iterator iter = res.entries . iterator () ; ()
Code	Iterator iter = res.entries . iterator () ; ()
Distance : 2

45
Tree	Iterator iter = res.entries . iterator () ; {
Code	Iterator iter = res.entries . iterator () ; {
Distance : 2

46
Tree	Iterator iter = res.entries . iterator () ; false
Code	Iterator iter = res.entries . iterator () ; false
Distance : 2

47
Tree	Iterator iter = res.entries . iterator () ; int
Code	Iterator iter = res.entries . iterator () ; int
Distance : 2

48
Tree	Iterator iter = res.entries . iterator () ; double
Code	Iterator iter = res.entries . iterator () ; double
Distance : 2

49
Tree	Iterator iter = res.entries . iterator () ; n
Code	Iterator iter = res.entries . iterator () ; n
Distance : 2

50
Tree	Iterator iter = res.entries . iterator () ; matcher
Code	Iterator iter = res.entries . iterator () ; matcher
Distance : 2

51
Tree	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Code	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Distance : 2

52
Tree	Iterator iter = res.entries . iterator () ; this
Code	Iterator iter = res.entries . iterator () ; this
Distance : 2

53
Tree	Iterator iter = res.entries . iterator () ; final
Code	Iterator iter = res.entries . iterator () ; final
Distance : 2

54
Tree	Iterator iter = res.entries . iterator () ; name
Code	Iterator iter = res.entries . iterator () ; name
Distance : 2

55
Tree	Iterator iter = res.entries . iterator () ; t
Code	Iterator iter = res.entries . iterator () ; t
Distance : 2

56
Tree	Iterator iter = res.entries . iterator () ; solver
Code	Iterator iter = res.entries . iterator () ; solver
Distance : 2

57
Tree	Iterator iter = res.entries . iterator () ; getField
Code	Iterator iter = res.entries . iterator () ; getField
Distance : 2

58
Tree	Iterator iter = res.entries . iterator () ; pattern
Code	Iterator iter = res.entries . iterator () ; pattern
Distance : 2

59
Tree	Iterator iter = res.entries . iterator () ; out
Code	Iterator iter = res.entries . iterator () ; out
Distance : 2

60
Tree	Iterator iter = res.entries . iterator () ; Collection
Code	Iterator iter = res.entries . iterator () ; Collection
Distance : 2

61
Tree	Iterator iter = res.entries . iterator () ; mode
Code	Iterator iter = res.entries . iterator () ; mode
Distance : 2

62
Tree	Iterator iter = res.entries . iterator () ; mockingProgress
Code	Iterator iter = res.entries . iterator () ; mockingProgress
Distance : 2

63
Tree	Iterator iter = res.entries . iterator () ; return;
Code	Iterator iter = res.entries . iterator () ; return;
Distance : 2

64
Tree	Iterator iter = res.entries . iterator () ; char
Code	Iterator iter = res.entries . iterator () ; char
Distance : 2

65
Tree	Iterator iter = res.entries . iterator () ; get
Code	Iterator iter = res.entries . iterator () ; get
Distance : 2

66
Tree	Iterator iter = res.entries . iterator () ; static
Code	Iterator iter = res.entries . iterator () ; static
Distance : 2

67
Tree	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Code	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Distance : 2

68
Tree	Iterator iter = res.entries . iterator () ; JSType
Code	Iterator iter = res.entries . iterator () ; JSType
Distance : 2

69
Tree	Iterator iter = res.entries . iterator () ; isEmpty
Code	Iterator iter = res.entries . iterator () ; isEmpty
Distance : 2

70
Tree	Iterator iter = res.entries . iterator () ; else
Code	Iterator iter = res.entries . iterator () ; else
Distance : 2

71
Tree	Iterator iter = res.entries . iterator () ; true
Code	Iterator iter = res.entries . iterator () ; true
Distance : 2

72
Tree	Iterator iter = res.entries . iterator () ; return
Code	Iterator iter = res.entries . iterator () ; return
Distance : 2

73
Tree	Iterator iter = res.entries . iterator () ; if
Code	Iterator iter = res.entries . iterator () ; if
Distance : 2

74
Tree	Iterator iter = res.entries . iterator () ; getMessage
Code	Iterator iter = res.entries . iterator () ; getMessage
Distance : 2

75
Tree	Iterator iter = res.entries . iterator () ; <
Code	Iterator iter = res.entries . iterator () ; <
Distance : 2

76
Tree	Iterator iter = res.entries . iterator () ; dataset
Code	Iterator iter = res.entries . iterator () ; dataset
Distance : 2

77
Tree	Iterator iter = res.entries . iterator () ; getChronology
Code	Iterator iter = res.entries . iterator () ; getChronology
Distance : 2

78
Tree	Iterator iter = res.entries . iterator () ; js
Code	Iterator iter = res.entries . iterator () ; js
Distance : 2

79
Tree	Iterator iter = res.entries . iterator () ; TestUtilities
Code	Iterator iter = res.entries . iterator () ; TestUtilities
Distance : 2

80
Tree	Iterator iter = res.entries . iterator () ; equals
Code	Iterator iter = res.entries . iterator () ; equals
Distance : 2

81
Tree	Iterator iter = res.entries . iterator () ; d
Code	Iterator iter = res.entries . iterator () ; d
Distance : 2

82
Tree	Iterator iter = res.entries . iterator () ; notifyListeners
Code	Iterator iter = res.entries . iterator () ; notifyListeners
Distance : 2

83
Tree	Iterator iter = res.entries . iterator () ; externs
Code	Iterator iter = res.entries . iterator () ; externs
Distance : 2

84
Tree	Iterator iter = res.entries . iterator () ; for
Code	Iterator iter = res.entries . iterator () ; for
Distance : 2

85
Tree	Iterator iter = res.entries . iterator () ; Invocation
Code	Iterator iter = res.entries . iterator () ; Invocation
Distance : 2

86
Tree	Iterator iter = res.entries . iterator () ; node
Code	Iterator iter = res.entries . iterator () ; node
Distance : 2

87
Tree	Iterator iter = res.entries . iterator () ; getParent
Code	Iterator iter = res.entries . iterator () ; getParent
Distance : 2

88
Tree	Iterator iter = res.entries . iterator () ; StrBuilder
Code	Iterator iter = res.entries . iterator () ; StrBuilder
Distance : 2

89
Tree	Iterator iter = res.entries . iterator () ; setUp
Code	Iterator iter = res.entries . iterator () ; setUp
Distance : 2

90
Tree	Iterator iter = res.entries . iterator () ; invocations
Code	Iterator iter = res.entries . iterator () ; invocations
Distance : 2

91
Tree	Iterator iter = res.entries . iterator () ; index
Code	Iterator iter = res.entries . iterator () ; index
Distance : 2

92
Tree	Iterator iter = res.entries . iterator () ; instant
Code	Iterator iter = res.entries . iterator () ; instant
Distance : 2

93
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

94
Tree	Iterator iter = res.entries . iterator () ; Double
Code	Iterator iter = res.entries . iterator () ; Double
Distance : 2

95
Tree	Iterator iter = res.entries . iterator () ; <=
Code	Iterator iter = res.entries . iterator () ; <=
Distance : 2

96
Tree	Iterator iter = res.entries . iterator () ; reportMatcher
Code	Iterator iter = res.entries . iterator () ; reportMatcher
Distance : 2

97
Tree	Iterator iter = res.entries . iterator () ; stream
Code	Iterator iter = res.entries . iterator () ; stream
Distance : 2

98
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

99
Tree	Iterator iter = res.entries . iterator () ;
Code	Iterator iter = res.entries . iterator () ;
Distance : 1

100
Tree	Iterator iter = res.entries . iterator () ; contains
Code	Iterator iter = res.entries . iterator () ; contains
Distance : 2

101
Tree	Iterator iter = res.entries . iterator () ; b
Code	Iterator iter = res.entries . iterator () ; b
Distance : 2

102
Tree	Iterator iter = res.entries . iterator () ; stroke
Code	Iterator iter = res.entries . iterator () ; stroke
Distance : 2

103
Tree	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Code	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Distance : 2

104
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	Iterator iter = res.entries . iterator () ; size
Code	Iterator iter = res.entries . iterator () ; size
Distance : 2

106
Tree	Iterator iter = res.entries . iterator () ; traverseEs6
Code	Iterator iter = res.entries . iterator () ; traverseEs6
Distance : 2

107
Tree	Iterator iter = res.entries . iterator () ; StringBuilder
Code	Iterator iter = res.entries . iterator () ; StringBuilder
Distance : 2

108
Tree	Iterator iter = res.entries . iterator () ; chrono
Code	Iterator iter = res.entries . iterator () ; chrono
Distance : 2

109
Tree	Iterator iter = res.entries . iterator () ; a
Code	Iterator iter = res.entries . iterator () ; a
Distance : 2

110
Tree	Iterator iter = res.entries . iterator () ; returnZero
Code	Iterator iter = res.entries . iterator () ; returnZero
Distance : 2

111
Tree	Iterator iter = res.entries . iterator () ; sb
Code	Iterator iter = res.entries . iterator () ; sb
Distance : 2

112
Tree	Iterator iter = res.entries . iterator () ; scope
Code	Iterator iter = res.entries . iterator () ; scope
Distance : 2

113
Tree	Iterator iter = res.entries . iterator () ; UnivariateFunction
Code	Iterator iter = res.entries . iterator () ; UnivariateFunction
Distance : 2

114
Tree	Iterator iter = res.entries . iterator () ; sqrt
Code	Iterator iter = res.entries . iterator () ; sqrt
Distance : 2

115
Tree	Iterator iter = res.entries . iterator () ; clone
Code	Iterator iter = res.entries . iterator () ; clone
Distance : 2

116
Tree	Iterator iter = res.entries . iterator () ; getFirstChild
Code	Iterator iter = res.entries . iterator () ; getFirstChild
Distance : 2

117
Tree	Iterator iter = res.entries . iterator () ; throws
Code	Iterator iter = res.entries . iterator () ; throws
Distance : 2

118
Tree	Iterator iter = res.entries . iterator () ; simpleMethod
Code	Iterator iter = res.entries . iterator () ; simpleMethod
Distance : 2

119
Tree	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Code	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Distance : 2

120
Tree	Iterator iter = res.entries . iterator () ; append
Code	Iterator iter = res.entries . iterator () ; append
Distance : 2

121
Tree	Iterator iter = res.entries . iterator () ; alpha
Code	Iterator iter = res.entries . iterator () ; alpha
Distance : 2

122
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

123
Tree	Iterator iter = res.entries . iterator () ; obj
Code	Iterator iter = res.entries . iterator () ; obj
Distance : 2

124
Tree	Iterator iter = res.entries . iterator () ; isBlock
Code	Iterator iter = res.entries . iterator () ; isBlock
Distance : 2

125
Tree	Iterator iter = res.entries . iterator () ; array
Code	Iterator iter = res.entries . iterator () ; array
Distance : 2

126
Tree	Iterator iter = res.entries . iterator () ; TestUtils
Code	Iterator iter = res.entries . iterator () ; TestUtils
Distance : 2

127
Tree	Iterator iter = res.entries . iterator () ; length
Code	Iterator iter = res.entries . iterator () ; length
Distance : 2

128
Tree	Iterator iter = res.entries . iterator () ; expected
Code	Iterator iter = res.entries . iterator () ; expected
Distance : 2

129
Tree	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Distance : 2

130
Tree	Iterator iter = res.entries . iterator () ; invocation
Code	Iterator iter = res.entries . iterator () ; invocation
Distance : 2

131
Tree	Iterator iter = res.entries . iterator () ; assertThat
Code	Iterator iter = res.entries . iterator () ; assertThat
Distance : 2

132
Tree	Iterator iter = res.entries . iterator () ; FastMath
Code	Iterator iter = res.entries . iterator () ; FastMath
Distance : 2

133
Tree	Iterator iter = res.entries . iterator () ; reportCodeChange
Code	Iterator iter = res.entries . iterator () ; reportCodeChange
Distance : 2

134
Tree	Iterator iter = res.entries . iterator () ; testSame
Code	Iterator iter = res.entries . iterator () ; testSame
Distance : 2

135
Tree	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Distance : 2

136
Tree	Iterator iter = res.entries . iterator () ; ArrayList
Code	Iterator iter = res.entries . iterator () ; ArrayList
Distance : 2

137
Tree	Iterator iter = res.entries . iterator () ; parent
Code	Iterator iter = res.entries . iterator () ; parent
Distance : 2

138
Tree	Iterator iter = res.entries . iterator () ; LINE_JOINER
Code	Iterator iter = res.entries . iterator () ; LINE_JOINER
Distance : 2

139
Tree	Iterator iter = res.entries . iterator () ; x
Code	Iterator iter = res.entries . iterator () ; x
Distance : 2

140
Tree	Iterator iter = res.entries . iterator () ; fireChangeEvent
Code	Iterator iter = res.entries . iterator () ; fireChangeEvent
Distance : 2

141
Tree	Iterator iter = res.entries . iterator () ; str
Code	Iterator iter = res.entries . iterator () ; str
Distance : 2

142
Tree	Iterator iter = res.entries . iterator () ; m
Code	Iterator iter = res.entries . iterator () ; m
Distance : 2

143
Tree	Iterator iter = res.entries . iterator () ; try
Code	Iterator iter = res.entries . iterator () ; try
Distance : 2

144
Tree	Iterator iter = res.entries . iterator () ; fail
Code	Iterator iter = res.entries . iterator () ; fail
Distance : 2

145
Tree	Iterator iter = res.entries . iterator () ; :
Code	Iterator iter = res.entries . iterator () ; :
Distance : 2

146
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	Iterator iter = res.entries . iterator () ; optimizer
Code	Iterator iter = res.entries . iterator () ; optimizer
Distance : 2

148
Tree	Iterator entries = res.entries . iterator () ;
Code	Iterator entries = res.entries . iterator () ;
Distance : 2

149
Tree	Iterator iter = res.entries . iterator () ; <>
Code	Iterator iter = res.entries . iterator () ; <>
Distance : 2

150
Tree	Iterator iter = res.entries . iterator () ; ?
Code	Iterator iter = res.entries . iterator () ; ?
Distance : 2

151
Tree	Iterator iter = res.entries . iterator () ; boolean
Code	Iterator iter = res.entries . iterator () ; boolean
Distance : 2

152
Tree	Iterator iter = res.entries . iterator () ; paint
Code	Iterator iter = res.entries . iterator () ; paint
Distance : 2

153
Tree	Iterator iter = res.entries . iterator () ; result
Code	Iterator iter = res.entries . iterator () ; result
Distance : 2

154
Tree	Iterator iter = res.entries . iterator () ; *
Code	Iterator iter = res.entries . iterator () ; *
Distance : 2

155
Tree	Iterator iter = res.entries . iterator () ; type
Code	Iterator iter = res.entries . iterator () ; type
Distance : 2

156
Tree	Iterator iter = res.entries . iterator () ; getInstance
Code	Iterator iter = res.entries . iterator () ; getInstance
Distance : 2

157
Tree	Iterator iter = res.entries . iterator () ; serialised
Code	Iterator iter = res.entries . iterator () ; serialised
Distance : 2

158
Tree	Iterator iter = res.entries . iterator () ; Exception
Code	Iterator iter = res.entries . iterator () ; Exception
Distance : 2

159
Tree	Iterator iter = res.entries . iterator () ; Assert
Code	Iterator iter = res.entries . iterator () ; Assert
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; source
Code	Iterator iter = res.entries . iterator () ; source
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; Class
Code	Iterator iter = res.entries . iterator () ; Class
Distance : 2

162
Tree	Iterator iter = res.entries . iterator () ; Math
Code	Iterator iter = res.entries . iterator () ; Math
Distance : 2

163
Tree	Iterator iter = res.entries . iterator () ; root
Code	Iterator iter = res.entries . iterator () ; root
Distance : 2

164
Tree	Iterator iter = res.entries . iterator () ; options
Code	Iterator iter = res.entries . iterator () ; options
Distance : 2

165
Tree	Iterator iter = res.entries . iterator () ; p
Code	Iterator iter = res.entries . iterator () ; p
Distance : 2

166
Tree	Iterator iter = res.entries . iterator () ; data
Code	Iterator iter = res.entries . iterator () ; data
Distance : 2

167
Tree	Iterator iter = res.entries . iterator () ; add
Code	Iterator iter = res.entries . iterator () ; add
Distance : 2

168
Tree	Iterator iter = res.entries . iterator () ; field
Code	Iterator iter = res.entries . iterator () ; field
Distance : 2

169
Tree	Iterator iter = res.entries . iterator () ; checkArgument
Code	Iterator iter = res.entries . iterator () ; checkArgument
Distance : 2

170
Tree	Iterator iter = res.entries . iterator () ; ex
Code	Iterator iter = res.entries . iterator () ; ex
Distance : 2

171
Tree	Iterator iter = res.entries . iterator () ; NodeUtil
Code	Iterator iter = res.entries . iterator () ; NodeUtil
Distance : 2

172
Tree	Iterator iter = res.entries . iterator () ; join
Code	Iterator iter = res.entries . iterator () ; join
Distance : 2

173
Tree	Iterator iter = res.entries . iterator () ; List
Code	Iterator iter = res.entries . iterator () ; List
Distance : 2

174
Tree	Iterator iter = res.entries . iterator () ; NodeTraversal
Code	Iterator iter = res.entries . iterator () ; NodeTraversal
Distance : 2

175
Tree	Iterator iter = res.entries . iterator () ; Args
Code	Iterator iter = res.entries . iterator () ; Args
Distance : 2

176
Tree	Iterator iter = res.entries . iterator () ; v
Code	Iterator iter = res.entries . iterator () ; v
Distance : 2

177
Tree	Iterator iter = res.entries . iterator () ; Integer
Code	Iterator iter = res.entries . iterator () ; Integer
Distance : 2

178
Tree	Iterator iter = res.entries . iterator () ; lines
Code	Iterator iter = res.entries . iterator () ; lines
Distance : 2

179
Tree	Iterator iter = res.entries . iterator () ; c
Code	Iterator iter = res.entries . iterator () ; c
Distance : 2

180
Tree	Iterator iter = res.entries . iterator () ; verify
Code	Iterator iter = res.entries . iterator () ; verify
Distance : 2

181
Tree	Iterator iter = res.entries . iterator () ; Node
Code	Iterator iter = res.entries . iterator () ; Node
Distance : 2

182
Tree	Iterator iter = res.entries . iterator () ; compiler
Code	Iterator iter = res.entries . iterator () ; compiler
Distance : 2

183
Tree	Iterator iter = res.entries . iterator () ; String
Code	Iterator iter = res.entries . iterator () ; String
Distance : 2

184
Tree	Iterator iter = res.entries . iterator () ; null
Code	Iterator iter = res.entries . iterator () ; null
Distance : 2

185
Tree	Iterator iter = res.entries . iterator () ; wanted
Code	Iterator iter = res.entries . iterator () ; wanted
Distance : 2

186
Tree	Iterator iter = res.entries . iterator () ; +
Code	Iterator iter = res.entries . iterator () ; +
Distance : 2

187
Tree	Iterator iter = res.entries . iterator () ; catch
Code	Iterator iter = res.entries . iterator () ; catch
Distance : 2

188
Tree	Iterator iter = res.entries . iterator () ; !=
Code	Iterator iter = res.entries . iterator () ; !=
Distance : 2

189
Tree	Iterator iter = res.entries . iterator () ; value
Code	Iterator iter = res.entries . iterator () ; value
Distance : 2

190
Tree	Iterator iter = res.entries . iterator () ; /
Code	Iterator iter = res.entries . iterator () ; /
Distance : 2

191
Tree	Iterator iter = res.entries . iterator () ; assertTrue
Code	Iterator iter = res.entries . iterator () ; assertTrue
Distance : 2

192
Tree	Iterator iter = res.entries . iterator () ; checkNotNull
Code	Iterator iter = res.entries . iterator () ; checkNotNull
Distance : 2

193
Tree	Iterator iter = res.entries . iterator () ; Fraction
Code	Iterator iter = res.entries . iterator () ; Fraction
Distance : 2

194
Tree	Iterator iter = res.entries . iterator () ; valueOf
Code	Iterator iter = res.entries . iterator () ; valueOf
Distance : 2

195
Tree	Iterator iter = res.entries . iterator () ; instance
Code	Iterator iter = res.entries . iterator () ; instance
Distance : 2

196
Tree	Iterator iter = res.entries . iterator () ; long
Code	Iterator iter = res.entries . iterator () ; long
Distance : 2

197
Tree	Iterator iter = res.entries . iterator () ; throw
Code	Iterator iter = res.entries . iterator () ; throw
Distance : 2

198
Tree	Iterator iter = res.entries . iterator () ; y
Code	Iterator iter = res.entries . iterator () ; y
Distance : 2

199
Tree	Iterator iter = res.entries . iterator () ; PeriodType
Code	Iterator iter = res.entries . iterator () ; PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 64
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator () ; values
Code	Iterator iter = res.entries . iterator () ; values
Distance : 2

1
Tree	Iterator iter = res.entries . iterator () ; Test
Code	Iterator iter = res.entries . iterator () ; Test
Distance : 2

2
Tree	Iterator iter = res.entries . iterator () ; MathRuntimeException
Code	Iterator iter = res.entries . iterator () ; MathRuntimeException
Distance : 2

3
Tree	Iterator iter = res.entries . iterator () ; {}
Code	Iterator iter = res.entries . iterator () ; {}
Distance : 2

4
Tree	Iterator iter = res.entries . iterator () ; f
Code	Iterator iter = res.entries . iterator () ; f
Distance : 2

5
Tree	Iterator iter = res.entries . iterator () ; class
Code	Iterator iter = res.entries . iterator () ; class
Distance : 2

6
Tree	Iterator iter = res.entries . iterator () ; -
Code	Iterator iter = res.entries . iterator () ; -
Distance : 2

7
Tree	Iterator iter = res.entries . iterator () ; Preconditions
Code	Iterator iter = res.entries . iterator () ; Preconditions
Distance : 2

8
Tree	Iterator iter = res.entries . iterator () ; T
Code	Iterator iter = res.entries . iterator () ; T
Distance : 2

9
Tree	Iterator iter = res.entries . iterator () ; &&
Code	Iterator iter = res.entries . iterator () ; &&
Distance : 2

10
Tree	Iterator iter = res.entries . iterator () ; ]
Code	Iterator iter = res.entries . iterator () ; ]
Distance : 2

11
Tree	Iterator iter = res.entries . iterator () ; [
Code	Iterator iter = res.entries . iterator () ; [
Distance : 2

12
Tree	Iterator iter = res.entries . iterator () ; Object
Code	Iterator iter = res.entries . iterator () ; Object
Distance : 2

13
Tree	Iterator iter = res.entries . iterator () ; ParamChecks
Code	Iterator iter = res.entries . iterator () ; ParamChecks
Distance : 2

14
Tree	Iterator iter = res.entries . iterator () ; test
Code	Iterator iter = res.entries . iterator () ; test
Distance : 2

15
Tree	Iterator iter = res.entries . iterator () ; @
Code	Iterator iter = res.entries . iterator () ; @
Distance : 2

16
Tree	Iterator iter = res.entries . iterator () ; !
Code	Iterator iter = res.entries . iterator () ; !
Distance : 2

17
Tree	Iterator iter = res.entries . iterator () ; assertEquals
Code	Iterator iter = res.entries . iterator () ; assertEquals
Distance : 2

18
Tree	Iterator iter = res.entries . iterator () ; ==
Code	Iterator iter = res.entries . iterator () ; ==
Distance : 2

19
Tree	Iterator iter = res.entries . iterator () ; void
Code	Iterator iter = res.entries . iterator () ; void
Distance : 2

20
Tree	Iterator iter = res.entries . iterator () ; []
Code	Iterator iter = res.entries . iterator () ; []
Distance : 2

21
Tree	Iterator iter = res.entries . iterator () ; checkState
Code	Iterator iter = res.entries . iterator () ; checkState
Distance : 2

22
Tree	Iterator iter = res.entries . iterator () ; toString
Code	Iterator iter = res.entries . iterator () ; toString
Distance : 2

23
Tree	Iterator iter = res.entries . iterator () ; protected
Code	Iterator iter = res.entries . iterator () ; protected
Distance : 2

24
Tree	Iterator iter = res.entries . iterator () ; nullNotPermitted
Code	Iterator iter = res.entries . iterator () ; nullNotPermitted
Distance : 2

25
Tree	Iterator iter = res.entries . iterator () ; e
Code	Iterator iter = res.entries . iterator () ; e
Distance : 2

26
Tree	Iterator iter = res.entries . iterator () ; super
Code	Iterator iter = res.entries . iterator () ; super
Distance : 2

27
Tree	Iterator iter = res.entries . iterator () ; i
Code	Iterator iter = res.entries . iterator () ; i
Distance : 2

28
Tree	Iterator iter = res.entries . iterator () ; mock
Code	Iterator iter = res.entries . iterator () ; mock
Distance : 2

29
Tree	Iterator iter = res.entries . iterator () ; Override
Code	Iterator iter = res.entries . iterator () ; Override
Distance : 2

30
Tree	Iterator iter = res.entries . iterator () ; public
Code	Iterator iter = res.entries . iterator () ; public
Distance : 2

31
Tree	Iterator iter = res.entries . iterator () ; >
Code	Iterator iter = res.entries . iterator () ; >
Distance : 2

32
Tree	Iterator iter = res.entries . iterator () ; new
Code	Iterator iter = res.entries . iterator () ; new
Distance : 2

33
Tree	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Code	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Distance : 2

34
Tree	Iterator iter = res.entries . iterator () ; ,
Code	Iterator iter = res.entries . iterator () ; ,
Distance : 2

35
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

36
Tree	Iterator iter = res.entries . iterator () ; }
Code	Iterator iter = res.entries . iterator () ; }
Distance : 2

37
Tree	Iterator iter = res.entries . iterator () ; =
Code	Iterator iter = res.entries . iterator () ; =
Distance : 2

38
Tree	Iterator iter = res.entries . iterator () ; (
Code	Iterator iter = res.entries . iterator () ; (
Distance : 2

39
Tree	Iterator iter = res.entries . iterator () ; <s>
Code	Iterator iter = res.entries . iterator () ; <s>
Distance : 2

40
Tree	Iterator iter = res.entries . iterator () ; <blank>
Code	Iterator iter = res.entries . iterator () ; <blank>
Distance : 2

41
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

42
Tree	Iterator iter = res.entries . iterator () ; )
Code	Iterator iter = res.entries . iterator () ; )
Distance : 2

43
Tree	Iterator iter = res.entries . iterator () ; ;
Code	Iterator iter = res.entries . iterator () ; ;
Distance : 2

44
Tree	Iterator iter = res.entries . iterator () ; ()
Code	Iterator iter = res.entries . iterator () ; ()
Distance : 2

45
Tree	Iterator iter = res.entries . iterator () ; {
Code	Iterator iter = res.entries . iterator () ; {
Distance : 2

46
Tree	Iterator iter = res.entries . iterator () ; false
Code	Iterator iter = res.entries . iterator () ; false
Distance : 2

47
Tree	Iterator iter = res.entries . iterator () ; int
Code	Iterator iter = res.entries . iterator () ; int
Distance : 2

48
Tree	Iterator iter = res.entries . iterator () ; double
Code	Iterator iter = res.entries . iterator () ; double
Distance : 2

49
Tree	Iterator iter = res.entries . iterator () ; n
Code	Iterator iter = res.entries . iterator () ; n
Distance : 2

50
Tree	Iterator iter = res.entries . iterator () ; matcher
Code	Iterator iter = res.entries . iterator () ; matcher
Distance : 2

51
Tree	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Code	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Distance : 2

52
Tree	Iterator iter = res.entries . iterator () ; this
Code	Iterator iter = res.entries . iterator () ; this
Distance : 2

53
Tree	Iterator iter = res.entries . iterator () ; final
Code	Iterator iter = res.entries . iterator () ; final
Distance : 2

54
Tree	Iterator iter = res.entries . iterator () ; name
Code	Iterator iter = res.entries . iterator () ; name
Distance : 2

55
Tree	Iterator iter = res.entries . iterator () ; t
Code	Iterator iter = res.entries . iterator () ; t
Distance : 2

56
Tree	Iterator iter = res.entries . iterator () ; solver
Code	Iterator iter = res.entries . iterator () ; solver
Distance : 2

57
Tree	Iterator iter = res.entries . iterator () ; getField
Code	Iterator iter = res.entries . iterator () ; getField
Distance : 2

58
Tree	Iterator iter = res.entries . iterator () ; pattern
Code	Iterator iter = res.entries . iterator () ; pattern
Distance : 2

59
Tree	Iterator iter = res.entries . iterator () ; out
Code	Iterator iter = res.entries . iterator () ; out
Distance : 2

60
Tree	Iterator iter = res.entries . iterator () ; Collection
Code	Iterator iter = res.entries . iterator () ; Collection
Distance : 2

61
Tree	Iterator iter = res.entries . iterator () ; mode
Code	Iterator iter = res.entries . iterator () ; mode
Distance : 2

62
Tree	Iterator iter = res.entries . iterator () ; mockingProgress
Code	Iterator iter = res.entries . iterator () ; mockingProgress
Distance : 2

63
Tree	Iterator iter = res.entries . iterator () ; return;
Code	Iterator iter = res.entries . iterator () ; return;
Distance : 2

64
Tree	Iterator iter = res.entries . iterator () ; char
Code	Iterator iter = res.entries . iterator () ; char
Distance : 2

65
Tree	Iterator iter = res.entries . iterator () ; get
Code	Iterator iter = res.entries . iterator () ; get
Distance : 2

66
Tree	Iterator iter = res.entries . iterator () ; static
Code	Iterator iter = res.entries . iterator () ; static
Distance : 2

67
Tree	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Code	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Distance : 2

68
Tree	Iterator iter = res.entries . iterator () ; JSType
Code	Iterator iter = res.entries . iterator () ; JSType
Distance : 2

69
Tree	Iterator iter = res.entries . iterator () ; isEmpty
Code	Iterator iter = res.entries . iterator () ; isEmpty
Distance : 2

70
Tree	Iterator iter = res.entries . iterator () ; else
Code	Iterator iter = res.entries . iterator () ; else
Distance : 2

71
Tree	Iterator iter = res.entries . iterator () ; true
Code	Iterator iter = res.entries . iterator () ; true
Distance : 2

72
Tree	Iterator iter = res.entries . iterator () ; return
Code	Iterator iter = res.entries . iterator () ; return
Distance : 2

73
Tree	Iterator iter = res.entries . iterator () ; if
Code	Iterator iter = res.entries . iterator () ; if
Distance : 2

74
Tree	Iterator iter = res.entries . iterator () ; getMessage
Code	Iterator iter = res.entries . iterator () ; getMessage
Distance : 2

75
Tree	Iterator iter = res.entries . iterator () ; <
Code	Iterator iter = res.entries . iterator () ; <
Distance : 2

76
Tree	Iterator iter = res.entries . iterator () ; dataset
Code	Iterator iter = res.entries . iterator () ; dataset
Distance : 2

77
Tree	Iterator iter = res.entries . iterator () ; getChronology
Code	Iterator iter = res.entries . iterator () ; getChronology
Distance : 2

78
Tree	Iterator iter = res.entries . iterator () ; js
Code	Iterator iter = res.entries . iterator () ; js
Distance : 2

79
Tree	Iterator iter = res.entries . iterator () ; TestUtilities
Code	Iterator iter = res.entries . iterator () ; TestUtilities
Distance : 2

80
Tree	Iterator iter = res.entries . iterator () ; equals
Code	Iterator iter = res.entries . iterator () ; equals
Distance : 2

81
Tree	Iterator iter = res.entries . iterator () ; d
Code	Iterator iter = res.entries . iterator () ; d
Distance : 2

82
Tree	Iterator iter = res.entries . iterator () ; notifyListeners
Code	Iterator iter = res.entries . iterator () ; notifyListeners
Distance : 2

83
Tree	Iterator iter = res.entries . iterator () ; externs
Code	Iterator iter = res.entries . iterator () ; externs
Distance : 2

84
Tree	Iterator iter = res.entries . iterator () ; for
Code	Iterator iter = res.entries . iterator () ; for
Distance : 2

85
Tree	Iterator iter = res.entries . iterator () ; Invocation
Code	Iterator iter = res.entries . iterator () ; Invocation
Distance : 2

86
Tree	Iterator iter = res.entries . iterator () ; node
Code	Iterator iter = res.entries . iterator () ; node
Distance : 2

87
Tree	Iterator iter = res.entries . iterator () ; getParent
Code	Iterator iter = res.entries . iterator () ; getParent
Distance : 2

88
Tree	Iterator iter = res.entries . iterator () ; StrBuilder
Code	Iterator iter = res.entries . iterator () ; StrBuilder
Distance : 2

89
Tree	Iterator iter = res.entries . iterator () ; setUp
Code	Iterator iter = res.entries . iterator () ; setUp
Distance : 2

90
Tree	Iterator iter = res.entries . iterator () ; invocations
Code	Iterator iter = res.entries . iterator () ; invocations
Distance : 2

91
Tree	Iterator iter = res.entries . iterator () ; index
Code	Iterator iter = res.entries . iterator () ; index
Distance : 2

92
Tree	Iterator iter = res.entries . iterator () ; instant
Code	Iterator iter = res.entries . iterator () ; instant
Distance : 2

93
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

94
Tree	Iterator iter = res.entries . iterator () ; Double
Code	Iterator iter = res.entries . iterator () ; Double
Distance : 2

95
Tree	Iterator iter = res.entries . iterator () ; <=
Code	Iterator iter = res.entries . iterator () ; <=
Distance : 2

96
Tree	Iterator iter = res.entries . iterator () ; reportMatcher
Code	Iterator iter = res.entries . iterator () ; reportMatcher
Distance : 2

97
Tree	Iterator iter = res.entries . iterator () ; stream
Code	Iterator iter = res.entries . iterator () ; stream
Distance : 2

98
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

99
Tree	Iterator iter = res.entries . iterator () ;
Code	Iterator iter = res.entries . iterator () ;
Distance : 1

100
Tree	Iterator iter = res.entries . iterator () ; contains
Code	Iterator iter = res.entries . iterator () ; contains
Distance : 2

101
Tree	Iterator iter = res.entries . iterator () ; b
Code	Iterator iter = res.entries . iterator () ; b
Distance : 2

102
Tree	Iterator iter = res.entries . iterator () ; stroke
Code	Iterator iter = res.entries . iterator () ; stroke
Distance : 2

103
Tree	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Code	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Distance : 2

104
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	Iterator iter = res.entries . iterator () ; size
Code	Iterator iter = res.entries . iterator () ; size
Distance : 2

106
Tree	Iterator iter = res.entries . iterator () ; traverseEs6
Code	Iterator iter = res.entries . iterator () ; traverseEs6
Distance : 2

107
Tree	Iterator iter = res.entries . iterator () ; StringBuilder
Code	Iterator iter = res.entries . iterator () ; StringBuilder
Distance : 2

108
Tree	Iterator iter = res.entries . iterator () ; chrono
Code	Iterator iter = res.entries . iterator () ; chrono
Distance : 2

109
Tree	Iterator iter = res.entries . iterator () ; a
Code	Iterator iter = res.entries . iterator () ; a
Distance : 2

110
Tree	Iterator iter = res.entries . iterator () ; returnZero
Code	Iterator iter = res.entries . iterator () ; returnZero
Distance : 2

111
Tree	Iterator iter = res.entries . iterator () ; sb
Code	Iterator iter = res.entries . iterator () ; sb
Distance : 2

112
Tree	Iterator iter = res.entries . iterator () ; scope
Code	Iterator iter = res.entries . iterator () ; scope
Distance : 2

113
Tree	Iterator iter = res.entries . iterator () ; UnivariateFunction
Code	Iterator iter = res.entries . iterator () ; UnivariateFunction
Distance : 2

114
Tree	Iterator iter = res.entries . iterator () ; sqrt
Code	Iterator iter = res.entries . iterator () ; sqrt
Distance : 2

115
Tree	Iterator iter = res.entries . iterator () ; clone
Code	Iterator iter = res.entries . iterator () ; clone
Distance : 2

116
Tree	Iterator iter = res.entries . iterator () ; getFirstChild
Code	Iterator iter = res.entries . iterator () ; getFirstChild
Distance : 2

117
Tree	Iterator iter = res.entries . iterator () ; throws
Code	Iterator iter = res.entries . iterator () ; throws
Distance : 2

118
Tree	Iterator iter = res.entries . iterator () ; simpleMethod
Code	Iterator iter = res.entries . iterator () ; simpleMethod
Distance : 2

119
Tree	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Code	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Distance : 2

120
Tree	Iterator iter = res.entries . iterator () ; append
Code	Iterator iter = res.entries . iterator () ; append
Distance : 2

121
Tree	Iterator iter = res.entries . iterator () ; alpha
Code	Iterator iter = res.entries . iterator () ; alpha
Distance : 2

122
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

123
Tree	Iterator iter = res.entries . iterator () ; obj
Code	Iterator iter = res.entries . iterator () ; obj
Distance : 2

124
Tree	Iterator iter = res.entries . iterator () ; isBlock
Code	Iterator iter = res.entries . iterator () ; isBlock
Distance : 2

125
Tree	Iterator iter = res.entries . iterator () ; array
Code	Iterator iter = res.entries . iterator () ; array
Distance : 2

126
Tree	Iterator iter = res.entries . iterator () ; TestUtils
Code	Iterator iter = res.entries . iterator () ; TestUtils
Distance : 2

127
Tree	Iterator iter = res.entries . iterator () ; length
Code	Iterator iter = res.entries . iterator () ; length
Distance : 2

128
Tree	Iterator iter = res.entries . iterator () ; expected
Code	Iterator iter = res.entries . iterator () ; expected
Distance : 2

129
Tree	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Distance : 2

130
Tree	Iterator iter = res.entries . iterator () ; invocation
Code	Iterator iter = res.entries . iterator () ; invocation
Distance : 2

131
Tree	Iterator iter = res.entries . iterator () ; assertThat
Code	Iterator iter = res.entries . iterator () ; assertThat
Distance : 2

132
Tree	Iterator iter = res.entries . iterator () ; FastMath
Code	Iterator iter = res.entries . iterator () ; FastMath
Distance : 2

133
Tree	Iterator iter = res.entries . iterator () ; reportCodeChange
Code	Iterator iter = res.entries . iterator () ; reportCodeChange
Distance : 2

134
Tree	Iterator iter = res.entries . iterator () ; testSame
Code	Iterator iter = res.entries . iterator () ; testSame
Distance : 2

135
Tree	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Distance : 2

136
Tree	Iterator iter = res.entries . iterator () ; ArrayList
Code	Iterator iter = res.entries . iterator () ; ArrayList
Distance : 2

137
Tree	Iterator iter = res.entries . iterator () ; parent
Code	Iterator iter = res.entries . iterator () ; parent
Distance : 2

138
Tree	Iterator iter = res.entries . iterator () ; LINE_JOINER
Code	Iterator iter = res.entries . iterator () ; LINE_JOINER
Distance : 2

139
Tree	Iterator iter = res.entries . iterator () ; x
Code	Iterator iter = res.entries . iterator () ; x
Distance : 2

140
Tree	Iterator iter = res.entries . iterator () ; fireChangeEvent
Code	Iterator iter = res.entries . iterator () ; fireChangeEvent
Distance : 2

141
Tree	Iterator iter = res.entries . iterator () ; str
Code	Iterator iter = res.entries . iterator () ; str
Distance : 2

142
Tree	Iterator iter = res.entries . iterator () ; m
Code	Iterator iter = res.entries . iterator () ; m
Distance : 2

143
Tree	Iterator iter = res.entries . iterator () ; try
Code	Iterator iter = res.entries . iterator () ; try
Distance : 2

144
Tree	Iterator iter = res.entries . iterator () ; fail
Code	Iterator iter = res.entries . iterator () ; fail
Distance : 2

145
Tree	Iterator iter = res.entries . iterator () ; :
Code	Iterator iter = res.entries . iterator () ; :
Distance : 2

146
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	Iterator iter = res.entries . iterator () ; optimizer
Code	Iterator iter = res.entries . iterator () ; optimizer
Distance : 2

148
Tree	Iterator entries = res.entries . iterator () ;
Code	Iterator entries = res.entries . iterator () ;
Distance : 2

149
Tree	Iterator iter = res.entries . iterator () ; <>
Code	Iterator iter = res.entries . iterator () ; <>
Distance : 2

150
Tree	Iterator iter = res.entries . iterator () ; ?
Code	Iterator iter = res.entries . iterator () ; ?
Distance : 2

151
Tree	Iterator iter = res.entries . iterator () ; boolean
Code	Iterator iter = res.entries . iterator () ; boolean
Distance : 2

152
Tree	Iterator iter = res.entries . iterator () ; paint
Code	Iterator iter = res.entries . iterator () ; paint
Distance : 2

153
Tree	Iterator iter = res.entries . iterator () ; result
Code	Iterator iter = res.entries . iterator () ; result
Distance : 2

154
Tree	Iterator iter = res.entries . iterator () ; *
Code	Iterator iter = res.entries . iterator () ; *
Distance : 2

155
Tree	Iterator iter = res.entries . iterator () ; type
Code	Iterator iter = res.entries . iterator () ; type
Distance : 2

156
Tree	Iterator iter = res.entries . iterator () ; getInstance
Code	Iterator iter = res.entries . iterator () ; getInstance
Distance : 2

157
Tree	Iterator iter = res.entries . iterator () ; serialised
Code	Iterator iter = res.entries . iterator () ; serialised
Distance : 2

158
Tree	Iterator iter = res.entries . iterator () ; Exception
Code	Iterator iter = res.entries . iterator () ; Exception
Distance : 2

159
Tree	Iterator iter = res.entries . iterator () ; Assert
Code	Iterator iter = res.entries . iterator () ; Assert
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; source
Code	Iterator iter = res.entries . iterator () ; source
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; Class
Code	Iterator iter = res.entries . iterator () ; Class
Distance : 2

162
Tree	Iterator iter = res.entries . iterator () ; Math
Code	Iterator iter = res.entries . iterator () ; Math
Distance : 2

163
Tree	Iterator iter = res.entries . iterator () ; root
Code	Iterator iter = res.entries . iterator () ; root
Distance : 2

164
Tree	Iterator iter = res.entries . iterator () ; options
Code	Iterator iter = res.entries . iterator () ; options
Distance : 2

165
Tree	Iterator iter = res.entries . iterator () ; p
Code	Iterator iter = res.entries . iterator () ; p
Distance : 2

166
Tree	Iterator iter = res.entries . iterator () ; data
Code	Iterator iter = res.entries . iterator () ; data
Distance : 2

167
Tree	Iterator iter = res.entries . iterator () ; add
Code	Iterator iter = res.entries . iterator () ; add
Distance : 2

168
Tree	Iterator iter = res.entries . iterator () ; field
Code	Iterator iter = res.entries . iterator () ; field
Distance : 2

169
Tree	Iterator iter = res.entries . iterator () ; checkArgument
Code	Iterator iter = res.entries . iterator () ; checkArgument
Distance : 2

170
Tree	Iterator iter = res.entries . iterator () ; ex
Code	Iterator iter = res.entries . iterator () ; ex
Distance : 2

171
Tree	Iterator iter = res.entries . iterator () ; NodeUtil
Code	Iterator iter = res.entries . iterator () ; NodeUtil
Distance : 2

172
Tree	Iterator iter = res.entries . iterator () ; join
Code	Iterator iter = res.entries . iterator () ; join
Distance : 2

173
Tree	Iterator iter = res.entries . iterator () ; List
Code	Iterator iter = res.entries . iterator () ; List
Distance : 2

174
Tree	Iterator iter = res.entries . iterator () ; NodeTraversal
Code	Iterator iter = res.entries . iterator () ; NodeTraversal
Distance : 2

175
Tree	Iterator iter = res.entries . iterator () ; Args
Code	Iterator iter = res.entries . iterator () ; Args
Distance : 2

176
Tree	Iterator iter = res.entries . iterator () ; v
Code	Iterator iter = res.entries . iterator () ; v
Distance : 2

177
Tree	Iterator iter = res.entries . iterator () ; Integer
Code	Iterator iter = res.entries . iterator () ; Integer
Distance : 2

178
Tree	Iterator iter = res.entries . iterator () ; lines
Code	Iterator iter = res.entries . iterator () ; lines
Distance : 2

179
Tree	Iterator iter = res.entries . iterator () ; c
Code	Iterator iter = res.entries . iterator () ; c
Distance : 2

180
Tree	Iterator iter = res.entries . iterator () ; verify
Code	Iterator iter = res.entries . iterator () ; verify
Distance : 2

181
Tree	Iterator iter = res.entries . iterator () ; Node
Code	Iterator iter = res.entries . iterator () ; Node
Distance : 2

182
Tree	Iterator iter = res.entries . iterator () ; compiler
Code	Iterator iter = res.entries . iterator () ; compiler
Distance : 2

183
Tree	Iterator iter = res.entries . iterator () ; String
Code	Iterator iter = res.entries . iterator () ; String
Distance : 2

184
Tree	Iterator iter = res.entries . iterator () ; null
Code	Iterator iter = res.entries . iterator () ; null
Distance : 2

185
Tree	Iterator iter = res.entries . iterator () ; wanted
Code	Iterator iter = res.entries . iterator () ; wanted
Distance : 2

186
Tree	Iterator iter = res.entries . iterator () ; +
Code	Iterator iter = res.entries . iterator () ; +
Distance : 2

187
Tree	Iterator iter = res.entries . iterator () ; catch
Code	Iterator iter = res.entries . iterator () ; catch
Distance : 2

188
Tree	Iterator iter = res.entries . iterator () ; !=
Code	Iterator iter = res.entries . iterator () ; !=
Distance : 2

189
Tree	Iterator iter = res.entries . iterator () ; value
Code	Iterator iter = res.entries . iterator () ; value
Distance : 2

190
Tree	Iterator iter = res.entries . iterator () ; /
Code	Iterator iter = res.entries . iterator () ; /
Distance : 2

191
Tree	Iterator iter = res.entries . iterator () ; assertTrue
Code	Iterator iter = res.entries . iterator () ; assertTrue
Distance : 2

192
Tree	Iterator iter = res.entries . iterator () ; checkNotNull
Code	Iterator iter = res.entries . iterator () ; checkNotNull
Distance : 2

193
Tree	Iterator iter = res.entries . iterator () ; Fraction
Code	Iterator iter = res.entries . iterator () ; Fraction
Distance : 2

194
Tree	Iterator iter = res.entries . iterator () ; valueOf
Code	Iterator iter = res.entries . iterator () ; valueOf
Distance : 2

195
Tree	Iterator iter = res.entries . iterator () ; instance
Code	Iterator iter = res.entries . iterator () ; instance
Distance : 2

196
Tree	Iterator iter = res.entries . iterator () ; long
Code	Iterator iter = res.entries . iterator () ; long
Distance : 2

197
Tree	Iterator iter = res.entries . iterator () ; throw
Code	Iterator iter = res.entries . iterator () ; throw
Distance : 2

198
Tree	Iterator iter = res.entries . iterator () ; y
Code	Iterator iter = res.entries . iterator () ; y
Distance : 2

199
Tree	Iterator iter = res.entries . iterator () ; PeriodType
Code	Iterator iter = res.entries . iterator () ; PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 65
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator () ; values
Code	Iterator iter = res.entries . iterator () ; values
Distance : 2

1
Tree	Iterator iter = res.entries . iterator () ; Test
Code	Iterator iter = res.entries . iterator () ; Test
Distance : 2

2
Tree	Iterator iter = res.entries . iterator () ; MathRuntimeException
Code	Iterator iter = res.entries . iterator () ; MathRuntimeException
Distance : 2

3
Tree	Iterator iter = res.entries . iterator () ; {}
Code	Iterator iter = res.entries . iterator () ; {}
Distance : 2

4
Tree	Iterator iter = res.entries . iterator () ; f
Code	Iterator iter = res.entries . iterator () ; f
Distance : 2

5
Tree	Iterator iter = res.entries . iterator () ; class
Code	Iterator iter = res.entries . iterator () ; class
Distance : 2

6
Tree	Iterator iter = res.entries . iterator () ; -
Code	Iterator iter = res.entries . iterator () ; -
Distance : 2

7
Tree	Iterator iter = res.entries . iterator () ; Preconditions
Code	Iterator iter = res.entries . iterator () ; Preconditions
Distance : 2

8
Tree	Iterator iter = res.entries . iterator () ; T
Code	Iterator iter = res.entries . iterator () ; T
Distance : 2

9
Tree	Iterator iter = res.entries . iterator () ; &&
Code	Iterator iter = res.entries . iterator () ; &&
Distance : 2

10
Tree	Iterator iter = res.entries . iterator () ; ]
Code	Iterator iter = res.entries . iterator () ; ]
Distance : 2

11
Tree	Iterator iter = res.entries . iterator () ; [
Code	Iterator iter = res.entries . iterator () ; [
Distance : 2

12
Tree	Iterator iter = res.entries . iterator () ; Object
Code	Iterator iter = res.entries . iterator () ; Object
Distance : 2

13
Tree	Iterator iter = res.entries . iterator () ; ParamChecks
Code	Iterator iter = res.entries . iterator () ; ParamChecks
Distance : 2

14
Tree	Iterator iter = res.entries . iterator () ; test
Code	Iterator iter = res.entries . iterator () ; test
Distance : 2

15
Tree	Iterator iter = res.entries . iterator () ; @
Code	Iterator iter = res.entries . iterator () ; @
Distance : 2

16
Tree	Iterator iter = res.entries . iterator () ; !
Code	Iterator iter = res.entries . iterator () ; !
Distance : 2

17
Tree	Iterator iter = res.entries . iterator () ; assertEquals
Code	Iterator iter = res.entries . iterator () ; assertEquals
Distance : 2

18
Tree	Iterator iter = res.entries . iterator () ; ==
Code	Iterator iter = res.entries . iterator () ; ==
Distance : 2

19
Tree	Iterator iter = res.entries . iterator () ; void
Code	Iterator iter = res.entries . iterator () ; void
Distance : 2

20
Tree	Iterator iter = res.entries . iterator () ; []
Code	Iterator iter = res.entries . iterator () ; []
Distance : 2

21
Tree	Iterator iter = res.entries . iterator () ; checkState
Code	Iterator iter = res.entries . iterator () ; checkState
Distance : 2

22
Tree	Iterator iter = res.entries . iterator () ; toString
Code	Iterator iter = res.entries . iterator () ; toString
Distance : 2

23
Tree	Iterator iter = res.entries . iterator () ; protected
Code	Iterator iter = res.entries . iterator () ; protected
Distance : 2

24
Tree	Iterator iter = res.entries . iterator () ; nullNotPermitted
Code	Iterator iter = res.entries . iterator () ; nullNotPermitted
Distance : 2

25
Tree	Iterator iter = res.entries . iterator () ; e
Code	Iterator iter = res.entries . iterator () ; e
Distance : 2

26
Tree	Iterator iter = res.entries . iterator () ; super
Code	Iterator iter = res.entries . iterator () ; super
Distance : 2

27
Tree	Iterator iter = res.entries . iterator () ; i
Code	Iterator iter = res.entries . iterator () ; i
Distance : 2

28
Tree	Iterator iter = res.entries . iterator () ; mock
Code	Iterator iter = res.entries . iterator () ; mock
Distance : 2

29
Tree	Iterator iter = res.entries . iterator () ; Override
Code	Iterator iter = res.entries . iterator () ; Override
Distance : 2

30
Tree	Iterator iter = res.entries . iterator () ; public
Code	Iterator iter = res.entries . iterator () ; public
Distance : 2

31
Tree	Iterator iter = res.entries . iterator () ; >
Code	Iterator iter = res.entries . iterator () ; >
Distance : 2

32
Tree	Iterator iter = res.entries . iterator () ; new
Code	Iterator iter = res.entries . iterator () ; new
Distance : 2

33
Tree	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Code	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Distance : 2

34
Tree	Iterator iter = res.entries . iterator () ; ,
Code	Iterator iter = res.entries . iterator () ; ,
Distance : 2

35
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

36
Tree	Iterator iter = res.entries . iterator () ; }
Code	Iterator iter = res.entries . iterator () ; }
Distance : 2

37
Tree	Iterator iter = res.entries . iterator () ; =
Code	Iterator iter = res.entries . iterator () ; =
Distance : 2

38
Tree	Iterator iter = res.entries . iterator () ; (
Code	Iterator iter = res.entries . iterator () ; (
Distance : 2

39
Tree	Iterator iter = res.entries . iterator () ; <s>
Code	Iterator iter = res.entries . iterator () ; <s>
Distance : 2

40
Tree	Iterator iter = res.entries . iterator () ; <blank>
Code	Iterator iter = res.entries . iterator () ; <blank>
Distance : 2

41
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

42
Tree	Iterator iter = res.entries . iterator () ; )
Code	Iterator iter = res.entries . iterator () ; )
Distance : 2

43
Tree	Iterator iter = res.entries . iterator () ; ;
Code	Iterator iter = res.entries . iterator () ; ;
Distance : 2

44
Tree	Iterator iter = res.entries . iterator () ; ()
Code	Iterator iter = res.entries . iterator () ; ()
Distance : 2

45
Tree	Iterator iter = res.entries . iterator () ; {
Code	Iterator iter = res.entries . iterator () ; {
Distance : 2

46
Tree	Iterator iter = res.entries . iterator () ; false
Code	Iterator iter = res.entries . iterator () ; false
Distance : 2

47
Tree	Iterator iter = res.entries . iterator () ; int
Code	Iterator iter = res.entries . iterator () ; int
Distance : 2

48
Tree	Iterator iter = res.entries . iterator () ; double
Code	Iterator iter = res.entries . iterator () ; double
Distance : 2

49
Tree	Iterator iter = res.entries . iterator () ; n
Code	Iterator iter = res.entries . iterator () ; n
Distance : 2

50
Tree	Iterator iter = res.entries . iterator () ; matcher
Code	Iterator iter = res.entries . iterator () ; matcher
Distance : 2

51
Tree	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Code	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Distance : 2

52
Tree	Iterator iter = res.entries . iterator () ; this
Code	Iterator iter = res.entries . iterator () ; this
Distance : 2

53
Tree	Iterator iter = res.entries . iterator () ; final
Code	Iterator iter = res.entries . iterator () ; final
Distance : 2

54
Tree	Iterator iter = res.entries . iterator () ; name
Code	Iterator iter = res.entries . iterator () ; name
Distance : 2

55
Tree	Iterator iter = res.entries . iterator () ; t
Code	Iterator iter = res.entries . iterator () ; t
Distance : 2

56
Tree	Iterator iter = res.entries . iterator () ; solver
Code	Iterator iter = res.entries . iterator () ; solver
Distance : 2

57
Tree	Iterator iter = res.entries . iterator () ; getField
Code	Iterator iter = res.entries . iterator () ; getField
Distance : 2

58
Tree	Iterator iter = res.entries . iterator () ; pattern
Code	Iterator iter = res.entries . iterator () ; pattern
Distance : 2

59
Tree	Iterator iter = res.entries . iterator () ; out
Code	Iterator iter = res.entries . iterator () ; out
Distance : 2

60
Tree	Iterator iter = res.entries . iterator () ; Collection
Code	Iterator iter = res.entries . iterator () ; Collection
Distance : 2

61
Tree	Iterator iter = res.entries . iterator () ; mode
Code	Iterator iter = res.entries . iterator () ; mode
Distance : 2

62
Tree	Iterator iter = res.entries . iterator () ; mockingProgress
Code	Iterator iter = res.entries . iterator () ; mockingProgress
Distance : 2

63
Tree	Iterator iter = res.entries . iterator () ; return;
Code	Iterator iter = res.entries . iterator () ; return;
Distance : 2

64
Tree	Iterator iter = res.entries . iterator () ; char
Code	Iterator iter = res.entries . iterator () ; char
Distance : 2

65
Tree	Iterator iter = res.entries . iterator () ; get
Code	Iterator iter = res.entries . iterator () ; get
Distance : 2

66
Tree	Iterator iter = res.entries . iterator () ; static
Code	Iterator iter = res.entries . iterator () ; static
Distance : 2

67
Tree	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Code	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Distance : 2

68
Tree	Iterator iter = res.entries . iterator () ; JSType
Code	Iterator iter = res.entries . iterator () ; JSType
Distance : 2

69
Tree	Iterator iter = res.entries . iterator () ; isEmpty
Code	Iterator iter = res.entries . iterator () ; isEmpty
Distance : 2

70
Tree	Iterator iter = res.entries . iterator () ; else
Code	Iterator iter = res.entries . iterator () ; else
Distance : 2

71
Tree	Iterator iter = res.entries . iterator () ; true
Code	Iterator iter = res.entries . iterator () ; true
Distance : 2

72
Tree	Iterator iter = res.entries . iterator () ; return
Code	Iterator iter = res.entries . iterator () ; return
Distance : 2

73
Tree	Iterator iter = res.entries . iterator () ; if
Code	Iterator iter = res.entries . iterator () ; if
Distance : 2

74
Tree	Iterator iter = res.entries . iterator () ; getMessage
Code	Iterator iter = res.entries . iterator () ; getMessage
Distance : 2

75
Tree	Iterator iter = res.entries . iterator () ; <
Code	Iterator iter = res.entries . iterator () ; <
Distance : 2

76
Tree	Iterator iter = res.entries . iterator () ; dataset
Code	Iterator iter = res.entries . iterator () ; dataset
Distance : 2

77
Tree	Iterator iter = res.entries . iterator () ; getChronology
Code	Iterator iter = res.entries . iterator () ; getChronology
Distance : 2

78
Tree	Iterator iter = res.entries . iterator () ; js
Code	Iterator iter = res.entries . iterator () ; js
Distance : 2

79
Tree	Iterator iter = res.entries . iterator () ; TestUtilities
Code	Iterator iter = res.entries . iterator () ; TestUtilities
Distance : 2

80
Tree	Iterator iter = res.entries . iterator () ; equals
Code	Iterator iter = res.entries . iterator () ; equals
Distance : 2

81
Tree	Iterator iter = res.entries . iterator () ; d
Code	Iterator iter = res.entries . iterator () ; d
Distance : 2

82
Tree	Iterator iter = res.entries . iterator () ; notifyListeners
Code	Iterator iter = res.entries . iterator () ; notifyListeners
Distance : 2

83
Tree	Iterator iter = res.entries . iterator () ; externs
Code	Iterator iter = res.entries . iterator () ; externs
Distance : 2

84
Tree	Iterator iter = res.entries . iterator () ; for
Code	Iterator iter = res.entries . iterator () ; for
Distance : 2

85
Tree	Iterator iter = res.entries . iterator () ; Invocation
Code	Iterator iter = res.entries . iterator () ; Invocation
Distance : 2

86
Tree	Iterator iter = res.entries . iterator () ; node
Code	Iterator iter = res.entries . iterator () ; node
Distance : 2

87
Tree	Iterator iter = res.entries . iterator () ; getParent
Code	Iterator iter = res.entries . iterator () ; getParent
Distance : 2

88
Tree	Iterator iter = res.entries . iterator () ; StrBuilder
Code	Iterator iter = res.entries . iterator () ; StrBuilder
Distance : 2

89
Tree	Iterator iter = res.entries . iterator () ; setUp
Code	Iterator iter = res.entries . iterator () ; setUp
Distance : 2

90
Tree	Iterator iter = res.entries . iterator () ; invocations
Code	Iterator iter = res.entries . iterator () ; invocations
Distance : 2

91
Tree	Iterator iter = res.entries . iterator () ; index
Code	Iterator iter = res.entries . iterator () ; index
Distance : 2

92
Tree	Iterator iter = res.entries . iterator () ; instant
Code	Iterator iter = res.entries . iterator () ; instant
Distance : 2

93
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

94
Tree	Iterator iter = res.entries . iterator () ; Double
Code	Iterator iter = res.entries . iterator () ; Double
Distance : 2

95
Tree	Iterator iter = res.entries . iterator () ; <=
Code	Iterator iter = res.entries . iterator () ; <=
Distance : 2

96
Tree	Iterator iter = res.entries . iterator () ; reportMatcher
Code	Iterator iter = res.entries . iterator () ; reportMatcher
Distance : 2

97
Tree	Iterator iter = res.entries . iterator () ; stream
Code	Iterator iter = res.entries . iterator () ; stream
Distance : 2

98
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

99
Tree	Iterator iter = res.entries . iterator () ;
Code	Iterator iter = res.entries . iterator () ;
Distance : 1

100
Tree	Iterator iter = res.entries . iterator () ; contains
Code	Iterator iter = res.entries . iterator () ; contains
Distance : 2

101
Tree	Iterator iter = res.entries . iterator () ; b
Code	Iterator iter = res.entries . iterator () ; b
Distance : 2

102
Tree	Iterator iter = res.entries . iterator () ; stroke
Code	Iterator iter = res.entries . iterator () ; stroke
Distance : 2

103
Tree	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Code	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Distance : 2

104
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	Iterator iter = res.entries . iterator () ; size
Code	Iterator iter = res.entries . iterator () ; size
Distance : 2

106
Tree	Iterator iter = res.entries . iterator () ; traverseEs6
Code	Iterator iter = res.entries . iterator () ; traverseEs6
Distance : 2

107
Tree	Iterator iter = res.entries . iterator () ; StringBuilder
Code	Iterator iter = res.entries . iterator () ; StringBuilder
Distance : 2

108
Tree	Iterator iter = res.entries . iterator () ; chrono
Code	Iterator iter = res.entries . iterator () ; chrono
Distance : 2

109
Tree	Iterator iter = res.entries . iterator () ; a
Code	Iterator iter = res.entries . iterator () ; a
Distance : 2

110
Tree	Iterator iter = res.entries . iterator () ; returnZero
Code	Iterator iter = res.entries . iterator () ; returnZero
Distance : 2

111
Tree	Iterator iter = res.entries . iterator () ; sb
Code	Iterator iter = res.entries . iterator () ; sb
Distance : 2

112
Tree	Iterator iter = res.entries . iterator () ; scope
Code	Iterator iter = res.entries . iterator () ; scope
Distance : 2

113
Tree	Iterator iter = res.entries . iterator () ; UnivariateFunction
Code	Iterator iter = res.entries . iterator () ; UnivariateFunction
Distance : 2

114
Tree	Iterator iter = res.entries . iterator () ; sqrt
Code	Iterator iter = res.entries . iterator () ; sqrt
Distance : 2

115
Tree	Iterator iter = res.entries . iterator () ; clone
Code	Iterator iter = res.entries . iterator () ; clone
Distance : 2

116
Tree	Iterator iter = res.entries . iterator () ; getFirstChild
Code	Iterator iter = res.entries . iterator () ; getFirstChild
Distance : 2

117
Tree	Iterator iter = res.entries . iterator () ; throws
Code	Iterator iter = res.entries . iterator () ; throws
Distance : 2

118
Tree	Iterator iter = res.entries . iterator () ; simpleMethod
Code	Iterator iter = res.entries . iterator () ; simpleMethod
Distance : 2

119
Tree	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Code	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Distance : 2

120
Tree	Iterator iter = res.entries . iterator () ; append
Code	Iterator iter = res.entries . iterator () ; append
Distance : 2

121
Tree	Iterator iter = res.entries . iterator () ; alpha
Code	Iterator iter = res.entries . iterator () ; alpha
Distance : 2

122
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

123
Tree	Iterator iter = res.entries . iterator () ; obj
Code	Iterator iter = res.entries . iterator () ; obj
Distance : 2

124
Tree	Iterator iter = res.entries . iterator () ; isBlock
Code	Iterator iter = res.entries . iterator () ; isBlock
Distance : 2

125
Tree	Iterator iter = res.entries . iterator () ; array
Code	Iterator iter = res.entries . iterator () ; array
Distance : 2

126
Tree	Iterator iter = res.entries . iterator () ; TestUtils
Code	Iterator iter = res.entries . iterator () ; TestUtils
Distance : 2

127
Tree	Iterator iter = res.entries . iterator () ; length
Code	Iterator iter = res.entries . iterator () ; length
Distance : 2

128
Tree	Iterator iter = res.entries . iterator () ; expected
Code	Iterator iter = res.entries . iterator () ; expected
Distance : 2

129
Tree	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Distance : 2

130
Tree	Iterator iter = res.entries . iterator () ; invocation
Code	Iterator iter = res.entries . iterator () ; invocation
Distance : 2

131
Tree	Iterator iter = res.entries . iterator () ; assertThat
Code	Iterator iter = res.entries . iterator () ; assertThat
Distance : 2

132
Tree	Iterator iter = res.entries . iterator () ; FastMath
Code	Iterator iter = res.entries . iterator () ; FastMath
Distance : 2

133
Tree	Iterator iter = res.entries . iterator () ; reportCodeChange
Code	Iterator iter = res.entries . iterator () ; reportCodeChange
Distance : 2

134
Tree	Iterator iter = res.entries . iterator () ; testSame
Code	Iterator iter = res.entries . iterator () ; testSame
Distance : 2

135
Tree	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Distance : 2

136
Tree	Iterator iter = res.entries . iterator () ; ArrayList
Code	Iterator iter = res.entries . iterator () ; ArrayList
Distance : 2

137
Tree	Iterator iter = res.entries . iterator () ; parent
Code	Iterator iter = res.entries . iterator () ; parent
Distance : 2

138
Tree	Iterator iter = res.entries . iterator () ; LINE_JOINER
Code	Iterator iter = res.entries . iterator () ; LINE_JOINER
Distance : 2

139
Tree	Iterator iter = res.entries . iterator () ; x
Code	Iterator iter = res.entries . iterator () ; x
Distance : 2

140
Tree	Iterator iter = res.entries . iterator () ; fireChangeEvent
Code	Iterator iter = res.entries . iterator () ; fireChangeEvent
Distance : 2

141
Tree	Iterator iter = res.entries . iterator () ; str
Code	Iterator iter = res.entries . iterator () ; str
Distance : 2

142
Tree	Iterator iter = res.entries . iterator () ; m
Code	Iterator iter = res.entries . iterator () ; m
Distance : 2

143
Tree	Iterator iter = res.entries . iterator () ; try
Code	Iterator iter = res.entries . iterator () ; try
Distance : 2

144
Tree	Iterator iter = res.entries . iterator () ; fail
Code	Iterator iter = res.entries . iterator () ; fail
Distance : 2

145
Tree	Iterator iter = res.entries . iterator () ; :
Code	Iterator iter = res.entries . iterator () ; :
Distance : 2

146
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	Iterator iter = res.entries . iterator () ; optimizer
Code	Iterator iter = res.entries . iterator () ; optimizer
Distance : 2

148
Tree	Iterator entries = res.entries . iterator () ;
Code	Iterator entries = res.entries . iterator () ;
Distance : 2

149
Tree	Iterator iter = res.entries . iterator () ; <>
Code	Iterator iter = res.entries . iterator () ; <>
Distance : 2

150
Tree	Iterator iter = res.entries . iterator () ; ?
Code	Iterator iter = res.entries . iterator () ; ?
Distance : 2

151
Tree	Iterator iter = res.entries . iterator () ; boolean
Code	Iterator iter = res.entries . iterator () ; boolean
Distance : 2

152
Tree	Iterator iter = res.entries . iterator () ; paint
Code	Iterator iter = res.entries . iterator () ; paint
Distance : 2

153
Tree	Iterator iter = res.entries . iterator () ; result
Code	Iterator iter = res.entries . iterator () ; result
Distance : 2

154
Tree	Iterator iter = res.entries . iterator () ; *
Code	Iterator iter = res.entries . iterator () ; *
Distance : 2

155
Tree	Iterator iter = res.entries . iterator () ; type
Code	Iterator iter = res.entries . iterator () ; type
Distance : 2

156
Tree	Iterator iter = res.entries . iterator () ; getInstance
Code	Iterator iter = res.entries . iterator () ; getInstance
Distance : 2

157
Tree	Iterator iter = res.entries . iterator () ; serialised
Code	Iterator iter = res.entries . iterator () ; serialised
Distance : 2

158
Tree	Iterator iter = res.entries . iterator () ; Exception
Code	Iterator iter = res.entries . iterator () ; Exception
Distance : 2

159
Tree	Iterator iter = res.entries . iterator () ; Assert
Code	Iterator iter = res.entries . iterator () ; Assert
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; source
Code	Iterator iter = res.entries . iterator () ; source
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; Class
Code	Iterator iter = res.entries . iterator () ; Class
Distance : 2

162
Tree	Iterator iter = res.entries . iterator () ; Math
Code	Iterator iter = res.entries . iterator () ; Math
Distance : 2

163
Tree	Iterator iter = res.entries . iterator () ; root
Code	Iterator iter = res.entries . iterator () ; root
Distance : 2

164
Tree	Iterator iter = res.entries . iterator () ; options
Code	Iterator iter = res.entries . iterator () ; options
Distance : 2

165
Tree	Iterator iter = res.entries . iterator () ; p
Code	Iterator iter = res.entries . iterator () ; p
Distance : 2

166
Tree	Iterator iter = res.entries . iterator () ; data
Code	Iterator iter = res.entries . iterator () ; data
Distance : 2

167
Tree	Iterator iter = res.entries . iterator () ; add
Code	Iterator iter = res.entries . iterator () ; add
Distance : 2

168
Tree	Iterator iter = res.entries . iterator () ; field
Code	Iterator iter = res.entries . iterator () ; field
Distance : 2

169
Tree	Iterator iter = res.entries . iterator () ; checkArgument
Code	Iterator iter = res.entries . iterator () ; checkArgument
Distance : 2

170
Tree	Iterator iter = res.entries . iterator () ; ex
Code	Iterator iter = res.entries . iterator () ; ex
Distance : 2

171
Tree	Iterator iter = res.entries . iterator () ; NodeUtil
Code	Iterator iter = res.entries . iterator () ; NodeUtil
Distance : 2

172
Tree	Iterator iter = res.entries . iterator () ; join
Code	Iterator iter = res.entries . iterator () ; join
Distance : 2

173
Tree	Iterator iter = res.entries . iterator () ; List
Code	Iterator iter = res.entries . iterator () ; List
Distance : 2

174
Tree	Iterator iter = res.entries . iterator () ; NodeTraversal
Code	Iterator iter = res.entries . iterator () ; NodeTraversal
Distance : 2

175
Tree	Iterator iter = res.entries . iterator () ; Args
Code	Iterator iter = res.entries . iterator () ; Args
Distance : 2

176
Tree	Iterator iter = res.entries . iterator () ; v
Code	Iterator iter = res.entries . iterator () ; v
Distance : 2

177
Tree	Iterator iter = res.entries . iterator () ; Integer
Code	Iterator iter = res.entries . iterator () ; Integer
Distance : 2

178
Tree	Iterator iter = res.entries . iterator () ; lines
Code	Iterator iter = res.entries . iterator () ; lines
Distance : 2

179
Tree	Iterator iter = res.entries . iterator () ; c
Code	Iterator iter = res.entries . iterator () ; c
Distance : 2

180
Tree	Iterator iter = res.entries . iterator () ; verify
Code	Iterator iter = res.entries . iterator () ; verify
Distance : 2

181
Tree	Iterator iter = res.entries . iterator () ; Node
Code	Iterator iter = res.entries . iterator () ; Node
Distance : 2

182
Tree	Iterator iter = res.entries . iterator () ; compiler
Code	Iterator iter = res.entries . iterator () ; compiler
Distance : 2

183
Tree	Iterator iter = res.entries . iterator () ; String
Code	Iterator iter = res.entries . iterator () ; String
Distance : 2

184
Tree	Iterator iter = res.entries . iterator () ; null
Code	Iterator iter = res.entries . iterator () ; null
Distance : 2

185
Tree	Iterator iter = res.entries . iterator () ; wanted
Code	Iterator iter = res.entries . iterator () ; wanted
Distance : 2

186
Tree	Iterator iter = res.entries . iterator () ; +
Code	Iterator iter = res.entries . iterator () ; +
Distance : 2

187
Tree	Iterator iter = res.entries . iterator () ; catch
Code	Iterator iter = res.entries . iterator () ; catch
Distance : 2

188
Tree	Iterator iter = res.entries . iterator () ; !=
Code	Iterator iter = res.entries . iterator () ; !=
Distance : 2

189
Tree	Iterator iter = res.entries . iterator () ; value
Code	Iterator iter = res.entries . iterator () ; value
Distance : 2

190
Tree	Iterator iter = res.entries . iterator () ; /
Code	Iterator iter = res.entries . iterator () ; /
Distance : 2

191
Tree	Iterator iter = res.entries . iterator () ; assertTrue
Code	Iterator iter = res.entries . iterator () ; assertTrue
Distance : 2

192
Tree	Iterator iter = res.entries . iterator () ; checkNotNull
Code	Iterator iter = res.entries . iterator () ; checkNotNull
Distance : 2

193
Tree	Iterator iter = res.entries . iterator () ; Fraction
Code	Iterator iter = res.entries . iterator () ; Fraction
Distance : 2

194
Tree	Iterator iter = res.entries . iterator () ; valueOf
Code	Iterator iter = res.entries . iterator () ; valueOf
Distance : 2

195
Tree	Iterator iter = res.entries . iterator () ; instance
Code	Iterator iter = res.entries . iterator () ; instance
Distance : 2

196
Tree	Iterator iter = res.entries . iterator () ; long
Code	Iterator iter = res.entries . iterator () ; long
Distance : 2

197
Tree	Iterator iter = res.entries . iterator () ; throw
Code	Iterator iter = res.entries . iterator () ; throw
Distance : 2

198
Tree	Iterator iter = res.entries . iterator () ; y
Code	Iterator iter = res.entries . iterator () ; y
Distance : 2

199
Tree	Iterator iter = res.entries . iterator () ; PeriodType
Code	Iterator iter = res.entries . iterator () ; PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 66
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator () ; values
Code	Iterator iter = res.entries . iterator () ; values
Distance : 2

1
Tree	Iterator iter = res.entries . iterator () ; Test
Code	Iterator iter = res.entries . iterator () ; Test
Distance : 2

2
Tree	Iterator iter = res.entries . iterator () ; MathRuntimeException
Code	Iterator iter = res.entries . iterator () ; MathRuntimeException
Distance : 2

3
Tree	Iterator iter = res.entries . iterator () ; {}
Code	Iterator iter = res.entries . iterator () ; {}
Distance : 2

4
Tree	Iterator iter = res.entries . iterator () ; f
Code	Iterator iter = res.entries . iterator () ; f
Distance : 2

5
Tree	Iterator iter = res.entries . iterator () ; class
Code	Iterator iter = res.entries . iterator () ; class
Distance : 2

6
Tree	Iterator iter = res.entries . iterator () ; -
Code	Iterator iter = res.entries . iterator () ; -
Distance : 2

7
Tree	Iterator iter = res.entries . iterator () ; Preconditions
Code	Iterator iter = res.entries . iterator () ; Preconditions
Distance : 2

8
Tree	Iterator iter = res.entries . iterator () ; T
Code	Iterator iter = res.entries . iterator () ; T
Distance : 2

9
Tree	Iterator iter = res.entries . iterator () ; &&
Code	Iterator iter = res.entries . iterator () ; &&
Distance : 2

10
Tree	Iterator iter = res.entries . iterator () ; ]
Code	Iterator iter = res.entries . iterator () ; ]
Distance : 2

11
Tree	Iterator iter = res.entries . iterator () ; [
Code	Iterator iter = res.entries . iterator () ; [
Distance : 2

12
Tree	Iterator iter = res.entries . iterator () ; Object
Code	Iterator iter = res.entries . iterator () ; Object
Distance : 2

13
Tree	Iterator iter = res.entries . iterator () ; ParamChecks
Code	Iterator iter = res.entries . iterator () ; ParamChecks
Distance : 2

14
Tree	Iterator iter = res.entries . iterator () ; test
Code	Iterator iter = res.entries . iterator () ; test
Distance : 2

15
Tree	Iterator iter = res.entries . iterator () ; @
Code	Iterator iter = res.entries . iterator () ; @
Distance : 2

16
Tree	Iterator iter = res.entries . iterator () ; !
Code	Iterator iter = res.entries . iterator () ; !
Distance : 2

17
Tree	Iterator iter = res.entries . iterator () ; assertEquals
Code	Iterator iter = res.entries . iterator () ; assertEquals
Distance : 2

18
Tree	Iterator iter = res.entries . iterator () ; ==
Code	Iterator iter = res.entries . iterator () ; ==
Distance : 2

19
Tree	Iterator iter = res.entries . iterator () ; void
Code	Iterator iter = res.entries . iterator () ; void
Distance : 2

20
Tree	Iterator iter = res.entries . iterator () ; []
Code	Iterator iter = res.entries . iterator () ; []
Distance : 2

21
Tree	Iterator iter = res.entries . iterator () ; checkState
Code	Iterator iter = res.entries . iterator () ; checkState
Distance : 2

22
Tree	Iterator iter = res.entries . iterator () ; toString
Code	Iterator iter = res.entries . iterator () ; toString
Distance : 2

23
Tree	Iterator iter = res.entries . iterator () ; protected
Code	Iterator iter = res.entries . iterator () ; protected
Distance : 2

24
Tree	Iterator iter = res.entries . iterator () ; nullNotPermitted
Code	Iterator iter = res.entries . iterator () ; nullNotPermitted
Distance : 2

25
Tree	Iterator iter = res.entries . iterator () ; e
Code	Iterator iter = res.entries . iterator () ; e
Distance : 2

26
Tree	Iterator iter = res.entries . iterator () ; super
Code	Iterator iter = res.entries . iterator () ; super
Distance : 2

27
Tree	Iterator iter = res.entries . iterator () ; i
Code	Iterator iter = res.entries . iterator () ; i
Distance : 2

28
Tree	Iterator iter = res.entries . iterator () ; mock
Code	Iterator iter = res.entries . iterator () ; mock
Distance : 2

29
Tree	Iterator iter = res.entries . iterator () ; Override
Code	Iterator iter = res.entries . iterator () ; Override
Distance : 2

30
Tree	Iterator iter = res.entries . iterator () ; public
Code	Iterator iter = res.entries . iterator () ; public
Distance : 2

31
Tree	Iterator iter = res.entries . iterator () ; >
Code	Iterator iter = res.entries . iterator () ; >
Distance : 2

32
Tree	Iterator iter = res.entries . iterator () ; new
Code	Iterator iter = res.entries . iterator () ; new
Distance : 2

33
Tree	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Code	Iterator iter = res.entries . iterator () ; STRING_CONSTANT
Distance : 2

34
Tree	Iterator iter = res.entries . iterator () ; ,
Code	Iterator iter = res.entries . iterator () ; ,
Distance : 2

35
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

36
Tree	Iterator iter = res.entries . iterator () ; }
Code	Iterator iter = res.entries . iterator () ; }
Distance : 2

37
Tree	Iterator iter = res.entries . iterator () ; =
Code	Iterator iter = res.entries . iterator () ; =
Distance : 2

38
Tree	Iterator iter = res.entries . iterator () ; (
Code	Iterator iter = res.entries . iterator () ; (
Distance : 2

39
Tree	Iterator iter = res.entries . iterator () ; <s>
Code	Iterator iter = res.entries . iterator () ; <s>
Distance : 2

40
Tree	Iterator iter = res.entries . iterator () ; <blank>
Code	Iterator iter = res.entries . iterator () ; <blank>
Distance : 2

41
Tree	Iterator iter = res.entries . iterator () ; .
Code	Iterator iter = res.entries . iterator () ; .
Distance : 2

42
Tree	Iterator iter = res.entries . iterator () ; )
Code	Iterator iter = res.entries . iterator () ; )
Distance : 2

43
Tree	Iterator iter = res.entries . iterator () ; ;
Code	Iterator iter = res.entries . iterator () ; ;
Distance : 2

44
Tree	Iterator iter = res.entries . iterator () ; ()
Code	Iterator iter = res.entries . iterator () ; ()
Distance : 2

45
Tree	Iterator iter = res.entries . iterator () ; {
Code	Iterator iter = res.entries . iterator () ; {
Distance : 2

46
Tree	Iterator iter = res.entries . iterator () ; false
Code	Iterator iter = res.entries . iterator () ; false
Distance : 2

47
Tree	Iterator iter = res.entries . iterator () ; int
Code	Iterator iter = res.entries . iterator () ; int
Distance : 2

48
Tree	Iterator iter = res.entries . iterator () ; double
Code	Iterator iter = res.entries . iterator () ; double
Distance : 2

49
Tree	Iterator iter = res.entries . iterator () ; n
Code	Iterator iter = res.entries . iterator () ; n
Distance : 2

50
Tree	Iterator iter = res.entries . iterator () ; matcher
Code	Iterator iter = res.entries . iterator () ; matcher
Distance : 2

51
Tree	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Code	Iterator iter = res.entries . iterator () ; NUMBER_CONSTANT
Distance : 2

52
Tree	Iterator iter = res.entries . iterator () ; this
Code	Iterator iter = res.entries . iterator () ; this
Distance : 2

53
Tree	Iterator iter = res.entries . iterator () ; final
Code	Iterator iter = res.entries . iterator () ; final
Distance : 2

54
Tree	Iterator iter = res.entries . iterator () ; name
Code	Iterator iter = res.entries . iterator () ; name
Distance : 2

55
Tree	Iterator iter = res.entries . iterator () ; t
Code	Iterator iter = res.entries . iterator () ; t
Distance : 2

56
Tree	Iterator iter = res.entries . iterator () ; solver
Code	Iterator iter = res.entries . iterator () ; solver
Distance : 2

57
Tree	Iterator iter = res.entries . iterator () ; getField
Code	Iterator iter = res.entries . iterator () ; getField
Distance : 2

58
Tree	Iterator iter = res.entries . iterator () ; pattern
Code	Iterator iter = res.entries . iterator () ; pattern
Distance : 2

59
Tree	Iterator iter = res.entries . iterator () ; out
Code	Iterator iter = res.entries . iterator () ; out
Distance : 2

60
Tree	Iterator iter = res.entries . iterator () ; Collection
Code	Iterator iter = res.entries . iterator () ; Collection
Distance : 2

61
Tree	Iterator iter = res.entries . iterator () ; mode
Code	Iterator iter = res.entries . iterator () ; mode
Distance : 2

62
Tree	Iterator iter = res.entries . iterator () ; mockingProgress
Code	Iterator iter = res.entries . iterator () ; mockingProgress
Distance : 2

63
Tree	Iterator iter = res.entries . iterator () ; return;
Code	Iterator iter = res.entries . iterator () ; return;
Distance : 2

64
Tree	Iterator iter = res.entries . iterator () ; char
Code	Iterator iter = res.entries . iterator () ; char
Distance : 2

65
Tree	Iterator iter = res.entries . iterator () ; get
Code	Iterator iter = res.entries . iterator () ; get
Distance : 2

66
Tree	Iterator iter = res.entries . iterator () ; static
Code	Iterator iter = res.entries . iterator () ; static
Distance : 2

67
Tree	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Code	Iterator iter = res.entries . iterator () ; setAcceptedLanguage
Distance : 2

68
Tree	Iterator iter = res.entries . iterator () ; JSType
Code	Iterator iter = res.entries . iterator () ; JSType
Distance : 2

69
Tree	Iterator iter = res.entries . iterator () ; isEmpty
Code	Iterator iter = res.entries . iterator () ; isEmpty
Distance : 2

70
Tree	Iterator iter = res.entries . iterator () ; else
Code	Iterator iter = res.entries . iterator () ; else
Distance : 2

71
Tree	Iterator iter = res.entries . iterator () ; true
Code	Iterator iter = res.entries . iterator () ; true
Distance : 2

72
Tree	Iterator iter = res.entries . iterator () ; return
Code	Iterator iter = res.entries . iterator () ; return
Distance : 2

73
Tree	Iterator iter = res.entries . iterator () ; if
Code	Iterator iter = res.entries . iterator () ; if
Distance : 2

74
Tree	Iterator iter = res.entries . iterator () ; getMessage
Code	Iterator iter = res.entries . iterator () ; getMessage
Distance : 2

75
Tree	Iterator iter = res.entries . iterator () ; <
Code	Iterator iter = res.entries . iterator () ; <
Distance : 2

76
Tree	Iterator iter = res.entries . iterator () ; dataset
Code	Iterator iter = res.entries . iterator () ; dataset
Distance : 2

77
Tree	Iterator iter = res.entries . iterator () ; getChronology
Code	Iterator iter = res.entries . iterator () ; getChronology
Distance : 2

78
Tree	Iterator iter = res.entries . iterator () ; js
Code	Iterator iter = res.entries . iterator () ; js
Distance : 2

79
Tree	Iterator iter = res.entries . iterator () ; TestUtilities
Code	Iterator iter = res.entries . iterator () ; TestUtilities
Distance : 2

80
Tree	Iterator iter = res.entries . iterator () ; equals
Code	Iterator iter = res.entries . iterator () ; equals
Distance : 2

81
Tree	Iterator iter = res.entries . iterator () ; d
Code	Iterator iter = res.entries . iterator () ; d
Distance : 2

82
Tree	Iterator iter = res.entries . iterator () ; notifyListeners
Code	Iterator iter = res.entries . iterator () ; notifyListeners
Distance : 2

83
Tree	Iterator iter = res.entries . iterator () ; externs
Code	Iterator iter = res.entries . iterator () ; externs
Distance : 2

84
Tree	Iterator iter = res.entries . iterator () ; for
Code	Iterator iter = res.entries . iterator () ; for
Distance : 2

85
Tree	Iterator iter = res.entries . iterator () ; Invocation
Code	Iterator iter = res.entries . iterator () ; Invocation
Distance : 2

86
Tree	Iterator iter = res.entries . iterator () ; node
Code	Iterator iter = res.entries . iterator () ; node
Distance : 2

87
Tree	Iterator iter = res.entries . iterator () ; getParent
Code	Iterator iter = res.entries . iterator () ; getParent
Distance : 2

88
Tree	Iterator iter = res.entries . iterator () ; StrBuilder
Code	Iterator iter = res.entries . iterator () ; StrBuilder
Distance : 2

89
Tree	Iterator iter = res.entries . iterator () ; setUp
Code	Iterator iter = res.entries . iterator () ; setUp
Distance : 2

90
Tree	Iterator iter = res.entries . iterator () ; invocations
Code	Iterator iter = res.entries . iterator () ; invocations
Distance : 2

91
Tree	Iterator iter = res.entries . iterator () ; index
Code	Iterator iter = res.entries . iterator () ; index
Distance : 2

92
Tree	Iterator iter = res.entries . iterator () ; instant
Code	Iterator iter = res.entries . iterator () ; instant
Distance : 2

93
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

94
Tree	Iterator iter = res.entries . iterator () ; Double
Code	Iterator iter = res.entries . iterator () ; Double
Distance : 2

95
Tree	Iterator iter = res.entries . iterator () ; <=
Code	Iterator iter = res.entries . iterator () ; <=
Distance : 2

96
Tree	Iterator iter = res.entries . iterator () ; reportMatcher
Code	Iterator iter = res.entries . iterator () ; reportMatcher
Distance : 2

97
Tree	Iterator iter = res.entries . iterator () ; stream
Code	Iterator iter = res.entries . iterator () ; stream
Distance : 2

98
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

99
Tree	Iterator iter = res.entries . iterator () ;
Code	Iterator iter = res.entries . iterator () ;
Distance : 1

100
Tree	Iterator iter = res.entries . iterator () ; contains
Code	Iterator iter = res.entries . iterator () ; contains
Distance : 2

101
Tree	Iterator iter = res.entries . iterator () ; b
Code	Iterator iter = res.entries . iterator () ; b
Distance : 2

102
Tree	Iterator iter = res.entries . iterator () ; stroke
Code	Iterator iter = res.entries . iterator () ; stroke
Distance : 2

103
Tree	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Code	Iterator iter = res.entries . iterator () ; MutableTimePeriod
Distance : 2

104
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT_2015
Distance : 2

105
Tree	Iterator iter = res.entries . iterator () ; size
Code	Iterator iter = res.entries . iterator () ; size
Distance : 2

106
Tree	Iterator iter = res.entries . iterator () ; traverseEs6
Code	Iterator iter = res.entries . iterator () ; traverseEs6
Distance : 2

107
Tree	Iterator iter = res.entries . iterator () ; StringBuilder
Code	Iterator iter = res.entries . iterator () ; StringBuilder
Distance : 2

108
Tree	Iterator iter = res.entries . iterator () ; chrono
Code	Iterator iter = res.entries . iterator () ; chrono
Distance : 2

109
Tree	Iterator iter = res.entries . iterator () ; a
Code	Iterator iter = res.entries . iterator () ; a
Distance : 2

110
Tree	Iterator iter = res.entries . iterator () ; returnZero
Code	Iterator iter = res.entries . iterator () ; returnZero
Distance : 2

111
Tree	Iterator iter = res.entries . iterator () ; sb
Code	Iterator iter = res.entries . iterator () ; sb
Distance : 2

112
Tree	Iterator iter = res.entries . iterator () ; scope
Code	Iterator iter = res.entries . iterator () ; scope
Distance : 2

113
Tree	Iterator iter = res.entries . iterator () ; UnivariateFunction
Code	Iterator iter = res.entries . iterator () ; UnivariateFunction
Distance : 2

114
Tree	Iterator iter = res.entries . iterator () ; sqrt
Code	Iterator iter = res.entries . iterator () ; sqrt
Distance : 2

115
Tree	Iterator iter = res.entries . iterator () ; clone
Code	Iterator iter = res.entries . iterator () ; clone
Distance : 2

116
Tree	Iterator iter = res.entries . iterator () ; getFirstChild
Code	Iterator iter = res.entries . iterator () ; getFirstChild
Distance : 2

117
Tree	Iterator iter = res.entries . iterator () ; throws
Code	Iterator iter = res.entries . iterator () ; throws
Distance : 2

118
Tree	Iterator iter = res.entries . iterator () ; simpleMethod
Code	Iterator iter = res.entries . iterator () ; simpleMethod
Distance : 2

119
Tree	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Code	Iterator iter = res.entries . iterator () ; getArgumentMatcherStorage
Distance : 2

120
Tree	Iterator iter = res.entries . iterator () ; append
Code	Iterator iter = res.entries . iterator () ; append
Distance : 2

121
Tree	Iterator iter = res.entries . iterator () ; alpha
Code	Iterator iter = res.entries . iterator () ; alpha
Distance : 2

122
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

123
Tree	Iterator iter = res.entries . iterator () ; obj
Code	Iterator iter = res.entries . iterator () ; obj
Distance : 2

124
Tree	Iterator iter = res.entries . iterator () ; isBlock
Code	Iterator iter = res.entries . iterator () ; isBlock
Distance : 2

125
Tree	Iterator iter = res.entries . iterator () ; array
Code	Iterator iter = res.entries . iterator () ; array
Distance : 2

126
Tree	Iterator iter = res.entries . iterator () ; TestUtils
Code	Iterator iter = res.entries . iterator () ; TestUtils
Distance : 2

127
Tree	Iterator iter = res.entries . iterator () ; length
Code	Iterator iter = res.entries . iterator () ; length
Distance : 2

128
Tree	Iterator iter = res.entries . iterator () ; expected
Code	Iterator iter = res.entries . iterator () ; expected
Distance : 2

129
Tree	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; IllegalArgumentException
Distance : 2

130
Tree	Iterator iter = res.entries . iterator () ; invocation
Code	Iterator iter = res.entries . iterator () ; invocation
Distance : 2

131
Tree	Iterator iter = res.entries . iterator () ; assertThat
Code	Iterator iter = res.entries . iterator () ; assertThat
Distance : 2

132
Tree	Iterator iter = res.entries . iterator () ; FastMath
Code	Iterator iter = res.entries . iterator () ; FastMath
Distance : 2

133
Tree	Iterator iter = res.entries . iterator () ; reportCodeChange
Code	Iterator iter = res.entries . iterator () ; reportCodeChange
Distance : 2

134
Tree	Iterator iter = res.entries . iterator () ; testSame
Code	Iterator iter = res.entries . iterator () ; testSame
Distance : 2

135
Tree	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Code	Iterator iter = res.entries . iterator () ; createIllegalArgumentException
Distance : 2

136
Tree	Iterator iter = res.entries . iterator () ; ArrayList
Code	Iterator iter = res.entries . iterator () ; ArrayList
Distance : 2

137
Tree	Iterator iter = res.entries . iterator () ; parent
Code	Iterator iter = res.entries . iterator () ; parent
Distance : 2

138
Tree	Iterator iter = res.entries . iterator () ; LINE_JOINER
Code	Iterator iter = res.entries . iterator () ; LINE_JOINER
Distance : 2

139
Tree	Iterator iter = res.entries . iterator () ; x
Code	Iterator iter = res.entries . iterator () ; x
Distance : 2

140
Tree	Iterator iter = res.entries . iterator () ; fireChangeEvent
Code	Iterator iter = res.entries . iterator () ; fireChangeEvent
Distance : 2

141
Tree	Iterator iter = res.entries . iterator () ; str
Code	Iterator iter = res.entries . iterator () ; str
Distance : 2

142
Tree	Iterator iter = res.entries . iterator () ; m
Code	Iterator iter = res.entries . iterator () ; m
Distance : 2

143
Tree	Iterator iter = res.entries . iterator () ; try
Code	Iterator iter = res.entries . iterator () ; try
Distance : 2

144
Tree	Iterator iter = res.entries . iterator () ; fail
Code	Iterator iter = res.entries . iterator () ; fail
Distance : 2

145
Tree	Iterator iter = res.entries . iterator () ; :
Code	Iterator iter = res.entries . iterator () ; :
Distance : 2

146
Tree	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = res.entries . iterator () ; LanguageMode.ECMASCRIPT6
Distance : 2

147
Tree	Iterator iter = res.entries . iterator () ; optimizer
Code	Iterator iter = res.entries . iterator () ; optimizer
Distance : 2

148
Tree	Iterator entries = res.entries . iterator () ;
Code	Iterator entries = res.entries . iterator () ;
Distance : 2

149
Tree	Iterator iter = res.entries . iterator () ; <>
Code	Iterator iter = res.entries . iterator () ; <>
Distance : 2

150
Tree	Iterator iter = res.entries . iterator () ; ?
Code	Iterator iter = res.entries . iterator () ; ?
Distance : 2

151
Tree	Iterator iter = res.entries . iterator () ; boolean
Code	Iterator iter = res.entries . iterator () ; boolean
Distance : 2

152
Tree	Iterator iter = res.entries . iterator () ; paint
Code	Iterator iter = res.entries . iterator () ; paint
Distance : 2

153
Tree	Iterator iter = res.entries . iterator () ; result
Code	Iterator iter = res.entries . iterator () ; result
Distance : 2

154
Tree	Iterator iter = res.entries . iterator () ; *
Code	Iterator iter = res.entries . iterator () ; *
Distance : 2

155
Tree	Iterator iter = res.entries . iterator () ; type
Code	Iterator iter = res.entries . iterator () ; type
Distance : 2

156
Tree	Iterator iter = res.entries . iterator () ; getInstance
Code	Iterator iter = res.entries . iterator () ; getInstance
Distance : 2

157
Tree	Iterator iter = res.entries . iterator () ; serialised
Code	Iterator iter = res.entries . iterator () ; serialised
Distance : 2

158
Tree	Iterator iter = res.entries . iterator () ; Exception
Code	Iterator iter = res.entries . iterator () ; Exception
Distance : 2

159
Tree	Iterator iter = res.entries . iterator () ; Assert
Code	Iterator iter = res.entries . iterator () ; Assert
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; source
Code	Iterator iter = res.entries . iterator () ; source
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; Class
Code	Iterator iter = res.entries . iterator () ; Class
Distance : 2

162
Tree	Iterator iter = res.entries . iterator () ; Math
Code	Iterator iter = res.entries . iterator () ; Math
Distance : 2

163
Tree	Iterator iter = res.entries . iterator () ; root
Code	Iterator iter = res.entries . iterator () ; root
Distance : 2

164
Tree	Iterator iter = res.entries . iterator () ; options
Code	Iterator iter = res.entries . iterator () ; options
Distance : 2

165
Tree	Iterator iter = res.entries . iterator () ; p
Code	Iterator iter = res.entries . iterator () ; p
Distance : 2

166
Tree	Iterator iter = res.entries . iterator () ; data
Code	Iterator iter = res.entries . iterator () ; data
Distance : 2

167
Tree	Iterator iter = res.entries . iterator () ; add
Code	Iterator iter = res.entries . iterator () ; add
Distance : 2

168
Tree	Iterator iter = res.entries . iterator () ; field
Code	Iterator iter = res.entries . iterator () ; field
Distance : 2

169
Tree	Iterator iter = res.entries . iterator () ; checkArgument
Code	Iterator iter = res.entries . iterator () ; checkArgument
Distance : 2

170
Tree	Iterator iter = res.entries . iterator () ; ex
Code	Iterator iter = res.entries . iterator () ; ex
Distance : 2

171
Tree	Iterator iter = res.entries . iterator () ; NodeUtil
Code	Iterator iter = res.entries . iterator () ; NodeUtil
Distance : 2

172
Tree	Iterator iter = res.entries . iterator () ; join
Code	Iterator iter = res.entries . iterator () ; join
Distance : 2

173
Tree	Iterator iter = res.entries . iterator () ; List
Code	Iterator iter = res.entries . iterator () ; List
Distance : 2

174
Tree	Iterator iter = res.entries . iterator () ; NodeTraversal
Code	Iterator iter = res.entries . iterator () ; NodeTraversal
Distance : 2

175
Tree	Iterator iter = res.entries . iterator () ; Args
Code	Iterator iter = res.entries . iterator () ; Args
Distance : 2

176
Tree	Iterator iter = res.entries . iterator () ; v
Code	Iterator iter = res.entries . iterator () ; v
Distance : 2

177
Tree	Iterator iter = res.entries . iterator () ; Integer
Code	Iterator iter = res.entries . iterator () ; Integer
Distance : 2

178
Tree	Iterator iter = res.entries . iterator () ; lines
Code	Iterator iter = res.entries . iterator () ; lines
Distance : 2

179
Tree	Iterator iter = res.entries . iterator () ; c
Code	Iterator iter = res.entries . iterator () ; c
Distance : 2

180
Tree	Iterator iter = res.entries . iterator () ; verify
Code	Iterator iter = res.entries . iterator () ; verify
Distance : 2

181
Tree	Iterator iter = res.entries . iterator () ; Node
Code	Iterator iter = res.entries . iterator () ; Node
Distance : 2

182
Tree	Iterator iter = res.entries . iterator () ; compiler
Code	Iterator iter = res.entries . iterator () ; compiler
Distance : 2

183
Tree	Iterator iter = res.entries . iterator () ; String
Code	Iterator iter = res.entries . iterator () ; String
Distance : 2

184
Tree	Iterator iter = res.entries . iterator () ; null
Code	Iterator iter = res.entries . iterator () ; null
Distance : 2

185
Tree	Iterator iter = res.entries . iterator () ; wanted
Code	Iterator iter = res.entries . iterator () ; wanted
Distance : 2

186
Tree	Iterator iter = res.entries . iterator () ; +
Code	Iterator iter = res.entries . iterator () ; +
Distance : 2

187
Tree	Iterator iter = res.entries . iterator () ; catch
Code	Iterator iter = res.entries . iterator () ; catch
Distance : 2

188
Tree	Iterator iter = res.entries . iterator () ; !=
Code	Iterator iter = res.entries . iterator () ; !=
Distance : 2

189
Tree	Iterator iter = res.entries . iterator () ; value
Code	Iterator iter = res.entries . iterator () ; value
Distance : 2

190
Tree	Iterator iter = res.entries . iterator () ; /
Code	Iterator iter = res.entries . iterator () ; /
Distance : 2

191
Tree	Iterator iter = res.entries . iterator () ; assertTrue
Code	Iterator iter = res.entries . iterator () ; assertTrue
Distance : 2

192
Tree	Iterator iter = res.entries . iterator () ; checkNotNull
Code	Iterator iter = res.entries . iterator () ; checkNotNull
Distance : 2

193
Tree	Iterator iter = res.entries . iterator () ; Fraction
Code	Iterator iter = res.entries . iterator () ; Fraction
Distance : 2

194
Tree	Iterator iter = res.entries . iterator () ; valueOf
Code	Iterator iter = res.entries . iterator () ; valueOf
Distance : 2

195
Tree	Iterator iter = res.entries . iterator () ; instance
Code	Iterator iter = res.entries . iterator () ; instance
Distance : 2

196
Tree	Iterator iter = res.entries . iterator () ; long
Code	Iterator iter = res.entries . iterator () ; long
Distance : 2

197
Tree	Iterator iter = res.entries . iterator () ; throw
Code	Iterator iter = res.entries . iterator () ; throw
Distance : 2

198
Tree	Iterator iter = res.entries . iterator () ; y
Code	Iterator iter = res.entries . iterator () ; y
Distance : 2

199
Tree	Iterator iter = res.entries . iterator () ; PeriodType
Code	Iterator iter = res.entries . iterator () ; PeriodType
Distance : 2

========================================================================


========================================================================
Example Number: 67
Parent Code is: 
if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/47/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( case != NUMBER_CONSTANT ) {}
Code	if ( case != NUMBER_CONSTANT ) {}
Distance : 11

1
Tree	if ( incrementalCheckMode != NUMBER_CONSTANT ) {}
Code	if ( incrementalCheckMode != NUMBER_CONSTANT ) {}
Distance : 11

2
Tree	if ( omegaCount != null ) {}
Code	if ( omegaCount != null ) {}
Distance : 12

3
Tree	if ( setMinorTickCount == false ) {}
Code	if ( setMinorTickCount == false ) {}
Distance : 11

4
Tree	if ( InitializationCompletedMarkerException != NUMBER_CONSTANT ) {}
Code	if ( InitializationCompletedMarkerException != NUMBER_CONSTANT ) {}
Distance : 11

5
Tree	if ( aliasRef != null ) {}
Code	if ( aliasRef != null ) {}
Distance : 12

6
Tree	if ( nDataPoints == false ) {}
Code	if ( nDataPoints == false ) {}
Distance : 11

7
Tree	if ( newModule != null ) {}
Code	if ( newModule != null ) {}
Distance : 12

8
Tree	if ( projection != NUMBER_CONSTANT ) {}
Code	if ( projection != NUMBER_CONSTANT ) {}
Distance : 11

9
Tree	if ( labelGenerator == false ) {}
Code	if ( labelGenerator == false ) {}
Distance : 11

10
Tree	if ( setMinorTickCount != null ) {}
Code	if ( setMinorTickCount != null ) {}
Distance : 12

11
Tree	if ( interpolator.nordsieck != NUMBER_CONSTANT ) {}
Code	if ( interpolator.nordsieck != NUMBER_CONSTANT ) {}
Distance : 11

12
Tree	if ( CLEANER != NUMBER_CONSTANT ) {}
Code	if ( CLEANER != NUMBER_CONSTANT ) {}
Distance : 11

13
Tree	if ( LocalizedFormats.ZERO_NORM != NUMBER_CONSTANT ) {}
Code	if ( LocalizedFormats.ZERO_NORM != NUMBER_CONSTANT ) {}
Distance : 11

14
Tree	if ( crosshairState == false ) {}
Code	if ( crosshairState == false ) {}
Distance : 11

15
Tree	if ( options.skipNonTranspilationPasses < Integer.MIN_VALUE ) {}
Code	if ( options.skipNonTranspilationPasses < Integer.MIN_VALUE ) {}
Distance : 12

16
Tree	if ( resultEqualsValue != null ) <=
Code	if ( resultEqualsValue != null ) <=
Distance : 12

17
Tree	if ( OutOfRangeException != NUMBER_CONSTANT ) {}
Code	if ( OutOfRangeException != NUMBER_CONSTANT ) {}
Distance : 11

18
Tree	if ( nDataPoints != null ) {}
Code	if ( nDataPoints != null ) {}
Distance : 12

19
Tree	if ( leftOfArrow.type < SimpsonIntegrator.SIMPSON_MAX_ITERATIONS_COUNT ) {}
Code	if ( leftOfArrow.type < SimpsonIntegrator.SIMPSON_MAX_ITERATIONS_COUNT ) {}
Distance : 12

20
Tree	if ( smallestIndexOfDiff != NUMBER_CONSTANT ) {}
Code	if ( smallestIndexOfDiff != NUMBER_CONSTANT ) {}
Distance : 11

21
Tree	if ( iParseField != NUMBER_CONSTANT ) {}
Code	if ( iParseField != NUMBER_CONSTANT ) {}
Distance : 11

22
Tree	if ( legendItemGraphicPadding != NUMBER_CONSTANT ) {}
Code	if ( legendItemGraphicPadding != NUMBER_CONSTANT ) {}
Distance : 11

23
Tree	if ( NamedType != null ) {}
Code	if ( NamedType != null ) {}
Distance : 12

24
Tree	if ( rval != null ) {}
Code	if ( rval != null ) {}
Distance : 12

25
Tree	if ( nDataPoints < Integer.MIN_VALUE ) {}
Code	if ( nDataPoints < Integer.MIN_VALUE ) {}
Distance : 12

26
Tree	if ( renderAsPercentages != NUMBER_CONSTANT ) {}
Code	if ( renderAsPercentages != NUMBER_CONSTANT ) {}
Distance : 11

27
Tree	if ( leftOfArrow.type < CharUtils.NUL ) {}
Code	if ( leftOfArrow.type < CharUtils.NUL ) {}
Distance : 12

28
Tree	if ( RunnerProvider == false ) {}
Code	if ( RunnerProvider == false ) {}
Distance : 11

29
Tree	if ( hasErrors != NUMBER_CONSTANT ) {}
Code	if ( hasErrors != NUMBER_CONSTANT ) {}
Distance : 11

30
Tree	if ( isQName == false ) {}
Code	if ( isQName == false ) {}
Distance : 11

31
Tree	if ( NamedType == false ) {}
Code	if ( NamedType == false ) {}
Distance : 11

32
Tree	if ( defaultPaint != NUMBER_CONSTANT ) {}
Code	if ( defaultPaint != NUMBER_CONSTANT ) {}
Distance : 11

33
Tree	if ( leftOfArrow.type < org.joda.time.gwt.util.Arrays ) {}
Code	if ( leftOfArrow.type < org.joda.time.gwt.util.Arrays ) {}
Distance : 12

34
Tree	if ( omegaCount == false ) {}
Code	if ( omegaCount == false ) {}
Distance : 11

35
Tree	if ( numberOfVariables != null ) {}
Code	if ( numberOfVariables != null ) {}
Distance : 12

36
Tree	if ( leftOfArrow.type < RemoveUnusedCode.Builder ) {}
Code	if ( leftOfArrow.type < RemoveUnusedCode.Builder ) {}
Distance : 12

37
Tree	if ( aliasRef == false ) {}
Code	if ( aliasRef == false ) {}
Distance : 11

38
Tree	if ( arrayOfString != NUMBER_CONSTANT ) {}
Code	if ( arrayOfString != NUMBER_CONSTANT ) {}
Distance : 11

39
Tree	if ( outerVarPreconditions != NUMBER_CONSTANT ) {}
Code	if ( outerVarPreconditions != NUMBER_CONSTANT ) {}
Distance : 11

40
Tree	if ( ClassImposterizer != NUMBER_CONSTANT ) {}
Code	if ( ClassImposterizer != NUMBER_CONSTANT ) {}
Distance : 11

41
Tree	if ( RunnerProvider != null ) {}
Code	if ( RunnerProvider != null ) {}
Distance : 12

42
Tree	if ( isQName != null ) {}
Code	if ( isQName != null ) {}
Distance : 12

43
Tree	if ( newModule == false ) {}
Code	if ( newModule == false ) {}
Distance : 11

44
Tree	if ( labelGenerator != null ) {}
Code	if ( labelGenerator != null ) {}
Distance : 12

45
Tree	if ( singletonLock != NUMBER_CONSTANT ) {}
Code	if ( singletonLock != NUMBER_CONSTANT ) {}
Distance : 11

46
Tree	if ( foundObj == false ) <=
Code	if ( foundObj == false ) <=
Distance : 11

47
Tree	if ( case != NUMBER_CONSTANT ) <=
Code	if ( case != NUMBER_CONSTANT ) <=
Distance : 11

48
Tree	if ( astValidationEnabled != NUMBER_CONSTANT ) {}
Code	if ( astValidationEnabled != NUMBER_CONSTANT ) {}
Distance : 11

49
Tree	if ( Config.StrictMode == false ) {}
Code	if ( Config.StrictMode == false ) {}
Distance : 11

50
Tree	if ( searchChars == false ) {}
Code	if ( searchChars == false ) {}
Distance : 11

51
Tree	if ( NumberIsTooLargeException != NUMBER_CONSTANT ) {}
Code	if ( NumberIsTooLargeException != NUMBER_CONSTANT ) {}
Distance : 11

52
Tree	if ( FastFourierTransformer != null ) {}
Code	if ( FastFourierTransformer != null ) {}
Distance : 12

53
Tree	if ( testNgInjectToArrowFunctions != NUMBER_CONSTANT ) {}
Code	if ( testNgInjectToArrowFunctions != NUMBER_CONSTANT ) {}
Distance : 11

54
Tree	if ( inputLineLength == false ) <=
Code	if ( inputLineLength == false ) <=
Distance : 11

55
Tree	if ( deltaNorm == false ) {}
Code	if ( deltaNorm == false ) {}
Distance : 11

56
Tree	if ( leftOfArrow.type < Integer.MIN_VALUE ) <=
Code	if ( leftOfArrow.type < Integer.MIN_VALUE ) <=
Distance : 12

57
Tree	if ( functionInfo != NUMBER_CONSTANT ) {}
Code	if ( functionInfo != NUMBER_CONSTANT ) {}
Distance : 11

58
Tree	if ( Config.StrictMode != null ) {}
Code	if ( Config.StrictMode != null ) {}
Distance : 12

59
Tree	if ( inputLineLength != null ) <=
Code	if ( inputLineLength != null ) <=
Distance : 12

60
Tree	if ( normal != NUMBER_CONSTANT ) {}
Code	if ( normal != NUMBER_CONSTANT ) {}
Distance : 11

61
Tree	if ( InOrderContext == false ) {}
Code	if ( InOrderContext == false ) {}
Distance : 11

62
Tree	if ( isObjKey != NUMBER_CONSTANT ) {}
Code	if ( isObjKey != NUMBER_CONSTANT ) {}
Distance : 11

63
Tree	if ( LocalizedFormats.NO_REGRESSORS == false ) {}
Code	if ( LocalizedFormats.NO_REGRESSORS == false ) {}
Distance : 11

64
Tree	if ( searchChars != null ) {}
Code	if ( searchChars != null ) {}
Distance : 12

65
Tree	if ( divisor != NUMBER_CONSTANT ) {}
Code	if ( divisor != NUMBER_CONSTANT ) {}
Distance : 10

66
Tree	if ( daemon != NUMBER_CONSTANT ) {}
Code	if ( daemon != NUMBER_CONSTANT ) {}
Distance : 11

67
Tree	if ( FastFourierTransformer == false ) {}
Code	if ( FastFourierTransformer == false ) {}
Distance : 11

68
Tree	if ( LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE != NUMBER_CONSTANT ) {}
Code	if ( LocalizedFormats.OUT_OF_BOUNDS_QUANTILE_VALUE != NUMBER_CONSTANT ) {}
Distance : 11

69
Tree	if ( dNode != null ) {}
Code	if ( dNode != null ) {}
Distance : 12

70
Tree	if ( resultEqualsValue == false ) <=
Code	if ( resultEqualsValue == false ) <=
Distance : 11

71
Tree	if ( mep == false ) <=
Code	if ( mep == false ) <=
Distance : 11

72
Tree	if ( TweakFunction == false ) {}
Code	if ( TweakFunction == false ) {}
Distance : 11

73
Tree	if ( DefaultReturnValuesTest != NUMBER_CONSTANT ) {}
Code	if ( DefaultReturnValuesTest != NUMBER_CONSTANT ) {}
Distance : 11

74
Tree	if ( recordUnresolvedTypes != NUMBER_CONSTANT ) {}
Code	if ( recordUnresolvedTypes != NUMBER_CONSTANT ) {}
Distance : 11

75
Tree	if ( ParsePosition != NUMBER_CONSTANT ) {}
Code	if ( ParsePosition != NUMBER_CONSTANT ) {}
Distance : 11

76
Tree	if ( isCallInLoop != NUMBER_CONSTANT ) {}
Code	if ( isCallInLoop != NUMBER_CONSTANT ) {}
Distance : 11

77
Tree	if ( crosshairState != null ) {}
Code	if ( crosshairState != null ) {}
Distance : 12

78
Tree	if ( checkUnusedLocals != NUMBER_CONSTANT ) {}
Code	if ( checkUnusedLocals != NUMBER_CONSTANT ) {}
Distance : 11

79
Tree	if ( axisOffset != NUMBER_CONSTANT ) {}
Code	if ( axisOffset != NUMBER_CONSTANT ) {}
Distance : 11

80
Tree	if ( options.deadAssignmentElimination < Integer.MIN_VALUE ) {}
Code	if ( options.deadAssignmentElimination < Integer.MIN_VALUE ) {}
Distance : 12

81
Tree	if ( unusedAssignment != NUMBER_CONSTANT ) {}
Code	if ( unusedAssignment != NUMBER_CONSTANT ) {}
Distance : 11

82
Tree	if ( case != null ) *
Code	if ( case != null ) *
Distance : 12

83
Tree	if ( dNode == false ) {}
Code	if ( dNode == false ) {}
Distance : 11

84
Tree	if ( foundObj != null ) <=
Code	if ( foundObj != null ) <=
Distance : 12

85
Tree	if ( TweakFunction != null ) {}
Code	if ( TweakFunction != null ) {}
Distance : 12

86
Tree	if ( transpileEnabled != NUMBER_CONSTANT ) {}
Code	if ( transpileEnabled != NUMBER_CONSTANT ) {}
Distance : 11

87
Tree	if ( normalArgsLen != NUMBER_CONSTANT ) {}
Code	if ( normalArgsLen != NUMBER_CONSTANT ) {}
Distance : 11

88
Tree	if ( covarianceMatrix != NUMBER_CONSTANT ) {}
Code	if ( covarianceMatrix != NUMBER_CONSTANT ) {}
Distance : 11

89
Tree	if ( enclosing != NUMBER_CONSTANT ) {}
Code	if ( enclosing != NUMBER_CONSTANT ) {}
Distance : 11

90
Tree	if ( mep != null ) <=
Code	if ( mep != null ) <=
Distance : 12

91
Tree	if ( functionScope != NUMBER_CONSTANT ) {}
Code	if ( functionScope != NUMBER_CONSTANT ) {}
Distance : 11

92
Tree	if ( numberOfVariables == false ) {}
Code	if ( numberOfVariables == false ) {}
Distance : 11

93
Tree	if ( constructorI != NUMBER_CONSTANT ) {}
Code	if ( constructorI != NUMBER_CONSTANT ) {}
Distance : 11

94
Tree	if ( mep == false ) {}
Code	if ( mep == false ) {}
Distance : 11

95
Tree	if ( foundObj == false ) {}
Code	if ( foundObj == false ) {}
Distance : 11

96
Tree	if ( isQName != NUMBER_CONSTANT ) {}
Code	if ( isQName != NUMBER_CONSTANT ) {}
Distance : 11

97
Tree	if ( NamedType != NUMBER_CONSTANT ) {}
Code	if ( NamedType != NUMBER_CONSTANT ) {}
Distance : 11

98
Tree	if ( omegaCount != NUMBER_CONSTANT ) {}
Code	if ( omegaCount != NUMBER_CONSTANT ) {}
Distance : 11

99
Tree	if ( leftOfArrow.type < ParseTreeType.CALL_EXPRESSION ) {}
Code	if ( leftOfArrow.type < ParseTreeType.CALL_EXPRESSION ) {}
Distance : 12

100
Tree	if ( aliasRef != NUMBER_CONSTANT ) {}
Code	if ( aliasRef != NUMBER_CONSTANT ) {}
Distance : 11

101
Tree	if ( foundObj != null ) {}
Code	if ( foundObj != null ) {}
Distance : 12

102
Tree	if ( mep != null ) {}
Code	if ( mep != null ) {}
Distance : 12

103
Tree	if ( newModule != NUMBER_CONSTANT ) {}
Code	if ( newModule != NUMBER_CONSTANT ) {}
Distance : 11

104
Tree	if ( inputLineLength == false ) {}
Code	if ( inputLineLength == false ) {}
Distance : 11

105
Tree	if ( setMinorTickCount != NUMBER_CONSTANT ) {}
Code	if ( setMinorTickCount != NUMBER_CONSTANT ) {}
Distance : 11

106
Tree	if ( nDataPoints != NUMBER_CONSTANT ) {}
Code	if ( nDataPoints != NUMBER_CONSTANT ) {}
Distance : 11

107
Tree	if ( labelGenerator != NUMBER_CONSTANT ) {}
Code	if ( labelGenerator != NUMBER_CONSTANT ) {}
Distance : 11

108
Tree	if ( inputLineLength != null ) {}
Code	if ( inputLineLength != null ) {}
Distance : 12

109
Tree	if ( divisor == false ) <=
Code	if ( divisor == false ) <=
Distance : 10

110
Tree	if ( crosshairState != NUMBER_CONSTANT ) {}
Code	if ( crosshairState != NUMBER_CONSTANT ) {}
Distance : 11

111
Tree	if ( divisor != null ) <=
Code	if ( divisor != null ) <=
Distance : 11

112
Tree	if ( leftOfArrow.type < Year.MINIMUM_YEAR ) {}
Code	if ( leftOfArrow.type < Year.MINIMUM_YEAR ) {}
Distance : 12

113
Tree	if ( RunnerProvider != NUMBER_CONSTANT ) {}
Code	if ( RunnerProvider != NUMBER_CONSTANT ) {}
Distance : 11

114
Tree	if ( numberOfVariables != NUMBER_CONSTANT ) {}
Code	if ( numberOfVariables != NUMBER_CONSTANT ) {}
Distance : 11

115
Tree	if ( resultEqualsValue != null ) {}
Code	if ( resultEqualsValue != null ) {}
Distance : 12

116
Tree	if ( leftOfArrow.type < LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE ) {}
Code	if ( leftOfArrow.type < LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE ) {}
Distance : 12

117
Tree	if ( case == false ) {}
Code	if ( case == false ) {}
Distance : 11

118
Tree	if ( case != null ) {}
Code	if ( case != null ) {}
Distance : 12

119
Tree	if ( leftOfArrow.type < Integer.MIN_VALUE ) {}
Code	if ( leftOfArrow.type < Integer.MIN_VALUE ) {}
Distance : 12

120
Tree	if ( resultEqualsValue != NUMBER_CONSTANT ) {}
Code	if ( resultEqualsValue != NUMBER_CONSTANT ) {}
Distance : 11

121
Tree	if ( divisor == false ) {}
Code	if ( divisor == false ) {}
Distance : 10

122
Tree	if ( divisor != null ) {}
Code	if ( divisor != null ) {}
Distance : 11

123
Tree	if ( mep != NUMBER_CONSTANT ) {}
Code	if ( mep != NUMBER_CONSTANT ) {}
Distance : 11

124
Tree	if ( foundObj != NUMBER_CONSTANT ) {}
Code	if ( foundObj != NUMBER_CONSTANT ) {}
Distance : 11

125
Tree	if ( inputLineLength != NUMBER_CONSTANT ) {}
Code	if ( inputLineLength != NUMBER_CONSTANT ) {}
Distance : 11

126
Tree	if ( TweakFunction != NUMBER_CONSTANT ) {}
Code	if ( TweakFunction != NUMBER_CONSTANT ) {}
Distance : 11

127
Tree	if ( leftOfArrow.type != NUMBER_CONSTANT ) {}
Code	if ( leftOfArrow.type != NUMBER_CONSTANT ) {}
Distance : 11

128
Tree	if ( funcTarget != NUMBER_CONSTANT ) {}
Code	if ( funcTarget != NUMBER_CONSTANT ) {}
Distance : 11

129
Tree	if ( Diagnostic != NUMBER_CONSTANT ) {}
Code	if ( Diagnostic != NUMBER_CONSTANT ) {}
Distance : 11

130
Tree	if ( case == false ) <=
Code	if ( case == false ) <=
Distance : 11

131
Tree	if ( ia != NUMBER_CONSTANT ) {}
Code	if ( ia != NUMBER_CONSTANT ) {}
Distance : 11

132
Tree	if ( case != null ) <=
Code	if ( case != null ) <=
Distance : 12

133
Tree	if ( replaceChars != NUMBER_CONSTANT ) {}
Code	if ( replaceChars != NUMBER_CONSTANT ) {}
Distance : 11

134
Tree	if ( Annotation != NUMBER_CONSTANT ) {}
Code	if ( Annotation != NUMBER_CONSTANT ) {}
Distance : 11

135
Tree	if ( resultEqualsValue == false ) {}
Code	if ( resultEqualsValue == false ) {}
Distance : 11

136
Tree	if ( rval != NUMBER_CONSTANT ) {}
Code	if ( rval != NUMBER_CONSTANT ) {}
Distance : 11

137
Tree	if ( MutableObject != NUMBER_CONSTANT ) {}
Code	if ( MutableObject != NUMBER_CONSTANT ) {}
Distance : 11

138
Tree	if ( dNode != NUMBER_CONSTANT ) {}
Code	if ( dNode != NUMBER_CONSTANT ) {}
Distance : 11

139
Tree	if ( leftOfArrow.type < IncrementalCheckMode.GENERATE_IJS ) {}
Code	if ( leftOfArrow.type < IncrementalCheckMode.GENERATE_IJS ) {}
Distance : 12

140
Tree	if ( FastFourierTransformer != NUMBER_CONSTANT ) {}
Code	if ( FastFourierTransformer != NUMBER_CONSTANT ) {}
Distance : 11

141
Tree	if ( _boundaries != NUMBER_CONSTANT ) {}
Code	if ( _boundaries != NUMBER_CONSTANT ) {}
Distance : 11

142
Tree	if ( leftOfArrow.type == false ) {}
Code	if ( leftOfArrow.type == false ) {}
Distance : 11

143
Tree	if ( quantile != NUMBER_CONSTANT ) {}
Code	if ( quantile != NUMBER_CONSTANT ) {}
Distance : 11

144
Tree	if ( negccov != NUMBER_CONSTANT ) {}
Code	if ( negccov != NUMBER_CONSTANT ) {}
Distance : 11

145
Tree	if ( allStringsNull != NUMBER_CONSTANT ) {}
Code	if ( allStringsNull != NUMBER_CONSTANT ) {}
Distance : 11

146
Tree	if ( Diagnostic != null ) {}
Code	if ( Diagnostic != null ) {}
Distance : 12

147
Tree	if ( js.length != NUMBER_CONSTANT ) {}
Code	if ( js.length != NUMBER_CONSTANT ) {}
Distance : 11

148
Tree	if ( ia == false ) {}
Code	if ( ia == false ) {}
Distance : 11

149
Tree	if ( stubable != NUMBER_CONSTANT ) {}
Code	if ( stubable != NUMBER_CONSTANT ) {}
Distance : 11

150
Tree	if ( replaceChars == false ) {}
Code	if ( replaceChars == false ) {}
Distance : 11

151
Tree	if ( JUnitRule != NUMBER_CONSTANT ) {}
Code	if ( JUnitRule != NUMBER_CONSTANT ) {}
Distance : 11

152
Tree	if ( elitismRate != NUMBER_CONSTANT ) {}
Code	if ( elitismRate != NUMBER_CONSTANT ) {}
Distance : 11

153
Tree	if ( OverloadingPuzzleTest != NUMBER_CONSTANT ) {}
Code	if ( OverloadingPuzzleTest != NUMBER_CONSTANT ) {}
Distance : 11

154
Tree	if ( ia != null ) {}
Code	if ( ia != null ) {}
Distance : 12

155
Tree	if ( Annotation == false ) {}
Code	if ( Annotation == false ) {}
Distance : 11

156
Tree	if ( replaceChars != null ) {}
Code	if ( replaceChars != null ) {}
Distance : 12

157
Tree	if ( MathUtils.PI_SQUARED < Integer.MIN_VALUE ) {}
Code	if ( MathUtils.PI_SQUARED < Integer.MIN_VALUE ) {}
Distance : 12

158
Tree	if ( rval == false ) {}
Code	if ( rval == false ) {}
Distance : 11

159
Tree	if ( Annotation != null ) {}
Code	if ( Annotation != null ) {}
Distance : 12

160
Tree	if ( maximalIterationCount != NUMBER_CONSTANT ) {}
Code	if ( maximalIterationCount != NUMBER_CONSTANT ) {}
Distance : 11

161
Tree	if ( Diagnostic == false ) {}
Code	if ( Diagnostic == false ) {}
Distance : 11

162
Tree	if ( labelInsets != NUMBER_CONSTANT ) {}
Code	if ( labelInsets != NUMBER_CONSTANT ) {}
Distance : 11

163
Tree	if ( ShapeUtils != NUMBER_CONSTANT ) {}
Code	if ( ShapeUtils != NUMBER_CONSTANT ) {}
Distance : 11

164
Tree	if ( LocalizedFormats.NO_REGRESSORS < Integer.MIN_VALUE ) {}
Code	if ( LocalizedFormats.NO_REGRESSORS < Integer.MIN_VALUE ) {}
Distance : 12

165
Tree	if ( Config.StrictMode != NUMBER_CONSTANT ) {}
Code	if ( Config.StrictMode != NUMBER_CONSTANT ) {}
Distance : 11

166
Tree	if ( MutableObject == false ) {}
Code	if ( MutableObject == false ) {}
Distance : 11

167
Tree	if ( leftOfArrow.type != null ) {}
Code	if ( leftOfArrow.type != null ) {}
Distance : 12

168
Tree	if ( searchChars != NUMBER_CONSTANT ) {}
Code	if ( searchChars != NUMBER_CONSTANT ) {}
Distance : 11

169
Tree	if ( leftOfArrow.type < cls.target ) {}
Code	if ( leftOfArrow.type < cls.target ) {}
Distance : 12

170
Tree	if ( stdDev != NUMBER_CONSTANT ) {}
Code	if ( stdDev != NUMBER_CONSTANT ) {}
Distance : 11

171
Tree	if ( InOrderContext != NUMBER_CONSTANT ) {}
Code	if ( InOrderContext != NUMBER_CONSTANT ) {}
Distance : 11

172
Tree	if ( MutableObject != null ) {}
Code	if ( MutableObject != null ) {}
Distance : 12

173
Tree	if ( deltaNorm != NUMBER_CONSTANT ) {}
Code	if ( deltaNorm != NUMBER_CONSTANT ) {}
Distance : 11

174
Tree	if ( funcTarget == false ) {}
Code	if ( funcTarget == false ) {}
Distance : 11

175
Tree	if ( leftOfArrow.type < that.cache.functionScope ) {}
Code	if ( leftOfArrow.type < that.cache.functionScope ) {}
Distance : 12

176
Tree	if ( LocalizedFormats.NO_REGRESSORS != NUMBER_CONSTANT ) {}
Code	if ( LocalizedFormats.NO_REGRESSORS != NUMBER_CONSTANT ) {}
Distance : 11

177
Tree	if ( changed != NUMBER_CONSTANT ) {}
Code	if ( changed != NUMBER_CONSTANT ) {}
Distance : 11

178
Tree	if ( CHAR_CONS != NUMBER_CONSTANT ) {}
Code	if ( CHAR_CONS != NUMBER_CONSTANT ) {}
Distance : 11

179
Tree	if ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT != NUMBER_CONSTANT ) {}
Code	if ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT != NUMBER_CONSTANT ) {}
Distance : 11

180
Tree	if ( leftOfArrow.type < State.UNSTARTED ) {}
Code	if ( leftOfArrow.type < State.UNSTARTED ) {}
Distance : 12

181
Tree	if ( remA != NUMBER_CONSTANT ) {}
Code	if ( remA != NUMBER_CONSTANT ) {}
Distance : 11

182
Tree	if ( that != NUMBER_CONSTANT ) {}
Code	if ( that != NUMBER_CONSTANT ) {}
Distance : 11

183
Tree	if ( funcTarget != null ) {}
Code	if ( funcTarget != null ) {}
Distance : 12

184
Tree	if ( InOrderContext != null ) {}
Code	if ( InOrderContext != null ) {}
Distance : 12

185
Tree	if ( dev != NUMBER_CONSTANT ) {}
Code	if ( dev != NUMBER_CONSTANT ) {}
Distance : 11

186
Tree	if ( CHAR_CONS == false ) {}
Code	if ( CHAR_CONS == false ) {}
Distance : 11

187
Tree	if ( options.skipNonTranspilationPasses != NUMBER_CONSTANT ) {}
Code	if ( options.skipNonTranspilationPasses != NUMBER_CONSTANT ) {}
Distance : 11

188
Tree	if ( types != NUMBER_CONSTANT ) {}
Code	if ( types != NUMBER_CONSTANT ) {}
Distance : 11

189
Tree	if ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT == false ) {}
Code	if ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT == false ) {}
Distance : 11

190
Tree	if ( divisor < Integer.MIN_VALUE ) {}
Code	if ( divisor < Integer.MIN_VALUE ) {}
Distance : 11

191
Tree	if ( FieldVectorImpl != NUMBER_CONSTANT ) {}
Code	if ( FieldVectorImpl != NUMBER_CONSTANT ) {}
Distance : 11

192
Tree	if ( seriesOutlinePaint != NUMBER_CONSTANT ) {}
Code	if ( seriesOutlinePaint != NUMBER_CONSTANT ) {}
Distance : 11

193
Tree	if ( changed == false ) {}
Code	if ( changed == false ) {}
Distance : 11

194
Tree	if ( NOT_FOUND != NUMBER_CONSTANT ) {}
Code	if ( NOT_FOUND != NUMBER_CONSTANT ) {}
Distance : 11

195
Tree	if ( deltaNorm != null ) {}
Code	if ( deltaNorm != null ) {}
Distance : 12

196
Tree	if ( that == false ) {}
Code	if ( that == false ) {}
Distance : 11

197
Tree	if ( exitCodeReceiver != NUMBER_CONSTANT ) {}
Code	if ( exitCodeReceiver != NUMBER_CONSTANT ) {}
Distance : 11

198
Tree	if ( scopeType != NUMBER_CONSTANT ) {}
Code	if ( scopeType != NUMBER_CONSTANT ) {}
Distance : 11

199
Tree	if ( za != NUMBER_CONSTANT ) {}
Code	if ( za != NUMBER_CONSTANT ) {}
Distance : 11

========================================================================


========================================================================
Example Number: 68
Parent Code is: 
if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/46/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if
Code	if
Distance : 10

1
Tree	CategoryLabelWidthType
Code	CategoryLabelWidthType
Distance : 11

2
Tree	qrRankingThreshold
Code	qrRankingThreshold
Distance : 11

3
Tree	iStartMillis
Code	iStartMillis
Distance : 11

4
Tree	boundaries
Code	boundaries
Distance : 11

5
Tree	mean.length
Code	mean.length
Distance : 11

6
Tree	GaussNewtonOptimizer
Code	GaussNewtonOptimizer
Distance : 11

7
Tree	realFormat
Code	realFormat
Distance : 11

8
Tree	pos
Code	pos
Distance : 11

9
Tree	maybeAssign
Code	maybeAssign
Distance : 11

10
Tree	that.gradientPaintTransformer
Code	that.gradientPaintTransformer
Distance : 11

11
Tree	detects
Code	detects
Distance : 11

12
Tree	mocks.length
Code	mocks.length
Distance : 11

13
Tree	isKeyword
Code	isKeyword
Distance : 11

14
Tree	p
Code	p
Distance : 11

15
Tree	indexOf
Code	indexOf
Distance : 11

16
Tree	assertThat
Code	assertThat
Distance : 11

17
Tree	assumeTrue
Code	assumeTrue
Distance : 11

18
Tree	Double.MAX_VALUE
Code	Double.MAX_VALUE
Distance : 11

19
Tree	isSubtype
Code	isSubtype
Distance : 11

20
Tree	sigma
Code	sigma
Distance : 11

21
Tree	v.length
Code	v.length
Distance : 11

22
Tree	JSDocInfo
Code	JSDocInfo
Distance : 11

23
Tree	NotPositiveException
Code	NotPositiveException
Distance : 11

24
Tree	ltI
Code	ltI
Distance : 11

25
Tree	jsdoc
Code	jsdoc
Distance : 11

26
Tree	interiorGap
Code	interiorGap
Distance : 11

27
Tree	rows
Code	rows
Distance : 11

28
Tree	JodaTimePermission
Code	JodaTimePermission
Distance : 11

29
Tree	removeUnusedPrototypeProperties
Code	removeUnusedPrototypeProperties
Distance : 11

30
Tree	lower
Code	lower
Distance : 11

31
Tree	angleDegrees
Code	angleDegrees
Distance : 11

32
Tree	k
Code	k
Distance : 11

33
Tree	remove
Code	remove
Distance : 11

34
Tree	EnvTypePair
Code	EnvTypePair
Distance : 11

35
Tree	setField
Code	setField
Distance : 11

36
Tree	foundType
Code	foundType
Distance : 11

37
Tree	isUnresolved
Code	isUnresolved
Distance : 11

38
Tree	JDKRandomAdaptor
Code	JDKRandomAdaptor
Distance : 11

39
Tree	maxGenerations
Code	maxGenerations
Distance : 11

40
Tree	FastMath
Code	FastMath
Distance : 11

41
Tree	isSubtypeWithoutStructuralTyping
Code	isSubtypeWithoutStructuralTyping
Distance : 11

42
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 11

43
Tree	nextSibling
Code	nextSibling
Distance : 11

44
Tree	LocalizedFormats.FUNCTION
Code	LocalizedFormats.FUNCTION
Distance : 11

45
Tree	packed
Code	packed
Distance : 11

46
Tree	CharSequenceUtils
Code	CharSequenceUtils
Distance : 11

47
Tree	declarationRoot
Code	declarationRoot
Distance : 11

48
Tree	entry
Code	entry
Distance : 11

49
Tree	<=
Code	<=
Distance : 11

50
Tree	typeWithBannedProp
Code	typeWithBannedProp
Distance : 11

51
Tree	iter
Code	iter
Distance : 11

52
Tree	filePointer
Code	filePointer
Distance : 11

53
Tree	getQuotedString
Code	getQuotedString
Distance : 11

54
Tree	performPostCompilationTasks
Code	performPostCompilationTasks
Distance : 11

55
Tree	x0
Code	x0
Distance : 11

56
Tree	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN
Code	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN
Distance : 11

57
Tree	key
Code	key
Distance : 11

58
Tree	norm2
Code	norm2
Distance : 11

59
Tree	s1
Code	s1
Distance : 11

60
Tree	
Code	
Distance : 11

61
Tree	j
Code	j
Distance : 11

62
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 11

63
Tree	YearMonthType
Code	YearMonthType
Distance : 11

64
Tree	numberOfSuccesses
Code	numberOfSuccesses
Distance : 11

65
Tree	TDistributionImpl
Code	TDistributionImpl
Distance : 11

66
Tree	d.length
Code	d.length
Distance : 11

67
Tree	omegaCount
Code	omegaCount
Distance : 11

68
Tree	unverified
Code	unverified
Distance : 11

69
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 11

70
Tree	inFunction
Code	inFunction
Distance : 11

71
Tree	typeParam
Code	typeParam
Distance : 11

72
Tree	_boundaries
Code	_boundaries
Distance : 11

73
Tree	appendQuotedString
Code	appendQuotedString
Distance : 11

74
Tree	entities
Code	entities
Distance : 11

75
Tree	validateBlock
Code	validateBlock
Distance : 11

76
Tree	Double
Code	Double
Distance : 11

77
Tree	Result
Code	Result
Distance : 11

78
Tree	lu
Code	lu
Distance : 11

79
Tree	za
Code	za
Distance : 11

80
Tree	case
Code	case
Distance : 11

81
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 11

82
Tree	MathIllegalStateException
Code	MathIllegalStateException
Distance : 11

83
Tree	that
Code	that
Distance : 11

84
Tree	assertNull
Code	assertNull
Distance : 11

85
Tree	ObjectUtils
Code	ObjectUtils
Distance : 11

86
Tree	isDefaultValue
Code	isDefaultValue
Distance : 11

87
Tree	Shape
Code	Shape
Distance : 11

88
Tree	isSet
Code	isSet
Distance : 11

89
Tree	++
Code	++
Distance : 11

90
Tree	PearsonsCorrelation
Code	PearsonsCorrelation
Distance : 11

91
Tree	invalidatingTypes
Code	invalidatingTypes
Distance : 11

92
Tree	Paint
Code	Paint
Distance : 11

93
Tree	cur
Code	cur
Distance : 11

94
Tree	isASTNormalized
Code	isASTNormalized
Distance : 11

95
Tree	setFeatureSet
Code	setFeatureSet
Distance : 11

96
Tree	isEquals
Code	isEquals
Distance : 11

97
Tree	&&
Code	&&
Distance : 11

98
Tree	Matchers
Code	Matchers
Distance : 11

99
Tree	recordStructuralInterfaceUses
Code	recordStructuralInterfaceUses
Distance : 11

100
Tree	TDistribution
Code	TDistribution
Distance : 11

101
Tree	optima
Code	optima
Distance : 11

102
Tree	expansionMode
Code	expansionMode
Distance : 11

103
Tree	catch
Code	catch
Distance : 11

104
Tree	computeEscaped
Code	computeEscaped
Distance : 11

105
Tree	startPos
Code	startPos
Distance : 11

106
Tree	minPos
Code	minPos
Distance : 11

107
Tree	minValue
Code	minValue
Distance : 11

108
Tree	shift
Code	shift
Distance : 11

109
Tree	msgNode
Code	msgNode
Distance : 11

110
Tree	protected
Code	protected
Distance : 11

111
Tree	StaticTypedScope
Code	StaticTypedScope
Distance : 11

112
Tree	!
Code	!
Distance : 11

113
Tree	(
Code	(
Distance : 10

114
Tree	MockUtil
Code	MockUtil
Distance : 11

115
Tree	MathException
Code	MathException
Distance : 11

116
Tree	windowSize
Code	windowSize
Distance : 11

117
Tree	passes
Code	passes
Distance : 11

118
Tree	numElements
Code	numElements
Distance : 11

119
Tree	array
Code	array
Distance : 11

120
Tree	searchSeq
Code	searchSeq
Distance : 11

121
Tree	upper
Code	upper
Distance : 11

122
Tree	>=
Code	>=
Distance : 11

123
Tree	NodeUtil
Code	NodeUtil
Distance : 11

124
Tree	Var
Code	Var
Distance : 11

125
Tree	MathIllegalArgumentException
Code	MathIllegalArgumentException
Distance : 11

126
Tree	boolean
Code	boolean
Distance : 11

127
Tree	checkArgument
Code	checkArgument
Distance : 11

128
Tree	private
Code	private
Distance : 11

129
Tree	for
Code	for
Distance : 11

130
Tree	while
Code	while
Distance : 11

131
Tree	reporter
Code	reporter
Distance : 11

132
Tree	ret
Code	ret
Distance : 11

133
Tree	synchronized
Code	synchronized
Distance : 11

134
Tree	isNaN
Code	isNaN
Distance : 11

135
Tree	objType
Code	objType
Distance : 11

136
Tree	recordImplicitInterfaceUses
Code	recordImplicitInterfaceUses
Distance : 11

137
Tree	else
Code	else
Distance : 11

138
Tree	assertNotSame
Code	assertNotSame
Distance : 11

139
Tree	TimeSeries
Code	TimeSeries
Distance : 11

140
Tree	currentStatement
Code	currentStatement
Distance : 11

141
Tree	flag
Code	flag
Distance : 11

142
Tree	{
Code	{
Distance : 10

143
Tree	assertFalse
Code	assertFalse
Distance : 11

144
Tree	abstract
Code	abstract
Distance : 11

145
Tree	try
Code	try
Distance : 11

146
Tree	assertTrue
Code	assertTrue
Distance : 11

147
Tree	clone.data
Code	clone.data
Distance : 11

148
Tree	clone.legendLine
Code	clone.legendLine
Distance : 11

149
Tree	continue;
Code	continue;
Distance : 11

150
Tree	originalBody
Code	originalBody
Distance : 11

151
Tree	setDefaultToolTipGenerator
Code	setDefaultToolTipGenerator
Distance : 11

152
Tree	obj
Code	obj
Distance : 11

153
Tree	Keywords
Code	Keywords
Distance : 11

154
Tree	setLayout
Code	setLayout
Distance : 11

155
Tree	rhs.isNaN
Code	rhs.isNaN
Distance : 11

156
Tree	Invocation
Code	Invocation
Distance : 11

157
Tree	Object
Code	Object
Distance : 11

158
Tree	JSType
Code	JSType
Distance : 11

159
Tree	grandparent
Code	grandparent
Distance : 11

160
Tree	cloned.chars
Code	cloned.chars
Distance : 11

161
Tree	NullArgumentException
Code	NullArgumentException
Distance : 11

162
Tree	defineSlot
Code	defineSlot
Distance : 11

163
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 11

164
Tree	public
Code	public
Distance : 11

165
Tree	expectedFeatures
Code	expectedFeatures
Distance : 11

166
Tree	fraction
Code	fraction
Distance : 11

167
Tree	stdDev
Code	stdDev
Distance : 11

168
Tree	drawZoomRectangle
Code	drawZoomRectangle
Distance : 11

169
Tree	constructor
Code	constructor
Distance : 11

170
Tree	stub
Code	stub
Distance : 11

171
Tree	StaticTypedSlot
Code	StaticTypedSlot
Distance : 11

172
Tree	comparison
Code	comparison
Distance : 11

173
Tree	ak2
Code	ak2
Distance : 11

174
Tree	dev
Code	dev
Distance : 11

175
Tree	checks
Code	checks
Distance : 11

176
Tree	minadj
Code	minadj
Distance : 11

177
Tree	newLiteralNode
Code	newLiteralNode
Distance : 11

178
Tree	lhs.length
Code	lhs.length
Distance : 11

179
Tree	return
Code	return
Distance : 10

180
Tree	separator
Code	separator
Distance : 11

181
Tree	removeUnusedProperties
Code	removeUnusedProperties
Distance : 11

182
Tree	Preconditions
Code	Preconditions
Distance : 11

183
Tree	Property
Code	Property
Distance : 11

184
Tree	cjs
Code	cjs
Distance : 11

185
Tree	Assert
Code	Assert
Distance : 11

186
Tree	markConstructorToProcess
Code	markConstructorToProcess
Distance : 11

187
Tree	Callback
Code	Callback
Distance : 11

188
Tree	s
Code	s
Distance : 11

189
Tree	handleGet
Code	handleGet
Distance : 11

190
Tree	renamer
Code	renamer
Distance : 11

191
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 11

192
Tree	Range
Code	Range
Distance : 11

193
Tree	throw
Code	throw
Distance : 11

194
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 11

195
Tree	leftType
Code	leftType
Distance : 11

196
Tree	parent
Code	parent
Distance : 11

197
Tree	findDeclaredNames
Code	findDeclaredNames
Distance : 11

198
Tree	rightType
Code	rightType
Distance : 11

199
Tree	TypeMismatch
Code	TypeMismatch
Distance : 11

========================================================================


========================================================================
Example Number: 69
Parent Code is: 
if ( divisor.isZero ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor.isZero ) { return NaN ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=divisor.isZero}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=divisor.isZero}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/46/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } length
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } length
Distance : 5

1
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } (
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } (
Distance : 5

2
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } )
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } )
Distance : 5

3
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } serialised
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } serialised
Distance : 5

4
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } parent
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } parent
Distance : 5

5
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } createIllegalArgumentException
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } createIllegalArgumentException
Distance : 5

6
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } boolean
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } boolean
Distance : 5

7
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } result
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } result
Distance : 5

8
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } void
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } void
Distance : 5

9
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertEquals
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertEquals
Distance : 5

10
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } IllegalArgumentException
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } IllegalArgumentException
Distance : 5

11
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } !
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } !
Distance : 5

12
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } i
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } i
Distance : 5

13
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } false
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } false
Distance : 5

14
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } test
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } test
Distance : 5

15
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } double
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } double
Distance : 5

16
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } int
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } int
Distance : 5

17
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Preconditions
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Preconditions
Distance : 5

18
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } &&
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } &&
Distance : 5

19
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } value
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } value
Distance : 5

20
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } isNormalBlock
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } isNormalBlock
Distance : 5

21
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } s
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } s
Distance : 5

22
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } (
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } (
Distance : 5

23
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } contains
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } contains
Distance : 5

24
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <blank>
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <blank>
Distance : 5

25
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } x
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } x
Distance : 5

26
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getInstance
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getInstance
Distance : 5

27
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } t
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } t
Distance : 5

28
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Integer
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Integer
Distance : 5

29
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } reportCodeChange
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } reportCodeChange
Distance : 5

30
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } expected
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } expected
Distance : 5

31
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } join
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } join
Distance : 5

32
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertThat
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertThat
Distance : 5

33
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } invocation
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } invocation
Distance : 5

34
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } FastMath
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } FastMath
Distance : 5

35
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } add
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } add
Distance : 5

36
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkArgument
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkArgument
Distance : 5

37
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } name
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } name
Distance : 5

38
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } @
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } @
Distance : 5

39
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } str
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } str
Distance : 5

40
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } type
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } type
Distance : 5

41
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } paint
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } paint
Distance : 5

42
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } m
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } m
Distance : 5

43
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } fireChangeEvent
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } fireChangeEvent
Distance : 5

44
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ArrayList
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ArrayList
Distance : 5

45
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } LINE_JOINER
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } LINE_JOINER
Distance : 5

46
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } testSame
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } testSame
Distance : 5

47
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <s>
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <s>
Distance : 5

48
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } *
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } *
Distance : 5

49
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } nullNotPermitted
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } nullNotPermitted
Distance : 5

50
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } instant
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } instant
Distance : 5

51
Tree	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Distance : 4

52
Tree	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Distance : 4

53
Tree	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Distance : 4

54
Tree	if ( divisor.isZero ) { return NaN ? NaN : INF ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : INF ; }
Distance : 4

55
Tree	if ( divisor.isZero ) { return NaN ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : isZero ; }
Distance : 4

56
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; }
Distance : 4

57
Tree	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Distance : 4

58
Tree	if ( divisor.isZero ) { return NaN ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : isZero ; }
Distance : 4

59
Tree	if ( divisor.isZero ) { return isZero ? isZero : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : NaN ; }
Distance : 4

60
Tree	if ( divisor.isZero ) { return NaN ? NaN : INF ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : INF ; }
Distance : 4

61
Tree	if ( divisor.isZero ) { return isZero ? isZero : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : NaN ; }
Distance : 4

62
Tree	if ( divisor.isZero ) { return isZero ? isZero : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : isZero ; }
Distance : 5

63
Tree	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Distance : 4

64
Tree	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Distance : 4

65
Tree	if ( divisor.isZero ) { return isZero ? isZero : INF ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : INF ; }
Distance : 5

66
Tree	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Distance : 4

67
Tree	if ( divisor.isZero ) { return isZero ? isZero : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : isZero ; }
Distance : 5

68
Tree	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : NaN ; }
Distance : 4

69
Tree	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Distance : 4

70
Tree	if ( divisor.isZero ) { return isZero ? isZero : INF ; }
Code	if ( divisor.isZero ) { return isZero ? isZero : INF ; }
Distance : 5

71
Tree	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Distance : 4

72
Tree	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : isZero ; }
Distance : 4

73
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } obj
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } obj
Distance : 5

74
Tree	if ( divisor.isZero ) { return NaN ? isZero : NaN ; }
Code	if ( divisor.isZero ) { return NaN ? isZero : NaN ; }
Distance : 4

75
Tree	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Code	if ( divisor.isZero ) { return isZero ? NaN : INF ; }
Distance : 4

76
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } reportMatcher
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } reportMatcher
Distance : 5

77
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkState
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkState
Distance : 5

78
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } super
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } super
Distance : 5

79
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } a
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } a
Distance : 5

80
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } class
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } class
Distance : 5

81
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } !=
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } !=
Distance : 5

82
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } TestUtilities
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } TestUtilities
Distance : 5

83
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Invocation
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Invocation
Distance : 5

84
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } equals
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } equals
Distance : 5

85
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } externs
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } externs
Distance : 5

86
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertTrue
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } assertTrue
Distance : 5

87
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } notifyListeners
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } notifyListeners
Distance : 5

88
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } d
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } d
Distance : 5

89
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mock
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mock
Distance : 5

90
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } MathRuntimeException
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } MathRuntimeException
Distance : 5

91
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mode
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mode
Distance : 5

92
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } {}
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } {}
Distance : 5

93
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Object
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Object
Distance : 5

94
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Override
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Override
Distance : 5

95
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } for
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } for
Distance : 5

96
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ParamChecks
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ParamChecks
Distance : 5

97
Tree	if ( divisor.isZero ) { return NaN ? isZero : isZero ; }
Code	if ( divisor.isZero ) { return NaN ? isZero : isZero ; }
Distance : 4

98
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } else
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } else
Distance : 5

99
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; }
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; }
Distance : 4

100
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } out
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } out
Distance : 5

101
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } List
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } List
Distance : 5

102
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <>
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <>
Distance : 5

103
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } catch
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } catch
Distance : 5

104
Tree	if ( divisor.isZero ) { return NaN ? isZero : INF ; }
Code	if ( divisor.isZero ) { return NaN ? isZero : INF ; }
Distance : 4

105
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } JSType
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } JSType
Distance : 5

106
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Class
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Class
Distance : 5

107
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } :
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } :
Distance : 5

108
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } p
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } p
Distance : 5

109
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } root
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } root
Distance : 5

110
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } wanted
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } wanted
Distance : 5

111
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Math
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Math
Distance : 5

112
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } options
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } options
Distance : 5

113
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } this
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } this
Distance : 5

114
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } return
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } return
Distance : 5

115
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } source
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } source
Distance : 5

116
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } try
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } try
Distance : 5

117
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ()
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ()
Distance : 5

118
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ,
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ,
Distance : 5

119
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } []
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } []
Distance : 5

120
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } n
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } n
Distance : 5

121
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } +
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } +
Distance : 5

122
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } public
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } public
Distance : 5

123
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } null
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } null
Distance : 5

124
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } String
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } String
Distance : 5

125
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } e
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } e
Distance : 5

126
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } compiler
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } compiler
Distance : 5

127
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } throw
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } throw
Distance : 5

128
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } STRING_CONSTANT
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } STRING_CONSTANT
Distance : 5

129
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } =
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } =
Distance : 5

130
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } {
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } {
Distance : 5

131
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } }
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } }
Distance : 5

132
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } .
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } .
Distance : 5

133
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ;
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ;
Distance : 5

134
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } new
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } new
Distance : 5

135
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NUMBER_CONSTANT
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NUMBER_CONSTANT
Distance : 5

136
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } abs
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } abs
Distance : 5

137
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } final
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } final
Distance : 5

138
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } true
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } true
Distance : 5

139
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } StringBuilder
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } StringBuilder
Distance : 5

140
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } stroke
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } stroke
Distance : 5

141
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } traverseEs6
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } traverseEs6
Distance : 5

142
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } LanguageMode.ECMASCRIPT_2015
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

143
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } chrono
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } chrono
Distance : 5

144
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } b
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } b
Distance : 5

145
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } PeriodType
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } PeriodType
Distance : 5

146
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <=
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <=
Distance : 5

147
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Assert
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Assert
Distance : 5

148
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Fraction
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Fraction
Distance : 5

149
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } <
Distance : 5

150
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkNotNull
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } checkNotNull
Distance : 5

151
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ?
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ?
Distance : 5

152
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } long
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } long
Distance : 5

153
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ]
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ]
Distance : 5

154
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } -
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } -
Distance : 5

155
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } TestUtils
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } TestUtils
Distance : 5

156
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } T
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } T
Distance : 5

157
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } [
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } [
Distance : 5

158
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } if
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } if
Distance : 5

159
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } verify
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } verify
Distance : 5

160
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } lines
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } lines
Distance : 5

161
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } toString
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } toString
Distance : 5

162
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } c
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } c
Distance : 5

163
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } v
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } v
Distance : 5

164
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } >
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } >
Distance : 5

165
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Test
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Test
Distance : 5

166
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } static
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } static
Distance : 5

167
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } /
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } /
Distance : 5

168
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Exception
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Exception
Distance : 5

169
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } MutableTimePeriod
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } MutableTimePeriod
Distance : 5

170
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } size
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } size
Distance : 5

171
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Node
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Node
Distance : 5

172
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mockingProgress
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } mockingProgress
Distance : 5

173
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getParent
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getParent
Distance : 5

174
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getMessage
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } getMessage
Distance : 5

175
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } stream
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } stream
Distance : 5

176
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } values
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } values
Distance : 5

177
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NodeUtil
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NodeUtil
Distance : 5

178
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } data
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } data
Distance : 5

179
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ex
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ex
Distance : 5

180
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NodeTraversal
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } NodeTraversal
Distance : 5

181
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Args
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } Args
Distance : 5

182
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } setUp
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } setUp
Distance : 5

183
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } field
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } field
Distance : 5

184
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } js
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } js
Distance : 5

185
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } char
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } char
Distance : 5

186
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } index
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } index
Distance : 5

187
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } node
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } node
Distance : 5

188
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } invocations
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } invocations
Distance : 5

189
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } protected
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } protected
Distance : 5

190
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } return;
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } return;
Distance : 5

191
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } get
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } get
Distance : 5

192
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } isEmpty
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } isEmpty
Distance : 5

193
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } array
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } array
Distance : 5

194
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } setAcceptedLanguage
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } setAcceptedLanguage
Distance : 5

195
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } f
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } f
Distance : 5

196
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } fail
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } fail
Distance : 5

197
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ==
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } ==
Distance : 5

198
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } StrBuilder
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } StrBuilder
Distance : 5

199
Tree	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } matcher
Code	if ( divisor.isZero ) { return NaN ? NaN : NaN ; } matcher
Distance : 5

========================================================================


========================================================================
Example Number: 70
Parent Code is: 
{ super ( populationLimit ) ; this . elitismRate = elitismRate ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( populationLimit ) ; setElitismRate ( elitismRate ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=elitismRate})) (204{val==}) (800{val=elitismRate})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setElitismRate}) (214{val=(}) (800{val=elitismRate}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/35/parent/src_main_java_org_apache_commons_math3_genetics_ElitisticListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{
Code	{
Distance : 11

1
Tree	anchor
Code	anchor
Distance : 12

2
Tree	last
Code	last
Distance : 12

3
Tree	distribution
Code	distribution
Distance : 12

4
Tree	null
Code	null
Distance : 12

5
Tree	TranslationTransform
Code	TranslationTransform
Distance : 12

6
Tree	zFormat
Code	zFormat
Distance : 12

7
Tree	checkInitialize
Code	checkInitialize
Distance : 12

8
Tree	mean
Code	mean
Distance : 12

9
Tree	Function
Code	Function
Distance : 12

10
Tree	sample1
Code	sample1
Distance : 12

11
Tree	i
Code	i
Distance : 12

12
Tree	newValues
Code	newValues
Distance : 12

13
Tree	)
Code	)
Distance : 11

14
Tree	testTypes
Code	testTypes
Distance : 12

15
Tree	N
Code	N
Distance : 12

16
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 12

17
Tree	source.moment
Code	source.moment
Distance : 12

18
Tree	continue;
Code	continue;
Distance : 12

19
Tree	mapToSelf
Code	mapToSelf
Distance : 12

20
Tree	YearWeekType
Code	YearWeekType
Distance : 12

21
Tree	codingConvention
Code	codingConvention
Distance : 12

22
Tree	extends
Code	extends
Distance : 12

23
Tree	return
Code	return
Distance : 12

24
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 12

25
Tree	Array
Code	Array
Distance : 12

26
Tree	ds
Code	ds
Distance : 12

27
Tree	traversal
Code	traversal
Distance : 12

28
Tree	doNothing
Code	doNothing
Distance : 12

29
Tree	RegularizedGamma.P
Code	RegularizedGamma.P
Distance : 12

30
Tree	testModules
Code	testModules
Distance : 12

31
Tree	+=
Code	+=
Distance : 12

32
Tree	Result
Code	Result
Distance : 12

33
Tree	TypeInferenceMode.BOTH
Code	TypeInferenceMode.BOTH
Distance : 12

34
Tree	mockingProgress
Code	mockingProgress
Distance : 12

35
Tree	rhs
Code	rhs
Distance : 12

36
Tree	real
Code	real
Distance : 12

37
Tree	stream
Code	stream
Distance : 12

38
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 12

39
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 12

40
Tree	setField
Code	setField
Distance : 12

41
Tree	argument
Code	argument
Distance : 12

42
Tree	NodeUtil
Code	NodeUtil
Distance : 12

43
Tree	position
Code	position
Distance : 12

44
Tree	chronology
Code	chronology
Distance : 12

45
Tree	registeredInvocations
Code	registeredInvocations
Distance : 12

46
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

47
Tree	text
Code	text
Distance : 12

48
Tree	startParams
Code	startParams
Distance : 12

49
Tree	createRegression
Code	createRegression
Distance : 12

50
Tree	ArithmeticUtils
Code	ArithmeticUtils
Distance : 12

51
Tree	MockControl
Code	MockControl
Distance : 12

52
Tree	&
Code	&
Distance : 12

53
Tree	str
Code	str
Distance : 12

54
Tree	checks
Code	checks
Distance : 12

55
Tree	numeratorDegreesOfFreedom
Code	numeratorDegreesOfFreedom
Distance : 12

56
Tree	coeff1
Code	coeff1
Distance : 12

57
Tree	bits
Code	bits
Distance : 12

58
Tree	strictly
Code	strictly
Distance : 12

59
Tree	addConsecutiveAnswer
Code	addConsecutiveAnswer
Distance : 12

60
Tree	Mockito
Code	Mockito
Distance : 12

61
Tree	msgNode
Code	msgNode
Distance : 12

62
Tree	rule
Code	rule
Distance : 12

63
Tree	margin
Code	margin
Distance : 12

64
Tree	forward
Code	forward
Distance : 12

65
Tree	mRule
Code	mRule
Distance : 12

66
Tree	RenameLabels
Code	RenameLabels
Distance : 12

67
Tree	separator
Code	separator
Distance : 12

68
Tree	abstract
Code	abstract
Distance : 12

69
Tree	removeChild
Code	removeChild
Distance : 12

70
Tree	Token.DEFAULT_CASE
Code	Token.DEFAULT_CASE
Distance : 12

71
Tree	sampleStats
Code	sampleStats
Distance : 12

72
Tree	seed
Code	seed
Distance : 12

73
Tree	stroke
Code	stroke
Distance : 12

74
Tree	objects
Code	objects
Distance : 12

75
Tree	isForward
Code	isForward
Distance : 12

76
Tree	()
Code	()
Distance : 12

77
Tree	denominatorDegreesOfFreedom
Code	denominatorDegreesOfFreedom
Distance : 12

78
Tree	penalty
Code	penalty
Distance : 12

79
Tree	cause
Code	cause
Distance : 12

80
Tree	ComposableFunction.CEIL
Code	ComposableFunction.CEIL
Distance : 12

81
Tree	config
Code	config
Distance : 12

82
Tree	iStartMillis
Code	iStartMillis
Distance : 12

83
Tree	getArgumentMatcherStorage
Code	getArgumentMatcherStorage
Distance : 12

84
Tree	formatter
Code	formatter
Distance : 12

85
Tree	checkSignificanceLevel
Code	checkSignificanceLevel
Distance : 12

86
Tree	Color
Code	Color
Distance : 12

87
Tree	flag
Code	flag
Distance : 12

88
Tree	assign
Code	assign
Distance : 12

89
Tree	hotSwapTranspile
Code	hotSwapTranspile
Distance : 12

90
Tree	isFunction
Code	isFunction
Distance : 12

91
Tree	GJEraDateTimeField
Code	GJEraDateTimeField
Distance : 12

92
Tree	FunctionUtils
Code	FunctionUtils
Distance : 12

93
Tree	Gamma
Code	Gamma
Distance : 12

94
Tree	Integer.MAX_VALUE
Code	Integer.MAX_VALUE
Distance : 12

95
Tree	root
Code	root
Distance : 12

96
Tree	LastArguments
Code	LastArguments
Distance : 12

97
Tree	SerialUtils
Code	SerialUtils
Distance : 12

98
Tree	assertTrue
Code	assertTrue
Distance : 12

99
Tree	catch
Code	catch
Distance : 12

100
Tree	this
Code	this
Distance : 12

101
Tree	:
Code	:
Distance : 12

102
Tree	fieldType
Code	fieldType
Distance : 12

103
Tree	{}
Code	{}
Distance : 12

104
Tree	paint
Code	paint
Distance : 12

105
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 12

106
Tree	++
Code	++
Distance : 12

107
Tree	ret
Code	ret
Distance : 12

108
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 12

109
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 12

110
Tree	out.value
Code	out.value
Distance : 12

111
Tree	;
Code	;
Distance : 11

112
Tree	doAnswer
Code	doAnswer
Distance : 12

113
Tree	logBeta
Code	logBeta
Distance : 12

114
Tree	Comparable
Code	Comparable
Distance : 12

115
Tree	synchronized
Code	synchronized
Distance : 12

116
Tree	defaultWriteObject
Code	defaultWriteObject
Distance : 12

117
Tree	MOCKITO_CORE
Code	MOCKITO_CORE
Distance : 12

118
Tree	verify
Code	verify
Distance : 12

119
Tree	]
Code	]
Distance : 12

120
Tree	break;
Code	break;
Distance : 12

121
Tree	for
Code	for
Distance : 12

122
Tree	protected
Code	protected
Distance : 12

123
Tree	try
Code	try
Distance : 12

124
Tree	if
Code	if
Distance : 12

125
Tree	final
Code	final
Distance : 12

126
Tree	static
Code	static
Distance : 12

127
Tree	mockitoStubber
Code	mockitoStubber
Distance : 12

128
Tree	@
Code	@
Distance : 12

129
Tree	(
Code	(
Distance : 11

130
Tree	
Code	
Distance : 12

131
Tree	super();
Code	super();
Distance : 12

132
Tree	Paint
Code	Paint
Distance : 12

133
Tree	scriptRoot
Code	scriptRoot
Distance : 12

134
Tree	stubber
Code	stubber
Distance : 12

135
Tree	AbstractScope
Code	AbstractScope
Distance : 12

136
Tree	checkArgument
Code	checkArgument
Distance : 12

137
Tree	<=
Code	<=
Distance : 12

138
Tree	Args
Code	Args
Distance : 12

139
Tree	value
Code	value
Distance : 12

140
Tree	public
Code	public
Distance : 12

141
Tree	new
Code	new
Distance : 12

142
Tree	IMethods
Code	IMethods
Distance : 12

143
Tree	float
Code	float
Distance : 12

144
Tree	throwable
Code	throwable
Distance : 12

145
Tree	returnZero
Code	returnZero
Distance : 12

146
Tree	invocationContainerImpl
Code	invocationContainerImpl
Distance : 12

147
Tree	init
Code	init
Distance : 12

148
Tree	&&
Code	&&
Distance : 12

149
Tree	getLastArguments
Code	getLastArguments
Distance : 12

150
Tree	fail
Code	fail
Distance : 12

151
Tree	returnChar
Code	returnChar
Distance : 12

152
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 12

153
Tree	CharSequence
Code	CharSequence
Distance : 12

154
Tree	checkNotNull
Code	checkNotNull
Distance : 12

155
Tree	scale
Code	scale
Distance : 12

156
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 12

157
Tree	setStartMillis
Code	setStartMillis
Distance : 12

158
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

159
Tree	Answer
Code	Answer
Distance : 12

160
Tree	key
Code	key
Distance : 12

161
Tree	getEndMillis
Code	getEndMillis
Distance : 12

162
Tree	addAnswer
Code	addAnswer
Distance : 12

163
Tree	FastMath
Code	FastMath
Distance : 12

164
Tree	doReturn
Code	doReturn
Distance : 12

165
Tree	LogBeta
Code	LogBeta
Distance : 12

166
Tree	reportNot
Code	reportNot
Distance : 12

167
Tree	-
Code	-
Distance : 12

168
Tree	Assert
Code	Assert
Distance : 12

169
Tree	index
Code	index
Distance : 12

170
Tree	fn
Code	fn
Distance : 12

171
Tree	node
Code	node
Distance : 12

172
Tree	j
Code	j
Distance : 12

173
Tree	Rectangle2D
Code	Rectangle2D
Distance : 12

174
Tree	reportAnd
Code	reportAnd
Distance : 12

175
Tree	validateNodeType
Code	validateNodeType
Distance : 12

176
Tree	iValues
Code	iValues
Distance : 12

177
Tree	T
Code	T
Distance : 12

178
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

179
Tree	doThrow
Code	doThrow
Distance : 12

180
Tree	k
Code	k
Distance : 12

181
Tree	checkState
Code	checkState
Distance : 12

182
Tree	stub
Code	stub
Distance : 12

183
Tree	Percentile.EstimationType
Code	Percentile.EstimationType
Distance : 12

184
Tree	random
Code	random
Distance : 12

185
Tree	do
Code	do
Distance : 12

186
Tree	setSeedInternal
Code	setSeedInternal
Distance : 12

187
Tree	messageContains
Code	messageContains
Distance : 12

188
Tree	notNull
Code	notNull
Distance : 12

189
Tree	MathArrays
Code	MathArrays
Distance : 12

190
Tree	testError
Code	testError
Distance : 12

191
Tree	private
Code	private
Distance : 12

192
Tree	numerator
Code	numerator
Distance : 12

193
Tree	reportOr
Code	reportOr
Distance : 12

194
Tree	putBooleanProp
Code	putBooleanProp
Distance : 12

195
Tree	jUnitRule
Code	jUnitRule
Distance : 12

196
Tree	padding
Code	padding
Distance : 12

197
Tree	stubVoid
Code	stubVoid
Distance : 12

198
Tree	TestUtils
Code	TestUtils
Distance : 12

199
Tree	LanguageMode.ECMASCRIPT_2015
Code	LanguageMode.ECMASCRIPT_2015
Distance : 12

========================================================================


========================================================================
Example Number: 71
Parent Code is: 
{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( chromosomes , populationLimit ) ; setElitismRate ( elitismRate ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=elitismRate})) (204{val==}) (800{val=elitismRate})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setElitismRate}) (214{val=(}) (800{val=elitismRate}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/35/parent/src_main_java_org_apache_commons_math3_genetics_ElitisticListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } c
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } c
Distance : 5

1
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = chromosomes ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = chromosomes ; }
Distance : 5

2
Tree	{ super ( populationLimit , elitismRate ) ; this . populationLimit = elitismRate ; }
Code	{ super ( populationLimit , elitismRate ) ; this . populationLimit = elitismRate ; }
Distance : 7

3
Tree	{ super ( elitismRate , elitismRate ) ; this . elitismRate = populationLimit ; }
Code	{ super ( elitismRate , elitismRate ) ; this . elitismRate = populationLimit ; }
Distance : 6

4
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = chromosomes ; }
Distance : 5

5
Tree	{ super ( populationLimit , populationLimit ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . chromosomes = elitismRate ; }
Distance : 6

6
Tree	{ super ( elitismRate , elitismRate ) ; this . populationLimit = elitismRate ; }
Code	{ super ( elitismRate , elitismRate ) ; this . populationLimit = elitismRate ; }
Distance : 7

7
Tree	{ super ( populationLimit , populationLimit ) ; this . populationLimit = populationLimit ; }
Code	{ super ( populationLimit , populationLimit ) ; this . populationLimit = populationLimit ; }
Distance : 6

8
Tree	{ super ( elitismRate , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 6

9
Tree	{ super ( populationLimit , elitismRate ) ; this . elitismRate = populationLimit ; }
Code	{ super ( populationLimit , elitismRate ) ; this . elitismRate = populationLimit ; }
Distance : 6

10
Tree	{ super ( elitismRate , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 6

11
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = populationLimit ; }
Distance : 5

12
Tree	{ super ( populationLimit , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 6

13
Tree	{ super ( chromosomes , elitismRate ) ; this . elitismRate = elitismRate ; }
Code	{ super ( chromosomes , elitismRate ) ; this . elitismRate = elitismRate ; }
Distance : 5

14
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 4

15
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 5

16
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 5

17
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 5

18
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 5

19
Tree	{ super ( chromosomes , elitismRate ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , elitismRate ) ; this . elitismRate = populationLimit ; }
Distance : 5

20
Tree	{ super ( chromosomes , elitismRate ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , elitismRate ) ; this . populationLimit = elitismRate ; }
Distance : 6

21
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = chromosomes ; }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = chromosomes ; }
Distance : 4

22
Tree	{ super ( chromosomes , chromosomes ) ; this . populationLimit = populationLimit ; }
Code	{ super ( chromosomes , chromosomes ) ; this . populationLimit = populationLimit ; }
Distance : 6

23
Tree	{ super ( chromosomes , populationLimit ) ; this . chromosomes = elitismRate ; }
Code	{ super ( chromosomes , populationLimit ) ; this . chromosomes = elitismRate ; }
Distance : 5

24
Tree	{ super ( chromosomes , populationLimit ) ; this . chromosomes = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . chromosomes = populationLimit ; }
Distance : 5

25
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 6

26
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } field
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } field
Distance : 5

27
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } IllegalArgumentException
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } IllegalArgumentException
Distance : 5

28
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } name
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } name
Distance : 5

29
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } FastMath
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } FastMath
Distance : 5

30
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } reportCodeChange
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } reportCodeChange
Distance : 5

31
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } t
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } t
Distance : 5

32
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } x
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } x
Distance : 5

33
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } invocation
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } invocation
Distance : 5

34
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } parent
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } parent
Distance : 5

35
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } createIllegalArgumentException
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } createIllegalArgumentException
Distance : 5

36
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fireChangeEvent
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fireChangeEvent
Distance : 5

37
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } mode
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } mode
Distance : 5

38
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } LINE_JOINER
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } LINE_JOINER
Distance : 5

39
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } str
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } str
Distance : 5

40
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } expected
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } expected
Distance : 5

41
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Object
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Object
Distance : 5

42
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } testSame
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } testSame
Distance : 5

43
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = chromosomes ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = chromosomes ; }
Distance : 5

44
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = chromosomes ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = chromosomes ; }
Distance : 5

45
Tree	{ super ( chromosomes , elitismRate ) ; this . elitismRate = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . elitismRate = chromosomes ; }
Distance : 5

46
Tree	{ super ( chromosomes , elitismRate ) ; this . populationLimit = populationLimit ; }
Code	{ super ( chromosomes , elitismRate ) ; this . populationLimit = populationLimit ; }
Distance : 6

47
Tree	{ super ( chromosomes , chromosomes ) ; this . chromosomes = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . chromosomes = elitismRate ; }
Distance : 6

48
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } toString
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } toString
Distance : 5

49
Tree	{ super ( populationLimit , chromosomes ) ; this . elitismRate = populationLimit ; }
Code	{ super ( populationLimit , chromosomes ) ; this . elitismRate = populationLimit ; }
Distance : 6

50
Tree	{ super ( chromosomes , chromosomes ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . populationLimit = elitismRate ; }
Distance : 6

51
Tree	{ super ( elitismRate , chromosomes ) ; this . chromosomes = elitismRate ; }
Code	{ super ( elitismRate , chromosomes ) ; this . chromosomes = elitismRate ; }
Distance : 7

52
Tree	{ super ( populationLimit , chromosomes ) ; this . populationLimit = elitismRate ; }
Code	{ super ( populationLimit , chromosomes ) ; this . populationLimit = elitismRate ; }
Distance : 7

53
Tree	{ super ( elitismRate , chromosomes ) ; this . elitismRate = chromosomes ; }
Code	{ super ( elitismRate , chromosomes ) ; this . elitismRate = chromosomes ; }
Distance : 6

54
Tree	{ super ( elitismRate , populationLimit ) ; this . populationLimit = chromosomes ; }
Code	{ super ( elitismRate , populationLimit ) ; this . populationLimit = chromosomes ; }
Distance : 6

55
Tree	{ super ( elitismRate , chromosomes ) ; this . elitismRate = populationLimit ; }
Code	{ super ( elitismRate , chromosomes ) ; this . elitismRate = populationLimit ; }
Distance : 6

56
Tree	{ super ( elitismRate , chromosomes ) ; this . populationLimit = elitismRate ; }
Code	{ super ( elitismRate , chromosomes ) ; this . populationLimit = elitismRate ; }
Distance : 7

57
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 6

58
Tree	{ super ( chromosomes , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 6

59
Tree	{ super ( chromosomes , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 5

60
Tree	{ super ( chromosomes , chromosomes ) ; this . chromosomes = populationLimit ; }
Code	{ super ( chromosomes , chromosomes ) ; this . chromosomes = populationLimit ; }
Distance : 6

61
Tree	{ super ( chromosomes , chromosomes ) ; this . populationLimit = chromosomes ; }
Code	{ super ( chromosomes , chromosomes ) ; this . populationLimit = chromosomes ; }
Distance : 6

62
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 7

63
Tree	{ super ( populationLimit , elitismRate ) ; this . populationLimit = populationLimit ; }
Code	{ super ( populationLimit , elitismRate ) ; this . populationLimit = populationLimit ; }
Distance : 7

64
Tree	{ super ( elitismRate , elitismRate ) ; this . elitismRate = chromosomes ; }
Code	{ super ( elitismRate , elitismRate ) ; this . elitismRate = chromosomes ; }
Distance : 6

65
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 7

66
Tree	{ super ( populationLimit , populationLimit ) ; this . chromosomes = populationLimit ; }
Code	{ super ( populationLimit , populationLimit ) ; this . chromosomes = populationLimit ; }
Distance : 6

67
Tree	{ super ( elitismRate , elitismRate ) ; this . populationLimit = populationLimit ; }
Code	{ super ( elitismRate , elitismRate ) ; this . populationLimit = populationLimit ; }
Distance : 7

68
Tree	{ super ( populationLimit , populationLimit ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . populationLimit = chromosomes ; }
Distance : 6

69
Tree	{ super ( populationLimit , chromosomes ) ; this . elitismRate = chromosomes ; }
Code	{ super ( populationLimit , chromosomes ) ; this . elitismRate = chromosomes ; }
Distance : 6

70
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = elitismRate ; }
Distance : 7

71
Tree	{ super ( elitismRate , populationLimit ) ; this . chromosomes = populationLimit ; }
Code	{ super ( elitismRate , populationLimit ) ; this . chromosomes = populationLimit ; }
Distance : 6

72
Tree	{ super ( elitismRate , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 7

73
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = populationLimit ; }
Distance : 5

74
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 7

75
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 7

76
Tree	{ super ( populationLimit , elitismRate ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit , elitismRate ) ; this . elitismRate = elitismRate ; }
Distance : 6

77
Tree	{ super ( elitismRate , elitismRate ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , elitismRate ) ; this . elitismRate = elitismRate ; }
Distance : 6

78
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 5

79
Tree	{ super ( populationLimit , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 6

80
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 5

81
Tree	{ super ( elitismRate , populationLimit ) ; this . chromosomes = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . chromosomes = elitismRate ; }
Distance : 6

82
Tree	{ super ( populationLimit , elitismRate ) ; this . elitismRate = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . elitismRate = chromosomes ; }
Distance : 6

83
Tree	{ super ( elitismRate , populationLimit ) ; this . populationLimit = populationLimit ; }
Code	{ super ( elitismRate , populationLimit ) ; this . populationLimit = populationLimit ; }
Distance : 6

84
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 6

85
Tree	{ super ( elitismRate , chromosomes ) ; this . populationLimit = populationLimit ; }
Code	{ super ( elitismRate , chromosomes ) ; this . populationLimit = populationLimit ; }
Distance : 7

86
Tree	{ super ( chromosomes , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 6

87
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 7

88
Tree	{ super ( populationLimit , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 7

89
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 7

90
Tree	{ super ( populationLimit , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 6

91
Tree	{ super ( elitismRate , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( elitismRate , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 7

92
Tree	{ super ( elitismRate , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 6

93
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = populationLimit ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = populationLimit ; }
Distance : 7

94
Tree	{ super ( populationLimit , chromosomes ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , chromosomes ) ; this . populationLimit = chromosomes ; }
Distance : 7

95
Tree	{ super ( elitismRate , chromosomes ) ; this . chromosomes = populationLimit ; }
Code	{ super ( elitismRate , chromosomes ) ; this . chromosomes = populationLimit ; }
Distance : 7

96
Tree	{ super ( elitismRate , chromosomes ) ; this . populationLimit = chromosomes ; }
Code	{ super ( elitismRate , chromosomes ) ; this . populationLimit = chromosomes ; }
Distance : 7

97
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 7

98
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ]
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ]
Distance : 5

99
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 4

100
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Preconditions
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Preconditions
Distance : 5

101
Tree	{ super ( populationLimit , chromosomes ) ; this . populationLimit = populationLimit ; }
Code	{ super ( populationLimit , chromosomes ) ; this . populationLimit = populationLimit ; }
Distance : 7

102
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } (
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } (
Distance : 5

103
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } .
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } .
Distance : 5

104
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } }
Distance : 5

105
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } i
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } i
Distance : 5

106
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } assertEquals
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } assertEquals
Distance : 5

107
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } @
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } @
Distance : 5

108
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } []
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } []
Distance : 5

109
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } test
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } test
Distance : 5

110
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } nullNotPermitted
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } nullNotPermitted
Distance : 5

111
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } !
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } !
Distance : 5

112
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } !=
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } !=
Distance : 5

113
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } T
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } T
Distance : 5

114
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkState
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkState
Distance : 5

115
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } double
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } double
Distance : 5

116
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } int
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } int
Distance : 5

117
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } value
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } value
Distance : 5

118
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ==
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ==
Distance : 5

119
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } [
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } [
Distance : 5

120
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } -
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } -
Distance : 5

121
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } m
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } m
Distance : 5

122
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } :
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } :
Distance : 5

123
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ()
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ()
Distance : 5

124
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } class
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } class
Distance : 5

125
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Args
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Args
Distance : 5

126
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Override
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Override
Distance : 5

127
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } v
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } v
Distance : 5

128
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } mock
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } mock
Distance : 5

129
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } f
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } f
Distance : 5

130
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ParamChecks
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ParamChecks
Distance : 5

131
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <>
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <>
Distance : 5

132
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } paint
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } paint
Distance : 5

133
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } {}
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } {}
Distance : 5

134
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } new
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } new
Distance : 5

135
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } MathRuntimeException
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } MathRuntimeException
Distance : 5

136
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } =
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } =
Distance : 5

137
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } final
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } final
Distance : 5

138
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } false
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } false
Distance : 5

139
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkNotNull
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkNotNull
Distance : 5

140
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ArrayList
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ArrayList
Distance : 5

141
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } serialised
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } serialised
Distance : 5

142
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } *
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } *
Distance : 5

143
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } getInstance
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } getInstance
Distance : 5

144
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } boolean
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } boolean
Distance : 5

145
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } result
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } result
Distance : 5

146
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } join
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } join
Distance : 5

147
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } type
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } type
Distance : 5

148
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <
Distance : 5

149
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } lines
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } lines
Distance : 5

150
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } return
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } return
Distance : 5

151
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } this
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } this
Distance : 5

152
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } >
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } >
Distance : 5

153
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } if
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } if
Distance : 5

154
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } public
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } public
Distance : 5

155
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } null
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } null
Distance : 5

156
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NUMBER_CONSTANT
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NUMBER_CONSTANT
Distance : 5

157
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Node
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Node
Distance : 5

158
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ,
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ,
Distance : 5

159
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Integer
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Integer
Distance : 5

160
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } e
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } e
Distance : 5

161
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } String
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } String
Distance : 5

162
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } source
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } source
Distance : 5

163
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } p
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } p
Distance : 5

164
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Math
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Math
Distance : 5

165
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } options
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } options
Distance : 5

166
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Test
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Test
Distance : 5

167
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Class
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Class
Distance : 5

168
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } root
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } root
Distance : 5

169
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } {
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } {
Distance : 5

170
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } assertThat
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } assertThat
Distance : 5

171
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } super
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } super
Distance : 5

172
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } )
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } )
Distance : 5

173
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <s>
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <s>
Distance : 5

174
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } .
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } .
Distance : 5

175
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <blank>
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } <blank>
Distance : 5

176
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ;
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ;
Distance : 5

177
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } +
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } +
Distance : 5

178
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } length
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } length
Distance : 5

179
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } n
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } n
Distance : 5

180
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } compiler
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } compiler
Distance : 5

181
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } TestUtils
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } TestUtils
Distance : 5

182
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } verify
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } verify
Distance : 5

183
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fail
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fail
Distance : 5

184
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } List
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } List
Distance : 5

185
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } array
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } array
Distance : 5

186
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } try
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } try
Distance : 5

187
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } &&
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } &&
Distance : 5

188
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } STRING_CONSTANT
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } STRING_CONSTANT
Distance : 5

189
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } wanted
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } wanted
Distance : 5

190
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ex
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ex
Distance : 5

191
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NodeUtil
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NodeUtil
Distance : 5

192
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } add
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } add
Distance : 5

193
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkArgument
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } checkArgument
Distance : 5

194
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } data
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } data
Distance : 5

195
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NodeTraversal
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } NodeTraversal
Distance : 5

196
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } void
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } void
Distance : 5

197
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } catch
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } catch
Distance : 5

198
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } throw
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } throw
Distance : 5

199
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } true
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } true
Distance : 5

========================================================================


========================================================================
Example Number: 72
Parent Code is: 
{ return chromosomes . iterator () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return getChromosomes () . iterator () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=chromosomes}) (235{val=.}) (802{val=iterator}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getChromosomes}) (216{val=()})) (235{val=.}) (802{val=iterator}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/34/parent/src_main_java_org_apache_commons_math3_genetics_ListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return chromosomes . iterator () ; } values
Code	{ return chromosomes . iterator () ; } values
Distance : 3

1
Tree	{ return chromosomes . iterator () ; } Test
Code	{ return chromosomes . iterator () ; } Test
Distance : 3

2
Tree	{ return chromosomes . iterator () ; } MathRuntimeException
Code	{ return chromosomes . iterator () ; } MathRuntimeException
Distance : 3

3
Tree	{ return chromosomes . iterator () ; } {}
Code	{ return chromosomes . iterator () ; } {}
Distance : 3

4
Tree	{ return chromosomes . iterator () ; } f
Code	{ return chromosomes . iterator () ; } f
Distance : 3

5
Tree	{ return chromosomes . iterator () ; } class
Code	{ return chromosomes . iterator () ; } class
Distance : 3

6
Tree	{ return chromosomes . iterator () ; } -
Code	{ return chromosomes . iterator () ; } -
Distance : 3

7
Tree	{ return chromosomes . iterator () ; } Preconditions
Code	{ return chromosomes . iterator () ; } Preconditions
Distance : 3

8
Tree	{ return chromosomes . iterator () ; } T
Code	{ return chromosomes . iterator () ; } T
Distance : 3

9
Tree	{ return chromosomes . iterator () ; } &&
Code	{ return chromosomes . iterator () ; } &&
Distance : 3

10
Tree	{ return chromosomes . iterator () ; } ]
Code	{ return chromosomes . iterator () ; } ]
Distance : 3

11
Tree	{ return chromosomes . iterator () ; } [
Code	{ return chromosomes . iterator () ; } [
Distance : 3

12
Tree	{ return chromosomes . iterator () ; } Object
Code	{ return chromosomes . iterator () ; } Object
Distance : 3

13
Tree	{ return chromosomes . iterator () ; } ParamChecks
Code	{ return chromosomes . iterator () ; } ParamChecks
Distance : 3

14
Tree	{ return chromosomes . iterator () ; } test
Code	{ return chromosomes . iterator () ; } test
Distance : 3

15
Tree	{ return chromosomes . iterator () ; } @
Code	{ return chromosomes . iterator () ; } @
Distance : 3

16
Tree	{ return chromosomes . iterator () ; } !
Code	{ return chromosomes . iterator () ; } !
Distance : 3

17
Tree	{ return chromosomes . iterator () ; } assertEquals
Code	{ return chromosomes . iterator () ; } assertEquals
Distance : 3

18
Tree	{ return chromosomes . iterator () ; } ==
Code	{ return chromosomes . iterator () ; } ==
Distance : 3

19
Tree	{ return chromosomes . iterator () ; } void
Code	{ return chromosomes . iterator () ; } void
Distance : 3

20
Tree	{ return chromosomes . iterator () ; } []
Code	{ return chromosomes . iterator () ; } []
Distance : 3

21
Tree	{ return chromosomes . iterator () ; } checkState
Code	{ return chromosomes . iterator () ; } checkState
Distance : 3

22
Tree	{ return chromosomes . iterator () ; } toString
Code	{ return chromosomes . iterator () ; } toString
Distance : 3

23
Tree	{ return chromosomes . iterator () ; } protected
Code	{ return chromosomes . iterator () ; } protected
Distance : 3

24
Tree	{ return chromosomes . iterator () ; } nullNotPermitted
Code	{ return chromosomes . iterator () ; } nullNotPermitted
Distance : 3

25
Tree	{ return chromosomes . iterator () ; } e
Code	{ return chromosomes . iterator () ; } e
Distance : 3

26
Tree	{ return chromosomes . iterator () ; } super
Code	{ return chromosomes . iterator () ; } super
Distance : 3

27
Tree	{ return chromosomes . iterator () ; } i
Code	{ return chromosomes . iterator () ; } i
Distance : 3

28
Tree	{ return chromosomes . iterator () ; } mock
Code	{ return chromosomes . iterator () ; } mock
Distance : 3

29
Tree	{ return chromosomes . iterator () ; } Override
Code	{ return chromosomes . iterator () ; } Override
Distance : 3

30
Tree	{ return chromosomes . iterator () ; } public
Code	{ return chromosomes . iterator () ; } public
Distance : 3

31
Tree	{ return chromosomes . iterator () ; } >
Code	{ return chromosomes . iterator () ; } >
Distance : 3

32
Tree	{ return chromosomes . iterator () ; } new
Code	{ return chromosomes . iterator () ; } new
Distance : 3

33
Tree	{ return chromosomes . iterator () ; } STRING_CONSTANT
Code	{ return chromosomes . iterator () ; } STRING_CONSTANT
Distance : 3

34
Tree	{ return chromosomes . iterator () ; } ,
Code	{ return chromosomes . iterator () ; } ,
Distance : 3

35
Tree	{ return chromosomes . iterator () ; } .
Code	{ return chromosomes . iterator () ; } .
Distance : 3

36
Tree	{ return chromosomes . iterator () ; } }
Code	{ return chromosomes . iterator () ; } }
Distance : 3

37
Tree	{ return chromosomes . iterator () ; } =
Code	{ return chromosomes . iterator () ; } =
Distance : 3

38
Tree	{ return chromosomes . iterator () ; } (
Code	{ return chromosomes . iterator () ; } (
Distance : 3

39
Tree	{ return chromosomes . iterator () ; } <s>
Code	{ return chromosomes . iterator () ; } <s>
Distance : 3

40
Tree	{ return chromosomes . iterator () ; } <blank>
Code	{ return chromosomes . iterator () ; } <blank>
Distance : 3

41
Tree	{ return chromosomes . iterator () ; } return
Code	{ return chromosomes . iterator () ; } return
Distance : 3

42
Tree	{ return chromosomes . iterator () ; } )
Code	{ return chromosomes . iterator () ; } )
Distance : 3

43
Tree	{ return chromosomes . iterator () ; } ;
Code	{ return chromosomes . iterator () ; } ;
Distance : 3

44
Tree	{ return chromosomes . iterator () ; } ()
Code	{ return chromosomes . iterator () ; } ()
Distance : 3

45
Tree	{ return chromosomes . iterator () ; } {
Code	{ return chromosomes . iterator () ; } {
Distance : 3

46
Tree	{ return chromosomes . iterator () ; } false
Code	{ return chromosomes . iterator () ; } false
Distance : 3

47
Tree	{ return chromosomes . iterator () ; } int
Code	{ return chromosomes . iterator () ; } int
Distance : 3

48
Tree	{ return chromosomes . iterator () ; } double
Code	{ return chromosomes . iterator () ; } double
Distance : 3

49
Tree	{ return chromosomes . iterator () ; } n
Code	{ return chromosomes . iterator () ; } n
Distance : 3

50
Tree	{ return chromosomes . iterator () ; } matcher
Code	{ return chromosomes . iterator () ; } matcher
Distance : 3

51
Tree	{ return chromosomes . iterator () ; } NUMBER_CONSTANT
Code	{ return chromosomes . iterator () ; } NUMBER_CONSTANT
Distance : 3

52
Tree	{ return chromosomes . iterator () ; } this
Code	{ return chromosomes . iterator () ; } this
Distance : 3

53
Tree	{ return chromosomes . iterator () ; } final
Code	{ return chromosomes . iterator () ; } final
Distance : 3

54
Tree	{ return chromosomes . iterator () ; } name
Code	{ return chromosomes . iterator () ; } name
Distance : 3

55
Tree	{ return chromosomes . iterator () ; } t
Code	{ return chromosomes . iterator () ; } t
Distance : 3

56
Tree	{ return chromosomes . iterator () ; } solver
Code	{ return chromosomes . iterator () ; } solver
Distance : 3

57
Tree	{ return chromosomes . iterator () ; } getField
Code	{ return chromosomes . iterator () ; } getField
Distance : 3

58
Tree	{ return chromosomes . iterator () ; } pattern
Code	{ return chromosomes . iterator () ; } pattern
Distance : 3

59
Tree	{ return chromosomes . iterator () ; } out
Code	{ return chromosomes . iterator () ; } out
Distance : 3

60
Tree	{ return chromosomes . iterator () ; } Collection
Code	{ return chromosomes . iterator () ; } Collection
Distance : 3

61
Tree	{ return chromosomes . iterator () ; } mode
Code	{ return chromosomes . iterator () ; } mode
Distance : 3

62
Tree	{ return chromosomes . iterator () ; } mockingProgress
Code	{ return chromosomes . iterator () ; } mockingProgress
Distance : 3

63
Tree	{ return chromosomes . iterator () ; } return;
Code	{ return chromosomes . iterator () ; } return;
Distance : 3

64
Tree	{ return chromosomes . iterator () ; } char
Code	{ return chromosomes . iterator () ; } char
Distance : 3

65
Tree	{ return chromosomes . iterator () ; } get
Code	{ return chromosomes . iterator () ; } get
Distance : 3

66
Tree	{ return chromosomes . iterator () ; } static
Code	{ return chromosomes . iterator () ; } static
Distance : 3

67
Tree	{ return chromosomes . iterator () ; } setAcceptedLanguage
Code	{ return chromosomes . iterator () ; } setAcceptedLanguage
Distance : 3

68
Tree	{ return chromosomes . iterator () ; } JSType
Code	{ return chromosomes . iterator () ; } JSType
Distance : 3

69
Tree	{ return chromosomes . iterator () ; } isEmpty
Code	{ return chromosomes . iterator () ; } isEmpty
Distance : 3

70
Tree	{ return chromosomes . iterator () ; } else
Code	{ return chromosomes . iterator () ; } else
Distance : 3

71
Tree	{ return chromosomes . iterator () ; } true
Code	{ return chromosomes . iterator () ; } true
Distance : 3

72
Tree	{ return chromosomes . iterator () ; } return
Code	{ return chromosomes . iterator () ; } return
Distance : 3

73
Tree	{ return chromosomes . iterator () ; } if
Code	{ return chromosomes . iterator () ; } if
Distance : 3

74
Tree	{ return chromosomes . iterator () ; } getMessage
Code	{ return chromosomes . iterator () ; } getMessage
Distance : 3

75
Tree	{ return chromosomes . iterator () ; } <
Code	{ return chromosomes . iterator () ; } <
Distance : 3

76
Tree	{ return chromosomes . iterator () ; } dataset
Code	{ return chromosomes . iterator () ; } dataset
Distance : 3

77
Tree	{ return chromosomes . iterator () ; } getChronology
Code	{ return chromosomes . iterator () ; } getChronology
Distance : 3

78
Tree	{ return chromosomes . iterator () ; } js
Code	{ return chromosomes . iterator () ; } js
Distance : 3

79
Tree	{ return chromosomes . iterator () ; } TestUtilities
Code	{ return chromosomes . iterator () ; } TestUtilities
Distance : 3

80
Tree	{ return chromosomes . iterator () ; } equals
Code	{ return chromosomes . iterator () ; } equals
Distance : 3

81
Tree	{ return chromosomes . iterator () ; } d
Code	{ return chromosomes . iterator () ; } d
Distance : 3

82
Tree	{ return chromosomes . iterator () ; } notifyListeners
Code	{ return chromosomes . iterator () ; } notifyListeners
Distance : 3

83
Tree	{ return chromosomes . iterator () ; } externs
Code	{ return chromosomes . iterator () ; } externs
Distance : 3

84
Tree	{ return chromosomes . iterator () ; } for
Code	{ return chromosomes . iterator () ; } for
Distance : 3

85
Tree	{ return chromosomes . iterator () ; } Invocation
Code	{ return chromosomes . iterator () ; } Invocation
Distance : 3

86
Tree	{ return chromosomes . iterator () ; } node
Code	{ return chromosomes . iterator () ; } node
Distance : 3

87
Tree	{ return chromosomes . iterator () ; } getParent
Code	{ return chromosomes . iterator () ; } getParent
Distance : 3

88
Tree	{ return chromosomes . iterator () ; } StrBuilder
Code	{ return chromosomes . iterator () ; } StrBuilder
Distance : 3

89
Tree	{ return chromosomes . iterator () ; } setUp
Code	{ return chromosomes . iterator () ; } setUp
Distance : 3

90
Tree	{ return chromosomes . iterator () ; } invocations
Code	{ return chromosomes . iterator () ; } invocations
Distance : 3

91
Tree	{ return chromosomes . iterator () ; } index
Code	{ return chromosomes . iterator () ; } index
Distance : 3

92
Tree	{ return chromosomes . iterator () ; } instant
Code	{ return chromosomes . iterator () ; } instant
Distance : 3

93
Tree	{ return chromosomes . iterator () ; } abs
Code	{ return chromosomes . iterator () ; } abs
Distance : 3

94
Tree	{ return chromosomes . iterator () ; } Double
Code	{ return chromosomes . iterator () ; } Double
Distance : 3

95
Tree	{ return chromosomes . iterator () ; } <=
Code	{ return chromosomes . iterator () ; } <=
Distance : 3

96
Tree	{ return chromosomes . iterator () ; } reportMatcher
Code	{ return chromosomes . iterator () ; } reportMatcher
Distance : 3

97
Tree	{ return chromosomes . iterator () ; } stream
Code	{ return chromosomes . iterator () ; } stream
Distance : 3

98
Tree	{ return chromosomes . iterator () ; } s
Code	{ return chromosomes . iterator () ; } s
Distance : 3

99
Tree	{ return chromosomes . iterator () ; }
Code	{ return chromosomes . iterator () ; }
Distance : 2

100
Tree	{ return chromosomes . iterator () ; } contains
Code	{ return chromosomes . iterator () ; } contains
Distance : 3

101
Tree	{ return chromosomes . iterator () ; } b
Code	{ return chromosomes . iterator () ; } b
Distance : 3

102
Tree	{ return chromosomes . iterator () ; } stroke
Code	{ return chromosomes . iterator () ; } stroke
Distance : 3

103
Tree	{ return chromosomes . iterator () ; } MutableTimePeriod
Code	{ return chromosomes . iterator () ; } MutableTimePeriod
Distance : 3

104
Tree	{ return chromosomes . iterator () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return chromosomes . iterator () ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

105
Tree	{ return chromosomes . iterator () ; } size
Code	{ return chromosomes . iterator () ; } size
Distance : 3

106
Tree	{ return chromosomes . iterator () ; } traverseEs6
Code	{ return chromosomes . iterator () ; } traverseEs6
Distance : 3

107
Tree	{ return chromosomes . iterator () ; } StringBuilder
Code	{ return chromosomes . iterator () ; } StringBuilder
Distance : 3

108
Tree	{ return chromosomes . iterator () ; } chrono
Code	{ return chromosomes . iterator () ; } chrono
Distance : 3

109
Tree	{ return chromosomes . iterator () ; } a
Code	{ return chromosomes . iterator () ; } a
Distance : 3

110
Tree	{ return chromosomes . iterator () ; } returnZero
Code	{ return chromosomes . iterator () ; } returnZero
Distance : 3

111
Tree	{ return chromosomes . iterator () ; } sb
Code	{ return chromosomes . iterator () ; } sb
Distance : 3

112
Tree	{ return chromosomes . iterator () ; } scope
Code	{ return chromosomes . iterator () ; } scope
Distance : 3

113
Tree	{ return chromosomes . iterator () ; } UnivariateFunction
Code	{ return chromosomes . iterator () ; } UnivariateFunction
Distance : 3

114
Tree	{ return chromosomes . iterator () ; } sqrt
Code	{ return chromosomes . iterator () ; } sqrt
Distance : 3

115
Tree	{ return chromosomes . iterator () ; } clone
Code	{ return chromosomes . iterator () ; } clone
Distance : 3

116
Tree	{ return chromosomes . iterator () ; } getFirstChild
Code	{ return chromosomes . iterator () ; } getFirstChild
Distance : 3

117
Tree	{ return chromosomes . iterator () ; } throws
Code	{ return chromosomes . iterator () ; } throws
Distance : 3

118
Tree	{ return chromosomes . iterator () ; } simpleMethod
Code	{ return chromosomes . iterator () ; } simpleMethod
Distance : 3

119
Tree	{ return chromosomes . iterator () ; } getArgumentMatcherStorage
Code	{ return chromosomes . iterator () ; } getArgumentMatcherStorage
Distance : 3

120
Tree	{ return chromosomes . iterator () ; } append
Code	{ return chromosomes . iterator () ; } append
Distance : 3

121
Tree	{ return chromosomes . iterator () ; } alpha
Code	{ return chromosomes . iterator () ; } alpha
Distance : 3

122
Tree	{ return chromosomes . iterator () ; } isNormalBlock
Code	{ return chromosomes . iterator () ; } isNormalBlock
Distance : 3

123
Tree	{ return chromosomes . iterator () ; } obj
Code	{ return chromosomes . iterator () ; } obj
Distance : 3

124
Tree	{ return chromosomes . iterator () ; } isBlock
Code	{ return chromosomes . iterator () ; } isBlock
Distance : 3

125
Tree	{ return chromosomes . iterator () ; } array
Code	{ return chromosomes . iterator () ; } array
Distance : 3

126
Tree	{ return chromosomes . iterator () ; } TestUtils
Code	{ return chromosomes . iterator () ; } TestUtils
Distance : 3

127
Tree	{ return chromosomes . iterator () ; } length
Code	{ return chromosomes . iterator () ; } length
Distance : 3

128
Tree	{ return chromosomes . iterator () ; } expected
Code	{ return chromosomes . iterator () ; } expected
Distance : 3

129
Tree	{ return chromosomes . iterator () ; } IllegalArgumentException
Code	{ return chromosomes . iterator () ; } IllegalArgumentException
Distance : 3

130
Tree	{ return chromosomes . iterator () ; } invocation
Code	{ return chromosomes . iterator () ; } invocation
Distance : 3

131
Tree	{ return chromosomes . iterator () ; } assertThat
Code	{ return chromosomes . iterator () ; } assertThat
Distance : 3

132
Tree	{ return chromosomes . iterator () ; } FastMath
Code	{ return chromosomes . iterator () ; } FastMath
Distance : 3

133
Tree	{ return chromosomes . iterator () ; } reportCodeChange
Code	{ return chromosomes . iterator () ; } reportCodeChange
Distance : 3

134
Tree	{ return chromosomes . iterator () ; } testSame
Code	{ return chromosomes . iterator () ; } testSame
Distance : 3

135
Tree	{ return chromosomes . iterator () ; } createIllegalArgumentException
Code	{ return chromosomes . iterator () ; } createIllegalArgumentException
Distance : 3

136
Tree	{ return chromosomes . iterator () ; } ArrayList
Code	{ return chromosomes . iterator () ; } ArrayList
Distance : 3

137
Tree	{ return chromosomes . iterator () ; } parent
Code	{ return chromosomes . iterator () ; } parent
Distance : 3

138
Tree	{ return chromosomes . iterator () ; } LINE_JOINER
Code	{ return chromosomes . iterator () ; } LINE_JOINER
Distance : 3

139
Tree	{ return chromosomes . iterator () ; } x
Code	{ return chromosomes . iterator () ; } x
Distance : 3

140
Tree	{ return chromosomes . iterator () ; } fireChangeEvent
Code	{ return chromosomes . iterator () ; } fireChangeEvent
Distance : 3

141
Tree	{ return chromosomes . iterator () ; } str
Code	{ return chromosomes . iterator () ; } str
Distance : 3

142
Tree	{ return chromosomes . iterator () ; } m
Code	{ return chromosomes . iterator () ; } m
Distance : 3

143
Tree	{ return chromosomes . iterator () ; } try
Code	{ return chromosomes . iterator () ; } try
Distance : 3

144
Tree	{ return chromosomes . iterator () ; } fail
Code	{ return chromosomes . iterator () ; } fail
Distance : 3

145
Tree	{ return chromosomes . iterator () ; } :
Code	{ return chromosomes . iterator () ; } :
Distance : 3

146
Tree	{ return chromosomes . iterator () ; } LanguageMode.ECMASCRIPT6
Code	{ return chromosomes . iterator () ; } LanguageMode.ECMASCRIPT6
Distance : 3

147
Tree	{ return chromosomes . iterator () ; } optimizer
Code	{ return chromosomes . iterator () ; } optimizer
Distance : 3

148
Tree	{ return chromosomes . getChromosomes () ; }
Code	{ return chromosomes . getChromosomes () ; }
Distance : 3

149
Tree	{ return chromosomes . iterator () ; } <>
Code	{ return chromosomes . iterator () ; } <>
Distance : 3

150
Tree	{ return chromosomes . iterator () ; } ?
Code	{ return chromosomes . iterator () ; } ?
Distance : 3

151
Tree	{ return chromosomes . iterator () ; } boolean
Code	{ return chromosomes . iterator () ; } boolean
Distance : 3

152
Tree	{ return chromosomes . iterator () ; } paint
Code	{ return chromosomes . iterator () ; } paint
Distance : 3

153
Tree	{ return chromosomes . iterator () ; } result
Code	{ return chromosomes . iterator () ; } result
Distance : 3

154
Tree	{ return chromosomes . iterator () ; } *
Code	{ return chromosomes . iterator () ; } *
Distance : 3

155
Tree	{ return chromosomes . iterator () ; } type
Code	{ return chromosomes . iterator () ; } type
Distance : 3

156
Tree	{ return chromosomes . iterator () ; } getInstance
Code	{ return chromosomes . iterator () ; } getInstance
Distance : 3

157
Tree	{ return chromosomes . iterator () ; } serialised
Code	{ return chromosomes . iterator () ; } serialised
Distance : 3

158
Tree	{ return chromosomes . iterator () ; } Exception
Code	{ return chromosomes . iterator () ; } Exception
Distance : 3

159
Tree	{ return chromosomes . iterator () ; } Assert
Code	{ return chromosomes . iterator () ; } Assert
Distance : 3

160
Tree	{ return chromosomes . iterator () ; } source
Code	{ return chromosomes . iterator () ; } source
Distance : 3

161
Tree	{ return chromosomes . iterator () ; } Class
Code	{ return chromosomes . iterator () ; } Class
Distance : 3

162
Tree	{ return chromosomes . iterator () ; } Math
Code	{ return chromosomes . iterator () ; } Math
Distance : 3

163
Tree	{ return chromosomes . iterator () ; } root
Code	{ return chromosomes . iterator () ; } root
Distance : 3

164
Tree	{ return chromosomes . iterator () ; } options
Code	{ return chromosomes . iterator () ; } options
Distance : 3

165
Tree	{ return chromosomes . iterator () ; } p
Code	{ return chromosomes . iterator () ; } p
Distance : 3

166
Tree	{ return chromosomes . iterator () ; } data
Code	{ return chromosomes . iterator () ; } data
Distance : 3

167
Tree	{ return chromosomes . iterator () ; } add
Code	{ return chromosomes . iterator () ; } add
Distance : 3

168
Tree	{ return chromosomes . iterator () ; } field
Code	{ return chromosomes . iterator () ; } field
Distance : 3

169
Tree	{ return chromosomes . iterator () ; } checkArgument
Code	{ return chromosomes . iterator () ; } checkArgument
Distance : 3

170
Tree	{ return chromosomes . iterator () ; } ex
Code	{ return chromosomes . iterator () ; } ex
Distance : 3

171
Tree	{ return chromosomes . iterator () ; } NodeUtil
Code	{ return chromosomes . iterator () ; } NodeUtil
Distance : 3

172
Tree	{ return chromosomes . iterator () ; } join
Code	{ return chromosomes . iterator () ; } join
Distance : 3

173
Tree	{ return chromosomes . iterator () ; } List
Code	{ return chromosomes . iterator () ; } List
Distance : 3

174
Tree	{ return chromosomes . iterator () ; } NodeTraversal
Code	{ return chromosomes . iterator () ; } NodeTraversal
Distance : 3

175
Tree	{ return chromosomes . iterator () ; } Args
Code	{ return chromosomes . iterator () ; } Args
Distance : 3

176
Tree	{ return chromosomes . iterator () ; } v
Code	{ return chromosomes . iterator () ; } v
Distance : 3

177
Tree	{ return chromosomes . iterator () ; } Integer
Code	{ return chromosomes . iterator () ; } Integer
Distance : 3

178
Tree	{ return chromosomes . iterator () ; } lines
Code	{ return chromosomes . iterator () ; } lines
Distance : 3

179
Tree	{ return chromosomes . iterator () ; } c
Code	{ return chromosomes . iterator () ; } c
Distance : 3

180
Tree	{ return chromosomes . iterator () ; } verify
Code	{ return chromosomes . iterator () ; } verify
Distance : 3

181
Tree	{ return chromosomes . iterator () ; } Node
Code	{ return chromosomes . iterator () ; } Node
Distance : 3

182
Tree	{ return chromosomes . iterator () ; } compiler
Code	{ return chromosomes . iterator () ; } compiler
Distance : 3

183
Tree	{ return chromosomes . iterator () ; } String
Code	{ return chromosomes . iterator () ; } String
Distance : 3

184
Tree	{ return chromosomes . iterator () ; } null
Code	{ return chromosomes . iterator () ; } null
Distance : 3

185
Tree	{ return chromosomes . iterator () ; } wanted
Code	{ return chromosomes . iterator () ; } wanted
Distance : 3

186
Tree	{ return chromosomes . iterator () ; } +
Code	{ return chromosomes . iterator () ; } +
Distance : 3

187
Tree	{ return chromosomes . iterator () ; } catch
Code	{ return chromosomes . iterator () ; } catch
Distance : 3

188
Tree	{ return chromosomes . iterator () ; } !=
Code	{ return chromosomes . iterator () ; } !=
Distance : 3

189
Tree	{ return chromosomes . iterator () ; } value
Code	{ return chromosomes . iterator () ; } value
Distance : 3

190
Tree	{ return chromosomes . iterator () ; } /
Code	{ return chromosomes . iterator () ; } /
Distance : 3

191
Tree	{ return chromosomes . iterator () ; } assertTrue
Code	{ return chromosomes . iterator () ; } assertTrue
Distance : 3

192
Tree	{ return chromosomes . iterator () ; } checkNotNull
Code	{ return chromosomes . iterator () ; } checkNotNull
Distance : 3

193
Tree	{ return chromosomes . iterator () ; } Fraction
Code	{ return chromosomes . iterator () ; } Fraction
Distance : 3

194
Tree	{ return chromosomes . iterator () ; } valueOf
Code	{ return chromosomes . iterator () ; } valueOf
Distance : 3

195
Tree	{ return chromosomes . iterator () ; } instance
Code	{ return chromosomes . iterator () ; } instance
Distance : 3

196
Tree	{ return chromosomes . iterator () ; } long
Code	{ return chromosomes . iterator () ; } long
Distance : 3

197
Tree	{ return chromosomes . iterator () ; } throw
Code	{ return chromosomes . iterator () ; } throw
Distance : 3

198
Tree	{ return chromosomes . iterator () ; } y
Code	{ return chromosomes . iterator () ; } y
Distance : 3

199
Tree	{ return chromosomes . iterator () ; } PeriodType
Code	{ return chromosomes . iterator () ; } PeriodType
Distance : 3

========================================================================


========================================================================
Example Number: 73
Parent Code is: 
if ( Precision . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( Precision . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=epsilon}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/33/parent/src_main_java_org_apache_commons_math3_optimization_linear_SimplexTableau.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 17

1
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) ++
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) ++
Distance : 18

2
Tree	if ( Precision != isNull && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != isNull && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

3
Tree	if ( Precision != mant.length && super(); && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != mant.length && super(); && ++ > NUMBER_CONSTANT ) ?
Distance : 18

4
Tree	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

5
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) %
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) %
Distance : 18

6
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) >=
Distance : 18

7
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) {}
Distance : 18

8
Tree	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

9
Tree	if ( Precision != current.parent && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != current.parent && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

10
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

11
Tree	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) &
Distance : 18

12
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

13
Tree	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

14
Tree	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) <=
Distance : 17

15
Tree	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

16
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) >=
Distance : 17

17
Tree	if ( Precision != current.parent && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != current.parent && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

18
Tree	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) /
Distance : 18

19
Tree	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

20
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) {}
Distance : 18

21
Tree	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

22
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

23
Tree	if ( Precision != standardDeviation.length && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != standardDeviation.length && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

24
Tree	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) &
Distance : 18

25
Tree	if ( Precision != current.scopes && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != current.scopes && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

26
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) /
Distance : 18

27
Tree	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) &
Distance : 17

28
Tree	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

29
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) <=
Distance : 18

30
Tree	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) /
Distance : 17

31
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) {}
Distance : 18

32
Tree	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

33
Tree	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

34
Tree	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

35
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) %
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) %
Distance : 18

36
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) <=
Distance : 18

37
Tree	if ( Precision != FunctionFlavor.NORMAL && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != FunctionFlavor.NORMAL && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

38
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

39
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) {}
Distance : 17

40
Tree	if ( Precision != DevMode.START_AND_END && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != DevMode.START_AND_END && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

41
Tree	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) /
Distance : 18

42
Tree	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) ?
Distance : 17

43
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) <=
Distance : 18

44
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

45
Tree	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) &
Distance : 18

46
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) {}
Distance : 18

47
Tree	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) ?
Distance : 18

48
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

49
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) +=
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) +=
Distance : 18

50
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

51
Tree	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

52
Tree	if ( Precision != FunctionFlavor.NORMAL && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != FunctionFlavor.NORMAL && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

53
Tree	if ( Precision != DevMode.START_AND_END && super(); && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != DevMode.START_AND_END && super(); && ++ > NUMBER_CONSTANT ) ?
Distance : 18

54
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

55
Tree	if ( Precision != current.scopes && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != current.scopes && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

56
Tree	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) <=
Distance : 18

57
Tree	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) &
Distance : 18

58
Tree	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) /
Distance : 18

59
Tree	if ( Precision != compareTo && ++ && += > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && ++ && += > NUMBER_CONSTANT ) ?
Distance : 17

60
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) +=
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) +=
Distance : 18

61
Tree	if ( Precision != observations.length && return && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && return && ++ > NUMBER_CONSTANT ) ?
Distance : 18

62
Tree	if ( Precision != parent.rootNode && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != parent.rootNode && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

63
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

64
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) ++
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) ++
Distance : 18

65
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) >=
Distance : 18

66
Tree	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) {}
Distance : 17

67
Tree	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

68
Tree	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

69
Tree	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != DevMode.START_AND_END && break; && ++ > NUMBER_CONSTANT ) /
Distance : 18

70
Tree	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) <=
Distance : 17

71
Tree	if ( Precision != isNull && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != isNull && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

72
Tree	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

73
Tree	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) /
Distance : 18

74
Tree	if ( Precision != compareTo && += && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && += && ++ > NUMBER_CONSTANT ) ?
Distance : 17

75
Tree	if ( Precision != getRefs && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != getRefs && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

76
Tree	if ( Precision != Long.MIN_VALUE && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != Long.MIN_VALUE && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

77
Tree	if ( Precision != objective.length && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != objective.length && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

78
Tree	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

79
Tree	if ( Precision != setEmitUseStrict && ? && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != setEmitUseStrict && ? && ++ > NUMBER_CONSTANT ) ?
Distance : 18

80
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) >=
Distance : 18

81
Tree	if ( Precision != getSingularValues && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != getSingularValues && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

82
Tree	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

83
Tree	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) &
Distance : 17

84
Tree	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) <=
Distance : 18

85
Tree	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) /
Distance : 18

86
Tree	if ( Precision != isPrimitiveOrWrapper && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != isPrimitiveOrWrapper && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

87
Tree	if ( Precision != UnescapeUtils.UNESCAPE_ECMASCRIPT && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != UnescapeUtils.UNESCAPE_ECMASCRIPT && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

88
Tree	if ( Precision != rLimit && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != rLimit && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

89
Tree	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && return && ++ > NUMBER_CONSTANT ) /
Distance : 17

90
Tree	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( entry != compareTo && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

91
Tree	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) &
Distance : 18

92
Tree	if ( Precision != objective.length && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != objective.length && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

93
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

94
Tree	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != notifier.addedListeners && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

95
Tree	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

96
Tree	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != observations.length && ? && ++ > NUMBER_CONSTANT ) &
Distance : 18

97
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) >=
Distance : 18

98
Tree	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != CallSiteType.UNSUPPORTED && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

99
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) /
Distance : 18

100
Tree	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

101
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

102
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

103
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

104
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

105
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

106
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

107
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

108
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) &
Distance : 17

109
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

110
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

111
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

112
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) ++
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) ++
Distance : 17

113
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) ?
Distance : 17

114
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

115
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) &
Distance : 17

116
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

117
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) /
Distance : 17

118
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

119
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

120
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) /
Distance : 17

121
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

122
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 17

123
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

124
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

125
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 17

126
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 17

127
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

128
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 17

129
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

130
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 17

131
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

132
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 17

133
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

134
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

135
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

136
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

137
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

138
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

139
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

140
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

141
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

142
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

143
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

144
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

145
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

146
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

147
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

148
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

149
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

150
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) <=
Distance : 17

151
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

152
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

153
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) &
Distance : 18

154
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) /
Distance : 18

155
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) +=
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) +=
Distance : 17

156
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) >=
Distance : 17

157
Tree	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != observations.length && continue; && ++ > NUMBER_CONSTANT ) /
Distance : 18

158
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

159
Tree	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != mant.length && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

160
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) &
Distance : 18

161
Tree	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != DateUtils.MILLIS_PER_MINUTE && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

162
Tree	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != setEmitUseStrict && super(); && ++ > NUMBER_CONSTANT ) ?
Distance : 18

163
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) <=
Distance : 17

164
Tree	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) ++
Code	if ( Precision != setEmitUseStrict && ++ && ++ > NUMBER_CONSTANT ) ++
Distance : 18

165
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) &
Distance : 18

166
Tree	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != mant.length && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

167
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) <=
Distance : 18

168
Tree	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != current.parent.scopes && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

169
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

170
Tree	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != wrap && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

171
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

172
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) /
Distance : 18

173
Tree	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != compareTo && ? && ++ > NUMBER_CONSTANT ) ?
Distance : 17

174
Tree	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) ++
Code	if ( Precision != observations.length && ++ && ++ > NUMBER_CONSTANT ) ++
Distance : 18

175
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) &
Distance : 17

176
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

177
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) <=
Distance : 18

178
Tree	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != setEmitUseStrict && break; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

179
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) <=
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) <=
Distance : 17

180
Tree	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != DevMode.START_AND_END && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

181
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) {}
Distance : 17

182
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

183
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) %
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) %
Distance : 17

184
Tree	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != setEmitUseStrict && continue; && ++ > NUMBER_CONSTANT ) ?
Distance : 18

185
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

186
Tree	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) %
Code	if ( Precision != mant.length && ++ && ++ > NUMBER_CONSTANT ) %
Distance : 18

187
Tree	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != qrRankingThreshold && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

188
Tree	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != ParseTreeType.CALL_EXPRESSION && ++ && ++ > NUMBER_CONSTANT ) {}
Distance : 18

189
Tree	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) {}
Code	if ( Precision != compareTo && continue; && ++ > NUMBER_CONSTANT ) {}
Distance : 17

190
Tree	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != current.parent && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

191
Tree	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != observations.length && break; && ++ > NUMBER_CONSTANT ) &
Distance : 18

192
Tree	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != ModifyType.ROUND && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

193
Tree	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != FunctionFlavor.ASYNCHRONOUS && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 18

194
Tree	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != observations.length && super(); && ++ > NUMBER_CONSTANT ) ?
Distance : 18

195
Tree	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) /
Code	if ( Precision != compareTo && super(); && ++ > NUMBER_CONSTANT ) /
Distance : 17

196
Tree	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != objective.length && ++ && ++ > NUMBER_CONSTANT ) >=
Distance : 18

197
Tree	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) >=
Code	if ( Precision != compareTo && break; && ++ > NUMBER_CONSTANT ) >=
Distance : 17

198
Tree	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) ?
Code	if ( Precision != residuals.length && ++ && ++ > NUMBER_CONSTANT ) ?
Distance : 18

199
Tree	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) &
Code	if ( Precision != compareTo && ++ && ++ > NUMBER_CONSTANT ) &
Distance : 17

========================================================================


========================================================================
Example Number: 74
Parent Code is: 
final int n1n2prod = n1 * n2 ;
-------------------------------------------------------------------------------
Child code is: 
final double n1n2prod = n1 * n2 ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=n1n2prod}) (204{val==}) (27 (800{val=n1}) (202{val=*}) (800{val=n2}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=n1n2prod}) (204{val==}) (27 (800{val=n1}) (202{val=*}) (800{val=n2}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/30/parent/src_main_java_org_apache_commons_math3_stat_inference_MannWhitneyUTest.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	protected byte n1n2prod = n1 * n1 ;
Code	protected byte n1n2prod = n1 * n1 ;
Distance : 3

1
Tree	int [] . . . n2 void
Code	int [] . . . n2 void
Distance : 7

2
Tree	int [] . . . n2 assertEquals
Code	int [] . . . n2 assertEquals
Distance : 7

3
Tree	int [] . . . n2 nullNotPermitted
Code	int [] . . . n2 nullNotPermitted
Distance : 7

4
Tree	int [] . . . n2 !
Code	int [] . . . n2 !
Distance : 7

5
Tree	int [] . . . n2 TestUtilities
Code	int [] . . . n2 TestUtilities
Distance : 7

6
Tree	int [] . . . n2 d
Code	int [] . . . n2 d
Distance : 7

7
Tree	int [] . . . n2 Invocation
Code	int [] . . . n2 Invocation
Distance : 7

8
Tree	int [] . . . n2 t
Code	int [] . . . n2 t
Distance : 7

9
Tree	int [] . . . n2 *
Code	int [] . . . n2 *
Distance : 7

10
Tree	int [] . . . n2 compiler
Code	int [] . . . n2 compiler
Distance : 7

11
Tree	int [] . . . n2 int
Code	int [] . . . n2 int
Distance : 7

12
Tree	int [] . . . n2 fireChangeEvent
Code	int [] . . . n2 fireChangeEvent
Distance : 7

13
Tree	int [] . . . n2 ArrayList
Code	int [] . . . n2 ArrayList
Distance : 7

14
Tree	int [] . . . n2 LINE_JOINER
Code	int [] . . . n2 LINE_JOINER
Distance : 7

15
Tree	int [] . . . n2 testSame
Code	int [] . . . n2 testSame
Distance : 7

16
Tree	int [] . . . n2 x
Code	int [] . . . n2 x
Distance : 7

17
Tree	int [] . . . n2 <s>
Code	int [] . . . n2 <s>
Distance : 7

18
Tree	int [] . . . n2 <blank>
Code	int [] . . . n2 <blank>
Distance : 7

19
Tree	int [] . . . n2 (
Code	int [] . . . n2 (
Distance : 7

20
Tree	int [] . . . n2 )
Code	int [] . . . n2 )
Distance : 7

21
Tree	int [] . . . n2 join
Code	int [] . . . n2 join
Distance : 7

22
Tree	int [] . . . n2 @
Code	int [] . . . n2 @
Distance : 7

23
Tree	int [] . . . n2 serialised
Code	int [] . . . n2 serialised
Distance : 7

24
Tree	int [] . . . n2 getInstance
Code	int [] . . . n2 getInstance
Distance : 7

25
Tree	int [] . . . n2 add
Code	int [] . . . n2 add
Distance : 7

26
Tree	int [] . . . n2 <=
Code	int [] . . . n2 <=
Distance : 7

27
Tree	int [] . . . n2 Test
Code	int [] . . . n2 Test
Distance : 7

28
Tree	int [] . . . n2 Assert
Code	int [] . . . n2 Assert
Distance : 7

29
Tree	int [] . . . n2 STRING_CONSTANT
Code	int [] . . . n2 STRING_CONSTANT
Distance : 7

30
Tree	int [] . . . n2 TestUtils
Code	int [] . . . n2 TestUtils
Distance : 7

31
Tree	int [] . . . n2 checkNotNull
Code	int [] . . . n2 checkNotNull
Distance : 7

32
Tree	int [] . . . n2 ?
Code	int [] . . . n2 ?
Distance : 7

33
Tree	int [] . . . n2 Exception
Code	int [] . . . n2 Exception
Distance : 7

34
Tree	int [] . . . n2 long
Code	int [] . . . n2 long
Distance : 7

35
Tree	int [] . . . n2 /
Code	int [] . . . n2 /
Distance : 7

36
Tree	int [] . . . n2 =
Code	int [] . . . n2 =
Distance : 7

37
Tree	int [] . . . n2 matcher
Code	int [] . . . n2 matcher
Distance : 7

38
Tree	int [] . . . n2 throw
Code	int [] . . . n2 throw
Distance : 7

39
Tree	int [] . . . n2 checkArgument
Code	int [] . . . n2 checkArgument
Distance : 7

40
Tree	int [] . . . n2 IllegalArgumentException
Code	int [] . . . n2 IllegalArgumentException
Distance : 7

41
Tree	int [] . . . n2 reportCodeChange
Code	int [] . . . n2 reportCodeChange
Distance : 7

42
Tree	int [] . . . n2 expected
Code	int [] . . . n2 expected
Distance : 7

43
Tree	int [] . . . n2 assertThat
Code	int [] . . . n2 assertThat
Distance : 7

44
Tree	int [] . . . n2 str
Code	int [] . . . n2 str
Distance : 7

45
Tree	int [] . . . n2 invocation
Code	int [] . . . n2 invocation
Distance : 7

46
Tree	int [] . . . n2 FastMath
Code	int [] . . . n2 FastMath
Distance : 7

47
Tree	int [] . . . n2 name
Code	int [] . . . n2 name
Distance : 7

48
Tree	int [] . . . n2 b
Code	int [] . . . n2 b
Distance : 7

49
Tree	int [] . . . n2 parent
Code	int [] . . . n2 parent
Distance : 7

50
Tree	int [] . . . n2 boolean
Code	int [] . . . n2 boolean
Distance : 7

51
Tree	int [] . . . n2 e
Code	int [] . . . n2 e
Distance : 7

52
Tree	int [] . . . n2 isNormalBlock
Code	int [] . . . n2 isNormalBlock
Distance : 7

53
Tree	int [] . . . n2 value
Code	int [] . . . n2 value
Distance : 7

54
Tree	int [] . . . n2 &&
Code	int [] . . . n2 &&
Distance : 7

55
Tree	int [] . . . n2 Preconditions
Code	int [] . . . n2 Preconditions
Distance : 7

56
Tree	int [] . . . n2 for
Code	int [] . . . n2 for
Distance : 7

57
Tree	int [] . . . n2 mock
Code	int [] . . . n2 mock
Distance : 7

58
Tree	int [] . . . n2 MathRuntimeException
Code	int [] . . . n2 MathRuntimeException
Distance : 7

59
Tree	int [] . . . n2 mode
Code	int [] . . . n2 mode
Distance : 7

60
Tree	int [] . . . n2 {}
Code	int [] . . . n2 {}
Distance : 7

61
Tree	int [] . . . n2 Object
Code	int [] . . . n2 Object
Distance : 7

62
Tree	int [] . . . n2 Override
Code	int [] . . . n2 Override
Distance : 7

63
Tree	int [] . . . n2 ParamChecks
Code	int [] . . . n2 ParamChecks
Distance : 7

64
Tree	int [] . . . n2 class
Code	int [] . . . n2 class
Distance : 7

65
Tree	int [] . . . n2 !=
Code	int [] . . . n2 !=
Distance : 7

66
Tree	int [] . . . n2 super
Code	int [] . . . n2 super
Distance : 7

67
Tree	int [] . . . n2 checkState
Code	int [] . . . n2 checkState
Distance : 7

68
Tree	int [] . . . n2 i
Code	int [] . . . n2 i
Distance : 7

69
Tree	int [] . . . n2 false
Code	int [] . . . n2 false
Distance : 7

70
Tree	int [] . . . n2 test
Code	int [] . . . n2 test
Distance : 7

71
Tree	int [] . . . n2 double
Code	int [] . . . n2 double
Distance : 7

72
Tree	int [] . . . n2 String
Code	int [] . . . n2 String
Distance : 7

73
Tree	int [] . . . n2 createIllegalArgumentException
Code	int [] . . . n2 createIllegalArgumentException
Distance : 7

74
Tree	int [] . . . n2 null
Code	int [] . . . n2 null
Distance : 7

75
Tree	int [] . . . n2 +
Code	int [] . . . n2 +
Distance : 7

76
Tree	int [] . . . n2 result
Code	int [] . . . n2 result
Distance : 7

77
Tree	int [] . . . n2 m
Code	int [] . . . n2 m
Distance : 7

78
Tree	int [] . . . n2 paint
Code	int [] . . . n2 paint
Distance : 7

79
Tree	int [] . . . n2 type
Code	int [] . . . n2 type
Distance : 7

80
Tree	int [] . . . n2 equals
Code	int [] . . . n2 equals
Distance : 7

81
Tree	int [] . . . n2 externs
Code	int [] . . . n2 externs
Distance : 7

82
Tree	int [] . . . n2 assertTrue
Code	int [] . . . n2 assertTrue
Distance : 7

83
Tree	int [] . . . n2 out
Code	int [] . . . n2 out
Distance : 7

84
Tree	int [] . . . n2 s
Code	int [] . . . n2 s
Distance : 7

85
Tree	int [] . . . n2 contains
Code	int [] . . . n2 contains
Distance : 7

86
Tree	int [] . . . n2 a
Code	int [] . . . n2 a
Distance : 7

87
Tree	int [] . . . n2 obj
Code	int [] . . . n2 obj
Distance : 7

88
Tree	int [] . . . n2 instant
Code	int [] . . . n2 instant
Distance : 7

89
Tree	int [] . . . n2 reportMatcher
Code	int [] . . . n2 reportMatcher
Distance : 7

90
Tree	int [] . . . n2 else
Code	int [] . . . n2 else
Distance : 7

91
Tree	synchronized boolean n1n2prod = n1 * n2 ;
Code	synchronized boolean n1n2prod = n1 * n2 ;
Distance : 2

92
Tree	int [] . . . n2 catch
Code	int [] . . . n2 catch
Distance : 7

93
Tree	int [] . . . n2 notifyListeners
Code	int [] . . . n2 notifyListeners
Distance : 7

94
Tree	int [] . . . n2 ==
Code	int [] . . . n2 ==
Distance : 7

95
Tree	int [] . . . n2 []
Code	int [] . . . n2 []
Distance : 7

96
Tree	int [] . . . n2 n
Code	int [] . . . n2 n
Distance : 7

97
Tree	int [] . . . n2 public
Code	int [] . . . n2 public
Distance : 7

98
Tree	int [] . . . n2 int
Code	int [] . . . n2 int
Distance : 7

99
Tree	int [] . . . n2 chrono
Code	int [] . . . n2 chrono
Distance : 7

100
Tree	int [] . . . n2 traverseEs6
Code	int [] . . . n2 traverseEs6
Distance : 7

101
Tree	int [] . . . n2 stream
Code	int [] . . . n2 stream
Distance : 7

102
Tree	int [] . . . n2 return;
Code	int [] . . . n2 return;
Distance : 7

103
Tree	int [] . . . n2 getParent
Code	int [] . . . n2 getParent
Distance : 7

104
Tree	int [] . . . n2 setUp
Code	int [] . . . n2 setUp
Distance : 7

105
Tree	int [] . . . n2 js
Code	int [] . . . n2 js
Distance : 7

106
Tree	int [] . . . n2 StrBuilder
Code	int [] . . . n2 StrBuilder
Distance : 7

107
Tree	int [] . . . n2 index
Code	int [] . . . n2 index
Distance : 7

108
Tree	int [] . . . n2 node
Code	int [] . . . n2 node
Distance : 7

109
Tree	int [] . . . n2 invocations
Code	int [] . . . n2 invocations
Distance : 7

110
Tree	int [] . . . n2 protected
Code	int [] . . . n2 protected
Distance : 7

111
Tree	int [] . . . n2 isEmpty
Code	int [] . . . n2 isEmpty
Distance : 7

112
Tree	int [] . . . n2 get
Code	int [] . . . n2 get
Distance : 7

113
Tree	int [] . . . n2 char
Code	int [] . . . n2 char
Distance : 7

114
Tree	int [] . . . n2 setAcceptedLanguage
Code	int [] . . . n2 setAcceptedLanguage
Distance : 7

115
Tree	int [] . . . n2 abs
Code	int [] . . . n2 abs
Distance : 7

116
Tree	int [] . . . n2 static
Code	int [] . . . n2 static
Distance : 7

117
Tree	int [] . . . n2 JSType
Code	int [] . . . n2 JSType
Distance : 7

118
Tree	int [] . . . n2 MutableTimePeriod
Code	int [] . . . n2 MutableTimePeriod
Distance : 7

119
Tree	int [] . . . n2 size
Code	int [] . . . n2 size
Distance : 7

120
Tree	int [] . . . n2 getMessage
Code	int [] . . . n2 getMessage
Distance : 7

121
Tree	int [] . . . n2 try
Code	int [] . . . n2 try
Distance : 7

122
Tree	float [] . . . n1n2prod
Code	float [] . . . n1n2prod
Distance : 8

123
Tree	int [] . . . n2 values
Code	int [] . . . n2 values
Distance : 7

124
Tree	short [] . . . n1n2prod
Code	short [] . . . n1n2prod
Distance : 8

125
Tree	char [] . . . n1n2prod
Code	char [] . . . n1n2prod
Distance : 8

126
Tree	int [] . . . n1
Code	int [] . . . n1
Distance : 8

127
Tree	long [] . . . n2
Code	long [] . . . n2
Distance : 7

128
Tree	double [] . . . n2
Code	double [] . . . n2
Distance : 6

129
Tree	boolean [] . . . n2
Code	boolean [] . . . n2
Distance : 7

130
Tree	char [] . . . n2
Code	char [] . . . n2
Distance : 7

131
Tree	byte [] . . . n1
Code	byte [] . . . n1
Distance : 8

132
Tree	void [] . . . n2
Code	void [] . . . n2
Distance : 7

133
Tree	long [] . . . n1
Code	long [] . . . n1
Distance : 8

134
Tree	double [] . . . n1
Code	double [] . . . n1
Distance : 7

135
Tree	boolean [] . . . n1
Code	boolean [] . . . n1
Distance : 8

136
Tree	short [] . . . n2
Code	short [] . . . n2
Distance : 7

137
Tree	float [] . . . n2
Code	float [] . . . n2
Distance : 7

138
Tree	int [] . . . n1n2prod
Code	int [] . . . n1n2prod
Distance : 8

139
Tree	char [] . . . n1
Code	char [] . . . n1
Distance : 8

140
Tree	void [] . . . n1
Code	void [] . . . n1
Distance : 8

141
Tree	short [] . . . n1
Code	short [] . . . n1
Distance : 8

142
Tree	float [] . . . n1
Code	float [] . . . n1
Distance : 8

143
Tree	byte [] . . . n1n2prod
Code	byte [] . . . n1n2prod
Distance : 8

144
Tree	long [] . . . n1n2prod
Code	long [] . . . n1n2prod
Distance : 8

145
Tree	double [] . . . n1n2prod
Code	double [] . . . n1n2prod
Distance : 7

146
Tree	boolean [] . . . n1n2prod
Code	boolean [] . . . n1n2prod
Distance : 8

147
Tree	void [] . . . n1n2prod
Code	void [] . . . n1n2prod
Distance : 8

148
Tree	int [] . . . n2 LanguageMode.ECMASCRIPT_2015
Code	int [] . . . n2 LanguageMode.ECMASCRIPT_2015
Distance : 7

149
Tree	int [] . . . n2 List
Code	int [] . . . n2 List
Distance : 7

150
Tree	int [] . . . n2 }
Code	int [] . . . n2 }
Distance : 7

151
Tree	int [] . . . n2 return
Code	int [] . . . n2 return
Distance : 7

152
Tree	int [] . . . n2 new
Code	int [] . . . n2 new
Distance : 7

153
Tree	int [] . . . n2 NUMBER_CONSTANT
Code	int [] . . . n2 NUMBER_CONSTANT
Distance : 7

154
Tree	int [] . . . n2 final
Code	int [] . . . n2 final
Distance : 7

155
Tree	int [] . . . n2 p
Code	int [] . . . n2 p
Distance : 7

156
Tree	int [] . . . n2 if
Code	int [] . . . n2 if
Distance : 7

157
Tree	int [] . . . n2 >
Code	int [] . . . n2 >
Distance : 7

158
Tree	int [] . . . n2 verify
Code	int [] . . . n2 verify
Distance : 7

159
Tree	int [] . . . n2 lines
Code	int [] . . . n2 lines
Distance : 7

160
Tree	int [] . . . n2 toString
Code	int [] . . . n2 toString
Distance : 7

161
Tree	int [] . . . n2 c
Code	int [] . . . n2 c
Distance : 7

162
Tree	int [] . . . n2 v
Code	int [] . . . n2 v
Distance : 7

163
Tree	int [] . . . n2 Node
Code	int [] . . . n2 Node
Distance : 7

164
Tree	int [] . . . n2 source
Code	int [] . . . n2 source
Distance : 7

165
Tree	int [] . . . n2 Class
Code	int [] . . . n2 Class
Distance : 7

166
Tree	int [] . . . n2 -
Code	int [] . . . n2 -
Distance : 7

167
Tree	int [] . . . n2 PeriodType
Code	int [] . . . n2 PeriodType
Distance : 7

168
Tree	int [] . . . n2 ]
Code	int [] . . . n2 ]
Distance : 7

169
Tree	int [] . . . n2 true
Code	int [] . . . n2 true
Distance : 7

170
Tree	int [] . . . n2 StringBuilder
Code	int [] . . . n2 StringBuilder
Distance : 7

171
Tree	int [] . . . n2 stroke
Code	int [] . . . n2 stroke
Distance : 7

172
Tree	int [] . . . n2 this
Code	int [] . . . n2 this
Distance : 7

173
Tree	int [] . . . n2 {
Code	int [] . . . n2 {
Distance : 7

174
Tree	int [] . . . n2 options
Code	int [] . . . n2 options
Distance : 7

175
Tree	int [] . . . n2 wanted
Code	int [] . . . n2 wanted
Distance : 7

176
Tree	int [] . . . n2 .
Code	int [] . . . n2 .
Distance : 7

177
Tree	int [] . . . n2 ;
Code	int [] . . . n2 ;
Distance : 6

178
Tree	int [] . . . n2 ,
Code	int [] . . . n2 ,
Distance : 7

179
Tree	int [] . . . n2 ()
Code	int [] . . . n2 ()
Distance : 7

180
Tree	int [] . . . n2 T
Code	int [] . . . n2 T
Distance : 7

181
Tree	int [] . . . n2 :
Code	int [] . . . n2 :
Distance : 7

182
Tree	int [] . . . n2 fail
Code	int [] . . . n2 fail
Distance : 7

183
Tree	int [] . . . n2 NodeUtil
Code	int [] . . . n2 NodeUtil
Distance : 7

184
Tree	int [] . . . n2 <>
Code	int [] . . . n2 <>
Distance : 7

185
Tree	int [] . . . n2 f
Code	int [] . . . n2 f
Distance : 7

186
Tree	int [] . . . n2 array
Code	int [] . . . n2 array
Distance : 7

187
Tree	int [] . . . n2 Args
Code	int [] . . . n2 Args
Distance : 7

188
Tree	int [] . . . n2 NodeTraversal
Code	int [] . . . n2 NodeTraversal
Distance : 7

189
Tree	int [] . . . n2 data
Code	int [] . . . n2 data
Distance : 7

190
Tree	int [] . . . n2 ex
Code	int [] . . . n2 ex
Distance : 7

191
Tree	int [] . . . n2 field
Code	int [] . . . n2 field
Distance : 7

192
Tree	int [] . . . n2 mockingProgress
Code	int [] . . . n2 mockingProgress
Distance : 7

193
Tree	int [] . . . n2 Fraction
Code	int [] . . . n2 Fraction
Distance : 7

194
Tree	int [] . . . n2 [
Code	int [] . . . n2 [
Distance : 7

195
Tree	int [] . . . n2 <
Code	int [] . . . n2 <
Distance : 7

196
Tree	int [] . . . n2 root
Code	int [] . . . n2 root
Distance : 7

197
Tree	int [] . . . n2 Math
Code	int [] . . . n2 Math
Distance : 7

198
Tree	int [] . . . n2 Integer
Code	int [] . . . n2 Integer
Distance : 7

199
Tree	int [] . . . n2
Code	int [] . . . n2
Distance : 7

========================================================================


========================================================================
Example Number: 75
Parent Code is: 
if ( y >= TWO_POWER_52  y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( y >= TWO_POWER_53  y <= - TWO_POWER_53 ) { return pow ( - x , y ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y}) (251{val=>=}) (800{val=TWO_POWER_52})) (250{val=||}) (27 (800{val=y}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_52})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y}) (251{val=>=}) (800{val=TWO_POWER_53})) (250{val=||}) (27 (800{val=y}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_53})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/15/parent/src_main_java_org_apache_commons_math3_util_FastMath.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

1
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

2
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

3
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

4
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Distance : 3

5
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

6
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

7
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

8
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

9
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

10
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

11
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

12
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

13
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

14
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

15
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

16
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

17
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

18
Tree	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

19
Tree	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Distance : 3

20
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

21
Tree	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

22
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

23
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

24
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 3

25
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

26
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Distance : 3

27
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

28
Tree	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

29
Tree	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

30
Tree	if ( y >= x y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= x y y <= - y ) { return pow ( - x , y ) ; }
Distance : 3

31
Tree	if ( y >= y y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= y y y <= - y ) { return pow ( - x , y ) ; }
Distance : 3

32
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

33
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

34
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Distance : 4

35
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

36
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

37
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

38
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

39
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

40
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

41
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , y ) ; }
Distance : 4

42
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

43
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

44
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

45
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

46
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

47
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

48
Tree	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Distance : 3

49
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

50
Tree	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Distance : 3

51
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

52
Tree	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

53
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

54
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

55
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

56
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Distance : 4

57
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

58
Tree	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

59
Tree	if ( TWO_POWER_52 >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

60
Tree	if ( y >= y y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Distance : 3

61
Tree	if ( TWO_POWER_52 >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

62
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

63
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

64
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

65
Tree	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

66
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

67
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

68
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Distance : 3

69
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

70
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

71
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 3

72
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

73
Tree	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

74
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

75
Tree	if ( x >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Distance : 4

76
Tree	if ( y >= y y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 3

77
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 5

78
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

79
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

80
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

81
Tree	if ( x >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

82
Tree	if ( x >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

83
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

84
Tree	if ( y >= x y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 3

85
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

86
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

87
Tree	if ( y >= x y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= x y y <= - x ) { return pow ( - x , y ) ; }
Distance : 3

88
Tree	if ( y >= y y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= y y y <= - x ) { return pow ( - x , y ) ; }
Distance : 3

89
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

90
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

91
Tree	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Distance : 3

92
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

93
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

94
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

95
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

96
Tree	if ( y >= TWO_POWER_52 y x <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - x ) { return pow ( - x , y ) ; }
Distance : 3

97
Tree	if ( x >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

98
Tree	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

99
Tree	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - x , x ) ; }
Distance : 4

100
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

101
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , x ) ; }
Distance : 4

102
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , x ) ; }
Distance : 5

103
Tree	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

104
Tree	if ( y >= y y x <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= y y x <= - y ) { return pow ( - x , y ) ; }
Distance : 3

105
Tree	if ( y >= x y x <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= x y x <= - y ) { return pow ( - x , y ) ; }
Distance : 3

106
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

107
Tree	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - x , x ) ; }
Distance : 4

108
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Distance : 4

109
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

110
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

111
Tree	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

112
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 5

113
Tree	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

114
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

115
Tree	if ( y >= x y y <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= x y y <= - y ) { return pow ( - x , x ) ; }
Distance : 4

116
Tree	if ( y >= y y y <= - y ) { return pow ( - x , x ) ; }
Code	if ( y >= y y y <= - y ) { return pow ( - x , x ) ; }
Distance : 4

117
Tree	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - x ) { return pow ( - y , y ) ; }
Distance : 4

118
Tree	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

119
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - y , y ) ; }
Distance : 4

120
Tree	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

121
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

122
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

123
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

124
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

125
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

126
Tree	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - y ) { return pow ( - y , y ) ; }
Distance : 4

127
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , y ) ; }
Distance : 4

128
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

129
Tree	if ( TWO_POWER_52 >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

130
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

131
Tree	if ( TWO_POWER_52 >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

132
Tree	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

133
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

134
Tree	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

135
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 3

136
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

137
Tree	if ( y >= x y y <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= x y y <= - y ) { return pow ( - y , y ) ; }
Distance : 4

138
Tree	if ( y >= y y y <= - y ) { return pow ( - y , y ) ; }
Code	if ( y >= y y y <= - y ) { return pow ( - y , y ) ; }
Distance : 4

139
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

140
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

141
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

142
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

143
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

144
Tree	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

145
Tree	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - y ) { return pow ( - y , x ) ; }
Distance : 5

146
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

147
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 4

148
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

149
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

150
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

151
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

152
Tree	if ( x >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

153
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

154
Tree	if ( TWO_POWER_52 >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

155
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Distance : 4

156
Tree	if ( TWO_POWER_52 >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

157
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 5

158
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 4

159
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 5

160
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

161
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

162
Tree	if ( x >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= x y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

163
Tree	if ( x >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= y y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

164
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

165
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

166
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

167
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

168
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

169
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

170
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - y ) { return pow ( - x , y ) ; }
Distance : 4

171
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

172
Tree	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= x y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

173
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , y ) ; }
Distance : 4

174
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

175
Tree	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Code	if ( y >= y y y <= - TWO_POWER_52 ) { return pow ( - y , x ) ; }
Distance : 5

176
Tree	if ( TWO_POWER_52 >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= y y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

177
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , x ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , x ) ; }
Distance : 5

178
Tree	if ( TWO_POWER_52 >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

179
Tree	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

180
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , TWO_POWER_52 ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , TWO_POWER_52 ) ; }
Distance : 5

181
Tree	if ( TWO_POWER_52 >= x y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= x y y <= - y ) { return pow ( - x , y ) ; }
Distance : 4

182
Tree	if ( TWO_POWER_52 >= y y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= y y y <= - y ) { return pow ( - x , y ) ; }
Distance : 4

183
Tree	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

184
Tree	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

185
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

186
Tree	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= x y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

187
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - x ) { return pow ( - x , y ) ; }
Distance : 3

188
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y y <= - y ) { return pow ( - x , x ) ; }
Distance : 5

189
Tree	if ( x >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - x ) { return pow ( - x , y ) ; }
Distance : 4

190
Tree	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

191
Tree	if ( x >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

192
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 4

193
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 4

194
Tree	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

195
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - y , y ) ; }
Distance : 5

196
Tree	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 y TWO_POWER_52 <= - y ) { return pow ( - x , y ) ; }
Distance : 4

197
Tree	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 4

198
Tree	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( TWO_POWER_52 >= TWO_POWER_52 y x <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 5

199
Tree	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Code	if ( x >= TWO_POWER_52 y y <= - TWO_POWER_52 ) { return pow ( - TWO_POWER_52 , y ) ; }
Distance : 5

========================================================================


========================================================================
Example Number: 76
Parent Code is: 
FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
-------------------------------------------------------------------------------
Child code is: 
FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - NUMBER_CONSTANT * dim ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI})) (234{val=,}) (27 (38 (201{val=-}) (800{val=dim})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=covarianceMatrixDeterminant}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (802{val=getExponentTerm}) (214{val=(}) (800{val=vals}) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI})) (234{val=,}) (27 (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (202{val=*}) (800{val=dim})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=covarianceMatrixDeterminant}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (802{val=getExponentTerm}) (214{val=(}) (800{val=vals}) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/11/parent/src_main_java_org_apache_commons_math3_distribution_MultivariateNormalDistribution.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

1
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

2
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

3
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

4
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

5
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

6
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

7
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

8
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

9
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

10
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

11
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

12
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

13
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

14
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

15
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

16
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

17
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

18
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

19
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 4

20
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

21
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

22
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

23
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

24
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

25
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

26
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

27
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

28
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

29
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

30
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

31
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

32
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

33
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

34
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

35
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

36
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

37
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

38
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

39
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

40
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

41
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

42
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

43
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

44
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

45
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

46
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

47
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

48
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

49
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

50
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

51
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

52
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

53
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

54
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

55
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

56
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

57
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

58
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

59
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

60
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

61
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 5

62
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

63
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

64
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

65
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

66
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

67
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

68
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

69
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

70
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

71
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

72
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

73
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

74
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

75
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

76
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

77
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

78
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

79
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

80
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

81
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

82
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

83
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

84
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

85
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

86
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

87
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

88
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

89
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

90
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

91
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

92
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

93
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

94
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

95
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

96
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

97
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

98
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

99
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

100
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

101
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

102
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

103
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

104
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

105
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

106
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

107
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

108
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

109
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

110
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

111
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

112
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

113
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

114
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

115
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

116
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

117
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

118
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

119
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

120
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

121
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

122
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

123
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

124
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

125
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

126
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

127
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

128
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

129
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

130
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

131
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

132
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

133
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

134
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

135
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

136
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

137
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

138
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

139
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

140
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

141
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

142
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

143
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

144
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

145
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

146
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

147
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

148
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

149
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

150
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

151
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

152
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

153
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

154
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

155
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

156
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

157
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

158
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

159
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

160
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

161
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

162
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

163
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

164
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

165
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

166
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

167
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

168
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

169
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

170
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

171
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

172
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

173
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

174
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

175
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

176
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

177
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

178
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

179
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

180
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

181
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

182
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

183
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

184
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

185
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

186
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

187
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

188
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

189
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

190
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

191
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

192
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

193
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

194
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

195
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

196
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

197
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

198
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

199
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

========================================================================


========================================================================
Example Number: 77
Parent Code is: 
iterations = new Incrementor ( NUMBER_CONSTANT , new MaxIterCallback () ) ;
-------------------------------------------------------------------------------
Child code is: 
iterations = new Incrementor ( Integer.MAX_VALUE , new MaxIterCallback () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (800{val=iterations}) (204{val==}) (14 (304{val=new}) (43 (801{val=Incrementor})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MaxIterCallback})) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (800{val=iterations}) (204{val==}) (14 (304{val=new}) (43 (801{val=Incrementor})) (214{val=(}) (40{val=Integer.MAX_VALUE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MaxIterCallback})) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/6/parent/src_main_java_org_apache_commons_math3_optim_BaseOptimizer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	varsInFunctionBody
Code	varsInFunctionBody
Distance : 12

1
Tree	useDef
Code	useDef
Distance : 12

2
Tree	moment
Code	moment
Distance : 12

3
Tree	clone.bounds
Code	clone.bounds
Distance : 12

4
Tree	VerificationModeImplTest
Code	VerificationModeImplTest
Distance : 12

5
Tree	ko1
Code	ko1
Distance : 12

6
Tree	log1mProbabilityOfSuccess
Code	log1mProbabilityOfSuccess
Distance : 12

7
Tree	testFindModifiedParameters0
Code	testFindModifiedParameters0
Distance : 12

8
Tree	za
Code	za
Distance : 12

9
Tree	report
Code	report
Distance : 12

10
Tree	degree
Code	degree
Distance : 12

11
Tree	loc
Code	loc
Distance : 12

12
Tree	declaresLegacyNamespace
Code	declaresLegacyNamespace
Distance : 12

13
Tree	mainSetDimension
Code	mainSetDimension
Distance : 12

14
Tree	clearTemplates
Code	clearTemplates
Distance : 12

15
Tree	magnitude
Code	magnitude
Distance : 12

16
Tree	Time
Code	Time
Distance : 12

17
Tree	mise
Code	mise
Distance : 12

18
Tree	inheritsCall
Code	inheritsCall
Distance : 12

19
Tree	newObjs
Code	newObjs
Distance : 12

20
Tree	NestedClassWithNoArgConstructor
Code	NestedClassWithNoArgConstructor
Distance : 12

21
Tree	PomComparator
Code	PomComparator
Distance : 12

22
Tree	reducers
Code	reducers
Distance : 12

23
Tree	visitGetProp
Code	visitGetProp
Distance : 12

24
Tree	vnode
Code	vnode
Distance : 12

25
Tree	sumSq
Code	sumSq
Distance : 12

26
Tree	FALSY_MASK
Code	FALSY_MASK
Distance : 12

27
Tree	findDeps
Code	findDeps
Distance : 12

28
Tree	IndependentAnnotationEngine
Code	IndependentAnnotationEngine
Distance : 12

29
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

30
Tree	otherValue
Code	otherValue
Distance : 12

31
Tree	scopeRoots
Code	scopeRoots
Distance : 12

32
Tree	expressionWithScopeCall
Code	expressionWithScopeCall
Distance : 12

33
Tree	RegularizedGamma.P
Code	RegularizedGamma.P
Distance : 12

34
Tree	exportedNameToLocalQName
Code	exportedNameToLocalQName
Distance : 12

35
Tree	Token.BLOCK
Code	Token.BLOCK
Distance : 12

36
Tree	OnePointCrossover
Code	OnePointCrossover
Distance : 12

37
Tree	qName
Code	qName
Distance : 12

38
Tree	logBeta
Code	logBeta
Distance : 12

39
Tree	ASYNC_FN
Code	ASYNC_FN
Distance : 12

40
Tree	PeriodAxis
Code	PeriodAxis
Distance : 12

41
Tree	iDurationConverters
Code	iDurationConverters
Distance : 12

42
Tree	createBigInteger
Code	createBigInteger
Distance : 12

43
Tree	edgeToNode
Code	edgeToNode
Distance : 12

44
Tree	Token.TYPE_ALIAS
Code	Token.TYPE_ALIAS
Distance : 12

45
Tree	BigFractionMatrixConverter
Code	BigFractionMatrixConverter
Distance : 12

46
Tree	RegisteredInvocationsTest
Code	RegisteredInvocationsTest
Distance : 12

47
Tree	declaresFunctionOrClass
Code	declaresFunctionOrClass
Distance : 12

48
Tree	aV
Code	aV
Distance : 12

49
Tree	jsDoc
Code	jsDoc
Distance : 12

50
Tree	bestFinal
Code	bestFinal
Distance : 12

51
Tree	dataInOrder
Code	dataInOrder
Distance : 12

52
Tree	Factorial
Code	Factorial
Distance : 12

53
Tree	actualMethod
Code	actualMethod
Distance : 12

54
Tree	objectOutputStream
Code	objectOutputStream
Distance : 12

55
Tree	mathDotPowCall
Code	mathDotPowCall
Distance : 12

56
Tree	parseTestCode
Code	parseTestCode
Distance : 12

57
Tree	stirlingS2
Code	stirlingS2
Distance : 12

58
Tree	Second
Code	Second
Distance : 12

59
Tree	microsphereData
Code	microsphereData
Distance : 12

60
Tree	FParser
Code	FParser
Distance : 12

61
Tree	overflow
Code	overflow
Distance : 12

62
Tree	astMatcher
Code	astMatcher
Distance : 12

63
Tree	TestProblem5
Code	TestProblem5
Distance : 12

64
Tree	caseLabel
Code	caseLabel
Distance : 12

65
Tree	SymmLQ
Code	SymmLQ
Distance : 12

66
Tree	superClassQName
Code	superClassQName
Distance : 12

67
Tree	adj
Code	adj
Distance : 12

68
Tree	symbolMap
Code	symbolMap
Distance : 12

69
Tree	cachedU
Code	cachedU
Distance : 12

70
Tree	filePointer
Code	filePointer
Distance : 12

71
Tree	sgY2
Code	sgY2
Distance : 12

72
Tree	Gamma
Code	Gamma
Distance : 12

73
Tree	then
Code	then
Distance : 12

74
Tree	testErrorExterns
Code	testErrorExterns
Distance : 12

75
Tree	lastIndex
Code	lastIndex
Distance : 12

76
Tree	minorTickMarkStroke
Code	minorTickMarkStroke
Distance : 12

77
Tree	tracer
Code	tracer
Distance : 12

78
Tree	getIntegerNumberFormat
Code	getIntegerNumberFormat
Distance : 12

79
Tree	assignmentParent
Code	assignmentParent
Distance : 12

80
Tree	enhancer
Code	enhancer
Distance : 12

81
Tree	clone.seriesList
Code	clone.seriesList
Distance : 12

82
Tree	HALF_LOG_2_PI
Code	HALF_LOG_2_PI
Distance : 12

83
Tree	SQRT_TWO_PI
Code	SQRT_TWO_PI
Distance : 12

84
Tree	detachChildren
Code	detachChildren
Distance : 12

85
Tree	the_mock_type
Code	the_mock_type
Distance : 12

86
Tree	ebeDivide
Code	ebeDivide
Distance : 12

87
Tree	clone.zValues
Code	clone.zValues
Distance : 12

88
Tree	objectsLevel2
Code	objectsLevel2
Distance : 12

89
Tree	noDefaultConstructor
Code	noDefaultConstructor
Distance : 12

90
Tree	matchedNodeInfo
Code	matchedNodeInfo
Distance : 12

91
Tree	COULD_NOT_DESERIALIZE_AST
Code	COULD_NOT_DESERIALIZE_AST
Distance : 12

92
Tree	subformats
Code	subformats
Distance : 12

93
Tree	EPS
Code	EPS
Distance : 12

94
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 12

95
Tree	testLegalConstReferenceBetweenModules
Code	testLegalConstReferenceBetweenModules
Distance : 12

96
Tree	GETTER_ERROR_MESSAGE
Code	GETTER_ERROR_MESSAGE
Distance : 12

97
Tree	handleStubDefinition
Code	handleStubDefinition
Distance : 12

98
Tree	angleLabelFont
Code	angleLabelFont
Distance : 12

99
Tree	InlineByteBuddyMockMaker
Code	InlineByteBuddyMockMaker
Distance : 12

100
Tree	EXP_INT_A
Code	EXP_INT_A
Distance : 12

101
Tree	getQuotedString
Code	getQuotedString
Distance : 12

102
Tree	validateNodeType
Code	validateNodeType
Distance : 12

103
Tree	exprResultNode
Code	exprResultNode
Distance : 12

104
Tree	j2clPassMode
Code	j2clPassMode
Distance : 12

105
Tree	BinomialCoefficientDouble
Code	BinomialCoefficientDouble
Distance : 12

106
Tree	replaceSymbol
Code	replaceSymbol
Distance : 12

107
Tree	m.length
Code	m.length
Distance : 12

108
Tree	TwoDigitYearField
Code	TwoDigitYearField
Distance : 12

109
Tree	isLocallyInferred
Code	isLocallyInferred
Distance : 12

110
Tree	requiresTypes
Code	requiresTypes
Distance : 12

111
Tree	defUse
Code	defUse
Distance : 12

112
Tree	defineVars
Code	defineVars
Distance : 12

113
Tree	PeriodAxisLabelInfo
Code	PeriodAxisLabelInfo
Distance : 12

114
Tree	functionA
Code	functionA
Distance : 12

115
Tree	urlTagFragmentGenerator
Code	urlTagFragmentGenerator
Distance : 12

116
Tree	functionNames
Code	functionNames
Distance : 12

117
Tree	optimizations
Code	optimizations
Distance : 12

118
Tree	mainRoot
Code	mainRoot
Distance : 12

119
Tree	activeXObject
Code	activeXObject
Distance : 12

120
Tree	neu
Code	neu
Distance : 12

121
Tree	cachedQT
Code	cachedQT
Distance : 12

122
Tree	SparseGradient
Code	SparseGradient
Distance : 12

123
Tree	TimePeriodValue
Code	TimePeriodValue
Distance : 12

124
Tree	walk
Code	walk
Distance : 12

125
Tree	inGlobalScope
Code	inGlobalScope
Distance : 12

126
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 12

127
Tree	g0Positive
Code	g0Positive
Distance : 12

128
Tree	increasing
Code	increasing
Distance : 12

129
Tree	widthSufficient
Code	widthSufficient
Distance : 12

130
Tree	candidateDefinition
Code	candidateDefinition
Distance : 12

131
Tree	compileFiles
Code	compileFiles
Distance : 12

132
Tree	maybeSanityCheck
Code	maybeSanityCheck
Distance : 12

133
Tree	minadj
Code	minadj
Distance : 12

134
Tree	refDer
Code	refDer
Distance : 12

135
Tree	di
Code	di
Distance : 12

136
Tree	newClusters
Code	newClusters
Distance : 12

137
Tree	polymerVersion
Code	polymerVersion
Distance : 12

138
Tree	caseMatches
Code	caseMatches
Distance : 12

139
Tree	setRange
Code	setRange
Distance : 12

140
Tree	clone.items
Code	clone.items
Distance : 12

141
Tree	LogarithmicAxis
Code	LogarithmicAxis
Distance : 12

142
Tree	maybeRunValidityCheck
Code	maybeRunValidityCheck
Distance : 12

143
Tree	PieSectionEntity
Code	PieSectionEntity
Distance : 12

144
Tree	countries
Code	countries
Distance : 12

145
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 12

146
Tree	cachedL
Code	cachedL
Distance : 12

147
Tree	checkEquals
Code	checkEquals
Distance : 12

148
Tree	poly
Code	poly
Distance : 12

149
Tree	Space
Code	Space
Distance : 12

150
Tree	FACTORIAL
Code	FACTORIAL
Distance : 12

151
Tree	variablesToInclude.length
Code	variablesToInclude.length
Distance : 12

152
Tree	tags
Code	tags
Distance : 12

153
Tree	power
Code	power
Distance : 12

154
Tree	LENIENT
Code	LENIENT
Distance : 12

155
Tree	rdf
Code	rdf
Distance : 12

156
Tree	splitOnNullResults
Code	splitOnNullResults
Distance : 12

157
Tree	LogBeta
Code	LogBeta
Distance : 12

158
Tree	arzneg
Code	arzneg
Distance : 12

159
Tree	tournamentPopulation
Code	tournamentPopulation
Distance : 12

160
Tree	customizedEngine
Code	customizedEngine
Distance : 12

161
Tree	_boundaries
Code	_boundaries
Distance : 12

162
Tree	allJsDocParams
Code	allJsDocParams
Distance : 12

163
Tree	LogGamma
Code	LogGamma
Distance : 12

164
Tree	fnQualifiedName
Code	fnQualifiedName
Distance : 12

165
Tree	cachedTransform
Code	cachedTransform
Distance : 12

166
Tree	visitClass
Code	visitClass
Distance : 12

167
Tree	iInteger
Code	iInteger
Distance : 12

168
Tree	pivotRow
Code	pivotRow
Distance : 12

169
Tree	sumObserved
Code	sumObserved
Distance : 12

170
Tree	usingNameNode
Code	usingNameNode
Distance : 12

171
Tree	assertMessageContains
Code	assertMessageContains
Distance : 12

172
Tree	InvocationNotifierHandler
Code	InvocationNotifierHandler
Distance : 12

173
Tree	rewriteGeneratorBody
Code	rewriteGeneratorBody
Distance : 12

174
Tree	chromosomeRepresentation
Code	chromosomeRepresentation
Distance : 12

175
Tree	assertNode
Code	assertNode
Distance : 12

176
Tree	out.value
Code	out.value
Distance : 12

177
Tree	validateDefaultValue
Code	validateDefaultValue
Distance : 12

178
Tree	objectiveValue
Code	objectiveValue
Distance : 12

179
Tree	MockitoVerificationModeTest
Code	MockitoVerificationModeTest
Distance : 12

180
Tree	partialDerivatives
Code	partialDerivatives
Distance : 12

181
Tree	emptiedClinitMethods
Code	emptiedClinitMethods
Distance : 12

182
Tree	aliasExpanded
Code	aliasExpanded
Distance : 12

183
Tree	DummyRandomKey
Code	DummyRandomKey
Distance : 12

184
Tree	CharacterLiteral
Code	CharacterLiteral
Distance : 12

185
Tree	stdErrors
Code	stdErrors
Distance : 12

186
Tree	clone.rangeAxis
Code	clone.rangeAxis
Distance : 12

187
Tree	currentFile
Code	currentFile
Distance : 12

188
Tree	separatorStroke
Code	separatorStroke
Distance : 12

189
Tree	FunctionTypeBuilder
Code	FunctionTypeBuilder
Distance : 12

190
Tree	SerializationUtils
Code	SerializationUtils
Distance : 12

191
Tree	negBase
Code	negBase
Distance : 12

192
Tree	JSDocInfo
Code	JSDocInfo
Distance : 12

193
Tree	fields.monthOfYear
Code	fields.monthOfYear
Distance : 12

194
Tree	initialStepSize
Code	initialStepSize
Distance : 12

195
Tree	packed
Code	packed
Distance : 12

196
Tree	parsedMessage
Code	parsedMessage
Distance : 12

197
Tree	yieldFinder
Code	yieldFinder
Distance : 12

198
Tree	compilationLevelParsed
Code	compilationLevelParsed
Distance : 12

199
Tree	orders
Code	orders
Distance : 12

========================================================================


========================================================================
Example Number: 78
Parent Code is: 
if ( real == NUMBER_CONSTANT && imaginary == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Child code is: 
if ( real == NUMBER_CONSTANT && imaginary == NUMBER_CONSTANT ) { return INF ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=real}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=imaginary}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=real}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=imaginary}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=INF}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/5/parent/src_main_java_org_apache_commons_math3_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if
Code	if
Distance : 14

1
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 15

2
Tree	constructor
Code	constructor
Distance : 15

3
Tree	assertThat
Code	assertThat
Distance : 15

4
Tree	grandparent
Code	grandparent
Distance : 15

5
Tree	Matchers
Code	Matchers
Distance : 15

6
Tree	setField
Code	setField
Distance : 15

7
Tree	parent
Code	parent
Distance : 15

8
Tree	stdDev
Code	stdDev
Distance : 15

9
Tree	removeUnusedPrototypeProperties
Code	removeUnusedPrototypeProperties
Distance : 15

10
Tree	cloned.chars
Code	cloned.chars
Distance : 15

11
Tree	throw
Code	throw
Distance : 15

12
Tree	ak2
Code	ak2
Distance : 15

13
Tree	isSubtypeWithoutStructuralTyping
Code	isSubtypeWithoutStructuralTyping
Distance : 15

14
Tree	rhs.isNaN
Code	rhs.isNaN
Distance : 15

15
Tree	JodaTimePermission
Code	JodaTimePermission
Distance : 15

16
Tree	rows
Code	rows
Distance : 15

17
Tree	defineSlot
Code	defineSlot
Distance : 15

18
Tree	p
Code	p
Distance : 15

19
Tree	StaticTypedSlot
Code	StaticTypedSlot
Distance : 15

20
Tree	drawZoomRectangle
Code	drawZoomRectangle
Distance : 15

21
Tree	handleGet
Code	handleGet
Distance : 15

22
Tree	renamer
Code	renamer
Distance : 15

23
Tree	expectedFeatures
Code	expectedFeatures
Distance : 15

24
Tree	checks
Code	checks
Distance : 15

25
Tree	Range
Code	Range
Distance : 15

26
Tree	Assert
Code	Assert
Distance : 15

27
Tree	Keywords
Code	Keywords
Distance : 15

28
Tree	Callback
Code	Callback
Distance : 15

29
Tree	interiorGap
Code	interiorGap
Distance : 15

30
Tree	catch
Code	catch
Distance : 15

31
Tree	setLayout
Code	setLayout
Distance : 15

32
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 15

33
Tree	isUnresolved
Code	isUnresolved
Distance : 15

34
Tree	remove
Code	remove
Distance : 15

35
Tree	packed
Code	packed
Distance : 15

36
Tree	GaussNewtonOptimizer
Code	GaussNewtonOptimizer
Distance : 15

37
Tree	Result
Code	Result
Distance : 15

38
Tree	nextSibling
Code	nextSibling
Distance : 15

39
Tree	mocks.length
Code	mocks.length
Distance : 15

40
Tree	indexOf
Code	indexOf
Distance : 15

41
Tree	k
Code	k
Distance : 15

42
Tree	foundType
Code	foundType
Distance : 15

43
Tree	v.length
Code	v.length
Distance : 15

44
Tree	realFormat
Code	realFormat
Distance : 15

45
Tree	jsdoc
Code	jsdoc
Distance : 15

46
Tree	entry
Code	entry
Distance : 15

47
Tree	JSDocInfo
Code	JSDocInfo
Distance : 15

48
Tree	that.gradientPaintTransformer
Code	that.gradientPaintTransformer
Distance : 15

49
Tree	LocalizedFormats.FUNCTION
Code	LocalizedFormats.FUNCTION
Distance : 15

50
Tree	qrRankingThreshold
Code	qrRankingThreshold
Distance : 15

51
Tree	that
Code	that
Distance : 15

52
Tree	EnvTypePair
Code	EnvTypePair
Distance : 15

53
Tree	lower
Code	lower
Distance : 15

54
Tree	JSType
Code	JSType
Distance : 15

55
Tree	declarationRoot
Code	declarationRoot
Distance : 15

56
Tree	maxGenerations
Code	maxGenerations
Distance : 15

57
Tree	FastMath
Code	FastMath
Distance : 15

58
Tree	assertNull
Code	assertNull
Distance : 15

59
Tree	fraction
Code	fraction
Distance : 15

60
Tree	Invocation
Code	Invocation
Distance : 15

61
Tree	TDistribution
Code	TDistribution
Distance : 15

62
Tree	isSubtype
Code	isSubtype
Distance : 15

63
Tree	angleDegrees
Code	angleDegrees
Distance : 15

64
Tree	ltI
Code	ltI
Distance : 15

65
Tree	GlobalScopeBuilder
Code	GlobalScopeBuilder
Distance : 15

66
Tree	findDeclaredNames
Code	findDeclaredNames
Distance : 15

67
Tree	Preconditions
Code	Preconditions
Distance : 15

68
Tree	dev
Code	dev
Distance : 15

69
Tree	{
Code	{
Distance : 14

70
Tree	MockUtil
Code	MockUtil
Distance : 15

71
Tree	(
Code	(
Distance : 14

72
Tree	expansionMode
Code	expansionMode
Distance : 15

73
Tree	StaticTypedScope
Code	StaticTypedScope
Distance : 15

74
Tree	!
Code	!
Distance : 15

75
Tree	>=
Code	>=
Distance : 15

76
Tree	msgNode
Code	msgNode
Distance : 15

77
Tree	assertNotSame
Code	assertNotSame
Distance : 15

78
Tree	clone.data
Code	clone.data
Distance : 15

79
Tree	array
Code	array
Distance : 15

80
Tree	passes
Code	passes
Distance : 15

81
Tree	assertTrue
Code	assertTrue
Distance : 15

82
Tree	currentStatement
Code	currentStatement
Distance : 15

83
Tree	flag
Code	flag
Distance : 15

84
Tree	NodeUtil
Code	NodeUtil
Distance : 15

85
Tree	optima
Code	optima
Distance : 15

86
Tree	checkArgument
Code	checkArgument
Distance : 15

87
Tree	setDefaultToolTipGenerator
Code	setDefaultToolTipGenerator
Distance : 15

88
Tree	while
Code	while
Distance : 15

89
Tree	boolean
Code	boolean
Distance : 15

90
Tree	for
Code	for
Distance : 15

91
Tree	isNaN
Code	isNaN
Distance : 15

92
Tree	try
Code	try
Distance : 15

93
Tree	ret
Code	ret
Distance : 15

94
Tree	reporter
Code	reporter
Distance : 15

95
Tree	objType
Code	objType
Distance : 15

96
Tree	assertFalse
Code	assertFalse
Distance : 15

97
Tree	recordImplicitInterfaceUses
Code	recordImplicitInterfaceUses
Distance : 15

98
Tree	synchronized
Code	synchronized
Distance : 15

99
Tree	TimeSeries
Code	TimeSeries
Distance : 15

100
Tree	else
Code	else
Distance : 15

101
Tree	computeEscaped
Code	computeEscaped
Distance : 15

102
Tree	private
Code	private
Distance : 15

103
Tree	Var
Code	Var
Distance : 15

104
Tree	stub
Code	stub
Distance : 15

105
Tree	comparison
Code	comparison
Distance : 15

106
Tree	originalBody
Code	originalBody
Distance : 15

107
Tree	minadj
Code	minadj
Distance : 15

108
Tree	obj
Code	obj
Distance : 15

109
Tree	leftType
Code	leftType
Distance : 15

110
Tree	separator
Code	separator
Distance : 15

111
Tree	recordStructuralInterfaceUses
Code	recordStructuralInterfaceUses
Distance : 15

112
Tree	TranspilationPasses
Code	TranspilationPasses
Distance : 15

113
Tree	Property
Code	Property
Distance : 15

114
Tree	removeUnusedProperties
Code	removeUnusedProperties
Distance : 15

115
Tree	lhs.length
Code	lhs.length
Distance : 15

116
Tree	rightType
Code	rightType
Distance : 15

117
Tree	minValue
Code	minValue
Distance : 15

118
Tree	return
Code	return
Distance : 14

119
Tree	cjs
Code	cjs
Distance : 15

120
Tree	TypeMismatch
Code	TypeMismatch
Distance : 15

121
Tree	searchSeq
Code	searchSeq
Distance : 15

122
Tree	abstract
Code	abstract
Distance : 15

123
Tree	upper
Code	upper
Distance : 15

124
Tree	MathIllegalArgumentException
Code	MathIllegalArgumentException
Distance : 15

125
Tree	protected
Code	protected
Distance : 15

126
Tree	windowSize
Code	windowSize
Distance : 15

127
Tree	startPos
Code	startPos
Distance : 15

128
Tree	s
Code	s
Distance : 15

129
Tree	shift
Code	shift
Distance : 15

130
Tree	clone.legendLine
Code	clone.legendLine
Distance : 15

131
Tree	minPos
Code	minPos
Distance : 15

132
Tree	continue;
Code	continue;
Distance : 15

133
Tree	numElements
Code	numElements
Distance : 15

134
Tree	newLiteralNode
Code	newLiteralNode
Distance : 15

135
Tree	MathException
Code	MathException
Distance : 15

136
Tree	hasErrors
Code	hasErrors
Distance : 15

137
Tree	<=
Code	<=
Distance : 15

138
Tree	MathIllegalStateException
Code	MathIllegalStateException
Distance : 15

139
Tree	unverified
Code	unverified
Distance : 15

140
Tree	inFunction
Code	inFunction
Distance : 15

141
Tree	JDKRandomAdaptor
Code	JDKRandomAdaptor
Distance : 15

142
Tree	typeParam
Code	typeParam
Distance : 15

143
Tree	nullText
Code	nullText
Distance : 15

144
Tree	Paint
Code	Paint
Distance : 15

145
Tree	appendQuotedString
Code	appendQuotedString
Distance : 15

146
Tree	NullArgumentException
Code	NullArgumentException
Distance : 15

147
Tree	public
Code	public
Distance : 15

148
Tree	s1
Code	s1
Distance : 15

149
Tree	YearMonthType
Code	YearMonthType
Distance : 15

150
Tree	NotPositiveException
Code	NotPositiveException
Distance : 15

151
Tree	norm2
Code	norm2
Distance : 15

152
Tree	isDeclaredSloppy
Code	isDeclaredSloppy
Distance : 15

153
Tree	PearsonsCorrelation
Code	PearsonsCorrelation
Distance : 15

154
Tree	isDefaultValue
Code	isDefaultValue
Distance : 15

155
Tree	key
Code	key
Distance : 15

156
Tree	entities
Code	entities
Distance : 15

157
Tree	assertScope
Code	assertScope
Distance : 15

158
Tree	addEntity
Code	addEntity
Distance : 15

159
Tree	markConstructorToProcess
Code	markConstructorToProcess
Distance : 15

160
Tree	_boundaries
Code	_boundaries
Distance : 15

161
Tree	str
Code	str
Distance : 15

162
Tree	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN
Code	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN
Distance : 15

163
Tree	cur
Code	cur
Distance : 15

164
Tree	isEnhancedFor
Code	isEnhancedFor
Distance : 15

165
Tree	invalidatingTypes
Code	invalidatingTypes
Distance : 15

166
Tree	FeatureSet.Feature.MODULES
Code	FeatureSet.Feature.MODULES
Distance : 15

167
Tree	appendPrefix
Code	appendPrefix
Distance : 15

168
Tree	validateBlock
Code	validateBlock
Distance : 15

169
Tree	isEquals
Code	isEquals
Distance : 15

170
Tree	Double.MAX_VALUE
Code	Double.MAX_VALUE
Distance : 15

171
Tree	assumeTrue
Code	assumeTrue
Distance : 15

172
Tree	maybeAssign
Code	maybeAssign
Distance : 15

173
Tree	pos
Code	pos
Distance : 15

174
Tree	isKeyword
Code	isKeyword
Distance : 15

175
Tree	has
Code	has
Distance : 15

176
Tree	CategoryLabelWidthType
Code	CategoryLabelWidthType
Distance : 15

177
Tree	setFeatureSet
Code	setFeatureSet
Distance : 15

178
Tree	iStartMillis
Code	iStartMillis
Distance : 15

179
Tree	mean.length
Code	mean.length
Distance : 15

180
Tree	case
Code	case
Distance : 15

181
Tree	sigma
Code	sigma
Distance : 15

182
Tree	performPostCompilationTasks
Code	performPostCompilationTasks
Distance : 15

183
Tree	toFeatureSet
Code	toFeatureSet
Distance : 15

184
Tree	ObjectUtils
Code	ObjectUtils
Distance : 15

185
Tree	++
Code	++
Distance : 15

186
Tree	detects
Code	detects
Distance : 15

187
Tree	typeWithBannedProp
Code	typeWithBannedProp
Distance : 15

188
Tree	za
Code	za
Distance : 15

189
Tree	lu
Code	lu
Distance : 15

190
Tree	boundaries
Code	boundaries
Distance : 15

191
Tree	Object
Code	Object
Distance : 15

192
Tree	isEmpty
Code	isEmpty
Distance : 15

193
Tree	gradientPaintTransformer
Code	gradientPaintTransformer
Distance : 15

194
Tree	x0
Code	x0
Distance : 15

195
Tree	isSet
Code	isSet
Distance : 15

196
Tree	Double
Code	Double
Distance : 15

197
Tree	numberOfElements
Code	numberOfElements
Distance : 15

198
Tree	iter
Code	iter
Distance : 15

199
Tree	CharSequenceUtils
Code	CharSequenceUtils
Distance : 15

========================================================================


========================================================================
Example Number: 79
Parent Code is: 
new Reporter () . smartNullPointerException ( location ) ;
-------------------------------------------------------------------------------
Child code is: 
new Reporter () . smartNullPointerException ( obj , location ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=Reporter})) (216{val=()})) (235{val=.}) (802{val=smartNullPointerException}) (214{val=(}) (800{val=location}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=Reporter})) (216{val=()})) (235{val=.}) (802{val=smartNullPointerException}) (214{val=(}) (800{val=obj}) (234{val=,}) (800{val=location}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/30/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsSmartNulls.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	new
Code	new
Distance : 10

1
Tree	BigReal
Code	BigReal
Distance : 11

2
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 11

3
Tree	traverseEs6
Code	traverseEs6
Distance : 11

4
Tree	TypedScopeCreator
Code	TypedScopeCreator
Distance : 11

5
Tree	EnvTypePair
Code	EnvTypePair
Distance : 11

6
Tree	Fraction
Code	Fraction
Distance : 11

7
Tree	ValueMarker
Code	ValueMarker
Distance : 11

8
Tree	MillisDuration
Code	MillisDuration
Distance : 11

9
Tree	LineNeedle
Code	LineNeedle
Distance : 11

10
Tree	NameDeclarationStatement
Code	NameDeclarationStatement
Distance : 11

11
Tree	ChartPanel
Code	ChartPanel
Distance : 11

12
Tree	LevelRenderer
Code	LevelRenderer
Distance : 11

13
Tree	VectorRenderer
Code	VectorRenderer
Distance : 11

14
Tree	MutableObject
Code	MutableObject
Distance : 11

15
Tree	XYErrorRenderer
Code	XYErrorRenderer
Distance : 11

16
Tree	sc
Code	sc
Distance : 11

17
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 11

18
Tree	ArgumentCaptor
Code	ArgumentCaptor
Distance : 11

19
Tree	HistogramDataset
Code	HistogramDataset
Distance : 11

20
Tree	SymbolTable
Code	SymbolTable
Distance : 11

21
Tree	scopeCreator
Code	scopeCreator
Distance : 11

22
Tree	StackTraceElement
Code	StackTraceElement
Distance : 11

23
Tree	StatementFusion
Code	StatementFusion
Distance : 11

24
Tree	maybeTemporarilyLiveNodes
Code	maybeTemporarilyLiveNodes
Distance : 11

25
Tree	Equals
Code	Equals
Distance : 11

26
Tree	position
Code	position
Distance : 11

27
Tree	XYTitleAnnotation
Code	XYTitleAnnotation
Distance : 11

28
Tree	XYPlot
Code	XYPlot
Distance : 11

29
Tree	LINE_JOINER
Code	LINE_JOINER
Distance : 11

30
Tree	WindNeedle
Code	WindNeedle
Distance : 11

31
Tree	MODIFY_TRUNCATE
Code	MODIFY_TRUNCATE
Distance : 11

32
Tree	FastScatterPlot
Code	FastScatterPlot
Distance : 11

33
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 11

34
Tree	WaterfallBarRenderer
Code	WaterfallBarRenderer
Distance : 11

35
Tree	PeepholeFoldConstants
Code	PeepholeFoldConstants
Distance : 11

36
Tree	TestFieldProblem3
Code	TestFieldProblem3
Distance : 11

37
Tree	assertThat
Code	assertThat
Distance : 11

38
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 11

39
Tree	OpenIntToFieldHashMap
Code	OpenIntToFieldHashMap
Distance : 11

40
Tree	RegionFactory
Code	RegionFactory
Distance : 11

41
Tree	testData
Code	testData
Distance : 11

42
Tree	DerivativeStructure
Code	DerivativeStructure
Distance : 11

43
Tree	ParamChecks
Code	ParamChecks
Distance : 11

44
Tree	flowScope
Code	flowScope
Distance : 11

45
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 11

46
Tree	OHLC
Code	OHLC
Distance : 11

47
Tree	interpolatedState
Code	interpolatedState
Distance : 11

48
Tree	inlineFunctionsInFile
Code	inlineFunctionsInFile
Distance : 11

49
Tree	penalty
Code	penalty
Distance : 11

50
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 11

51
Tree	Args
Code	Args
Distance : 11

52
Tree	strictly
Code	strictly
Distance : 11

53
Tree	c2
Code	c2
Distance : 11

54
Tree	DateTimeParser
Code	DateTimeParser
Distance : 11

55
Tree	ChartUtils
Code	ChartUtils
Distance : 11

56
Tree	byte
Code	byte
Distance : 11

57
Tree	creator
Code	creator
Distance : 11

58
Tree	Invocation
Code	Invocation
Distance : 11

59
Tree	injectNamespace
Code	injectNamespace
Distance : 11

60
Tree	CyclicNumberAxis
Code	CyclicNumberAxis
Distance : 11

61
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 11

62
Tree	minStep
Code	minStep
Distance : 11

63
Tree	Second
Code	Second
Distance : 11

64
Tree	DataUtils
Code	DataUtils
Distance : 11

65
Tree	StatisticalLineAndShapeRenderer
Code	StatisticalLineAndShapeRenderer
Distance : 11

66
Tree	dev
Code	dev
Distance : 11

67
Tree	tol
Code	tol
Distance : 11

68
Tree	ParametricUnivariateRealFunction
Code	ParametricUnivariateRealFunction
Distance : 11

69
Tree	dy
Code	dy
Distance : 11

70
Tree	es
Code	es
Distance : 11

71
Tree	ItemLabelPosition
Code	ItemLabelPosition
Distance : 11

72
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 11

73
Tree	UnivariateRealSolver
Code	UnivariateRealSolver
Distance : 11

74
Tree	DateFormatSymbols
Code	DateFormatSymbols
Distance : 11

75
Tree	cachedP
Code	cachedP
Distance : 11

76
Tree	ft
Code	ft
Distance : 11

77
Tree	TypeInference
Code	TypeInference
Distance : 11

78
Tree	s
Code	s
Distance : 11

79
Tree	subTestData
Code	subTestData
Distance : 11

80
Tree	StandardXYZToolTipGenerator
Code	StandardXYZToolTipGenerator
Distance : 11

81
Tree	BoxAndWhiskerToolTipGenerator
Code	BoxAndWhiskerToolTipGenerator
Distance : 11

82
Tree	RelativeDateFormat
Code	RelativeDateFormat
Distance : 11

83
Tree	ImmutableList
Code	ImmutableList
Distance : 11

84
Tree	Year
Code	Year
Distance : 11

85
Tree	target
Code	target
Distance : 11

86
Tree	join
Code	join
Distance : 11

87
Tree	getAnchorPoint
Code	getAnchorPoint
Distance : 11

88
Tree	StrokeMap
Code	StrokeMap
Distance : 11

89
Tree	nordsieck
Code	nordsieck
Distance : 11

90
Tree	leftType
Code	leftType
Distance : 11

91
Tree	ReferenceCollectingCallback
Code	ReferenceCollectingCallback
Distance : 11

92
Tree	ofCartesian
Code	ofCartesian
Distance : 11

93
Tree	PeepholeRemoveDeadCode
Code	PeepholeRemoveDeadCode
Distance : 11

94
Tree	short
Code	short
Distance : 11

95
Tree	alwaysTrue
Code	alwaysTrue
Distance : 11

96
Tree	static
Code	static
Distance : 11

97
Tree	strategy
Code	strategy
Distance : 11

98
Tree	verify
Code	verify
Distance : 11

99
Tree	MockControl
Code	MockControl
Distance : 11

100
Tree	ScopeCreator
Code	ScopeCreator
Distance : 11

101
Tree	FlowScope
Code	FlowScope
Distance : 11

102
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 11

103
Tree	<
Code	<
Distance : 11

104
Tree	assertEquals
Code	assertEquals
Distance : 11

105
Tree	RealMatrix
Code	RealMatrix
Distance : 11

106
Tree	mockitoStubber
Code	mockitoStubber
Distance : 11

107
Tree	ClassLoader
Code	ClassLoader
Distance : 11

108
Tree	FieldRotation
Code	FieldRotation
Distance : 11

109
Tree	process
Code	process
Distance : 11

110
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 11

111
Tree	PaintMap
Code	PaintMap
Distance : 11

112
Tree	testEs6
Code	testEs6
Distance : 11

113
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 11

114
Tree	file
Code	file
Distance : 11

115
Tree	calendar
Code	calendar
Distance : 11

116
Tree	int
Code	int
Distance : 11

117
Tree	assertClose
Code	assertClose
Distance : 11

118
Tree	char
Code	char
Distance : 11

119
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 11

120
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 11

121
Tree	Vector3D
Code	Vector3D
Distance : 11

122
Tree	TransformUtils
Code	TransformUtils
Distance : 11

123
Tree	setField
Code	setField
Distance : 11

124
Tree	MatrixSeriesCollection
Code	MatrixSeriesCollection
Distance : 11

125
Tree	return
Code	return
Distance : 11

126
Tree	testTypes
Code	testTypes
Distance : 11

127
Tree	void
Code	void
Distance : 11

128
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 11

129
Tree	throw
Code	throw
Distance : 11

130
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 11

131
Tree	MatrixUtils
Code	MatrixUtils
Distance : 11

132
Tree	MethodInterceptorFilter
Code	MethodInterceptorFilter
Distance : 11

133
Tree	Complex
Code	Complex
Distance : 11

134
Tree	false
Code	false
Distance : 11

135
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 11

136
Tree	OffsetDateTimeField
Code	OffsetDateTimeField
Distance : 11

137
Tree	SlidingCategoryDataset
Code	SlidingCategoryDataset
Distance : 11

138
Tree	FieldMatrix
Code	FieldMatrix
Distance : 11

139
Tree	Math
Code	Math
Distance : 11

140
Tree	standardDeviation
Code	standardDeviation
Distance : 11

141
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 11

142
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 11

143
Tree	builder
Code	builder
Distance : 11

144
Tree	FieldUtils
Code	FieldUtils
Distance : 11

145
Tree	iChronology
Code	iChronology
Distance : 11

146
Tree	!
Code	!
Distance : 11

147
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 11

148
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 11

149
Tree	MeanAndStandardDeviation
Code	MeanAndStandardDeviation
Distance : 11

150
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 11

151
Tree	assertType
Code	assertType
Distance : 11

152
Tree	AxisLocation
Code	AxisLocation
Distance : 11

153
Tree	RunnerImpl
Code	RunnerImpl
Distance : 11

154
Tree	assertChanges
Code	assertChanges
Distance : 11

155
Tree	Reporter
Code	Reporter
Distance : 10

156
Tree	GroupedStackedBarRenderer
Code	GroupedStackedBarRenderer
Distance : 11

157
Tree	DateTimeField
Code	DateTimeField
Distance : 11

158
Tree	DefaultBoxAndWhiskerCategoryDataset
Code	DefaultBoxAndWhiskerCategoryDataset
Distance : 11

159
Tree	StubbingArgMismatches
Code	StubbingArgMismatches
Distance : 11

160
Tree	Circle
Code	Circle
Distance : 11

161
Tree	LegendGraphic
Code	LegendGraphic
Distance : 11

162
Tree	rightType
Code	rightType
Distance : 11

163
Tree	FieldBracketingNthOrderBrentSolver
Code	FieldBracketingNthOrderBrentSolver
Distance : 11

164
Tree	double
Code	double
Distance : 11

165
Tree	testTypesWithCommonExterns
Code	testTypesWithCommonExterns
Distance : 11

166
Tree	TypeEnv
Code	TypeEnv
Distance : 11

167
Tree	peepholePass
Code	peepholePass
Distance : 11

168
Tree	late
Code	late
Distance : 11

169
Tree	OngoingStubbingImpl
Code	OngoingStubbingImpl
Distance : 11

170
Tree	ParseBucket
Code	ParseBucket
Distance : 11

171
Tree	InvocationNotifierHandler
Code	InvocationNotifierHandler
Distance : 11

172
Tree	NodeTraversal
Code	NodeTraversal
Distance : 11

173
Tree	ContributionsProvider
Code	ContributionsProvider
Distance : 11

174
Tree	CompilerInput
Code	CompilerInput
Distance : 11

175
Tree	}
Code	}
Distance : 11

176
Tree	Strategy
Code	Strategy
Distance : 11

177
Tree	IntervalCategoryToolTipGenerator
Code	IntervalCategoryToolTipGenerator
Distance : 11

178
Tree	rewriteGeneratorBodyWithVars
Code	rewriteGeneratorBodyWithVars
Distance : 11

179
Tree	Assertions
Code	Assertions
Distance : 11

180
Tree	BetaDistribution
Code	BetaDistribution
Distance : 11

181
Tree	Period
Code	Period
Distance : 11

182
Tree	mismatches
Code	mismatches
Distance : 11

183
Tree	TimePeriod
Code	TimePeriod
Distance : 11

184
Tree	ScopeScanner
Code	ScopeScanner
Distance : 11

185
Tree	DefaultStatisticalCategoryDataset
Code	DefaultStatisticalCategoryDataset
Distance : 11

186
Tree	MutableTimePeriod
Code	MutableTimePeriod
Distance : 11

187
Tree	Float
Code	Float
Distance : 11

188
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 11

189
Tree	KeyToGroupMap
Code	KeyToGroupMap
Distance : 11

190
Tree	InvocationContainer
Code	InvocationContainer
Distance : 11

191
Tree	File
Code	File
Distance : 11

192
Tree	compiler
Code	compiler
Distance : 11

193
Tree	checkSubMatrixIndex
Code	checkSubMatrixIndex
Distance : 11

194
Tree	bp
Code	bp
Distance : 11

195
Tree	LongNeedle
Code	LongNeedle
Distance : 11

196
Tree	testNoWarning
Code	testNoWarning
Distance : 11

197
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 11

198
Tree	nSteps
Code	nSteps
Distance : 11

199
Tree	assertFalse
Code	assertFalse
Distance : 11

========================================================================


========================================================================
Example Number: 80
Parent Code is: 
return getMock ( invocation ) ;
-------------------------------------------------------------------------------
Child code is: 
return getMock ( invocation , returnTypeGenericMetadata ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getMock}) (214{val=(}) (800{val=invocation}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getMock}) (214{val=(}) (800{val=invocation}) (234{val=,}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/25/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 7

1
Tree	void
Code	void
Distance : 8

2
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 6

3
Tree	return MockitoException ;
Code	return MockitoException ;
Distance : 6

4
Tree	return ParseBucket ;
Code	return ParseBucket ;
Distance : 6

5
Tree	return timeZone ;
Code	return timeZone ;
Distance : 6

6
Tree	return Path ;
Code	return Path ;
Distance : 6

7
Tree	return registry ;
Code	return registry ;
Distance : 6

8
Tree	return runner ;
Code	return runner ;
Distance : 6

9
Tree	return wanted ;
Code	return wanted ;
Distance : 6

10
Tree	return maxEvaluations ;
Code	return maxEvaluations ;
Distance : 6

11
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 8

12
Tree	NonLinearConjugateGradientOptimizer
Code	NonLinearConjugateGradientOptimizer
Distance : 8

13
Tree	return ImmutableList ;
Code	return ImmutableList ;
Distance : 6

14
Tree	invocation
Code	invocation
Distance : 7

15
Tree	alpha
Code	alpha
Distance : 8

16
Tree	BetaDistribution
Code	BetaDistribution
Distance : 8

17
Tree	return Invocation ;
Code	return Invocation ;
Distance : 6

18
Tree	return Strings ;
Code	return Strings ;
Distance : 6

19
Tree	TooLittleActualInvocations
Code	TooLittleActualInvocations
Distance : 8

20
Tree	MutablePeriod
Code	MutablePeriod
Distance : 8

21
Tree	return commonTypes ;
Code	return commonTypes ;
Distance : 6

22
Tree	Object
Code	Object
Distance : 8

23
Tree	return Strings ;
Code	return Strings ;
Distance : 6

24
Tree	UnivariateFunction
Code	UnivariateFunction
Distance : 8

25
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 6

26
Tree	class
Code	class
Distance : 8

27
Tree	return obj ;
Code	return obj ;
Distance : 6

28
Tree	ParseBucket
Code	ParseBucket
Distance : 8

29
Tree	+
Code	+
Distance : 8

30
Tree	boolean
Code	boolean
Distance : 8

31
Tree	Invocation
Code	Invocation
Distance : 8

32
Tree	ArrayList
Code	ArrayList
Distance : 8

33
Tree	return TooLittleActualInvocations ;
Code	return TooLittleActualInvocations ;
Distance : 6

34
Tree	Period
Code	Period
Distance : 8

35
Tree	return else ;
Code	return else ;
Distance : 6

36
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 8

37
Tree	return MockitoException ;
Code	return MockitoException ;
Distance : 6

38
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 6

39
Tree	return ParseBucket ;
Code	return ParseBucket ;
Distance : 6

40
Tree	return registry ;
Code	return registry ;
Distance : 6

41
Tree	return runner ;
Code	return runner ;
Distance : 6

42
Tree	Primitives
Code	Primitives
Distance : 8

43
Tree	return commonTypes ;
Code	return commonTypes ;
Distance : 6

44
Tree	return TooLittleActualInvocations ;
Code	return TooLittleActualInvocations ;
Distance : 6

45
Tree	catch
Code	catch
Distance : 8

46
Tree	return maxEvaluations ;
Code	return maxEvaluations ;
Distance : 6

47
Tree	{
Code	{
Distance : 8

48
Tree	StringBuilder
Code	StringBuilder
Distance : 8

49
Tree	return Character ;
Code	return Character ;
Distance : 6

50
Tree	UnmockableHashCodeAndEquals
Code	UnmockableHashCodeAndEquals
Distance : 8

51
Tree	return [ ;
Code	return [ ;
Distance : 6

52
Tree	return missingEntries ;
Code	return missingEntries ;
Distance : 6

53
Tree	return methodProxy ;
Code	return methodProxy ;
Distance : 6

54
Tree	return MatrixUtils ;
Code	return MatrixUtils ;
Distance : 6

55
Tree	return start ;
Code	return start ;
Distance : 6

56
Tree	LinkedList
Code	LinkedList
Distance : 8

57
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 6

58
Tree	Cartesian3D
Code	Cartesian3D
Distance : 8

59
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 8

60
Tree	return iField ;
Code	return iField ;
Distance : 6

61
Tree	return T ;
Code	return T ;
Distance : 6

62
Tree	return matrix ;
Code	return matrix ;
Distance : 6

63
Tree	return TypeI ;
Code	return TypeI ;
Distance : 6

64
Tree	char
Code	char
Distance : 8

65
Tree	return MockCreationSettings ;
Code	return MockCreationSettings ;
Distance : 6

66
Tree	Gaussian
Code	Gaussian
Distance : 8

67
Tree	sin
Code	sin
Distance : 8

68
Tree	return >= ;
Code	return >= ;
Distance : 6

69
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 8

70
Tree	Comparable
Code	Comparable
Distance : 8

71
Tree	return Character ;
Code	return Character ;
Distance : 6

72
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 8

73
Tree	return length ;
Code	return length ;
Distance : 6

74
Tree	byte
Code	byte
Distance : 8

75
Tree	assertPatternsEqual
Code	assertPatternsEqual
Distance : 8

76
Tree	TransformUtils
Code	TransformUtils
Distance : 8

77
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 6

78
Tree	getTimeInMillis
Code	getTimeInMillis
Distance : 8

79
Tree	testNoWarning
Code	testNoWarning
Distance : 8

80
Tree	return missingEntries ;
Code	return missingEntries ;
Distance : 6

81
Tree	obj
Code	obj
Distance : 8

82
Tree	return timeZone ;
Code	return timeZone ;
Distance : 6

83
Tree	return Path ;
Code	return Path ;
Distance : 6

84
Tree	v.length
Code	v.length
Distance : 8

85
Tree	return wanted ;
Code	return wanted ;
Distance : 6

86
Tree	/
Code	/
Distance : 8

87
Tree	return MathArrays ;
Code	return MathArrays ;
Distance : 6

88
Tree	return T ;
Code	return T ;
Distance : 6

89
Tree	return matrix ;
Code	return matrix ;
Distance : 6

90
Tree	return ImmutableList ;
Code	return ImmutableList ;
Distance : 6

91
Tree	return MockCreationSettings ;
Code	return MockCreationSettings ;
Distance : 6

92
Tree	d
Code	d
Distance : 8

93
Tree	return Invocation ;
Code	return Invocation ;
Distance : 6

94
Tree	values
Code	values
Distance : 8

95
Tree	return >= ;
Code	return >= ;
Distance : 6

96
Tree	legacyNamespace
Code	legacyNamespace
Distance : 8

97
Tree	List
Code	List
Distance : 8

98
Tree	return invocation ;
Code	return invocation ;
Distance : 5

99
Tree	return invocation ;
Code	return invocation ;
Distance : 5

100
Tree	int
Code	int
Distance : 8

101
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 8

102
Tree	super
Code	super
Distance : 8

103
Tree	false
Code	false
Distance : 8

104
Tree	final
Code	final
Distance : 8

105
Tree	DiffResult
Code	DiffResult
Distance : 8

106
Tree	Coordinates3D
Code	Coordinates3D
Distance : 8

107
Tree	return data ;
Code	return data ;
Distance : 6

108
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 6

109
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 6

110
Tree	return data ;
Code	return data ;
Distance : 6

111
Tree	return else ;
Code	return else ;
Distance : 6

112
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 6

113
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 6

114
Tree	return ! ;
Code	return ! ;
Distance : 6

115
Tree	calendar
Code	calendar
Distance : 8

116
Tree	return MOCKING_PROGRESS ;
Code	return MOCKING_PROGRESS ;
Distance : 6

117
Tree	return byte ;
Code	return byte ;
Distance : 6

118
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 6

119
Tree	return ! ;
Code	return ! ;
Distance : 6

120
Tree	return MOCKING_PROGRESS ;
Code	return MOCKING_PROGRESS ;
Distance : 6

121
Tree	InvocationImpl
Code	InvocationImpl
Distance : 8

122
Tree	double
Code	double
Distance : 8

123
Tree	return true ;
Code	return true ;
Distance : 6

124
Tree	return true ;
Code	return true ;
Distance : 6

125
Tree	return false ;
Code	return false ;
Distance : 6

126
Tree	return super ;
Code	return super ;
Distance : 6

127
Tree	return super ;
Code	return super ;
Distance : 6

128
Tree	return ? ;
Code	return ? ;
Distance : 6

129
Tree	return ? ;
Code	return ? ;
Distance : 6

130
Tree	return / ;
Code	return / ;
Distance : 6

131
Tree	return / ;
Code	return / ;
Distance : 6

132
Tree	return class ;
Code	return class ;
Distance : 6

133
Tree	return class ;
Code	return class ;
Distance : 6

134
Tree	new
Code	new
Distance : 8

135
Tree	return return ;
Code	return return ;
Distance : 6

136
Tree	!
Code	!
Distance : 8

137
Tree	return return ;
Code	return return ;
Distance : 6

138
Tree	throw
Code	throw
Distance : 8

139
Tree	return InvocationImpl ;
Code	return InvocationImpl ;
Distance : 6

140
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 8

141
Tree	return cache ;
Code	return cache ;
Distance : 6

142
Tree	return InvocationImpl ;
Code	return InvocationImpl ;
Distance : 6

143
Tree	assertThat
Code	assertThat
Distance : 8

144
Tree	return cache ;
Code	return cache ;
Distance : 6

145
Tree	TypeI
Code	TypeI
Distance : 8

146
Tree	assertType
Code	assertType
Distance : 8

147
Tree	return byte ;
Code	return byte ;
Distance : 6

148
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 6

149
Tree	UnivariateSolver
Code	UnivariateSolver
Distance : 8

150
Tree	TypedVar
Code	TypedVar
Distance : 8

151
Tree	T
Code	T
Distance : 8

152
Tree	return {} ;
Code	return {} ;
Distance : 6

153
Tree	ImmutableList
Code	ImmutableList
Distance : 8

154
Tree	str
Code	str
Distance : 8

155
Tree	return MockUtil ;
Code	return MockUtil ;
Distance : 6

156
Tree	return str ;
Code	return str ;
Distance : 6

157
Tree	return currentScope ;
Code	return currentScope ;
Distance : 6

158
Tree	return SingularMatrixException ;
Code	return SingularMatrixException ;
Distance : 6

159
Tree	return values ;
Code	return values ;
Distance : 6

160
Tree	return ArgumentsAreDifferentException ;
Code	return ArgumentsAreDifferentException ;
Distance : 6

161
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 8

162
Tree	return += ;
Code	return += ;
Distance : 6

163
Tree	field
Code	field
Distance : 8

164
Tree	FlowScope
Code	FlowScope
Distance : 8

165
Tree	return obj ;
Code	return obj ;
Distance : 6

166
Tree	FieldMatrix
Code	FieldMatrix
Distance : 8

167
Tree	return MockUtil ;
Code	return MockUtil ;
Distance : 6

168
Tree	return str ;
Code	return str ;
Distance : 6

169
Tree	@
Code	@
Distance : 8

170
Tree	return SingularMatrixException ;
Code	return SingularMatrixException ;
Distance : 6

171
Tree	}
Code	}
Distance : 8

172
Tree	return += ;
Code	return += ;
Distance : 6

173
Tree	MatrixUtils
Code	MatrixUtils
Distance : 8

174
Tree	return values ;
Code	return values ;
Distance : 6

175
Tree	return Period ;
Code	return Period ;
Distance : 6

176
Tree	return case ;
Code	return case ;
Distance : 6

177
Tree	Complex
Code	Complex
Distance : 8

178
Tree	return int ;
Code	return int ;
Distance : 6

179
Tree	return Complex ;
Code	return Complex ;
Distance : 6

180
Tree	MathArrays
Code	MathArrays
Distance : 8

181
Tree	return ArgumentsAreDifferentException ;
Code	return ArgumentsAreDifferentException ;
Distance : 6

182
Tree	return throw ;
Code	return throw ;
Distance : 6

183
Tree	return case ;
Code	return case ;
Distance : 6

184
Tree	this
Code	this
Distance : 8

185
Tree	return int ;
Code	return int ;
Distance : 6

186
Tree	return false ;
Code	return false ;
Distance : 6

187
Tree	case
Code	case
Distance : 8

188
Tree	matrix
Code	matrix
Distance : 8

189
Tree	return Period ;
Code	return Period ;
Distance : 6

190
Tree	<
Code	<
Distance : 8

191
Tree	if
Code	if
Distance : 8

192
Tree	return Complex ;
Code	return Complex ;
Distance : 6

193
Tree	return {} ;
Code	return {} ;
Distance : 6

194
Tree	bp
Code	bp
Distance : 8

195
Tree	.
Code	.
Distance : 8

196
Tree	return throw ;
Code	return throw ;
Distance : 6

197
Tree	return currentScope ;
Code	return currentScope ;
Distance : 6

198
Tree	()
Code	()
Distance : 8

199
Tree	return SUM ;
Code	return SUM ;
Distance : 6

========================================================================


========================================================================
Example Number: 81
Parent Code is: 
return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
-------------------------------------------------------------------------------
Child code is: 
return mockSettings . serializable () . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=mockSettings}) (235{val=.}) (802{val=defaultAnswer}) (214{val=(}) (32 (802{val=returnsDeepStubsAnswerUsing}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=mockSettings}) (235{val=.}) (802{val=serializable}) (216{val=()})) (235{val=.}) (802{val=defaultAnswer}) (214{val=(}) (32 (802{val=returnsDeepStubsAnswerUsing}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/23/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	if ( mockSettings / mockSettings ) {}
Code	if ( mockSettings / mockSettings ) {}
Distance : 12

1
Tree	if ( mockSettings / mockSettings ) syntacticScope
Code	if ( mockSettings / mockSettings ) syntacticScope
Distance : 12

2
Tree	if ( mockSettings / mockSettings ) verifier
Code	if ( mockSettings / mockSettings ) verifier
Distance : 12

3
Tree	if ( mockSettings / mockSettings ) declarations
Code	if ( mockSettings / mockSettings ) declarations
Distance : 12

4
Tree	if ( mockSettings / mockSettings ) PropertyCollapseLevel.NONE
Code	if ( mockSettings / mockSettings ) PropertyCollapseLevel.NONE
Distance : 12

5
Tree	if ( mockSettings / mockSettings ) parser
Code	if ( mockSettings / mockSettings ) parser
Distance : 12

6
Tree	if ( mockSettings / mockSettings ) MOCKING_PROGRESS
Code	if ( mockSettings / mockSettings ) MOCKING_PROGRESS
Distance : 12

7
Tree	if ( mockSettings / returnTypeGenericMetadata ) Method
Code	if ( mockSettings / returnTypeGenericMetadata ) Method
Distance : 11

8
Tree	if ( mockSettings / mockSettings ) bucket
Code	if ( mockSettings / mockSettings ) bucket
Distance : 12

9
Tree	if ( mockSettings / returnTypeGenericMetadata ) %
Code	if ( mockSettings / returnTypeGenericMetadata ) %
Distance : 11

10
Tree	if ( mockSettings / mockSettings ) lastActualLocation
Code	if ( mockSettings / mockSettings ) lastActualLocation
Distance : 12

11
Tree	if ( mockSettings / mockSettings ) traverseVar
Code	if ( mockSettings / mockSettings ) traverseVar
Distance : 12

12
Tree	if ( mockSettings / mockSettings ) %=
Code	if ( mockSettings / mockSettings ) %=
Distance : 12

13
Tree	if ( mockSettings / mockSettings ) eigenDecompose
Code	if ( mockSettings / mockSettings ) eigenDecompose
Distance : 12

14
Tree	if ( mockSettings / mockSettings ) other
Code	if ( mockSettings / mockSettings ) other
Distance : 12

15
Tree	if ( mockSettings / mockSettings ) stubbingInProgress
Code	if ( mockSettings / mockSettings ) stubbingInProgress
Distance : 12

16
Tree	if ( mockSettings / mockSettings ) serialised
Code	if ( mockSettings / mockSettings ) serialised
Distance : 12

17
Tree	if ( mockSettings / mockSettings ) private
Code	if ( mockSettings / mockSettings ) private
Distance : 12

18
Tree	if ( mockSettings / mockSettings ) enableNormalize
Code	if ( mockSettings / mockSettings ) enableNormalize
Distance : 12

19
Tree	if ( mockSettings / mockSettings ) <>
Code	if ( mockSettings / mockSettings ) <>
Distance : 12

20
Tree	if ( mockSettings / mockSettings ) SparseFieldVector
Code	if ( mockSettings / mockSettings ) SparseFieldVector
Distance : 12

21
Tree	if ( mockSettings / mockSettings ) URI
Code	if ( mockSettings / mockSettings ) URI
Distance : 12

22
Tree	if ( mockSettings / mockSettings ) mock
Code	if ( mockSettings / mockSettings ) mock
Distance : 12

23
Tree	if ( mockSettings / mockSettings ) Calendar
Code	if ( mockSettings / mockSettings ) Calendar
Distance : 12

24
Tree	if ( mockSettings / mockSettings ) forward
Code	if ( mockSettings / mockSettings ) forward
Distance : 12

25
Tree	if ( mockSettings / mockSettings ) S
Code	if ( mockSettings / mockSettings ) S
Distance : 12

26
Tree	if ( mockSettings / mockSettings ) wrappedVerification
Code	if ( mockSettings / mockSettings ) wrappedVerification
Distance : 12

27
Tree	if ( mockSettings / mockSettings ) standard
Code	if ( mockSettings / mockSettings ) standard
Distance : 12

28
Tree	if ( mockSettings / mockSettings ) break;
Code	if ( mockSettings / mockSettings ) break;
Distance : 12

29
Tree	if ( mockSettings / returnTypeGenericMetadata ) <=
Code	if ( mockSettings / returnTypeGenericMetadata ) <=
Distance : 11

30
Tree	if ( mockSettings / mockSettings ) observed1.length
Code	if ( mockSettings / mockSettings ) observed1.length
Distance : 12

31
Tree	if ( mockSettings / mockSettings ) data
Code	if ( mockSettings / mockSettings ) data
Distance : 12

32
Tree	if ( mockSettings / returnTypeGenericMetadata ) ^
Code	if ( mockSettings / returnTypeGenericMetadata ) ^
Distance : 11

33
Tree	if ( mockSettings / mockSettings ) ReadablePartial
Code	if ( mockSettings / mockSettings ) ReadablePartial
Distance : 12

34
Tree	if ( mockSettings / mockSettings ) VerificationMode
Code	if ( mockSettings / mockSettings ) VerificationMode
Distance : 12

35
Tree	if ( mockSettings / mockSettings ) ReadableInstant
Code	if ( mockSettings / mockSettings ) ReadableInstant
Distance : 12

36
Tree	if ( mockSettings / mockSettings ) sample
Code	if ( mockSettings / mockSettings ) sample
Distance : 12

37
Tree	if ( mockSettings / mockSettings ) class1
Code	if ( mockSettings / mockSettings ) class1
Distance : 12

38
Tree	if ( mockSettings / mockSettings ) Override
Code	if ( mockSettings / mockSettings ) Override
Distance : 12

39
Tree	if ( mockSettings / mockSettings ) varInfo
Code	if ( mockSettings / mockSettings ) varInfo
Distance : 12

40
Tree	if ( mockSettings / returnTypeGenericMetadata ) *=
Code	if ( mockSettings / returnTypeGenericMetadata ) *=
Distance : 11

41
Tree	if ( mockSettings / mockSettings ) Entry
Code	if ( mockSettings / mockSettings ) Entry
Distance : 12

42
Tree	if ( mockSettings / mockSettings ) denominator
Code	if ( mockSettings / mockSettings ) denominator
Distance : 12

43
Tree	if ( mockSettings / mockSettings ) bi
Code	if ( mockSettings / mockSettings ) bi
Distance : 12

44
Tree	if ( mockSettings / mockSettings ) default:
Code	if ( mockSettings / mockSettings ) default:
Distance : 12

45
Tree	if ( mockSettings / mockSettings ) BigFractionField
Code	if ( mockSettings / mockSettings ) BigFractionField
Distance : 12

46
Tree	if ( mockSettings / mockSettings ) Path
Code	if ( mockSettings / mockSettings ) Path
Distance : 12

47
Tree	if ( mockSettings / mockSettings ) RealFieldElement
Code	if ( mockSettings / mockSettings ) RealFieldElement
Distance : 12

48
Tree	if ( mockSettings / mockSettings ) DomainOrder
Code	if ( mockSettings / mockSettings ) DomainOrder
Distance : 12

49
Tree	if ( mockSettings / mockSettings ) late
Code	if ( mockSettings / mockSettings ) late
Distance : 12

50
Tree	if ( mockSettings / mockSettings ) style
Code	if ( mockSettings / mockSettings ) style
Distance : 12

51
Tree	if ( mockSettings / mockSettings ) returnTypeGenericMetadata
Code	if ( mockSettings / mockSettings ) returnTypeGenericMetadata
Distance : 12

52
Tree	if ( mockSettings / mockSettings ) DateUtils.MILLIS_PER_MINUTE
Code	if ( mockSettings / mockSettings ) DateUtils.MILLIS_PER_MINUTE
Distance : 12

53
Tree	if ( mockSettings / mockSettings ) verificationMode
Code	if ( mockSettings / mockSettings ) verificationMode
Distance : 12

54
Tree	if ( mockSettings / mockSettings ) out
Code	if ( mockSettings / mockSettings ) out
Distance : 12

55
Tree	if ( mockSettings / mockSettings ) M3
Code	if ( mockSettings / mockSettings ) M3
Distance : 12

56
Tree	if ( mockSettings / mockSettings ) try
Code	if ( mockSettings / mockSettings ) try
Distance : 12

57
Tree	if ( mockSettings / mockSettings ) start
Code	if ( mockSettings / mockSettings ) start
Distance : 12

58
Tree	if ( mockSettings / mockSettings ) scopeCreator
Code	if ( mockSettings / mockSettings ) scopeCreator
Distance : 12

59
Tree	if ( mockSettings / mockSettings ) reporter
Code	if ( mockSettings / mockSettings ) reporter
Distance : 12

60
Tree	if ( mockSettings / mockSettings ) DateParser
Code	if ( mockSettings / mockSettings ) DateParser
Distance : 12

61
Tree	if ( mockSettings / mockSettings ) TypedScope
Code	if ( mockSettings / mockSettings ) TypedScope
Distance : 12

62
Tree	if ( mockSettings / returnTypeGenericMetadata ) &=
Code	if ( mockSettings / returnTypeGenericMetadata ) &=
Distance : 11

63
Tree	if ( mockSettings / mockSettings ) ed
Code	if ( mockSettings / mockSettings ) ed
Distance : 12

64
Tree	if ( mockSettings / mockSettings ) currentDerivative
Code	if ( mockSettings / mockSettings ) currentDerivative
Distance : 12

65
Tree	if ( mockSettings / mockSettings ) copyIn
Code	if ( mockSettings / mockSettings ) copyIn
Distance : 12

66
Tree	if ( mockSettings / mockSettings ) getLastArguments
Code	if ( mockSettings / mockSettings ) getLastArguments
Distance : 12

67
Tree	if ( mockSettings / mockSettings ) ISOPeriodFormat
Code	if ( mockSettings / mockSettings ) ISOPeriodFormat
Distance : 12

68
Tree	if ( mockSettings / returnTypeGenericMetadata ) prop
Code	if ( mockSettings / returnTypeGenericMetadata ) prop
Distance : 11

69
Tree	if ( mockSettings / mockSettings ) getProp
Code	if ( mockSettings / mockSettings ) getProp
Distance : 12

70
Tree	if ( mockSettings / mockSettings ) fraction
Code	if ( mockSettings / mockSettings ) fraction
Distance : 12

71
Tree	if ( mockSettings / mockSettings ) location
Code	if ( mockSettings / mockSettings ) location
Distance : 12

72
Tree	if ( mockSettings / mockSettings ) phaseopt
Code	if ( mockSettings / mockSettings ) phaseopt
Distance : 12

73
Tree	if ( mockSettings / mockSettings ) -
Code	if ( mockSettings / mockSettings ) -
Distance : 12

74
Tree	if ( mockSettings / mockSettings ) check
Code	if ( mockSettings / mockSettings ) check
Distance : 12

75
Tree	if ( mockSettings / mockSettings ) K
Code	if ( mockSettings / mockSettings ) K
Distance : 12

76
Tree	if ( mockSettings / returnTypeGenericMetadata ) --
Code	if ( mockSettings / returnTypeGenericMetadata ) --
Distance : 11

77
Tree	if ( mockSettings / mockSettings ) Euclidean3D
Code	if ( mockSettings / mockSettings ) Euclidean3D
Distance : 12

78
Tree	if ( mockSettings / mockSettings ) fireChangeEvent
Code	if ( mockSettings / mockSettings ) fireChangeEvent
Distance : 12

79
Tree	if ( mockSettings / returnTypeGenericMetadata ) +=
Code	if ( mockSettings / returnTypeGenericMetadata ) +=
Distance : 11

80
Tree	if ( mockSettings / mockSettings ) Builder
Code	if ( mockSettings / mockSettings ) Builder
Distance : 12

81
Tree	if ( mockSettings / mockSettings ) mockInstance
Code	if ( mockSettings / mockSettings ) mockInstance
Distance : 12

82
Tree	if ( mockSettings / mockSettings ) point
Code	if ( mockSettings / mockSettings ) point
Distance : 12

83
Tree	if ( mockSettings / returnTypeGenericMetadata ) throws
Code	if ( mockSettings / returnTypeGenericMetadata ) throws
Distance : 11

84
Tree	if ( mockSettings / mockSettings ) res
Code	if ( mockSettings / mockSettings ) res
Distance : 12

85
Tree	if ( mockSettings / mockSettings ) >=
Code	if ( mockSettings / mockSettings ) >=
Distance : 12

86
Tree	if ( mockSettings / returnTypeGenericMetadata ) /
Code	if ( mockSettings / returnTypeGenericMetadata ) /
Distance : 11

87
Tree	if ( mockSettings / mockSettings ) final
Code	if ( mockSettings / mockSettings ) final
Distance : 12

88
Tree	if ( mockSettings / mockSettings ) VerificationModeImpl
Code	if ( mockSettings / mockSettings ) VerificationModeImpl
Distance : 12

89
Tree	if ( mockSettings / mockSettings ) var.scope
Code	if ( mockSettings / mockSettings ) var.scope
Distance : 12

90
Tree	if ( mockSettings / mockSettings ) objectType
Code	if ( mockSettings / mockSettings ) objectType
Distance : 12

91
Tree	if ( mockSettings / mockSettings ) dateTimeParser
Code	if ( mockSettings / mockSettings ) dateTimeParser
Distance : 12

92
Tree	if ( mockSettings / mockSettings ) ]
Code	if ( mockSettings / mockSettings ) ]
Distance : 12

93
Tree	if ( mockSettings / mockSettings ) calculator
Code	if ( mockSettings / mockSettings ) calculator
Distance : 12

94
Tree	if ( mockSettings / mockSettings ) FunctionType
Code	if ( mockSettings / mockSettings ) FunctionType
Distance : 12

95
Tree	if ( mockSettings / returnTypeGenericMetadata ) ?
Code	if ( mockSettings / returnTypeGenericMetadata ) ?
Distance : 11

96
Tree	if ( mockSettings / returnTypeGenericMetadata ) instanceof
Code	if ( mockSettings / returnTypeGenericMetadata ) instanceof
Distance : 11

97
Tree	if ( mockSettings / mockSettings ) !=
Code	if ( mockSettings / mockSettings ) !=
Distance : 12

98
Tree	if ( mockSettings / mockSettings ) matcher
Code	if ( mockSettings / mockSettings ) matcher
Distance : 12

99
Tree	if ( mockSettings / mockSettings ) random
Code	if ( mockSettings / mockSettings ) random
Distance : 12

100
Tree	if ( mockSettings / mockSettings ) &
Code	if ( mockSettings / mockSettings ) &
Distance : 12

101
Tree	if ( mockSettings / mockSettings ) scope
Code	if ( mockSettings / mockSettings ) scope
Distance : 12

102
Tree	if ( mockSettings / mockSettings ) float
Code	if ( mockSettings / mockSettings ) float
Distance : 12

103
Tree	if ( mockSettings / mockSettings ) --
Code	if ( mockSettings / mockSettings ) --
Distance : 12

104
Tree	if ( mockSettings / mockSettings ) throws
Code	if ( mockSettings / mockSettings ) throws
Distance : 12

105
Tree	if ( mockSettings / mockSettings ) /
Code	if ( mockSettings / mockSettings ) /
Distance : 12

106
Tree	if ( mockSettings / mockSettings ) ?
Code	if ( mockSettings / mockSettings ) ?
Distance : 12

107
Tree	if ( mockSettings / mockSettings ) instanceof
Code	if ( mockSettings / mockSettings ) instanceof
Distance : 12

108
Tree	if ( mockSettings / mockSettings ) extends
Code	if ( mockSettings / mockSettings ) extends
Distance : 12

109
Tree	if ( mockSettings / mockSettings ) :
Code	if ( mockSettings / mockSettings ) :
Distance : 12

110
Tree	if ( mockSettings / mockSettings ) /=
Code	if ( mockSettings / mockSettings ) /=
Distance : 12

111
Tree	if ( mockSettings / returnTypeGenericMetadata ) {}
Code	if ( mockSettings / returnTypeGenericMetadata ) {}
Distance : 11

112
Tree	if ( mockSettings / mockSettings ) protected
Code	if ( mockSettings / mockSettings ) protected
Distance : 12

113
Tree	if ( mockSettings / mockSettings ) <=
Code	if ( mockSettings / mockSettings ) <=
Distance : 12

114
Tree	if ( mockSettings / mockSettings ) ^
Code	if ( mockSettings / mockSettings ) ^
Distance : 12

115
Tree	if ( mockSettings / mockSettings ) Method
Code	if ( mockSettings / mockSettings ) Method
Distance : 12

116
Tree	if ( mockSettings / mockSettings ) %
Code	if ( mockSettings / mockSettings ) %
Distance : 12

117
Tree	if ( mockSettings / mockSettings ) +=
Code	if ( mockSettings / mockSettings ) +=
Distance : 12

118
Tree	if ( mockSettings / mockSettings ) *=
Code	if ( mockSettings / mockSettings ) *=
Distance : 12

119
Tree	if ( mockSettings / mockSettings ) &=
Code	if ( mockSettings / mockSettings ) &=
Distance : 12

120
Tree	if ( mockSettings / mockSettings ) prop
Code	if ( mockSettings / mockSettings ) prop
Distance : 12

121
Tree	if ( mockSettings / returnTypeGenericMetadata ) *
Code	if ( mockSettings / returnTypeGenericMetadata ) *
Distance : 11

122
Tree	if ( mockSettings / mockSettings ) isNameDeclaration
Code	if ( mockSettings / mockSettings ) isNameDeclaration
Distance : 12

123
Tree	if ( mockSettings / mockSettings ) &&
Code	if ( mockSettings / mockSettings ) &&
Distance : 12

124
Tree	if ( mockSettings / mockSettings ) basis
Code	if ( mockSettings / mockSettings ) basis
Distance : 12

125
Tree	if ( mockSettings / mockSettings ) getTypeI
Code	if ( mockSettings / mockSettings ) getTypeI
Distance : 12

126
Tree	if ( mockSettings / mockSettings ) ++
Code	if ( mockSettings / mockSettings ) ++
Distance : 12

127
Tree	if ( returnTypeGenericMetadata / mockSettings ) {}
Code	if ( returnTypeGenericMetadata / mockSettings ) {}
Distance : 12

128
Tree	if ( mockSettings / mockSettings ) strictly
Code	if ( mockSettings / mockSettings ) strictly
Distance : 12

129
Tree	if ( mockSettings / mockSettings ) checker
Code	if ( mockSettings / mockSettings ) checker
Distance : 12

130
Tree	if ( mockSettings / mockSettings ) Origin
Code	if ( mockSettings / mockSettings ) Origin
Distance : 12

131
Tree	if ( mockSettings / mockSettings ) context
Code	if ( mockSettings / mockSettings ) context
Distance : 12

132
Tree	if ( mockSettings / mockSettings ) super();
Code	if ( mockSettings / mockSettings ) super();
Distance : 12

133
Tree	if ( mockSettings / mockSettings ) ds
Code	if ( mockSettings / mockSettings ) ds
Distance : 12

134
Tree	if ( mockSettings / returnTypeGenericMetadata ) protected
Code	if ( mockSettings / returnTypeGenericMetadata ) protected
Distance : 11

135
Tree	if ( mockSettings / mockSettings ) ^=
Code	if ( mockSettings / mockSettings ) ^=
Distance : 12

136
Tree	if ( mockSettings / mockSettings ) SerialUtils
Code	if ( mockSettings / mockSettings ) SerialUtils
Distance : 12

137
Tree	if ( mockSettings / mockSettings ) firstUndesired
Code	if ( mockSettings / mockSettings ) firstUndesired
Distance : 12

138
Tree	if ( mockSettings / mockSettings ) getArgumentMatcherStorage
Code	if ( mockSettings / mockSettings ) getArgumentMatcherStorage
Distance : 12

139
Tree	if ( mockSettings / mockSettings ) -=
Code	if ( mockSettings / mockSettings ) -=
Distance : 12

140
Tree	if ( mockSettings / mockSettings ) v
Code	if ( mockSettings / mockSettings ) v
Distance : 12

141
Tree	if ( mockSettings / mockSettings ) actualLocation
Code	if ( mockSettings / mockSettings ) actualLocation
Distance : 12

142
Tree	if ( mockSettings / mockSettings ) seed
Code	if ( mockSettings / mockSettings ) seed
Distance : 12

143
Tree	if ( mockSettings / mockSettings ) public
Code	if ( mockSettings / mockSettings ) public
Distance : 12

144
Tree	if ( mockSettings / mockSettings ) v1
Code	if ( mockSettings / mockSettings ) v1
Distance : 12

145
Tree	if ( mockSettings / mockSettings ) it
Code	if ( mockSettings / mockSettings ) it
Distance : 12

146
Tree	if ( mockSettings / mockSettings ) TestUtils
Code	if ( mockSettings / mockSettings ) TestUtils
Distance : 12

147
Tree	if ( mockSettings / mockSettings ) mockSettings
Code	if ( mockSettings / mockSettings ) mockSettings
Distance : 12

148
Tree	if ( mockSettings / mockSettings ) mockingProgress
Code	if ( mockSettings / mockSettings ) mockingProgress
Distance : 12

149
Tree	if ( mockSettings / returnTypeGenericMetadata ) extends
Code	if ( mockSettings / returnTypeGenericMetadata ) extends
Distance : 11

150
Tree	if ( mockSettings / mockSettings ) InternalParser
Code	if ( mockSettings / mockSettings ) InternalParser
Distance : 12

151
Tree	if ( mockSettings / mockSettings ) actualMatcher
Code	if ( mockSettings / mockSettings ) actualMatcher
Distance : 12

152
Tree	if ( mockSettings / mockSettings ) vector
Code	if ( mockSettings / mockSettings ) vector
Distance : 12

153
Tree	if ( mockSettings / mockSettings ) invocationContainer
Code	if ( mockSettings / mockSettings ) invocationContainer
Distance : 12

154
Tree	if ( mockSettings / mockSettings ) *
Code	if ( mockSettings / mockSettings ) *
Distance : 12

155
Tree	if ( mockSettings / returnTypeGenericMetadata ) :
Code	if ( mockSettings / returnTypeGenericMetadata ) :
Distance : 11

156
Tree	if ( mockSettings / mockSettings ) crossing
Code	if ( mockSettings / mockSettings ) crossing
Distance : 12

157
Tree	if ( mockSettings / mockSettings ) case
Code	if ( mockSettings / mockSettings ) case
Distance : 12

158
Tree	if ( mockSettings / mockSettings ) partial
Code	if ( mockSettings / mockSettings ) partial
Distance : 12

159
Tree	if ( mockSettings / mockSettings ) StrMatcher
Code	if ( mockSettings / mockSettings ) StrMatcher
Distance : 12

160
Tree	if ( mockSettings / mockSettings ) []
Code	if ( mockSettings / mockSettings ) []
Distance : 12

161
Tree	if ( mockSettings / returnTypeGenericMetadata ) /=
Code	if ( mockSettings / returnTypeGenericMetadata ) /=
Distance : 11

162
Tree	if ( mockSettings / mockSettings ) Nullable
Code	if ( mockSettings / mockSettings ) Nullable
Distance : 12

163
Tree	if ( mockSettings / mockSettings ) MockitoVerificationMode
Code	if ( mockSettings / mockSettings ) MockitoVerificationMode
Distance : 12

164
Tree	if ( mockSettings / mockSettings ) ==
Code	if ( mockSettings / mockSettings ) ==
Distance : 12

165
Tree	if ( mockSettings / mockSettings ) dur
Code	if ( mockSettings / mockSettings ) dur
Distance : 12

166
Tree	if ( mockSettings / mockSettings ) ToStringStyle
Code	if ( mockSettings / mockSettings ) ToStringStyle
Distance : 12

167
Tree	if ( mockSettings / mockSettings ) p
Code	if ( mockSettings / mockSettings ) p
Distance : 12

168
Tree	if ( mockSettings / mockSettings ) VerificationStartedNotifier
Code	if ( mockSettings / mockSettings ) VerificationStartedNotifier
Distance : 12

169
Tree	if ( mockSettings / mockSettings ) LanguageMode.ECMASCRIPT_2015
Code	if ( mockSettings / mockSettings ) LanguageMode.ECMASCRIPT_2015
Distance : 12

170
Tree	if ( mockSettings / mockSettings ) LocationImpl
Code	if ( mockSettings / mockSettings ) LocationImpl
Distance : 12

171
Tree	if ( mockSettings / mockSettings ) ConvergenceChecker
Code	if ( mockSettings / mockSettings ) ConvergenceChecker
Distance : 12

172
Tree	if ( mockSettings / mockSettings ) isComingFromSignedJar
Code	if ( mockSettings / mockSettings ) isComingFromSignedJar
Distance : 12

173
Tree	if ( mockSettings / mockSettings ) converter
Code	if ( mockSettings / mockSettings ) converter
Distance : 12

174
Tree	if ( mockSettings / mockSettings ) slot
Code	if ( mockSettings / mockSettings ) slot
Distance : 12

175
Tree	if ( mockSettings / mockSettings ) actualInvocation
Code	if ( mockSettings / mockSettings ) actualInvocation
Distance : 12

176
Tree	if ( mockSettings / mockSettings ) CrossModuleReferenceCollector
Code	if ( mockSettings / mockSettings ) CrossModuleReferenceCollector
Distance : 12

177
Tree	if ( mockSettings / mockSettings ) func
Code	if ( mockSettings / mockSettings ) func
Distance : 12

178
Tree	if ( mockSettings / mockSettings ) initializer
Code	if ( mockSettings / mockSettings ) initializer
Distance : 12

179
Tree	if ( mockSettings / mockSettings ) other.value
Code	if ( mockSettings / mockSettings ) other.value
Distance : 12

180
Tree	if ( mockSettings / mockSettings ) Array
Code	if ( mockSettings / mockSettings ) Array
Distance : 12

181
Tree	if ( mockSettings / mockSettings ) toDateTimeAtStartOfDay
Code	if ( mockSettings / mockSettings ) toDateTimeAtStartOfDay
Distance : 12

182
Tree	if ( mockSettings / mockSettings ) wanted
Code	if ( mockSettings / mockSettings ) wanted
Distance : 12

183
Tree	if ( mockSettings / mockSettings ) toBeExposed.realMethod
Code	if ( mockSettings / mockSettings ) toBeExposed.realMethod
Distance : 12

184
Tree	if ( mockSettings / mockSettings ) that
Code	if ( mockSettings / mockSettings ) that
Distance : 12

185
Tree	if ( mockSettings / mockSettings ) AllowedSolution.ANY_SIDE
Code	if ( mockSettings / mockSettings ) AllowedSolution.ANY_SIDE
Distance : 12

186
Tree	if ( mockSettings / returnTypeGenericMetadata ) float
Code	if ( mockSettings / returnTypeGenericMetadata ) float
Distance : 11

187
Tree	if ( mockSettings / mockSettings ) FunctionUtils
Code	if ( mockSettings / mockSettings ) FunctionUtils
Distance : 12

188
Tree	if ( mockSettings / mockSettings ) MutableDouble
Code	if ( mockSettings / mockSettings ) MutableDouble
Distance : 12

189
Tree	if ( mockSettings / mockSettings ) BSPTree
Code	if ( mockSettings / mockSettings ) BSPTree
Distance : 12

190
Tree	if ( mockSettings / returnTypeGenericMetadata ) &
Code	if ( mockSettings / returnTypeGenericMetadata ) &
Distance : 11

191
Tree	if ( mockSettings / mockSettings ) y.length
Code	if ( mockSettings / mockSettings ) y.length
Distance : 12

192
Tree	if ( returnTypeGenericMetadata / mockSettings ) *
Code	if ( returnTypeGenericMetadata / mockSettings ) *
Distance : 12

193
Tree	if ( mockSettings / mockSettings ) ParseBucket
Code	if ( mockSettings / mockSettings ) ParseBucket
Distance : 12

194
Tree	if ( mockSettings / mockSettings ) p1
Code	if ( mockSettings / mockSettings ) p1
Distance : 12

195
Tree	if ( mockSettings / mockSettings ) bLoop
Code	if ( mockSettings / mockSettings ) bLoop
Distance : 12

196
Tree	if ( mockSettings / mockSettings ) anyObject
Code	if ( mockSettings / mockSettings ) anyObject
Distance : 12

197
Tree	if ( mockSettings / mockSettings ) wholeSpace
Code	if ( mockSettings / mockSettings ) wholeSpace
Distance : 12

198
Tree	if ( mockSettings / mockSettings ) FastFourierTransformer
Code	if ( mockSettings / mockSettings ) FastFourierTransformer
Distance : 12

199
Tree	if ( mockSettings / mockSettings ) EvalMode.NORMAL
Code	if ( mockSettings / mockSettings ) EvalMode.NORMAL
Distance : 12

========================================================================


========================================================================
Example Number: 82
Parent Code is: 
{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withParams ( cls , outerClassInstance ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=outerClassInstance}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=noArgConstructor}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=withOuterClass}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=outerClassInstance}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=noArgConstructor}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=withParams}) (214{val=(}) (800{val=cls}) (234{val=,}) (800{val=outerClassInstance}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/21/parent/src_org_mockito_internal_creation_instance_ConstructorInstantiator.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Math
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Math
Distance : 4

1
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } []
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } []
Distance : 4

2
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !
Distance : 4

3
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } notifyListeners
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } notifyListeners
Distance : 4

4
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkArgument
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkArgument
Distance : 4

5
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } field
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } field
Distance : 4

6
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } t
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } t
Distance : 4

7
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } name
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } name
Distance : 4

8
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportCodeChange
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportCodeChange
Distance : 4

9
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } FastMath
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } FastMath
Distance : 4

10
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } expected
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } expected
Distance : 4

11
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } IllegalArgumentException
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } IllegalArgumentException
Distance : 4

12
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } LINE_JOINER
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } LINE_JOINER
Distance : 4

13
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } externs
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } externs
Distance : 4

14
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } createIllegalArgumentException
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } createIllegalArgumentException
Distance : 4

15
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } testSame
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } testSame
Distance : 4

16
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } str
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } str
Distance : 4

17
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } fireChangeEvent
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } fireChangeEvent
Distance : 4

18
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertThat
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertThat
Distance : 4

19
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } invocation
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } invocation
Distance : 4

20
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } double
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } double
Distance : 4

21
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } false
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } false
Distance : 4

22
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } paint
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } paint
Distance : 4

23
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } @
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } @
Distance : 4

24
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertEquals
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertEquals
Distance : 4

25
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } result
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } result
Distance : 4

26
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } options
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } options
Distance : 4

27
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } p
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } p
Distance : 4

28
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } toString
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } toString
Distance : 4

29
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Test
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Test
Distance : 4

30
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } c
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } c
Distance : 4

31
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } lines
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } lines
Distance : 4

32
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } parent
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } parent
Distance : 4

33
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ArrayList
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ArrayList
Distance : 4

34
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getInstance
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getInstance
Distance : 4

35
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } serialised
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } serialised
Distance : 4

36
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } join
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } join
Distance : 4

37
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } boolean
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } boolean
Distance : 4

38
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } type
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } type
Distance : 4

39
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } *
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } *
Distance : 4

40
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } :
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } :
Distance : 4

41
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } fail
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } fail
Distance : 4

42
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Args
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Args
Distance : 4

43
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } List
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } List
Distance : 4

44
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } m
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } m
Distance : 4

45
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } try
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } try
Distance : 4

46
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } root
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } root
Distance : 4

47
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Class
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Class
Distance : 4

48
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } source
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } source
Distance : 4

49
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } test
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } test
Distance : 4

50
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } x
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } x
Distance : 4

51
Tree	{ if ( cls == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

52
Tree	{ if ( cls == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

53
Tree	{ if ( cls == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

54
Tree	{ if ( cls == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

55
Tree	{ if ( cls == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

56
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

57
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

58
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

59
Tree	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

60
Tree	{ if ( cls == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

61
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

62
Tree	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

63
Tree	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

64
Tree	{ if ( cls == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

65
Tree	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

66
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

67
Tree	{ if ( cls == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

68
Tree	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

69
Tree	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

70
Tree	{ if ( cls == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

71
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

72
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

73
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } nullNotPermitted
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } nullNotPermitted
Distance : 4

74
Tree	{ if ( cls == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

75
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

76
Tree	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

77
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

78
Tree	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

79
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

80
Tree	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

81
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

82
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

83
Tree	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

84
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

85
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

86
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

87
Tree	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

88
Tree	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

89
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

90
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

91
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

92
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 3

93
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 4

94
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

95
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

96
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

97
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

98
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } /
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } /
Distance : 4

99
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 3

100
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Exception
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Exception
Distance : 4

101
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } wanted
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } wanted
Distance : 4

102
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } data
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } data
Distance : 4

103
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } add
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } add
Distance : 4

104
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeTraversal
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeTraversal
Distance : 4

105
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ex
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ex
Distance : 4

106
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ,
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ,
Distance : 4

107
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } .
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } .
Distance : 4

108
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } )
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } )
Distance : 4

109
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ;
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ;
Distance : 4

110
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <blank>
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <blank>
Distance : 4

111
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } (
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } (
Distance : 4

112
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <s>
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <s>
Distance : 4

113
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } (
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } (
Distance : 4

114
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } static
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } static
Distance : 4

115
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setAcceptedLanguage
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setAcceptedLanguage
Distance : 4

116
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } instant
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } instant
Distance : 4

117
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } abs
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } abs
Distance : 4

118
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } else
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } else
Distance : 4

119
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getMessage
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getMessage
Distance : 4

120
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } matcher
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } matcher
Distance : 4

121
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } if
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } if
Distance : 4

122
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

123
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Assert
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Assert
Distance : 4

124
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeUtil
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeUtil
Distance : 4

125
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportMatcher
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportMatcher
Distance : 4

126
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } this
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } this
Distance : 4

127
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } MathRuntimeException
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } MathRuntimeException
Distance : 4

128
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <
Distance : 4

129
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mode
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mode
Distance : 4

130
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } -
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } -
Distance : 4

131
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Preconditions
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Preconditions
Distance : 4

132
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } [
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } [
Distance : 4

133
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ]
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ]
Distance : 4

134
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ParamChecks
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ParamChecks
Distance : 4

135
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Object
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Object
Distance : 4

136
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mock
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mock
Distance : 4

137
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Override
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Override
Distance : 4

138
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } f
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } f
Distance : 4

139
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {}
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {}
Distance : 4

140
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <>
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } <>
Distance : 4

141
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } array
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } array
Distance : 4

142
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ==
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ==
Distance : 4

143
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } void
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } void
Distance : 4

144
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } throw
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } throw
Distance : 4

145
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } catch
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } catch
Distance : 4

146
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } e
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } e
Distance : 4

147
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } n
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } n
Distance : 4

148
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } String
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } String
Distance : 4

149
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } compiler
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } compiler
Distance : 4

150
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } true
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } true
Distance : 4

151
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } class
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } class
Distance : 4

152
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } node
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } node
Distance : 4

153
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } values
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } values
Distance : 4

154
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } protected
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } protected
Distance : 4

155
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } public
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } public
Distance : 4

156
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } stream
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } stream
Distance : 4

157
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } +
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } +
Distance : 4

158
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } null
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } null
Distance : 4

159
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } >
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } >
Distance : 4

160
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } out
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } out
Distance : 4

161
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getParent
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } getParent
Distance : 4

162
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } for
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } for
Distance : 4

163
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } invocations
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } invocations
Distance : 4

164
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } d
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } d
Distance : 4

165
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } equals
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } equals
Distance : 4

166
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Invocation
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Invocation
Distance : 4

167
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } js
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } js
Distance : 4

168
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtilities
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtilities
Distance : 4

169
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } StrBuilder
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } StrBuilder
Distance : 4

170
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setUp
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setUp
Distance : 4

171
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } super
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } super
Distance : 4

172
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } i
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } i
Distance : 4

173
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } index
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } index
Distance : 4

174
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } final
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } final
Distance : 4

175
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Fraction
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Fraction
Distance : 4

176
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } value
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } value
Distance : 4

177
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkState
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkState
Distance : 4

178
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !=
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !=
Distance : 4

179
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } T
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } T
Distance : 4

180
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } &&
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } &&
Distance : 4

181
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Distance : 4

182
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } }
Distance : 4

183
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Distance : 4

184
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Distance : 4

185
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Distance : 4

186
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Distance : 4

187
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NUMBER_CONSTANT
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NUMBER_CONSTANT
Distance : 4

188
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } return
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } return
Distance : 4

189
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkNotNull
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkNotNull
Distance : 4

190
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } length
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } length
Distance : 4

191
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtils
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtils
Distance : 4

192
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Node
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Node
Distance : 4

193
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } verify
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } verify
Distance : 4

194
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } v
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } v
Distance : 4

195
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Integer
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Integer
Distance : 4

196
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } long
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } long
Distance : 4

197
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ?
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ?
Distance : 4

198
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } int
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } int
Distance : 4

199
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertTrue
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } assertTrue
Distance : 4

========================================================================


========================================================================
Example Number: 83
Parent Code is: 
Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
-------------------------------------------------------------------------------
Child code is: 
Object injected = mockCandidateFilter . filterCandidate ( mocks , field , orderedInstanceFields , instance ) . thenInject () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Object})) (59 (800{val=injected}) (204{val==}) (32 (32 (800{val=mockCandidateFilter}) (235{val=.}) (802{val=filterCandidate}) (214{val=(}) (800{val=mocks}) (234{val=,}) (800{val=field}) (234{val=,}) (800{val=instance}) (215{val=)})) (235{val=.}) (802{val=thenInject}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Object})) (59 (800{val=injected}) (204{val==}) (32 (32 (800{val=mockCandidateFilter}) (235{val=.}) (802{val=filterCandidate}) (214{val=(}) (800{val=mocks}) (234{val=,}) (800{val=field}) (234{val=,}) (800{val=orderedInstanceFields}) (234{val=,}) (800{val=instance}) (215{val=)})) (235{val=.}) (802{val=thenInject}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/19/parent/src_org_mockito_internal_configuration_injection_PropertyAndSetterInjection.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

1
Tree	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

2
Tree	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

3
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

4
Tree	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

5
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

6
Tree	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

7
Tree	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

8
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

9
Tree	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

10
Tree	Object instance = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

11
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

12
Tree	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

13
Tree	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

14
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

15
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

16
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 4

17
Tree	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

18
Tree	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

19
Tree	Object instance = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 6

20
Tree	Object instance = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 5

21
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

22
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

23
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 2

24
Tree	Object mocks = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

25
Tree	Object injected = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 4

26
Tree	Object field = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

27
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 4

28
Tree	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

29
Tree	Object instance = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 6

30
Tree	Object injected = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 5

31
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 3

32
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

33
Tree	Object injected = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 4

34
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 2

35
Tree	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

36
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 4

37
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

38
Tree	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

39
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

40
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 4

41
Tree	Object injected = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 5

42
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 3

43
Tree	Object instance = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 5

44
Tree	Object injected = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 5

45
Tree	Object injected = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

46
Tree	Object instance = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

47
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

48
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 4

49
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

50
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 4

51
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 4

52
Tree	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

53
Tree	Object injected = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Distance : 5

54
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 3

55
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

56
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

57
Tree	Object injected = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Distance : 5

58
Tree	Object instance = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 6

59
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

60
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 4

61
Tree	Object injected = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 5

62
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

63
Tree	Object injected = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

64
Tree	Object injected = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

65
Tree	Object injected = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 4

66
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

67
Tree	Object instance = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 5

68
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

69
Tree	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 4

70
Tree	Object field = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

71
Tree	Object field = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

72
Tree	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 4

73
Tree	Object instance = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

74
Tree	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

75
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 3

76
Tree	Object instance = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

77
Tree	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

78
Tree	Object injected = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Distance : 5

79
Tree	Object injected = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Distance : 5

80
Tree	Object instance = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 6

81
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

82
Tree	Object instance = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = instance . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

83
Tree	Object injected = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

84
Tree	Object injected = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Distance : 5

85
Tree	Object mocks = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 6

86
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 3

87
Tree	Object mocks = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 5

88
Tree	Object injected = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 4

89
Tree	Object injected = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

90
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

91
Tree	Object injected = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

92
Tree	Object injected = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

93
Tree	Object instance = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 5

94
Tree	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

95
Tree	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

96
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

97
Tree	Object injected = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Distance : 5

98
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

99
Tree	Object injected = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Distance : 5

100
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 4

101
Tree	Object instance = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Distance : 6

102
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

103
Tree	Object field = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 5

104
Tree	Object injected = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Distance : 5

105
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 4

106
Tree	Object instance = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Distance : 6

107
Tree	Object mocks = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

108
Tree	Object injected = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

109
Tree	Object injected = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

110
Tree	Object mocks = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 6

111
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

112
Tree	Object injected = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Distance : 5

113
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 3

114
Tree	Object injected = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

115
Tree	Object instance = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

116
Tree	Object field = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

117
Tree	Object injected = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

118
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 3

119
Tree	Object instance = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 5

120
Tree	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

121
Tree	Object injected = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

122
Tree	Object injected = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

123
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Distance : 4

124
Tree	Object field = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 6

125
Tree	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

126
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 3

127
Tree	Object injected = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Distance : 5

128
Tree	Object instance = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 5

129
Tree	Object injected = field . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

130
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Distance : 4

131
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 5

132
Tree	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

133
Tree	Object injected = field . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

134
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

135
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 4

136
Tree	Object instance = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Distance : 6

137
Tree	Object mocks = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

138
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

139
Tree	Object injected = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

140
Tree	Object injected = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

141
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

142
Tree	Object mocks = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 5

143
Tree	Object injected = instance . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

144
Tree	Object instance = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

145
Tree	Object injected = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

146
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 3

147
Tree	Object injected = instance . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

148
Tree	Object field = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 6

149
Tree	Object instance = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( injected , instance , instance ) . thenInject () ;
Distance : 6

150
Tree	Object injected = mocks . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

151
Tree	Object field = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

152
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 3

153
Tree	Object field = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 5

154
Tree	Object instance = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 6

155
Tree	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

156
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 3

157
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , mocks ) . thenInject () ;
Distance : 4

158
Tree	Object instance = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 5

159
Tree	Object injected = field . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

160
Tree	Object instance = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = field . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

161
Tree	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

162
Tree	Object field = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 5

163
Tree	Object instance = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

164
Tree	Object injected = field . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

165
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

166
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , injected , injected ) . thenInject () ;
Distance : 4

167
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) . thenInject () ;
Distance : 4

168
Tree	Object instance = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( mocks , injected , field ) . thenInject () ;
Distance : 6

169
Tree	Object injected = field . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

170
Tree	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

171
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

172
Tree	Object injected = field . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

173
Tree	Object mocks = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object mocks = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

174
Tree	Object injected = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

175
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 4

176
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 5

177
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

178
Tree	Object injected = instance . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 5

179
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 2

180
Tree	Object instance = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object instance = instance . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

181
Tree	Object instance = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

182
Tree	Object injected = injected . filterCandidate ( injected , instance , mocks ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( injected , instance , mocks ) . thenInject () ;
Distance : 6

183
Tree	Object injected = mockCandidateFilter . filterCandidate ( injected , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( injected , instance , instance ) . thenInject () ;
Distance : 4

184
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

185
Tree	Object injected = instance . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , instance , injected ) . thenInject () ;
Distance : 5

186
Tree	Object mocks = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

187
Tree	Object field = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object field = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 5

188
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

189
Tree	Object injected = instance . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 4

190
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 3

191
Tree	Object injected = mocks . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 4

192
Tree	Object injected = field . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

193
Tree	Object instance = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 6

194
Tree	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

195
Tree	Object injected = mocks . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 5

196
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

197
Tree	Object injected = injected . filterCandidate ( instance , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( instance , instance , instance ) . thenInject () ;
Distance : 5

198
Tree	Object mocks = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 6

199
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 3

========================================================================


========================================================================
Example Number: 84
Parent Code is: 
{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return MOCKITO_CORE . mock ( classToMock , mockSettings , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MOCKITO_CORE}) (235{val=.}) (802{val=mock}) (214{val=(}) (800{val=classToMock}) (234{val=,}) (800{val=mockSettings}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MOCKITO_CORE}) (235{val=.}) (802{val=mock}) (214{val=(}) (800{val=classToMock}) (234{val=,}) (800{val=mockSettings}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/16/parent/src_org_mockito_Mockito.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } length
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } length
Distance : 3

1
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Distance : 3

2
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } )
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } )
Distance : 3

3
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } serialised
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } serialised
Distance : 3

4
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } parent
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } parent
Distance : 3

5
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } createIllegalArgumentException
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } createIllegalArgumentException
Distance : 3

6
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } boolean
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } boolean
Distance : 3

7
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } result
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } result
Distance : 3

8
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } void
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } void
Distance : 3

9
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertEquals
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertEquals
Distance : 3

10
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } IllegalArgumentException
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } IllegalArgumentException
Distance : 3

11
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } !
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } !
Distance : 3

12
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } i
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } i
Distance : 3

13
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } false
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } false
Distance : 3

14
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } test
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } test
Distance : 3

15
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } double
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } double
Distance : 3

16
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } int
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } int
Distance : 3

17
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Preconditions
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Preconditions
Distance : 3

18
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } &&
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } &&
Distance : 3

19
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } value
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } value
Distance : 3

20
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isNormalBlock
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isNormalBlock
Distance : 3

21
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } s
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } s
Distance : 3

22
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } (
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } (
Distance : 3

23
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } contains
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } contains
Distance : 3

24
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <blank>
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <blank>
Distance : 3

25
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } x
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } x
Distance : 3

26
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getInstance
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getInstance
Distance : 3

27
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } t
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } t
Distance : 3

28
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Integer
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Integer
Distance : 3

29
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } reportCodeChange
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } reportCodeChange
Distance : 3

30
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } expected
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } expected
Distance : 3

31
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } join
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } join
Distance : 3

32
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertThat
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertThat
Distance : 3

33
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocation
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocation
Distance : 3

34
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } FastMath
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } FastMath
Distance : 3

35
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } add
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } add
Distance : 3

36
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkArgument
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkArgument
Distance : 3

37
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } name
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } name
Distance : 3

38
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } @
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } @
Distance : 3

39
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } str
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } str
Distance : 3

40
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } type
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } type
Distance : 3

41
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } paint
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } paint
Distance : 3

42
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } m
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } m
Distance : 3

43
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fireChangeEvent
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fireChangeEvent
Distance : 3

44
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ArrayList
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ArrayList
Distance : 3

45
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LINE_JOINER
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LINE_JOINER
Distance : 3

46
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } testSame
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } testSame
Distance : 3

47
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <s>
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <s>
Distance : 3

48
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } *
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } *
Distance : 3

49
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } nullNotPermitted
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } nullNotPermitted
Distance : 3

50
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } instant
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } instant
Distance : 3

51
Tree	{ return MOCKITO_CORE . mock ( classToMock , MOCKITO_CORE ) ; }
Code	{ return MOCKITO_CORE . mock ( classToMock , MOCKITO_CORE ) ; }
Distance : 3

52
Tree	{ return mockSettings . mock ( classToMock , mockSettings ) ; }
Code	{ return mockSettings . mock ( classToMock , mockSettings ) ; }
Distance : 3

53
Tree	{ return MOCKITO_CORE . mock ( mockSettings , mockSettings ) ; }
Code	{ return MOCKITO_CORE . mock ( mockSettings , mockSettings ) ; }
Distance : 3

54
Tree	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , mockSettings ) ; }
Code	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , mockSettings ) ; }
Distance : 3

55
Tree	{ return classToMock . mock ( classToMock , mockSettings ) ; }
Code	{ return classToMock . mock ( classToMock , mockSettings ) ; }
Distance : 3

56
Tree	{ return mockSettings . mock ( MOCKITO_CORE , mockSettings ) ; }
Code	{ return mockSettings . mock ( MOCKITO_CORE , mockSettings ) ; }
Distance : 4

57
Tree	{ return MOCKITO_CORE . mock ( classToMock , classToMock ) ; }
Code	{ return MOCKITO_CORE . mock ( classToMock , classToMock ) ; }
Distance : 3

58
Tree	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , classToMock ) ; }
Code	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , classToMock ) ; }
Distance : 4

59
Tree	{ return classToMock . mock ( mockSettings , classToMock ) ; }
Code	{ return classToMock . mock ( mockSettings , classToMock ) ; }
Distance : 4

60
Tree	{ return mockSettings . mock ( mockSettings , mockSettings ) ; }
Code	{ return mockSettings . mock ( mockSettings , mockSettings ) ; }
Distance : 4

61
Tree	{ return mockSettings . mock ( classToMock , classToMock ) ; }
Code	{ return mockSettings . mock ( classToMock , classToMock ) ; }
Distance : 4

62
Tree	{ return mockSettings . mock ( classToMock , MOCKITO_CORE ) ; }
Code	{ return mockSettings . mock ( classToMock , MOCKITO_CORE ) ; }
Distance : 4

63
Tree	{ return MOCKITO_CORE . mock ( mockSettings , classToMock ) ; }
Code	{ return MOCKITO_CORE . mock ( mockSettings , classToMock ) ; }
Distance : 3

64
Tree	{ return MOCKITO_CORE . mock ( mockSettings , MOCKITO_CORE ) ; }
Code	{ return MOCKITO_CORE . mock ( mockSettings , MOCKITO_CORE ) ; }
Distance : 3

65
Tree	{ return classToMock . mock ( MOCKITO_CORE , classToMock ) ; }
Code	{ return classToMock . mock ( MOCKITO_CORE , classToMock ) ; }
Distance : 5

66
Tree	{ return classToMock . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Code	{ return classToMock . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Distance : 5

67
Tree	{ return classToMock . mock ( mockSettings , MOCKITO_CORE ) ; }
Code	{ return classToMock . mock ( mockSettings , MOCKITO_CORE ) ; }
Distance : 4

68
Tree	{ return mockSettings . mock ( MOCKITO_CORE , classToMock ) ; }
Code	{ return mockSettings . mock ( MOCKITO_CORE , classToMock ) ; }
Distance : 5

69
Tree	{ return mockSettings . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Code	{ return mockSettings . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Distance : 5

70
Tree	{ return mockSettings . mock ( mockSettings , classToMock ) ; }
Code	{ return mockSettings . mock ( mockSettings , classToMock ) ; }
Distance : 4

71
Tree	{ return mockSettings . mock ( mockSettings , MOCKITO_CORE ) ; }
Code	{ return mockSettings . mock ( mockSettings , MOCKITO_CORE ) ; }
Distance : 4

72
Tree	{ return classToMock . mock ( MOCKITO_CORE , mockSettings ) ; }
Code	{ return classToMock . mock ( MOCKITO_CORE , mockSettings ) ; }
Distance : 4

73
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } obj
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } obj
Distance : 3

74
Tree	{ return classToMock . mock ( mockSettings , mockSettings ) ; }
Code	{ return classToMock . mock ( mockSettings , mockSettings ) ; }
Distance : 4

75
Tree	{ return classToMock . mock ( classToMock , MOCKITO_CORE ) ; }
Code	{ return classToMock . mock ( classToMock , MOCKITO_CORE ) ; }
Distance : 4

76
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } reportMatcher
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } reportMatcher
Distance : 3

77
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkState
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkState
Distance : 3

78
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } super
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } super
Distance : 3

79
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } a
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } a
Distance : 3

80
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } class
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } class
Distance : 3

81
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } !=
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } !=
Distance : 3

82
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtilities
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtilities
Distance : 3

83
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Invocation
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Invocation
Distance : 3

84
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } equals
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } equals
Distance : 3

85
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } externs
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } externs
Distance : 3

86
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertTrue
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } assertTrue
Distance : 3

87
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } notifyListeners
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } notifyListeners
Distance : 3

88
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } d
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } d
Distance : 3

89
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mock
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mock
Distance : 3

90
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MathRuntimeException
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MathRuntimeException
Distance : 3

91
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mode
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mode
Distance : 3

92
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {}
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {}
Distance : 3

93
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Object
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Object
Distance : 3

94
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Override
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Override
Distance : 3

95
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } for
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } for
Distance : 3

96
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ParamChecks
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ParamChecks
Distance : 3

97
Tree	{ return classToMock . mock ( classToMock , classToMock ) ; }
Code	{ return classToMock . mock ( classToMock , classToMock ) ; }
Distance : 4

98
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } else
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } else
Distance : 3

99
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; }
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; }
Distance : 2

100
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } out
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } out
Distance : 3

101
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } List
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } List
Distance : 3

102
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <>
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <>
Distance : 3

103
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } catch
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } catch
Distance : 3

104
Tree	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Code	{ return MOCKITO_CORE . mock ( MOCKITO_CORE , MOCKITO_CORE ) ; }
Distance : 4

105
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } JSType
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } JSType
Distance : 3

106
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Class
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Class
Distance : 3

107
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } :
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } :
Distance : 3

108
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } p
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } p
Distance : 3

109
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } root
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } root
Distance : 3

110
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } wanted
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } wanted
Distance : 3

111
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Math
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Math
Distance : 3

112
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } options
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } options
Distance : 3

113
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } this
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } this
Distance : 3

114
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Distance : 3

115
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } source
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } source
Distance : 3

116
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } try
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } try
Distance : 3

117
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ()
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ()
Distance : 3

118
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ,
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ,
Distance : 3

119
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } []
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } []
Distance : 3

120
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } n
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } n
Distance : 3

121
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } +
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } +
Distance : 3

122
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } public
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } public
Distance : 3

123
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } null
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } null
Distance : 3

124
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } String
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } String
Distance : 3

125
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } e
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } e
Distance : 3

126
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } compiler
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } compiler
Distance : 3

127
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } throw
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } throw
Distance : 3

128
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } STRING_CONSTANT
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } STRING_CONSTANT
Distance : 3

129
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } =
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } =
Distance : 3

130
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {
Distance : 3

131
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } }
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } }
Distance : 3

132
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } .
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } .
Distance : 3

133
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ;
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ;
Distance : 3

134
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } new
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } new
Distance : 3

135
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NUMBER_CONSTANT
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NUMBER_CONSTANT
Distance : 3

136
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } abs
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } abs
Distance : 3

137
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } final
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } final
Distance : 3

138
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } true
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } true
Distance : 3

139
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StringBuilder
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StringBuilder
Distance : 3

140
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stroke
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stroke
Distance : 3

141
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } traverseEs6
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } traverseEs6
Distance : 3

142
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

143
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } chrono
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } chrono
Distance : 3

144
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } b
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } b
Distance : 3

145
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } PeriodType
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } PeriodType
Distance : 3

146
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <=
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <=
Distance : 3

147
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Assert
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Assert
Distance : 3

148
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Fraction
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Fraction
Distance : 3

149
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <
Distance : 3

150
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkNotNull
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkNotNull
Distance : 3

151
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ?
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ?
Distance : 3

152
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } long
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } long
Distance : 3

153
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ]
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ]
Distance : 3

154
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } -
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } -
Distance : 3

155
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtils
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtils
Distance : 3

156
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } T
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } T
Distance : 3

157
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } [
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } [
Distance : 3

158
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } if
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } if
Distance : 3

159
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } verify
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } verify
Distance : 3

160
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } lines
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } lines
Distance : 3

161
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } toString
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } toString
Distance : 3

162
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } c
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } c
Distance : 3

163
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } v
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } v
Distance : 3

164
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } >
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } >
Distance : 3

165
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Test
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Test
Distance : 3

166
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } static
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } static
Distance : 3

167
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } /
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } /
Distance : 3

168
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Exception
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Exception
Distance : 3

169
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Distance : 3

170
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } size
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } size
Distance : 3

171
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Node
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Node
Distance : 3

172
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mockingProgress
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mockingProgress
Distance : 3

173
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getParent
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getParent
Distance : 3

174
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getMessage
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getMessage
Distance : 3

175
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stream
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stream
Distance : 3

176
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } values
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } values
Distance : 3

177
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeUtil
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeUtil
Distance : 3

178
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } data
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } data
Distance : 3

179
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ex
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ex
Distance : 3

180
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeTraversal
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeTraversal
Distance : 3

181
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Args
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Args
Distance : 3

182
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setUp
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setUp
Distance : 3

183
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } field
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } field
Distance : 3

184
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } js
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } js
Distance : 3

185
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } char
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } char
Distance : 3

186
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } index
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } index
Distance : 3

187
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } node
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } node
Distance : 3

188
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocations
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocations
Distance : 3

189
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } protected
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } protected
Distance : 3

190
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return;
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return;
Distance : 3

191
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } get
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } get
Distance : 3

192
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isEmpty
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isEmpty
Distance : 3

193
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } array
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } array
Distance : 3

194
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setAcceptedLanguage
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setAcceptedLanguage
Distance : 3

195
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } f
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } f
Distance : 3

196
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fail
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fail
Distance : 3

197
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ==
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ==
Distance : 3

198
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StrBuilder
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StrBuilder
Distance : 3

199
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } matcher
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } matcher
Distance : 3

========================================================================


========================================================================
Example Number: 85
Parent Code is: 
mockingProgress . verificationStarted ( mode ) ;
-------------------------------------------------------------------------------
Child code is: 
mockingProgress . verificationStarted ( new MockAwareVerificationMode ( mock , mode ) ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=mockingProgress}) (235{val=.}) (802{val=verificationStarted}) (214{val=(}) (800{val=mode}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=mockingProgress}) (235{val=.}) (802{val=verificationStarted}) (214{val=(}) (14 (304{val=new}) (43 (801{val=MockAwareVerificationMode})) (214{val=(}) (800{val=mock}) (234{val=,}) (800{val=mode}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/14/parent/src_org_mockito_internal_MockitoCore.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	mockingProgress . verificationStarted ( mode ) ; StrBuilder
Code	mockingProgress . verificationStarted ( mode ) ; StrBuilder
Distance : 7

1
Tree	mockingProgress . verificationStarted ( mode ) ; add
Code	mockingProgress . verificationStarted ( mode ) ; add
Distance : 7

2
Tree	mockingProgress . verificationStarted ( mode ) ; checkArgument
Code	mockingProgress . verificationStarted ( mode ) ; checkArgument
Distance : 7

3
Tree	mockingProgress . verificationStarted ( mode ) ; data
Code	mockingProgress . verificationStarted ( mode ) ; data
Distance : 7

4
Tree	mockingProgress . verificationStarted ( mode ) ; NodeUtil
Code	mockingProgress . verificationStarted ( mode ) ; NodeUtil
Distance : 7

5
Tree	mockingProgress . verificationStarted ( mode ) ; void
Code	mockingProgress . verificationStarted ( mode ) ; void
Distance : 7

6
Tree	mockingProgress . verificationStarted ( mode ) ; catch
Code	mockingProgress . verificationStarted ( mode ) ; catch
Distance : 7

7
Tree	mockingProgress . verificationStarted ( mode ) ; compiler
Code	mockingProgress . verificationStarted ( mode ) ; compiler
Distance : 7

8
Tree	mockingProgress . verificationStarted ( mode ) ; throw
Code	mockingProgress . verificationStarted ( mode ) ; throw
Distance : 7

9
Tree	mockingProgress . verificationStarted ( mode ) ; n
Code	mockingProgress . verificationStarted ( mode ) ; n
Distance : 7

10
Tree	mockingProgress . verificationStarted ( mode ) ; +
Code	mockingProgress . verificationStarted ( mode ) ; +
Distance : 7

11
Tree	mockingProgress . verificationStarted ( mode ) ; e
Code	mockingProgress . verificationStarted ( mode ) ; e
Distance : 7

12
Tree	mockingProgress . verificationStarted ( mode ) ; NodeTraversal
Code	mockingProgress . verificationStarted ( mode ) ; NodeTraversal
Distance : 7

13
Tree	mockingProgress . verificationStarted ( mode ) ; expected
Code	mockingProgress . verificationStarted ( mode ) ; expected
Distance : 7

14
Tree	mockingProgress . verificationStarted ( mode ) ; {}
Code	mockingProgress . verificationStarted ( mode ) ; {}
Distance : 7

15
Tree	mockingProgress . verificationStarted ( mode ) ; ]
Code	mockingProgress . verificationStarted ( mode ) ; ]
Distance : 7

16
Tree	mockingProgress . verificationStarted ( mode ) ; mode
Code	mockingProgress . verificationStarted ( mode ) ; mode
Distance : 7

17
Tree	mockingProgress . verificationStarted ( mode ) ; &&
Code	mockingProgress . verificationStarted ( mode ) ; &&
Distance : 7

18
Tree	mockingProgress . verificationStarted ( mode ) ; public
Code	mockingProgress . verificationStarted ( mode ) ; public
Distance : 7

19
Tree	mockingProgress . verificationStarted ( mode ) ; final
Code	mockingProgress . verificationStarted ( mode ) ; final
Distance : 7

20
Tree	mockingProgress . verificationStarted ( mode ) ; null
Code	mockingProgress . verificationStarted ( mode ) ; null
Distance : 7

21
Tree	mockingProgress . verificationStarted ( mode ) ; getArgumentMatcherStorage
Code	mockingProgress . verificationStarted ( mode ) ; getArgumentMatcherStorage
Distance : 7

22
Tree	mockingProgress . verificationStarted ( mode ) ; wanted
Code	mockingProgress . verificationStarted ( mode ) ; wanted
Distance : 7

23
Tree	mockingProgress . verificationStarted ( mode ) ; if
Code	mockingProgress . verificationStarted ( mode ) ; if
Distance : 7

24
Tree	mockingProgress . verificationStarted ( mode ) ; ex
Code	mockingProgress . verificationStarted ( mode ) ; ex
Distance : 7

25
Tree	mockingProgress . verificationStarted ( mode ) ; Preconditions
Code	mockingProgress . verificationStarted ( mode ) ; Preconditions
Distance : 7

26
Tree	mockingProgress . verificationStarted ( mode ) ; new
Code	mockingProgress . verificationStarted ( mode ) ; new
Distance : 7

27
Tree	mockingProgress . verificationStarted ( mode ) ; =
Code	mockingProgress . verificationStarted ( mode ) ; =
Distance : 7

28
Tree	mockingProgress . verificationStarted ( mode ) ; STRING_CONSTANT
Code	mockingProgress . verificationStarted ( mode ) ; STRING_CONSTANT
Distance : 7

29
Tree	mockingProgress . verificationStarted ( mode ) ; ()
Code	mockingProgress . verificationStarted ( mode ) ; ()
Distance : 7

30
Tree	mockingProgress . verificationStarted ( mode ) ; ,
Code	mockingProgress . verificationStarted ( mode ) ; ,
Distance : 7

31
Tree	mockingProgress . verificationStarted ( mode ) ; {
Code	mockingProgress . verificationStarted ( mode ) ; {
Distance : 7

32
Tree	mockingProgress . verificationStarted ( mode ) ; }
Code	mockingProgress . verificationStarted ( mode ) ; }
Distance : 7

33
Tree	mockingProgress . verificationStarted ( mode ) ; <
Code	mockingProgress . verificationStarted ( mode ) ; <
Distance : 7

34
Tree	mockingProgress . verificationStarted ( mode ) ; .
Code	mockingProgress . verificationStarted ( mode ) ; .
Distance : 7

35
Tree	mockingProgress . verificationStarted ( mode ) ; (
Code	mockingProgress . verificationStarted ( mode ) ; (
Distance : 7

36
Tree	mockingProgress . verificationStarted ( mode ) ; ;
Code	mockingProgress . verificationStarted ( mode ) ; ;
Distance : 6

37
Tree	mockingProgress . verificationStarted ( mode ) ; <blank>
Code	mockingProgress . verificationStarted ( mode ) ; <blank>
Distance : 7

38
Tree	mockingProgress . verificationStarted ( mode ) ; (
Code	mockingProgress . verificationStarted ( mode ) ; (
Distance : 7

39
Tree	mockingProgress . verificationStarted ( mode ) ; <s>
Code	mockingProgress . verificationStarted ( mode ) ; <s>
Distance : 7

40
Tree	mockingProgress . verificationStarted ( mode ) ; )
Code	mockingProgress . verificationStarted ( mode ) ; )
Distance : 7

41
Tree	mockingProgress . verificationStarted ( mode ) ; >
Code	mockingProgress . verificationStarted ( mode ) ; >
Distance : 7

42
Tree	mockingProgress . verificationStarted ( mode ) ; js
Code	mockingProgress . verificationStarted ( mode ) ; js
Distance : 7

43
Tree	mockingProgress . verificationStarted ( mode ) ; return
Code	mockingProgress . verificationStarted ( mode ) ; return
Distance : 7

44
Tree	mockingProgress . verificationStarted ( mode ) ; true
Code	mockingProgress . verificationStarted ( mode ) ; true
Distance : 7

45
Tree	mockingProgress . verificationStarted ( mode ) ; this
Code	mockingProgress . verificationStarted ( mode ) ; this
Distance : 7

46
Tree	mockingProgress . verificationStarted ( mode ) ; -
Code	mockingProgress . verificationStarted ( mode ) ; -
Distance : 7

47
Tree	mockingProgress . verificationStarted ( mode ) ; root
Code	mockingProgress . verificationStarted ( mode ) ; root
Distance : 7

48
Tree	mockingProgress . verificationStarted ( mode ) ; NUMBER_CONSTANT
Code	mockingProgress . verificationStarted ( mode ) ; NUMBER_CONSTANT
Distance : 7

49
Tree	mockingProgress . verificationStarted ( mode ) ; assertTrue
Code	mockingProgress . verificationStarted ( mode ) ; assertTrue
Distance : 7

50
Tree	mockingProgress . verificationStarted ( mode ) ; /
Code	mockingProgress . verificationStarted ( mode ) ; /
Distance : 7

51
Tree	mockingProgress . verificationStarted ( mode ) ; value
Code	mockingProgress . verificationStarted ( mode ) ; value
Distance : 7

52
Tree	mockingProgress . verificationStarted ( mode ) ; T
Code	mockingProgress . verificationStarted ( mode ) ; T
Distance : 7

53
Tree	mockingProgress . verificationStarted ( mode ) ; setAcceptedLanguage
Code	mockingProgress . verificationStarted ( mode ) ; setAcceptedLanguage
Distance : 7

54
Tree	mockingProgress . verificationStarted ( mode ) ; !=
Code	mockingProgress . verificationStarted ( mode ) ; !=
Distance : 7

55
Tree	mockingProgress . verificationStarted ( mode ) ; reportMatcher
Code	mockingProgress . verificationStarted ( mode ) ; reportMatcher
Distance : 7

56
Tree	mockingProgress . verificationStarted ( mode ) ; instant
Code	mockingProgress . verificationStarted ( mode ) ; instant
Distance : 7

57
Tree	mockingProgress . verificationStarted ( mode ) ; getMessage
Code	mockingProgress . verificationStarted ( mode ) ; getMessage
Distance : 7

58
Tree	mockingProgress . verificationStarted ( mode ) ; stream
Code	mockingProgress . verificationStarted ( mode ) ; stream
Distance : 7

59
Tree	mockingProgress . verificationStarted ( mode ) ; else
Code	mockingProgress . verificationStarted ( mode ) ; else
Distance : 7

60
Tree	mockingProgress . verificationStarted ( mode ) ; matcher
Code	mockingProgress . verificationStarted ( mode ) ; matcher
Distance : 7

61
Tree	mockingProgress . verificationStarted ( mode ) ; type
Code	mockingProgress . verificationStarted ( mode ) ; type
Distance : 7

62
Tree	mockingProgress . verificationStarted ( mode ) ; optimizer
Code	mockingProgress . verificationStarted ( mode ) ; optimizer
Distance : 7

63
Tree	mockingProgress . verificationStarted ( mode ) ; isBlock
Code	mockingProgress . verificationStarted ( mode ) ; isBlock
Distance : 7

64
Tree	mockingProgress . verificationStarted ( mode ) ; abs
Code	mockingProgress . verificationStarted ( mode ) ; abs
Distance : 7

65
Tree	mode . verificationStarted ( mode ) ;
Code	mode . verificationStarted ( mode ) ;
Distance : 7

66
Tree	mock . verificationStarted ( mode ) ;
Code	mock . verificationStarted ( mode ) ;
Distance : 7

67
Tree	mockingProgress . verificationStarted ( mockingProgress ) ;
Code	mockingProgress . verificationStarted ( mockingProgress ) ;
Distance : 7

68
Tree	mock . verificationStarted ( mock ) ;
Code	mock . verificationStarted ( mock ) ;
Distance : 7

69
Tree	mode . verificationStarted ( mockingProgress ) ;
Code	mode . verificationStarted ( mockingProgress ) ;
Distance : 8

70
Tree	mock . verificationStarted ( mockingProgress ) ;
Code	mock . verificationStarted ( mockingProgress ) ;
Distance : 8

71
Tree	mode . verificationStarted ( mock ) ;
Code	mode . verificationStarted ( mock ) ;
Distance : 7

72
Tree	mockingProgress . verificationStarted ( mode ) ; super
Code	mockingProgress . verificationStarted ( mode ) ; super
Distance : 7

73
Tree	mockingProgress . verificationStarted ( mode ) ; long
Code	mockingProgress . verificationStarted ( mode ) ; long
Distance : 7

74
Tree	mockingProgress . verificationStarted ( mode ) ; valueOf
Code	mockingProgress . verificationStarted ( mode ) ; valueOf
Distance : 7

75
Tree	mockingProgress . verificationStarted ( mode ) ; double
Code	mockingProgress . verificationStarted ( mode ) ; double
Distance : 7

76
Tree	mockingProgress . verificationStarted ( mode ) ; Assert
Code	mockingProgress . verificationStarted ( mode ) ; Assert
Distance : 7

77
Tree	mockingProgress . verificationStarted ( mode ) ; Fraction
Code	mockingProgress . verificationStarted ( mode ) ; Fraction
Distance : 7

78
Tree	mockingProgress . verificationStarted ( mode ) ; Exception
Code	mockingProgress . verificationStarted ( mode ) ; Exception
Distance : 7

79
Tree	mockingProgress . verificationStarted ( mode ) ; LanguageMode.ECMASCRIPT6
Code	mockingProgress . verificationStarted ( mode ) ; LanguageMode.ECMASCRIPT6
Distance : 7

80
Tree	mockingProgress . verificationStarted ( mode ) ; index
Code	mockingProgress . verificationStarted ( mode ) ; index
Distance : 7

81
Tree	mockingProgress . verificationStarted ( mode ) ; node
Code	mockingProgress . verificationStarted ( mode ) ; node
Distance : 7

82
Tree	mockingProgress . verificationStarted ( mode ) ; setUp
Code	mockingProgress . verificationStarted ( mode ) ; setUp
Distance : 7

83
Tree	mockingProgress . verificationStarted ( mode ) ; getParent
Code	mockingProgress . verificationStarted ( mode ) ; getParent
Distance : 7

84
Tree	mockingProgress . verificationStarted ( mode ) ; protected
Code	mockingProgress . verificationStarted ( mode ) ; protected
Distance : 7

85
Tree	mockingProgress . verificationStarted ( mode ) ; invocations
Code	mockingProgress . verificationStarted ( mode ) ; invocations
Distance : 7

86
Tree	mockingProgress . verificationStarted ( mode ) ; values
Code	mockingProgress . verificationStarted ( mode ) ; values
Distance : 7

87
Tree	mockingProgress . verificationStarted ( mode ) ; out
Code	mockingProgress . verificationStarted ( mode ) ; out
Distance : 7

88
Tree	mockingProgress . verificationStarted ( mode ) ; obj
Code	mockingProgress . verificationStarted ( mode ) ; obj
Distance : 7

89
Tree	mockingProgress . verificationStarted ( mode ) ; a
Code	mockingProgress . verificationStarted ( mode ) ; a
Distance : 7

90
Tree	mockingProgress . verificationStarted ( mode ) ; instance
Code	mockingProgress . verificationStarted ( mode ) ; instance
Distance : 7

91
Tree	mockingProgress . verificationStarted ( mode ) ; alpha
Code	mockingProgress . verificationStarted ( mode ) ; alpha
Distance : 7

92
Tree	mockingProgress . verificationStarted ( mode ) ; externs
Code	mockingProgress . verificationStarted ( mode ) ; externs
Distance : 7

93
Tree	mockingProgress . verificationStarted ( mode ) ; simpleMethod
Code	mockingProgress . verificationStarted ( mode ) ; simpleMethod
Distance : 7

94
Tree	mockingProgress . verificationStarted ( mode ) ; [
Code	mockingProgress . verificationStarted ( mode ) ; [
Distance : 7

95
Tree	mockingProgress . verificationStarted ( mode ) ; i
Code	mockingProgress . verificationStarted ( mode ) ; i
Distance : 7

96
Tree	mockingProgress . verificationStarted ( mode ) ; checkState
Code	mockingProgress . verificationStarted ( mode ) ; checkState
Distance : 7

97
Tree	mockingProgress . verificationStarted ( mode ) ; int
Code	mockingProgress . verificationStarted ( mode ) ; int
Distance : 7

98
Tree	mockingProgress . verificationStarted ( mode ) ; traverseEs6
Code	mockingProgress . verificationStarted ( mode ) ; traverseEs6
Distance : 7

99
Tree	mockingProgress . verificationStarted ( mode ) ;
Code	mockingProgress . verificationStarted ( mode ) ;
Distance : 6

100
Tree	mockingProgress . verificationStarted ( mode ) ; MutableTimePeriod
Code	mockingProgress . verificationStarted ( mode ) ; MutableTimePeriod
Distance : 7

101
Tree	mockingProgress . verificationStarted ( mode ) ; return;
Code	mockingProgress . verificationStarted ( mode ) ; return;
Distance : 7

102
Tree	mockingProgress . verificationStarted ( mode ) ; get
Code	mockingProgress . verificationStarted ( mode ) ; get
Distance : 7

103
Tree	mockingProgress . verificationStarted ( mode ) ; mockingProgress
Code	mockingProgress . verificationStarted ( mode ) ; mockingProgress
Distance : 7

104
Tree	mockingProgress . verificationStarted ( mode ) ; LanguageMode.ECMASCRIPT_2015
Code	mockingProgress . verificationStarted ( mode ) ; LanguageMode.ECMASCRIPT_2015
Distance : 7

105
Tree	mockingProgress . verificationStarted ( mode ) ; clone
Code	mockingProgress . verificationStarted ( mode ) ; clone
Distance : 7

106
Tree	mockingProgress . verificationStarted ( mode ) ; Double
Code	mockingProgress . verificationStarted ( mode ) ; Double
Distance : 7

107
Tree	mockingProgress . verificationStarted ( mode ) ; PeriodType
Code	mockingProgress . verificationStarted ( mode ) ; PeriodType
Distance : 7

108
Tree	mockingProgress . verificationStarted ( mode ) ; <=
Code	mockingProgress . verificationStarted ( mode ) ; <=
Distance : 7

109
Tree	mockingProgress . verificationStarted ( mode ) ; isNormalBlock
Code	mockingProgress . verificationStarted ( mode ) ; isNormalBlock
Distance : 7

110
Tree	mockingProgress . verificationStarted ( mode ) ; contains
Code	mockingProgress . verificationStarted ( mode ) ; contains
Distance : 7

111
Tree	mockingProgress . verificationStarted ( mode ) ; b
Code	mockingProgress . verificationStarted ( mode ) ; b
Distance : 7

112
Tree	mockingProgress . verificationStarted ( mode ) ; String
Code	mockingProgress . verificationStarted ( mode ) ; String
Distance : 7

113
Tree	mockingProgress . verificationStarted ( mode ) ; assertThat
Code	mockingProgress . verificationStarted ( mode ) ; assertThat
Distance : 7

114
Tree	mockingProgress . verificationStarted ( mode ) ; str
Code	mockingProgress . verificationStarted ( mode ) ; str
Distance : 7

115
Tree	mockingProgress . verificationStarted ( mode ) ; LINE_JOINER
Code	mockingProgress . verificationStarted ( mode ) ; LINE_JOINER
Distance : 7

116
Tree	mockingProgress . verificationStarted ( mode ) ; createIllegalArgumentException
Code	mockingProgress . verificationStarted ( mode ) ; createIllegalArgumentException
Distance : 7

117
Tree	mockingProgress . verificationStarted ( mode ) ; size
Code	mockingProgress . verificationStarted ( mode ) ; size
Distance : 7

118
Tree	mockingProgress . verificationStarted ( mock ) ;
Code	mockingProgress . verificationStarted ( mock ) ;
Distance : 6

119
Tree	mockingProgress . verificationStarted ( mode ) ; Object
Code	mockingProgress . verificationStarted ( mode ) ; Object
Distance : 7

120
Tree	mockingProgress . verificationStarted ( mode ) ; JSType
Code	mockingProgress . verificationStarted ( mode ) ; JSType
Distance : 7

121
Tree	mockingProgress . verificationStarted ( mode ) ; throws
Code	mockingProgress . verificationStarted ( mode ) ; throws
Distance : 7

122
Tree	mockingProgress . verificationStarted ( mode ) ; static
Code	mockingProgress . verificationStarted ( mode ) ; static
Distance : 7

123
Tree	mockingProgress . verificationStarted ( mode ) ; char
Code	mockingProgress . verificationStarted ( mode ) ; char
Distance : 7

124
Tree	mockingProgress . verificationStarted ( mode ) ; source
Code	mockingProgress . verificationStarted ( mode ) ; source
Distance : 7

125
Tree	mockingProgress . verificationStarted ( mode ) ; v
Code	mockingProgress . verificationStarted ( mode ) ; v
Distance : 7

126
Tree	mockingProgress . verificationStarted ( mode ) ; join
Code	mockingProgress . verificationStarted ( mode ) ; join
Distance : 7

127
Tree	mockingProgress . verificationStarted ( mode ) ; result
Code	mockingProgress . verificationStarted ( mode ) ; result
Distance : 7

128
Tree	mockingProgress . verificationStarted ( mode ) ; boolean
Code	mockingProgress . verificationStarted ( mode ) ; boolean
Distance : 7

129
Tree	mockingProgress . verificationStarted ( mode ) ; getInstance
Code	mockingProgress . verificationStarted ( mode ) ; getInstance
Distance : 7

130
Tree	mockingProgress . verificationStarted ( mode ) ; *
Code	mockingProgress . verificationStarted ( mode ) ; *
Distance : 7

131
Tree	mockingProgress . verificationStarted ( mode ) ; serialised
Code	mockingProgress . verificationStarted ( mode ) ; serialised
Distance : 7

132
Tree	mockingProgress . verificationStarted ( mode ) ; ArrayList
Code	mockingProgress . verificationStarted ( mode ) ; ArrayList
Distance : 7

133
Tree	mockingProgress . verificationStarted ( mode ) ; <>
Code	mockingProgress . verificationStarted ( mode ) ; <>
Distance : 7

134
Tree	mockingProgress . verificationStarted ( mode ) ; f
Code	mockingProgress . verificationStarted ( mode ) ; f
Distance : 7

135
Tree	mockingProgress . verificationStarted ( mode ) ; ParamChecks
Code	mockingProgress . verificationStarted ( mode ) ; ParamChecks
Distance : 7

136
Tree	mockingProgress . verificationStarted ( mode ) ; class
Code	mockingProgress . verificationStarted ( mode ) ; class
Distance : 7

137
Tree	mockingProgress . verificationStarted ( mode ) ; testSame
Code	mockingProgress . verificationStarted ( mode ) ; testSame
Distance : 7

138
Tree	mockingProgress . verificationStarted ( mode ) ; mock
Code	mockingProgress . verificationStarted ( mode ) ; mock
Distance : 7

139
Tree	mockingProgress . verificationStarted ( mode ) ; parent
Code	mockingProgress . verificationStarted ( mode ) ; parent
Distance : 7

140
Tree	mockingProgress . verificationStarted ( mode ) ; fireChangeEvent
Code	mockingProgress . verificationStarted ( mode ) ; fireChangeEvent
Distance : 7

141
Tree	mockingProgress . verificationStarted ( mode ) ; stroke
Code	mockingProgress . verificationStarted ( mode ) ; stroke
Distance : 7

142
Tree	mockingProgress . verificationStarted ( mode ) ; StringBuilder
Code	mockingProgress . verificationStarted ( mode ) ; StringBuilder
Distance : 7

143
Tree	mockingProgress . verificationStarted ( mode ) ; isEmpty
Code	mockingProgress . verificationStarted ( mode ) ; isEmpty
Distance : 7

144
Tree	mockingProgress . verificationStarted ( mode ) ; sqrt
Code	mockingProgress . verificationStarted ( mode ) ; sqrt
Distance : 7

145
Tree	mockingProgress . verificationStarted ( mode ) ; MathRuntimeException
Code	mockingProgress . verificationStarted ( mode ) ; MathRuntimeException
Distance : 7

146
Tree	mockingProgress . verificationStarted ( mode ) ; returnZero
Code	mockingProgress . verificationStarted ( mode ) ; returnZero
Distance : 7

147
Tree	mockingProgress . verificationStarted ( mode ) ; Args
Code	mockingProgress . verificationStarted ( mode ) ; Args
Distance : 7

148
Tree	mockingProgress . verificationStarted ( mode ) ; getFirstChild
Code	mockingProgress . verificationStarted ( mode ) ; getFirstChild
Distance : 7

149
Tree	mockingProgress . verificationStarted ( mode ) ; :
Code	mockingProgress . verificationStarted ( mode ) ; :
Distance : 7

150
Tree	mockingProgress . verificationStarted ( mode ) ; m
Code	mockingProgress . verificationStarted ( mode ) ; m
Distance : 7

151
Tree	mockingProgress . verificationStarted ( mode ) ; paint
Code	mockingProgress . verificationStarted ( mode ) ; paint
Distance : 7

152
Tree	mockingProgress . verificationStarted ( mode ) ; length
Code	mockingProgress . verificationStarted ( mode ) ; length
Distance : 7

153
Tree	mockingProgress . verificationStarted ( mode ) ; Node
Code	mockingProgress . verificationStarted ( mode ) ; Node
Distance : 7

154
Tree	mockingProgress . verificationStarted ( mode ) ; lines
Code	mockingProgress . verificationStarted ( mode ) ; lines
Distance : 7

155
Tree	mockingProgress . verificationStarted ( mode ) ; verify
Code	mockingProgress . verificationStarted ( mode ) ; verify
Distance : 7

156
Tree	mockingProgress . verificationStarted ( mode ) ; TestUtils
Code	mockingProgress . verificationStarted ( mode ) ; TestUtils
Distance : 7

157
Tree	mockingProgress . verificationStarted ( mode ) ; Integer
Code	mockingProgress . verificationStarted ( mode ) ; Integer
Distance : 7

158
Tree	mockingProgress . verificationStarted ( mode ) ; checkNotNull
Code	mockingProgress . verificationStarted ( mode ) ; checkNotNull
Distance : 7

159
Tree	mockingProgress . verificationStarted ( mode ) ; s
Code	mockingProgress . verificationStarted ( mode ) ; s
Distance : 7

160
Tree	mockingProgress . verificationStarted ( mode ) ; scope
Code	mockingProgress . verificationStarted ( mode ) ; scope
Distance : 7

161
Tree	mockingProgress . verificationStarted ( mode ) ; reportCodeChange
Code	mockingProgress . verificationStarted ( mode ) ; reportCodeChange
Distance : 7

162
Tree	mockingProgress . verificationStarted ( mode ) ; invocation
Code	mockingProgress . verificationStarted ( mode ) ; invocation
Distance : 7

163
Tree	mockingProgress . verificationStarted ( mode ) ; FastMath
Code	mockingProgress . verificationStarted ( mode ) ; FastMath
Distance : 7

164
Tree	mockingProgress . verificationStarted ( mode ) ; t
Code	mockingProgress . verificationStarted ( mode ) ; t
Distance : 7

165
Tree	mockingProgress . verificationStarted ( mode ) ; name
Code	mockingProgress . verificationStarted ( mode ) ; name
Distance : 7

166
Tree	mockingProgress . verificationStarted ( mode ) ; array
Code	mockingProgress . verificationStarted ( mode ) ; array
Distance : 7

167
Tree	mockingProgress . verificationStarted ( mode ) ; List
Code	mockingProgress . verificationStarted ( mode ) ; List
Distance : 7

168
Tree	mockingProgress . verificationStarted ( mode ) ; try
Code	mockingProgress . verificationStarted ( mode ) ; try
Distance : 7

169
Tree	mockingProgress . verificationStarted ( mode ) ; IllegalArgumentException
Code	mockingProgress . verificationStarted ( mode ) ; IllegalArgumentException
Distance : 7

170
Tree	mockingProgress . verificationStarted ( mode ) ; UnivariateFunction
Code	mockingProgress . verificationStarted ( mode ) ; UnivariateFunction
Distance : 7

171
Tree	mockingProgress . verificationStarted ( mode ) ; append
Code	mockingProgress . verificationStarted ( mode ) ; append
Distance : 7

172
Tree	mockingProgress . verificationStarted ( mode ) ; ?
Code	mockingProgress . verificationStarted ( mode ) ; ?
Distance : 7

173
Tree	mockingProgress . verificationStarted ( mode ) ; !
Code	mockingProgress . verificationStarted ( mode ) ; !
Distance : 7

174
Tree	mockingProgress . verificationStarted ( mode ) ; nullNotPermitted
Code	mockingProgress . verificationStarted ( mode ) ; nullNotPermitted
Distance : 7

175
Tree	mockingProgress . verificationStarted ( mode ) ; fail
Code	mockingProgress . verificationStarted ( mode ) ; fail
Distance : 7

176
Tree	mockingProgress . verificationStarted ( mode ) ; []
Code	mockingProgress . verificationStarted ( mode ) ; []
Distance : 7

177
Tree	mockingProgress . verificationStarted ( mode ) ; @
Code	mockingProgress . verificationStarted ( mode ) ; @
Distance : 7

178
Tree	mockingProgress . verificationStarted ( mode ) ; assertEquals
Code	mockingProgress . verificationStarted ( mode ) ; assertEquals
Distance : 7

179
Tree	mockingProgress . verificationStarted ( mode ) ; test
Code	mockingProgress . verificationStarted ( mode ) ; test
Distance : 7

180
Tree	mockingProgress . verificationStarted ( mode ) ; ==
Code	mockingProgress . verificationStarted ( mode ) ; ==
Distance : 7

181
Tree	mockingProgress . verificationStarted ( mode ) ; equals
Code	mockingProgress . verificationStarted ( mode ) ; equals
Distance : 7

182
Tree	mockingProgress . verificationStarted ( mode ) ; Invocation
Code	mockingProgress . verificationStarted ( mode ) ; Invocation
Distance : 7

183
Tree	mockingProgress . verificationStarted ( mode ) ; notifyListeners
Code	mockingProgress . verificationStarted ( mode ) ; notifyListeners
Distance : 7

184
Tree	mockingProgress . verificationStarted ( mode ) ; for
Code	mockingProgress . verificationStarted ( mode ) ; for
Distance : 7

185
Tree	mockingProgress . verificationStarted ( mode ) ; TestUtilities
Code	mockingProgress . verificationStarted ( mode ) ; TestUtilities
Distance : 7

186
Tree	mockingProgress . verificationStarted ( mode ) ; d
Code	mockingProgress . verificationStarted ( mode ) ; d
Distance : 7

187
Tree	mockingProgress . verificationStarted ( mode ) ; sb
Code	mockingProgress . verificationStarted ( mode ) ; sb
Distance : 7

188
Tree	mockingProgress . verificationStarted ( mode ) ; Override
Code	mockingProgress . verificationStarted ( mode ) ; Override
Distance : 7

189
Tree	mockingProgress . verificationStarted ( mode ) ; field
Code	mockingProgress . verificationStarted ( mode ) ; field
Distance : 7

190
Tree	mockingProgress . verificationStarted ( mode ) ; false
Code	mockingProgress . verificationStarted ( mode ) ; false
Distance : 7

191
Tree	mockingProgress . verificationStarted ( mode ) ; x
Code	mockingProgress . verificationStarted ( mode ) ; x
Distance : 7

192
Tree	mockingProgress . verificationStarted ( mode ) ; c
Code	mockingProgress . verificationStarted ( mode ) ; c
Distance : 7

193
Tree	mockingProgress . verificationStarted ( mode ) ; toString
Code	mockingProgress . verificationStarted ( mode ) ; toString
Distance : 7

194
Tree	mockingProgress . verificationStarted ( mode ) ; p
Code	mockingProgress . verificationStarted ( mode ) ; p
Distance : 7

195
Tree	mockingProgress . verificationStarted ( mode ) ; Test
Code	mockingProgress . verificationStarted ( mode ) ; Test
Distance : 7

196
Tree	mockingProgress . verificationStarted ( mode ) ; options
Code	mockingProgress . verificationStarted ( mode ) ; options
Distance : 7

197
Tree	mockingProgress . verificationStarted ( mode ) ; Math
Code	mockingProgress . verificationStarted ( mode ) ; Math
Distance : 7

198
Tree	mockingProgress . verificationStarted ( mode ) ; Class
Code	mockingProgress . verificationStarted ( mode ) ; Class
Distance : 7

199
Tree	mockingProgress . verificationStarted ( mode ) ; chrono
Code	mockingProgress . verificationStarted ( mode ) ; chrono
Distance : 7

========================================================================


========================================================================
Example Number: 86
Parent Code is: 
return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
-------------------------------------------------------------------------------
Child code is: 
return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata , invocation . getMock () ) , container ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=recordDeepStubAnswer}) (214{val=(}) (32 (802{val=newDeepStubMock}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (234{val=,}) (800{val=container}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=recordDeepStubAnswer}) (214{val=(}) (32 (802{val=newDeepStubMock}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (234{val=,}) (32 (800{val=invocation}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=container}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/10/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Integer
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Integer
Distance : 8

1
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; createIllegalArgumentException
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; createIllegalArgumentException
Distance : 8

2
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; x
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; x
Distance : 8

3
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; LINE_JOINER
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; LINE_JOINER
Distance : 8

4
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ?
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ?
Distance : 8

5
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Assert
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Assert
Distance : 8

6
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertThat
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertThat
Distance : 8

7
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; TestUtils
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; TestUtils
Distance : 8

8
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Exception
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Exception
Distance : 8

9
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; index
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; index
Distance : 8

10
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; invocations
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; invocations
Distance : 8

11
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Class
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Class
Distance : 8

12
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; source
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; source
Distance : 8

13
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; options
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; options
Distance : 8

14
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; p
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; p
Distance : 8

15
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; @
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; @
Distance : 8

16
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; false
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; false
Distance : 8

17
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; double
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; double
Distance : 8

18
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ==
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ==
Distance : 8

19
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; void
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; void
Distance : 8

20
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; throw
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; throw
Distance : 8

21
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; catch
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; catch
Distance : 8

22
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; testSame
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; testSame
Distance : 8

23
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; test
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; test
Distance : 8

24
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; array
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; array
Distance : 8

25
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; class
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; class
Distance : 8

26
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; :
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; :
Distance : 8

27
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; fail
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; fail
Distance : 8

28
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Args
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Args
Distance : 8

29
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; List
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; List
Distance : 8

30
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; IllegalArgumentException
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; IllegalArgumentException
Distance : 8

31
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; expected
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; expected
Distance : 8

32
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; FastMath
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; FastMath
Distance : 8

33
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; reportCodeChange
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; reportCodeChange
Distance : 8

34
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; parent
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; parent
Distance : 8

35
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ArrayList
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ArrayList
Distance : 8

36
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getInstance
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getInstance
Distance : 8

37
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; serialised
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; serialised
Distance : 8

38
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; str
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; str
Distance : 8

39
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; fireChangeEvent
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; fireChangeEvent
Distance : 8

40
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; v
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; v
Distance : 8

41
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; invocation
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; invocation
Distance : 8

42
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; result
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; result
Distance : 8

43
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; paint
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; paint
Distance : 8

44
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; try
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; try
Distance : 8

45
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; m
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; m
Distance : 8

46
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; f
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; f
Distance : 8

47
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <>
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <>
Distance : 8

48
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; long
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; long
Distance : 8

49
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; []
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; []
Distance : 8

50
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; nullNotPermitted
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; nullNotPermitted
Distance : 8

51
Tree	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 6

52
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , invocation ) ;
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , invocation ) ;
Distance : 8

53
Tree	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Distance : 5

54
Tree	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , invocation ) ;
Code	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , invocation ) ;
Distance : 7

55
Tree	return getMock ( getMock ( container ) , invocation ) ;
Code	return getMock ( getMock ( container ) , invocation ) ;
Distance : 9

56
Tree	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , invocation ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , invocation ) ;
Distance : 6

57
Tree	return recordDeepStubAnswer ( newDeepStubMock ( container ) , invocation ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( container ) , invocation ) ;
Distance : 7

58
Tree	return recordDeepStubAnswer ( getMock ( container ) , invocation ) ;
Code	return recordDeepStubAnswer ( getMock ( container ) , invocation ) ;
Distance : 8

59
Tree	return getMock ( newDeepStubMock ( container ) , invocation ) ;
Code	return getMock ( newDeepStubMock ( container ) , invocation ) ;
Distance : 8

60
Tree	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , invocation ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , invocation ) ;
Distance : 6

61
Tree	return recordDeepStubAnswer ( getMock ( invocation ) , invocation ) ;
Code	return recordDeepStubAnswer ( getMock ( invocation ) , invocation ) ;
Distance : 7

62
Tree	return recordDeepStubAnswer ( newDeepStubMock ( container ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( container ) , returnTypeGenericMetadata ) ;
Distance : 7

63
Tree	return getMock ( newDeepStubMock ( invocation ) , invocation ) ;
Code	return getMock ( newDeepStubMock ( invocation ) , invocation ) ;
Distance : 7

64
Tree	return recordDeepStubAnswer ( getMock ( container ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( getMock ( container ) , returnTypeGenericMetadata ) ;
Distance : 8

65
Tree	return getMock ( getMock ( invocation ) , invocation ) ;
Code	return getMock ( getMock ( invocation ) , invocation ) ;
Distance : 8

66
Tree	return getMock ( newDeepStubMock ( container ) , returnTypeGenericMetadata ) ;
Code	return getMock ( newDeepStubMock ( container ) , returnTypeGenericMetadata ) ;
Distance : 8

67
Tree	return getMock ( getMock ( container ) , returnTypeGenericMetadata ) ;
Code	return getMock ( getMock ( container ) , returnTypeGenericMetadata ) ;
Distance : 9

68
Tree	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( invocation ) , returnTypeGenericMetadata ) ;
Distance : 6

69
Tree	return recordDeepStubAnswer ( getMock ( invocation ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( getMock ( invocation ) , returnTypeGenericMetadata ) ;
Distance : 7

70
Tree	return getMock ( newDeepStubMock ( invocation ) , returnTypeGenericMetadata ) ;
Code	return getMock ( newDeepStubMock ( invocation ) , returnTypeGenericMetadata ) ;
Distance : 7

71
Tree	return getMock ( getMock ( invocation ) , returnTypeGenericMetadata ) ;
Code	return getMock ( getMock ( invocation ) , returnTypeGenericMetadata ) ;
Distance : 8

72
Tree	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 5

73
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; length
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; length
Distance : 8

74
Tree	return getMock ( getMock ( invocation ) , container ) ;
Code	return getMock ( getMock ( invocation ) , container ) ;
Distance : 7

75
Tree	return recordDeepStubAnswer ( getMock ( invocation ) , container ) ;
Code	return recordDeepStubAnswer ( getMock ( invocation ) , container ) ;
Distance : 6

76
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkNotNull
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkNotNull
Distance : 8

77
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Fraction
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Fraction
Distance : 8

78
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; &&
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; &&
Distance : 8

79
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; !=
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; !=
Distance : 8

80
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; value
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; value
Distance : 8

81
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; T
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; T
Distance : 8

82
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; -
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; -
Distance : 8

83
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Preconditions
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Preconditions
Distance : 8

84
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; [
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; [
Distance : 8

85
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ]
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ]
Distance : 8

86
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertEquals
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertEquals
Distance : 8

87
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; !
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; !
Distance : 8

88
Tree	return getMock ( getMock ( container ) , container ) ;
Code	return getMock ( getMock ( container ) , container ) ;
Distance : 8

89
Tree	return recordDeepStubAnswer ( getMock ( container ) , container ) ;
Code	return recordDeepStubAnswer ( getMock ( container ) , container ) ;
Distance : 7

90
Tree	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 6

91
Tree	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 7

92
Tree	return getMock ( newDeepStubMock ( container ) , container ) ;
Code	return getMock ( newDeepStubMock ( container ) , container ) ;
Distance : 7

93
Tree	return recordDeepStubAnswer ( newDeepStubMock ( container ) , container ) ;
Code	return recordDeepStubAnswer ( newDeepStubMock ( container ) , container ) ;
Distance : 6

94
Tree	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 7

95
Tree	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 6

96
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 8

97
Tree	return getMock ( newDeepStubMock ( invocation ) , container ) ;
Code	return getMock ( newDeepStubMock ( invocation ) , container ) ;
Distance : 6

98
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getParent
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getParent
Distance : 8

99
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 7

100
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; compiler
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; compiler
Distance : 8

101
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <
Distance : 8

102
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; this
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; this
Distance : 8

103
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; final
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; final
Distance : 8

104
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; =
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; =
Distance : 8

105
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; }
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; }
Distance : 8

106
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ()
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ()
Distance : 8

107
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; {
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; {
Distance : 8

108
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkArgument
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkArgument
Distance : 8

109
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; field
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; field
Distance : 8

110
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; t
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; t
Distance : 8

111
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; name
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; name
Distance : 8

112
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; data
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; data
Distance : 8

113
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; add
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; add
Distance : 8

114
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NodeTraversal
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NodeTraversal
Distance : 8

115
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; stream
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; stream
Distance : 8

116
Tree	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , invocation ) ;
Code	return recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , invocation ) ;
Distance : 7

117
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; String
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; String
Distance : 8

118
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mode
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mode
Distance : 8

119
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mock
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mock
Distance : 8

120
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Object
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Object
Distance : 8

121
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ParamChecks
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ParamChecks
Distance : 8

122
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <blank>
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <blank>
Distance : 8

123
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return
Distance : 8

124
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <s>
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; <s>
Distance : 8

125
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; (
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; (
Distance : 8

126
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ;
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ;
Distance : 8

127
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; )
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; )
Distance : 8

128
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; .
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; .
Distance : 8

129
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ,
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ,
Distance : 8

130
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; if
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; if
Distance : 8

131
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Math
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Math
Distance : 8

132
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; protected
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; protected
Distance : 8

133
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NodeUtil
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NodeUtil
Distance : 8

134
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; root
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; root
Distance : 8

135
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; StringBuilder
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; StringBuilder
Distance : 8

136
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; stroke
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; stroke
Distance : 8

137
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; toString
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; toString
Distance : 8

138
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Test
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Test
Distance : 8

139
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; c
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; c
Distance : 8

140
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; lines
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; lines
Distance : 8

141
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return;
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return;
Distance : 8

142
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; LanguageMode.ECMASCRIPT_2015
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; LanguageMode.ECMASCRIPT_2015
Distance : 8

143
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; size
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; size
Distance : 8

144
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; join
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; join
Distance : 8

145
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; boolean
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; boolean
Distance : 8

146
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; type
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; type
Distance : 8

147
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; *
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; *
Distance : 8

148
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mockingProgress
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; mockingProgress
Distance : 8

149
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; i
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; i
Distance : 8

150
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; wanted
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; wanted
Distance : 8

151
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; super
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; super
Distance : 8

152
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Node
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Node
Distance : 8

153
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; verify
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; verify
Distance : 8

154
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ex
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; ex
Distance : 8

155
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; traverseEs6
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; traverseEs6
Distance : 8

156
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; MutableTimePeriod
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; MutableTimePeriod
Distance : 8

157
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; out
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; out
Distance : 8

158
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; isEmpty
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; isEmpty
Distance : 8

159
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; JSType
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; JSType
Distance : 8

160
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; char
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; char
Distance : 8

161
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; get
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; get
Distance : 8

162
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkState
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; checkState
Distance : 8

163
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; int
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; int
Distance : 8

164
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; notifyListeners
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; notifyListeners
Distance : 8

165
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Invocation
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Invocation
Distance : 8

166
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertTrue
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; assertTrue
Distance : 8

167
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; /
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; /
Distance : 8

168
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; externs
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; externs
Distance : 8

169
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; for
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; for
Distance : 8

170
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; setUp
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; setUp
Distance : 8

171
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; reportMatcher
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; reportMatcher
Distance : 8

172
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; TestUtilities
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; TestUtilities
Distance : 8

173
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; js
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; js
Distance : 8

174
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; else
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; else
Distance : 8

175
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getMessage
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; getMessage
Distance : 8

176
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; matcher
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; matcher
Distance : 8

177
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; MathRuntimeException
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; MathRuntimeException
Distance : 8

178
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; equals
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; equals
Distance : 8

179
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; StrBuilder
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; StrBuilder
Distance : 8

180
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; d
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; d
Distance : 8

181
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; public
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; public
Distance : 8

182
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; setAcceptedLanguage
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; setAcceptedLanguage
Distance : 8

183
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; +
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; +
Distance : 8

184
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; null
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; null
Distance : 8

185
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; >
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; >
Distance : 8

186
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; new
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; new
Distance : 8

187
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; STRING_CONSTANT
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; STRING_CONSTANT
Distance : 8

188
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NUMBER_CONSTANT
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; NUMBER_CONSTANT
Distance : 8

189
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; return
Distance : 8

190
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; e
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; e
Distance : 8

191
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; n
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; n
Distance : 8

192
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Override
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; Override
Distance : 8

193
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; true
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; true
Distance : 8

194
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; values
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; values
Distance : 8

195
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; {}
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; {}
Distance : 8

196
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; abs
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; abs
Distance : 8

197
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; instant
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; instant
Distance : 8

198
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; static
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; static
Distance : 8

199
Tree	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; node
Code	return getMock ( getMock ( returnTypeGenericMetadata ) , container ) ; node
Distance : 8

========================================================================


========================================================================
Example Number: 87
Parent Code is: 
{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyCollection () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=Collection})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyCollection}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Distance : 10

1
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } add
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } add
Distance : 10

2
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Distance : 10

3
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } data
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } data
Distance : 10

4
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 10

5
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } void
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } void
Distance : 10

6
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } catch
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } catch
Distance : 10

7
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } compiler
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } compiler
Distance : 10

8
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } throw
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } throw
Distance : 10

9
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } n
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } n
Distance : 10

10
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } +
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } +
Distance : 10

11
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } e
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } e
Distance : 10

12
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Distance : 10

13
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } expected
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } expected
Distance : 10

14
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } {}
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } {}
Distance : 10

15
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ]
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ]
Distance : 10

16
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mode
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mode
Distance : 10

17
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } &&
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } &&
Distance : 10

18
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } public
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } public
Distance : 10

19
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } final
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } final
Distance : 10

20
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } null
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } null
Distance : 10

21
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Distance : 10

22
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } wanted
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } wanted
Distance : 10

23
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } if
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } if
Distance : 10

24
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ex
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ex
Distance : 10

25
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Distance : 10

26
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } new
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } new
Distance : 10

27
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } =
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } =
Distance : 10

28
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Distance : 10

29
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ()
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ()
Distance : 10

30
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ,
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ,
Distance : 10

31
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } {
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } {
Distance : 10

32
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } }
Distance : 10

33
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <
Distance : 10

34
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } .
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } .
Distance : 10

35
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } (
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } (
Distance : 10

36
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ;
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ;
Distance : 10

37
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Distance : 10

38
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 10

39
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <s>
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <s>
Distance : 10

40
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } )
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } )
Distance : 10

41
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } >
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } >
Distance : 10

42
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } js
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } js
Distance : 10

43
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 10

44
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } true
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } true
Distance : 10

45
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } this
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } this
Distance : 10

46
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } -
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } -
Distance : 10

47
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } root
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } root
Distance : 10

48
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Distance : 10

49
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Distance : 10

50
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } /
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } /
Distance : 10

51
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } value
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } value
Distance : 10

52
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } T
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } T
Distance : 10

53
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Distance : 10

54
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } !=
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } !=
Distance : 10

55
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Distance : 10

56
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } instant
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } instant
Distance : 10

57
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Distance : 10

58
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } stream
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } stream
Distance : 10

59
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } else
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } else
Distance : 10

60
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } matcher
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } matcher
Distance : 10

61
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } type
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } type
Distance : 10

62
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Distance : 10

63
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Distance : 10

64
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } abs
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } abs
Distance : 10

65
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

66
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

67
Tree	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Distance : 9

68
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

69
Tree	{ return ( Collection ) returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

70
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

71
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

72
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } super
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } super
Distance : 10

73
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } long
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } long
Distance : 10

74
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Distance : 10

75
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } double
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } double
Distance : 10

76
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Assert
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Assert
Distance : 10

77
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Distance : 10

78
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Exception
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Exception
Distance : 10

79
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 10

80
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } index
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } index
Distance : 10

81
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } node
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } node
Distance : 10

82
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } setUp
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } setUp
Distance : 10

83
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getParent
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getParent
Distance : 10

84
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } protected
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } protected
Distance : 10

85
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } invocations
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } invocations
Distance : 10

86
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } values
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } values
Distance : 10

87
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } out
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } out
Distance : 10

88
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } obj
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } obj
Distance : 10

89
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } a
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } a
Distance : 10

90
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } instance
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } instance
Distance : 10

91
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } alpha
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } alpha
Distance : 10

92
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } externs
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } externs
Distance : 10

93
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Distance : 10

94
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } [
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } [
Distance : 10

95
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } i
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } i
Distance : 10

96
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkState
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkState
Distance : 10

97
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } int
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } int
Distance : 10

98
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Distance : 10

99
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

100
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Distance : 10

101
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return;
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } return;
Distance : 10

102
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } get
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } get
Distance : 10

103
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Distance : 10

104
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Distance : 10

105
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } clone
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } clone
Distance : 10

106
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Double
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Double
Distance : 10

107
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Distance : 10

108
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <=
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <=
Distance : 10

109
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Distance : 10

110
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } contains
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } contains
Distance : 10

111
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } b
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } b
Distance : 10

112
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } String
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } String
Distance : 10

113
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Distance : 10

114
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } str
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } str
Distance : 10

115
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Distance : 10

116
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 10

117
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } size
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } size
Distance : 10

118
Tree	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Distance : 9

119
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Object
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Object
Distance : 10

120
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } JSType
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } JSType
Distance : 10

121
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } throws
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } throws
Distance : 10

122
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } static
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } static
Distance : 10

123
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } char
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } char
Distance : 10

124
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } source
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } source
Distance : 10

125
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } v
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } v
Distance : 10

126
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } join
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } join
Distance : 10

127
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } result
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } result
Distance : 10

128
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } boolean
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } boolean
Distance : 10

129
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Distance : 10

130
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } *
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } *
Distance : 10

131
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } serialised
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } serialised
Distance : 10

132
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Distance : 10

133
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <>
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } <>
Distance : 10

134
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } f
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } f
Distance : 10

135
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 10

136
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } class
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } class
Distance : 10

137
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } testSame
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } testSame
Distance : 10

138
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mock
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } mock
Distance : 10

139
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } parent
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } parent
Distance : 10

140
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Distance : 10

141
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } stroke
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } stroke
Distance : 10

142
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Distance : 10

143
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Distance : 10

144
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Distance : 10

145
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Distance : 10

146
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Distance : 10

147
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Args
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Args
Distance : 10

148
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 10

149
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } :
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } :
Distance : 10

150
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } m
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } m
Distance : 10

151
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } paint
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } paint
Distance : 10

152
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } length
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } length
Distance : 10

153
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Node
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Node
Distance : 10

154
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } lines
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } lines
Distance : 10

155
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } verify
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } verify
Distance : 10

156
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Distance : 10

157
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Integer
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Integer
Distance : 10

158
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Distance : 10

159
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } s
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } s
Distance : 10

160
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } scope
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } scope
Distance : 10

161
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Distance : 10

162
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } invocation
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } invocation
Distance : 10

163
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Distance : 10

164
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } t
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } t
Distance : 10

165
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } name
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } name
Distance : 10

166
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } array
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } array
Distance : 10

167
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } List
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } List
Distance : 10

168
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } try
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } try
Distance : 10

169
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Distance : 10

170
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 10

171
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } append
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } append
Distance : 10

172
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ?
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ?
Distance : 10

173
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } !
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } !
Distance : 10

174
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Distance : 10

175
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } fail
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } fail
Distance : 10

176
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } []
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } []
Distance : 10

177
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } @
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } @
Distance : 10

178
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Distance : 10

179
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } test
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } test
Distance : 10

180
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ==
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } ==
Distance : 10

181
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } equals
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } equals
Distance : 10

182
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Distance : 10

183
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Distance : 10

184
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } for
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } for
Distance : 10

185
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Distance : 10

186
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } d
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } d
Distance : 10

187
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } sb
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } sb
Distance : 10

188
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Override
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Override
Distance : 10

189
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } field
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } field
Distance : 10

190
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } false
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } false
Distance : 10

191
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } x
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } x
Distance : 10

192
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } c
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } c
Distance : 10

193
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } toString
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } toString
Distance : 10

194
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } p
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } p
Distance : 10

195
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Test
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Test
Distance : 10

196
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } options
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } options
Distance : 10

197
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Math
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Math
Distance : 10

198
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Class
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } Class
Distance : 10

199
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } chrono
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; } chrono
Distance : 10

========================================================================


========================================================================
Example Number: 88
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Collection . class ) ) . returnList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Collection})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ]
Distance : 8

70
Tree	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnList ( Any.ANY ) . returnList () ; }
Code	{ return returnList ( Any.ANY ) . returnList () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 89
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnMap () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyMap () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StrBuilder
Distance : 7

1
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } add
Distance : 7

2
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkArgument
Distance : 7

3
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } data
Distance : 7

4
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeUtil
Distance : 7

5
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } void
Distance : 7

6
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } catch
Distance : 7

7
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } compiler
Distance : 7

8
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throw
Distance : 7

9
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } n
Distance : 7

10
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } +
Distance : 7

11
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } e
Distance : 7

12
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeTraversal
Distance : 7

13
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } expected
Distance : 7

14
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {}
Distance : 7

15
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ]
Distance : 7

16
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mode
Distance : 7

17
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } &&
Distance : 7

18
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } public
Distance : 7

19
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } final
Distance : 7

20
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } null
Distance : 7

21
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getArgumentMatcherStorage
Distance : 7

22
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } wanted
Distance : 7

23
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } if
Distance : 7

24
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ex
Distance : 7

25
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Preconditions
Distance : 7

26
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } new
Distance : 7

27
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } =
Distance : 7

28
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } STRING_CONSTANT
Distance : 7

29
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ()
Distance : 7

30
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ,
Distance : 7

31
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Distance : 7

32
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } }
Distance : 7

33
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <
Distance : 7

34
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } .
Distance : 7

35
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } (
Distance : 7

36
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ;
Distance : 7

37
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <blank>
Distance : 7

38
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Distance : 7

39
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <s>
Distance : 7

40
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } )
Distance : 7

41
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } >
Distance : 7

42
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } js
Distance : 7

43
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Distance : 7

44
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } true
Distance : 7

45
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } this
Distance : 7

46
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } -
Distance : 7

47
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } root
Distance : 7

48
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NUMBER_CONSTANT
Distance : 7

49
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertTrue
Distance : 7

50
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } /
Distance : 7

51
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } value
Distance : 7

52
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } T
Distance : 7

53
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setAcceptedLanguage
Distance : 7

54
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !=
Distance : 7

55
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportMatcher
Distance : 7

56
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instant
Distance : 7

57
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getMessage
Distance : 7

58
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stream
Distance : 7

59
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } else
Distance : 7

60
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } matcher
Distance : 7

61
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } type
Distance : 7

62
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } optimizer
Distance : 7

63
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isBlock
Distance : 7

64
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } abs
Distance : 7

65
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 6

66
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 6

67
Tree	{ return returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return returnMap ( Any.ANY ) . returnMap () ; }
Distance : 6

68
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 6

69
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 6

70
Tree	{ return returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return returnMap ( Any.ANY ) . returnMap () ; }
Distance : 6

71
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 6

72
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } super
Distance : 7

73
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } long
Distance : 7

74
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } valueOf
Distance : 7

75
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } double
Distance : 7

76
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Assert
Distance : 7

77
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Fraction
Distance : 7

78
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Exception
Distance : 7

79
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Distance : 7

80
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } index
Distance : 7

81
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } node
Distance : 7

82
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setUp
Distance : 7

83
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getParent
Distance : 7

84
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } protected
Distance : 7

85
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocations
Distance : 7

86
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } values
Distance : 7

87
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } out
Distance : 7

88
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } obj
Distance : 7

89
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } a
Distance : 7

90
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instance
Distance : 7

91
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } alpha
Distance : 7

92
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } externs
Distance : 7

93
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } simpleMethod
Distance : 7

94
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } [
Distance : 7

95
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } i
Distance : 7

96
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkState
Distance : 7

97
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } int
Distance : 7

98
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } traverseEs6
Distance : 7

99
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 6

100
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MutableTimePeriod
Distance : 7

101
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return;
Distance : 7

102
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } get
Distance : 7

103
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mockingProgress
Distance : 7

104
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT_2015
Distance : 7

105
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } clone
Distance : 7

106
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Double
Distance : 7

107
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } PeriodType
Distance : 7

108
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <=
Distance : 7

109
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isNormalBlock
Distance : 7

110
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } contains
Distance : 7

111
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } b
Distance : 7

112
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } String
Distance : 7

113
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertThat
Distance : 7

114
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } str
Distance : 7

115
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LINE_JOINER
Distance : 7

116
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Distance : 7

117
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } size
Distance : 7

118
Tree	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Distance : 6

119
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Object
Distance : 7

120
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } JSType
Distance : 7

121
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throws
Distance : 7

122
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } static
Distance : 7

123
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } char
Distance : 7

124
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } source
Distance : 7

125
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } v
Distance : 7

126
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } join
Distance : 7

127
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } result
Distance : 7

128
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } boolean
Distance : 7

129
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getInstance
Distance : 7

130
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } *
Distance : 7

131
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } serialised
Distance : 7

132
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ArrayList
Distance : 7

133
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <>
Distance : 7

134
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } f
Distance : 7

135
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ParamChecks
Distance : 7

136
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } class
Distance : 7

137
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } testSame
Distance : 7

138
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mock
Distance : 7

139
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } parent
Distance : 7

140
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fireChangeEvent
Distance : 7

141
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stroke
Distance : 7

142
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StringBuilder
Distance : 7

143
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isEmpty
Distance : 7

144
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sqrt
Distance : 7

145
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MathRuntimeException
Distance : 7

146
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } returnZero
Distance : 7

147
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Args
Distance : 7

148
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getFirstChild
Distance : 7

149
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } :
Distance : 7

150
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } m
Distance : 7

151
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } paint
Distance : 7

152
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } length
Distance : 7

153
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Node
Distance : 7

154
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } lines
Distance : 7

155
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } verify
Distance : 7

156
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtils
Distance : 7

157
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Integer
Distance : 7

158
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkNotNull
Distance : 7

159
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } s
Distance : 7

160
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } scope
Distance : 7

161
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportCodeChange
Distance : 7

162
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocation
Distance : 7

163
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } FastMath
Distance : 7

164
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } t
Distance : 7

165
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } name
Distance : 7

166
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } array
Distance : 7

167
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } List
Distance : 7

168
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } try
Distance : 7

169
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } IllegalArgumentException
Distance : 7

170
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } UnivariateFunction
Distance : 7

171
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } append
Distance : 7

172
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ?
Distance : 7

173
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !
Distance : 7

174
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } nullNotPermitted
Distance : 7

175
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fail
Distance : 7

176
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } []
Distance : 7

177
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } @
Distance : 7

178
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertEquals
Distance : 7

179
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } test
Distance : 7

180
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ==
Distance : 7

181
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } equals
Distance : 7

182
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Invocation
Distance : 7

183
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } notifyListeners
Distance : 7

184
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } for
Distance : 7

185
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtilities
Distance : 7

186
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } d
Distance : 7

187
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sb
Distance : 7

188
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Override
Distance : 7

189
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } field
Distance : 7

190
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } false
Distance : 7

191
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } x
Distance : 7

192
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } c
Distance : 7

193
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } toString
Distance : 7

194
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } p
Distance : 7

195
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Test
Distance : 7

196
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } options
Distance : 7

197
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Math
Distance : 7

198
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Class
Distance : 7

199
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } chrono
Distance : 7

========================================================================


========================================================================
Example Number: 90
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnMap () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Map . class ) ) . returnMap () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Map})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ]
Distance : 8

70
Tree	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return returnMap ( Any.ANY ) . returnMap () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 91
Parent Code is: 
{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anySet () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=Set})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anySet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } invocations
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } invocations
Distance : 10

1
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } options
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } options
Distance : 10

2
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } p
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } p
Distance : 10

3
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } &&
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } &&
Distance : 10

4
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } T
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } T
Distance : 10

5
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } !=
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } !=
Distance : 10

6
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } value
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } value
Distance : 10

7
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ParamChecks
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ParamChecks
Distance : 10

8
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Object
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Object
Distance : 10

9
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mock
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mock
Distance : 10

10
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Override
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Override
Distance : 10

11
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertEquals
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertEquals
Distance : 10

12
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } !
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } !
Distance : 10

13
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } []
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } []
Distance : 10

14
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } nullNotPermitted
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } nullNotPermitted
Distance : 10

15
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } catch
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } catch
Distance : 10

16
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } throw
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } throw
Distance : 10

17
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } void
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } void
Distance : 10

18
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ==
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ==
Distance : 10

19
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } double
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } double
Distance : 10

20
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } index
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } index
Distance : 10

21
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } >
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } >
Distance : 10

22
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } source
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } source
Distance : 10

23
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } null
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } null
Distance : 10

24
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Class
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Class
Distance : 10

25
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } @
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } @
Distance : 10

26
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } {}
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } {}
Distance : 10

27
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } MathRuntimeException
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } MathRuntimeException
Distance : 10

28
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } if
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } if
Distance : 10

29
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <
Distance : 10

30
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } this
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } this
Distance : 10

31
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } final
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } final
Distance : 10

32
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } =
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } =
Distance : 10

33
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } }
Distance : 10

34
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mode
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mode
Distance : 10

35
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ()
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ()
Distance : 10

36
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <blank>
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <blank>
Distance : 10

37
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ;
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ;
Distance : 10

38
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <s>
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <s>
Distance : 10

39
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } (
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } (
Distance : 10

40
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ;
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ;
Distance : 10

41
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } )
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } )
Distance : 10

42
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } .
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } .
Distance : 10

43
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ,
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ,
Distance : 10

44
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } +
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } +
Distance : 10

45
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } {
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } {
Distance : 10

46
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } test
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } test
Distance : 10

47
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } false
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } false
Distance : 10

48
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } true
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } true
Distance : 10

49
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } new
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } new
Distance : 10

50
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } pattern
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } pattern
Distance : 10

51
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } IllegalArgumentException
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } IllegalArgumentException
Distance : 10

52
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } expected
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } expected
Distance : 10

53
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } FastMath
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } FastMath
Distance : 10

54
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } reportCodeChange
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } reportCodeChange
Distance : 10

55
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } -
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } -
Distance : 10

56
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } values
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } values
Distance : 10

57
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } [
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } [
Distance : 10

58
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Preconditions
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Preconditions
Distance : 10

59
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } get
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } get
Distance : 10

60
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } char
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } char
Distance : 10

61
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } JSType
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } JSType
Distance : 10

62
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isEmpty
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isEmpty
Distance : 10

63
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } abs
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } abs
Distance : 10

64
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } instant
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } instant
Distance : 10

65
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } setAcceptedLanguage
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } setAcceptedLanguage
Distance : 10

66
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } static
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } static
Distance : 10

67
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } stream
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } stream
Distance : 10

68
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } out
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } out
Distance : 10

69
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ]
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ]
Distance : 10

70
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 9

72
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } return
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } return
Distance : 10

73
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Collection
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Collection
Distance : 10

74
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NUMBER_CONSTANT
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NUMBER_CONSTANT
Distance : 10

75
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } protected
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } protected
Distance : 10

76
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } d
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } d
Distance : 10

77
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } equals
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } equals
Distance : 10

78
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } for
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } for
Distance : 10

79
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Invocation
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Invocation
Distance : 10

80
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertTrue
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertTrue
Distance : 10

81
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } /
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } /
Distance : 10

82
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } externs
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } externs
Distance : 10

83
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } public
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } public
Distance : 10

84
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } notifyListeners
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } notifyListeners
Distance : 10

85
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } StrBuilder
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } StrBuilder
Distance : 10

86
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } TestUtilities
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } TestUtilities
Distance : 10

87
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } js
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } js
Distance : 10

88
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } else
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } else
Distance : 10

89
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getMessage
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getMessage
Distance : 10

90
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } matcher
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } matcher
Distance : 10

91
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } reportMatcher
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } reportMatcher
Distance : 10

92
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } PeriodType
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } PeriodType
Distance : 10

93
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } s
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } s
Distance : 10

94
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } setUp
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } setUp
Distance : 10

95
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } solver
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } solver
Distance : 10

96
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getField
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getField
Distance : 10

97
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } STRING_CONSTANT
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } STRING_CONSTANT
Distance : 10

98
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isNormalBlock
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isNormalBlock
Distance : 10

99
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 9

100
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } a
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } a
Distance : 10

101
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT_2015
Distance : 10

102
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } return;
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } return;
Distance : 10

103
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mockingProgress
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } mockingProgress
Distance : 10

104
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } stroke
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } stroke
Distance : 10

105
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } MutableTimePeriod
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } MutableTimePeriod
Distance : 10

106
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } StringBuilder
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } StringBuilder
Distance : 10

107
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } traverseEs6
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } traverseEs6
Distance : 10

108
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } UnivariateFunction
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } UnivariateFunction
Distance : 10

109
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } scope
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } scope
Distance : 10

110
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } size
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } size
Distance : 10

111
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getFirstChild
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getFirstChild
Distance : 10

112
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Double
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Double
Distance : 10

113
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <=
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <=
Distance : 10

114
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } clone
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } clone
Distance : 10

115
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } sqrt
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } sqrt
Distance : 10

116
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isBlock
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } isBlock
Distance : 10

117
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } append
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } append
Distance : 10

118
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } sb
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } sb
Distance : 10

119
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } y
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } y
Distance : 10

120
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } chrono
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } chrono
Distance : 10

121
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } throws
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } throws
Distance : 10

122
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } contains
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } contains
Distance : 10

123
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } obj
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } obj
Distance : 10

124
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } returnZero
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } returnZero
Distance : 10

125
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } verify
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } verify
Distance : 10

126
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Node
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Node
Distance : 10

127
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } str
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } str
Distance : 10

128
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } fireChangeEvent
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } fireChangeEvent
Distance : 10

129
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertThat
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } assertThat
Distance : 10

130
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } invocation
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } invocation
Distance : 10

131
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } parent
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } parent
Distance : 10

132
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ArrayList
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ArrayList
Distance : 10

133
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getInstance
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getInstance
Distance : 10

134
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } serialised
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } serialised
Distance : 10

135
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } testSame
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } testSame
Distance : 10

136
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } createIllegalArgumentException
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } createIllegalArgumentException
Distance : 10

137
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } x
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } x
Distance : 10

138
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LINE_JOINER
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LINE_JOINER
Distance : 10

139
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } :
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } :
Distance : 10

140
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } fail
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } fail
Distance : 10

141
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Args
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Args
Distance : 10

142
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } List
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } List
Distance : 10

143
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } valueOf
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } valueOf
Distance : 10

144
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } f
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } f
Distance : 10

145
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT6
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT6
Distance : 10

146
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } array
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } array
Distance : 10

148
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } class
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } class
Distance : 10

149
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ?
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ?
Distance : 10

150
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } try
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } try
Distance : 10

151
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } m
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } m
Distance : 10

152
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } join
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } join
Distance : 10

153
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } boolean
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } boolean
Distance : 10

154
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } type
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } type
Distance : 10

155
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } *
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } *
Distance : 10

156
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Fraction
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Fraction
Distance : 10

157
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkNotNull
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkNotNull
Distance : 10

158
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } length
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } length
Distance : 10

159
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Assert
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Assert
Distance : 10

160
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } TestUtils
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } TestUtils
Distance : 10

161
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NodeUtil
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NodeUtil
Distance : 10

162
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } root
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } root
Distance : 10

163
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Math
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Math
Distance : 10

164
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkArgument
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkArgument
Distance : 10

165
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } field
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } field
Distance : 10

166
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } t
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } t
Distance : 10

167
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } name
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } name
Distance : 10

168
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } data
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } data
Distance : 10

169
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NodeTraversal
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } NodeTraversal
Distance : 10

170
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } wanted
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } wanted
Distance : 10

171
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } result
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } result
Distance : 10

172
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } paint
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } paint
Distance : 10

173
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ex
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } ex
Distance : 10

174
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } long
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } long
Distance : 10

175
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } toString
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } toString
Distance : 10

176
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Test
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Test
Distance : 10

177
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } c
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } c
Distance : 10

178
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } lines
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } lines
Distance : 10

179
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } e
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } e
Distance : 10

180
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } n
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } n
Distance : 10

181
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } String
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } String
Distance : 10

182
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } add
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } add
Distance : 10

183
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkState
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } checkState
Distance : 10

184
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } compiler
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } compiler
Distance : 10

185
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } i
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } i
Distance : 10

186
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } super
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } super
Distance : 10

187
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } simpleMethod
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } simpleMethod
Distance : 10

188
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getArgumentMatcherStorage
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getArgumentMatcherStorage
Distance : 10

189
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } optimizer
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } optimizer
Distance : 10

190
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } alpha
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } alpha
Distance : 10

191
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } node
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } node
Distance : 10

192
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getParent
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } getParent
Distance : 10

193
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Exception
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Exception
Distance : 10

194
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <>
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } <>
Distance : 10

195
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } int
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } int
Distance : 10

196
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } v
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } v
Distance : 10

197
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Integer
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } Integer
Distance : 10

198
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } instance
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } instance
Distance : 10

199
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } b
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; } b
Distance : 10

========================================================================


========================================================================
Example Number: 92
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnSet () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Set . class ) ) . returnSet () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Set})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } invocations
Distance : 9

1
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } options
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } options
Distance : 9

2
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } p
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } p
Distance : 9

3
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } &&
Distance : 9

4
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } T
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } T
Distance : 9

5
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } !=
Distance : 9

6
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } value
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } value
Distance : 9

7
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ParamChecks
Distance : 9

8
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Object
Distance : 9

9
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mock
Distance : 9

10
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Override
Distance : 9

11
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertEquals
Distance : 9

12
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } !
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } !
Distance : 9

13
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } []
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } []
Distance : 9

14
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } nullNotPermitted
Distance : 9

15
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } catch
Distance : 9

16
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throw
Distance : 9

17
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } void
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } void
Distance : 9

18
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ==
Distance : 9

19
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } double
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } double
Distance : 9

20
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } index
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } index
Distance : 9

21
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } >
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } >
Distance : 9

22
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } source
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } source
Distance : 9

23
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } null
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } null
Distance : 9

24
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Class
Distance : 9

25
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } @
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } @
Distance : 9

26
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {}
Distance : 9

27
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } MathRuntimeException
Distance : 9

28
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } if
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } if
Distance : 9

29
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <
Distance : 9

30
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } this
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } this
Distance : 9

31
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } final
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } final
Distance : 9

32
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } =
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } =
Distance : 9

33
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } }
Distance : 9

34
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mode
Distance : 9

35
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ()
Distance : 9

36
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <blank>
Distance : 9

37
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return
Distance : 9

38
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <s>
Distance : 9

39
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } (
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } (
Distance : 9

40
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ;
Distance : 9

41
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } )
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } )
Distance : 9

42
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } .
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } .
Distance : 9

43
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ,
Distance : 9

44
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } +
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } +
Distance : 9

45
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {
Distance : 9

46
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } test
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } test
Distance : 9

47
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } false
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } false
Distance : 9

48
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } true
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } true
Distance : 9

49
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } new
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } new
Distance : 9

50
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } pattern
Distance : 9

51
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } IllegalArgumentException
Distance : 9

52
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } expected
Distance : 9

53
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } FastMath
Distance : 9

54
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } reportCodeChange
Distance : 9

55
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } -
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } -
Distance : 9

56
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } values
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } values
Distance : 9

57
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } [
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } [
Distance : 9

58
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Preconditions
Distance : 9

59
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } get
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } get
Distance : 9

60
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } char
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } char
Distance : 9

61
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } JSType
Distance : 9

62
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isEmpty
Distance : 9

63
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } abs
Distance : 9

64
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } instant
Distance : 9

65
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } setAcceptedLanguage
Distance : 9

66
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } static
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } static
Distance : 9

67
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } stream
Distance : 9

68
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } out
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } out
Distance : 9

69
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ]
Distance : 9

70
Tree	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 7

71
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return
Distance : 9

73
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Collection
Distance : 9

74
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NUMBER_CONSTANT
Distance : 9

75
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } protected
Distance : 9

76
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } d
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } d
Distance : 9

77
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } equals
Distance : 9

78
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } for
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } for
Distance : 9

79
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Invocation
Distance : 9

80
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertTrue
Distance : 9

81
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } /
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } /
Distance : 9

82
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } externs
Distance : 9

83
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } public
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } public
Distance : 9

84
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } notifyListeners
Distance : 9

85
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } StrBuilder
Distance : 9

86
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } TestUtilities
Distance : 9

87
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } js
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } js
Distance : 9

88
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } else
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } else
Distance : 9

89
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getMessage
Distance : 9

90
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } matcher
Distance : 9

91
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } reportMatcher
Distance : 9

92
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } PeriodType
Distance : 9

93
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } s
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } s
Distance : 9

94
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } setUp
Distance : 9

95
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } solver
Distance : 9

96
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getField
Distance : 9

97
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } STRING_CONSTANT
Distance : 9

98
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isNormalBlock
Distance : 9

99
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

100
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } a
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } a
Distance : 9

101
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LanguageMode.ECMASCRIPT_2015
Distance : 9

102
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } return;
Distance : 9

103
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mockingProgress
Distance : 9

104
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } stroke
Distance : 9

105
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } MutableTimePeriod
Distance : 9

106
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } StringBuilder
Distance : 9

107
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } traverseEs6
Distance : 9

108
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } UnivariateFunction
Distance : 9

109
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } scope
Distance : 9

110
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } size
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } size
Distance : 9

111
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getFirstChild
Distance : 9

112
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Double
Distance : 9

113
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <=
Distance : 9

114
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } clone
Distance : 9

115
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } sqrt
Distance : 9

116
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } isBlock
Distance : 9

117
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } append
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } append
Distance : 9

118
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } sb
Distance : 9

119
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } y
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } y
Distance : 9

120
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } chrono
Distance : 9

121
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throws
Distance : 9

122
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } contains
Distance : 9

123
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } obj
Distance : 9

124
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } returnZero
Distance : 9

125
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } verify
Distance : 9

126
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Node
Distance : 9

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } str
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } str
Distance : 9

128
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } fireChangeEvent
Distance : 9

129
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } assertThat
Distance : 9

130
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } invocation
Distance : 9

131
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } parent
Distance : 9

132
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ArrayList
Distance : 9

133
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getInstance
Distance : 9

134
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } serialised
Distance : 9

135
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } testSame
Distance : 9

136
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } createIllegalArgumentException
Distance : 9

137
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } x
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } x
Distance : 9

138
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LINE_JOINER
Distance : 9

139
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } :
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } :
Distance : 9

140
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } fail
Distance : 9

141
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Args
Distance : 9

142
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } List
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } List
Distance : 9

143
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } valueOf
Distance : 9

144
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } f
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } f
Distance : 9

145
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } LanguageMode.ECMASCRIPT6
Distance : 9

146
Tree	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 7

147
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } array
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } array
Distance : 9

148
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } class
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } class
Distance : 9

149
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ?
Distance : 9

150
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } try
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } try
Distance : 9

151
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } m
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } m
Distance : 9

152
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } join
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } join
Distance : 9

153
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } boolean
Distance : 9

154
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } type
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } type
Distance : 9

155
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } *
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } *
Distance : 9

156
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Fraction
Distance : 9

157
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkNotNull
Distance : 9

158
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } length
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } length
Distance : 9

159
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Assert
Distance : 9

160
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } TestUtils
Distance : 9

161
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeUtil
Distance : 9

162
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } root
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } root
Distance : 9

163
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Math
Distance : 9

164
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkArgument
Distance : 9

165
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } field
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } field
Distance : 9

166
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } t
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } t
Distance : 9

167
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } name
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } name
Distance : 9

168
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } data
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } data
Distance : 9

169
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeTraversal
Distance : 9

170
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } wanted
Distance : 9

171
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } result
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } result
Distance : 9

172
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } paint
Distance : 9

173
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ex
Distance : 9

174
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } long
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } long
Distance : 9

175
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } toString
Distance : 9

176
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Test
Distance : 9

177
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } c
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } c
Distance : 9

178
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } lines
Distance : 9

179
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } e
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } e
Distance : 9

180
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } n
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } n
Distance : 9

181
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } String
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } String
Distance : 9

182
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } add
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } add
Distance : 9

183
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkState
Distance : 9

184
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } compiler
Distance : 9

185
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } i
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } i
Distance : 9

186
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } super
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } super
Distance : 9

187
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } simpleMethod
Distance : 9

188
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getArgumentMatcherStorage
Distance : 9

189
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } optimizer
Distance : 9

190
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } alpha
Distance : 9

191
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } node
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } node
Distance : 9

192
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } getParent
Distance : 9

193
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Exception
Distance : 9

194
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } <>
Distance : 9

195
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } int
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } int
Distance : 9

196
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } v
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } v
Distance : 9

197
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } Integer
Distance : 9

198
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } instance
Distance : 9

199
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } b
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } b
Distance : 9

========================================================================


========================================================================
Example Number: 93
Parent Code is: 
{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=List})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Distance : 10

1
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } add
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } add
Distance : 10

2
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Distance : 10

3
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } data
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } data
Distance : 10

4
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 10

5
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } void
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } void
Distance : 10

6
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } catch
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } catch
Distance : 10

7
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } compiler
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } compiler
Distance : 10

8
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } throw
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } throw
Distance : 10

9
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } n
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } n
Distance : 10

10
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } +
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } +
Distance : 10

11
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } e
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } e
Distance : 10

12
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Distance : 10

13
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } expected
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } expected
Distance : 10

14
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } {}
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } {}
Distance : 10

15
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ]
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ]
Distance : 10

16
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mode
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mode
Distance : 10

17
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } &&
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } &&
Distance : 10

18
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } public
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } public
Distance : 10

19
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } final
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } final
Distance : 10

20
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } null
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } null
Distance : 10

21
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Distance : 10

22
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } wanted
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } wanted
Distance : 10

23
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } if
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } if
Distance : 10

24
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ex
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ex
Distance : 10

25
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Distance : 10

26
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } new
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } new
Distance : 10

27
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } =
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } =
Distance : 10

28
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Distance : 10

29
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ()
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ()
Distance : 10

30
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ,
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ,
Distance : 10

31
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } {
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } {
Distance : 10

32
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } }
Distance : 10

33
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <
Distance : 10

34
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } .
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } .
Distance : 10

35
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } (
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } (
Distance : 10

36
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ;
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ;
Distance : 10

37
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Distance : 10

38
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } .
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } .
Distance : 10

39
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <s>
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <s>
Distance : 10

40
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } )
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } )
Distance : 10

41
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } >
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } >
Distance : 10

42
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } js
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } js
Distance : 10

43
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 10

44
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } true
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } true
Distance : 10

45
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } this
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } this
Distance : 10

46
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } -
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } -
Distance : 10

47
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } root
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } root
Distance : 10

48
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Distance : 10

49
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Distance : 10

50
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } /
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } /
Distance : 10

51
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } value
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } value
Distance : 10

52
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } T
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } T
Distance : 10

53
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Distance : 10

54
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } !=
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } !=
Distance : 10

55
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Distance : 10

56
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } instant
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } instant
Distance : 10

57
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Distance : 10

58
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } stream
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } stream
Distance : 10

59
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } else
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } else
Distance : 10

60
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } matcher
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } matcher
Distance : 10

61
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } type
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } type
Distance : 10

62
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Distance : 10

63
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Distance : 10

64
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } abs
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } abs
Distance : 10

65
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . anyList () ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . anyList () ; }
Distance : 8

66
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

67
Tree	{ return ( List ) returnList ( Any.ANY ) . returnList () ; }
Code	{ return ( List ) returnList ( Any.ANY ) . returnList () ; }
Distance : 9

68
Tree	{ return ( List ) anyList ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( List ) anyList ( Any.ANY ) . reportMatcher () ; }
Distance : 8

69
Tree	{ return ( List ) anyList ( Any.ANY ) . returnList () ; }
Code	{ return ( List ) anyList ( Any.ANY ) . returnList () ; }
Distance : 8

70
Tree	{ return ( List ) returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( List ) returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return ( List ) anyList ( Any.ANY ) . anyList () ; }
Code	{ return ( List ) anyList ( Any.ANY ) . anyList () ; }
Distance : 8

72
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } super
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } super
Distance : 10

73
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } long
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } long
Distance : 10

74
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Distance : 10

75
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } double
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } double
Distance : 10

76
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Assert
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Assert
Distance : 10

77
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Distance : 10

78
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Exception
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Exception
Distance : 10

79
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 10

80
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } index
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } index
Distance : 10

81
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } node
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } node
Distance : 10

82
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } setUp
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } setUp
Distance : 10

83
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getParent
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getParent
Distance : 10

84
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } protected
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } protected
Distance : 10

85
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } invocations
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } invocations
Distance : 10

86
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } values
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } values
Distance : 10

87
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } out
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } out
Distance : 10

88
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } obj
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } obj
Distance : 10

89
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } a
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } a
Distance : 10

90
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } instance
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } instance
Distance : 10

91
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } alpha
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } alpha
Distance : 10

92
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } externs
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } externs
Distance : 10

93
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Distance : 10

94
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } [
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } [
Distance : 10

95
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } i
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } i
Distance : 10

96
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkState
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkState
Distance : 10

97
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } int
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } int
Distance : 10

98
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Distance : 10

99
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

100
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Distance : 10

101
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } return;
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } return;
Distance : 10

102
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } get
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } get
Distance : 10

103
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Distance : 10

104
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Distance : 10

105
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } clone
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } clone
Distance : 10

106
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Double
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Double
Distance : 10

107
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Distance : 10

108
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <=
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <=
Distance : 10

109
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Distance : 10

110
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } contains
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } contains
Distance : 10

111
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } b
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } b
Distance : 10

112
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } String
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } String
Distance : 10

113
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Distance : 10

114
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } str
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } str
Distance : 10

115
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Distance : 10

116
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 10

117
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } size
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } size
Distance : 10

118
Tree	{ return ( List ) returnList ( Any.ANY ) . anyList () ; }
Code	{ return ( List ) returnList ( Any.ANY ) . anyList () ; }
Distance : 8

119
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Object
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Object
Distance : 10

120
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } JSType
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } JSType
Distance : 10

121
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } throws
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } throws
Distance : 10

122
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } static
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } static
Distance : 10

123
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } char
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } char
Distance : 10

124
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } source
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } source
Distance : 10

125
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } v
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } v
Distance : 10

126
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } join
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } join
Distance : 10

127
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } result
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } result
Distance : 10

128
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } boolean
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } boolean
Distance : 10

129
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Distance : 10

130
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } *
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } *
Distance : 10

131
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } serialised
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } serialised
Distance : 10

132
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Distance : 10

133
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <>
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } <>
Distance : 10

134
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } f
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } f
Distance : 10

135
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 10

136
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } class
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } class
Distance : 10

137
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } testSame
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } testSame
Distance : 10

138
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mock
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } mock
Distance : 10

139
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } parent
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } parent
Distance : 10

140
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Distance : 10

141
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } stroke
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } stroke
Distance : 10

142
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Distance : 10

143
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Distance : 10

144
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Distance : 10

145
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Distance : 10

146
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Distance : 10

147
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Args
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Args
Distance : 10

148
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 10

149
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } :
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } :
Distance : 10

150
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } m
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } m
Distance : 10

151
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } paint
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } paint
Distance : 10

152
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } length
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } length
Distance : 10

153
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Node
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Node
Distance : 10

154
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } lines
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } lines
Distance : 10

155
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } verify
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } verify
Distance : 10

156
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Distance : 10

157
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Integer
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Integer
Distance : 10

158
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Distance : 10

159
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } s
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } s
Distance : 10

160
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } scope
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } scope
Distance : 10

161
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Distance : 10

162
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } invocation
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } invocation
Distance : 10

163
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Distance : 10

164
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } t
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } t
Distance : 10

165
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } name
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } name
Distance : 10

166
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } array
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } array
Distance : 10

167
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } List
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } List
Distance : 10

168
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } try
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } try
Distance : 10

169
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Distance : 10

170
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 10

171
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } append
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } append
Distance : 10

172
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ?
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ?
Distance : 10

173
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } !
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } !
Distance : 10

174
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Distance : 10

175
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } fail
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } fail
Distance : 10

176
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } []
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } []
Distance : 10

177
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } @
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } @
Distance : 10

178
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Distance : 10

179
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } test
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } test
Distance : 10

180
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ==
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } ==
Distance : 10

181
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } equals
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } equals
Distance : 10

182
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Distance : 10

183
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Distance : 10

184
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } for
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } for
Distance : 10

185
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Distance : 10

186
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } d
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } d
Distance : 10

187
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } sb
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } sb
Distance : 10

188
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Override
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Override
Distance : 10

189
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } field
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } field
Distance : 10

190
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } false
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } false
Distance : 10

191
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } x
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } x
Distance : 10

192
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } c
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } c
Distance : 10

193
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } toString
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } toString
Distance : 10

194
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } p
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } p
Distance : 10

195
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Test
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Test
Distance : 10

196
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } options
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } options
Distance : 10

197
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Math
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Math
Distance : 10

198
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Class
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } Class
Distance : 10

199
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } chrono
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; } chrono
Distance : 10

========================================================================


========================================================================
Example Number: 94
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( List . class ) ) . returnList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=List})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ]
Distance : 8

70
Tree	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnList ( Any.ANY ) . returnList () ; }
Code	{ return returnList ( Any.ANY ) . returnList () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 95
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnString () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( String . class ) ) . returnString () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnString}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=String})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnString}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } return
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ]
Distance : 8

70
Tree	{ return returnString ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnString ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnString ( Any.ANY ) . returnString () ; }
Code	{ return returnString ( Any.ANY ) . returnString () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 96
Parent Code is: 
{ return ( T ) anyObject () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (802{val=anyObject}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( T ) reportMatcher () ; } protected
Code	{ return ( T ) reportMatcher () ; } protected
Distance : 6

1
Tree	{ return ( T ) reportMatcher () ; } Class
Code	{ return ( T ) reportMatcher () ; } Class
Distance : 6

2
Tree	{ return ( T ) reportMatcher () ; } p
Code	{ return ( T ) reportMatcher () ; } p
Distance : 6

3
Tree	{ return ( T ) reportMatcher () ; } class
Code	{ return ( T ) reportMatcher () ; } class
Distance : 6

4
Tree	{ return ( T ) reportMatcher () ; } Preconditions
Code	{ return ( T ) reportMatcher () ; } Preconditions
Distance : 6

5
Tree	{ return ( T ) reportMatcher () ; } &&
Code	{ return ( T ) reportMatcher () ; } &&
Distance : 6

6
Tree	{ return ( T ) reportMatcher () ; } value
Code	{ return ( T ) reportMatcher () ; } value
Distance : 6

7
Tree	{ return ( T ) reportMatcher () ; } T
Code	{ return ( T ) reportMatcher () ; } T
Distance : 6

8
Tree	{ return ( T ) reportMatcher () ; } [
Code	{ return ( T ) reportMatcher () ; } [
Distance : 6

9
Tree	{ return ( T ) reportMatcher () ; } ParamChecks
Code	{ return ( T ) reportMatcher () ; } ParamChecks
Distance : 6

10
Tree	{ return ( T ) reportMatcher () ; } Override
Code	{ return ( T ) reportMatcher () ; } Override
Distance : 6

11
Tree	{ return ( T ) reportMatcher () ; } Object
Code	{ return ( T ) reportMatcher () ; } Object
Distance : 6

12
Tree	{ return ( T ) reportMatcher () ; } @
Code	{ return ( T ) reportMatcher () ; } @
Distance : 6

13
Tree	{ return ( T ) reportMatcher () ; } assertEquals
Code	{ return ( T ) reportMatcher () ; } assertEquals
Distance : 6

14
Tree	{ return ( T ) reportMatcher () ; } nullNotPermitted
Code	{ return ( T ) reportMatcher () ; } nullNotPermitted
Distance : 6

15
Tree	{ return ( T ) reportMatcher () ; } !
Code	{ return ( T ) reportMatcher () ; } !
Distance : 6

16
Tree	{ return ( T ) reportMatcher () ; } void
Code	{ return ( T ) reportMatcher () ; } void
Distance : 6

17
Tree	{ return ( T ) reportMatcher () ; } catch
Code	{ return ( T ) reportMatcher () ; } catch
Distance : 6

18
Tree	{ return ( T ) reportMatcher () ; } ==
Code	{ return ( T ) reportMatcher () ; } ==
Distance : 6

19
Tree	{ return ( T ) reportMatcher () ; } []
Code	{ return ( T ) reportMatcher () ; } []
Distance : 6

20
Tree	{ return ( T ) reportMatcher () ; } n
Code	{ return ( T ) reportMatcher () ; } n
Distance : 6

21
Tree	{ return ( T ) reportMatcher () ; } invocations
Code	{ return ( T ) reportMatcher () ; } invocations
Distance : 6

22
Tree	{ return ( T ) reportMatcher () ; } {}
Code	{ return ( T ) reportMatcher () ; } {}
Distance : 6

23
Tree	{ return ( T ) reportMatcher () ; } +
Code	{ return ( T ) reportMatcher () ; } +
Distance : 6

24
Tree	{ return ( T ) reportMatcher () ; } Test
Code	{ return ( T ) reportMatcher () ; } Test
Distance : 6

25
Tree	{ return ( T ) reportMatcher () ; } double
Code	{ return ( T ) reportMatcher () ; } double
Distance : 6

26
Tree	{ return ( T ) reportMatcher () ; } mode
Code	{ return ( T ) reportMatcher () ; } mode
Distance : 6

27
Tree	{ return ( T ) reportMatcher () ; } MathRuntimeException
Code	{ return ( T ) reportMatcher () ; } MathRuntimeException
Distance : 6

28
Tree	{ return ( T ) reportMatcher () ; } mock
Code	{ return ( T ) reportMatcher () ; } mock
Distance : 6

29
Tree	{ return ( T ) reportMatcher () ; } >
Code	{ return ( T ) reportMatcher () ; } >
Distance : 6

30
Tree	{ return ( T ) reportMatcher () ; } if
Code	{ return ( T ) reportMatcher () ; } if
Distance : 6

31
Tree	{ return ( T ) reportMatcher () ; } final
Code	{ return ( T ) reportMatcher () ; } final
Distance : 6

32
Tree	{ return ( T ) reportMatcher () ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher () ; } STRING_CONSTANT
Distance : 6

33
Tree	{ return ( T ) reportMatcher () ; } .
Code	{ return ( T ) reportMatcher () ; } .
Distance : 6

34
Tree	{ return ( T ) reportMatcher () ; } false
Code	{ return ( T ) reportMatcher () ; } false
Distance : 6

35
Tree	{ return ( T ) reportMatcher () ; } =
Code	{ return ( T ) reportMatcher () ; } =
Distance : 6

36
Tree	{ return ( T ) reportMatcher () ; } }
Code	{ return ( T ) reportMatcher () ; } }
Distance : 6

37
Tree	{ return ( T ) reportMatcher () ; } <s>
Code	{ return ( T ) reportMatcher () ; } <s>
Distance : 6

38
Tree	{ return ( T ) reportMatcher () ; } <blank>
Code	{ return ( T ) reportMatcher () ; } <blank>
Distance : 6

39
Tree	{ return ( T ) reportMatcher () ; } (
Code	{ return ( T ) reportMatcher () ; } (
Distance : 6

40
Tree	{ return ( T ) reportMatcher () ; } return
Code	{ return ( T ) reportMatcher () ; } return
Distance : 6

41
Tree	{ return ( T ) reportMatcher () ; } )
Code	{ return ( T ) reportMatcher () ; } )
Distance : 6

42
Tree	{ return ( T ) reportMatcher () ; } ;
Code	{ return ( T ) reportMatcher () ; } ;
Distance : 6

43
Tree	{ return ( T ) reportMatcher () ; } ,
Code	{ return ( T ) reportMatcher () ; } ,
Distance : 6

44
Tree	{ return ( T ) reportMatcher () ; } ()
Code	{ return ( T ) reportMatcher () ; } ()
Distance : 6

45
Tree	{ return ( T ) reportMatcher () ; } {
Code	{ return ( T ) reportMatcher () ; } {
Distance : 6

46
Tree	{ return ( T ) reportMatcher () ; } test
Code	{ return ( T ) reportMatcher () ; } test
Distance : 6

47
Tree	{ return ( T ) reportMatcher () ; } int
Code	{ return ( T ) reportMatcher () ; } int
Distance : 6

48
Tree	{ return ( T ) reportMatcher () ; } i
Code	{ return ( T ) reportMatcher () ; } i
Distance : 6

49
Tree	{ return ( T ) reportMatcher () ; } <
Code	{ return ( T ) reportMatcher () ; } <
Distance : 6

50
Tree	{ return ( T ) reportMatcher () ; } pattern
Code	{ return ( T ) reportMatcher () ; } pattern
Distance : 6

51
Tree	{ return ( T ) reportMatcher () ; } return
Code	{ return ( T ) reportMatcher () ; } return
Distance : 6

52
Tree	{ return ( T ) reportMatcher () ; } this
Code	{ return ( T ) reportMatcher () ; } this
Distance : 6

53
Tree	{ return ( T ) reportMatcher () ; } t
Code	{ return ( T ) reportMatcher () ; } t
Distance : 6

54
Tree	{ return ( T ) reportMatcher () ; } IllegalArgumentException
Code	{ return ( T ) reportMatcher () ; } IllegalArgumentException
Distance : 6

55
Tree	{ return ( T ) reportMatcher () ; } reportCodeChange
Code	{ return ( T ) reportMatcher () ; } reportCodeChange
Distance : 6

56
Tree	{ return ( T ) reportMatcher () ; } getField
Code	{ return ( T ) reportMatcher () ; } getField
Distance : 6

57
Tree	{ return ( T ) reportMatcher () ; } Collection
Code	{ return ( T ) reportMatcher () ; } Collection
Distance : 6

58
Tree	{ return ( T ) reportMatcher () ; } values
Code	{ return ( T ) reportMatcher () ; } values
Distance : 6

59
Tree	{ return ( T ) reportMatcher () ; } -
Code	{ return ( T ) reportMatcher () ; } -
Distance : 6

60
Tree	{ return ( T ) reportMatcher () ; } true
Code	{ return ( T ) reportMatcher () ; } true
Distance : 6

61
Tree	{ return ( T ) reportMatcher () ; } return;
Code	{ return ( T ) reportMatcher () ; } return;
Distance : 6

62
Tree	{ return ( T ) reportMatcher () ; } get
Code	{ return ( T ) reportMatcher () ; } get
Distance : 6

63
Tree	{ return ( T ) reportMatcher () ; } isEmpty
Code	{ return ( T ) reportMatcher () ; } isEmpty
Distance : 6

64
Tree	{ return ( T ) reportMatcher () ; } char
Code	{ return ( T ) reportMatcher () ; } char
Distance : 6

65
Tree	{ return ( T ) reportMatcher () ; } setAcceptedLanguage
Code	{ return ( T ) reportMatcher () ; } setAcceptedLanguage
Distance : 6

66
Tree	{ return ( T ) reportMatcher () ; } abs
Code	{ return ( T ) reportMatcher () ; } abs
Distance : 6

67
Tree	{ return ( T ) reportMatcher () ; } static
Code	{ return ( T ) reportMatcher () ; } static
Distance : 6

68
Tree	{ return ( T ) reportMatcher () ; } JSType
Code	{ return ( T ) reportMatcher () ; } JSType
Distance : 6

69
Tree	{ return ( T ) reportMatcher () ; } getMessage
Code	{ return ( T ) reportMatcher () ; } getMessage
Distance : 6

70
Tree	{ return ( T ) reportMatcher () ; } ]
Code	{ return ( T ) reportMatcher () ; } ]
Distance : 6

71
Tree	{ return ( T ) returnNull () ; }
Code	{ return ( T ) returnNull () ; }
Distance : 5

72
Tree	{ return ( T ) reportMatcher () ; } new
Code	{ return ( T ) reportMatcher () ; } new
Distance : 6

73
Tree	{ return ( T ) reportMatcher () ; } solver
Code	{ return ( T ) reportMatcher () ; } solver
Distance : 6

74
Tree	{ return ( T ) reportMatcher () ; } NUMBER_CONSTANT
Code	{ return ( T ) reportMatcher () ; } NUMBER_CONSTANT
Distance : 6

75
Tree	{ return ( T ) reportMatcher () ; } matcher
Code	{ return ( T ) reportMatcher () ; } matcher
Distance : 6

76
Tree	{ return ( T ) reportMatcher () ; } dataset
Code	{ return ( T ) reportMatcher () ; } dataset
Distance : 6

77
Tree	{ return ( T ) reportMatcher () ; } TestUtilities
Code	{ return ( T ) reportMatcher () ; } TestUtilities
Distance : 6

78
Tree	{ return ( T ) reportMatcher () ; } d
Code	{ return ( T ) reportMatcher () ; } d
Distance : 6

79
Tree	{ return ( T ) reportMatcher () ; } Invocation
Code	{ return ( T ) reportMatcher () ; } Invocation
Distance : 6

80
Tree	{ return ( T ) reportMatcher () ; } equals
Code	{ return ( T ) reportMatcher () ; } equals
Distance : 6

81
Tree	{ return ( T ) reportMatcher () ; } externs
Code	{ return ( T ) reportMatcher () ; } externs
Distance : 6

82
Tree	{ return ( T ) reportMatcher () ; } assertTrue
Code	{ return ( T ) reportMatcher () ; } assertTrue
Distance : 6

83
Tree	{ return ( T ) reportMatcher () ; } notifyListeners
Code	{ return ( T ) reportMatcher () ; } notifyListeners
Distance : 6

84
Tree	{ return ( T ) reportMatcher () ; } for
Code	{ return ( T ) reportMatcher () ; } for
Distance : 6

85
Tree	{ return ( T ) reportMatcher () ; } getParent
Code	{ return ( T ) reportMatcher () ; } getParent
Distance : 6

86
Tree	{ return ( T ) reportMatcher () ; } setUp
Code	{ return ( T ) reportMatcher () ; } setUp
Distance : 6

87
Tree	{ return ( T ) reportMatcher () ; } js
Code	{ return ( T ) reportMatcher () ; } js
Distance : 6

88
Tree	{ return ( T ) reportMatcher () ; } StrBuilder
Code	{ return ( T ) reportMatcher () ; } StrBuilder
Distance : 6

89
Tree	{ return ( T ) reportMatcher () ; } index
Code	{ return ( T ) reportMatcher () ; } index
Distance : 6

90
Tree	{ return ( T ) reportMatcher () ; } else
Code	{ return ( T ) reportMatcher () ; } else
Distance : 6

91
Tree	{ return ( T ) reportMatcher () ; } reportMatcher
Code	{ return ( T ) reportMatcher () ; } reportMatcher
Distance : 6

92
Tree	{ return ( T ) reportMatcher () ; } instant
Code	{ return ( T ) reportMatcher () ; } instant
Distance : 6

93
Tree	{ return ( T ) reportMatcher () ; } <=
Code	{ return ( T ) reportMatcher () ; } <=
Distance : 6

94
Tree	{ return ( T ) reportMatcher () ; } PeriodType
Code	{ return ( T ) reportMatcher () ; } PeriodType
Distance : 6

95
Tree	{ return ( T ) reportMatcher () ; } public
Code	{ return ( T ) reportMatcher () ; } public
Distance : 6

96
Tree	{ return ( T ) reportMatcher () ; } out
Code	{ return ( T ) reportMatcher () ; } out
Distance : 6

97
Tree	{ return ( T ) reportMatcher () ; } stream
Code	{ return ( T ) reportMatcher () ; } stream
Distance : 6

98
Tree	{ return ( T ) reportMatcher () ; } b
Code	{ return ( T ) reportMatcher () ; } b
Distance : 6

99
Tree	{ return ( T ) reportMatcher () ; }
Code	{ return ( T ) reportMatcher () ; }
Distance : 5

100
Tree	{ return ( T ) reportMatcher () ; } obj
Code	{ return ( T ) reportMatcher () ; } obj
Distance : 6

101
Tree	{ return ( T ) reportMatcher () ; } MutableTimePeriod
Code	{ return ( T ) reportMatcher () ; } MutableTimePeriod
Distance : 6

102
Tree	{ return ( T ) reportMatcher () ; } size
Code	{ return ( T ) reportMatcher () ; } size
Distance : 6

103
Tree	{ return ( T ) reportMatcher () ; } mockingProgress
Code	{ return ( T ) reportMatcher () ; } mockingProgress
Distance : 6

104
Tree	{ return ( T ) reportMatcher () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( T ) reportMatcher () ; } LanguageMode.ECMASCRIPT_2015
Distance : 6

105
Tree	{ return ( T ) reportMatcher () ; } StringBuilder
Code	{ return ( T ) reportMatcher () ; } StringBuilder
Distance : 6

106
Tree	{ return ( T ) reportMatcher () ; } stroke
Code	{ return ( T ) reportMatcher () ; } stroke
Distance : 6

107
Tree	{ return ( T ) reportMatcher () ; } traverseEs6
Code	{ return ( T ) reportMatcher () ; } traverseEs6
Distance : 6

108
Tree	{ return ( T ) reportMatcher () ; } chrono
Code	{ return ( T ) reportMatcher () ; } chrono
Distance : 6

109
Tree	{ return ( T ) reportMatcher () ; } sb
Code	{ return ( T ) reportMatcher () ; } sb
Distance : 6

110
Tree	{ return ( T ) reportMatcher () ; } isNormalBlock
Code	{ return ( T ) reportMatcher () ; } isNormalBlock
Distance : 6

111
Tree	{ return ( T ) reportMatcher () ; } UnivariateFunction
Code	{ return ( T ) reportMatcher () ; } UnivariateFunction
Distance : 6

112
Tree	{ return ( T ) reportMatcher () ; } scope
Code	{ return ( T ) reportMatcher () ; } scope
Distance : 6

113
Tree	{ return ( T ) reportMatcher () ; } clone
Code	{ return ( T ) reportMatcher () ; } clone
Distance : 6

114
Tree	{ return ( T ) reportMatcher () ; } Double
Code	{ return ( T ) reportMatcher () ; } Double
Distance : 6

115
Tree	{ return ( T ) reportMatcher () ; } sqrt
Code	{ return ( T ) reportMatcher () ; } sqrt
Distance : 6

116
Tree	{ return ( T ) reportMatcher () ; } getFirstChild
Code	{ return ( T ) reportMatcher () ; } getFirstChild
Distance : 6

117
Tree	{ return ( T ) reportMatcher () ; } getArgumentMatcherStorage
Code	{ return ( T ) reportMatcher () ; } getArgumentMatcherStorage
Distance : 6

118
Tree	{ return ( T ) reportMatcher () ; } isBlock
Code	{ return ( T ) reportMatcher () ; } isBlock
Distance : 6

119
Tree	{ return ( T ) reportMatcher () ; } returnZero
Code	{ return ( T ) reportMatcher () ; } returnZero
Distance : 6

120
Tree	{ return ( T ) reportMatcher () ; } optimizer
Code	{ return ( T ) reportMatcher () ; } optimizer
Distance : 6

121
Tree	{ return ( T ) reportMatcher () ; } throws
Code	{ return ( T ) reportMatcher () ; } throws
Distance : 6

122
Tree	{ return ( T ) reportMatcher () ; } contains
Code	{ return ( T ) reportMatcher () ; } contains
Distance : 6

123
Tree	{ return ( T ) reportMatcher () ; } append
Code	{ return ( T ) reportMatcher () ; } append
Distance : 6

124
Tree	{ return ( T ) reportMatcher () ; } y
Code	{ return ( T ) reportMatcher () ; } y
Distance : 6

125
Tree	{ return ( T ) reportMatcher () ; } Integer
Code	{ return ( T ) reportMatcher () ; } Integer
Distance : 6

126
Tree	{ return ( T ) reportMatcher () ; } Node
Code	{ return ( T ) reportMatcher () ; } Node
Distance : 6

127
Tree	{ return ( T ) reportMatcher () ; } expected
Code	{ return ( T ) reportMatcher () ; } expected
Distance : 6

128
Tree	{ return ( T ) reportMatcher () ; } assertThat
Code	{ return ( T ) reportMatcher () ; } assertThat
Distance : 6

129
Tree	{ return ( T ) reportMatcher () ; } str
Code	{ return ( T ) reportMatcher () ; } str
Distance : 6

130
Tree	{ return ( T ) reportMatcher () ; } invocation
Code	{ return ( T ) reportMatcher () ; } invocation
Distance : 6

131
Tree	{ return ( T ) reportMatcher () ; } FastMath
Code	{ return ( T ) reportMatcher () ; } FastMath
Distance : 6

132
Tree	{ return ( T ) reportMatcher () ; } createIllegalArgumentException
Code	{ return ( T ) reportMatcher () ; } createIllegalArgumentException
Distance : 6

133
Tree	{ return ( T ) reportMatcher () ; } parent
Code	{ return ( T ) reportMatcher () ; } parent
Distance : 6

134
Tree	{ return ( T ) reportMatcher () ; } serialised
Code	{ return ( T ) reportMatcher () ; } serialised
Distance : 6

135
Tree	{ return ( T ) reportMatcher () ; } ArrayList
Code	{ return ( T ) reportMatcher () ; } ArrayList
Distance : 6

136
Tree	{ return ( T ) reportMatcher () ; } x
Code	{ return ( T ) reportMatcher () ; } x
Distance : 6

137
Tree	{ return ( T ) reportMatcher () ; } testSame
Code	{ return ( T ) reportMatcher () ; } testSame
Distance : 6

138
Tree	{ return ( T ) reportMatcher () ; } LINE_JOINER
Code	{ return ( T ) reportMatcher () ; } LINE_JOINER
Distance : 6

139
Tree	{ return ( T ) reportMatcher () ; } fireChangeEvent
Code	{ return ( T ) reportMatcher () ; } fireChangeEvent
Distance : 6

140
Tree	{ return ( T ) reportMatcher () ; } try
Code	{ return ( T ) reportMatcher () ; } try
Distance : 6

141
Tree	{ return ( T ) reportMatcher () ; } :
Code	{ return ( T ) reportMatcher () ; } :
Distance : 6

142
Tree	{ return ( T ) reportMatcher () ; } List
Code	{ return ( T ) reportMatcher () ; } List
Distance : 6

143
Tree	{ return ( T ) reportMatcher () ; } fail
Code	{ return ( T ) reportMatcher () ; } fail
Distance : 6

144
Tree	{ return ( T ) reportMatcher () ; } instance
Code	{ return ( T ) reportMatcher () ; } instance
Distance : 6

145
Tree	{ return ( T ) reportMatcher () ; } <>
Code	{ return ( T ) reportMatcher () ; } <>
Distance : 6

146
Tree	{ return ( T ) reportMatcher () ; } a
Code	{ return ( T ) reportMatcher () ; } a
Distance : 6

147
Tree	{ return ( T ) anyObject () ; }
Code	{ return ( T ) anyObject () ; }
Distance : 6

148
Tree	{ return ( T ) reportMatcher () ; } f
Code	{ return ( T ) reportMatcher () ; } f
Distance : 6

149
Tree	{ return ( T ) reportMatcher () ; } Exception
Code	{ return ( T ) reportMatcher () ; } Exception
Distance : 6

150
Tree	{ return ( T ) reportMatcher () ; } result
Code	{ return ( T ) reportMatcher () ; } result
Distance : 6

151
Tree	{ return ( T ) reportMatcher () ; } m
Code	{ return ( T ) reportMatcher () ; } m
Distance : 6

152
Tree	{ return ( T ) reportMatcher () ; } paint
Code	{ return ( T ) reportMatcher () ; } paint
Distance : 6

153
Tree	{ return ( T ) reportMatcher () ; } type
Code	{ return ( T ) reportMatcher () ; } type
Distance : 6

154
Tree	{ return ( T ) reportMatcher () ; } join
Code	{ return ( T ) reportMatcher () ; } join
Distance : 6

155
Tree	{ return ( T ) reportMatcher () ; } *
Code	{ return ( T ) reportMatcher () ; } *
Distance : 6

156
Tree	{ return ( T ) reportMatcher () ; } getInstance
Code	{ return ( T ) reportMatcher () ; } getInstance
Distance : 6

157
Tree	{ return ( T ) reportMatcher () ; } Assert
Code	{ return ( T ) reportMatcher () ; } Assert
Distance : 6

158
Tree	{ return ( T ) reportMatcher () ; } Fraction
Code	{ return ( T ) reportMatcher () ; } Fraction
Distance : 6

159
Tree	{ return ( T ) reportMatcher () ; } TestUtils
Code	{ return ( T ) reportMatcher () ; } TestUtils
Distance : 6

160
Tree	{ return ( T ) reportMatcher () ; } source
Code	{ return ( T ) reportMatcher () ; } source
Distance : 6

161
Tree	{ return ( T ) reportMatcher () ; } root
Code	{ return ( T ) reportMatcher () ; } root
Distance : 6

162
Tree	{ return ( T ) reportMatcher () ; } wanted
Code	{ return ( T ) reportMatcher () ; } wanted
Distance : 6

163
Tree	{ return ( T ) reportMatcher () ; } Math
Code	{ return ( T ) reportMatcher () ; } Math
Distance : 6

164
Tree	{ return ( T ) reportMatcher () ; } options
Code	{ return ( T ) reportMatcher () ; } options
Distance : 6

165
Tree	{ return ( T ) reportMatcher () ; } add
Code	{ return ( T ) reportMatcher () ; } add
Distance : 6

166
Tree	{ return ( T ) reportMatcher () ; } checkArgument
Code	{ return ( T ) reportMatcher () ; } checkArgument
Distance : 6

167
Tree	{ return ( T ) reportMatcher () ; } name
Code	{ return ( T ) reportMatcher () ; } name
Distance : 6

168
Tree	{ return ( T ) reportMatcher () ; } field
Code	{ return ( T ) reportMatcher () ; } field
Distance : 6

169
Tree	{ return ( T ) reportMatcher () ; } NodeTraversal
Code	{ return ( T ) reportMatcher () ; } NodeTraversal
Distance : 6

170
Tree	{ return ( T ) reportMatcher () ; } ex
Code	{ return ( T ) reportMatcher () ; } ex
Distance : 6

171
Tree	{ return ( T ) reportMatcher () ; } Args
Code	{ return ( T ) reportMatcher () ; } Args
Distance : 6

172
Tree	{ return ( T ) reportMatcher () ; } data
Code	{ return ( T ) reportMatcher () ; } data
Distance : 6

173
Tree	{ return ( T ) reportMatcher () ; } boolean
Code	{ return ( T ) reportMatcher () ; } boolean
Distance : 6

174
Tree	{ return ( T ) reportMatcher () ; } array
Code	{ return ( T ) reportMatcher () ; } array
Distance : 6

175
Tree	{ return ( T ) reportMatcher () ; } long
Code	{ return ( T ) reportMatcher () ; } long
Distance : 6

176
Tree	{ return ( T ) reportMatcher () ; } v
Code	{ return ( T ) reportMatcher () ; } v
Distance : 6

177
Tree	{ return ( T ) reportMatcher () ; } c
Code	{ return ( T ) reportMatcher () ; } c
Distance : 6

178
Tree	{ return ( T ) reportMatcher () ; } toString
Code	{ return ( T ) reportMatcher () ; } toString
Distance : 6

179
Tree	{ return ( T ) reportMatcher () ; } lines
Code	{ return ( T ) reportMatcher () ; } lines
Distance : 6

180
Tree	{ return ( T ) reportMatcher () ; } verify
Code	{ return ( T ) reportMatcher () ; } verify
Distance : 6

181
Tree	{ return ( T ) reportMatcher () ; } String
Code	{ return ( T ) reportMatcher () ; } String
Distance : 6

182
Tree	{ return ( T ) reportMatcher () ; } e
Code	{ return ( T ) reportMatcher () ; } e
Distance : 6

183
Tree	{ return ( T ) reportMatcher () ; } compiler
Code	{ return ( T ) reportMatcher () ; } compiler
Distance : 6

184
Tree	{ return ( T ) reportMatcher () ; } NodeUtil
Code	{ return ( T ) reportMatcher () ; } NodeUtil
Distance : 6

185
Tree	{ return ( T ) reportMatcher () ; } null
Code	{ return ( T ) reportMatcher () ; } null
Distance : 6

186
Tree	{ return ( T ) reportMatcher () ; } checkState
Code	{ return ( T ) reportMatcher () ; } checkState
Distance : 6

187
Tree	{ return ( T ) reportMatcher () ; } super
Code	{ return ( T ) reportMatcher () ; } super
Distance : 6

188
Tree	{ return ( T ) reportMatcher () ; } !=
Code	{ return ( T ) reportMatcher () ; } !=
Distance : 6

189
Tree	{ return ( T ) reportMatcher () ; } /
Code	{ return ( T ) reportMatcher () ; } /
Distance : 6

190
Tree	{ return ( T ) reportMatcher () ; } simpleMethod
Code	{ return ( T ) reportMatcher () ; } simpleMethod
Distance : 6

191
Tree	{ return ( T ) reportMatcher () ; } alpha
Code	{ return ( T ) reportMatcher () ; } alpha
Distance : 6

192
Tree	{ return ( T ) reportMatcher () ; } checkNotNull
Code	{ return ( T ) reportMatcher () ; } checkNotNull
Distance : 6

193
Tree	{ return ( T ) reportMatcher () ; } valueOf
Code	{ return ( T ) reportMatcher () ; } valueOf
Distance : 6

194
Tree	{ return ( T ) reportMatcher () ; } node
Code	{ return ( T ) reportMatcher () ; } node
Distance : 6

195
Tree	{ return ( T ) reportMatcher () ; } ?
Code	{ return ( T ) reportMatcher () ; } ?
Distance : 6

196
Tree	{ return ( T ) reportMatcher () ; } throw
Code	{ return ( T ) reportMatcher () ; } throw
Distance : 6

197
Tree	{ return ( T ) reportMatcher () ; } length
Code	{ return ( T ) reportMatcher () ; } length
Distance : 6

198
Tree	{ return ( T ) reportMatcher () ; } LanguageMode.ECMASCRIPT6
Code	{ return ( T ) reportMatcher () ; } LanguageMode.ECMASCRIPT6
Distance : 6

199
Tree	{ return ( T ) reportMatcher () ; } s
Code	{ return ( T ) reportMatcher () ; } s
Distance : 6

========================================================================


========================================================================
Example Number: 97
Parent Code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( new InstanceOf ( clazz ) ) . returnFor ( clazz ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnFor}) (214{val=(}) (800{val=clazz}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (800{val=clazz}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnFor}) (214{val=(}) (800{val=clazz}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } notifyListeners
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } notifyListeners
Distance : 6

1
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } FastMath
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } FastMath
Distance : 6

2
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } expected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } expected
Distance : 6

3
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } IllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } IllegalArgumentException
Distance : 6

4
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } super
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } super
Distance : 6

5
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } LINE_JOINER
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } LINE_JOINER
Distance : 6

6
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } createIllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } createIllegalArgumentException
Distance : 6

7
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } testSame
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } testSame
Distance : 6

8
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } str
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } str
Distance : 6

9
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fireChangeEvent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fireChangeEvent
Distance : 6

10
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertThat
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertThat
Distance : 6

11
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocation
Distance : 6

12
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ,
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ,
Distance : 6

13
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } .
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } .
Distance : 6

14
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } x
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } x
Distance : 6

15
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertEquals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertEquals
Distance : 6

16
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } T
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } T
Distance : 6

17
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } []
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } []
Distance : 6

18
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } scope
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } scope
Distance : 6

19
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getFirstChild
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getFirstChild
Distance : 6

20
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throws
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throws
Distance : 6

21
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } returnZero
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } returnZero
Distance : 6

22
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportCodeChange
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportCodeChange
Distance : 6

23
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sb
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sb
Distance : 6

24
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } name
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } name
Distance : 6

25
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } field
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } field
Distance : 6

26
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Distance : 6

27
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } =
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } =
Distance : 6

28
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } }
Distance : 6

29
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ()
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ()
Distance : 6

30
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {
Distance : 6

31
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } new
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } new
Distance : 6

32
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } STRING_CONSTANT
Distance : 6

33
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NUMBER_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NUMBER_CONSTANT
Distance : 6

34
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return
Distance : 6

35
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } &&
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } &&
Distance : 6

36
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } externs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } externs
Distance : 6

37
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !=
Distance : 6

38
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } value
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } value
Distance : 6

39
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkState
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkState
Distance : 6

40
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } int
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } int
Distance : 6

41
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } i
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } i
Distance : 6

42
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Distance : 6

43
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <blank>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <blank>
Distance : 6

44
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ;
Distance : 6

45
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } )
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } )
Distance : 6

46
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkArgument
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkArgument
Distance : 6

47
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } t
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } t
Distance : 6

48
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <s>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <s>
Distance : 6

49
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !
Distance : 6

50
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } d
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } d
Distance : 6

51
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocations
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocations
Distance : 6

52
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } :
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } :
Distance : 6

53
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fail
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fail
Distance : 6

54
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Args
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Args
Distance : 6

55
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } List
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } List
Distance : 6

56
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } m
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } m
Distance : 6

57
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } node
Distance : 6

58
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 6

59
Tree	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 6

60
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 6

61
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Distance : 6

62
Tree	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 7

63
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 7

64
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 7

65
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 8

66
Tree	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Distance : 7

67
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Distance : 7

68
Tree	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 8

69
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 8

70
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Distance : 8

71
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 9

72
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } index
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } index
Distance : 6

73
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isBlock
Distance : 6

74
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getParent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getParent
Distance : 6

75
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } values
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } values
Distance : 6

76
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } equals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } equals
Distance : 6

77
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } for
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } for
Distance : 6

78
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Invocation
Distance : 6

79
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } js
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } js
Distance : 6

80
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtilities
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtilities
Distance : 6

81
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StrBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StrBuilder
Distance : 6

82
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setUp
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setUp
Distance : 6

83
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } size
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } size
Distance : 6

84
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 6

85
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } UnivariateFunction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } UnivariateFunction
Distance : 6

86
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } result
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } result
Distance : 6

87
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } append
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } append
Distance : 6

88
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } try
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } try
Distance : 6

89
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } nullNotPermitted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } nullNotPermitted
Distance : 6

90
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } paint
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } paint
Distance : 6

91
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } @
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } @
Distance : 6

92
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } false
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } false
Distance : 6

93
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } double
Distance : 6

94
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stream
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stream
Distance : 6

95
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } out
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } out
Distance : 6

96
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } protected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } protected
Distance : 6

97
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } test
Distance : 6

98
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return;
Distance : 6

99
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 5

100
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isEmpty
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isEmpty
Distance : 6

101
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } >
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } >
Distance : 6

102
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } public
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } public
Distance : 6

103
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } final
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } final
Distance : 6

104
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } this
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } this
Distance : 6

105
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <
Distance : 6

106
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } if
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } if
Distance : 6

107
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } parent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } parent
Distance : 6

108
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ArrayList
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ArrayList
Distance : 6

109
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getInstance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getInstance
Distance : 6

110
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } join
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } join
Distance : 6

111
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } JSType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } JSType
Distance : 6

112
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 7

113
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ]
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ]
Distance : 6

114
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkNotNull
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkNotNull
Distance : 6

115
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } length
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } length
Distance : 6

116
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtils
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtils
Distance : 6

117
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Node
Distance : 6

118
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } null
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } null
Distance : 6

119
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } +
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } +
Distance : 6

120
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } static
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } static
Distance : 6

121
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setAcceptedLanguage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setAcceptedLanguage
Distance : 6

122
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } c
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } c
Distance : 6

123
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } lines
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } lines
Distance : 6

124
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } MathRuntimeException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } MathRuntimeException
Distance : 6

125
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {}
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {}
Distance : 6

126
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } true
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } true
Distance : 6

127
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mode
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mode
Distance : 6

128
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } type
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } type
Distance : 6

129
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } -
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } -
Distance : 6

130
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } verify
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } verify
Distance : 6

131
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } boolean
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } boolean
Distance : 6

132
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } char
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } char
Distance : 6

133
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } get
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } get
Distance : 6

134
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportMatcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportMatcher
Distance : 6

135
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } matcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } matcher
Distance : 6

136
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getMessage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getMessage
Distance : 6

137
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } else
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } else
Distance : 6

138
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } abs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } abs
Distance : 6

139
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } instant
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } instant
Distance : 6

140
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } serialised
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } serialised
Distance : 6

141
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } v
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } v
Distance : 6

142
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Preconditions
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Preconditions
Distance : 6

143
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } compiler
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } compiler
Distance : 6

144
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } class
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } class
Distance : 6

145
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <>
Distance : 6

146
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } array
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } array
Distance : 6

147
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } contains
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } contains
Distance : 6

148
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } obj
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } obj
Distance : 6

149
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Integer
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Integer
Distance : 6

150
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } a
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } a
Distance : 6

151
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stroke
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stroke
Distance : 6

152
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } MutableTimePeriod
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } MutableTimePeriod
Distance : 6

153
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StringBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StringBuilder
Distance : 6

154
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } traverseEs6
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } traverseEs6
Distance : 6

155
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } PeriodType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } PeriodType
Distance : 6

156
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } s
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } s
Distance : 6

157
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isNormalBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isNormalBlock
Distance : 6

158
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } b
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } b
Distance : 6

159
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Double
Distance : 6

160
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } clone
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } clone
Distance : 6

161
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } f
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } f
Distance : 6

162
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Override
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Override
Distance : 6

163
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } chrono
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } chrono
Distance : 6

164
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Object
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Object
Distance : 6

165
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } String
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } String
Distance : 6

166
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mock
Distance : 6

167
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } e
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } e
Distance : 6

168
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } catch
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } catch
Distance : 6

169
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throw
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throw
Distance : 6

170
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } void
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } void
Distance : 6

171
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ==
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ==
Distance : 6

172
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } long
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } long
Distance : 6

173
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ?
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ?
Distance : 6

174
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } n
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } n
Distance : 6

175
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Exception
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Exception
Distance : 6

176
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertTrue
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertTrue
Distance : 6

177
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } /
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } /
Distance : 6

178
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Fraction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Fraction
Distance : 6

179
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } [
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } [
Distance : 6

180
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sqrt
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sqrt
Distance : 6

181
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <=
Distance : 6

182
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ParamChecks
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ParamChecks
Distance : 6

183
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Assert
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Assert
Distance : 6

184
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } *
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } *
Distance : 6

185
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Math
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Math
Distance : 6

186
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } root
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } root
Distance : 6

187
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeUtil
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeUtil
Distance : 6

188
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } wanted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } wanted
Distance : 6

189
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } data
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } data
Distance : 6

190
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } add
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } add
Distance : 6

191
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } source
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } source
Distance : 6

192
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ex
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ex
Distance : 6

193
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Class
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Class
Distance : 6

194
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } options
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } options
Distance : 6

195
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } p
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } p
Distance : 6

196
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } toString
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } toString
Distance : 6

197
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Test
Distance : 6

198
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeTraversal
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeTraversal
Distance : 6

199
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mockingProgress
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mockingProgress
Distance : 6

========================================================================


========================================================================
Example Number: 98
Parent Code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( new InstanceOf ( Object . class ) ) . returnNull () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } setUp
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } setUp
Distance : 8

1
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } wanted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } wanted
Distance : 8

2
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } data
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } data
Distance : 8

3
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } add
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } add
Distance : 8

4
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NodeTraversal
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NodeTraversal
Distance : 8

5
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ex
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ex
Distance : 8

6
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ==
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ==
Distance : 8

7
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } final
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } final
Distance : 8

8
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } void
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } void
Distance : 8

9
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } catch
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } catch
Distance : 8

10
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } e
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } e
Distance : 8

11
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } n
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } n
Distance : 8

12
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } String
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } String
Distance : 8

13
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } compiler
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } compiler
Distance : 8

14
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } MathRuntimeException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } MathRuntimeException
Distance : 8

15
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } {}
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } {}
Distance : 8

16
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } true
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } true
Distance : 8

17
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mode
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mode
Distance : 8

18
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } throw
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } throw
Distance : 8

19
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } public
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } public
Distance : 8

20
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <
Distance : 8

21
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } null
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } null
Distance : 8

22
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NodeUtil
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NodeUtil
Distance : 8

23
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } y
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } y
Distance : 8

24
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } root
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } root
Distance : 8

25
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } -
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } -
Distance : 8

26
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NUMBER_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } NUMBER_CONSTANT
Distance : 8

27
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } STRING_CONSTANT
Distance : 8

28
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } new
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } new
Distance : 8

29
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } {
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } {
Distance : 8

30
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ()
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ()
Distance : 8

31
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } }
Distance : 8

32
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } =
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } =
Distance : 8

33
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ,
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ,
Distance : 8

34
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } .
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } .
Distance : 8

35
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } )
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } )
Distance : 8

36
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ;
Distance : 8

37
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <blank>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <blank>
Distance : 8

38
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ()
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ()
Distance : 8

39
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <s>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <s>
Distance : 8

40
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } (
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } (
Distance : 8

41
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } if
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } if
Distance : 8

42
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } StrBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } StrBuilder
Distance : 8

43
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } this
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } this
Distance : 8

44
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ]
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ]
Distance : 8

45
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } [
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } [
Distance : 8

46
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Preconditions
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Preconditions
Distance : 8

47
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Math
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Math
Distance : 8

48
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } return
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } return
Distance : 8

49
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } >
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } >
Distance : 8

50
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } /
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } /
Distance : 8

51
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } instance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } instance
Distance : 8

52
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } T
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } T
Distance : 8

53
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } &&
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } &&
Distance : 8

54
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } static
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } static
Distance : 8

55
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } !=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } !=
Distance : 8

56
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } instant
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } instant
Distance : 8

57
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } setAcceptedLanguage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } setAcceptedLanguage
Distance : 8

58
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } optimizer
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } optimizer
Distance : 8

59
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } alpha
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } alpha
Distance : 8

60
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } reportMatcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } reportMatcher
Distance : 8

61
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getArgumentMatcherStorage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getArgumentMatcherStorage
Distance : 8

62
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getMessage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getMessage
Distance : 8

63
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } else
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } else
Distance : 8

64
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } abs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } abs
Distance : 8

65
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } matcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } matcher
Distance : 8

66
Tree	{ return ( Object ) returnNull ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Object ) returnNull ( Any.ANY ) . reportMatcher () ; }
Distance : 10

67
Tree	{ return ( Object ) returnNull ( Any.ANY ) . returnNull () ; }
Code	{ return ( Object ) returnNull ( Any.ANY ) . returnNull () ; }
Distance : 9

68
Tree	{ return ( Object ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Object ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

69
Tree	{ return ( T ) returnNull ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( T ) returnNull ( Any.ANY ) . reportMatcher () ; }
Distance : 9

70
Tree	{ return ( Object ) reportMatcher ( Any.ANY ) . returnNull () ; }
Code	{ return ( Object ) reportMatcher ( Any.ANY ) . returnNull () ; }
Distance : 8

71
Tree	{ return ( T ) returnNull ( Any.ANY ) . returnNull () ; }
Code	{ return ( T ) returnNull ( Any.ANY ) . returnNull () ; }
Distance : 8

72
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } value
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } value
Distance : 8

73
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } externs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } externs
Distance : 8

74
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkState
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkState
Distance : 8

75
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } i
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } i
Distance : 8

76
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertTrue
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertTrue
Distance : 8

77
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Exception
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Exception
Distance : 8

78
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Assert
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Assert
Distance : 8

79
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ?
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ?
Distance : 8

80
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } long
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } long
Distance : 8

81
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } invocations
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } invocations
Distance : 8

82
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } index
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } index
Distance : 8

83
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getParent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getParent
Distance : 8

84
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } node
Distance : 8

85
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } values
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } values
Distance : 8

86
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } protected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } protected
Distance : 8

87
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } out
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } out
Distance : 8

88
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } stream
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } stream
Distance : 8

89
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } contains
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } contains
Distance : 8

90
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } obj
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } obj
Distance : 8

91
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LanguageMode.ECMASCRIPT6
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LanguageMode.ECMASCRIPT6
Distance : 8

92
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } valueOf
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } valueOf
Distance : 8

93
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } notifyListeners
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } notifyListeners
Distance : 8

94
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } simpleMethod
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } simpleMethod
Distance : 8

95
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } +
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } +
Distance : 8

96
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } super
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } super
Distance : 8

97
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } int
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } int
Distance : 8

98
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } chrono
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } chrono
Distance : 8

99
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
Distance : 7

100
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } stroke
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } stroke
Distance : 8

101
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mockingProgress
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mockingProgress
Distance : 8

102
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } return;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } return;
Distance : 8

103
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

104
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } size
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } size
Distance : 8

105
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } sqrt
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } sqrt
Distance : 8

106
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } clone
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } clone
Distance : 8

107
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <=
Distance : 8

108
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Double
Distance : 8

109
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } b
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } b
Distance : 8

110
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isNormalBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isNormalBlock
Distance : 8

111
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } s
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } s
Distance : 8

112
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } PeriodType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } PeriodType
Distance : 8

113
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } invocation
Distance : 8

114
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertThat
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertThat
Distance : 8

115
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } fireChangeEvent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } fireChangeEvent
Distance : 8

116
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } testSame
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } testSame
Distance : 8

117
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } MutableTimePeriod
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } MutableTimePeriod
Distance : 8

118
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

119
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ParamChecks
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ParamChecks
Distance : 8

120
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isEmpty
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isEmpty
Distance : 8

121
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } JSType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } JSType
Distance : 8

122
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } char
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } char
Distance : 8

123
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } get
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } get
Distance : 8

124
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } source
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } source
Distance : 8

125
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Class
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Class
Distance : 8

126
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } *
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } *
Distance : 8

127
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } type
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } type
Distance : 8

128
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } boolean
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } boolean
Distance : 8

129
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } join
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } join
Distance : 8

130
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } serialised
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } serialised
Distance : 8

131
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getInstance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getInstance
Distance : 8

132
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ArrayList
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } ArrayList
Distance : 8

133
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } scope
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } scope
Distance : 8

134
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } parent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } parent
Distance : 8

135
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } <>
Distance : 8

136
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } class
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } class
Distance : 8

137
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } f
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } f
Distance : 8

138
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } x
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } x
Distance : 8

139
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Override
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Override
Distance : 8

140
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } createIllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } createIllegalArgumentException
Distance : 8

141
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } str
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } str
Distance : 8

142
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } StringBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } StringBuilder
Distance : 8

143
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } traverseEs6
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } traverseEs6
Distance : 8

144
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } array
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } array
Distance : 8

145
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getFirstChild
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } getFirstChild
Distance : 8

146
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } mock
Distance : 8

147
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } returnZero
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } returnZero
Distance : 8

148
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } List
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } List
Distance : 8

149
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } throws
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } throws
Distance : 8

150
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } try
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } try
Distance : 8

151
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } paint
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } paint
Distance : 8

152
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } result
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } result
Distance : 8

153
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Integer
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Integer
Distance : 8

154
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } v
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } v
Distance : 8

155
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } verify
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } verify
Distance : 8

156
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Node
Distance : 8

157
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } TestUtils
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } TestUtils
Distance : 8

158
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } length
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } length
Distance : 8

159
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkNotNull
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkNotNull
Distance : 8

160
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Fraction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Fraction
Distance : 8

161
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } IllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } IllegalArgumentException
Distance : 8

162
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } expected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } expected
Distance : 8

163
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } FastMath
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } FastMath
Distance : 8

164
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } reportCodeChange
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } reportCodeChange
Distance : 8

165
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } name
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } name
Distance : 8

166
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } field
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } field
Distance : 8

167
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Args
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Args
Distance : 8

168
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } fail
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } fail
Distance : 8

169
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } m
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } m
Distance : 8

170
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } t
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } t
Distance : 8

171
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } sb
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } sb
Distance : 8

172
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } append
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } append
Distance : 8

173
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } isBlock
Distance : 8

174
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertEquals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } assertEquals
Distance : 8

175
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } !
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } !
Distance : 8

176
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } []
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } []
Distance : 8

177
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } :
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } :
Distance : 8

178
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } test
Distance : 8

179
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } @
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } @
Distance : 8

180
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } false
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } false
Distance : 8

181
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } nullNotPermitted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } nullNotPermitted
Distance : 8

182
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } d
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } d
Distance : 8

183
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } double
Distance : 8

184
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Object
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Object
Distance : 8

185
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } UnivariateFunction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } UnivariateFunction
Distance : 8

186
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } TestUtilities
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } TestUtilities
Distance : 8

187
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkArgument
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } checkArgument
Distance : 8

188
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Invocation
Distance : 8

189
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } for
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } for
Distance : 8

190
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } equals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } equals
Distance : 8

191
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } js
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } js
Distance : 8

192
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } options
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } options
Distance : 8

193
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } p
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } p
Distance : 8

194
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } toString
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } toString
Distance : 8

195
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } Test
Distance : 8

196
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } c
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } c
Distance : 8

197
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } lines
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } lines
Distance : 8

198
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LINE_JOINER
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } LINE_JOINER
Distance : 8

199
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } a
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; } a
Distance : 8

========================================================================


========================================================================
Example Number: 99
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Short . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Short})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 100
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Double . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Double})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 101
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Float . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Float})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 102
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Long . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Long})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 103
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Integer . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Integer})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 104
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnChar () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Character . class ) ) . returnChar () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnChar}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Character})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnChar}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ()
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ]
Distance : 8

70
Tree	{ return returnChar ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnChar ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnChar ( Any.ANY ) . returnChar () ; }
Code	{ return returnChar ( Any.ANY ) . returnChar () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 105
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Byte . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Byte})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ]
Distance : 8

70
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 106
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Boolean . class ) ) . returnFalse () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnFalse}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Boolean})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnFalse}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } invocations
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } invocations
Distance : 8

1
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } options
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } options
Distance : 8

2
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } p
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } p
Distance : 8

3
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } &&
Distance : 8

4
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } T
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } T
Distance : 8

5
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } !=
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } !=
Distance : 8

6
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } value
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } value
Distance : 8

7
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ParamChecks
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ParamChecks
Distance : 8

8
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Object
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Object
Distance : 8

9
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mock
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mock
Distance : 8

10
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Override
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Override
Distance : 8

11
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertEquals
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertEquals
Distance : 8

12
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } !
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } !
Distance : 8

13
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } []
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } []
Distance : 8

14
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } nullNotPermitted
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } nullNotPermitted
Distance : 8

15
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } catch
Distance : 8

16
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } throw
Distance : 8

17
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } void
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } void
Distance : 8

18
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ==
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ==
Distance : 8

19
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } double
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } double
Distance : 8

20
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } index
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } index
Distance : 8

21
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } >
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } >
Distance : 8

22
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } source
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } source
Distance : 8

23
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } null
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } null
Distance : 8

24
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Class
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Class
Distance : 8

25
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } @
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } @
Distance : 8

26
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } {}
Distance : 8

27
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } MathRuntimeException
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } MathRuntimeException
Distance : 8

28
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } if
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } if
Distance : 8

29
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <
Distance : 8

30
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } this
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } this
Distance : 8

31
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } final
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } final
Distance : 8

32
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } =
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } =
Distance : 8

33
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } }
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } }
Distance : 8

34
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mode
Distance : 8

35
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ()
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ()
Distance : 8

36
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <blank>
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <blank>
Distance : 8

37
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return
Distance : 8

38
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <s>
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <s>
Distance : 8

39
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } (
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } (
Distance : 8

40
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ;
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ;
Distance : 8

41
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } )
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } )
Distance : 8

42
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } .
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } .
Distance : 8

43
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ,
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ,
Distance : 8

44
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } +
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } +
Distance : 8

45
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } {
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } {
Distance : 8

46
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } test
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } test
Distance : 8

47
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } false
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } false
Distance : 8

48
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } true
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } true
Distance : 8

49
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } new
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } new
Distance : 8

50
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } pattern
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } pattern
Distance : 8

51
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } IllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } IllegalArgumentException
Distance : 8

52
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } expected
Distance : 8

53
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } FastMath
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } FastMath
Distance : 8

54
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } reportCodeChange
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } reportCodeChange
Distance : 8

55
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } -
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } -
Distance : 8

56
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } values
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } values
Distance : 8

57
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } [
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } [
Distance : 8

58
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Preconditions
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Preconditions
Distance : 8

59
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } get
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } get
Distance : 8

60
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } char
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } char
Distance : 8

61
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } JSType
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } JSType
Distance : 8

62
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isEmpty
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isEmpty
Distance : 8

63
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } abs
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } abs
Distance : 8

64
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } instant
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } instant
Distance : 8

65
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } setAcceptedLanguage
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } setAcceptedLanguage
Distance : 8

66
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } static
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } static
Distance : 8

67
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } stream
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } stream
Distance : 8

68
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } out
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } out
Distance : 8

69
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ]
Distance : 8

70
Tree	{ return returnFalse ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnFalse ( Any.ANY ) . reportMatcher () ; }
Distance : 9

71
Tree	{ return returnFalse ( Any.ANY ) . returnFalse () ; }
Code	{ return returnFalse ( Any.ANY ) . returnFalse () ; }
Distance : 8

72
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return
Distance : 8

73
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Collection
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Collection
Distance : 8

74
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NUMBER_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NUMBER_CONSTANT
Distance : 8

75
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } protected
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } protected
Distance : 8

76
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } d
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } d
Distance : 8

77
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } equals
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } equals
Distance : 8

78
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } for
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } for
Distance : 8

79
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Invocation
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Invocation
Distance : 8

80
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertTrue
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertTrue
Distance : 8

81
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } /
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } /
Distance : 8

82
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } externs
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } externs
Distance : 8

83
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } public
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } public
Distance : 8

84
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } notifyListeners
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } notifyListeners
Distance : 8

85
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } StrBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } StrBuilder
Distance : 8

86
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } TestUtilities
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } TestUtilities
Distance : 8

87
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } js
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } js
Distance : 8

88
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } else
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } else
Distance : 8

89
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getMessage
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getMessage
Distance : 8

90
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } matcher
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } matcher
Distance : 8

91
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } reportMatcher
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } reportMatcher
Distance : 8

92
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } PeriodType
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } PeriodType
Distance : 8

93
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } s
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } s
Distance : 8

94
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } setUp
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } setUp
Distance : 8

95
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } solver
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } solver
Distance : 8

96
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getField
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getField
Distance : 8

97
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } STRING_CONSTANT
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } STRING_CONSTANT
Distance : 8

98
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isNormalBlock
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isNormalBlock
Distance : 8

99
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
Distance : 7

100
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } a
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } a
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT_2015
Distance : 8

102
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return;
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } return;
Distance : 8

103
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mockingProgress
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } mockingProgress
Distance : 8

104
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } stroke
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } stroke
Distance : 8

105
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } MutableTimePeriod
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } MutableTimePeriod
Distance : 8

106
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } StringBuilder
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } StringBuilder
Distance : 8

107
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } traverseEs6
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } traverseEs6
Distance : 8

108
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } UnivariateFunction
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } UnivariateFunction
Distance : 8

109
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } scope
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } scope
Distance : 8

110
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } size
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } size
Distance : 8

111
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getFirstChild
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getFirstChild
Distance : 8

112
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Double
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Double
Distance : 8

113
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <=
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <=
Distance : 8

114
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } clone
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } clone
Distance : 8

115
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } sqrt
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } sqrt
Distance : 8

116
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isBlock
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } isBlock
Distance : 8

117
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } append
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } append
Distance : 8

118
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } sb
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } sb
Distance : 8

119
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } y
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } y
Distance : 8

120
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } chrono
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } chrono
Distance : 8

121
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } throws
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } throws
Distance : 8

122
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } contains
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } contains
Distance : 8

123
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } obj
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } obj
Distance : 8

124
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } returnZero
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } returnZero
Distance : 8

125
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } verify
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } verify
Distance : 8

126
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Node
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Node
Distance : 8

127
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } str
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } str
Distance : 8

128
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } fireChangeEvent
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } fireChangeEvent
Distance : 8

129
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertThat
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } assertThat
Distance : 8

130
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } invocation
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } invocation
Distance : 8

131
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } parent
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } parent
Distance : 8

132
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ArrayList
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ArrayList
Distance : 8

133
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getInstance
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getInstance
Distance : 8

134
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } serialised
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } serialised
Distance : 8

135
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } testSame
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } testSame
Distance : 8

136
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } createIllegalArgumentException
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } createIllegalArgumentException
Distance : 8

137
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } x
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } x
Distance : 8

138
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LINE_JOINER
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LINE_JOINER
Distance : 8

139
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } :
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } :
Distance : 8

140
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } fail
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } fail
Distance : 8

141
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Args
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Args
Distance : 8

142
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } List
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } List
Distance : 8

143
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } valueOf
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } valueOf
Distance : 8

144
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } f
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } f
Distance : 8

145
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT6
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT6
Distance : 8

146
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

147
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } array
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } array
Distance : 8

148
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } class
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } class
Distance : 8

149
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ?
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ?
Distance : 8

150
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } try
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } try
Distance : 8

151
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } m
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } m
Distance : 8

152
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } join
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } join
Distance : 8

153
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } boolean
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } boolean
Distance : 8

154
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } type
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } type
Distance : 8

155
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } *
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } *
Distance : 8

156
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Fraction
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Fraction
Distance : 8

157
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkNotNull
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkNotNull
Distance : 8

158
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } length
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } length
Distance : 8

159
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Assert
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Assert
Distance : 8

160
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } TestUtils
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } TestUtils
Distance : 8

161
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NodeUtil
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NodeUtil
Distance : 8

162
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } root
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } root
Distance : 8

163
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Math
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Math
Distance : 8

164
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkArgument
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkArgument
Distance : 8

165
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } field
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } field
Distance : 8

166
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } t
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } t
Distance : 8

167
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } name
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } name
Distance : 8

168
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } data
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } data
Distance : 8

169
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } NodeTraversal
Distance : 8

170
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } wanted
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } wanted
Distance : 8

171
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } result
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } result
Distance : 8

172
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } paint
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } paint
Distance : 8

173
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ex
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } ex
Distance : 8

174
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } long
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } long
Distance : 8

175
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } toString
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } toString
Distance : 8

176
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Test
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Test
Distance : 8

177
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } c
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } c
Distance : 8

178
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } lines
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } lines
Distance : 8

179
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } e
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } e
Distance : 8

180
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } n
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } n
Distance : 8

181
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } String
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } String
Distance : 8

182
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } add
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } add
Distance : 8

183
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } checkState
Distance : 8

184
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } compiler
Distance : 8

185
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } i
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } i
Distance : 8

186
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } super
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } super
Distance : 8

187
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } simpleMethod
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } simpleMethod
Distance : 8

188
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getArgumentMatcherStorage
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getArgumentMatcherStorage
Distance : 8

189
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } optimizer
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } optimizer
Distance : 8

190
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } alpha
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } alpha
Distance : 8

191
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } node
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } node
Distance : 8

192
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getParent
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } getParent
Distance : 8

193
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Exception
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Exception
Distance : 8

194
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <>
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } <>
Distance : 8

195
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } int
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } int
Distance : 8

196
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } v
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } v
Distance : 8

197
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Integer
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } Integer
Distance : 8

198
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } instance
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } instance
Distance : 8

199
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } b
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; } b
Distance : 8

========================================================================


========================================================================
Example Number: 107
Parent Code is: 
catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
-------------------------------------------------------------------------------
Child code is: 
catch ( AssertionError e ) { error = handleVerifyException ( e ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (40{val=org.mockito.exceptions.verification.junit.ArgumentsAreDifferent})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=error}) (204{val==}) (32 (802{val=handleVerifyException}) (214{val=(}) (800{val=e}) (215{val=)}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=AssertionError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=error}) (204{val==}) (32 (802{val=handleVerifyException}) (214{val=(}) (800{val=e}) (215{val=)}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/5/parent/src_org_mockito_internal_verification_VerificationOverTimeImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	catch
Code	catch
Distance : 13

1
Tree	assertNode
Code	assertNode
Distance : 14

2
Tree	void
Code	void
Distance : 14

3
Tree	protected
Code	protected
Distance : 14

4
Tree	TypeI
Code	TypeI
Distance : 14

5
Tree	WantedButNotInvoked
Code	WantedButNotInvoked
Distance : 14

6
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 14

7
Tree	hasMessageContaining
Code	hasMessageContaining
Distance : 14

8
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 14

9
Tree	*
Code	*
Distance : 14

10
Tree	[]
Code	[]
Distance : 14

11
Tree	mockOne
Code	mockOne
Distance : 14

12
Tree	for
Code	for
Distance : 14

13
Tree	Test
Code	Test
Distance : 14

14
Tree	Class
Code	Class
Distance : 14

15
Tree	optimizer
Code	optimizer
Distance : 14

16
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 14

17
Tree	>
Code	>
Distance : 14

18
Tree	Set
Code	Set
Distance : 14

19
Tree	catch
Code	catch
Distance : 13

20
Tree	assertClose
Code	assertClose
Distance : 14

21
Tree	AssertionError
Code	AssertionError
Distance : 13

22
Tree	Test
Code	Test
Distance : 14

23
Tree	MatrixIndexException
Code	MatrixIndexException
Distance : 14

24
Tree	MutableTimePeriod
Code	MutableTimePeriod
Distance : 14

25
Tree	Class
Code	Class
Distance : 14

26
Tree	optimizer
Code	optimizer
Distance : 14

27
Tree	DecompositionSolver
Code	DecompositionSolver
Distance : 14

28
Tree	Set
Code	Set
Distance : 14

29
Tree	printStackTrace
Code	printStackTrace
Distance : 14

30
Tree	abstract
Code	abstract
Distance : 14

31
Tree	expected
Code	expected
Distance : 14

32
Tree	FastMath
Code	FastMath
Distance : 14

33
Tree	assertNotSame
Code	assertNotSame
Distance : 14

34
Tree	TypeI
Code	TypeI
Distance : 14

35
Tree	test
Code	test
Distance : 14

36
Tree	long
Code	long
Distance : 14

37
Tree	}
Code	}
Distance : 13

38
Tree	fail
Code	fail
Distance : 14

39
Tree	EigenDecomposition
Code	EigenDecomposition
Distance : 14

40
Tree	VerificationInOrderFailure
Code	VerificationInOrderFailure
Distance : 14

41
Tree	char
Code	char
Distance : 14

42
Tree	synchronized
Code	synchronized
Distance : 14

43
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 14

44
Tree	InvocationDiffersFromActual
Code	InvocationDiffersFromActual
Distance : 14

45
Tree	ex
Code	ex
Distance : 14

46
Tree	for
Code	for
Distance : 14

47
Tree	NodeTraversal
Code	NodeTraversal
Distance : 14

48
Tree	createIOException
Code	createIOException
Distance : 14

49
Tree	char
Code	char
Distance : 14

50
Tree	int
Code	int
Distance : 14

51
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 14

52
Tree	GaussNewtonOptimizer
Code	GaussNewtonOptimizer
Distance : 14

53
Tree	return
Code	return
Distance : 14

54
Tree	NO_ENTRY_MESSAGE
Code	NO_ENTRY_MESSAGE
Distance : 14

55
Tree	assertNotNull
Code	assertNotNull
Distance : 14

56
Tree	.
Code	.
Distance : 14

57
Tree	Args
Code	Args
Distance : 14

58
Tree	IllegalArgumentException
Code	IllegalArgumentException
Distance : 14

59
Tree	assertNull
Code	assertNull
Distance : 14

60
Tree	ImmutableList
Code	ImmutableList
Distance : 14

61
Tree	column
Code	column
Distance : 14

62
Tree	(
Code	(
Distance : 13

63
Tree	MatrixIndexException
Code	MatrixIndexException
Distance : 14

64
Tree	[]
Code	[]
Distance : 14

65
Tree	testSame
Code	testSame
Distance : 14

66
Tree	length
Code	length
Distance : 14

67
Tree	matchers
Code	matchers
Distance : 14

68
Tree	void
Code	void
Distance : 14

69
Tree	ParamChecks
Code	ParamChecks
Distance : 14

70
Tree	checker
Code	checker
Distance : 14

71
Tree	double
Code	double
Distance : 14

72
Tree	causeMessageContains
Code	causeMessageContains
Distance : 14

73
Tree	AssertionError
Code	AssertionError
Distance : 13

74
Tree	row
Code	row
Distance : 14

75
Tree	hasMessageContaining
Code	hasMessageContaining
Distance : 14

76
Tree	assertArrayEquals
Code	assertArrayEquals
Distance : 14

77
Tree	LINE_JOINER
Code	LINE_JOINER
Distance : 14

78
Tree	WantedButNotInvoked
Code	WantedButNotInvoked
Distance : 14

79
Tree	messageContains
Code	messageContains
Distance : 14

80
Tree	final
Code	final
Distance : 14

81
Tree	reporter
Code	reporter
Distance : 14

82
Tree	null
Code	null
Distance : 14

83
Tree	abstract
Code	abstract
Distance : 14

84
Tree	obj
Code	obj
Distance : 14

85
Tree	expected
Code	expected
Distance : 14

86
Tree	super();
Code	super();
Distance : 14

87
Tree	FastMath
Code	FastMath
Distance : 14

88
Tree	test
Code	test
Distance : 14

89
Tree	ex
Code	ex
Distance : 14

90
Tree	long
Code	long
Distance : 14

91
Tree	IOException
Code	IOException
Distance : 14

92
Tree	}
Code	}
Distance : 13

93
Tree	context
Code	context
Distance : 14

94
Tree	mockOne
Code	mockOne
Distance : 14

95
Tree	fold
Code	fold
Distance : 14

96
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 14

97
Tree	e
Code	e
Distance : 13

98
Tree	checkState
Code	checkState
Distance : 14

99
Tree	assertContains
Code	assertContains
Distance : 14

100
Tree	checkArgument
Code	checkArgument
Distance : 14

101
Tree	assertFalse
Code	assertFalse
Distance : 14

102
Tree	Preconditions
Code	Preconditions
Distance : 14

103
Tree	()
Code	()
Distance : 14

104
Tree	class
Code	class
Distance : 14

105
Tree	
Code	
Distance : 14

106
Tree	assertContains
Code	assertContains
Distance : 14

107
Tree	Assertions
Code	Assertions
Distance : 14

108
Tree	+
Code	+
Distance : 14

109
Tree	return;
Code	return;
Distance : 14

110
Tree	()
Code	()
Distance : 14

111
Tree	class
Code	class
Distance : 14

112
Tree	new
Code	new
Distance : 14

113
Tree	)
Code	)
Distance : 13

114
Tree	boolean
Code	boolean
Distance : 14

115
Tree	private
Code	private
Distance : 14

116
Tree	getMessage
Code	getMessage
Distance : 14

117
Tree	assertEquals
Code	assertEquals
Distance : 14

118
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 14

119
Tree	assertFalse
Code	assertFalse
Distance : 14

120
Tree	strictly
Code	strictly
Distance : 14

121
Tree	if
Code	if
Distance : 14

122
Tree	{}
Code	{}
Distance : 14

123
Tree	assertThat
Code	assertThat
Distance : 14

124
Tree	assertThat
Code	assertThat
Distance : 14

125
Tree	assertTrue
Code	assertTrue
Distance : 14

126
Tree	@
Code	@
Distance : 14

127
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 14

128
Tree	public
Code	public
Distance : 14

129
Tree	assertTrue
Code	assertTrue
Distance : 14

130
Tree	@
Code	@
Distance : 14

131
Tree	try
Code	try
Distance : 14

132
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 14

133
Tree	Preconditions
Code	Preconditions
Distance : 14

134
Tree	{
Code	{
Distance : 13

135
Tree	{}
Code	{}
Distance : 14

136
Tree	if
Code	if
Distance : 14

137
Tree	public
Code	public
Distance : 14

138
Tree	Assertions
Code	Assertions
Distance : 14

139
Tree	e
Code	e
Distance : 13

140
Tree	try
Code	try
Distance : 14

141
Tree	checkState
Code	checkState
Distance : 14

142
Tree	{
Code	{
Distance : 13

143
Tree	checkArgument
Code	checkArgument
Distance : 14

144
Tree	throw
Code	throw
Distance : 14

145
Tree	throw
Code	throw
Distance : 14

146
Tree	*
Code	*
Distance : 14

147
Tree	ed
Code	ed
Distance : 14

148
Tree	VerifcationInOrderFailure
Code	VerifcationInOrderFailure
Distance : 14

149
Tree	new
Code	new
Distance : 14

150
Tree	;
Code	;
Distance : 13

151
Tree	VerifcationInOrderFailure
Code	VerifcationInOrderFailure
Distance : 14

152
Tree	Assert
Code	Assert
Distance : 14

153
Tree	assertSame
Code	assertSame
Distance : 14

154
Tree	return;
Code	return;
Distance : 14

155
Tree	assertScope
Code	assertScope
Distance : 14

156
Tree	assertType
Code	assertType
Distance : 14

157
Tree	&&
Code	&&
Distance : 14

158
Tree	Collection
Code	Collection
Distance : 14

159
Tree	ArrayList
Code	ArrayList
Distance : 14

160
Tree	+
Code	+
Distance : 14

161
Tree	TestUtils
Code	TestUtils
Distance : 14

162
Tree	
Code	
Distance : 14

163
Tree	when
Code	when
Distance : 14

164
Tree	assertNode
Code	assertNode
Distance : 14

165
Tree	protected
Code	protected
Distance : 14

166
Tree	)
Code	)
Distance : 13

167
Tree	assertSame
Code	assertSame
Distance : 14

168
Tree	boolean
Code	boolean
Distance : 14

169
Tree	getMessage
Code	getMessage
Distance : 14

170
Tree	MutableTimePeriod
Code	MutableTimePeriod
Distance : 14

171
Tree	assertType
Code	assertType
Distance : 14

172
Tree	&&
Code	&&
Distance : 14

173
Tree	Collection
Code	Collection
Distance : 14

174
Tree	ArrayList
Code	ArrayList
Distance : 14

175
Tree	InvocationDiffersFromActual
Code	InvocationDiffersFromActual
Distance : 14

176
Tree	TestUtils
Code	TestUtils
Distance : 14

177
Tree	synchronized
Code	synchronized
Distance : 14

178
Tree	VerificationInOrderFailure
Code	VerificationInOrderFailure
Distance : 14

179
Tree	EigenDecomposition
Code	EigenDecomposition
Distance : 14

180
Tree	fail
Code	fail
Distance : 14

181
Tree	assertNotSame
Code	assertNotSame
Distance : 14

182
Tree	when
Code	when
Distance : 14

183
Tree	strictly
Code	strictly
Distance : 14

184
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 14

185
Tree	printStackTrace
Code	printStackTrace
Distance : 14

186
Tree	assertEquals
Code	assertEquals
Distance : 14

187
Tree	private
Code	private
Distance : 14

188
Tree	Assert
Code	Assert
Distance : 14

189
Tree	fold
Code	fold
Distance : 14

190
Tree	;
Code	;
Distance : 13

191
Tree	assertScope
Code	assertScope
Distance : 14

192
Tree	String
Code	String
Distance : 14

193
Tree	compiler
Code	compiler
Distance : 14

194
Tree	UnivariateSolver
Code	UnivariateSolver
Distance : 14

195
Tree	MutablePeriod
Code	MutablePeriod
Distance : 14

196
Tree	>
Code	>
Distance : 14

197
Tree	nullNotPermitted
Code	nullNotPermitted
Distance : 14

198
Tree	RealVector
Code	RealVector
Distance : 14

199
Tree	Exception
Code	Exception
Distance : 14

========================================================================


========================================================================
Example Number: 108
Parent Code is: 
new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () ) )
-------------------------------------------------------------------------------
Child code is: 
new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () ) )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=VerificationInOrderFailure})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (215{val=)})) (215{val=)})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=VerificationInOrderFailure})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=safelyGetMockName}) (214{val=(}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (215{val=)})) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/4/parent/src_org_mockito_exceptions_Reporter.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	new
Code	new
Distance : 28

1
Tree	LegendGraphic
Code	LegendGraphic
Distance : 29

2
Tree	tolerance
Code	tolerance
Distance : 29

3
Tree	t
Code	t
Distance : 29

4
Tree	Fraction
Code	Fraction
Distance : 29

5
Tree	OnDisk
Code	OnDisk
Distance : 29

6
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 29

7
Tree	RunnerImpl
Code	RunnerImpl
Distance : 29

8
Tree	testData
Code	testData
Distance : 29

9
Tree	GammaDistribution
Code	GammaDistribution
Distance : 29

10
Tree	bucket
Code	bucket
Distance : 29

11
Tree	final
Code	final
Distance : 29

12
Tree	useTypesForOptimization
Code	useTypesForOptimization
Distance : 29

13
Tree	if
Code	if
Distance : 29

14
Tree	suffix
Code	suffix
Distance : 29

15
Tree	start
Code	start
Distance : 29

16
Tree	position
Code	position
Distance : 29

17
Tree	DateParser
Code	DateParser
Distance : 29

18
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 29

19
Tree	scopeRoot
Code	scopeRoot
Distance : 29

20
Tree	EigenDecompositionImpl
Code	EigenDecompositionImpl
Distance : 29

21
Tree	CategoryDataset
Code	CategoryDataset
Distance : 29

22
Tree	PaintMap
Code	PaintMap
Distance : 29

23
Tree	SymbolTable
Code	SymbolTable
Distance : 29

24
Tree	ImmutableMap
Code	ImmutableMap
Distance : 29

25
Tree	Times
Code	Times
Distance : 29

26
Tree	verify
Code	verify
Distance : 29

27
Tree	LocalDate
Code	LocalDate
Distance : 29

28
Tree	Vector3D
Code	Vector3D
Distance : 29

29
Tree	AxisLocation
Code	AxisLocation
Distance : 29

30
Tree	sc
Code	sc
Distance : 29

31
Tree	Long
Code	Long
Distance : 29

32
Tree	Assertions
Code	Assertions
Distance : 29

33
Tree	DefaultStatisticalCategoryDataset
Code	DefaultStatisticalCategoryDataset
Distance : 29

34
Tree	PeepholeFoldConstants
Code	PeepholeFoldConstants
Distance : 29

35
Tree	char
Code	char
Distance : 29

36
Tree	scopeCreator
Code	scopeCreator
Distance : 29

37
Tree	ClassLoader
Code	ClassLoader
Distance : 29

38
Tree	GroupedStackedBarRenderer
Code	GroupedStackedBarRenderer
Distance : 29

39
Tree	bp
Code	bp
Distance : 29

40
Tree	Strategy
Code	Strategy
Distance : 29

41
Tree	es
Code	es
Distance : 29

42
Tree	dispatcher
Code	dispatcher
Distance : 29

43
Tree	DurationType
Code	DurationType
Distance : 29

44
Tree	assertClose
Code	assertClose
Distance : 29

45
Tree	compiler
Code	compiler
Distance : 29

46
Tree	DerivativeException
Code	DerivativeException
Distance : 29

47
Tree	interpolatedState
Code	interpolatedState
Distance : 29

48
Tree	TestFieldProblem3
Code	TestFieldProblem3
Distance : 29

49
Tree	matrix
Code	matrix
Distance : 29

50
Tree	filtered
Code	filtered
Distance : 29

51
Tree	real
Code	real
Distance : 29

52
Tree	Second
Code	Second
Distance : 29

53
Tree	[
Code	[
Distance : 29

54
Tree	maxIterations
Code	maxIterations
Distance : 29

55
Tree	CompilerInput
Code	CompilerInput
Distance : 29

56
Tree	T
Code	T
Distance : 29

57
Tree	jUnitRule
Code	jUnitRule
Distance : 29

58
Tree	PeepholeMinimizeConditions
Code	PeepholeMinimizeConditions
Distance : 29

59
Tree	sin
Code	sin
Distance : 29

60
Tree	Integer
Code	Integer
Distance : 29

61
Tree	getAnchorPoint
Code	getAnchorPoint
Distance : 29

62
Tree	FractionField
Code	FractionField
Distance : 29

63
Tree	getName
Code	getName
Distance : 29

64
Tree	MathConfigurationException
Code	MathConfigurationException
Distance : 29

65
Tree	TimePeriod
Code	TimePeriod
Distance : 29

66
Tree	Year
Code	Year
Distance : 29

67
Tree	MutableObject
Code	MutableObject
Distance : 29

68
Tree	assertTrue
Code	assertTrue
Distance : 29

69
Tree	DBSCANClusterer
Code	DBSCANClusterer
Distance : 29

70
Tree	mockingProgress
Code	mockingProgress
Distance : 29

71
Tree	RelativeDateFormat
Code	RelativeDateFormat
Distance : 29

72
Tree	MutableInterval
Code	MutableInterval
Distance : 29

73
Tree	short
Code	short
Distance : 29

74
Tree	str
Code	str
Distance : 29

75
Tree	Calendar
Code	Calendar
Distance : 29

76
Tree	Invocation
Code	Invocation
Distance : 29

77
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 29

78
Tree	strictly
Code	strictly
Distance : 29

79
Tree	alpha
Code	alpha
Distance : 29

80
Tree	ValueMarker
Code	ValueMarker
Distance : 29

81
Tree	assertChanges
Code	assertChanges
Distance : 29

82
Tree	StackTraceElement
Code	StackTraceElement
Distance : 29

83
Tree	ContributionsProvider
Code	ContributionsProvider
Distance : 29

84
Tree	MillisDuration
Code	MillisDuration
Distance : 29

85
Tree	InvocationNotifierHandler
Code	InvocationNotifierHandler
Distance : 29

86
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 29

87
Tree	}
Code	}
Distance : 29

88
Tree	hash
Code	hash
Distance : 29

89
Tree	tol
Code	tol
Distance : 29

90
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 29

91
Tree	product
Code	product
Distance : 29

92
Tree	creator
Code	creator
Distance : 29

93
Tree	ReferenceCollectingCallback
Code	ReferenceCollectingCallback
Distance : 29

94
Tree	MathArrays
Code	MathArrays
Distance : 29

95
Tree	LinearCombination
Code	LinearCombination
Distance : 29

96
Tree	flowScope
Code	flowScope
Distance : 29

97
Tree	FunctionUtils
Code	FunctionUtils
Distance : 29

98
Tree	late
Code	late
Distance : 29

99
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 29

100
Tree	peepholePass
Code	peepholePass
Distance : 29

101
Tree	file
Code	file
Distance : 29

102
Tree	ArrayFieldVector
Code	ArrayFieldVector
Distance : 29

103
Tree	Float
Code	Float
Distance : 29

104
Tree	FieldMatrix
Code	FieldMatrix
Distance : 29

105
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 29

106
Tree	MatrixUtils
Code	MatrixUtils
Distance : 29

107
Tree	static
Code	static
Distance : 29

108
Tree	calendar
Code	calendar
Distance : 29

109
Tree	OffsetDateTimeField
Code	OffsetDateTimeField
Distance : 29

110
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 29

111
Tree	strategy
Code	strategy
Distance : 29

112
Tree	FlowScope
Code	FlowScope
Distance : 29

113
Tree	FieldBracketingNthOrderBrentSolver
Code	FieldBracketingNthOrderBrentSolver
Distance : 29

114
Tree	Circle
Code	Circle
Distance : 29

115
Tree	ofCartesian
Code	ofCartesian
Distance : 29

116
Tree	RegionFactory
Code	RegionFactory
Distance : 29

117
Tree	ScopeCreator
Code	ScopeCreator
Distance : 29

118
Tree	throw
Code	throw
Distance : 29

119
Tree	EnvTypePair
Code	EnvTypePair
Distance : 29

120
Tree	DefaultBoxAndWhiskerCategoryDataset
Code	DefaultBoxAndWhiskerCategoryDataset
Distance : 29

121
Tree	ParseBucket
Code	ParseBucket
Distance : 29

122
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 29

123
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 29

124
Tree	int
Code	int
Distance : 29

125
Tree	Period
Code	Period
Distance : 29

126
Tree	Complex
Code	Complex
Distance : 29

127
Tree	NodeTraversal
Code	NodeTraversal
Distance : 29

128
Tree	TransformUtils
Code	TransformUtils
Distance : 29

129
Tree	builder
Code	builder
Distance : 29

130
Tree	RealMatrix
Code	RealMatrix
Distance : 29

131
Tree	FunctionEvaluationException
Code	FunctionEvaluationException
Distance : 29

132
Tree	Args
Code	Args
Distance : 29

133
Tree	FieldUtils
Code	FieldUtils
Distance : 29

134
Tree	FastMath
Code	FastMath
Distance : 29

135
Tree	FieldRotation
Code	FieldRotation
Distance : 29

136
Tree	testTypes
Code	testTypes
Distance : 29

137
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 29

138
Tree	standardDeviation
Code	standardDeviation
Distance : 29

139
Tree	return
Code	return
Distance : 29

140
Tree	double
Code	double
Distance : 29

141
Tree	mockitoStubber
Code	mockitoStubber
Distance : 29

142
Tree	PeriodFormatter
Code	PeriodFormatter
Distance : 29

143
Tree	void
Code	void
Distance : 29

144
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 29

145
Tree	MethodInterceptorFilter
Code	MethodInterceptorFilter
Distance : 29

146
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 29

147
Tree	MockControl
Code	MockControl
Distance : 29

148
Tree	ScopeScanner
Code	ScopeScanner
Distance : 29

149
Tree	assertFalse
Code	assertFalse
Distance : 29

150
Tree	<
Code	<
Distance : 29

151
Tree	left
Code	left
Distance : 29

152
Tree	s
Code	s
Distance : 29

153
Tree	SlidingCategoryDataset
Code	SlidingCategoryDataset
Distance : 29

154
Tree	crossP
Code	crossP
Distance : 29

155
Tree	rightType
Code	rightType
Distance : 29

156
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 29

157
Tree	ArgumentCaptor
Code	ArgumentCaptor
Distance : 29

158
Tree	nordsieck
Code	nordsieck
Distance : 29

159
Tree	iChronology
Code	iChronology
Distance : 29

160
Tree	Equals
Code	Equals
Distance : 29

161
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 29

162
Tree	OngoingStubbingImpl
Code	OngoingStubbingImpl
Distance : 29

163
Tree	ChartPanel
Code	ChartPanel
Distance : 29

164
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 29

165
Tree	TypedScopeCreator
Code	TypedScopeCreator
Distance : 29

166
Tree	step
Code	step
Distance : 29

167
Tree	verifier
Code	verifier
Distance : 29

168
Tree	DerivativeStructure
Code	DerivativeStructure
Distance : 29

169
Tree	ArithmeticUtils
Code	ArithmeticUtils
Distance : 29

170
Tree	false
Code	false
Distance : 29

171
Tree	DateFormatSymbols
Code	DateFormatSymbols
Distance : 29

172
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 29

173
Tree	process
Code	process
Distance : 29

174
Tree	penalty
Code	penalty
Distance : 29

175
Tree	case
Code	case
Distance : 29

176
Tree	text
Code	text
Distance : 29

177
Tree	testEs6
Code	testEs6
Distance : 29

178
Tree	+=
Code	+=
Distance : 29

179
Tree	Array2DRowFieldMatrix
Code	Array2DRowFieldMatrix
Distance : 29

180
Tree	scale
Code	scale
Distance : 29

181
Tree	Math
Code	Math
Distance : 29

182
Tree	(
Code	(
Distance : 28

183
Tree	HashUtils
Code	HashUtils
Distance : 29

184
Tree	BetaDistribution
Code	BetaDistribution
Distance : 29

185
Tree	Color
Code	Color
Distance : 29

186
Tree	FieldVector
Code	FieldVector
Distance : 29

187
Tree	File
Code	File
Distance : 29

188
Tree	byte
Code	byte
Distance : 29

189
Tree	!
Code	!
Distance : 29

190
Tree	setField
Code	setField
Distance : 29

191
Tree	MatrixSeriesCollection
Code	MatrixSeriesCollection
Distance : 29

192
Tree	disableStrictMissingPropertyChecks
Code	disableStrictMissingPropertyChecks
Distance : 29

193
Tree	c
Code	c
Distance : 29

194
Tree	OpenIntToFieldHashMap
Code	OpenIntToFieldHashMap
Distance : 29

195
Tree	MockUtil
Code	MockUtil
Distance : 29

196
Tree	dev
Code	dev
Distance : 29

197
Tree	traverseEs6
Code	traverseEs6
Distance : 29

198
Tree	DateTimeParser
Code	DateTimeParser
Distance : 29

199
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 29

========================================================================


========================================================================
Example Number: 109
Parent Code is: 
join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
-------------------------------------------------------------------------------
Child code is: 
join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () , scenario )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (800{val=scenario}) (215{val=)})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=safelyGetMockName}) (214{val=(}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (800{val=scenario}) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/4/parent/src_org_mockito_exceptions_Reporter.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

1
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

2
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 3

3
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

4
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

5
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 4

6
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

7
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

8
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

9
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

10
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

11
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

12
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 4

13
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

14
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

15
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

16
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

17
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 5

18
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

19
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

20
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

21
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

22
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

23
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

24
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

25
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

26
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

27
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

28
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

29
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

30
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

31
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

32
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

33
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

34
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

35
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

36
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

37
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

38
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

39
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

40
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

41
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

42
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

43
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

44
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

45
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

46
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

47
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

48
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

49
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

50
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

51
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

52
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

53
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

54
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

55
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

56
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 5

57
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

58
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

59
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

60
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 8

61
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 6

62
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

63
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

64
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 6

65
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

66
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

67
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

68
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 4

69
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

70
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

71
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

72
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

73
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

74
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 7

75
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

76
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

77
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 5

78
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 4

79
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 6

80
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

81
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 5

82
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

83
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

84
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

85
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

86
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 6

87
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

88
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 6

89
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

90
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 6

91
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 5

92
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 6

93
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

94
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

95
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 4

96
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 5

97
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

98
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 7

99
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 7

100
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 5

101
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

102
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 7

103
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

104
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

105
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

106
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

107
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 7

108
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 5

109
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

110
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 5

111
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 8

112
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

113
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 5

114
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

115
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 6

116
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 6

117
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

118
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 6

119
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 5

120
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 6

121
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 7

122
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

123
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 6

124
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 6

125
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

126
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

127
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 6

128
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 7

129
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

130
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 7

131
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 6

132
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

133
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 7

134
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 6

135
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 7

136
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 5

137
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 8

138
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 7

139
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 7

140
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 5

141
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 6

142
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 5

143
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 8

144
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 6

145
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 7

146
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

147
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , scenario )
Distance : 5

148
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

149
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 6

150
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 8

151
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 6

152
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 7

153
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 7

154
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 6

155
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 6

156
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 7

157
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 7

158
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 7

159
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 7

160
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , scenario )
Distance : 6

161
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . getMock () , scenario )
Distance : 5

162
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

163
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 7

164
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 8

165
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 7

166
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 5

167
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 8

168
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getMock () , scenario )
Distance : 6

169
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 6

170
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

171
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 8

172
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 6

173
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 8

174
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 6

175
Tree	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getMock ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

176
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 8

177
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 6

178
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 6

179
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 9

180
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , scenario . getMock () , scenario )
Distance : 7

181
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getMock () , scenario )
Distance : 4

182
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , undesired . join () , scenario )
Distance : 6

183
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . safelyGetMockName () , scenario )
Distance : 7

184
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . join () , undesired )
Distance : 7

185
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , undesired . getMock () , scenario )
Distance : 5

186
Tree	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	getLocation ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 7

187
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 8

188
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 7

189
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . safelyGetMockName () + STRING_CONSTANT , undesired . safelyGetMockName () , scenario )
Distance : 7

190
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getLocation () + STRING_CONSTANT , undesired . safelyGetMockName () , undesired )
Distance : 8

191
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . safelyGetMockName () , undesired )
Distance : 7

192
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 7

193
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , scenario . getMock () , scenario )
Distance : 5

194
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . safelyGetMockName () + STRING_CONSTANT , scenario . join () , scenario )
Distance : 7

195
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . join () , undesired )
Distance : 8

196
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getLocation () + STRING_CONSTANT , scenario . getMock () , scenario )
Distance : 6

197
Tree	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getMock () , scenario )
Code	join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + scenario . getMock () + STRING_CONSTANT , scenario . getMock () , scenario )
Distance : 6

198
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , undesired . getLocation () , undesired )
Distance : 6

199
Tree	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Code	safelyGetMockName ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . join () + STRING_CONSTANT , scenario . getLocation () , undesired )
Distance : 7

========================================================================


========================================================================
Example Number: 110
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 111
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 112
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 113
Parent Code is: 
long result = iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
long result = iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=result}) (204{val==}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=result}) (204{val==}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	int instant = iZone . convertLocalToUTC ( instant , false ) ;
Code	int instant = iZone . convertLocalToUTC ( instant , false ) ;
Distance : 5

1
Tree	super ( iZone , iZone , default: , true ) ;
Code	super ( iZone , iZone , default: , true ) ;
Distance : 9

2
Tree	super ( localInstant , result , super(); , true ) ;
Code	super ( localInstant , result , super(); , true ) ;
Distance : 10

3
Tree	super ( iZone , result , return; , false ) ;
Code	super ( iZone , result , return; , false ) ;
Distance : 9

4
Tree	super ( iZone , iZone , break; , true ) ;
Code	super ( iZone , iZone , break; , true ) ;
Distance : 9

5
Tree	super ( result , instant , default: , false ) ;
Code	super ( result , instant , default: , false ) ;
Distance : 10

6
Tree	super ( iZone , result , continue; , false ) ;
Code	super ( iZone , result , continue; , false ) ;
Distance : 9

7
Tree	super ( iZone , iZone , return; , true ) ;
Code	super ( iZone , iZone , return; , true ) ;
Distance : 9

8
Tree	super ( result , instant , break; , false ) ;
Code	super ( result , instant , break; , false ) ;
Distance : 10

9
Tree	super ( iZone , iZone , continue; , true ) ;
Code	super ( iZone , iZone , continue; , true ) ;
Distance : 9

10
Tree	super ( result , instant , return; , false ) ;
Code	super ( result , instant , return; , false ) ;
Distance : 10

11
Tree	super ( result , iZone , default: , false ) ;
Code	super ( result , iZone , default: , false ) ;
Distance : 9

12
Tree	super ( localInstant , result , default: , true ) ;
Code	super ( localInstant , result , default: , true ) ;
Distance : 10

13
Tree	super ( result , instant , continue; , false ) ;
Code	super ( result , instant , continue; , false ) ;
Distance : 10

14
Tree	super ( iZone , localInstant , super(); , true ) ;
Code	super ( iZone , localInstant , super(); , true ) ;
Distance : 8

15
Tree	super ( instant , result , super(); , true ) ;
Code	super ( instant , result , super(); , true ) ;
Distance : 10

16
Tree	super ( localInstant , result , break; , true ) ;
Code	super ( localInstant , result , break; , true ) ;
Distance : 10

17
Tree	super ( result , iZone , break; , false ) ;
Code	super ( result , iZone , break; , false ) ;
Distance : 9

18
Tree	super ( result , iZone , return; , false ) ;
Code	super ( result , iZone , return; , false ) ;
Distance : 9

19
Tree	super ( localInstant , result , return; , true ) ;
Code	super ( localInstant , result , return; , true ) ;
Distance : 10

20
Tree	super ( localInstant , result , continue; , true ) ;
Code	super ( localInstant , result , continue; , true ) ;
Distance : 10

21
Tree	super ( result , iZone , continue; , false ) ;
Code	super ( result , iZone , continue; , false ) ;
Distance : 9

22
Tree	super ( iZone , instant , continue; , true ) ;
Code	super ( iZone , instant , continue; , true ) ;
Distance : 9

23
Tree	super ( result , localInstant , super(); , false ) ;
Code	super ( result , localInstant , super(); , false ) ;
Distance : 9

24
Tree	super ( iZone , result , break; , false ) ;
Code	super ( iZone , result , break; , false ) ;
Distance : 9

25
Tree	super ( iZone , instant , return; , true ) ;
Code	super ( iZone , instant , return; , true ) ;
Distance : 9

26
Tree	super ( iZone , localInstant , continue; , false ) ;
Code	super ( iZone , localInstant , continue; , false ) ;
Distance : 8

27
Tree	super ( instant , result , continue; , false ) ;
Code	super ( instant , result , continue; , false ) ;
Distance : 10

28
Tree	super ( instant , iZone , return; , true ) ;
Code	super ( instant , iZone , return; , true ) ;
Distance : 10

29
Tree	super ( instant , iZone , continue; , true ) ;
Code	super ( instant , iZone , continue; , true ) ;
Distance : 10

30
Tree	super ( instant , localInstant , super(); , true ) ;
Code	super ( instant , localInstant , super(); , true ) ;
Distance : 9

31
Tree	super ( localInstant , localInstant , default: , true ) ;
Code	super ( localInstant , localInstant , default: , true ) ;
Distance : 9

32
Tree	super ( iZone , instant , super(); , true ) ;
Code	super ( iZone , instant , super(); , true ) ;
Distance : 9

33
Tree	super ( localInstant , localInstant , break; , true ) ;
Code	super ( localInstant , localInstant , break; , true ) ;
Distance : 9

34
Tree	super ( iZone , result , super(); , false ) ;
Code	super ( iZone , result , super(); , false ) ;
Distance : 9

35
Tree	super ( localInstant , localInstant , return; , true ) ;
Code	super ( localInstant , localInstant , return; , true ) ;
Distance : 9

36
Tree	super ( localInstant , localInstant , continue; , true ) ;
Code	super ( localInstant , localInstant , continue; , true ) ;
Distance : 9

37
Tree	super ( iZone , iZone , super(); , true ) ;
Code	super ( iZone , iZone , super(); , true ) ;
Distance : 9

38
Tree	super ( instant , localInstant , default: , true ) ;
Code	super ( instant , localInstant , default: , true ) ;
Distance : 9

39
Tree	super ( result , localInstant , null , true ) ;
Code	super ( result , localInstant , null , true ) ;
Distance : 9

40
Tree	super ( result , instant , super(); , false ) ;
Code	super ( result , instant , super(); , false ) ;
Distance : 10

41
Tree	super ( instant , localInstant , break; , true ) ;
Code	super ( instant , localInstant , break; , true ) ;
Distance : 9

42
Tree	super ( iZone , instant , default: , true ) ;
Code	super ( iZone , instant , default: , true ) ;
Distance : 9

43
Tree	super ( iZone , instant , break; , true ) ;
Code	super ( iZone , instant , break; , true ) ;
Distance : 9

44
Tree	super ( instant , localInstant , return; , true ) ;
Code	super ( instant , localInstant , return; , true ) ;
Distance : 9

45
Tree	super ( iZone , result , default: , false ) ;
Code	super ( iZone , result , default: , false ) ;
Distance : 9

46
Tree	super ( instant , localInstant , continue; , true ) ;
Code	super ( instant , localInstant , continue; , true ) ;
Distance : 9

47
Tree	super ( result , iZone , super(); , false ) ;
Code	super ( result , iZone , super(); , false ) ;
Distance : 9

48
Tree	super ( instant , result , return; , false ) ;
Code	super ( instant , result , return; , false ) ;
Distance : 10

49
Tree	super ( result , result , null , true ) ;
Code	super ( result , result , null , true ) ;
Distance : 10

50
Tree	super ( instant , result , default: , true ) ;
Code	super ( instant , result , default: , true ) ;
Distance : 10

51
Tree	super ( result , iZone , break; , true ) ;
Code	super ( result , iZone , break; , true ) ;
Distance : 9

52
Tree	super ( result , result , return; , false ) ;
Code	super ( result , result , return; , false ) ;
Distance : 10

53
Tree	super ( result , result , continue; , false ) ;
Code	super ( result , result , continue; , false ) ;
Distance : 10

54
Tree	super ( result , iZone , return; , true ) ;
Code	super ( result , iZone , return; , true ) ;
Distance : 9

55
Tree	super ( result , iZone , continue; , true ) ;
Code	super ( result , iZone , continue; , true ) ;
Distance : 9

56
Tree	super ( result , localInstant , super(); , true ) ;
Code	super ( result , localInstant , super(); , true ) ;
Distance : 9

57
Tree	super ( result , localInstant , default: , true ) ;
Code	super ( result , localInstant , default: , true ) ;
Distance : 9

58
Tree	super ( result , localInstant , break; , true ) ;
Code	super ( result , localInstant , break; , true ) ;
Distance : 9

59
Tree	super ( result , localInstant , return; , true ) ;
Code	super ( result , localInstant , return; , true ) ;
Distance : 9

60
Tree	super ( result , localInstant , continue; , true ) ;
Code	super ( result , localInstant , continue; , true ) ;
Distance : 9

61
Tree	super ( result , result , super(); , true ) ;
Code	super ( result , result , super(); , true ) ;
Distance : 10

62
Tree	super ( result , result , default: , true ) ;
Code	super ( result , result , default: , true ) ;
Distance : 10

63
Tree	super ( result , result , break; , true ) ;
Code	super ( result , result , break; , true ) ;
Distance : 10

64
Tree	super ( result , result , return; , true ) ;
Code	super ( result , result , return; , true ) ;
Distance : 10

65
Tree	super ( result , result , continue; , true ) ;
Code	super ( result , result , continue; , true ) ;
Distance : 10

66
Tree	super ( localInstant , instant , null , false ) ; )
Code	super ( localInstant , instant , null , false ) ; )
Distance : 11

67
Tree	super ( localInstant , instant , null , false ) ; <blank>
Code	super ( localInstant , instant , null , false ) ; <blank>
Distance : 11

68
Tree	super ( localInstant , instant , null , false ) ; ;
Code	super ( localInstant , instant , null , false ) ; ;
Distance : 11

69
Tree	byte localInstant = iZone . convertLocalToUTC ( localInstant , false ) ;
Code	byte localInstant = iZone . convertLocalToUTC ( localInstant , false ) ;
Distance : 4

70
Tree	super ( localInstant , instant , null , false ) ; =
Code	super ( localInstant , instant , null , false ) ; =
Distance : 11

71
Tree	super ( localInstant , instant , null , false ) ; <s>
Code	super ( localInstant , instant , null , false ) ; <s>
Distance : 11

72
Tree	super ( result , result , break; , false ) ;
Code	super ( result , result , break; , false ) ;
Distance : 10

73
Tree	super ( iZone , localInstant , default: , true ) ;
Code	super ( iZone , localInstant , default: , true ) ;
Distance : 8

74
Tree	super ( result , iZone , default: , true ) ;
Code	super ( result , iZone , default: , true ) ;
Distance : 9

75
Tree	super ( result , instant , return; , true ) ;
Code	super ( result , instant , return; , true ) ;
Distance : 10

76
Tree	super ( iZone , localInstant , break; , true ) ;
Code	super ( iZone , localInstant , break; , true ) ;
Distance : 8

77
Tree	super ( instant , result , break; , true ) ;
Code	super ( instant , result , break; , true ) ;
Distance : 10

78
Tree	super ( iZone , localInstant , return; , true ) ;
Code	super ( iZone , localInstant , return; , true ) ;
Distance : 8

79
Tree	super ( instant , result , return; , true ) ;
Code	super ( instant , result , return; , true ) ;
Distance : 10

80
Tree	super ( iZone , localInstant , continue; , true ) ;
Code	super ( iZone , localInstant , continue; , true ) ;
Distance : 8

81
Tree	super ( instant , result , continue; , true ) ;
Code	super ( instant , result , continue; , true ) ;
Distance : 10

82
Tree	super ( result , localInstant , default: , false ) ;
Code	super ( result , localInstant , default: , false ) ;
Distance : 9

83
Tree	super ( result , localInstant , break; , false ) ;
Code	super ( result , localInstant , break; , false ) ;
Distance : 9

84
Tree	super ( result , localInstant , return; , false ) ;
Code	super ( result , localInstant , return; , false ) ;
Distance : 9

85
Tree	super ( result , localInstant , continue; , false ) ;
Code	super ( result , localInstant , continue; , false ) ;
Distance : 9

86
Tree	super ( iZone , result , super(); , true ) ;
Code	super ( iZone , result , super(); , true ) ;
Distance : 9

87
Tree	super ( result , instant , super(); , true ) ;
Code	super ( result , instant , super(); , true ) ;
Distance : 10

88
Tree	super ( iZone , result , default: , true ) ;
Code	super ( iZone , result , default: , true ) ;
Distance : 9

89
Tree	super ( result , result , super(); , false ) ;
Code	super ( result , result , super(); , false ) ;
Distance : 10

90
Tree	super ( iZone , result , break; , true ) ;
Code	super ( iZone , result , break; , true ) ;
Distance : 9

91
Tree	super ( result , iZone , super(); , true ) ;
Code	super ( result , iZone , super(); , true ) ;
Distance : 9

92
Tree	super ( iZone , result , return; , true ) ;
Code	super ( iZone , result , return; , true ) ;
Distance : 9

93
Tree	super ( iZone , result , continue; , true ) ;
Code	super ( iZone , result , continue; , true ) ;
Distance : 9

94
Tree	super ( result , instant , default: , true ) ;
Code	super ( result , instant , default: , true ) ;
Distance : 10

95
Tree	super ( result , instant , break; , true ) ;
Code	super ( result , instant , break; , true ) ;
Distance : 10

96
Tree	super ( result , result , default: , false ) ;
Code	super ( result , result , default: , false ) ;
Distance : 10

97
Tree	super ( result , instant , continue; , true ) ;
Code	super ( result , instant , continue; , true ) ;
Distance : 10

98
Tree	super ( localInstant , instant , null , false ) ; (
Code	super ( localInstant , instant , null , false ) ; (
Distance : 11

99
Tree	super ( iZone , localInstant , return; , false ) ;
Code	super ( iZone , localInstant , return; , false ) ;
Distance : 8

100
Tree	super ( instant , result , break; , false ) ;
Code	super ( instant , result , break; , false ) ;
Distance : 10

101
Tree	super ( localInstant , iZone , default: , false ) ;
Code	super ( localInstant , iZone , default: , false ) ;
Distance : 10

102
Tree	super ( result , instant , null , false ) ;
Code	super ( result , instant , null , false ) ;
Distance : 10

103
Tree	super ( instant , instant , default: , false ) ;
Code	super ( instant , instant , default: , false ) ;
Distance : 10

104
Tree	super ( localInstant , instant , continue; , false ) ;
Code	super ( localInstant , instant , continue; , false ) ;
Distance : 10

105
Tree	super ( localInstant , iZone , break; , false ) ;
Code	super ( localInstant , iZone , break; , false ) ;
Distance : 10

106
Tree	super ( instant , instant , break; , false ) ;
Code	super ( instant , instant , break; , false ) ;
Distance : 10

107
Tree	super ( localInstant , iZone , return; , false ) ;
Code	super ( localInstant , iZone , return; , false ) ;
Distance : 10

108
Tree	super ( instant , instant , return; , false ) ;
Code	super ( instant , instant , return; , false ) ;
Distance : 10

109
Tree	super ( result , iZone , null , false ) ;
Code	super ( result , iZone , null , false ) ;
Distance : 9

110
Tree	super ( localInstant , iZone , continue; , false ) ;
Code	super ( localInstant , iZone , continue; , false ) ;
Distance : 10

111
Tree	super ( instant , iZone , default: , false ) ;
Code	super ( instant , iZone , default: , false ) ;
Distance : 10

112
Tree	super ( instant , instant , continue; , false ) ;
Code	super ( instant , instant , continue; , false ) ;
Distance : 10

113
Tree	super ( localInstant , result , null , true ) ;
Code	super ( localInstant , result , null , true ) ;
Distance : 10

114
Tree	super ( localInstant , localInstant , super(); , false ) ;
Code	super ( localInstant , localInstant , super(); , false ) ;
Distance : 9

115
Tree	super ( instant , iZone , break; , false ) ;
Code	super ( instant , iZone , break; , false ) ;
Distance : 10

116
Tree	super ( instant , iZone , return; , false ) ;
Code	super ( instant , iZone , return; , false ) ;
Distance : 10

117
Tree	super ( instant , iZone , continue; , false ) ;
Code	super ( instant , iZone , continue; , false ) ;
Distance : 10

118
Tree	super ( instant , localInstant , super(); , false ) ;
Code	super ( instant , localInstant , super(); , false ) ;
Distance : 9

119
Tree	super ( localInstant , localInstant , default: , false ) ;
Code	super ( localInstant , localInstant , default: , false ) ;
Distance : 9

120
Tree	super ( iZone , localInstant , null , true ) ;
Code	super ( iZone , localInstant , null , true ) ;
Distance : 8

121
Tree	super ( instant , result , null , true ) ;
Code	super ( instant , result , null , true ) ;
Distance : 10

122
Tree	super ( localInstant , instant , return; , false ) ;
Code	super ( localInstant , instant , return; , false ) ;
Distance : 10

123
Tree	super ( iZone , instant , super(); , false ) ;
Code	super ( iZone , instant , super(); , false ) ;
Distance : 9

124
Tree	super ( iZone , iZone , null , true ) ;
Code	super ( iZone , iZone , null , true ) ;
Distance : 9

125
Tree	super ( localInstant , instant , break; , false ) ;
Code	super ( localInstant , instant , break; , false ) ;
Distance : 10

126
Tree	super ( instant , instant , null , false ) ;
Code	super ( instant , instant , null , false ) ;
Distance : 10

127
Tree	super ( instant , iZone , null , false ) ;
Code	super ( instant , iZone , null , false ) ;
Distance : 10

128
Tree	super ( localInstant , localInstant , null , false ) ;
Code	super ( localInstant , localInstant , null , false ) ;
Distance : 9

129
Tree	super ( instant , localInstant , null , false ) ;
Code	super ( instant , localInstant , null , false ) ;
Distance : 9

130
Tree	super ( iZone , instant , null , false ) ;
Code	super ( iZone , instant , null , false ) ;
Distance : 9

131
Tree	super ( iZone , iZone , null , false ) ;
Code	super ( iZone , iZone , null , false ) ;
Distance : 9

132
Tree	super ( localInstant , instant , null , true ) ;
Code	super ( localInstant , instant , null , true ) ;
Distance : 10

133
Tree	super ( localInstant , result , null , false ) ;
Code	super ( localInstant , result , null , false ) ;
Distance : 10

134
Tree	super ( localInstant , iZone , null , true ) ;
Code	super ( localInstant , iZone , null , true ) ;
Distance : 10

135
Tree	super ( instant , instant , null , true ) ;
Code	super ( instant , instant , null , true ) ;
Distance : 10

136
Tree	super ( iZone , localInstant , null , false ) ;
Code	super ( iZone , localInstant , null , false ) ;
Distance : 8

137
Tree	super ( instant , result , null , false ) ;
Code	super ( instant , result , null , false ) ;
Distance : 10

138
Tree	super ( instant , iZone , null , true ) ;
Code	super ( instant , iZone , null , true ) ;
Distance : 10

139
Tree	super ( localInstant , localInstant , null , true ) ;
Code	super ( localInstant , localInstant , null , true ) ;
Distance : 9

140
Tree	super ( localInstant , instant , super(); , false ) ;
Code	super ( localInstant , instant , super(); , false ) ;
Distance : 10

141
Tree	super ( instant , localInstant , null , true ) ;
Code	super ( instant , localInstant , null , true ) ;
Distance : 9

142
Tree	super ( localInstant , iZone , super(); , false ) ;
Code	super ( localInstant , iZone , super(); , false ) ;
Distance : 10

143
Tree	super ( instant , instant , super(); , false ) ;
Code	super ( instant , instant , super(); , false ) ;
Distance : 10

144
Tree	super ( iZone , instant , null , true ) ;
Code	super ( iZone , instant , null , true ) ;
Distance : 9

145
Tree	super ( localInstant , instant , default: , false ) ;
Code	super ( localInstant , instant , default: , false ) ;
Distance : 10

146
Tree	super ( iZone , result , null , false ) ;
Code	super ( iZone , result , null , false ) ;
Distance : 9

147
Tree	super ( instant , iZone , super(); , false ) ;
Code	super ( instant , iZone , super(); , false ) ;
Distance : 10

148
Tree	super ( instant , iZone , break; , true ) ;
Code	super ( instant , iZone , break; , true ) ;
Distance : 10

149
Tree	super ( localInstant , localInstant , break; , false ) ;
Code	super ( localInstant , localInstant , break; , false ) ;
Distance : 9

150
Tree	super ( result , localInstant , null , false ) ;
Code	super ( result , localInstant , null , false ) ;
Distance : 9

151
Tree	super ( localInstant , instant , continue; , true ) ;
Code	super ( localInstant , instant , continue; , true ) ;
Distance : 10

152
Tree	super ( instant , iZone , super(); , true ) ;
Code	super ( instant , iZone , super(); , true ) ;
Distance : 10

153
Tree	super ( localInstant , result , break; , false ) ;
Code	super ( localInstant , result , break; , false ) ;
Distance : 10

154
Tree	super ( localInstant , iZone , default: , true ) ;
Code	super ( localInstant , iZone , default: , true ) ;
Distance : 10

155
Tree	super ( instant , instant , default: , true ) ;
Code	super ( instant , instant , default: , true ) ;
Distance : 10

156
Tree	super ( localInstant , result , return; , false ) ;
Code	super ( localInstant , result , return; , false ) ;
Distance : 10

157
Tree	super ( result , instant , null , true ) ;
Code	super ( result , instant , null , true ) ;
Distance : 10

158
Tree	super ( localInstant , iZone , break; , true ) ;
Code	super ( localInstant , iZone , break; , true ) ;
Distance : 10

159
Tree	super ( localInstant , result , continue; , false ) ;
Code	super ( localInstant , result , continue; , false ) ;
Distance : 10

160
Tree	super ( instant , instant , break; , true ) ;
Code	super ( instant , instant , break; , true ) ;
Distance : 10

161
Tree	super ( result , result , null , false ) ;
Code	super ( result , result , null , false ) ;
Distance : 10

162
Tree	super ( localInstant , iZone , return; , true ) ;
Code	super ( localInstant , iZone , return; , true ) ;
Distance : 10

163
Tree	super ( localInstant , iZone , continue; , true ) ;
Code	super ( localInstant , iZone , continue; , true ) ;
Distance : 10

164
Tree	super ( instant , instant , return; , true ) ;
Code	super ( instant , instant , return; , true ) ;
Distance : 10

165
Tree	super ( iZone , localInstant , default: , false ) ;
Code	super ( iZone , localInstant , default: , false ) ;
Distance : 8

166
Tree	super ( instant , result , default: , false ) ;
Code	super ( instant , result , default: , false ) ;
Distance : 10

167
Tree	super ( instant , instant , continue; , true ) ;
Code	super ( instant , instant , continue; , true ) ;
Distance : 10

168
Tree	super ( result , iZone , null , true ) ;
Code	super ( result , iZone , null , true ) ;
Distance : 9

169
Tree	super ( instant , iZone , default: , true ) ;
Code	super ( instant , iZone , default: , true ) ;
Distance : 10

170
Tree	super ( iZone , localInstant , break; , false ) ;
Code	super ( iZone , localInstant , break; , false ) ;
Distance : 8

171
Tree	super ( localInstant , localInstant , super(); , true ) ;
Code	super ( localInstant , localInstant , super(); , true ) ;
Distance : 9

172
Tree	super ( localInstant , instant , return; , true ) ;
Code	super ( localInstant , instant , return; , true ) ;
Distance : 10

173
Tree	super ( localInstant , localInstant , return; , false ) ;
Code	super ( localInstant , localInstant , return; , false ) ;
Distance : 9

174
Tree	super ( instant , result , super(); , false ) ;
Code	super ( instant , result , super(); , false ) ;
Distance : 10

175
Tree	super ( localInstant , result , default: , false ) ;
Code	super ( localInstant , result , default: , false ) ;
Distance : 10

176
Tree	super ( localInstant , localInstant , continue; , false ) ;
Code	super ( localInstant , localInstant , continue; , false ) ;
Distance : 9

177
Tree	super ( instant , localInstant , default: , false ) ;
Code	super ( instant , localInstant , default: , false ) ;
Distance : 9

178
Tree	super ( iZone , iZone , super(); , false ) ;
Code	super ( iZone , iZone , super(); , false ) ;
Distance : 9

179
Tree	super ( instant , localInstant , break; , false ) ;
Code	super ( instant , localInstant , break; , false ) ;
Distance : 9

180
Tree	super ( iZone , instant , default: , false ) ;
Code	super ( iZone , instant , default: , false ) ;
Distance : 9

181
Tree	super ( instant , localInstant , return; , false ) ;
Code	super ( instant , localInstant , return; , false ) ;
Distance : 9

182
Tree	super ( instant , localInstant , continue; , false ) ;
Code	super ( instant , localInstant , continue; , false ) ;
Distance : 9

183
Tree	super ( localInstant , instant , super(); , true ) ;
Code	super ( localInstant , instant , super(); , true ) ;
Distance : 10

184
Tree	super ( iZone , instant , break; , false ) ;
Code	super ( iZone , instant , break; , false ) ;
Distance : 9

185
Tree	super ( localInstant , result , super(); , false ) ;
Code	super ( localInstant , result , super(); , false ) ;
Distance : 10

186
Tree	super ( iZone , instant , return; , false ) ;
Code	super ( iZone , instant , return; , false ) ;
Distance : 9

187
Tree	super ( iZone , iZone , default: , false ) ;
Code	super ( iZone , iZone , default: , false ) ;
Distance : 9

188
Tree	super ( iZone , instant , continue; , false ) ;
Code	super ( iZone , instant , continue; , false ) ;
Distance : 9

189
Tree	super ( localInstant , iZone , super(); , true ) ;
Code	super ( localInstant , iZone , super(); , true ) ;
Distance : 10

190
Tree	super ( iZone , iZone , break; , false ) ;
Code	super ( iZone , iZone , break; , false ) ;
Distance : 9

191
Tree	super ( instant , instant , super(); , true ) ;
Code	super ( instant , instant , super(); , true ) ;
Distance : 10

192
Tree	super ( iZone , iZone , return; , false ) ;
Code	super ( iZone , iZone , return; , false ) ;
Distance : 9

193
Tree	super ( localInstant , instant , default: , true ) ;
Code	super ( localInstant , instant , default: , true ) ;
Distance : 10

194
Tree	super ( iZone , iZone , continue; , false ) ;
Code	super ( iZone , iZone , continue; , false ) ;
Distance : 9

195
Tree	super ( iZone , result , null , true ) ;
Code	super ( iZone , result , null , true ) ;
Distance : 9

196
Tree	super ( localInstant , instant , break; , true ) ;
Code	super ( localInstant , instant , break; , true ) ;
Distance : 10

197
Tree	super ( iZone , localInstant , super(); , false ) ;
Code	super ( iZone , localInstant , super(); , false ) ;
Distance : 8

198
Tree	super ( localInstant , instant , null , false ) ; .
Code	super ( localInstant , instant , null , false ) ; .
Distance : 11

199
Tree	super ( localInstant , instant , null , false ) ;
Code	super ( localInstant , instant , null , false ) ;
Distance : 10

========================================================================


========================================================================
Example Number: 114
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 115
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 116
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	return
Code	return
Distance : 11

1
Tree	return mode ;
Code	return mode ;
Distance : 10

2
Tree	ChartPanel
Code	ChartPanel
Distance : 12

3
Tree	iOffsetParsed
Code	iOffsetParsed
Distance : 12

4
Tree	getEndMillis
Code	getEndMillis
Distance : 12

5
Tree	iValues
Code	iValues
Distance : 12

6
Tree	<
Code	<
Distance : 12

7
Tree	return EscapeUtils ;
Code	return EscapeUtils ;
Distance : 10

8
Tree	ParseBucket
Code	ParseBucket
Distance : 12

9
Tree	DateTimeField
Code	DateTimeField
Distance : 12

10
Tree	globalScope
Code	globalScope
Distance : 12

11
Tree	MathUserException
Code	MathUserException
Distance : 12

12
Tree	withChronology
Code	withChronology
Distance : 12

13
Tree	WindNeedle
Code	WindNeedle
Distance : 12

14
Tree	setInterval
Code	setInterval
Distance : 12

15
Tree	CheckLevel.WARNING
Code	CheckLevel.WARNING
Distance : 12

16
Tree	TypedScope
Code	TypedScope
Distance : 12

17
Tree	escape
Code	escape
Distance : 12

18
Tree	return class ;
Code	return class ;
Distance : 10

19
Tree	Chronology
Code	Chronology
Distance : 12

20
Tree	iParser
Code	iParser
Distance : 12

21
Tree	MockCreationSettings
Code	MockCreationSettings
Distance : 12

22
Tree	return maxIterationCount ;
Code	return maxIterationCount ;
Distance : 10

23
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 12

24
Tree	return DurationFieldType ;
Code	return DurationFieldType ;
Distance : 10

25
Tree	return ISODateTimeFormat ;
Code	return ISODateTimeFormat ;
Distance : 10

26
Tree	Period
Code	Period
Distance : 12

27
Tree	PolygonsSet
Code	PolygonsSet
Distance : 12

28
Tree	{
Code	{
Distance : 12

29
Tree	PeriodType
Code	PeriodType
Distance : 12

30
Tree	minutes
Code	minutes
Distance : 12

31
Tree	DefaultMultiValueCategoryDataset
Code	DefaultMultiValueCategoryDataset
Distance : 12

32
Tree	setValues
Code	setValues
Distance : 12

33
Tree	return Period ;
Code	return Period ;
Distance : 10

34
Tree	StringEscapeUtils.UNESCAPE_CSV
Code	StringEscapeUtils.UNESCAPE_CSV
Distance : 12

35
Tree	DateTimeFormatter
Code	DateTimeFormatter
Distance : 12

36
Tree	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Code	PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES
Distance : 12

37
Tree	StackTraceElement
Code	StackTraceElement
Distance : 12

38
Tree	return start ;
Code	return start ;
Distance : 10

39
Tree	updateMinMaxYByIteration
Code	updateMinMaxYByIteration
Distance : 12

40
Tree	StateMaster
Code	StateMaster
Distance : 12

41
Tree	.
Code	.
Distance : 11

42
Tree	JUnitRule
Code	JUnitRule
Distance : 12

43
Tree	UnivariateRealFunction
Code	UnivariateRealFunction
Distance : 12

44
Tree	StatisticalSummary
Code	StatisticalSummary
Distance : 12

45
Tree	equals
Code	equals
Distance : 12

46
Tree	MultipleXYSeriesLabelGenerator
Code	MultipleXYSeriesLabelGenerator
Distance : 12

47
Tree	tester
Code	tester
Distance : 12

48
Tree	values
Code	values
Distance : 12

49
Tree	interpolatedDerivatives
Code	interpolatedDerivatives
Distance : 12

50
Tree	currentModule
Code	currentModule
Distance : 12

51
Tree	return registry ;
Code	return registry ;
Distance : 10

52
Tree	traverse
Code	traverse
Distance : 12

53
Tree	Config.StrictMode
Code	Config.StrictMode
Distance : 12

54
Tree	@
Code	@
Distance : 12

55
Tree	peepholePass
Code	peepholePass
Distance : 12

56
Tree	return TypedScope ;
Code	return TypedScope ;
Distance : 10

57
Tree	str
Code	str
Distance : 12

58
Tree	iInstantConverters
Code	iInstantConverters
Distance : 12

59
Tree	VerificationMode
Code	VerificationMode
Distance : 12

60
Tree	inIncrementalCheckMode
Code	inIncrementalCheckMode
Distance : 12

61
Tree	interpolatedState
Code	interpolatedState
Distance : 12

62
Tree	obtainClassPath
Code	obtainClassPath
Distance : 12

63
Tree	com.google.javascript.jscomp.newtypes.FunctionType
Code	com.google.javascript.jscomp.newtypes.FunctionType
Distance : 12

64
Tree	seriesKey
Code	seriesKey
Distance : 12

65
Tree	getSlot
Code	getSlot
Distance : 12

66
Tree	ParameterizedType
Code	ParameterizedType
Distance : 12

67
Tree	Configuration
Code	Configuration
Distance : 12

68
Tree	setWarningLevel
Code	setWarningLevel
Distance : 12

69
Tree	bucket
Code	bucket
Distance : 12

70
Tree	getDateInstance
Code	getDateInstance
Distance : 12

71
Tree	about
Code	about
Distance : 12

72
Tree	divisor
Code	divisor
Distance : 12

73
Tree	brightnessExponent
Code	brightnessExponent
Distance : 12

74
Tree	J2clEqualitySameRewriterPass
Code	J2clEqualitySameRewriterPass
Distance : 12

75
Tree	dst
Code	dst
Distance : 12

76
Tree	testNoWarning
Code	testNoWarning
Distance : 12

77
Tree	return super(); ;
Code	return super(); ;
Distance : 10

78
Tree	DefaultReturnValuesTest
Code	DefaultReturnValuesTest
Distance : 12

79
Tree	After
Code	After
Distance : 12

80
Tree	invokeSuper
Code	invokeSuper
Distance : 12

81
Tree	returnTypeExpr
Code	returnTypeExpr
Distance : 12

82
Tree	newMessage
Code	newMessage
Distance : 12

83
Tree	hours
Code	hours
Distance : 12

84
Tree	return jUnitRule ;
Code	return jUnitRule ;
Distance : 10

85
Tree	ContinuousOutputFieldModel
Code	ContinuousOutputFieldModel
Distance : 12

86
Tree	return {} ;
Code	return {} ;
Distance : 10

87
Tree	ChronologyType
Code	ChronologyType
Distance : 12

88
Tree	return delegate ;
Code	return delegate ;
Distance : 10

89
Tree	enableTypeCheck
Code	enableTypeCheck
Distance : 12

90
Tree	return minutes ;
Code	return minutes ;
Distance : 10

91
Tree	return CHAR_CONS ;
Code	return CHAR_CONS ;
Distance : 10

92
Tree	ClassImposterizer
Code	ClassImposterizer
Distance : 12

93
Tree	calendar
Code	calendar
Distance : 12

94
Tree	XYAreaRenderer2
Code	XYAreaRenderer2
Distance : 12

95
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 12

96
Tree	hash
Code	hash
Distance : 12

97
Tree	MutableDateTime
Code	MutableDateTime
Distance : 12

98
Tree	EscapeUtils
Code	EscapeUtils
Distance : 12

99
Tree	int
Code	int
Distance : 12

100
Tree	Complex
Code	Complex
Distance : 12

101
Tree	getFragment
Code	getFragment
Distance : 12

102
Tree	allowExternsChanges
Code	allowExternsChanges
Distance : 12

103
Tree	return PeriodType ;
Code	return PeriodType ;
Distance : 10

104
Tree	begin
Code	begin
Distance : 12

105
Tree	return chrono ;
Code	return chrono ;
Distance : 10

106
Tree	return MutablePeriod ;
Code	return MutablePeriod ;
Distance : 10

107
Tree	return offset ;
Code	return offset ;
Distance : 10

108
Tree	jUnitRule
Code	jUnitRule
Distance : 12

109
Tree	InvocationImpl
Code	InvocationImpl
Distance : 12

110
Tree	PhaseOptimizer
Code	PhaseOptimizer
Distance : 12

111
Tree	assertScope
Code	assertScope
Distance : 12

112
Tree	return FieldUtils ;
Code	return FieldUtils ;
Distance : 10

113
Tree	case
Code	case
Distance : 12

114
Tree	false
Code	false
Distance : 11

115
Tree	InputStream
Code	InputStream
Distance : 12

116
Tree	super
Code	super
Distance : 12

117
Tree	return false ;
Code	return false ;
Distance : 9

118
Tree	return cache ;
Code	return cache ;
Distance : 10

119
Tree	this
Code	this
Distance : 12

120
Tree	setField
Code	setField
Distance : 12

121
Tree	MOCKING_PROGRESS
Code	MOCKING_PROGRESS
Distance : 12

122
Tree	new
Code	new
Distance : 12

123
Tree	MutablePeriod
Code	MutablePeriod
Distance : 12

124
Tree	verifyingRecorder
Code	verifyingRecorder
Distance : 12

125
Tree	DateTimeParser
Code	DateTimeParser
Distance : 12

126
Tree	DateTime
Code	DateTime
Distance : 12

127
Tree	MockitoConfiguration
Code	MockitoConfiguration
Distance : 12

128
Tree	checkNotNull
Code	checkNotNull
Distance : 12

129
Tree	cache
Code	cache
Distance : 12

130
Tree	return ? ;
Code	return ? ;
Distance : 10

131
Tree	iZone
Code	iZone
Distance : 11

132
Tree	offset
Code	offset
Distance : 12

133
Tree	return runner ;
Code	return runner ;
Distance : 10

134
Tree	weeks
Code	weeks
Distance : 12

135
Tree	isForward
Code	isForward
Distance : 12

136
Tree	return super ;
Code	return super ;
Distance : 10

137
Tree	that
Code	that
Distance : 12

138
Tree	return this ;
Code	return this ;
Distance : 10

139
Tree	CharSequence
Code	CharSequence
Distance : 12

140
Tree	start
Code	start
Distance : 12

141
Tree	BigRealField
Code	BigRealField
Distance : 12

142
Tree	FieldUtils
Code	FieldUtils
Distance : 12

143
Tree	nom
Code	nom
Distance : 12

144
Tree	return stubber ;
Code	return stubber ;
Distance : 10

145
Tree	setCode
Code	setCode
Distance : 12

146
Tree	types
Code	types
Distance : 12

147
Tree	CrossModuleMethodMotion
Code	CrossModuleMethodMotion
Distance : 12

148
Tree	byte
Code	byte
Distance : 12

149
Tree	getDateTimeInstance
Code	getDateTimeInstance
Distance : 12

150
Tree	parseMillis
Code	parseMillis
Distance : 12

151
Tree	DiffResult
Code	DiffResult
Distance : 12

152
Tree	isSubtype
Code	isSubtype
Distance : 12

153
Tree	VarInfo
Code	VarInfo
Distance : 12

154
Tree	NodeTraversal
Code	NodeTraversal
Distance : 12

155
Tree	SparseFieldMatrix
Code	SparseFieldMatrix
Distance : 12

156
Tree	NormalScopeBuilder
Code	NormalScopeBuilder
Distance : 12

157
Tree	M
Code	M
Distance : 12

158
Tree	BetaDistribution
Code	BetaDistribution
Distance : 12

159
Tree	setCostAccuracy
Code	setCostAccuracy
Distance : 12

160
Tree	EvalMode
Code	EvalMode
Distance : 12

161
Tree	ObjectType
Code	ObjectType
Distance : 12

162
Tree	setStateInitialized
Code	setStateInitialized
Distance : 12

163
Tree	notNull
Code	notNull
Distance : 12

164
Tree	!
Code	!
Distance : 12

165
Tree	TypeI
Code	TypeI
Distance : 12

166
Tree	WelzlEncloser
Code	WelzlEncloser
Distance : 12

167
Tree	return Chronology ;
Code	return Chronology ;
Distance : 10

168
Tree	disableTypeCheck
Code	disableTypeCheck
Distance : 12

169
Tree	IntervalsSet
Code	IntervalsSet
Distance : 12

170
Tree	return case ;
Code	return case ;
Distance : 10

171
Tree	MessageFormat
Code	MessageFormat
Distance : 12

172
Tree	Comparable
Code	Comparable
Distance : 12

173
Tree	Vector3DFormat
Code	Vector3DFormat
Distance : 12

174
Tree	PoissonDistribution
Code	PoissonDistribution
Distance : 12

175
Tree	methodProxy
Code	methodProxy
Distance : 12

176
Tree	buildMessage
Code	buildMessage
Distance : 12

177
Tree	imaginary
Code	imaginary
Distance : 12

178
Tree	setUp
Code	setUp
Distance : 12

179
Tree	domHelperType
Code	domHelperType
Distance : 12

180
Tree	nSteps
Code	nSteps
Distance : 12

181
Tree	SUM
Code	SUM
Distance : 12

182
Tree	if
Code	if
Distance : 12

183
Tree	T
Code	T
Distance : 12

184
Tree	convergence
Code	convergence
Distance : 12

185
Tree	InvocationOnMock
Code	InvocationOnMock
Distance : 12

186
Tree	SphericalPolygonsSet
Code	SphericalPolygonsSet
Distance : 12

187
Tree	getLInfDistance
Code	getLInfDistance
Distance : 12

188
Tree	pair.type
Code	pair.type
Distance : 12

189
Tree	Path
Code	Path
Distance : 12

190
Tree	accum3
Code	accum3
Distance : 12

191
Tree	convId
Code	convId
Distance : 12

192
Tree	printTimeZone
Code	printTimeZone
Distance : 12

193
Tree	LanguageMode
Code	LanguageMode
Distance : 12

194
Tree	reportAnd
Code	reportAnd
Distance : 12

195
Tree	setAcceptedLanguage
Code	setAcceptedLanguage
Distance : 12

196
Tree	testSame
Code	testSame
Distance : 12

197
Tree	FieldODEStateAndDerivative
Code	FieldODEStateAndDerivative
Distance : 12

198
Tree	return GregorianChronology ;
Code	return GregorianChronology ;
Distance : 10

199
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 12

========================================================================


========================================================================
Example Number: 117
Parent Code is: 
Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
-------------------------------------------------------------------------------
Child code is: 
Partial newPartial = new Partial ( newTypes , newValues , iChronology ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Partial})) (59 (800{val=newPartial}) (204{val==}) (14 (304{val=new}) (43 (801{val=Partial})) (214{val=(}) (800{val=iChronology}) (234{val=,}) (800{val=newTypes}) (234{val=,}) (800{val=newValues}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Partial})) (59 (800{val=newPartial}) (204{val==}) (14 (304{val=new}) (43 (801{val=Partial})) (214{val=(}) (800{val=newTypes}) (234{val=,}) (800{val=newValues}) (234{val=,}) (800{val=iChronology}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/4/parent/src_main_java_org_joda_time_Partial.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
decode_res_file : 200
Wrong
========================================================================
False

0
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; c
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; c
Distance : 4

1
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

2
Tree	Partial newValues = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( newValues , newTypes , newValues ) ;
Distance : 4

3
Tree	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

4
Tree	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

5
Tree	Partial iChronology = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 2

6
Tree	Partial iChronology = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 3

7
Tree	Partial iChronology = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , newTypes , newValues ) ;
Distance : 4

8
Tree	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

9
Tree	Partial newValues = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 3

10
Tree	Partial newValues = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 3

11
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 3

12
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

13
Tree	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Distance : 2

14
Tree	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 3

15
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

16
Tree	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

17
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

18
Tree	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

19
Tree	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

20
Tree	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

21
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 3

22
Tree	Partial newValues = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 2

23
Tree	Partial newPartial = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 2

24
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

25
Tree	Partial newPartial = new Partial ( newValues , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , newValues , newValues ) ;
Distance : 2

26
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; field
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; field
Distance : 4

27
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; IllegalArgumentException
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; IllegalArgumentException
Distance : 4

28
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; name
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; name
Distance : 4

29
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; FastMath
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; FastMath
Distance : 4

30
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; reportCodeChange
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; reportCodeChange
Distance : 4

31
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; t
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; t
Distance : 4

32
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; x
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; x
Distance : 4

33
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; invocation
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; invocation
Distance : 4

34
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; parent
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; parent
Distance : 4

35
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; createIllegalArgumentException
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; createIllegalArgumentException
Distance : 4

36
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; fireChangeEvent
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; fireChangeEvent
Distance : 4

37
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; mode
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; mode
Distance : 4

38
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; LINE_JOINER
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; LINE_JOINER
Distance : 4

39
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; str
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; str
Distance : 4

40
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; expected
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; expected
Distance : 4

41
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Object
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Object
Distance : 4

42
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; testSame
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; testSame
Distance : 4

43
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

44
Tree	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

45
Tree	Partial iChronology = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 3

46
Tree	Partial newPartial = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , iChronology , newValues ) ;
Distance : 3

47
Tree	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

48
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; toString
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; toString
Distance : 4

49
Tree	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

50
Tree	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 3

51
Tree	Partial iChronology = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , newTypes , newValues ) ;
Distance : 4

52
Tree	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

53
Tree	Partial newValues = new Partial ( newValues , newTypes , iChronology ) ;
Code	Partial newValues = new Partial ( newValues , newTypes , iChronology ) ;
Distance : 3

54
Tree	Partial iChronology = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 3

55
Tree	Partial newValues = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( newValues , iChronology , newValues ) ;
Distance : 4

56
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 3

57
Tree	Partial iChronology = new Partial ( newValues , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , newValues , newValues ) ;
Distance : 3

58
Tree	Partial iChronology = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , iChronology , newValues ) ;
Distance : 4

59
Tree	Partial newPartial = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 2

60
Tree	Partial newPartial = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , newTypes , newValues ) ;
Distance : 3

61
Tree	Partial newPartial = new Partial ( newValues , newTypes , iChronology ) ;
Code	Partial newPartial = new Partial ( newValues , newTypes , iChronology ) ;
Distance : 2

62
Tree	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 3

63
Tree	Partial newPartial = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 1

64
Tree	Partial newPartial = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 2

65
Tree	Partial newPartial = new Partial ( newValues , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , newValues , newValues ) ;
Distance : 2

66
Tree	Partial newPartial = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , iChronology , newValues ) ;
Distance : 3

67
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

68
Tree	Partial newPartial = new Partial ( newValues , newValues , iChronology ) ;
Code	Partial newPartial = new Partial ( newValues , newValues , iChronology ) ;
Distance : 1

69
Tree	Partial newPartial = new Partial ( newValues , iChronology , iChronology ) ;
Code	Partial newPartial = new Partial ( newValues , iChronology , iChronology ) ;
Distance : 2

70
Tree	Partial newValues = new Partial ( iChronology , newTypes , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , iChronology ) ;
Distance : 3

71
Tree	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

72
Tree	Partial iChronology = new Partial ( newValues , iChronology , iChronology ) ;
Code	Partial iChronology = new Partial ( newValues , iChronology , iChronology ) ;
Distance : 3

73
Tree	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Distance : 2

74
Tree	Partial iChronology = new Partial ( newValues , newValues , iChronology ) ;
Code	Partial iChronology = new Partial ( newValues , newValues , iChronology ) ;
Distance : 2

75
Tree	Partial iChronology = new Partial ( newValues , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , newValues , newValues ) ;
Distance : 3

76
Tree	Partial newPartial = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 1

77
Tree	Partial newPartial = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 2

78
Tree	Partial newPartial = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( newValues , newTypes , newValues ) ;
Distance : 3

79
Tree	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Distance : 2

80
Tree	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 3

81
Tree	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

82
Tree	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , newValues ) ;
Distance : 2

83
Tree	Partial newValues = new Partial ( newValues , newValues , newValues ) ;
Code	Partial newValues = new Partial ( newValues , newValues , newValues ) ;
Distance : 3

84
Tree	Partial iChronology = new Partial ( newValues , newTypes , iChronology ) ;
Code	Partial iChronology = new Partial ( newValues , newTypes , iChronology ) ;
Distance : 3

85
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

86
Tree	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

87
Tree	Partial newValues = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 2

88
Tree	Partial newValues = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial newValues = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 3

89
Tree	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , newValues ) ;
Distance : 3

90
Tree	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , newValues ) ;
Distance : 4

91
Tree	Partial iChronology = new Partial ( iChronology , newValues , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , newValues , iChronology ) ;
Distance : 2

92
Tree	Partial iChronology = new Partial ( iChronology , iChronology , iChronology ) ;
Code	Partial iChronology = new Partial ( iChronology , iChronology , iChronology ) ;
Distance : 3

93
Tree	Partial newValues = new Partial ( newValues , newValues , newValues ) ;
Code	Partial newValues = new Partial ( newValues , newValues , newValues ) ;
Distance : 3

94
Tree	Partial newValues = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( newValues , iChronology , newValues ) ;
Distance : 4

95
Tree	Partial newValues = new Partial ( newValues , newValues , iChronology ) ;
Code	Partial newValues = new Partial ( newValues , newValues , iChronology ) ;
Distance : 2

96
Tree	Partial newValues = new Partial ( newValues , iChronology , iChronology ) ;
Code	Partial newValues = new Partial ( newValues , iChronology , iChronology ) ;
Distance : 3

97
Tree	Partial iChronology = new Partial ( newValues , iChronology , newValues ) ;
Code	Partial iChronology = new Partial ( newValues , iChronology , newValues ) ;
Distance : 4

98
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ]
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ]
Distance : 4

99
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 3

100
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Preconditions
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Preconditions
Distance : 4

101
Tree	Partial newValues = new Partial ( newValues , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( newValues , newTypes , newValues ) ;
Distance : 4

102
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; (
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; (
Distance : 4

103
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; .
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; .
Distance : 4

104
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; }
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; }
Distance : 4

105
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; i
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; i
Distance : 4

106
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; assertEquals
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; assertEquals
Distance : 4

107
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; @
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; @
Distance : 4

108
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; []
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; []
Distance : 4

109
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; test
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; test
Distance : 4

110
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; nullNotPermitted
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; nullNotPermitted
Distance : 4

111
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; !
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; !
Distance : 4

112
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; !=
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; !=
Distance : 4

113
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; T
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; T
Distance : 4

114
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkState
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkState
Distance : 4

115
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; double
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; double
Distance : 4

116
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; int
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; int
Distance : 4

117
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; value
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; value
Distance : 4

118
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ==
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ==
Distance : 4

119
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; [
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; [
Distance : 4

120
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; -
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; -
Distance : 4

121
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; m
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; m
Distance : 4

122
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; :
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; :
Distance : 4

123
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ()
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ()
Distance : 4

124
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; class
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; class
Distance : 4

125
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Args
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Args
Distance : 4

126
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Override
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Override
Distance : 4

127
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; v
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; v
Distance : 4

128
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; mock
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; mock
Distance : 4

129
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; f
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; f
Distance : 4

130
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ParamChecks
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ParamChecks
Distance : 4

131
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <>
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <>
Distance : 4

132
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; paint
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; paint
Distance : 4

133
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; {}
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; {}
Distance : 4

134
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; new
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; new
Distance : 4

135
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; MathRuntimeException
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; MathRuntimeException
Distance : 4

136
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; =
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; =
Distance : 4

137
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; final
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; final
Distance : 4

138
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; false
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; false
Distance : 4

139
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkNotNull
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkNotNull
Distance : 4

140
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ArrayList
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ArrayList
Distance : 4

141
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; serialised
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; serialised
Distance : 4

142
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; *
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; *
Distance : 4

143
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; getInstance
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; getInstance
Distance : 4

144
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; boolean
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; boolean
Distance : 4

145
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; result
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; result
Distance : 4

146
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; join
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; join
Distance : 4

147
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; type
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; type
Distance : 4

148
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <
Distance : 4

149
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; lines
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; lines
Distance : 4

150
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; return
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; return
Distance : 4

151
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; this
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; this
Distance : 4

152
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; >
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; >
Distance : 4

153
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; if
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; if
Distance : 4

154
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; public
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; public
Distance : 4

155
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; null
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; null
Distance : 4

156
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NUMBER_CONSTANT
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NUMBER_CONSTANT
Distance : 4

157
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Node
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Node
Distance : 4

158
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ,
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ,
Distance : 4

159
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Integer
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Integer
Distance : 4

160
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; e
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; e
Distance : 4

161
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; String
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; String
Distance : 4

162
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; source
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; source
Distance : 4

163
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; p
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; p
Distance : 4

164
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Math
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Math
Distance : 4

165
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; options
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; options
Distance : 4

166
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Test
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Test
Distance : 4

167
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Class
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; Class
Distance : 4

168
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; root
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; root
Distance : 4

169
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; {
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; {
Distance : 4

170
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; assertThat
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; assertThat
Distance : 4

171
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; super
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; super
Distance : 4

172
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; )
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; )
Distance : 4

173
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <s>
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <s>
Distance : 4

174
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; (
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; (
Distance : 4

175
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <blank>
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; <blank>
Distance : 4

176
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ;
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ;
Distance : 4

177
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; +
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; +
Distance : 4

178
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; length
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; length
Distance : 4

179
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; n
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; n
Distance : 4

180
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; compiler
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; compiler
Distance : 4

181
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; TestUtils
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; TestUtils
Distance : 4

182
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; verify
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; verify
Distance : 4

183
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; fail
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; fail
Distance : 4

184
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; List
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; List
Distance : 4

185
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; array
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; array
Distance : 4

186
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; try
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; try
Distance : 4

187
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; &&
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; &&
Distance : 4

188
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; STRING_CONSTANT
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; STRING_CONSTANT
Distance : 4

189
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; wanted
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; wanted
Distance : 4

190
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ex
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; ex
Distance : 4

191
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NodeUtil
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NodeUtil
Distance : 4

192
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; add
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; add
Distance : 4

193
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkArgument
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; checkArgument
Distance : 4

194
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; data
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; data
Distance : 4

195
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NodeTraversal
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; NodeTraversal
Distance : 4

196
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; void
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; void
Distance : 4

197
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; catch
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; catch
Distance : 4

198
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; throw
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; throw
Distance : 4

199
Tree	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; true
Code	Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ; true
Distance : 4

========================================================================


