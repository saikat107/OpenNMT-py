========================================================================
Example Number: 1
Parent Code is: 
( int ) ( ( value - this . lowerBound ) / ( this . upperBound - this . lowerBound ) * NUMBER_CONSTANT )
-------------------------------------------------------------------------------
Child code is: 
( int ) ( ( v - this . lowerBound ) / ( this . upperBound - this . lowerBound ) * NUMBER_CONSTANT )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (27 (36 (214{val=(}) (27 (800{val=value}) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=upperBound})) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)}))) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (11 (214{val=(}) (39{val=int}) (215{val=)}) (36 (214{val=(}) (27 (27 (36 (214{val=(}) (27 (800{val=v}) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)})) (203{val=/}) (36 (214{val=(}) (27 (22 (315{val=this}) (235{val=.}) (800{val=upperBound})) (201{val=-}) (22 (315{val=this}) (235{val=.}) (800{val=lowerBound}))) (215{val=)}))) (202{val=*}) (34{val=NUMBER_CONSTANT})) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/24/parent/source_org_jfree_chart_renderer_GrayPaintScale.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	(
Code	(
Distance : 23

1
Tree	mockUtil
Code	mockUtil
Distance : 24

2
Tree	sc
Code	sc
Distance : 24

3
Tree	cachedL
Code	cachedL
Distance : 24

4
Tree	origin
Code	origin
Distance : 24

5
Tree	startPos
Code	startPos
Distance : 24

6
Tree	loopNode
Code	loopNode
Distance : 24

7
Tree	shadowedVar
Code	shadowedVar
Distance : 24

8
Tree	noPrimitives
Code	noPrimitives
Distance : 24

9
Tree	getNumber
Code	getNumber
Distance : 24

10
Tree	inputLineLength
Code	inputLineLength
Distance : 24

11
Tree	getChronology
Code	getChronology
Distance : 24

12
Tree	shape
Code	shape
Distance : 24

13
Tree	isAssignable
Code	isAssignable
Distance : 24

14
Tree	LastArguments
Code	LastArguments
Distance : 24

15
Tree	checkClearValue
Code	checkClearValue
Distance : 24

16
Tree	LogBeta
Code	LogBeta
Distance : 24

17
Tree	isCtorDefinedByCall
Code	isCtorDefinedByCall
Distance : 24

18
Tree	initial
Code	initial
Distance : 24

19
Tree	assertError
Code	assertError
Distance : 24

20
Tree	boolean
Code	boolean
Distance : 24

21
Tree	MockUtil
Code	MockUtil
Distance : 24

22
Tree	getColumn
Code	getColumn
Distance : 24

23
Tree	CategoryTick
Code	CategoryTick
Distance : 24

24
Tree	NumberStrategy
Code	NumberStrategy
Distance : 24

25
Tree	FastMath
Code	FastMath
Distance : 24

26
Tree	isStaticCtorProp
Code	isStaticCtorProp
Distance : 24

27
Tree	the_mock_type
Code	the_mock_type
Distance : 24

28
Tree	Array
Code	Array
Distance : 24

29
Tree	checker
Code	checker
Distance : 24

30
Tree	MatrixSeriesCollection
Code	MatrixSeriesCollection
Distance : 24

31
Tree	argument
Code	argument
Distance : 24

32
Tree	JUnitResultAssert
Code	JUnitResultAssert
Distance : 24

33
Tree	{}
Code	{}
Distance : 24

34
Tree	transpiledFeatures
Code	transpiledFeatures
Distance : 24

35
Tree	ret
Code	ret
Distance : 24

36
Tree	TestEmptySubObject
Code	TestEmptySubObject
Distance : 24

37
Tree	UnivariateRealSolver
Code	UnivariateRealSolver
Distance : 24

38
Tree	indices
Code	indices
Distance : 24

39
Tree	doThrow
Code	doThrow
Distance : 24

40
Tree	setMaxGrowth
Code	setMaxGrowth
Distance : 24

41
Tree	inMemoryClassObjects
Code	inMemoryClassObjects
Distance : 24

42
Tree	valueToFind
Code	valueToFind
Distance : 24

43
Tree	LineFunction2D
Code	LineFunction2D
Distance : 24

44
Tree	DefaultAnswerValidator
Code	DefaultAnswerValidator
Distance : 24

45
Tree	empiricalDistribution
Code	empiricalDistribution
Distance : 24

46
Tree	BinomialCoefficientDouble
Code	BinomialCoefficientDouble
Distance : 24

47
Tree	cap
Code	cap
Distance : 24

48
Tree	reserved
Code	reserved
Distance : 24

49
Tree	SQRT_TWO_PI
Code	SQRT_TWO_PI
Distance : 24

50
Tree	PropertyType
Code	PropertyType
Distance : 24

51
Tree	maybeWarnForConstWithoutExplicitType
Code	maybeWarnForConstWithoutExplicitType
Distance : 24

52
Tree	alpha
Code	alpha
Distance : 24

53
Tree	TwoDigitYearField
Code	TwoDigitYearField
Distance : 24

54
Tree	SerializableAndNoDefaultConstructor
Code	SerializableAndNoDefaultConstructor
Distance : 24

55
Tree	TimePeriodValue
Code	TimePeriodValue
Distance : 24

56
Tree	column
Code	column
Distance : 24

57
Tree	superCall
Code	superCall
Distance : 24

58
Tree	setChart
Code	setChart
Distance : 24

59
Tree	MonthDateFormat
Code	MonthDateFormat
Distance : 24

60
Tree	InnerStaticClassWithNoArgConstructor
Code	InnerStaticClassWithNoArgConstructor
Distance : 24

61
Tree	numIterations
Code	numIterations
Distance : 24

62
Tree	setInverseCumulativeTestValues
Code	setInverseCumulativeTestValues
Distance : 24

63
Tree	minutes
Code	minutes
Distance : 24

64
Tree	PeepholeOptimizationsPass
Code	PeepholeOptimizationsPass
Distance : 24

65
Tree	UnpaddedNumberField
Code	UnpaddedNumberField
Distance : 24

66
Tree	abs
Code	abs
Distance : 24

67
Tree	mathDotPowCall
Code	mathDotPowCall
Distance : 24

68
Tree	ScopeScanner
Code	ScopeScanner
Distance : 24

69
Tree	CSV_SEARCH_CHARS
Code	CSV_SEARCH_CHARS
Distance : 24

70
Tree	assertClose
Code	assertClose
Distance : 24

71
Tree	Entities
Code	Entities
Distance : 24

72
Tree	XYBubbleRenderer
Code	XYBubbleRenderer
Distance : 24

73
Tree	testWarning
Code	testWarning
Distance : 24

74
Tree	TernaryValue
Code	TernaryValue
Distance : 24

75
Tree	instance
Code	instance
Distance : 24

76
Tree	NoWeekyearZeroField
Code	NoWeekyearZeroField
Distance : 24

77
Tree	minadj
Code	minadj
Distance : 24

78
Tree	sample1
Code	sample1
Distance : 24

79
Tree	nthHarmonic
Code	nthHarmonic
Distance : 24

80
Tree	stepStart
Code	stepStart
Distance : 24

81
Tree	FailingConstructor
Code	FailingConstructor
Distance : 24

82
Tree	stdDev
Code	stdDev
Distance : 24

83
Tree	scale
Code	scale
Distance : 24

84
Tree	traverseEs6
Code	traverseEs6
Distance : 24

85
Tree	StringEscapeUtils.ESCAPE_JAVA
Code	StringEscapeUtils.ESCAPE_JAVA
Distance : 24

86
Tree	visitArgumentList
Code	visitArgumentList
Distance : 24

87
Tree	MockitoMockKey
Code	MockitoMockKey
Distance : 24

88
Tree	instrumentationData
Code	instrumentationData
Distance : 24

89
Tree	assertNull
Code	assertNull
Distance : 24

90
Tree	reportOr
Code	reportOr
Distance : 24

91
Tree	assertNoPureCalls
Code	assertNoPureCalls
Distance : 24

92
Tree	widthSufficient
Code	widthSufficient
Distance : 24

93
Tree	!=
Code	!=
Distance : 24

94
Tree	sortedData
Code	sortedData
Distance : 24

95
Tree	clone.seriesList
Code	clone.seriesList
Distance : 24

96
Tree	super();
Code	super();
Distance : 24

97
Tree	allJsDocParams
Code	allJsDocParams
Distance : 24

98
Tree	UniformContinuousDistribution
Code	UniformContinuousDistribution
Distance : 24

99
Tree	assertThat
Code	assertThat
Distance : 24

100
Tree	getInvalidationsErrors
Code	getInvalidationsErrors
Distance : 24

101
Tree	CompositeFormat
Code	CompositeFormat
Distance : 24

102
Tree	crossP
Code	crossP
Distance : 24

103
Tree	>
Code	>
Distance : 24

104
Tree	Assert
Code	Assert
Distance : 24

105
Tree	logBeta
Code	logBeta
Distance : 24

106
Tree	if
Code	if
Distance : 24

107
Tree	do
Code	do
Distance : 24

108
Tree	FastFourierTransformer
Code	FastFourierTransformer
Distance : 24

109
Tree	)
Code	)
Distance : 23

110
Tree	try
Code	try
Distance : 24

111
Tree	this
Code	this
Distance : 23

112
Tree	deleteWhitespaceBefore
Code	deleteWhitespaceBefore
Distance : 24

113
Tree	testModules
Code	testModules
Distance : 24

114
Tree	flipAllIfWarranted
Code	flipAllIfWarranted
Distance : 24

115
Tree	handleGet
Code	handleGet
Distance : 24

116
Tree	tree
Code	tree
Distance : 24

117
Tree	:
Code	:
Distance : 24

118
Tree	=
Code	=
Distance : 24

119
Tree	shouldAddTypes
Code	shouldAddTypes
Distance : 24

120
Tree	double
Code	double
Distance : 24

121
Tree	Args
Code	Args
Distance : 24

122
Tree	replaceSymbol
Code	replaceSymbol
Distance : 24

123
Tree	key
Code	key
Distance : 24

124
Tree	,
Code	,
Distance : 24

125
Tree	dataRI
Code	dataRI
Distance : 24

126
Tree	compiler
Code	compiler
Distance : 24

127
Tree	null
Code	null
Distance : 24

128
Tree	new
Code	new
Distance : 24

129
Tree	STRING_CONSTANT
Code	STRING_CONSTANT
Distance : 24

130
Tree	Math
Code	Math
Distance : 24

131
Tree	SimpleDependencyInfo
Code	SimpleDependencyInfo
Distance : 24

132
Tree	==
Code	==
Distance : 24

133
Tree	preloadEs6RuntimeFunction
Code	preloadEs6RuntimeFunction
Distance : 24

134
Tree	int
Code	int
Distance : 23

135
Tree	<
Code	<
Distance : 24

136
Tree	return
Code	return
Distance : 24

137
Tree	-
Code	-
Distance : 23

138
Tree	assertType
Code	assertType
Distance : 24

139
Tree	fireChangeEvent
Code	fireChangeEvent
Distance : 24

140
Tree	{
Code	{
Distance : 24

141
Tree	!
Code	!
Distance : 24

142
Tree	testTypes
Code	testTypes
Distance : 24

143
Tree	node
Code	node
Distance : 24

144
Tree	()
Code	()
Distance : 24

145
Tree	removeUnusedProperties
Code	removeUnusedProperties
Distance : 24

146
Tree	isGoogScopeFunctionBody
Code	isGoogScopeFunctionBody
Distance : 24

147
Tree	setUpInterpolator
Code	setUpInterpolator
Distance : 24

148
Tree	doAnswer
Code	doAnswer
Distance : 24

149
Tree	public
Code	public
Distance : 24

150
Tree	LinkedDurationField
Code	LinkedDurationField
Distance : 24

151
Tree	beta
Code	beta
Distance : 24

152
Tree	assertPatternsEqual
Code	assertPatternsEqual
Distance : 24

153
Tree	Preconditions
Code	Preconditions
Distance : 24

154
Tree	Arguments
Code	Arguments
Distance : 24

155
Tree	isNullOrEmpty
Code	isNullOrEmpty
Distance : 24

156
Tree	fold
Code	fold
Distance : 24

157
Tree	static
Code	static
Distance : 24

158
Tree	catch
Code	catch
Distance : 24

159
Tree	getPeriodType
Code	getPeriodType
Distance : 24

160
Tree	msgNode
Code	msgNode
Distance : 24

161
Tree	assertEquals
Code	assertEquals
Distance : 24

162
Tree	mockingProgress
Code	mockingProgress
Distance : 24

163
Tree	NumberOfInvocationsChecker
Code	NumberOfInvocationsChecker
Distance : 24

164
Tree	index
Code	index
Distance : 24

165
Tree	invalidationMap
Code	invalidationMap
Distance : 24

166
Tree	testClass
Code	testClass
Distance : 24

167
Tree	maybeTemporarilyLiveNodes
Code	maybeTemporarilyLiveNodes
Distance : 24

168
Tree	;
Code	;
Distance : 24

169
Tree	<=
Code	<=
Distance : 24

170
Tree	p
Code	p
Distance : 24

171
Tree	YearWeekType
Code	YearWeekType
Distance : 24

172
Tree	assertNode
Code	assertNode
Distance : 24

173
Tree	for
Code	for
Distance : 24

174
Tree	class
Code	class
Distance : 24

175
Tree	parent
Code	parent
Distance : 24

176
Tree	n
Code	n
Distance : 24

177
Tree	Streams
Code	Streams
Distance : 24

178
Tree	}
Code	}
Distance : 24

179
Tree	assertFalse
Code	assertFalse
Distance : 24

180
Tree	fireDatasetChanged
Code	fireDatasetChanged
Distance : 24

181
Tree	String
Code	String
Distance : 24

182
Tree	tightenNameTypeAndDontWarn
Code	tightenNameTypeAndDontWarn
Distance : 24

183
Tree	computeEscapedEs6
Code	computeEscapedEs6
Distance : 24

184
Tree	step
Code	step
Distance : 24

185
Tree	]
Code	]
Distance : 24

186
Tree	qrDecomposition
Code	qrDecomposition
Distance : 24

187
Tree	false
Code	false
Distance : 24

188
Tree	sampleSize
Code	sampleSize
Distance : 24

189
Tree	separator
Code	separator
Distance : 24

190
Tree	rings
Code	rings
Distance : 24

191
Tree	bp
Code	bp
Distance : 24

192
Tree	TransformUtils
Code	TransformUtils
Distance : 24

193
Tree	Object
Code	Object
Distance : 24

194
Tree	isMultiline
Code	isMultiline
Distance : 24

195
Tree	RunnerFactory
Code	RunnerFactory
Distance : 24

196
Tree	assertTrue
Code	assertTrue
Distance : 24

197
Tree	getLastArguments
Code	getLastArguments
Distance : 24

198
Tree	mockitoStubber
Code	mockitoStubber
Distance : 24

199
Tree	NUMBER_CONSTANT
Code	NUMBER_CONSTANT
Distance : 23

========================================================================


========================================================================
Example Number: 2
Parent Code is: 
{ super ( paint , stroke , paint , stroke , alpha ) ; this . value = value ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( paint , stroke , outlinePaint , outlineStroke , alpha ) ; this . value = value ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=alpha}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=paint}) (234{val=,}) (800{val=stroke}) (234{val=,}) (800{val=outlinePaint}) (234{val=,}) (800{val=outlineStroke}) (234{val=,}) (800{val=alpha}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=value})) (204{val==}) (800{val=value})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/20/parent/source_org_jfree_chart_plot_ValueMarker.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ super ( paint ) ; this . value = value ; }
Code	{ super ( paint ) ; this . value = value ; }
Distance : 8

1
Tree	{ super ( LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET , stroke ) ; this . value = value ; }
Distance : 7

2
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_SAMPLE_SIZE , stroke ) ; this . value = value ; }
Distance : 7

3
Tree	{ super ( ref.node , stroke ) ; this . value = value ; }
Code	{ super ( ref.node , stroke ) ; this . value = value ; }
Distance : 7

4
Tree	{ super ( LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX , stroke ) ; this . value = value ; }
Distance : 7

5
Tree	{ super ( PredefinedName.FROM , stroke ) ; this . value = value ; }
Code	{ super ( PredefinedName.FROM , stroke ) ; this . value = value ; }
Distance : 7

6
Tree	{ super ( e.lineNumber , stroke ) ; this . value = value ; }
Code	{ super ( e.lineNumber , stroke ) ; this . value = value ; }
Distance : 7

7
Tree	{ super ( outlineStroke , stroke ) ; this . value = value ; }
Code	{ super ( outlineStroke , stroke ) ; this . value = value ; }
Distance : 7

8
Tree	{ super ( testRestParameters , stroke ) ; this . value = value ; }
Code	{ super ( testRestParameters , stroke ) ; this . value = value ; }
Distance : 7

9
Tree	{ super ( LocalizedFormats.NULL_IMAGINARY_FORMAT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NULL_IMAGINARY_FORMAT , stroke ) ; this . value = value ; }
Distance : 7

10
Tree	{ super ( minuendYear , stroke ) ; this . value = value ; }
Code	{ super ( minuendYear , stroke ) ; this . value = value ; }
Distance : 7

11
Tree	{ super ( testMissingProperty21 , stroke ) ; this . value = value ; }
Code	{ super ( testMissingProperty21 , stroke ) ; this . value = value ; }
Distance : 7

12
Tree	{ super ( AllowedSolutions.ANY_SIDE , stroke ) ; this . value = value ; }
Code	{ super ( AllowedSolutions.ANY_SIDE , stroke ) ; this . value = value ; }
Distance : 7

13
Tree	{ super ( testMissingProperty33 , stroke ) ; this . value = value ; }
Code	{ super ( testMissingProperty33 , stroke ) ; this . value = value ; }
Distance : 7

14
Tree	{ super ( ArrayRealVectorTest.RealVectorTestImpl , stroke ) ; this . value = value ; }
Code	{ super ( ArrayRealVectorTest.RealVectorTestImpl , stroke ) ; this . value = value ; }
Distance : 7

15
Tree	{ super ( LocalizedFormats.URL_CONTAINS_NO_DATA , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.URL_CONTAINS_NO_DATA , stroke ) ; this . value = value ; }
Distance : 7

16
Tree	{ super ( LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NEGATIVE_NUMBER_OF_TRIALS , stroke ) ; this . value = value ; }
Distance : 7

17
Tree	{ super ( NodeTraversal , stroke ) ; this . value = value ; }
Code	{ super ( NodeTraversal , stroke ) ; this . value = value ; }
Distance : 7

18
Tree	{ super ( Feature.TYPE_ALIAS , stroke ) ; this . value = value ; }
Code	{ super ( Feature.TYPE_ALIAS , stroke ) ; this . value = value ; }
Distance : 7

19
Tree	{ super ( alpha , stroke , paint ) ; this . value = value ; }
Code	{ super ( alpha , stroke , paint ) ; this . value = value ; }
Distance : 6

20
Tree	{ super ( paint , stroke ) ; this . value = value ; }
Code	{ super ( paint , stroke ) ; this . value = value ; }
Distance : 6

21
Tree	{ super ( stroke , stroke , paint ) ; this . value = value ; }
Code	{ super ( stroke , stroke , paint ) ; this . value = value ; }
Distance : 6

22
Tree	{ super ( config.keepGoing , stroke ) ; this . value = value ; }
Code	{ super ( config.keepGoing , stroke ) ; this . value = value ; }
Distance : 7

23
Tree	{ super ( icon , stroke ) ; this . value = value ; }
Code	{ super ( icon , stroke ) ; this . value = value ; }
Distance : 7

24
Tree	{ super ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NEGATIVE_BRIGHTNESS_EXPONENT , stroke ) ; this . value = value ; }
Distance : 7

25
Tree	{ super ( createLong , stroke ) ; this . value = value ; }
Code	{ super ( createLong , stroke ) ; this . value = value ; }
Distance : 7

26
Tree	{ super ( LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NON_POSITIVE_POLYNOMIAL_DEGREE , stroke ) ; this . value = value ; }
Distance : 7

27
Tree	{ super ( Token.BLOCK , stroke ) ; this . value = value ; }
Code	{ super ( Token.BLOCK , stroke ) ; this . value = value ; }
Distance : 7

28
Tree	{ super ( InterruptedException , stroke ) ; this . value = value ; }
Code	{ super ( InterruptedException , stroke ) ; this . value = value ; }
Distance : 7

29
Tree	{ super ( Token.CATCH , stroke ) ; this . value = value ; }
Code	{ super ( Token.CATCH , stroke ) ; this . value = value ; }
Distance : 7

30
Tree	{ super ( normalizeChildren , stroke ) ; this . value = value ; }
Code	{ super ( normalizeChildren , stroke ) ; this . value = value ; }
Distance : 7

31
Tree	{ super ( com.google.protobuf.GeneratedMessageV3 , stroke ) ; this . value = value ; }
Code	{ super ( com.google.protobuf.GeneratedMessageV3 , stroke ) ; this . value = value ; }
Distance : 7

32
Tree	{ super ( alpha , stroke ) ; this . value = value ; }
Code	{ super ( alpha , stroke ) ; this . value = value ; }
Distance : 7

33
Tree	{ super ( LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION , stroke ) ; this . value = value ; }
Distance : 7

34
Tree	{ super ( global.root , stroke ) ; this . value = value ; }
Code	{ super ( global.root , stroke ) ; this . value = value ; }
Distance : 7

35
Tree	{ super ( metadata , stroke ) ; this . value = value ; }
Code	{ super ( metadata , stroke ) ; this . value = value ; }
Distance : 7

36
Tree	{ super ( JUnitRule.Strictness.WARN , stroke ) ; this . value = value ; }
Code	{ super ( JUnitRule.Strictness.WARN , stroke ) ; this . value = value ; }
Distance : 7

37
Tree	{ super ( LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD , stroke ) ; this . value = value ; }
Distance : 7

38
Tree	{ super ( CompilerTypeTestCase.DEFAULT_EXTERNS , stroke ) ; this . value = value ; }
Code	{ super ( CompilerTypeTestCase.DEFAULT_EXTERNS , stroke ) ; this . value = value ; }
Distance : 7

39
Tree	{ super ( isGeneric , stroke ) ; this . value = value ; }
Code	{ super ( isGeneric , stroke ) ; this . value = value ; }
Distance : 7

40
Tree	{ super ( Token.IF , stroke ) ; this . value = value ; }
Code	{ super ( Token.IF , stroke ) ; this . value = value ; }
Distance : 7

41
Tree	{ super ( IllegalArgumentException , stroke ) ; this . value = value ; }
Code	{ super ( IllegalArgumentException , stroke ) ; this . value = value ; }
Distance : 7

42
Tree	{ super ( absoluteAccuracy , stroke ) ; this . value = value ; }
Code	{ super ( absoluteAccuracy , stroke ) ; this . value = value ; }
Distance : 7

43
Tree	{ super ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , stroke ) ; this . value = value ; }
Distance : 7

44
Tree	{ super ( LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.OUT_OF_BOUND_SIGNIFICANCE_LEVEL , stroke ) ; this . value = value ; }
Distance : 7

45
Tree	{ super ( RectangleInsets , stroke ) ; this . value = value ; }
Code	{ super ( RectangleInsets , stroke ) ; this . value = value ; }
Distance : 7

46
Tree	{ super ( inputs.length , stroke ) ; this . value = value ; }
Code	{ super ( inputs.length , stroke ) ; this . value = value ; }
Distance : 7

47
Tree	{ super ( Node.FREE_CALL , stroke ) ; this . value = value ; }
Code	{ super ( Node.FREE_CALL , stroke ) ; this . value = value ; }
Distance : 7

48
Tree	{ super ( sumDifference , stroke ) ; this . value = value ; }
Code	{ super ( sumDifference , stroke ) ; this . value = value ; }
Distance : 7

49
Tree	{ super ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE , stroke ) ; this . value = value ; }
Distance : 7

50
Tree	{ super ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION , stroke ) ; this . value = value ; }
Distance : 7

51
Tree	{ super ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.UNABLE_TO_ORTHOGONOLIZE_MATRIX , stroke ) ; this . value = value ; }
Distance : 7

52
Tree	{ super ( LocalizedFormats.NO_REGRESSORS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NO_REGRESSORS , stroke ) ; this . value = value ; }
Distance : 7

53
Tree	{ super ( changeScopeRoot , stroke ) ; this . value = value ; }
Code	{ super ( changeScopeRoot , stroke ) ; this . value = value ; }
Distance : 7

54
Tree	{ super ( stroke ) ; this . value = new double [] { value } ; }
Code	{ super ( stroke ) ; this . value = new double [] { value } ; }
Distance : 13

55
Tree	{ super ( stroke , stroke , paint , alpha ) ; this . value = value ; }
Code	{ super ( stroke , stroke , paint , alpha ) ; this . value = value ; }
Distance : 4

56
Tree	{ super ( leftOfArrow.type , stroke ) ; this . value = value ; }
Code	{ super ( leftOfArrow.type , stroke ) ; this . value = value ; }
Distance : 7

57
Tree	{ super ( value ) ; this . value = value ; }
Code	{ super ( value ) ; this . value = value ; }
Distance : 9

58
Tree	{ super ( LocalizedFormats.OVERFLOW_IN_FRACTION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.OVERFLOW_IN_FRACTION , stroke ) ; this . value = value ; }
Distance : 7

59
Tree	{ super ( LocalizedFormats.NULL_FUNCTION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NULL_FUNCTION , stroke ) ; this . value = value ; }
Distance : 7

60
Tree	{ super ( p1.vector , stroke ) ; this . value = value ; }
Code	{ super ( p1.vector , stroke ) ; this . value = value ; }
Distance : 7

61
Tree	{ super ( LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N , stroke ) ; this . value = value ; }
Distance : 7

62
Tree	{ super ( ComposableFunction.SINH , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.SINH , stroke ) ; this . value = value ; }
Distance : 7

63
Tree	{ super ( LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE , stroke ) ; this . value = value ; }
Distance : 7

64
Tree	{ super ( java.util.Locale.US , stroke ) ; this . value = value ; }
Code	{ super ( java.util.Locale.US , stroke ) ; this . value = value ; }
Distance : 7

65
Tree	{ super ( inheritedPropDef.methodType , stroke ) ; this . value = value ; }
Code	{ super ( inheritedPropDef.methodType , stroke ) ; this . value = value ; }
Distance : 7

66
Tree	{ super ( StringUtils.EMPTY , stroke ) ; this . value = value ; }
Code	{ super ( StringUtils.EMPTY , stroke ) ; this . value = value ; }
Distance : 7

67
Tree	{ super ( org.joda.time.gwt.util.Arrays , stroke ) ; this . value = value ; }
Code	{ super ( org.joda.time.gwt.util.Arrays , stroke ) ; this . value = value ; }
Distance : 7

68
Tree	{ super ( token.type , stroke ) ; this . value = value ; }
Code	{ super ( token.type , stroke ) ; this . value = value ; }
Distance : 7

69
Tree	{ super ( Feature.AMBIENT_DECLARATION , stroke ) ; this . value = value ; }
Code	{ super ( Feature.AMBIENT_DECLARATION , stroke ) ; this . value = value ; }
Distance : 7

70
Tree	{ super ( dest.moment , stroke ) ; this . value = value ; }
Code	{ super ( dest.moment , stroke ) ; this . value = value ; }
Distance : 7

71
Tree	{ super ( ComposableFunction.TAN , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.TAN , stroke ) ; this . value = value ; }
Distance : 7

72
Tree	{ super ( LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NEGATIVE_ELEMENT_AT_INDEX , stroke ) ; this . value = value ; }
Distance : 7

73
Tree	{ super ( alpha ) ; this . value = new double [] { value } ; }
Code	{ super ( alpha ) ; this . value = new double [] { value } ; }
Distance : 13

74
Tree	{ super ( isRegistered , stroke ) ; this . value = value ; }
Code	{ super ( isRegistered , stroke ) ; this . value = value ; }
Distance : 7

75
Tree	{ super ( LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NEGATIVE_NUMBER_OF_SUCCESSES , stroke ) ; this . value = value ; }
Distance : 7

76
Tree	{ super ( sb.buffer.length , stroke ) ; this . value = value ; }
Code	{ super ( sb.buffer.length , stroke ) ; this . value = value ; }
Distance : 7

77
Tree	{ super ( radiusGridlineStroke , stroke ) ; this . value = value ; }
Code	{ super ( radiusGridlineStroke , stroke ) ; this . value = value ; }
Distance : 7

78
Tree	{ super ( alpha , stroke , paint , alpha ) ; this . value = value ; }
Code	{ super ( alpha , stroke , paint , alpha ) ; this . value = value ; }
Distance : 4

79
Tree	{ super ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS , stroke ) ; this . value = value ; }
Distance : 7

80
Tree	{ super ( values.length , stroke ) ; this . value = value ; }
Code	{ super ( values.length , stroke ) ; this . value = value ; }
Distance : 7

81
Tree	{ super ( CheckConformance.CONFORMANCE_VIOLATION , stroke ) ; this . value = value ; }
Code	{ super ( CheckConformance.CONFORMANCE_VIOLATION , stroke ) ; this . value = value ; }
Distance : 7

82
Tree	{ super ( Token.DECLARE , stroke ) ; this . value = value ; }
Code	{ super ( Token.DECLARE , stroke ) ; this . value = value ; }
Distance : 7

83
Tree	{ super ( ComposableFunction.ULP , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.ULP , stroke ) ; this . value = value ; }
Distance : 7

84
Tree	{ super ( stroke ) ; this . value = value ; }
Code	{ super ( stroke ) ; this . value = value ; }
Distance : 8

85
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_DEGREES_OF_FREEDOM , stroke ) ; this . value = value ; }
Distance : 7

86
Tree	{ super ( LocalizedFormats.EVALUATIONS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.EVALUATIONS , stroke ) ; this . value = value ; }
Distance : 7

87
Tree	{ super ( LocalizedFormats.SIGNIFICANCE_LEVEL , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.SIGNIFICANCE_LEVEL , stroke ) ; this . value = value ; }
Distance : 7

88
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_SHAPE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_SHAPE , stroke ) ; this . value = value ; }
Distance : 7

89
Tree	{ super ( paint , stroke , paint , stroke ) ; this . value = value ; }
Code	{ super ( paint , stroke , paint , stroke ) ; this . value = value ; }
Distance : 4

90
Tree	{ super ( ComposableFunction.CEIL , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.CEIL , stroke ) ; this . value = value ; }
Distance : 7

91
Tree	{ super ( LocalizedFormats.NULL_WHOLE_FORMAT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NULL_WHOLE_FORMAT , stroke ) ; this . value = value ; }
Distance : 7

92
Tree	{ super ( LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING , stroke ) ; this . value = value ; }
Distance : 7

93
Tree	{ super ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , stroke ) ; this . value = value ; }
Distance : 7

94
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_POPULATION_SIZE , stroke ) ; this . value = value ; }
Distance : 7

95
Tree	{ super ( paint ) ; this . value = new int [] { value } ; }
Code	{ super ( paint ) ; this . value = new int [] { value } ; }
Distance : 13

96
Tree	{ super ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE , stroke ) ; this . value = value ; }
Code	{ super ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE , stroke ) ; this . value = value ; }
Distance : 7

97
Tree	{ super ( source.moment , stroke ) ; this . value = value ; }
Code	{ super ( source.moment , stroke ) ; this . value = value ; }
Distance : 7

98
Tree	{ super ( ComposableFunction.LOG10 , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.LOG10 , stroke ) ; this . value = value ; }
Distance : 7

99
Tree	{ super ( alpha ) ; this . value = value ; }
Code	{ super ( alpha ) ; this . value = value ; }
Distance : 8

100
Tree	{ super ( ComposableFunction.ABS , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.ABS , stroke ) ; this . value = value ; }
Distance : 7

101
Tree	{ super ( LocalizedFormats.NEGATIVE_COMPLEX_MODULE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NEGATIVE_COMPLEX_MODULE , stroke ) ; this . value = value ; }
Distance : 7

102
Tree	{ super ( LocalizedFormats.INVALID_ITERATIONS_LIMITS , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.INVALID_ITERATIONS_LIMITS , stroke ) ; this . value = value ; }
Distance : 7

103
Tree	{ super ( paint , stroke , paint ) ; this . value = value ; }
Code	{ super ( paint , stroke , paint ) ; this . value = value ; }
Distance : 5

104
Tree	{ super ( paint , stroke , paint , alpha ) ; this . value = value ; }
Code	{ super ( paint , stroke , paint , alpha ) ; this . value = value ; }
Distance : 3

105
Tree	{ super ( paint ) ; this . value = new double [] { value } ; }
Code	{ super ( paint ) ; this . value = new double [] { value } ; }
Distance : 13

106
Tree	{ super ( paint , stroke ) ; this . value = new double [] { value } ; }
Code	{ super ( paint , stroke ) ; this . value = new double [] { value } ; }
Distance : 11

107
Tree	{ super ( paint , stroke , paint ) ; this . value = new double [] { value } ; }
Code	{ super ( paint , stroke , paint ) ; this . value = new double [] { value } ; }
Distance : 10

108
Tree	{ super ( paint ) ; this . value = value . value () ; }
Code	{ super ( paint ) ; this . value = value . value () ; }
Distance : 11

109
Tree	{ super ( Token.PARAM_LIST , stroke ) ; this . value = value ; }
Code	{ super ( Token.PARAM_LIST , stroke ) ; this . value = value ; }
Distance : 7

110
Tree	{ super ( paint , stroke ) ; }
Code	{ super ( paint , stroke ) ; }
Distance : 12

111
Tree	{ super ( LocalizedFormats.MAX_COUNT_EXCEEDED , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.MAX_COUNT_EXCEEDED , stroke ) ; this . value = value ; }
Distance : 7

112
Tree	{ super ( LocalizedFormats.DIMENSIONS_MISMATCH , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.DIMENSIONS_MISMATCH , stroke ) ; this . value = value ; }
Distance : 7

113
Tree	{ super ( System.out , stroke ) ; this . value = value ; }
Code	{ super ( System.out , stroke ) ; this . value = value ; }
Distance : 7

114
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_SCALE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_SCALE , stroke ) ; this . value = value ; }
Distance : 7

115
Tree	{ super ( ComposableFunction.COSH , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.COSH , stroke ) ; this . value = value ; }
Distance : 7

116
Tree	{ super ( LocalizedFormats.FAILED_FRACTION_CONVERSION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.FAILED_FRACTION_CONVERSION , stroke ) ; this . value = value ; }
Distance : 7

117
Tree	{ super ( ComposableFunction.ATAN , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.ATAN , stroke ) ; this . value = value ; }
Distance : 7

118
Tree	{ super ( ComposableFunction.SIN , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.SIN , stroke ) ; this . value = value ; }
Distance : 7

119
Tree	{ super ( LocalizedFormats.EVALUATION_FAILED , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.EVALUATION_FAILED , stroke ) ; this . value = value ; }
Distance : 7

120
Tree	{ super ( relativeAccuracy , stroke ) ; this . value = value ; }
Code	{ super ( relativeAccuracy , stroke ) ; this . value = value ; }
Distance : 7

121
Tree	{ super ( LazyHolder.INSTANCE , stroke ) ; this . value = value ; }
Code	{ super ( LazyHolder.INSTANCE , stroke ) ; this . value = value ; }
Distance : 7

122
Tree	{ super ( FixedPointGraphTraversal.NON_HALTING_ERROR_MSG , stroke ) ; this . value = value ; }
Code	{ super ( FixedPointGraphTraversal.NON_HALTING_ERROR_MSG , stroke ) ; this . value = value ; }
Distance : 7

123
Tree	{ super ( LocalizedFormats.NULL_NUMERATOR_FORMAT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NULL_NUMERATOR_FORMAT , stroke ) ; this . value = value ; }
Distance : 7

124
Tree	{ super ( mode.featureSet , stroke ) ; this . value = value ; }
Code	{ super ( mode.featureSet , stroke ) ; this . value = value ; }
Distance : 7

125
Tree	{ super ( callSite.parent , stroke ) ; this . value = value ; }
Code	{ super ( callSite.parent , stroke ) ; this . value = value ; }
Distance : 7

126
Tree	{ super ( paint , stroke ) ; this . value = new int [] { value } ; }
Code	{ super ( paint , stroke ) ; this . value = new int [] { value } ; }
Distance : 11

127
Tree	{ super ( ProcessDefines.UNKNOWN_DEFINE_WARNING , stroke ) ; this . value = value ; }
Code	{ super ( ProcessDefines.UNKNOWN_DEFINE_WARNING , stroke ) ; this . value = value ; }
Distance : 7

128
Tree	{ super ( ComposableFunction.INVERT , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.INVERT , stroke ) ; this . value = value ; }
Distance : 7

129
Tree	{ super ( LocalizedFormats.INVALID_BINARY_DIGIT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.INVALID_BINARY_DIGIT , stroke ) ; this . value = value ; }
Distance : 7

130
Tree	{ super ( symbolName , stroke ) ; this . value = value ; }
Code	{ super ( symbolName , stroke ) ; this . value = value ; }
Distance : 7

131
Tree	{ super ( LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED , stroke ) ; this . value = value ; }
Distance : 7

132
Tree	{ super ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE , stroke ) ; this . value = value ; }
Distance : 7

133
Tree	{ super ( stroke , stroke ) ; this . value = value ; }
Code	{ super ( stroke , stroke ) ; this . value = value ; }
Distance : 7

134
Tree	{ super ( RegularizedGamma.P , stroke ) ; this . value = value ; }
Code	{ super ( RegularizedGamma.P , stroke ) ; this . value = value ; }
Distance : 7

135
Tree	{ super ( com.google.protobuf.InvalidProtocolBufferException , stroke ) ; this . value = value ; }
Code	{ super ( com.google.protobuf.InvalidProtocolBufferException , stroke ) ; this . value = value ; }
Distance : 7

136
Tree	{ super ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , stroke ) ; this . value = value ; }
Distance : 7

137
Tree	{ super ( Opcodes.ASM6 , stroke ) ; this . value = value ; }
Code	{ super ( Opcodes.ASM6 , stroke ) ; this . value = value ; }
Distance : 7

138
Tree	{ super ( ComposableFunction.LOG , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.LOG , stroke ) ; this . value = value ; }
Distance : 7

139
Tree	{ super ( LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE , stroke ) ; this . value = value ; }
Distance : 7

140
Tree	{ super ( Token.DEFAULT_CASE , stroke ) ; this . value = value ; }
Code	{ super ( Token.DEFAULT_CASE , stroke ) ; this . value = value ; }
Distance : 7

141
Tree	{ super ( ComposableFunction.CBRT , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.CBRT , stroke ) ; this . value = value ; }
Distance : 7

142
Tree	{ super ( Boolean.TRUE , stroke ) ; this . value = value ; }
Code	{ super ( Boolean.TRUE , stroke ) ; this . value = value ; }
Distance : 7

143
Tree	{ super ( pairedTTest , stroke ) ; this . value = value ; }
Code	{ super ( pairedTTest , stroke ) ; this . value = value ; }
Distance : 7

144
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_NUMBER_OF_SAMPLES , stroke ) ; this . value = value ; }
Distance : 7

145
Tree	{ super ( CompilerTestCase.ACTIVE_X_OBJECT_DEF , stroke ) ; this . value = value ; }
Code	{ super ( CompilerTestCase.ACTIVE_X_OBJECT_DEF , stroke ) ; this . value = value ; }
Distance : 7

146
Tree	{ super ( LocalizedFormats.NOT_POSITIVE_ALPHA , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_POSITIVE_ALPHA , stroke ) ; this . value = value ; }
Distance : 7

147
Tree	{ super ( LocalizedFormats.INSUFFICIENT_DIMENSION , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.INSUFFICIENT_DIMENSION , stroke ) ; this . value = value ; }
Distance : 7

148
Tree	{ super ( LocalizedFormats.NON_SQUARE_MATRIX , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NON_SQUARE_MATRIX , stroke ) ; this . value = value ; }
Distance : 7

149
Tree	{ super ( xArray.length , stroke ) ; this . value = value ; }
Code	{ super ( xArray.length , stroke ) ; this . value = value ; }
Distance : 7

150
Tree	{ super ( paint , stroke , paint ) ; this . value = new int [] { value } ; }
Code	{ super ( paint , stroke , paint ) ; this . value = new int [] { value } ; }
Distance : 10

151
Tree	{ super ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , stroke ) ; this . value = value ; }
Distance : 7

152
Tree	{ super ( LocalizedFormats.NULL_DENOMINATOR_FORMAT , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NULL_DENOMINATOR_FORMAT , stroke ) ; this . value = value ; }
Distance : 7

153
Tree	{ super ( ComposableFunction.SQRT , stroke ) ; this . value = value ; }
Code	{ super ( ComposableFunction.SQRT , stroke ) ; this . value = value ; }
Distance : 7

154
Tree	{ super ( ShallowCopyTool , stroke ) ; this . value = value ; }
Code	{ super ( ShallowCopyTool , stroke ) ; this . value = value ; }
Distance : 7

155
Tree	{ super ( outlineStroke ) ; this . value = value ; }
Code	{ super ( outlineStroke ) ; this . value = value ; }
Distance : 8

156
Tree	{ super ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX , stroke ) ; this . value = value ; }
Distance : 7

157
Tree	{ super ( paint , stroke ) ; this . value = value ; }
Code	{ super ( paint , stroke ) ; this . value = value ; }
Distance : 6

158
Tree	{ super ( formatString , stroke ) ; this . value = value ; }
Code	{ super ( formatString , stroke ) ; this . value = value ; }
Distance : 7

159
Tree	{ super ( assign.assignNode , stroke ) ; this . value = value ; }
Code	{ super ( assign.assignNode , stroke ) ; this . value = value ; }
Distance : 7

160
Tree	{ super ( LocalizedFormats.NO_OPTIMUM_COMPUTED_YET , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NO_OPTIMUM_COMPUTED_YET , stroke ) ; this . value = value ; }
Distance : 7

161
Tree	{ super ( LocalizedFormats.NOT_FINITE_NUMBER , stroke ) ; this . value = value ; }
Code	{ super ( LocalizedFormats.NOT_FINITE_NUMBER , stroke ) ; this . value = value ; }
Distance : 7

162
Tree	{ super ( isControlStructure , stroke ) ; this . value = value ; }
Code	{ super ( isControlStructure , stroke ) ; this . value = value ; }
Distance : 7

163
Tree	{ super ( v.data , stroke ) ; this . value = value ; }
Code	{ super ( v.data , stroke ) ; this . value = value ; }
Distance : 7

164
Tree	{ super ( stroke ) ; this . alpha = outlineStroke ; }
Code	{ super ( stroke ) ; this . alpha = outlineStroke ; }
Distance : 10

165
Tree	{ super ( outlineStroke ) ; this . outlinePaint = paint ; }
Code	{ super ( outlineStroke ) ; this . outlinePaint = paint ; }
Distance : 10

166
Tree	{ super ( value ) ; this . outlinePaint = alpha ; }
Code	{ super ( value ) ; this . outlinePaint = alpha ; }
Distance : 11

167
Tree	{ super ( alpha ) ; this . alpha = outlineStroke ; }
Code	{ super ( alpha ) ; this . alpha = outlineStroke ; }
Distance : 10

168
Tree	{ super ( value ) ; this . outlinePaint = stroke ; }
Code	{ super ( value ) ; this . outlinePaint = stroke ; }
Distance : 11

169
Tree	{ super ( outlineStroke ) ; this . paint = outlineStroke ; }
Code	{ super ( outlineStroke ) ; this . paint = outlineStroke ; }
Distance : 10

170
Tree	{ super ( value ) ; this . outlinePaint = paint ; }
Code	{ super ( value ) ; this . outlinePaint = paint ; }
Distance : 11

171
Tree	{ super ( outlineStroke ) ; this . alpha = outlineStroke ; }
Code	{ super ( outlineStroke ) ; this . alpha = outlineStroke ; }
Distance : 10

172
Tree	{ super ( stroke ) ; this . stroke = outlinePaint ; }
Code	{ super ( stroke ) ; this . stroke = outlinePaint ; }
Distance : 10

173
Tree	{ super ( alpha ) ; this . stroke = outlinePaint ; }
Code	{ super ( alpha ) ; this . stroke = outlinePaint ; }
Distance : 10

174
Tree	{ super ( value ) ; this . paint = outlineStroke ; }
Code	{ super ( value ) ; this . paint = outlineStroke ; }
Distance : 11

175
Tree	{ super ( value ) ; this . alpha = outlineStroke ; }
Code	{ super ( value ) ; this . alpha = outlineStroke ; }
Distance : 11

176
Tree	{ super ( paint ) ; this . outlinePaint = outlinePaint ; }
Code	{ super ( paint ) ; this . outlinePaint = outlinePaint ; }
Distance : 10

177
Tree	{ super ( outlineStroke ) ; this . stroke = outlinePaint ; }
Code	{ super ( outlineStroke ) ; this . stroke = outlinePaint ; }
Distance : 10

178
Tree	{ super ( outlinePaint ) ; this . stroke = outlineStroke ; }
Code	{ super ( outlinePaint ) ; this . stroke = outlineStroke ; }
Distance : 10

179
Tree	{ super ( outlinePaint ) ; this . outlinePaint = alpha ; }
Code	{ super ( outlinePaint ) ; this . outlinePaint = alpha ; }
Distance : 10

180
Tree	{ super ( stroke ) ; this . outlineStroke = outlineStroke ; }
Code	{ super ( stroke ) ; this . outlineStroke = outlineStroke ; }
Distance : 10

181
Tree	{ super ( outlinePaint ) ; this . outlinePaint = stroke ; }
Code	{ super ( outlinePaint ) ; this . outlinePaint = stroke ; }
Distance : 10

182
Tree	{ super ( stroke ) ; this . paint = outlinePaint ; }
Code	{ super ( stroke ) ; this . paint = outlinePaint ; }
Distance : 10

183
Tree	{ super ( alpha ) ; this . outlineStroke = outlineStroke ; }
Code	{ super ( alpha ) ; this . outlineStroke = outlineStroke ; }
Distance : 10

184
Tree	{ super ( alpha ) ; this . paint = outlinePaint ; }
Code	{ super ( alpha ) ; this . paint = outlinePaint ; }
Distance : 10

185
Tree	{ super ( value ) ; this . stroke = outlinePaint ; }
Code	{ super ( value ) ; this . stroke = outlinePaint ; }
Distance : 11

186
Tree	{ super ( stroke ) ; this . alpha = outlinePaint ; }
Code	{ super ( stroke ) ; this . alpha = outlinePaint ; }
Distance : 10

187
Tree	{ super ( outlinePaint ) ; this . outlinePaint = paint ; }
Code	{ super ( outlinePaint ) ; this . outlinePaint = paint ; }
Distance : 10

188
Tree	{ super ( alpha ) ; this . alpha = outlinePaint ; }
Code	{ super ( alpha ) ; this . alpha = outlinePaint ; }
Distance : 10

189
Tree	{ super ( outlineStroke ) ; this . outlineStroke = outlineStroke ; }
Code	{ super ( outlineStroke ) ; this . outlineStroke = outlineStroke ; }
Distance : 10

190
Tree	{ super ( outlineStroke ) ; this . paint = outlinePaint ; }
Code	{ super ( outlineStroke ) ; this . paint = outlinePaint ; }
Distance : 10

191
Tree	{ super ( outlinePaint ) ; this . paint = outlineStroke ; }
Code	{ super ( outlinePaint ) ; this . paint = outlineStroke ; }
Distance : 10

192
Tree	{ super ( outlineStroke ) ; this . alpha = outlinePaint ; }
Code	{ super ( outlineStroke ) ; this . alpha = outlinePaint ; }
Distance : 10

193
Tree	{ super ( outlinePaint ) ; this . alpha = outlineStroke ; }
Code	{ super ( outlinePaint ) ; this . alpha = outlineStroke ; }
Distance : 10

194
Tree	{ super ( value ) ; this . outlineStroke = outlineStroke ; }
Code	{ super ( value ) ; this . outlineStroke = outlineStroke ; }
Distance : 11

195
Tree	{ super ( value ) ; this . paint = outlinePaint ; }
Code	{ super ( value ) ; this . paint = outlinePaint ; }
Distance : 11

196
Tree	{ super ( value ) ; this . alpha = outlinePaint ; }
Code	{ super ( value ) ; this . alpha = outlinePaint ; }
Distance : 11

197
Tree	{ super ( outlinePaint ) ; this . stroke = outlinePaint ; }
Code	{ super ( outlinePaint ) ; this . stroke = outlinePaint ; }
Distance : 10

198
Tree	{ super ( stroke ) ; this . outlineStroke = outlinePaint ; }
Code	{ super ( stroke ) ; this . outlineStroke = outlinePaint ; }
Distance : 10

199
Tree	{ super ( stroke ) ; this . outlinePaint = outlineStroke ; }
Code	{ super ( stroke ) ; this . outlinePaint = outlineStroke ; }
Distance : 10

========================================================================


========================================================================
Example Number: 3
Parent Code is: 
if ( index < NUMBER_CONSTANT ) { return; }
-------------------------------------------------------------------------------
Child code is: 
if ( index < NUMBER_CONSTANT ) { throw new UnknownKeyException ( STRING_CONSTANT + key + STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (500{val=return;}) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=index}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=UnknownKeyException})) (214{val=(}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=key}) (200{val=+}) (45{val=STRING_CONSTANT})) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/18/parent/source_org_jfree_data_DefaultKeyedValues.java
-------------------------------------------------------------------------------
Edit Distance : 11
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( index < NUMBER_CONSTANT ) { return; }
Code	if ( index < NUMBER_CONSTANT ) { return; }
Distance : 11

1
Tree	if ( index . getBounds2D ( index ) ) { return; }
Code	if ( index . getBounds2D ( index ) ) { return; }
Distance : 14

2
Tree	if ( ! index . getBytes ( index ) ) { return; }
Code	if ( ! index . getBytes ( index ) ) { return; }
Distance : 15

3
Tree	if ( ! index . isEmptyType ( index ) ) { return; }
Code	if ( ! index . isEmptyType ( index ) ) { return; }
Distance : 15

4
Tree	if ( ! index . getParentNode ( index ) ) { return; }
Code	if ( ! index . getParentNode ( index ) ) { return; }
Distance : 15

5
Tree	if ( ! index . forward ( index ) ) { return; }
Code	if ( ! index . forward ( index ) ) { return; }
Distance : 15

6
Tree	if ( index . isEmptyType ( index ) ) { return; }
Code	if ( index . isEmptyType ( index ) ) { return; }
Distance : 14

7
Tree	if ( index . returnChar ( index ) ) { return; }
Code	if ( index . returnChar ( index ) ) { return; }
Distance : 14

8
Tree	if ( ! index . setFunction ( index ) ) { return; }
Code	if ( ! index . setFunction ( index ) ) { return; }
Distance : 15

9
Tree	if ( index . abs ( index ) == return; ) { return; }
Code	if ( index . abs ( index ) == return; ) { return; }
Distance : 14

10
Tree	if ( index . isEnhancedFor () ) { return; }
Code	if ( index . isEnhancedFor () ) { return; }
Distance : 14

11
Tree	if ( ! index . bool ( index ) ) { return; }
Code	if ( ! index . bool ( index ) ) { return; }
Distance : 15

12
Tree	if ( index . equal () ) { return; }
Code	if ( index . equal () ) { return; }
Distance : 14

13
Tree	if ( index . getDataset () ) { return; }
Code	if ( index . getDataset () ) { return; }
Distance : 14

14
Tree	if ( index . isGlobal () ) { return; }
Code	if ( index . isGlobal () ) { return; }
Distance : 14

15
Tree	if ( ! index . newScope ( index ) ) { return; }
Code	if ( ! index . newScope ( index ) ) { return; }
Distance : 15

16
Tree	if ( ! index . getChangedScopeNodesForPass ( index ) ) { return; }
Code	if ( ! index . getChangedScopeNodesForPass ( index ) ) { return; }
Distance : 15

17
Tree	if ( index . getDefaultNumberFormat ( index ) ) { return; }
Code	if ( index . getDefaultNumberFormat ( index ) ) { return; }
Distance : 14

18
Tree	if ( ! index . linearCombination ( index ) ) { return; }
Code	if ( ! index . linearCombination ( index ) ) { return; }
Distance : 15

19
Tree	if ( index . isGeneric ( index ) ) { return; }
Code	if ( index . isGeneric ( index ) ) { return; }
Distance : 14

20
Tree	if ( index . dataset ( index ) ) { return; }
Code	if ( index . dataset ( index ) ) { return; }
Distance : 14

21
Tree	if ( ! getGoalType ( index ) ) { return; }
Code	if ( ! getGoalType ( index ) ) { return; }
Distance : 15

22
Tree	if ( ! returnChar ( index ) ) { return; }
Code	if ( ! returnChar ( index ) ) { return; }
Distance : 15

23
Tree	if ( ! index . Gamma ( index ) ) { return; }
Code	if ( ! index . Gamma ( index ) ) { return; }
Distance : 15

24
Tree	if ( ! index . isAbstract ( index ) ) { return; }
Code	if ( ! index . isAbstract ( index ) ) { return; }
Distance : 15

25
Tree	if ( ! index . getDefaultNumberFormat ( index ) ) { return; }
Code	if ( ! index . getDefaultNumberFormat ( index ) ) { return; }
Distance : 15

26
Tree	if ( ! index . axis ( index ) ) { return; }
Code	if ( ! index . axis ( index ) ) { return; }
Distance : 15

27
Tree	if ( ! index . toLowerCase ( index ) ) { return; }
Code	if ( ! index . toLowerCase ( index ) ) { return; }
Distance : 15

28
Tree	if ( index . compare ( index ) ) { return; }
Code	if ( index . compare ( index ) ) { return; }
Distance : 14

29
Tree	if ( index . isInterface ( index ) ) { return; }
Code	if ( index . isInterface ( index ) ) { return; }
Distance : 14

30
Tree	if ( ! index . center ( index ) ) { return; }
Code	if ( ! index . center ( index ) ) { return; }
Distance : 15

31
Tree	if ( index . isAbstract ( index ) ) { return; }
Code	if ( index . isAbstract ( index ) ) { return; }
Distance : 14

32
Tree	if ( ! index . exp ( index ) ) { return; }
Code	if ( ! index . exp ( index ) ) { return; }
Distance : 15

33
Tree	if ( ! index . noDefaultConstructor ( index ) ) { return; }
Code	if ( ! index . noDefaultConstructor ( index ) ) { return; }
Distance : 15

34
Tree	if ( ! index . ArrayRealVector ( index ) ) { return; }
Code	if ( ! index . ArrayRealVector ( index ) ) { return; }
Distance : 15

35
Tree	if ( ! index . tolerance ( index ) ) { return; }
Code	if ( ! index . tolerance ( index ) ) { return; }
Distance : 15

36
Tree	if ( ! index . getRandomProvider ( index ) ) { return; }
Code	if ( ! index . getRandomProvider ( index ) ) { return; }
Distance : 15

37
Tree	if ( ! index . hotSwapTranspile ( index ) ) { return; }
Code	if ( ! index . hotSwapTranspile ( index ) ) { return; }
Distance : 15

38
Tree	if ( index . explicitMode ( index ) ) { return; }
Code	if ( index . explicitMode ( index ) ) { return; }
Distance : 14

39
Tree	if ( index . valueOf ( index ) == null ) { return; }
Code	if ( index . valueOf ( index ) == null ) { return; }
Distance : 14

40
Tree	if ( ! index . wholeHyperplane ( index ) ) { return; }
Code	if ( ! index . wholeHyperplane ( index ) ) { return; }
Distance : 15

41
Tree	if ( ! index . wantedNumberOfInvocations ( index ) ) { return; }
Code	if ( ! index . wantedNumberOfInvocations ( index ) ) { return; }
Distance : 15

42
Tree	if ( ! index . dotProduct ( index ) ) { return; }
Code	if ( ! index . dotProduct ( index ) ) { return; }
Distance : 15

43
Tree	if ( ! index . visible ( index ) ) { return; }
Code	if ( ! index . visible ( index ) ) { return; }
Distance : 15

44
Tree	if ( ! index . booleanValue ( index ) ) { return; }
Code	if ( ! index . booleanValue ( index ) ) { return; }
Distance : 15

45
Tree	if ( index . currentTimeMillis ( index ) ) { return; }
Code	if ( index . currentTimeMillis ( index ) ) { return; }
Distance : 14

46
Tree	if ( ! index . getSolver ( index ) ) { return; }
Code	if ( ! index . getSolver ( index ) ) { return; }
Distance : 15

47
Tree	if ( ! index . fft ( index ) ) { return; }
Code	if ( ! index . fft ( index ) ) { return; }
Distance : 15

48
Tree	if ( ! index . isChanged ( index ) ) { return; }
Code	if ( ! index . isChanged ( index ) ) { return; }
Distance : 15

49
Tree	if ( ! index . getTree ( index ) ) { return; }
Code	if ( ! index . getTree ( index ) ) { return; }
Distance : 15

50
Tree	if ( ! index . matcher ( index ) ) { return; }
Code	if ( ! index . matcher ( index ) ) { return; }
Distance : 15

51
Tree	if ( index . isParamList ( index ) ) { return; }
Code	if ( index . isParamList ( index ) ) { return; }
Distance : 14

52
Tree	if ( index . visible ( index ) ) { return; }
Code	if ( index . visible ( index ) ) { return; }
Distance : 14

53
Tree	if ( index . tolerance ( index ) ) { return; }
Code	if ( index . tolerance ( index ) ) { return; }
Distance : 14

54
Tree	if ( index . isAssign ( index ) ) { return; }
Code	if ( index . isAssign ( index ) ) { return; }
Distance : 14

55
Tree	if ( index . getBytes ( index ) ) { return; }
Code	if ( index . getBytes ( index ) ) { return; }
Distance : 14

56
Tree	if ( ! getRandomGenerator ( index ) ) { return; }
Code	if ( ! getRandomGenerator ( index ) ) { return; }
Distance : 15

57
Tree	if ( ! index . getRawNominalType ( index ) ) { return; }
Code	if ( ! index . getRawNominalType ( index ) ) { return; }
Distance : 15

58
Tree	if ( ! index . cos ( index ) ) { return; }
Code	if ( ! index . cos ( index ) ) { return; }
Distance : 15

59
Tree	if ( ! index . getGrandparent ( index ) ) { return; }
Code	if ( ! index . getGrandparent ( index ) ) { return; }
Distance : 15

60
Tree	if ( ! index . degreesOfFreedom ( index ) ) { return; }
Code	if ( ! index . degreesOfFreedom ( index ) ) { return; }
Distance : 15

61
Tree	if ( ! index . getTimeZone ( index ) ) { return; }
Code	if ( ! index . getTimeZone ( index ) ) { return; }
Distance : 15

62
Tree	if ( index . getDimension () ) { return; }
Code	if ( index . getDimension () ) { return; }
Distance : 14

63
Tree	if ( ! index . w ( index ) ) { return; }
Code	if ( ! index . w ( index ) ) { return; }
Distance : 15

64
Tree	if ( index . getParentNode ( index ) ) { return; }
Code	if ( index . getParentNode ( index ) ) { return; }
Distance : 14

65
Tree	if ( index . reportOr () ) { return; }
Code	if ( index . reportOr () ) { return; }
Distance : 14

66
Tree	if ( ! isHoistScope ( index ) ) { return; }
Code	if ( ! isHoistScope ( index ) ) { return; }
Distance : 15

67
Tree	if ( index . abs ( index ) ) { return; }
Code	if ( index . abs ( index ) ) { return; }
Distance : 14

68
Tree	if ( ! index . ch ( index ) ) { return; }
Code	if ( ! index . ch ( index ) ) { return; }
Distance : 15

69
Tree	if ( ! index . isNameDeclaration ( index ) ) { return; }
Code	if ( ! index . isNameDeclaration ( index ) ) { return; }
Distance : 15

70
Tree	if ( ! index . regularizedGammaP ( index ) ) { return; }
Code	if ( ! index . regularizedGammaP ( index ) ) { return; }
Distance : 15

71
Tree	if ( index . createsScope ( index ) ) { return; }
Code	if ( index . createsScope ( index ) ) { return; }
Distance : 14

72
Tree	if ( index . noDefaultConstructor ( index ) ) { return; }
Code	if ( index . noDefaultConstructor ( index ) ) { return; }
Distance : 14

73
Tree	if ( ! isClinitMethod ( index ) ) { return; }
Code	if ( ! isClinitMethod ( index ) ) { return; }
Distance : 15

74
Tree	if ( ! index . isScript ( index ) ) { return; }
Code	if ( ! index . isScript ( index ) ) { return; }
Distance : 15

75
Tree	if ( ! index . maxY ( index ) ) { return; }
Code	if ( ! index . maxY ( index ) ) { return; }
Distance : 15

76
Tree	if ( index . linearCombination ( index ) ) { return; }
Code	if ( index . linearCombination ( index ) ) { return; }
Distance : 14

77
Tree	if ( index . returnZero ( index ) ) { return; }
Code	if ( index . returnZero ( index ) ) { return; }
Distance : 14

78
Tree	if ( ! index . vector ( index ) ) { return; }
Code	if ( ! index . vector ( index ) ) { return; }
Distance : 15

79
Tree	if ( ! index . getCommonTypes ( index ) ) { return; }
Code	if ( ! index . getCommonTypes ( index ) ) { return; }
Distance : 15

80
Tree	if ( ! index . isExprResult ( index ) ) { return; }
Code	if ( ! index . isExprResult ( index ) ) { return; }
Distance : 15

81
Tree	if ( index . getTolerance () ) { return; }
Code	if ( index . getTolerance () ) { return; }
Distance : 14

82
Tree	if ( ! index . newInstance ( index ) ) { return; }
Code	if ( ! index . newInstance ( index ) ) { return; }
Distance : 15

83
Tree	if ( index . size () ) { return; }
Code	if ( index . size () ) { return; }
Distance : 14

84
Tree	if ( ! index . currentTimeMillis ( index ) ) { return; }
Code	if ( ! index . currentTimeMillis ( index ) ) { return; }
Distance : 15

85
Tree	if ( ! index . divide ( index ) ) { return; }
Code	if ( ! index . divide ( index ) ) { return; }
Distance : 15

86
Tree	if ( index . annotation () ) { return; }
Code	if ( index . annotation () ) { return; }
Distance : 14

87
Tree	if ( ! index . hashCode ( index ) ) { return; }
Code	if ( ! index . hashCode ( index ) ) { return; }
Distance : 15

88
Tree	if ( ! index . isForIn ( index ) ) { return; }
Code	if ( ! index . isForIn ( index ) ) { return; }
Distance : 15

89
Tree	if ( index . getRandomGenerator () ) { return; }
Code	if ( index . getRandomGenerator () ) { return; }
Distance : 14

90
Tree	if ( ! index . array ( index ) ) { return; }
Code	if ( ! index . array ( index ) ) { return; }
Distance : 15

91
Tree	if ( index . getDaysInYearMax () ) { return; }
Code	if ( index . getDaysInYearMax () ) { return; }
Distance : 14

92
Tree	if ( index . hotSwapTranspile ( index ) ) { return; }
Code	if ( index . hotSwapTranspile ( index ) ) { return; }
Distance : 14

93
Tree	if ( ! index . types ( index ) ) { return; }
Code	if ( ! index . types ( index ) ) { return; }
Distance : 15

94
Tree	if ( ! index . explicitMode ( index ) ) { return; }
Code	if ( ! index . explicitMode ( index ) ) { return; }
Distance : 15

95
Tree	if ( index . dayOfWeek ( index ) ) { return; }
Code	if ( index . dayOfWeek ( index ) ) { return; }
Distance : 14

96
Tree	if ( index . toBooleanObject ( index ) == null ) { return; }
Code	if ( index . toBooleanObject ( index ) == null ) { return; }
Distance : 14

97
Tree	if ( index . getParent () ) { return; }
Code	if ( index . getParent () ) { return; }
Distance : 14

98
Tree	if ( ! index . getGoalType ( index ) ) { return; }
Code	if ( ! index . getGoalType ( index ) ) { return; }
Distance : 15

99
Tree	if ( ! index . getClass ( index ) ) { return; }
Code	if ( ! index . getClass ( index ) ) { return; }
Distance : 15

100
Tree	if ( ! index . annotation ( index ) ) { return; }
Code	if ( ! index . annotation ( index ) ) { return; }
Distance : 15

101
Tree	if ( ! getDataset ( index ) ) { return; }
Code	if ( ! getDataset ( index ) ) { return; }
Distance : 15

102
Tree	if ( index . isHoistScope ( index ) ) { return; }
Code	if ( index . isHoistScope ( index ) ) { return; }
Distance : 14

103
Tree	if ( index . index ( index ) ) { return; }
Code	if ( index . index ( index ) ) { return; }
Distance : 14

104
Tree	if ( ! index . getScopeRoot ( index ) ) { return; }
Code	if ( ! index . getScopeRoot ( index ) ) { return; }
Distance : 15

105
Tree	if ( ! index . returnChar ( index ) ) { return; }
Code	if ( ! index . returnChar ( index ) ) { return; }
Distance : 15

106
Tree	if ( ! index . isNaN ( index ) ) { return; }
Code	if ( ! index . isNaN ( index ) ) { return; }
Distance : 15

107
Tree	if ( ! index . isInterface ( index ) ) { return; }
Code	if ( ! index . isInterface ( index ) ) { return; }
Distance : 15

108
Tree	if ( index . isNaN () ) { return; }
Code	if ( index . isNaN () ) { return; }
Distance : 14

109
Tree	if ( ! index . dataset ( index ) ) { return; }
Code	if ( ! index . dataset ( index ) ) { return; }
Distance : 15

110
Tree	if ( index . isEnhancedFor ( index ) ) { return; }
Code	if ( index . isEnhancedFor ( index ) ) { return; }
Distance : 14

111
Tree	if ( ! index . getRandomGenerator ( index ) ) { return; }
Code	if ( ! index . getRandomGenerator ( index ) ) { return; }
Distance : 15

112
Tree	if ( index . equal ( index ) ) { return; }
Code	if ( index . equal ( index ) ) { return; }
Distance : 14

113
Tree	if ( index . getDataset ( index ) ) { return; }
Code	if ( index . getDataset ( index ) ) { return; }
Distance : 14

114
Tree	if ( index . isGlobal ( index ) ) { return; }
Code	if ( index . isGlobal ( index ) ) { return; }
Distance : 14

115
Tree	if ( ! index . returnZero ( index ) ) { return; }
Code	if ( ! index . returnZero ( index ) ) { return; }
Distance : 15

116
Tree	if ( ! index . getDimension ( index ) ) { return; }
Code	if ( ! index . getDimension ( index ) ) { return; }
Distance : 15

117
Tree	if ( index . valueOf ( index ) ) { return; }
Code	if ( index . valueOf ( index ) ) { return; }
Distance : 14

118
Tree	if ( ! index . size ( index ) ) { return; }
Code	if ( ! index . size ( index ) ) { return; }
Distance : 15

119
Tree	if ( ! index . returnFalse ( index ) ) { return; }
Code	if ( ! index . returnFalse ( index ) ) { return; }
Distance : 15

120
Tree	if ( ! index . abs ( index ) ) { return; }
Code	if ( ! index . abs ( index ) ) { return; }
Distance : 15

121
Tree	if ( index . toBooleanObject ( index ) ) { return; }
Code	if ( index . toBooleanObject ( index ) ) { return; }
Distance : 14

122
Tree	if ( index != null ) { return; }
Code	if ( index != null ) { return; }
Distance : 13

123
Tree	if ( ! index . toBooleanObject ( index ) ) { return; }
Code	if ( ! index . toBooleanObject ( index ) ) { return; }
Distance : 15

124
Tree	if ( index != index ) { return; }
Code	if ( index != index ) { return; }
Distance : 13

125
Tree	if ( ! index . valueOf ( index ) ) { return; }
Code	if ( ! index . valueOf ( index ) ) { return; }
Distance : 15

126
Tree	if ( ! index . getParent ( index ) ) { return; }
Code	if ( ! index . getParent ( index ) ) { return; }
Distance : 15

127
Tree	if ( index . getParent ( index ) ) { return; }
Code	if ( index . getParent ( index ) ) { return; }
Distance : 14

128
Tree	if ( ! index . wholeSpace ( index ) ) { return; }
Code	if ( ! index . wholeSpace ( index ) ) { return; }
Distance : 15

129
Tree	if ( index . toBooleanObject () ) { return; }
Code	if ( index . toBooleanObject () ) { return; }
Distance : 14

130
Tree	if ( ! index . getDataset ( index ) ) { return; }
Code	if ( ! index . getDataset ( index ) ) { return; }
Distance : 15

131
Tree	if ( ! index . isHoistScope ( index ) ) { return; }
Code	if ( ! index . isHoistScope ( index ) ) { return; }
Distance : 15

132
Tree	if ( index . abs ( index ) == null ) { return; }
Code	if ( index . abs ( index ) == null ) { return; }
Distance : 14

133
Tree	if ( ! index . equal ( index ) ) { return; }
Code	if ( ! index . equal ( index ) ) { return; }
Distance : 15

134
Tree	if ( ! index . index ( index ) ) { return; }
Code	if ( ! index . index ( index ) ) { return; }
Distance : 15

135
Tree	if ( index . isNaN ( index ) ) { return; }
Code	if ( index . isNaN ( index ) ) { return; }
Distance : 14

136
Tree	if ( ! index . isEnhancedFor ( index ) ) { return; }
Code	if ( ! index . isEnhancedFor ( index ) ) { return; }
Distance : 15

137
Tree	if ( ! index . getTolerance ( index ) ) { return; }
Code	if ( ! index . getTolerance ( index ) ) { return; }
Distance : 15

138
Tree	if ( ! index . getTime ( index ) ) { return; }
Code	if ( ! index . getTime ( index ) ) { return; }
Distance : 15

139
Tree	if ( ! isPowerOf2 ( index ) ) { return; }
Code	if ( ! isPowerOf2 ( index ) ) { return; }
Distance : 15

140
Tree	if ( ! allDefinitionsEquivalent ( index ) ) { return; }
Code	if ( ! allDefinitionsEquivalent ( index ) ) { return; }
Distance : 15

141
Tree	if ( index . abs () ) { return; }
Code	if ( index . abs () ) { return; }
Distance : 14

142
Tree	if ( ! index . getDaysInYearMax ( index ) ) { return; }
Code	if ( ! index . getDaysInYearMax ( index ) ) { return; }
Distance : 15

143
Tree	if ( ! index . min ( index ) ) { return; }
Code	if ( ! index . min ( index ) ) { return; }
Distance : 15

144
Tree	if ( ! index . getY ( index ) ) { return; }
Code	if ( ! index . getY ( index ) ) { return; }
Distance : 15

145
Tree	if ( index . coefficients ( index ) ) { return; }
Code	if ( index . coefficients ( index ) ) { return; }
Distance : 14

146
Tree	if ( ! index . getBounds2D ( index ) ) { return; }
Code	if ( ! index . getBounds2D ( index ) ) { return; }
Distance : 15

147
Tree	if ( index . isNaN ( index ) == null ) { return; }
Code	if ( index . isNaN ( index ) == null ) { return; }
Distance : 14

148
Tree	if ( ! getTolerance ( index ) ) { return; }
Code	if ( ! getTolerance ( index ) ) { return; }
Distance : 15

149
Tree	if ( ! index . u ( index ) ) { return; }
Code	if ( ! index . u ( index ) ) { return; }
Distance : 15

150
Tree	if ( index . copySelf ( index ) ) { return; }
Code	if ( index . copySelf ( index ) ) { return; }
Distance : 14

151
Tree	if ( ! index . instance ( index ) ) { return; }
Code	if ( ! index . instance ( index ) ) { return; }
Distance : 15

152
Tree	if ( ! index . getNumber ( index ) ) { return; }
Code	if ( ! index . getNumber ( index ) ) { return; }
Distance : 15

153
Tree	if ( ! index . dayOfWeek ( index ) ) { return; }
Code	if ( ! index . dayOfWeek ( index ) ) { return; }
Distance : 15

154
Tree	if ( ! index . getArgumentMatcherStorage ( index ) ) { return; }
Code	if ( ! index . getArgumentMatcherStorage ( index ) ) { return; }
Distance : 15

155
Tree	if ( ! index . getReal ( index ) ) { return; }
Code	if ( ! index . getReal ( index ) ) { return; }
Distance : 15

156
Tree	if ( ! index . getInstantiator ( index ) ) { return; }
Code	if ( ! index . getInstantiator ( index ) ) { return; }
Distance : 15

157
Tree	if ( ! index . create ( index ) ) { return; }
Code	if ( ! index . create ( index ) ) { return; }
Distance : 15

158
Tree	if ( index . index () ) { return; }
Code	if ( index . index () ) { return; }
Distance : 14

159
Tree	if ( ! index . getPrinter ( index ) ) { return; }
Code	if ( ! index . getPrinter ( index ) ) { return; }
Distance : 15

160
Tree	if ( index . getGoalType ( index ) ) { return; }
Code	if ( index . getGoalType ( index ) ) { return; }
Distance : 14

161
Tree	if ( index . size ( index ) ) { return; }
Code	if ( index . size ( index ) ) { return; }
Distance : 14

162
Tree	if ( index . instance ( index ) ) { return; }
Code	if ( index . instance ( index ) ) { return; }
Distance : 14

163
Tree	if ( ! index . getPrototypeObject ( index ) ) { return; }
Code	if ( ! index . getPrototypeObject ( index ) ) { return; }
Distance : 15

164
Tree	if ( index . getTime ( index ) ) { return; }
Code	if ( index . getTime ( index ) ) { return; }
Distance : 14

165
Tree	if ( index . isHoistScope () ) { return; }
Code	if ( index . isHoistScope () ) { return; }
Distance : 14

166
Tree	if ( ! index . isName ( index ) ) { return; }
Code	if ( ! index . isName ( index ) ) { return; }
Distance : 15

167
Tree	if ( index . annotation ( index ) ) { return; }
Code	if ( index . annotation ( index ) ) { return; }
Distance : 14

168
Tree	if ( ! index . reportOr ( index ) ) { return; }
Code	if ( ! index . reportOr ( index ) ) { return; }
Distance : 15

169
Tree	if ( index . valueOf () ) { return; }
Code	if ( index . valueOf () ) { return; }
Distance : 14

170
Tree	if ( index . getParent ( index ) == null ) { return; }
Code	if ( index . getParent ( index ) == null ) { return; }
Distance : 14

171
Tree	if ( ! index . isGlobal ( index ) ) { return; }
Code	if ( ! index . isGlobal ( index ) ) { return; }
Distance : 15

172
Tree	if ( index . getRandomGenerator ( index ) ) { return; }
Code	if ( index . getRandomGenerator ( index ) ) { return; }
Distance : 14

173
Tree	if ( index . getDaysInYearMax ( index ) ) { return; }
Code	if ( index . getDaysInYearMax ( index ) ) { return; }
Distance : 14

174
Tree	if ( index . getTolerance ( index ) ) { return; }
Code	if ( index . getTolerance ( index ) ) { return; }
Distance : 14

175
Tree	if ( ! index . coefficients ( index ) ) { return; }
Code	if ( ! index . coefficients ( index ) ) { return; }
Distance : 15

176
Tree	if ( index . getDimension ( index ) ) { return; }
Code	if ( index . getDimension ( index ) ) { return; }
Distance : 14

177
Tree	if ( ! index . IEEEremainder ( index ) ) { return; }
Code	if ( ! index . IEEEremainder ( index ) ) { return; }
Distance : 15

178
Tree	if ( ! index . isGeneric ( index ) ) { return; }
Code	if ( ! index . isGeneric ( index ) ) { return; }
Distance : 15

179
Tree	if ( index . reportOr ( index ) ) { return; }
Code	if ( index . reportOr ( index ) ) { return; }
Distance : 14

180
Tree	if ( ! index . point ( index ) ) { return; }
Code	if ( ! index . point ( index ) ) { return; }
Distance : 15

181
Tree	if ( ! index . isPowerOf2 ( index ) ) { return; }
Code	if ( ! index . isPowerOf2 ( index ) ) { return; }
Distance : 15

182
Tree	if ( ! index . compare ( index ) ) { return; }
Code	if ( ! index . compare ( index ) ) { return; }
Distance : 15

183
Tree	if ( ! index . copySelf ( index ) ) { return; }
Code	if ( ! index . copySelf ( index ) ) { return; }
Distance : 15

184
Tree	if ( ! index . createsScope ( index ) ) { return; }
Code	if ( ! index . createsScope ( index ) ) { return; }
Distance : 15

185
Tree	if ( ! getNumber ( index ) ) { return; }
Code	if ( ! getNumber ( index ) ) { return; }
Distance : 15

186
Tree	if ( ! types ( index ) ) { return; }
Code	if ( ! types ( index ) ) { return; }
Distance : 15

187
Tree	if ( ! index . LocalizedFormats.FUNCTION ( index ) ) { return; }
Code	if ( ! index . LocalizedFormats.FUNCTION ( index ) ) { return; }
Distance : 15

188
Tree	if ( index != default: ) { null }
Code	if ( index != default: ) { null }
Distance : 13

189
Tree	if ( key != return; ) { continue; }
Code	if ( key != return; ) { continue; }
Distance : 14

190
Tree	if ( key != return; ) { super(); }
Code	if ( key != return; ) { super(); }
Distance : 14

191
Tree	if ( key != key ) { default: }
Code	if ( key != key ) { default: }
Distance : 14

192
Tree	if ( key != return; ) { break; }
Code	if ( key != return; ) { break; }
Distance : 14

193
Tree	if ( key != key ) { null }
Code	if ( key != key ) { null }
Distance : 14

194
Tree	if ( index != default: ) { continue; }
Code	if ( index != default: ) { continue; }
Distance : 13

195
Tree	if ( index != default: ) { break; }
Code	if ( index != default: ) { break; }
Distance : 13

196
Tree	if ( index != continue; ) { default: }
Code	if ( index != continue; ) { default: }
Distance : 13

197
Tree	if ( index != break; ) { default: }
Code	if ( index != break; ) { default: }
Distance : 13

198
Tree	if ( key != continue; ) { return; }
Code	if ( key != continue; ) { return; }
Distance : 14

199
Tree	if ( key != break; ) { return; }
Code	if ( key != break; ) { return; }
Distance : 14

========================================================================


========================================================================
Example Number: 4
Parent Code is: 
if ( categoryKeys.length != this . startData [ NUMBER_CONSTANT ] . length ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( categoryKeys.length != getCategoryCount () ) { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=categoryKeys.length}) (242{val=!=}) (22 (2 (22 (315{val=this}) (235{val=.}) (801{val=startData})) (221{val=[}) (34{val=NUMBER_CONSTANT}) (222{val=]})) (235{val=.}) (800{val=length}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (40{val=categoryKeys.length}) (242{val=!=}) (32 (802{val=getCategoryCount}) (216{val=()}))) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/16/parent/source_org_jfree_data_category_DefaultIntervalCategoryDataset.java
-------------------------------------------------------------------------------
Edit Distance : 8
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; }
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; }
Distance : 18

1
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } notifyListeners
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } notifyListeners
Distance : 19

2
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } class
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } class
Distance : 19

3
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } array
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } array
Distance : 19

4
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mock
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mock
Distance : 19

5
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } MathRuntimeException
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } MathRuntimeException
Distance : 19

6
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Override
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Override
Distance : 19

7
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } f
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } f
Distance : 19

8
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } [
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } [
Distance : 19

9
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } -
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } -
Distance : 19

10
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } nullNotPermitted
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } nullNotPermitted
Distance : 19

11
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } &&
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } &&
Distance : 19

12
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } true
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } true
Distance : 19

13
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ]
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ]
Distance : 19

14
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mode
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mode
Distance : 19

15
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ParamChecks
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ParamChecks
Distance : 19

16
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } int
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } int
Distance : 19

17
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } test
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } test
Distance : 19

18
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertEquals
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertEquals
Distance : 19

19
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } @
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } @
Distance : 19

20
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } []
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } []
Distance : 19

21
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Preconditions
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Preconditions
Distance : 19

22
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } String
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } String
Distance : 19

23
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != IllegalArgumentException ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } !
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != IllegalArgumentException ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } !
Distance : 19

24
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkState
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkState
Distance : 19

25
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } false
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } false
Distance : 19

26
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } double
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } double
Distance : 19

27
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } i
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } i
Distance : 19

28
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } !=
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } !=
Distance : 19

29
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } value
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } value
Distance : 19

30
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Object
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Object
Distance : 19

31
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } null
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } null
Distance : 19

32
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NUMBER_CONSTANT
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NUMBER_CONSTANT
Distance : 19

33
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } =
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } =
Distance : 19

34
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } new
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } new
Distance : 19

35
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ()
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ()
Distance : 19

36
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ,
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ,
Distance : 19

37
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } {
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } {
Distance : 19

38
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } STRING_CONSTANT
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } STRING_CONSTANT
Distance : 19

39
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } )
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } )
Distance : 19

40
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <s>
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <s>
Distance : 19

41
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throw
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throw
Distance : 19

42
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <blank>
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <blank>
Distance : 19

43
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ;
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ;
Distance : 19

44
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } (
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } (
Distance : 19

45
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } .
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } .
Distance : 19

46
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ==
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ==
Distance : 19

47
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } super
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } super
Distance : 19

48
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } }
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } }
Distance : 19

49
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Double
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Double
Distance : 19

50
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } instant
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } instant
Distance : 19

51
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } >
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } >
Distance : 19

52
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } this
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } this
Distance : 19

53
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } return
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } return
Distance : 19

54
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } final
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } final
Distance : 19

55
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <
Distance : 19

56
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } name
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } name
Distance : 19

57
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } solver
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } solver
Distance : 19

58
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } y
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } y
Distance : 19

59
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } if
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } if
Distance : 19

60
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } PlotChangeEvent
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } PlotChangeEvent
Distance : 19

61
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Collection
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Collection
Distance : 19

62
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getChronology
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getChronology
Distance : 19

63
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } {}
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } {}
Distance : 19

64
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mockingProgress
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } mockingProgress
Distance : 19

65
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } chrono
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } chrono
Distance : 19

66
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isEmpty
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isEmpty
Distance : 19

67
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } return;
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } return;
Distance : 19

68
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } JSType
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } JSType
Distance : 19

69
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } static
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } static
Distance : 19

70
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } pattern
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } pattern
Distance : 19

71
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } else
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } else
Distance : 19

72
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getMessage
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getMessage
Distance : 19

73
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } clone
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } clone
Distance : 19

74
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } stream
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } stream
Distance : 19

75
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } reportMatcher
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } reportMatcher
Distance : 19

76
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } matcher
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } matcher
Distance : 19

77
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } abs
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } abs
Distance : 19

78
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } dataset
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } dataset
Distance : 19

79
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } StrBuilder
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } StrBuilder
Distance : 19

80
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } js
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } js
Distance : 19

81
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } d
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } d
Distance : 19

82
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } TestUtilities
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } TestUtilities
Distance : 19

83
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } for
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } for
Distance : 19

84
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } externs
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } externs
Distance : 19

85
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Invocation
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Invocation
Distance : 19

86
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } equals
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } equals
Distance : 19

87
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } index
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } index
Distance : 19

88
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } node
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } node
Distance : 19

89
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } setUp
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } setUp
Distance : 19

90
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getParent
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getParent
Distance : 19

91
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } protected
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } protected
Distance : 19

92
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } invocations
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } invocations
Distance : 19

93
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } values
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } values
Distance : 19

94
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } setAcceptedLanguage
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } setAcceptedLanguage
Distance : 19

95
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } public
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } public
Distance : 19

96
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } PeriodType
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } PeriodType
Distance : 19

97
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LanguageMode.ECMASCRIPT6
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LanguageMode.ECMASCRIPT6
Distance : 19

98
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkArgument
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkArgument
Distance : 19

99
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } a
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } a
Distance : 19

100
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isNormalBlock
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isNormalBlock
Distance : 19

101
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } b
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } b
Distance : 19

102
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } MutableTimePeriod
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } MutableTimePeriod
Distance : 19

103
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } size
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } size
Distance : 19

104
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } StringBuilder
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } StringBuilder
Distance : 19

105
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 19

106
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } traverseEs6
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } traverseEs6
Distance : 19

107
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } stroke
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } stroke
Distance : 19

108
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } obj
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } obj
Distance : 19

109
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } s
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } s
Distance : 19

110
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } returnZero
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } returnZero
Distance : 19

111
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } append
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } append
Distance : 19

112
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } sb
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } sb
Distance : 19

113
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != IllegalArgumentException ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } UnivariateFunction
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != IllegalArgumentException ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } UnivariateFunction
Distance : 19

114
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getFirstChild
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getFirstChild
Distance : 19

115
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } sqrt
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } sqrt
Distance : 19

116
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throws
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throws
Distance : 19

117
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } scope
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } scope
Distance : 19

118
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } optimizer
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } optimizer
Distance : 19

119
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } simpleMethod
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } simpleMethod
Distance : 19

120
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isBlock
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } isBlock
Distance : 19

121
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } contains
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } contains
Distance : 19

122
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Args
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Args
Distance : 19

123
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } alpha
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } alpha
Distance : 19

124
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } instance
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } instance
Distance : 19

125
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getField
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getField
Distance : 19

126
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } length
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } length
Distance : 19

127
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } field
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } field
Distance : 19

128
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } reportCodeChange
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } reportCodeChange
Distance : 19

129
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } t
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } t
Distance : 19

130
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } FastMath
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } FastMath
Distance : 19

131
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } invocation
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } invocation
Distance : 19

132
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } IllegalArgumentException
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } IllegalArgumentException
Distance : 19

133
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } expected
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } expected
Distance : 19

134
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } testSame
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } testSame
Distance : 19

135
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } createIllegalArgumentException
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } createIllegalArgumentException
Distance : 19

136
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ArrayList
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ArrayList
Distance : 19

137
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } parent
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } parent
Distance : 19

138
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LINE_JOINER
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } LINE_JOINER
Distance : 19

139
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } x
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } x
Distance : 19

140
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } str
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } str
Distance : 19

141
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertThat
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertThat
Distance : 19

142
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != this ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } boolean
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != this ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } boolean
Distance : 19

143
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } result
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != != ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } result
Distance : 19

144
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } try
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } try
Distance : 19

145
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getArgumentMatcherStorage
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getArgumentMatcherStorage
Distance : 19

146
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <>
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <>
Distance : 19

147
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } :
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } :
Distance : 19

148
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NodeUtil
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NodeUtil
Distance : 19

149
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } fail
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } fail
Distance : 19

150
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } *
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } *
Distance : 19

151
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } join
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } join
Distance : 19

152
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } m
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } m
Distance : 19

153
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } paint
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } paint
Distance : 19

154
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getInstance
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } getInstance
Distance : 19

155
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } type
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } type
Distance : 19

156
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } serialised
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } serialised
Distance : 19

157
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } fireChangeEvent
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } fireChangeEvent
Distance : 19

158
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <=
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } <=
Distance : 19

159
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Fraction
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Fraction
Distance : 19

160
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } toString
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } toString
Distance : 19

161
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Class
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Class
Distance : 19

162
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } options
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } options
Distance : 19

163
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Math
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Math
Distance : 19

164
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } p
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } p
Distance : 19

165
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } source
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } source
Distance : 19

166
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NodeTraversal
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } NodeTraversal
Distance : 19

167
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } data
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } data
Distance : 19

168
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } add
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } add
Distance : 19

169
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Test
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Test
Distance : 19

170
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } List
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } List
Distance : 19

171
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } root
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } root
Distance : 19

172
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } wanted
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } wanted
Distance : 19

173
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ?
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ?
Distance : 19

174
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Integer
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Integer
Distance : 19

175
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Node
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Node
Distance : 19

176
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } v
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } v
Distance : 19

177
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } lines
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } lines
Distance : 19

178
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } c
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } c
Distance : 19

179
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } verify
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } verify
Distance : 19

180
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Exception
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Exception
Distance : 19

181
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ex
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } ex
Distance : 19

182
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } n
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } n
Distance : 19

183
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } catch
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } catch
Distance : 19

184
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } e
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } e
Distance : 19

185
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throw
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } throw
Distance : 19

186
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } compiler
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } compiler
Distance : 19

187
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != this ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } void
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != this ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } void
Distance : 19

188
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } T
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } T
Distance : 19

189
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } /
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } /
Distance : 19

190
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkNotNull
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } checkNotNull
Distance : 19

191
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } long
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } long
Distance : 19

192
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } TestUtils
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } TestUtils
Distance : 19

193
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertTrue
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != startData ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } assertTrue
Distance : 19

194
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } +
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } +
Distance : 19

195
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } valueOf
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } valueOf
Distance : 19

196
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } out
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } out
Distance : 19

197
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } char
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } char
Distance : 19

198
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } get
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } get
Distance : 19

199
Tree	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Assert
Code	if ( length / ( length / length < NUMBER_CONSTANT ) != categoryKeys.length ) { throw length . IllegalArgumentException ( categoryKeys.length , length , length ) ; } Assert
Distance : 19

========================================================================


========================================================================
Example Number: 5
Parent Code is: 
this . dataset = dataset ;
-------------------------------------------------------------------------------
Child code is: 
setDataset ( dataset ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=dataset})) (204{val==}) (800{val=dataset})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (802{val=setDataset}) (214{val=(}) (800{val=dataset}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/12/parent/source_org_jfree_chart_plot_MultiplePiePlot.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	this . dataset = dataset ;
Code	this . dataset = dataset ;
Distance : 4

1
Tree	this . dataset = new isClinitMethod ( dataset ) ;
Code	this . dataset = new isClinitMethod ( dataset ) ;
Distance : 6

2
Tree	this . dataset = new JPopupMenu ( dataset ) ;
Code	this . dataset = new JPopupMenu ( dataset ) ;
Distance : 6

3
Tree	this . dataset = new f1 ( dataset ) ;
Code	this . dataset = new f1 ( dataset ) ;
Distance : 6

4
Tree	this . dataset = new MutableInt ( dataset ) ;
Code	this . dataset = new MutableInt ( dataset ) ;
Distance : 6

5
Tree	this . dataset = new coefficients ( dataset ) ;
Code	this . dataset = new coefficients ( dataset ) ;
Distance : 6

6
Tree	this . dataset = new di ( dataset ) ;
Code	this . dataset = new di ( dataset ) ;
Distance : 6

7
Tree	this . dataset = new Double.NaN ( dataset ) ;
Code	this . dataset = new Double.NaN ( dataset ) ;
Distance : 6

8
Tree	this . dataset = new plot ( dataset ) ;
Code	this . dataset = new plot ( dataset ) ;
Distance : 6

9
Tree	this . dataset = new isLoose ( dataset ) ;
Code	this . dataset = new isLoose ( dataset ) ;
Distance : 6

10
Tree	this . dataset = new sb ( dataset ) ;
Code	this . dataset = new sb ( dataset ) ;
Distance : 6

11
Tree	this . dataset = new VerifyingRecorder ( dataset ) ;
Code	this . dataset = new VerifyingRecorder ( dataset ) ;
Distance : 6

12
Tree	this . dataset = new LinearInterpolator ( dataset ) ;
Code	this . dataset = new LinearInterpolator ( dataset ) ;
Distance : 6

13
Tree	this . dataset = new RandomUtils ( dataset ) ;
Code	this . dataset = new RandomUtils ( dataset ) ;
Distance : 6

14
Tree	this . dataset = new isBottom ( dataset ) ;
Code	this . dataset = new isBottom ( dataset ) ;
Distance : 6

15
Tree	this . dataset = new isNormalBlock ( dataset ) ;
Code	this . dataset = new isNormalBlock ( dataset ) ;
Distance : 6

16
Tree	this . dataset = new order ( dataset ) ;
Code	this . dataset = new order ( dataset ) ;
Distance : 6

17
Tree	this . dataset = new CholeskyDecompositionImpl ( dataset ) ;
Code	this . dataset = new CholeskyDecompositionImpl ( dataset ) ;
Distance : 6

18
Tree	this . dataset = new MissingInvocationChecker ( dataset ) ;
Code	this . dataset = new MissingInvocationChecker ( dataset ) ;
Distance : 6

19
Tree	this . dataset = new Evaluation ( dataset ) ;
Code	this . dataset = new Evaluation ( dataset ) ;
Distance : 6

20
Tree	this . dataset = new binaryNamespaceName ( dataset ) ;
Code	this . dataset = new binaryNamespaceName ( dataset ) ;
Distance : 6

21
Tree	this . dataset = new formatter ( dataset ) ;
Code	this . dataset = new formatter ( dataset ) ;
Distance : 6

22
Tree	this . dataset = new Class ( dataset ) ;
Code	this . dataset = new Class ( dataset ) ;
Distance : 6

23
Tree	this . dataset = new ArithmeticUtils ( dataset ) ;
Code	this . dataset = new ArithmeticUtils ( dataset ) ;
Distance : 6

24
Tree	this . dataset = new BigFraction ( dataset ) ;
Code	this . dataset = new BigFraction ( dataset ) ;
Distance : 6

25
Tree	this . dataset = new isReturn ( dataset ) ;
Code	this . dataset = new isReturn ( dataset ) ;
Distance : 6

26
Tree	this . dataset = new y2 ( dataset ) ;
Code	this . dataset = new y2 ( dataset ) ;
Distance : 6

27
Tree	this . dataset = new getFinalTime ( dataset ) ;
Code	this . dataset = new getFinalTime ( dataset ) ;
Distance : 6

28
Tree	this . dataset = new fireChangeEvent ( dataset ) ;
Code	this . dataset = new fireChangeEvent ( dataset ) ;
Distance : 6

29
Tree	this . dataset = new ArrayDeque ( dataset ) ;
Code	this . dataset = new ArrayDeque ( dataset ) ;
Distance : 6

30
Tree	this . dataset = new textAnchor ( dataset ) ;
Code	this . dataset = new textAnchor ( dataset ) ;
Distance : 6

31
Tree	this . dataset = new grandparent ( dataset ) ;
Code	this . dataset = new grandparent ( dataset ) ;
Distance : 6

32
Tree	this . dataset = new LUDecompositionImpl ( dataset ) ;
Code	this . dataset = new LUDecompositionImpl ( dataset ) ;
Distance : 6

33
Tree	this . dataset = new TestRecursiveCycleObject ( dataset ) ;
Code	this . dataset = new TestRecursiveCycleObject ( dataset ) ;
Distance : 6

34
Tree	this . dataset = new FieldODEState ( dataset ) ;
Code	this . dataset = new FieldODEState ( dataset ) ;
Distance : 6

35
Tree	this . dataset = new QuinticFunction ( dataset ) ;
Code	this . dataset = new QuinticFunction ( dataset ) ;
Distance : 6

36
Tree	this . dataset = new crossP ( dataset ) ;
Code	this . dataset = new crossP ( dataset ) ;
Distance : 6

37
Tree	this . dataset = new y ( dataset ) ;
Code	this . dataset = new y ( dataset ) ;
Distance : 6

38
Tree	this . dataset = new BSPTree ( dataset ) ;
Code	this . dataset = new BSPTree ( dataset ) ;
Distance : 6

39
Tree	this . dataset = new getVarCount ( dataset ) ;
Code	this . dataset = new getVarCount ( dataset ) ;
Distance : 6

40
Tree	this . dataset = new getParser ( dataset ) ;
Code	this . dataset = new getParser ( dataset ) ;
Distance : 6

41
Tree	this . dataset = new solve ( dataset ) ;
Code	this . dataset = new solve ( dataset ) ;
Distance : 6

42
Tree	this . dataset = new domainGridlinePaint ( dataset ) ;
Code	this . dataset = new domainGridlinePaint ( dataset ) ;
Distance : 6

43
Tree	this . dataset = new FieldRotation ( dataset ) ;
Code	this . dataset = new FieldRotation ( dataset ) ;
Distance : 6

44
Tree	this . dataset = new b ( dataset ) ;
Code	this . dataset = new b ( dataset ) ;
Distance : 6

45
Tree	this . dataset = new f.length ( dataset ) ;
Code	this . dataset = new f.length ( dataset ) ;
Distance : 6

46
Tree	this . dataset = new setBackgroundPaint ( dataset ) ;
Code	this . dataset = new setBackgroundPaint ( dataset ) ;
Distance : 6

47
Tree	this . dataset = new orientation ( dataset ) ;
Code	this . dataset = new orientation ( dataset ) ;
Distance : 6

48
Tree	this . dataset = new loop ( dataset ) ;
Code	this . dataset = new loop ( dataset ) ;
Distance : 6

49
Tree	this . dataset = new ObjectUtils ( dataset ) ;
Code	this . dataset = new ObjectUtils ( dataset ) ;
Distance : 6

50
Tree	this . dataset = new bLoop ( dataset ) ;
Code	this . dataset = new bLoop ( dataset ) ;
Distance : 6

51
Tree	this . dataset = new x2 ( dataset ) ;
Code	this . dataset = new x2 ( dataset ) ;
Distance : 6

52
Tree	this . dataset = new SphericalCapGenerator ( dataset ) ;
Code	this . dataset = new SphericalCapGenerator ( dataset ) ;
Distance : 6

53
Tree	this . dataset = new ns ( dataset ) ;
Code	this . dataset = new ns ( dataset ) ;
Distance : 6

54
Tree	this . dataset = new NonSquareMatrixException ( dataset ) ;
Code	this . dataset = new NonSquareMatrixException ( dataset ) ;
Distance : 6

55
Tree	this . dataset = new Args ( dataset ) ;
Code	this . dataset = new Args ( dataset ) ;
Distance : 6

56
Tree	this . dataset = new UnivariateSolver ( dataset ) ;
Code	this . dataset = new UnivariateSolver ( dataset ) ;
Distance : 6

57
Tree	this . dataset = new LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ;
Code	this . dataset = new LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ;
Distance : 6

58
Tree	this . dataset = new FieldExpandableODE ( dataset ) ;
Code	this . dataset = new FieldExpandableODE ( dataset ) ;
Distance : 6

59
Tree	this . dataset = new getInverse ( dataset ) ;
Code	this . dataset = new getInverse ( dataset ) ;
Distance : 6

60
Tree	this . dataset = new initialDoubleArray ( dataset ) ;
Code	this . dataset = new initialDoubleArray ( dataset ) ;
Distance : 6

61
Tree	this . dataset = new EigenDecompositionImpl ( dataset ) ;
Code	this . dataset = new EigenDecompositionImpl ( dataset ) ;
Distance : 6

62
Tree	this . dataset = new J2clClinitPrunerPass ( dataset ) ;
Code	this . dataset = new J2clClinitPrunerPass ( dataset ) ;
Distance : 6

63
Tree	this . dataset = new . ( dataset ) ;
Code	this . dataset = new . ( dataset ) ;
Distance : 6

64
Tree	this . dataset = new fft ( dataset ) ;
Code	this . dataset = new fft ( dataset ) ;
Distance : 6

65
Tree	this . dataset = new checkMissingInvocation ( dataset ) ;
Code	this . dataset = new checkMissingInvocation ( dataset ) ;
Distance : 6

66
Tree	this . dataset = new >= ( dataset ) ;
Code	this . dataset = new >= ( dataset ) ;
Distance : 6

67
Tree	this . dataset = new ArrayFieldVector ( dataset ) ;
Code	this . dataset = new ArrayFieldVector ( dataset ) ;
Distance : 6

68
Tree	this . dataset = new lhsClass ( dataset ) ;
Code	this . dataset = new lhsClass ( dataset ) ;
Distance : 6

69
Tree	this . dataset = new anchorRect ( dataset ) ;
Code	this . dataset = new anchorRect ( dataset ) ;
Distance : 6

70
Tree	this . dataset = new / ( dataset ) ;
Code	this . dataset = new / ( dataset ) ;
Distance : 6

71
Tree	dataset = dataset ;
Code	dataset = dataset ;
Distance : 3

72
Tree	this . dataset = new setDefaultToolTipGenerator ( dataset ) ;
Code	this . dataset = new setDefaultToolTipGenerator ( dataset ) ;
Distance : 6

73
Tree	this . dataset = new child.parent ( dataset ) ;
Code	this . dataset = new child.parent ( dataset ) ;
Distance : 6

74
Tree	this . dataset = new DateFormat ( dataset ) ;
Code	this . dataset = new DateFormat ( dataset ) ;
Distance : 6

75
Tree	this . dataset = new ByteArrayInputStream ( dataset ) ;
Code	this . dataset = new ByteArrayInputStream ( dataset ) ;
Distance : 6

76
Tree	this . dataset = new image ( dataset ) ;
Code	this . dataset = new image ( dataset ) ;
Distance : 6

77
Tree	this . dataset = new getRequiredSymbols ( dataset ) ;
Code	this . dataset = new getRequiredSymbols ( dataset ) ;
Distance : 6

78
Tree	this . dataset = new BoundaryProjection ( dataset ) ;
Code	this . dataset = new BoundaryProjection ( dataset ) ;
Distance : 6

79
Tree	this . dataset = new typeMap ( dataset ) ;
Code	this . dataset = new typeMap ( dataset ) ;
Distance : 6

80
Tree	this . dataset = new FieldHermiteInterpolator ( dataset ) ;
Code	this . dataset = new FieldHermiteInterpolator ( dataset ) ;
Distance : 6

81
Tree	this . dataset = new getClosestHoistScope ( dataset ) ;
Code	this . dataset = new getClosestHoistScope ( dataset ) ;
Distance : 6

82
Tree	this . dataset = new State ( dataset ) ;
Code	this . dataset = new State ( dataset ) ;
Distance : 6

83
Tree	this . dataset = new legendItemShape ( dataset ) ;
Code	this . dataset = new legendItemShape ( dataset ) ;
Distance : 6

84
Tree	this . dataset = new Color.BLACK ( dataset ) ;
Code	this . dataset = new Color.BLACK ( dataset ) ;
Distance : 6

85
Tree	this . dataset = new initial ( dataset ) ;
Code	this . dataset = new initial ( dataset ) ;
Distance : 6

86
Tree	this . dataset = new itemIndex ( dataset ) ;
Code	this . dataset = new itemIndex ( dataset ) ;
Distance : 6

87
Tree	this . dataset = new that.paint ( dataset ) ;
Code	this . dataset = new that.paint ( dataset ) ;
Distance : 6

88
Tree	this . dataset = new f2 ( dataset ) ;
Code	this . dataset = new f2 ( dataset ) ;
Distance : 6

89
Tree	this . dataset = new vector ( dataset ) ;
Code	this . dataset = new vector ( dataset ) ;
Distance : 6

90
Tree	this . dataset = new shape ( dataset ) ;
Code	this . dataset = new shape ( dataset ) ;
Distance : 6

91
Tree	this . dataset = new AxisChangeEvent ( dataset ) ;
Code	this . dataset = new AxisChangeEvent ( dataset ) ;
Distance : 6

92
Tree	this . dataset = new Sqrt ( dataset ) ;
Code	this . dataset = new Sqrt ( dataset ) ;
Distance : 6

93
Tree	this . dataset = new ParsePosition ( dataset ) ;
Code	this . dataset = new ParsePosition ( dataset ) ;
Distance : 6

94
Tree	this . dataset = new returnFalse ( dataset ) ;
Code	this . dataset = new returnFalse ( dataset ) ;
Distance : 6

95
Tree	this . dataset = dataset . setDataset () ;
Code	this . dataset = dataset . setDataset () ;
Distance : 7

96
Tree	this . dataset = new PARSER ( dataset ) ;
Code	this . dataset = new PARSER ( dataset ) ;
Distance : 6

97
Tree	this . dataset = new bool ( dataset ) ;
Code	this . dataset = new bool ( dataset ) ;
Distance : 6

98
Tree	this . dataset = new nullNotPermitted ( dataset ) ;
Code	this . dataset = new nullNotPermitted ( dataset ) ;
Distance : 6

99
Tree	this . dataset = new total ( dataset ) ;
Code	this . dataset = new total ( dataset ) ;
Distance : 6

100
Tree	this . dataset = new a ( dataset ) ;
Code	this . dataset = new a ( dataset ) ;
Distance : 6

101
Tree	this . dataset = new FieldLUDecomposition ( dataset ) ;
Code	this . dataset = new FieldLUDecomposition ( dataset ) ;
Distance : 6

102
Tree	this . dataset = new RealMatrixImpl ( dataset ) ;
Code	this . dataset = new RealMatrixImpl ( dataset ) ;
Distance : 6

103
Tree	this . dataset = new Vector3D ( dataset ) ;
Code	this . dataset = new Vector3D ( dataset ) ;
Distance : 6

104
Tree	this . dataset = new axis ( dataset ) ;
Code	this . dataset = new axis ( dataset ) ;
Distance : 6

105
Tree	this . dataset = new s ( dataset ) ;
Code	this . dataset = new s ( dataset ) ;
Distance : 6

106
Tree	this . dataset = new ChartPanel ( dataset ) ;
Code	this . dataset = new ChartPanel ( dataset ) ;
Distance : 6

107
Tree	this . dataset = new PlotOrientation.VERTICAL ( dataset ) ;
Code	this . dataset = new PlotOrientation.VERTICAL ( dataset ) ;
Distance : 6

108
Tree	this . dataset = new MullerSolver ( dataset ) ;
Code	this . dataset = new MullerSolver ( dataset ) ;
Distance : 6

109
Tree	this . dataset = new item ( dataset ) ;
Code	this . dataset = new item ( dataset ) ;
Distance : 6

110
Tree	this . dataset = new x1 ( dataset ) ;
Code	this . dataset = new x1 ( dataset ) ;
Distance : 6

111
Tree	this . dataset = new replaceWith ( dataset ) ;
Code	this . dataset = new replaceWith ( dataset ) ;
Distance : 6

112
Tree	this . dataset = new indexOf ( dataset ) ;
Code	this . dataset = new indexOf ( dataset ) ;
Distance : 6

113
Tree	this . dataset = new <> ( dataset ) ;
Code	this . dataset = new <> ( dataset ) ;
Distance : 6

114
Tree	this . dataset = new Array2DRowRealMatrix ( dataset ) ;
Code	this . dataset = new Array2DRowRealMatrix ( dataset ) ;
Distance : 6

115
Tree	this . dataset = new DecompositionSolver ( dataset ) ;
Code	this . dataset = new DecompositionSolver ( dataset ) ;
Distance : 6

116
Tree	this . dataset = new ContinuousDistribution ( dataset ) ;
Code	this . dataset = new ContinuousDistribution ( dataset ) ;
Distance : 6

117
Tree	this . dataset = new dataArea ( dataset ) ;
Code	this . dataset = new dataArea ( dataset ) ;
Distance : 6

118
Tree	this . dataset = new findStackedRangeBounds ( dataset ) ;
Code	this . dataset = new findStackedRangeBounds ( dataset ) ;
Distance : 6

119
Tree	this . dataset = new range ( dataset ) ;
Code	this . dataset = new range ( dataset ) ;
Distance : 6

120
Tree	this . dataset = new toFormatter ( dataset ) ;
Code	this . dataset = new toFormatter ( dataset ) ;
Distance : 6

121
Tree	this . dataset = new BicubicSplineInterpolator ( dataset ) ;
Code	this . dataset = new BicubicSplineInterpolator ( dataset ) ;
Distance : 6

122
Tree	this . dataset = new DatasetUtils ( dataset ) ;
Code	this . dataset = new DatasetUtils ( dataset ) ;
Distance : 6

123
Tree	this . dataset = new Precision.SAFE_MIN ( dataset ) ;
Code	this . dataset = new Precision.SAFE_MIN ( dataset ) ;
Distance : 6

124
Tree	this . dataset = new annotation ( dataset ) ;
Code	this . dataset = new annotation ( dataset ) ;
Distance : 6

125
Tree	this . dataset = new Random ( dataset ) ;
Code	this . dataset = new Random ( dataset ) ;
Distance : 6

126
Tree	dataset = NUMBER_CONSTANT / dataset ;
Code	dataset = NUMBER_CONSTANT / dataset ;
Distance : 5

127
Tree	this . dataset = new newScope ( dataset ) ;
Code	this . dataset = new newScope ( dataset ) ;
Distance : 6

128
Tree	this . dataset = new Coordinates3D ( dataset ) ;
Code	this . dataset = new Coordinates3D ( dataset ) ;
Distance : 6

129
Tree	this . dataset = new dataset ( dataset ) ;
Code	this . dataset = new dataset ( dataset ) ;
Distance : 6

130
Tree	this . dataset = new ArrayRealVector ( dataset ) ;
Code	this . dataset = new ArrayRealVector ( dataset ) ;
Distance : 6

131
Tree	this . dataset = new getParent ( dataset ) ;
Code	this . dataset = new getParent ( dataset ) ;
Distance : 6

132
Tree	this . dataset = new Cartesian3D ( dataset ) ;
Code	this . dataset = new Cartesian3D ( dataset ) ;
Distance : 6

133
Tree	this . dataset = new getSolver ( dataset ) ;
Code	this . dataset = new getSolver ( dataset ) ;
Distance : 6

134
Tree	this . dataset = new ch ( dataset ) ;
Code	this . dataset = new ch ( dataset ) ;
Distance : 6

135
Tree	this . dataset = new point ( dataset ) ;
Code	this . dataset = new point ( dataset ) ;
Distance : 6

136
Tree	this . dataset = new includeInterval ( dataset ) ;
Code	this . dataset = new includeInterval ( dataset ) ;
Distance : 6

137
Tree	this . dataset = new RealVectorImpl ( dataset ) ;
Code	this . dataset = new RealVectorImpl ( dataset ) ;
Distance : 6

138
Tree	this . dataset = new cls ( dataset ) ;
Code	this . dataset = new cls ( dataset ) ;
Distance : 6

139
Tree	this . dataset = new Sin ( dataset ) ;
Code	this . dataset = new Sin ( dataset ) ;
Distance : 6

140
Tree	this . dataset = new series ( dataset ) ;
Code	this . dataset = new series ( dataset ) ;
Distance : 6

141
Tree	this . dataset = new Range ( dataset ) ;
Code	this . dataset = new Range ( dataset ) ;
Distance : 6

142
Tree	this . dataset = new CloneNotSupportedException ( dataset ) ;
Code	this . dataset = new CloneNotSupportedException ( dataset ) ;
Distance : 6

143
Tree	this . dataset = new row ( dataset ) ;
Code	this . dataset = new row ( dataset ) ;
Distance : 6

144
Tree	this . dataset = new hotspot ( dataset ) ;
Code	this . dataset = new hotspot ( dataset ) ;
Distance : 6

145
Tree	this . dataset = new Constructor ( dataset ) ;
Code	this . dataset = new Constructor ( dataset ) ;
Distance : 6

146
Tree	this . dataset = new Character ( dataset ) ;
Code	this . dataset = new Character ( dataset ) ;
Distance : 6

147
Tree	this . dataset = new TreeSet ( dataset ) ;
Code	this . dataset = new TreeSet ( dataset ) ;
Distance : 6

148
Tree	this . dataset = new KeyedValuesDataset ( dataset ) ;
Code	this . dataset = new KeyedValuesDataset ( dataset ) ;
Distance : 6

149
Tree	this . dataset = new x.length ( dataset ) ;
Code	this . dataset = new x.length ( dataset ) ;
Distance : 6

150
Tree	this . dataset = new SinFunction ( dataset ) ;
Code	this . dataset = new SinFunction ( dataset ) ;
Distance : 6

151
Tree	this . dataset = new solver ( dataset ) ;
Code	this . dataset = new solver ( dataset ) ;
Distance : 6

152
Tree	this . dataset = new StrBuilder ( dataset ) ;
Code	this . dataset = new StrBuilder ( dataset ) ;
Distance : 6

153
Tree	this . dataset = new UnivariateDifferentiableFunction ( dataset ) ;
Code	this . dataset = new UnivariateDifferentiableFunction ( dataset ) ;
Distance : 6

154
Tree	this . dataset = new SphericalCoordinates ( dataset ) ;
Code	this . dataset = new SphericalCoordinates ( dataset ) ;
Distance : 6

155
Tree	this . dataset = new DummyStepInterpolator ( dataset ) ;
Code	this . dataset = new DummyStepInterpolator ( dataset ) ;
Distance : 6

156
Tree	this . dataset = new transY ( dataset ) ;
Code	this . dataset = new transY ( dataset ) ;
Distance : 6

157
Tree	this . dataset = new classes ( dataset ) ;
Code	this . dataset = new classes ( dataset ) ;
Distance : 6

158
Tree	this . dataset = new getDeclaredConstructor ( dataset ) ;
Code	this . dataset = new getDeclaredConstructor ( dataset ) ;
Distance : 6

159
Tree	this . dataset = new Coordinates2D ( dataset ) ;
Code	this . dataset = new Coordinates2D ( dataset ) ;
Distance : 6

160
Tree	this . dataset = new MathUtils.SAFE_MIN ( dataset ) ;
Code	this . dataset = new MathUtils.SAFE_MIN ( dataset ) ;
Distance : 6

161
Tree	this . dataset = new HighLowItemLabelGenerator ( dataset ) ;
Code	this . dataset = new HighLowItemLabelGenerator ( dataset ) ;
Distance : 6

162
Tree	this . dataset = new clazz ( dataset ) ;
Code	this . dataset = new clazz ( dataset ) ;
Distance : 6

163
Tree	this . dataset = new LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE ( dataset ) ;
Code	this . dataset = new LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE ( dataset ) ;
Distance : 6

164
Tree	this . dataset = new Color ( dataset ) ;
Code	this . dataset = new Color ( dataset ) ;
Distance : 6

165
Tree	this . dataset = new RectangularCholeskyDecomposition ( dataset ) ;
Code	this . dataset = new RectangularCholeskyDecomposition ( dataset ) ;
Distance : 6

166
Tree	this . dataset = new subtree ( dataset ) ;
Code	this . dataset = new subtree ( dataset ) ;
Distance : 6

167
Tree	this . dataset = new isGlobal ( dataset ) ;
Code	this . dataset = new isGlobal ( dataset ) ;
Distance : 6

168
Tree	this . dataset = new y1 ( dataset ) ;
Code	this . dataset = new y1 ( dataset ) ;
Distance : 6

169
Tree	this . dataset = new isEmptyOrNull ( dataset ) ;
Code	this . dataset = new isEmptyOrNull ( dataset ) ;
Distance : 6

170
Tree	this . dataset = new RegionFactory ( dataset ) ;
Code	this . dataset = new RegionFactory ( dataset ) ;
Distance : 6

171
Tree	this . dataset = new exp ( dataset ) ;
Code	this . dataset = new exp ( dataset ) ;
Distance : 6

172
Tree	this . dataset = new StandardXYToolTipGenerator ( dataset ) ;
Code	this . dataset = new StandardXYToolTipGenerator ( dataset ) ;
Distance : 6

173
Tree	this . dataset = new StrTokenizer ( dataset ) ;
Code	this . dataset = new StrTokenizer ( dataset ) ;
Distance : 6

174
Tree	this . dataset = new CircleVectorial ( dataset ) ;
Code	this . dataset = new CircleVectorial ( dataset ) ;
Distance : 6

175
Tree	this . dataset = new callNode ( dataset ) ;
Code	this . dataset = new callNode ( dataset ) ;
Distance : 6

176
Tree	this . dataset = new Vector ( dataset ) ;
Code	this . dataset = new Vector ( dataset ) ;
Distance : 6

177
Tree	this . dataset = new abs ( dataset ) ;
Code	this . dataset = new abs ( dataset ) ;
Distance : 6

178
Tree	this . dataset = new isExprResult ( dataset ) ;
Code	this . dataset = new isExprResult ( dataset ) ;
Distance : 6

179
Tree	this . dataset = new Cartesian2D ( dataset ) ;
Code	this . dataset = new Cartesian2D ( dataset ) ;
Distance : 6

180
Tree	this . dataset = new nCols ( dataset ) ;
Code	this . dataset = new nCols ( dataset ) ;
Distance : 6

181
Tree	this . dataset = new Circle ( dataset ) ;
Code	this . dataset = new Circle ( dataset ) ;
Distance : 6

182
Tree	this . dataset = new x0 ( dataset ) ;
Code	this . dataset = new x0 ( dataset ) ;
Distance : 6

183
Tree	this . dataset = new current ( dataset ) ;
Code	this . dataset = new current ( dataset ) ;
Distance : 6

184
Tree	this . dataset = dataset . setDataset ( dataset ) ;
Code	this . dataset = dataset . setDataset ( dataset ) ;
Distance : 6

185
Tree	this . dataset = new pname ( dataset ) ;
Code	this . dataset = new pname ( dataset ) ;
Distance : 6

186
Tree	this . dataset = new Boolean ( dataset ) ;
Code	this . dataset = new Boolean ( dataset ) ;
Distance : 6

187
Tree	this . dataset = new forward ( dataset ) ;
Code	this . dataset = new forward ( dataset ) ;
Distance : 6

188
Tree	this . dataset = new decomposition ( dataset ) ;
Code	this . dataset = new decomposition ( dataset ) ;
Distance : 6

189
Tree	this . dataset = new w ( dataset ) ;
Code	this . dataset = new w ( dataset ) ;
Distance : 6

190
Tree	this . dataset = new transX ( dataset ) ;
Code	this . dataset = new transX ( dataset ) ;
Distance : 6

191
Tree	this . dataset = new section ( dataset ) ;
Code	this . dataset = new section ( dataset ) ;
Distance : 6

192
Tree	this . dataset = new Color.RED ( dataset ) ;
Code	this . dataset = new Color.RED ( dataset ) ;
Distance : 6

193
Tree	this . dataset = new GradientPaint ( dataset ) ;
Code	this . dataset = new GradientPaint ( dataset ) ;
Distance : 6

194
Tree	this . dataset = new MockingProgressImpl ( dataset ) ;
Code	this . dataset = new MockingProgressImpl ( dataset ) ;
Distance : 6

195
Tree	this . dataset = new MutableDouble ( dataset ) ;
Code	this . dataset = new MutableDouble ( dataset ) ;
Distance : 6

196
Tree	this . dataset = new TrapezoidIntegrator ( dataset ) ;
Code	this . dataset = new TrapezoidIntegrator ( dataset ) ;
Distance : 6

197
Tree	this . dataset = new != ( dataset ) ;
Code	this . dataset = new != ( dataset ) ;
Distance : 6

198
Tree	this . dataset = new getDataset ( dataset ) ;
Code	this . dataset = new getDataset ( dataset ) ;
Distance : 6

199
Tree	this . dataset = dataset . setDataset ( dataset ) ; invocation
Code	this . dataset = dataset . setDataset ( dataset ) ; invocation
Distance : 7

========================================================================


========================================================================
Example Number: 6
Parent Code is: 
PathIterator iterator2 = p1 . getPathIterator ( null ) ;
-------------------------------------------------------------------------------
Child code is: 
PathIterator iterator2 = p2 . getPathIterator ( null ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=PathIterator})) (59 (800{val=iterator2}) (204{val==}) (32 (800{val=p1}) (235{val=.}) (802{val=getPathIterator}) (214{val=(}) (500{val=null}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=PathIterator})) (59 (800{val=iterator2}) (204{val==}) (32 (800{val=p2}) (235{val=.}) (802{val=getPathIterator}) (214{val=(}) (500{val=null}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/11/parent/source_org_jfree_chart_util_ShapeUtilities.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Distance : 1

1
Tree	PathIterator iterator2 = Cartesian1D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Cartesian1D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

2
Tree	PathIterator iterator2 = createVerificationData . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = createVerificationData . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

3
Tree	PathIterator iterator2 = PieLabelRecord . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = PieLabelRecord . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

4
Tree	final PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Code	final PathIterator iterator2 = p1 . getPathIterator ( null ) ;
Distance : 2

5
Tree	PathIterator iterator2 = source.n . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = source.n . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

6
Tree	PathIterator iterator2 = analyzeExprBwd . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = analyzeExprBwd . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

7
Tree	PathIterator iterator2 = successes . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = successes . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

8
Tree	PathIterator iterator2 = useLU . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = useLU . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

9
Tree	PathIterator iterator2 = DefaultHeatMapDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = DefaultHeatMapDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

10
Tree	PathIterator iterator2 = findKernel . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = findKernel . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

11
Tree	PathIterator iterator2 = FixedMillisecond . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FixedMillisecond . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

12
Tree	PathIterator iterator2 = addEndTimeChecker . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = addEndTimeChecker . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

13
Tree	PathIterator iterator2 = Coordinates3D.PLUS_K . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Coordinates3D.PLUS_K . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

14
Tree	PathIterator iterator2 = SimpleTimePeriod . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = SimpleTimePeriod . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

15
Tree	PathIterator iterator2 = compiler.typeCheckingHasRun . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = compiler.typeCheckingHasRun . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

16
Tree	PathIterator iterator2 = CategoryStepRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = CategoryStepRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

17
Tree	PathIterator iterator2 = RandomKey . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = RandomKey . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

18
Tree	PathIterator iterator2 = BasicThreadFactory . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = BasicThreadFactory . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

19
Tree	PathIterator iterator2 = VarInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = VarInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

20
Tree	PathIterator iterator2 = Week . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Week . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

21
Tree	PathIterator iterator2 = traverseNameNode . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = traverseNameNode . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

22
Tree	PathIterator iterator2 = DateTimeFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = DateTimeFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

23
Tree	PathIterator iterator2 = sd . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = sd . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

24
Tree	PathIterator iterator2 = ThermometerPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ThermometerPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

25
Tree	PathIterator iterator2 = ArrayIndexOutOfBoundsException . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ArrayIndexOutOfBoundsException . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

26
Tree	PathIterator p1 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator p1 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 3

27
Tree	PathIterator iterator2 = ignored . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ignored . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

28
Tree	PathIterator iterator2 = MiddlePinNeedle . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = MiddlePinNeedle . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

29
Tree	PathIterator iterator2 = polygon . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = polygon . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

30
Tree	PathIterator iterator2 = p1 . getPathIterator ( p1 ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( p1 ) ;
Distance : 2

31
Tree	PathIterator p2 = Double.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator p2 = Double.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 3

32
Tree	PathIterator iterator2 = FastSineTransformer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FastSineTransformer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

33
Tree	PathIterator iterator2 = SimplexOptimizer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = SimplexOptimizer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

34
Tree	PathIterator iterator2 = THREE . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = THREE . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

35
Tree	PathIterator iterator2 = isInferred . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = isInferred . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

36
Tree	PathIterator iterator2 = vector1DFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = vector1DFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

37
Tree	PathIterator iterator2 = CategoryTableXYDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = CategoryTableXYDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

38
Tree	PathIterator iterator2 = transpose . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = transpose . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

39
Tree	PathIterator iterator2 = ItemLabelPosition . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ItemLabelPosition . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

40
Tree	PathIterator iterator2 = Dfp . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Dfp . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

41
Tree	PathIterator iterator2 = isPrototypeObjectNamedPropertyAssignment . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = isPrototypeObjectNamedPropertyAssignment . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

42
Tree	PathIterator iterator2 = MathUtils.TWO_PI . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = MathUtils.TWO_PI . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

43
Tree	PathIterator iterator2 = PinNeedle . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = PinNeedle . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

44
Tree	PathIterator iterator2 = source.m1 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = source.m1 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

45
Tree	PathIterator iterator2 = getOrCreateName . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = getOrCreateName . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

46
Tree	PathIterator iterator2 = Cartesian3D.NEGATIVE_INFINITY . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Cartesian3D.NEGATIVE_INFINITY . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

47
Tree	PathIterator iterator2 = J2clPassMode.AUTO . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = J2clPassMode.AUTO . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

48
Tree	PathIterator iterator2 = model.steps . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = model.steps . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

49
Tree	PathIterator iterator2 = annotation . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = annotation . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

50
Tree	PathIterator iterator2 = left . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = left . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

51
Tree	PathIterator p2 = p1 . getPathIterator ( null ) ;
Code	PathIterator p2 = p1 . getPathIterator ( null ) ;
Distance : 2

52
Tree	PathIterator iterator2 = TimePeriodValuesCollection . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = TimePeriodValuesCollection . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

53
Tree	PathIterator iterator2 = CombinedRangeCategoryPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = CombinedRangeCategoryPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

54
Tree	PathIterator iterator2 = PointValuePair . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = PointValuePair . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

55
Tree	PathIterator iterator2 = WeightedObservedPoint . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = WeightedObservedPoint . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

56
Tree	PathIterator iterator2 = WindItemRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = WindItemRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

57
Tree	PathIterator iterator2 = problem . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = problem . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

58
Tree	PathIterator iterator2 = y.length . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = y.length . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

59
Tree	PathIterator iterator2 = stepSize . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = stepSize . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

60
Tree	PathIterator iterator2 = *= . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = *= . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

61
Tree	PathIterator iterator2 = eigenvectors . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = eigenvectors . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

62
Tree	PathIterator iterator2 = kernel . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = kernel . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

63
Tree	PathIterator iterator2 = mep . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = mep . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

64
Tree	PathIterator iterator2 = ExtendedMessageFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ExtendedMessageFormat . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

65
Tree	PathIterator iterator2 = FieldRotation . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FieldRotation . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

66
Tree	PathIterator iterator2 = Executors . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Executors . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

67
Tree	PathIterator iterator2 = FunctionUtils . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FunctionUtils . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

68
Tree	PathIterator iterator2 = occurrences . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = occurrences . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

69
Tree	PathIterator iterator2 = dsX . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = dsX . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

70
Tree	PathIterator iterator2 = createPieChart . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = createPieChart . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

71
Tree	PathIterator iterator2 = shouldPrintExterns . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = shouldPrintExterns . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

72
Tree	PathIterator iterator2 = HistogramDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = HistogramDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

73
Tree	PathIterator iterator2 = p2 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 1

74
Tree	PathIterator iterator2 = Precision.EPSILON . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Precision.EPSILON . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

75
Tree	PathIterator iterator2 = bounds . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = bounds . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

76
Tree	PathIterator iterator2 = SubHyperplane . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = SubHyperplane . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

77
Tree	PathIterator iterator2 = location . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = location . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

78
Tree	PathIterator iterator2 = FastScatterPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FastScatterPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

79
Tree	PathIterator iterator2 = createMultivariateSummaryStatistics . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = createMultivariateSummaryStatistics . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

80
Tree	PathIterator iterator2 = getX . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = getX . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

81
Tree	PathIterator iterator2 = Cartesian3D.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Cartesian3D.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

82
Tree	PathIterator iterator2 = yDotK . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = yDotK . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

83
Tree	PathIterator iterator2 = VarCheck . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = VarCheck . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

84
Tree	PathIterator iterator2 = bytecodeGenerator . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = bytecodeGenerator . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

85
Tree	PathIterator iterator2 = var.scope . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = var.scope . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

86
Tree	PathIterator p1 = p2 . getPathIterator ( null ) ;
Code	PathIterator p1 = p2 . getPathIterator ( null ) ;
Distance : 1

87
Tree	PathIterator iterator2 = OHLCSeries . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = OHLCSeries . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

88
Tree	PathIterator iterator2 = getFormatter . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = getFormatter . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

89
Tree	PathIterator iterator2 = encloser . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = encloser . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

90
Tree	PathIterator iterator2 = traverseVar . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = traverseVar . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

91
Tree	PathIterator iterator2 = Calendar.ZONE_OFFSET . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Calendar.ZONE_OFFSET . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

92
Tree	PathIterator p2 = p2 . getPathIterator ( null ) ;
Code	PathIterator p2 = p2 . getPathIterator ( null ) ;
Distance : 1

93
Tree	PathIterator iterator2 = findRangeBounds . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = findRangeBounds . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

94
Tree	PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 2

95
Tree	PathIterator iterator2 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

96
Tree	PathIterator iterator2 = Double.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Double.NaN . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

97
Tree	PathIterator iterator2 = FastMath.PI . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = FastMath.PI . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

98
Tree	PathIterator iterator2 = MultiplePiePlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = MultiplePiePlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

99
Tree	PathIterator iterator2 = generator . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = generator . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

100
Tree	PathIterator iterator2 = LazyHolder.FACTORY . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = LazyHolder.FACTORY . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

101
Tree	PathIterator iterator2 = ModuleLoader.ResolutionMode.BROWSER . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ModuleLoader.ResolutionMode.BROWSER . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

102
Tree	PathIterator iterator2 = visitor . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = visitor . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

103
Tree	PathIterator iterator2 = Color.BLUE . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Color.BLUE . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

104
Tree	PathIterator iterator2 = yDot1 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = yDot1 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

105
Tree	PathIterator iterator2 = generate . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = generate . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

106
Tree	PathIterator iterator2 = s2 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = s2 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

107
Tree	PathIterator iterator2 = ConstructorInjection.SimpleArgumentResolver . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ConstructorInjection.SimpleArgumentResolver . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

108
Tree	PathIterator iterator2 = requirePrinter . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = requirePrinter . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

109
Tree	PathIterator iterator2 = interpolate . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = interpolate . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

110
Tree	PathIterator iterator2 = Vector1D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Vector1D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

111
Tree	PathIterator iterator2 = MultivariateVectorFunction . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = MultivariateVectorFunction . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

112
Tree	PathIterator iterator2 = appendSeparator . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = appendSeparator . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

113
Tree	PathIterator iterator2 = Vcs . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Vcs . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

114
Tree	PathIterator iterator2 = ParametricUnivariateFunction . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = ParametricUnivariateFunction . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

115
Tree	PathIterator iterator2 = threshold . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = threshold . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

116
Tree	PathIterator iterator2 = u . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = u . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

117
Tree	PathIterator iterator2 = hour . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = hour . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

118
Tree	PathIterator iterator2 = CompassPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = CompassPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

119
Tree	PathIterator iterator2 = StrMatcher . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = StrMatcher . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

120
Tree	PathIterator iterator2 = other.value . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = other.value . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

121
Tree	PathIterator iterator2 = XTX . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = XTX . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

122
Tree	PathIterator iterator2 = exceptionVarInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = exceptionVarInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

123
Tree	PathIterator iterator2 = BetaDistribution . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = BetaDistribution . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

124
Tree	PathIterator iterator2 = IncrementalCheckMode.GENERATE_IJS . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = IncrementalCheckMode.GENERATE_IJS . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

125
Tree	PathIterator iterator2 = XYInterval . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = XYInterval . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

126
Tree	PathIterator iterator2 = previousMap . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = previousMap . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

127
Tree	PathIterator iterator2 = Rectangle2D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Rectangle2D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

128
Tree	PathIterator iterator2 = DefaultKeyedValues . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = DefaultKeyedValues . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

129
Tree	PathIterator iterator2 = p2 . getPathIterator ( null ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( null ) ;
Distance : 0

130
Tree	PathIterator iterator2 = Cartesian2D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Cartesian2D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

131
Tree	PathIterator iterator2 = normal . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = normal . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

132
Tree	PathIterator iterator2 = LevelRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = LevelRenderer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

133
Tree	PathIterator iterator2 = varInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = varInfo . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

134
Tree	PathIterator iterator2 = XYSeries . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = XYSeries . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

135
Tree	PathIterator iterator2 = DefaultBoxAndWhiskerCategoryDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = DefaultBoxAndWhiskerCategoryDataset . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

136
Tree	PathIterator p2 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator p2 = p1 . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 3

137
Tree	PathIterator iterator2 = dim . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = dim . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

138
Tree	PathIterator iterator2 = Point2D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Point2D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

139
Tree	PathIterator iterator2 = DstNormalization.STANDARD_DST_I . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = DstNormalization.STANDARD_DST_I . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

140
Tree	PathIterator iterator2 = CategoryPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = CategoryPlot . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

141
Tree	PathIterator iterator2 = limits . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = limits . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

142
Tree	PathIterator iterator2 = toSpace . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = toSpace . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

143
Tree	PathIterator iterator2 = AbstractLeastSquaresOptimizer . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = AbstractLeastSquaresOptimizer . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

144
Tree	PathIterator iterator2 = circle . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = circle . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

145
Tree	PathIterator iterator2 = Vector2D . getPathIterator ( NUMBER_CONSTANT ) ;
Code	PathIterator iterator2 = Vector2D . getPathIterator ( NUMBER_CONSTANT ) ;
Distance : 2

146
Tree	synchronized PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Code	synchronized PathIterator p2 = p1 . getPathIterator ( continue; ) ;
Distance : 4

147
Tree	synchronized PathIterator iterator2 = p2 . getPathIterator ( continue; ) ;
Code	synchronized PathIterator iterator2 = p2 . getPathIterator ( continue; ) ;
Distance : 2

148
Tree	PathIterator iterator2 = p2 . getPathIterator ( ( p2 ) default: ) ;
Code	PathIterator iterator2 = p2 . getPathIterator ( ( p2 ) default: ) ;
Distance : 4

149
Tree	PathIterator p1 = p2 . getPathIterator ( ( p1 ) break; ) ;
Code	PathIterator p1 = p2 . getPathIterator ( ( p1 ) break; ) ;
Distance : 5

150
Tree	PathIterator p1 = p2 . getPathIterator ( ( null [] ) super(); ) ;
Code	PathIterator p1 = p2 . getPathIterator ( ( null [] ) super(); ) ;
Distance : 5

151
Tree	protected PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Code	protected PathIterator iterator2 = p1 . getPathIterator ( continue; ) ;
Distance : 3

152
Tree	abstract PathIterator p1 = p2 . getPathIterator ( ( null [] ) null ) ;
Code	abstract PathIterator p1 = p2 . getPathIterator ( ( null [] ) null ) ;
Distance : 6

153
Tree	PathIterator p1 = p1 . getPathIterator ( ( null ) return; ) ;
Code	PathIterator p1 = p1 . getPathIterator ( ( null ) return; ) ;
Distance : 5

154
Tree	private PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	private PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 3

155
Tree	static PathIterator p1 = p1 . getPathIterator ( ( null [] ) null ) ;
Code	static PathIterator p1 = p1 . getPathIterator ( ( null [] ) null ) ;
Distance : 7

156
Tree	public PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Code	public PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Distance : 3

157
Tree	final PathIterator p1 = p1 . getPathIterator ( return; ) ;
Code	final PathIterator p1 = p1 . getPathIterator ( return; ) ;
Distance : 4

158
Tree	public PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	public PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 4

159
Tree	PathIterator p2 = p2 . getPathIterator ( null . getPathIterator ( null ) ) ;
Code	PathIterator p2 = p2 . getPathIterator ( null . getPathIterator ( null ) ) ;
Distance : 6

160
Tree	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Distance : 2

161
Tree	PathIterator p2 = p1 . getPathIterator ( null ) ;
Code	PathIterator p2 = p1 . getPathIterator ( null ) ;
Distance : 2

162
Tree	PathIterator p2 = p2 . getPathIterator ( ( null [] ) continue; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( ( null [] ) continue; ) ;
Distance : 5

163
Tree	static PathIterator iterator2 = p2 . getPathIterator ( super(); ) ;
Code	static PathIterator iterator2 = p2 . getPathIterator ( super(); ) ;
Distance : 2

164
Tree	public PathIterator p2 = p1 . getPathIterator ( null ) ;
Code	public PathIterator p2 = p1 . getPathIterator ( null ) ;
Distance : 3

165
Tree	static PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	static PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 4

166
Tree	PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 2

167
Tree	synchronized PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Code	synchronized PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Distance : 4

168
Tree	PathIterator p2 = p1 . getPathIterator ( ( null ) null ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( null ) null ) ;
Distance : 5

169
Tree	abstract PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Code	abstract PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Distance : 2

170
Tree	PathIterator p2 = p2 . getPathIterator ( ( null [] ) return; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( ( null [] ) return; ) ;
Distance : 5

171
Tree	static PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Code	static PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Distance : 4

172
Tree	static PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Code	static PathIterator iterator2 = p1 . getPathIterator ( break; ) ;
Distance : 3

173
Tree	PathIterator p2 = p1 . getPathIterator ( ( null ) break; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( null ) break; ) ;
Distance : 5

174
Tree	abstract PathIterator p2 = p2 . getPathIterator ( super(); ) ;
Code	abstract PathIterator p2 = p2 . getPathIterator ( super(); ) ;
Distance : 3

175
Tree	PathIterator p2 = p2 . getPathIterator ( ( p2 ) break; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( ( p2 ) break; ) ;
Distance : 5

176
Tree	PathIterator iterator2 = p1 . getPathIterator ( ( null ) default: ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( ( null ) default: ) ;
Distance : 4

177
Tree	PathIterator p1 = p1 . getPathIterator ( ( p2 ) default: ) ;
Code	PathIterator p1 = p1 . getPathIterator ( ( p2 ) default: ) ;
Distance : 6

178
Tree	PathIterator iterator2 = p1 . getPathIterator ( p1 . getPathIterator ( super(); ) ) ;
Code	PathIterator iterator2 = p1 . getPathIterator ( p1 . getPathIterator ( super(); ) ) ;
Distance : 7

179
Tree	abstract PathIterator p2 = p1 . getPathIterator ( break; ) ;
Code	abstract PathIterator p2 = p1 . getPathIterator ( break; ) ;
Distance : 4

180
Tree	private PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Code	private PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Distance : 3

181
Tree	PathIterator p1 = p2 . getPathIterator ( ( p1 ) return; ) ;
Code	PathIterator p1 = p2 . getPathIterator ( ( p1 ) return; ) ;
Distance : 5

182
Tree	PathIterator p2 = p1 . getPathIterator ( ( p2 ) default: ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( p2 ) default: ) ;
Distance : 6

183
Tree	final PathIterator p1 = p2 . getPathIterator ( super(); ) ;
Code	final PathIterator p1 = p2 . getPathIterator ( super(); ) ;
Distance : 3

184
Tree	public PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Code	public PathIterator p2 = p1 . getPathIterator ( super(); ) ;
Distance : 4

185
Tree	abstract PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Code	abstract PathIterator p1 = p1 . getPathIterator ( continue; ) ;
Distance : 4

186
Tree	final PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Code	final PathIterator iterator2 = p2 . getPathIterator ( break; ) ;
Distance : 2

187
Tree	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 3

188
Tree	final PathIterator p2 = p1 . getPathIterator ( break; ) ;
Code	final PathIterator p2 = p1 . getPathIterator ( break; ) ;
Distance : 4

189
Tree	PathIterator p2 = p1 . getPathIterator ( ( null ) return; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( null ) return; ) ;
Distance : 5

190
Tree	public PathIterator p1 = p1 . getPathIterator ( ( null [] ) null ) ;
Code	public PathIterator p1 = p1 . getPathIterator ( ( null [] ) null ) ;
Distance : 7

191
Tree	synchronized PathIterator p1 = p1 . getPathIterator ( null ) ;
Code	synchronized PathIterator p1 = p1 . getPathIterator ( null ) ;
Distance : 3

192
Tree	PathIterator p2 = p2 . getPathIterator ( ( p2 ) return; ) ;
Code	PathIterator p2 = p2 . getPathIterator ( ( p2 ) return; ) ;
Distance : 5

193
Tree	private PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Code	private PathIterator iterator2 = p1 . getPathIterator ( return; ) ;
Distance : 3

194
Tree	private PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Code	private PathIterator p1 = p1 . getPathIterator ( super(); ) ;
Distance : 4

195
Tree	PathIterator p2 = p1 . getPathIterator ( ( null ) continue; ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( null ) continue; ) ;
Distance : 5

196
Tree	PathIterator p2 = p1 . getPathIterator ( ( p1 ) default: ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( p1 ) default: ) ;
Distance : 6

197
Tree	PathIterator p2 = p1 . getPathIterator ( ( null [] ) default: ) ;
Code	PathIterator p2 = p1 . getPathIterator ( ( null [] ) default: ) ;
Distance : 6

198
Tree	final PathIterator p2 = p1 . getPathIterator ( return; ) ;
Code	final PathIterator p2 = p1 . getPathIterator ( return; ) ;
Distance : 4

199
Tree	synchronized PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Code	synchronized PathIterator iterator2 = p1 . getPathIterator ( default: ) ;
Distance : 3

========================================================================


========================================================================
Example Number: 7
Parent Code is: 
{ return STRING_CONSTANT + toolTipText + STRING_CONSTANT ; }
-------------------------------------------------------------------------------
Child code is: 
{ return STRING_CONSTANT + ImageMapUtilities . htmlEscape ( toolTipText ) + STRING_CONSTANT ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (800{val=toolTipText}) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=ImageMapUtilities}) (235{val=.}) (802{val=htmlEscape}) (214{val=(}) (800{val=toolTipText}) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/10/parent/source_org_jfree_chart_imagemap_StandardToolTipTagFragmentGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.NOT_POSITIVE_BETA ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.NOT_POSITIVE_BETA ) ; }
Distance : 6

1
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ThrowsException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ThrowsException () ) + STRING_CONSTANT ; }
Distance : 4

2
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConstantInitializer () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConstantInitializer () ) + STRING_CONSTANT ; }
Distance : 4

3
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayList () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayList () ) + STRING_CONSTANT ; }
Distance : 4

4
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RuntimeException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RuntimeException () ) + STRING_CONSTANT ; }
Distance : 4

5
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoLoggerImpl () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoLoggerImpl () ) + STRING_CONSTANT ; }
Distance : 4

6
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VersionBumper () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VersionBumper () ) + STRING_CONSTANT ; }
Distance : 4

7
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getName () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getName () ) + STRING_CONSTANT ; }
Distance : 4

8
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StreamDataAdapter () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StreamDataAdapter () ) + STRING_CONSTANT ; }
Distance : 4

9
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Matches () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Matches () ) + STRING_CONSTANT ; }
Distance : 4

10
Tree	{ return toolTipText . htmlEscape ( ImageMapUtilities ) ; }
Code	{ return toolTipText . htmlEscape ( ImageMapUtilities ) ; }
Distance : 6

11
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new GitLogProvider () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new GitLogProvider () ) + STRING_CONSTANT ; }
Distance : 4

12
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ExploitAssigns () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ExploitAssigns () ) + STRING_CONSTANT ; }
Distance : 4

13
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getMillis () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getMillis () ) + STRING_CONSTANT ; }
Distance : 4

14
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TypeVarBoundedType () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TypeVarBoundedType () ) + STRING_CONSTANT ; }
Distance : 4

15
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Same () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Same () ) + STRING_CONSTANT ; }
Distance : 4

16
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RankDeficientMatrixException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RankDeficientMatrixException () ) + STRING_CONSTANT ; }
Distance : 4

17
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new FakeList () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new FakeList () ) + STRING_CONSTANT ; }
Distance : 4

18
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new InvocationsAnalyzer () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new InvocationsAnalyzer () ) + STRING_CONSTANT ; }
Distance : 4

19
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new BlackHoleErrorManager () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new BlackHoleErrorManager () ) + STRING_CONSTANT ; }
Distance : 4

20
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Well19937c () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Well19937c () ) + STRING_CONSTANT ; }
Distance : 4

21
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Nullability.EXPLICIT () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Nullability.EXPLICIT () ) + STRING_CONSTANT ; }
Distance : 4

22
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new OngoingStubbingImpl () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new OngoingStubbingImpl () ) + STRING_CONSTANT ; }
Distance : 4

23
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TimeZoneOffset () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TimeZoneOffset () ) + STRING_CONSTANT ; }
Distance : 4

24
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new LocalQName () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new LocalQName () ) + STRING_CONSTANT ; }
Distance : 4

25
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PolygonsSet () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PolygonsSet () ) + STRING_CONSTANT ; }
Distance : 4

26
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NullArgumentException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NullArgumentException () ) + STRING_CONSTANT ; }
Distance : 4

27
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new SimpleAffix () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new SimpleAffix () ) + STRING_CONSTANT ; }
Distance : 4

28
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Power () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Power () ) + STRING_CONSTANT ; }
Distance : 4

29
Tree	{ return htmlEscape ( ImageMapUtilities , toolTipText ) ; }
Code	{ return htmlEscape ( ImageMapUtilities , toolTipText ) ; }
Distance : 7

30
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Reporter () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Reporter () ) + STRING_CONSTANT ; }
Distance : 4

31
Tree	{ return toolTipText . htmlEscape ( loopNode.collection ) ; }
Code	{ return toolTipText . htmlEscape ( loopNode.collection ) ; }
Distance : 6

32
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE ) ; }
Distance : 6

33
Tree	{ return toolTipText . htmlEscape ( commonTypes.NULL_OR_UNDEFINED ) ; }
Code	{ return toolTipText . htmlEscape ( commonTypes.NULL_OR_UNDEFINED ) ; }
Distance : 6

34
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.DUPLICATED_ABSCISSA , toolTipText ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.DUPLICATED_ABSCISSA , toolTipText ) ; }
Distance : 7

35
Tree	{ return toolTipText . htmlEscape ( FeatureSet.ES3 , toolTipText ) ; }
Code	{ return toolTipText . htmlEscape ( FeatureSet.ES3 , toolTipText ) ; }
Distance : 7

36
Tree	{ return toolTipText . htmlEscape ( ComposableFunction.ULP ) ; }
Code	{ return toolTipText . htmlEscape ( ComposableFunction.ULP ) ; }
Distance : 6

37
Tree	{ return toolTipText . htmlEscape ( ComposableFunction.FLOOR ) ; }
Code	{ return toolTipText . htmlEscape ( ComposableFunction.FLOOR ) ; }
Distance : 6

38
Tree	{ return toolTipText . htmlEscape ( TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ; }
Code	{ return toolTipText . htmlEscape ( TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ; }
Distance : 6

39
Tree	{ return toolTipText . htmlEscape ( LanguageMode.ECMASCRIPT6 ) ; }
Code	{ return toolTipText . htmlEscape ( LanguageMode.ECMASCRIPT6 ) ; }
Distance : 6

40
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO ) ; }
Distance : 6

41
Tree	{ return toolTipText . htmlEscape ( PassNames.REMOVE_UNUSED_VARS ) ; }
Code	{ return toolTipText . htmlEscape ( PassNames.REMOVE_UNUSED_VARS ) ; }
Distance : 6

42
Tree	{ return toolTipText . htmlEscape ( ProcessDefines.UNKNOWN_DEFINE_WARNING ) ; }
Code	{ return toolTipText . htmlEscape ( ProcessDefines.UNKNOWN_DEFINE_WARNING ) ; }
Distance : 6

43
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.INSUFFICIENT_ROWS_AND_COLUMNS ) ; }
Distance : 6

44
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.FUNCTION_NOT_DIFFERENTIABLE ) ; }
Distance : 6

45
Tree	{ return toolTipText . htmlEscape ( Cartesian1D.ZERO ) ; }
Code	{ return toolTipText . htmlEscape ( Cartesian1D.ZERO ) ; }
Distance : 6

46
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES ) ; }
Distance : 6

47
Tree	{ return toolTipText . htmlEscape ( getMinimum ) ; }
Code	{ return toolTipText . htmlEscape ( getMinimum ) ; }
Distance : 6

48
Tree	{ return toolTipText . htmlEscape ( ComposableFunction.SIN ) ; }
Code	{ return toolTipText . htmlEscape ( ComposableFunction.SIN ) ; }
Distance : 6

49
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.NO_OPTIMUM_COMPUTED_YET ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.NO_OPTIMUM_COMPUTED_YET ) ; }
Distance : 6

50
Tree	{ return toolTipText . htmlEscape ( FeatureSet.ES3 ) ; }
Code	{ return toolTipText . htmlEscape ( FeatureSet.ES3 ) ; }
Distance : 6

51
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.DUPLICATED_ABSCISSA ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.DUPLICATED_ABSCISSA ) ; }
Distance : 6

52
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DummyLocalizable () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DummyLocalizable () ) + STRING_CONSTANT ; }
Distance : 4

53
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConsoleMockitoLogger () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConsoleMockitoLogger () ) + STRING_CONSTANT ; }
Distance : 4

54
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ThreadSafeDelegatingErrorManager () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ThreadSafeDelegatingErrorManager () ) + STRING_CONSTANT ; }
Distance : 4

55
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new SerializableBoundedType () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new SerializableBoundedType () ) + STRING_CONSTANT ; }
Distance : 4

56
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NoDataException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NoDataException () ) + STRING_CONSTANT ; }
Distance : 4

57
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new HamcrestArgumentMatcher () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new HamcrestArgumentMatcher () ) + STRING_CONSTANT ; }
Distance : 4

58
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ToStringBuilder () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ToStringBuilder () ) + STRING_CONSTANT ; }
Distance : 4

59
Tree	{ return toolTipText . htmlEscape ( byteValue ) ; }
Code	{ return toolTipText . htmlEscape ( byteValue ) ; }
Distance : 6

60
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StatArray () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StatArray () ) + STRING_CONSTANT ; }
Distance : 4

61
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Date () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Date () ) + STRING_CONSTANT ; }
Distance : 4

62
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Exception () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Exception () ) + STRING_CONSTANT ; }
Distance : 4

63
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getInstanceUTC () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getInstanceUTC () ) + STRING_CONSTANT ; }
Distance : 4

64
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DelayedExecution () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DelayedExecution () ) + STRING_CONSTANT ; }
Distance : 4

65
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoException () ) + STRING_CONSTANT ; }
Distance : 4

66
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StartsWith () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StartsWith () ) + STRING_CONSTANT ; }
Distance : 4

67
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ClassicalRungeKuttaFieldIntegrator () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ClassicalRungeKuttaFieldIntegrator () ) + STRING_CONSTANT ; }
Distance : 4

68
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NameChangingCallback () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NameChangingCallback () ) + STRING_CONSTANT ; }
Distance : 4

69
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Contains () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Contains () ) + STRING_CONSTANT ; }
Distance : 4

70
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConstructorInjection () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ConstructorInjection () ) + STRING_CONSTANT ; }
Distance : 4

71
Tree	{ return STRING_CONSTANT + ImageMapUtilities . htmlEscape ( new Object () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + ImageMapUtilities . htmlEscape ( new Object () ) + STRING_CONSTANT ; }
Distance : 3

72
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new UnrecognizedRequire () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new UnrecognizedRequire () ) + STRING_CONSTANT ; }
Distance : 4

73
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ToStringContext.TO_STRING () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ToStringContext.TO_STRING () ) + STRING_CONSTANT ; }
Distance : 4

74
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new HashMap () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new HashMap () ) + STRING_CONSTANT ; }
Distance : 4

75
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getLValue () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new getLValue () ) + STRING_CONSTANT ; }
Distance : 4

76
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( ImageMapUtilities , toolTipText ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( ImageMapUtilities , toolTipText ) + STRING_CONSTANT ; }
Distance : 3

77
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RendererChangeEvent () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RendererChangeEvent () ) + STRING_CONSTANT ; }
Distance : 4

78
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Es6SyntacticScopeCreator () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Es6SyntacticScopeCreator () ) + STRING_CONSTANT ; }
Distance : 4

79
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TypeAttributeAppender.ForInstrumentedType () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TypeAttributeAppender.ForInstrumentedType () ) + STRING_CONSTANT ; }
Distance : 4

80
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NonSquareMatrixException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new NonSquareMatrixException () ) + STRING_CONSTANT ; }
Distance : 4

81
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new CompilerOptions () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new CompilerOptions () ) + STRING_CONSTANT ; }
Distance : 4

82
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MarsagliaNormalizedGaussianSampler () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MarsagliaNormalizedGaussianSampler () ) + STRING_CONSTANT ; }
Distance : 4

83
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new FriendlyReturnValues () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new FriendlyReturnValues () ) + STRING_CONSTANT ; }
Distance : 4

84
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Tracer () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Tracer () ) + STRING_CONSTANT ; }
Distance : 4

85
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VariableStepHandler () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VariableStepHandler () ) + STRING_CONSTANT ; }
Distance : 4

86
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new > () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new > () ) + STRING_CONSTANT ; }
Distance : 4

87
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayFieldVector () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayFieldVector () ) + STRING_CONSTANT ; }
Distance : 4

88
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new isFrozen () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new isFrozen () ) + STRING_CONSTANT ; }
Distance : 4

89
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Add () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Add () ) + STRING_CONSTANT ; }
Distance : 4

90
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new GillFieldStepInterpolator () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new GillFieldStepInterpolator () ) + STRING_CONSTANT ; }
Distance : 4

91
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new WeakHashMap () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new WeakHashMap () ) + STRING_CONSTANT ; }
Distance : 4

92
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new dateStyle () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new dateStyle () ) + STRING_CONSTANT ; }
Distance : 4

93
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new AtLeastDiscrepancy () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new AtLeastDiscrepancy () ) + STRING_CONSTANT ; }
Distance : 4

94
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoStubber () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MockitoStubber () ) + STRING_CONSTANT ; }
Distance : 4

95
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MatchersPrinter () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MatchersPrinter () ) + STRING_CONSTANT ; }
Distance : 4

96
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PropertyChangeEvent () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PropertyChangeEvent () ) + STRING_CONSTANT ; }
Distance : 4

97
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayRealVector () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ArrayRealVector () ) + STRING_CONSTANT ; }
Distance : 4

98
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ActualInvocationsFinder () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ActualInvocationsFinder () ) + STRING_CONSTANT ; }
Distance : 4

99
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Sin () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Sin () ) + STRING_CONSTANT ; }
Distance : 4

100
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ExceptionStatement () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ExceptionStatement () ) + STRING_CONSTANT ; }
Distance : 4

101
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VerificationInOrderMode () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VerificationInOrderMode () ) + STRING_CONSTANT ; }
Distance : 4

102
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MarkerChangeEvent () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MarkerChangeEvent () ) + STRING_CONSTANT ; }
Distance : 4

103
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StatementFusion () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new StatementFusion () ) + STRING_CONSTANT ; }
Distance : 4

104
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new EarlyEs6ToEs3Converter () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new EarlyEs6ToEs3Converter () ) + STRING_CONSTANT ; }
Distance : 4

105
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MathUnsupportedOperationException () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MathUnsupportedOperationException () ) + STRING_CONSTANT ; }
Distance : 4

106
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Localized () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new Localized () ) + STRING_CONSTANT ; }
Distance : 4

107
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MyDefaultReturnValues () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MyDefaultReturnValues () ) + STRING_CONSTANT ; }
Distance : 4

108
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RandomDataImpl () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new RandomDataImpl () ) + STRING_CONSTANT ; }
Distance : 4

109
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new JUnit44RunnerImpl () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new JUnit44RunnerImpl () ) + STRING_CONSTANT ; }
Distance : 4

110
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new IntervalsSet () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new IntervalsSet () ) + STRING_CONSTANT ; }
Distance : 4

111
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ReorderConstantExpression () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new ReorderConstantExpression () ) + STRING_CONSTANT ; }
Distance : 4

112
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new halfdayOfDay () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new halfdayOfDay () ) + STRING_CONSTANT ; }
Distance : 4

113
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VoidMethodStubbableImpl () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new VoidMethodStubbableImpl () ) + STRING_CONSTANT ; }
Distance : 4

114
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MathInternalError () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MathInternalError () ) + STRING_CONSTANT ; }
Distance : 4

115
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MissingInvocationVerifier () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new MissingInvocationVerifier () ) + STRING_CONSTANT ; }
Distance : 4

116
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TransformAMDModulesCallback () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new TransformAMDModulesCallback () ) + STRING_CONSTANT ; }
Distance : 4

117
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PeepholeCollectPropertyAssignments () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new PeepholeCollectPropertyAssignments () ) + STRING_CONSTANT ; }
Distance : 4

118
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DefaultRegisteredInvocations () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new DefaultRegisteredInvocations () ) + STRING_CONSTANT ; }
Distance : 4

119
Tree	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new InternalError () ) + STRING_CONSTANT ; }
Code	{ return STRING_CONSTANT + toolTipText . htmlEscape ( new InternalError () ) + STRING_CONSTANT ; }
Distance : 4

120
Tree	{ return toolTipText . htmlEscape ( Exec.INSTANCE ) ; }
Code	{ return toolTipText . htmlEscape ( Exec.INSTANCE ) ; }
Distance : 6

121
Tree	{ return toolTipText . htmlEscape ( MinimizationStyle.PREFER_UNNEGATED ) ; }
Code	{ return toolTipText . htmlEscape ( MinimizationStyle.PREFER_UNNEGATED ) ; }
Distance : 6

122
Tree	{ return toolTipText . htmlEscape ( RandomSource.TWO_CMRES ) ; }
Code	{ return toolTipText . htmlEscape ( RandomSource.TWO_CMRES ) ; }
Distance : 6

123
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } x
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } x
Distance : 7

124
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } c
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } c
Distance : 7

125
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } notifyListeners
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } notifyListeners
Distance : 7

126
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Class
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Class
Distance : 7

127
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Test
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Test
Distance : 7

128
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } p
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } p
Distance : 7

129
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } options
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } options
Distance : 7

130
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } source
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } source
Distance : 7

131
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } toString
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } toString
Distance : 7

132
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } type
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } type
Distance : 7

133
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } *
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } *
Distance : 7

134
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } paint
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } paint
Distance : 7

135
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } testSame
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } testSame
Distance : 7

136
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } join
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } join
Distance : 7

137
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } getInstance
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } getInstance
Distance : 7

138
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } fireChangeEvent
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } fireChangeEvent
Distance : 7

139
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } ArrayList
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } ArrayList
Distance : 7

140
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } <>
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } <>
Distance : 7

141
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } array
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } array
Distance : 7

142
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } ParamChecks
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } ParamChecks
Distance : 7

143
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } f
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } f
Distance : 7

144
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Override
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Override
Distance : 7

145
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } mock
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } mock
Distance : 7

146
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Object
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Object
Distance : 7

147
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } class
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } class
Distance : 7

148
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } try
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } try
Distance : 7

149
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } serialised
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } serialised
Distance : 7

150
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } fail
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } fail
Distance : 7

151
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Args
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Args
Distance : 7

152
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } List
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } List
Distance : 7

153
Tree	{ return toolTipText . htmlEscape ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO , toolTipText ) ; }
Code	{ return toolTipText . htmlEscape ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO , toolTipText ) ; }
Distance : 7

154
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } boolean
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } boolean
Distance : 7

155
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } m
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } m
Distance : 7

156
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Node
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Node
Distance : 7

157
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Exception
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Exception
Distance : 7

158
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } lines
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } lines
Distance : 7

159
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } verify
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } verify
Distance : 7

160
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Integer
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Integer
Distance : 7

161
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } v
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } v
Distance : 7

162
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } length
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } length
Distance : 7

163
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } long
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } long
Distance : 7

164
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } reportCodeChange
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } reportCodeChange
Distance : 7

165
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } result
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } result
Distance : 7

166
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } expected
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } expected
Distance : 7

167
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } IllegalArgumentException
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } IllegalArgumentException
Distance : 7

168
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } field
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } field
Distance : 7

169
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } t
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } t
Distance : 7

170
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } name
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } name
Distance : 7

171
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } add
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } add
Distance : 7

172
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } sb
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } sb
Distance : 7

173
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } scope
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } scope
Distance : 7

174
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } getFirstChild
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } getFirstChild
Distance : 7

175
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } throws
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } throws
Distance : 7

176
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } append
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } append
Distance : 7

177
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } UnivariateFunction
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } UnivariateFunction
Distance : 7

178
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } returnZero
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } returnZero
Distance : 7

179
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } FastMath
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } FastMath
Distance : 7

180
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } isBlock
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } isBlock
Distance : 7

181
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } parent
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } parent
Distance : 7

182
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } assertEquals
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } assertEquals
Distance : 7

183
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } []
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } []
Distance : 7

184
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } test
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } test
Distance : 7

185
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } @
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } @
Distance : 7

186
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } int
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } int
Distance : 7

187
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } false
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } false
Distance : 7

188
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } d
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } d
Distance : 7

189
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } equals
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } equals
Distance : 7

190
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } for
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } for
Distance : 7

191
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Invocation
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } Invocation
Distance : 7

192
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } js
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } js
Distance : 7

193
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } TestUtilities
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } TestUtilities
Distance : 7

194
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } StrBuilder
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } StrBuilder
Distance : 7

195
Tree	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } setUp
Code	{ return toolTipText . htmlEscape ( toolTipText , toolTipText ) ; } setUp
Distance : 7

196
Tree	{ return toolTipText . htmlEscape ( toolTipText ) ; } ==
Code	{ return toolTipText . htmlEscape ( toolTipText ) ; } ==
Distance : 6

197
Tree	{ return toolTipText . htmlEscape ( toolTipText ) ; } void
Code	{ return toolTipText . htmlEscape ( toolTipText ) ; } void
Distance : 6

198
Tree	{ return false ; } Test
Code	{ return false ; } Test
Distance : 11

199
Tree	{ return false ; } Class
Code	{ return false ; } Class
Distance : 11

========================================================================


========================================================================
Example Number: 8
Parent Code is: 
{ this ( time , RegularTimePeriod.DEFAULT_TIME_ZONE , Locale . getDefault () ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ this ( time , zone , Locale . getDefault () ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (40{val=RegularTimePeriod.DEFAULT_TIME_ZONE}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (17 (315{val=this}) (214{val=(}) (800{val=time}) (234{val=,}) (800{val=zone}) (234{val=,}) (32 (800{val=Locale}) (235{val=.}) (802{val=getDefault}) (216{val=()})) (215{val=)}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/8/parent/source_org_jfree_data_time_Week.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

1
Tree	{ this ( time , time , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Distance : 8

2
Tree	{ super ( time , time , zone , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , zone , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

3
Tree	{ this ( time , zone , time , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

4
Tree	{ super ( time , zone , time , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , time , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

5
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = time ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = time ; }
Distance : 8

6
Tree	{ super ( time , Locale , time , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , time , zone . getDefault () ) ; Locale = Locale ; }
Distance : 9

7
Tree	{ this ( time , Locale , time , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

8
Tree	{ super ( time , zone , zone , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , zone , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

9
Tree	{ this ( time , zone , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Distance : 8

10
Tree	{ super ( time , Locale , zone , time . getDefault () ) ; }
Code	{ super ( time , Locale , zone , time . getDefault () ) ; }
Distance : 4

11
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; time = Locale ; }
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; time = Locale ; }
Distance : 8

12
Tree	{ super ( time , Locale , zone , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , zone , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

13
Tree	{ this ( time , time , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

14
Tree	{ super ( time , time , zone , zone . getDefault () ) ; }
Code	{ super ( time , time , zone , zone . getDefault () ) ; }
Distance : 4

15
Tree	{ this ( time , Locale , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Distance : 9

16
Tree	{ this ( time , zone , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Distance : 8

17
Tree	{ super ( time , time , time , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , time , time , Locale . getDefault () ) ; zone = Locale ; }
Distance : 8

18
Tree	{ this ( time , Locale , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , zone , Locale , Locale . getDefault () ) ; }
Distance : 8

19
Tree	{ super ( time , zone , Locale , Locale . getDefault () ) ; time = Locale ; }
Code	{ super ( time , zone , Locale , Locale . getDefault () ) ; time = Locale ; }
Distance : 7

20
Tree	{ super ( time , Locale , Locale , Locale . getDefault () ) ; time = Locale ; }
Code	{ super ( time , Locale , Locale , Locale . getDefault () ) ; time = Locale ; }
Distance : 8

21
Tree	{ this ( time , time , time , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 9

22
Tree	{ this ( time , time , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

23
Tree	{ this ( time , Locale , zone , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

24
Tree	{ this ( time , Locale , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Distance : 8

25
Tree	{ this ( time , zone , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 8

26
Tree	{ this ( time , Locale , zone , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , time . getDefault () , Locale . getDefault () ) ; }
Distance : 7

27
Tree	{ this ( time , time , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Distance : 8

28
Tree	{ this ( time , Locale , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 9

29
Tree	{ super ( time , zone , time , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , time , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

30
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = time ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = time ; }
Distance : 8

31
Tree	{ super ( time , Locale , time , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , time , time . getDefault () ) ; Locale = Locale ; }
Distance : 9

32
Tree	{ this ( time , zone , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 8

33
Tree	{ this ( time , time , zone , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

34
Tree	{ super ( time , zone , zone , time . getDefault () ) ; }
Code	{ super ( time , zone , zone , time . getDefault () ) ; }
Distance : 4

35
Tree	{ super ( time , time , time , zone . getDefault () ) ; }
Code	{ super ( time , time , time , zone . getDefault () ) ; }
Distance : 5

36
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = zone ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = zone ; }
Distance : 8

37
Tree	{ this ( time , time , time , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

38
Tree	{ super ( time , time , zone , time . getDefault () ) ; }
Code	{ super ( time , time , zone , time . getDefault () ) ; }
Distance : 4

39
Tree	{ super ( time , zone , time , zone . getDefault () ) ; }
Code	{ super ( time , zone , time , zone . getDefault () ) ; }
Distance : 4

40
Tree	{ this ( time , zone , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , Locale , zone , Locale . getDefault () ) ; }
Distance : 8

41
Tree	{ super ( time , Locale , time , zone . getDefault () ) ; }
Code	{ super ( time , Locale , time , zone . getDefault () ) ; }
Distance : 5

42
Tree	{ super ( time , time , time , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , time , zone . getDefault () ) ; Locale = Locale ; }
Distance : 9

43
Tree	{ this ( time , zone , zone , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

44
Tree	{ this ( time , time , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , Locale , Locale , zone . getDefault () ) ; }
Distance : 9

45
Tree	{ this ( time , Locale , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 9

46
Tree	{ this ( time , zone , zone , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , time . getDefault () , Locale . getDefault () ) ; }
Distance : 7

47
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = time ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = time ; }
Distance : 7

48
Tree	{ super ( time , Locale , zone , zone . getDefault () ) ; }
Code	{ super ( time , Locale , zone , zone . getDefault () ) ; }
Distance : 4

49
Tree	{ this ( time , time , zone , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

50
Tree	{ this ( time , zone , time , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 8

51
Tree	{ this ( time , time , Locale , Locale . getDefault () , zone . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale . getDefault () , zone . getDefault () ) ; }
Distance : 8

52
Tree	{ super ( time , zone , Locale , time . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , zone , Locale , time . getDefault () ) ; zone = Locale ; }
Distance : 7

53
Tree	{ this ( time , Locale , time , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 9

54
Tree	{ super ( time , Locale , Locale , time . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , Locale , Locale , time . getDefault () ) ; zone = Locale ; }
Distance : 8

55
Tree	{ super ( time , zone , zone , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , zone , zone , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

56
Tree	{ this ( time , zone , Locale , time , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , time , Locale , time , Locale . getDefault () ) ; }
Distance : 8

57
Tree	{ super ( time , Locale , zone , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , Locale , zone , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

58
Tree	{ super ( time , time , zone , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , time , zone , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

59
Tree	{ this ( zone . getDefault () , Locale ) ; }
Code	{ this ( zone . getDefault () , Locale ) ; }
Distance : 6

60
Tree	{ this ( time , zone , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 8

61
Tree	{ this ( zone , time , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( zone , time , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 8

62
Tree	{ this ( time , zone , time , Locale , Locale , zone , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale , Locale , zone , Locale . getDefault () ) ; }
Distance : 8

63
Tree	{ this ( time , time , zone , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , time , zone , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 8

64
Tree	{ this ( time , Locale , Locale , time , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , time , Locale , time , Locale . getDefault () ) ; }
Distance : 9

65
Tree	{ this ( time , time , Locale , time , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , time , time , Locale , Locale . getDefault () ) ; }
Distance : 9

66
Tree	{ this ( time , zone , zone , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

67
Tree	{ this ( time , Locale , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 8

68
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = Locale ; }
Distance : 8

69
Tree	{ this ( time , time , Locale , time , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , time , Locale , time , Locale , Locale , time . getDefault () ) ; }
Distance : 9

70
Tree	{ super ( time , zone , zone , zone . getDefault () ) ; }
Code	{ super ( time , zone , zone , zone . getDefault () ) ; }
Distance : 4

71
Tree	{ this ( time , time , time , Locale , Locale , zone , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , Locale , Locale , zone , Locale . getDefault () ) ; }
Distance : 8

72
Tree	{ this ( time , time , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 8

73
Tree	{ this ( time , zone , time , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 8

74
Tree	{ super ( time , time , zone , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , zone , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

75
Tree	{ super ( time , zone , time , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , zone , time , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

76
Tree	{ super ( time , Locale , time , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , Locale , time , Locale . getDefault () ) ; zone = Locale ; }
Distance : 8

77
Tree	{ this ( time , time , time , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , time , time , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 9

78
Tree	{ this ( time , zone , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

79
Tree	{ this ( time , Locale , time , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 9

80
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; Locale = zone ; }
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; Locale = zone ; }
Distance : 8

81
Tree	{ this ( time , Locale , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

82
Tree	{ this ( time , Locale , time , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , Locale , time , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 9

83
Tree	{ super ( time , zone , zone , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , zone , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

84
Tree	{ this ( time , zone , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

85
Tree	{ super ( time , Locale , zone , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , zone , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

86
Tree	{ super ( time , zone , Locale , Locale . getDefault () ) ; Locale = zone ; }
Code	{ super ( time , zone , Locale , Locale . getDefault () ) ; Locale = zone ; }
Distance : 7

87
Tree	{ this ( time , Locale , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

88
Tree	{ super ( time , Locale , Locale , Locale . getDefault () ) ; Locale = zone ; }
Code	{ super ( time , Locale , Locale , Locale . getDefault () ) ; Locale = zone ; }
Distance : 8

89
Tree	{ this ( time , zone , time , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 8

90
Tree	{ this ( time , time , Locale , time , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , time , Locale , time , Locale . getDefault () ) ; }
Distance : 9

91
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = time ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = time ; }
Distance : 8

92
Tree	{ super ( time , time , Locale , time . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , time , Locale , time . getDefault () ) ; zone = Locale ; }
Distance : 8

93
Tree	{ this ( time , time , time , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 9

94
Tree	{ super ( time , time , time , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , time , time . getDefault () ) ; Locale = Locale ; }
Distance : 9

95
Tree	{ this ( time . getDefault () , time ) ; }
Code	{ this ( time . getDefault () , time ) ; }
Distance : 6

96
Tree	{ this ( time . getDefault () , zone ) ; }
Code	{ this ( time . getDefault () , zone ) ; }
Distance : 6

97
Tree	{ super ( time , Locale , time , time . getDefault () ) ; }
Code	{ super ( time , Locale , time , time . getDefault () ) ; }
Distance : 5

98
Tree	{ this ( time , time , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 7

99
Tree	{ super ( time , time , time , Locale . getDefault () ) ; }
Code	{ super ( time , time , time , Locale . getDefault () ) ; }
Distance : 4

100
Tree	{ this ( time , zone , Locale , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , time . getDefault () , Locale . getDefault () ) ; }
Distance : 7

101
Tree	{ this ( time , zone , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 7

102
Tree	{ super ( time , zone , time , Locale . getDefault () ) ; }
Code	{ super ( time , zone , time , Locale . getDefault () ) ; }
Distance : 3

103
Tree	{ this ( time , Locale , Locale , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , time . getDefault () , Locale . getDefault () ) ; }
Distance : 8

104
Tree	{ super ( time , Locale , time , Locale . getDefault () ) ; }
Code	{ super ( time , Locale , time , Locale . getDefault () ) ; }
Distance : 4

105
Tree	{ super ( time , time , time , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , time , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 8

106
Tree	{ this ( time , Locale , time , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 8

107
Tree	{ this ( time , Locale , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 7

108
Tree	{ this ( time , time , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

109
Tree	{ super ( time , zone , time , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , time , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

110
Tree	{ super ( time , Locale , time , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , time , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 8

111
Tree	{ this ( time , time , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

112
Tree	{ super ( time , time , Locale , time . getDefault () ) ; }
Code	{ super ( time , time , Locale , time . getDefault () ) ; }
Distance : 4

113
Tree	{ this ( time , zone , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

114
Tree	{ super ( time , time , zone , Locale . getDefault () ) ; }
Code	{ super ( time , time , zone , Locale . getDefault () ) ; }
Distance : 3

115
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

116
Tree	{ this ( time , Locale , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

117
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; zone = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; zone = Locale ; }
Distance : 8

118
Tree	{ super ( time , zone , Locale , time . getDefault () ) ; }
Code	{ super ( time , zone , Locale , time . getDefault () ) ; }
Distance : 3

119
Tree	{ this ( time , Locale , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

120
Tree	{ this ( time , zone , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

121
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

122
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

123
Tree	{ this ( time . getDefault () , Locale ) ; }
Code	{ this ( time . getDefault () , Locale ) ; }
Distance : 6

124
Tree	{ this ( time , time , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 8

125
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; time = Locale ; }
Distance : 8

126
Tree	{ this ( time , zone , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 7

127
Tree	{ this ( time , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time . getDefault () , Locale . getDefault () ) ; }
Distance : 4

128
Tree	{ this ( time , Locale , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 8

129
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = zone ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = zone ; }
Distance : 8

130
Tree	{ this ( time , zone , time , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 7

131
Tree	{ this ( time , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 3

132
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; }
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; }
Distance : 4

133
Tree	{ super ( time , zone , Locale , Locale . getDefault () ) ; }
Code	{ super ( time , zone , Locale , Locale . getDefault () ) ; }
Distance : 3

134
Tree	{ super ( time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ super ( time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 4

135
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 8

136
Tree	{ super ( time , zone , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

137
Tree	{ super ( time , Locale , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , Locale , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 8

138
Tree	{ this ( time , time , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

139
Tree	{ this ( time , time , time , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 8

140
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = time ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; Locale = time ; }
Distance : 8

141
Tree	{ this ( time , Locale . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale . getDefault () , Locale . getDefault () ) ; }
Distance : 4

142
Tree	{ super ( time , zone , zone , Locale . getDefault () ) ; }
Code	{ super ( time , zone , zone , Locale . getDefault () ) ; }
Distance : 3

143
Tree	{ this ( time , time , Locale , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , time . getDefault () , Locale . getDefault () ) ; }
Distance : 8

144
Tree	{ super ( time , time , Locale , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , Locale , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

145
Tree	{ this ( time , time , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 9

146
Tree	{ this ( time , time , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

147
Tree	{ this ( time , time , time , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

148
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = zone ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; Locale = zone ; }
Distance : 8

149
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; zone = Locale ; }
Distance : 8

150
Tree	{ this ( time , time , zone , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , time . getDefault () , Locale . getDefault () ) ; }
Distance : 7

151
Tree	{ this ( time , zone , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 8

152
Tree	{ super ( time , time , time , time . getDefault () ) ; }
Code	{ super ( time , time , time , time . getDefault () ) ; }
Distance : 5

153
Tree	{ super ( time , zone , Locale , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , zone , Locale , Locale . getDefault () ) ; zone = Locale ; }
Distance : 7

154
Tree	{ this ( time , Locale , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

155
Tree	{ this ( time , time , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , Locale , Locale , time . getDefault () ) ; }
Distance : 9

156
Tree	{ super ( time , Locale , Locale , Locale . getDefault () ) ; zone = Locale ; }
Code	{ super ( time , Locale , Locale , Locale . getDefault () ) ; zone = Locale ; }
Distance : 8

157
Tree	{ this ( time , Locale , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , Locale , Locale , time , Locale . getDefault () ) ; }
Distance : 9

158
Tree	{ this ( time , zone , time , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

159
Tree	{ this ( time , Locale , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

160
Tree	{ this ( time , Locale , time , zone . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , zone . getDefault () , Locale . getDefault () ) ; }
Distance : 7

161
Tree	{ this ( time , time , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , Locale , time , Locale , Locale . getDefault () ) ; }
Distance : 9

162
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = zone ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; Locale = zone ; }
Distance : 7

163
Tree	{ super ( time , Locale , Locale , time . getDefault () ) ; }
Code	{ super ( time , Locale , Locale , time . getDefault () ) ; }
Distance : 4

164
Tree	{ super ( time , zone , time , time . getDefault () ) ; }
Code	{ super ( time , zone , time , time . getDefault () ) ; }
Distance : 4

165
Tree	{ this ( time , zone , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , zone , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

166
Tree	{ this ( time , Locale , time , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , time . getDefault () , Locale . getDefault () ) ; }
Distance : 8

167
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; time = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , Locale . getDefault () ) ; time = Locale ; }
Distance : 7

168
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; time = Locale ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , zone . getDefault () ) ; time = Locale ; }
Distance : 8

169
Tree	{ super ( time , Locale , zone , Locale . getDefault () ) ; }
Code	{ super ( time , Locale , zone , Locale . getDefault () ) ; }
Distance : 3

170
Tree	{ super ( time , Locale , Locale , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , Locale , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

171
Tree	{ super ( time , time , zone , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , zone , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

172
Tree	{ this ( time , Locale , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

173
Tree	{ super ( time , zone , Locale , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , Locale , time . getDefault () ) ; Locale = Locale ; }
Distance : 7

174
Tree	{ super ( time , zone , zone , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , zone , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

175
Tree	{ super ( time , Locale , Locale , time . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , Locale , time . getDefault () ) ; Locale = Locale ; }
Distance : 8

176
Tree	{ super ( time , Locale , zone , Locale . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , Locale , zone , Locale . getDefault () ) ; Locale = Locale ; }
Distance : 7

177
Tree	{ super ( time , time , Locale , zone . getDefault () ) ; }
Code	{ super ( time , time , Locale , zone . getDefault () ) ; }
Distance : 4

178
Tree	{ this ( time , time , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

179
Tree	{ this ( time , time , time , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , time , time , time . getDefault () , Locale . getDefault () ) ; }
Distance : 8

180
Tree	{ this ( time , zone , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

181
Tree	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = zone ; }
Code	{ super ( STRING_CONSTANT , STRING_CONSTANT , time . getDefault () ) ; zone = zone ; }
Distance : 8

182
Tree	{ super ( time , zone , Locale , zone . getDefault () ) ; }
Code	{ super ( time , zone , Locale , zone . getDefault () ) ; }
Distance : 3

183
Tree	{ super ( time , Locale , Locale , zone . getDefault () ) ; }
Code	{ super ( time , Locale , Locale , zone . getDefault () ) ; }
Distance : 4

184
Tree	{ super ( time , time , Locale , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , time , Locale , zone . getDefault () ) ; Locale = Locale ; }
Distance : 8

185
Tree	{ this ( time , zone , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

186
Tree	{ super ( time , zone , Locale , zone . getDefault () ) ; Locale = Locale ; }
Code	{ super ( time , zone , Locale , zone . getDefault () ) ; Locale = Locale ; }
Distance : 7

187
Tree	{ this ( time , zone , time , time . getDefault () , Locale . getDefault () ) ; }
Code	{ this ( time , zone , time , time . getDefault () , Locale . getDefault () ) ; }
Distance : 7

188
Tree	{ this ( time , zone , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , zone , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

189
Tree	{ this ( time , time , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , time , zone , Locale , Locale , Locale , Locale . getDefault () ) ; }
Distance : 8

190
Tree	{ this ( time , Locale , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Code	{ this ( time , Locale , Locale , time , Locale , Locale , Locale . getDefault () ) ; }
Distance : 9

191
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } ParamChecks
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } ParamChecks
Distance : 5

192
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } [
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } [
Distance : 5

193
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } true
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } true
Distance : 5

194
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } &&
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } &&
Distance : 5

195
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } Preconditions
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } Preconditions
Distance : 5

196
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } Override
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } Override
Distance : 5

197
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } ]
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } ]
Distance : 5

198
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } -
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } -
Distance : 5

199
Tree	{ super ( time , time , Locale , Locale . getDefault () ) ; } MathRuntimeException
Code	{ super ( time , time , Locale , Locale . getDefault () ) ; } MathRuntimeException
Distance : 5

========================================================================


========================================================================
Example Number: 9
Parent Code is: 
if ( dataset != null ) { return result ; }
-------------------------------------------------------------------------------
Child code is: 
if ( dataset == null ) { return result ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dataset}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=dataset}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=result}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Chart/1/parent/source_org_jfree_chart_renderer_category_AbstractCategoryItemRenderer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( dataset != null ) { return result ; }
Code	if ( dataset != null ) { return result ; }
Distance : 1

1
Tree	if ( new isBottom ( dataset ) . that ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . that ( result ) ) { return result ; }
Distance : 9

2
Tree	if ( dataset . toBooleanObject ( dataset ) ) { return result ; }
Code	if ( dataset . toBooleanObject ( dataset ) ) { return result ; }
Distance : 5

3
Tree	if ( dataset . isSubtypeOf ( dataset ) ) { return result ; }
Code	if ( dataset . isSubtypeOf ( dataset ) ) { return result ; }
Distance : 5

4
Tree	if ( dataset . isGlobal ( dataset ) ) { return result ; }
Code	if ( dataset . isGlobal ( dataset ) ) { return result ; }
Distance : 5

5
Tree	if ( dataset . ObjectUtils ( dataset ) ) { return result ; }
Code	if ( dataset . ObjectUtils ( dataset ) ) { return result ; }
Distance : 5

6
Tree	if ( dataset . getRequiredSymbols ( dataset ) ) { return result ; }
Code	if ( dataset . getRequiredSymbols ( dataset ) ) { return result ; }
Distance : 5

7
Tree	if ( dataset . contains () ) { return result ; }
Code	if ( dataset . contains () ) { return result ; }
Distance : 3

8
Tree	if ( dataset . isExprResult ( dataset ) ) { return result ; }
Code	if ( dataset . isExprResult ( dataset ) ) { return result ; }
Distance : 5

9
Tree	if ( dataset . isFalse ( dataset ) ) { return result ; }
Code	if ( dataset . isFalse ( dataset ) ) { return result ; }
Distance : 5

10
Tree	if ( dataset . isDeclaredSloppy () ) { return result ; }
Code	if ( dataset . isDeclaredSloppy () ) { return result ; }
Distance : 3

11
Tree	if ( dataset . isBlock ( dataset ) ) { return result ; }
Code	if ( dataset . isBlock ( dataset ) ) { return result ; }
Distance : 5

12
Tree	if ( dataset . parseWithIOException ( dataset ) ) { return result ; }
Code	if ( dataset . parseWithIOException ( dataset ) ) { return result ; }
Distance : 5

13
Tree	if ( dataset . getMethod ( dataset ) ) { return result ; }
Code	if ( dataset . getMethod ( dataset ) ) { return result ; }
Distance : 5

14
Tree	if ( dataset . isNonSingular ( dataset ) ) { return result ; }
Code	if ( dataset . isNonSingular ( dataset ) ) { return result ; }
Distance : 5

15
Tree	if ( dataset . isInterface ( dataset ) ) { return result ; }
Code	if ( dataset . isInterface ( dataset ) ) { return result ; }
Distance : 5

16
Tree	if ( dataset . getPrinter () ) { return result ; }
Code	if ( dataset . getPrinter () ) { return result ; }
Distance : 3

17
Tree	if ( indexOf () ) { return result ; }
Code	if ( indexOf () ) { return result ; }
Distance : 3

18
Tree	if ( isPointInRect ( dataset ) ) { return result ; }
Code	if ( isPointInRect ( dataset ) ) { return result ; }
Distance : 4

19
Tree	if ( dataset . booleanValue ( dataset ) ) { return result ; }
Code	if ( dataset . booleanValue ( dataset ) ) { return result ; }
Distance : 5

20
Tree	if ( dataset . isSquare ( dataset ) ) { return result ; }
Code	if ( dataset . isSquare ( dataset ) ) { return result ; }
Distance : 5

21
Tree	if ( dataset . getDataset ( dataset ) ) { return result ; }
Code	if ( dataset . getDataset ( dataset ) ) { return result ; }
Distance : 5

22
Tree	if ( dataset != null ) { return result . result ( dataset ) ; }
Code	if ( dataset != null ) { return result . result ( dataset ) ; }
Distance : 6

23
Tree	if ( dataset . isParamList () ) { return result ; }
Code	if ( dataset . isParamList () ) { return result ; }
Distance : 3

24
Tree	if ( dataset . isForIn () ) { return result ; }
Code	if ( dataset . isForIn () ) { return result ; }
Distance : 3

25
Tree	if ( fft ( dataset ) ) { return result ; }
Code	if ( fft ( dataset ) ) { return result ; }
Distance : 4

26
Tree	if ( dataset . abs () ) { return result ; }
Code	if ( dataset . abs () ) { return result ; }
Distance : 3

27
Tree	if ( dataset . isNoType () ) { return result ; }
Code	if ( dataset . isNoType () ) { return result ; }
Distance : 3

28
Tree	if ( dataset . gcd ( dataset ) ) { return result ; }
Code	if ( dataset . gcd ( dataset ) ) { return result ; }
Distance : 5

29
Tree	if ( dataset . useLU ( dataset ) ) { return result ; }
Code	if ( dataset . useLU ( dataset ) ) { return result ; }
Distance : 5

30
Tree	if ( dataset . isSomeUnknownType ( dataset ) ) { return result ; }
Code	if ( dataset . isSomeUnknownType ( dataset ) ) { return result ; }
Distance : 5

31
Tree	if ( dataset . containsOnly ( dataset ) ) { return result ; }
Code	if ( dataset . containsOnly ( dataset ) ) { return result ; }
Distance : 5

32
Tree	if ( isNonSingular ( dataset ) ) { return result ; }
Code	if ( isNonSingular ( dataset ) ) { return result ; }
Distance : 4

33
Tree	if ( dataset . getClass ( dataset ) ) { return result ; }
Code	if ( dataset . getClass ( dataset ) ) { return result ; }
Distance : 5

34
Tree	if ( dataset . codePointCount () ) { return result ; }
Code	if ( dataset . codePointCount () ) { return result ; }
Distance : 3

35
Tree	if ( new isBottom ( dataset ) . getSolver ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . getSolver ( result ) ) { return result ; }
Distance : 9

36
Tree	if ( dataset . getRowDimension ( dataset ) ) { return result ; }
Code	if ( dataset . getRowDimension ( dataset ) ) { return result ; }
Distance : 5

37
Tree	if ( dataset . findStackedRangeBounds () ) { return result ; }
Code	if ( dataset . findStackedRangeBounds () ) { return result ; }
Distance : 3

38
Tree	if ( dataset . regionMatches () ) { return result ; }
Code	if ( dataset . regionMatches () ) { return result ; }
Distance : 3

39
Tree	if ( dataset . instantiateGenericsWithUnknown ( dataset ) ) { return result ; }
Code	if ( dataset . instantiateGenericsWithUnknown ( dataset ) ) { return result ; }
Distance : 5

40
Tree	if ( dataset . containsNow ( dataset ) ) { return result ; }
Code	if ( dataset . containsNow ( dataset ) ) { return result ; }
Distance : 5

41
Tree	if ( dataset . noDefaultConstructor ( dataset ) ) { return result ; }
Code	if ( dataset . noDefaultConstructor ( dataset ) ) { return result ; }
Distance : 5

42
Tree	if ( dataset . getDaysInYearMax ( dataset ) ) { return result ; }
Code	if ( dataset . getDaysInYearMax ( dataset ) ) { return result ; }
Distance : 5

43
Tree	if ( dataset . getIndex ( dataset ) ) { return result ; }
Code	if ( dataset . getIndex ( dataset ) ) { return result ; }
Distance : 5

44
Tree	if ( firstNonNull ( dataset ) ) { return result ; }
Code	if ( firstNonNull ( dataset ) ) { return result ; }
Distance : 4

45
Tree	if ( dataset . isEmptyOrNull () ) { return result ; }
Code	if ( dataset . isEmptyOrNull () ) { return result ; }
Distance : 3

46
Tree	if ( new Coordinates3D ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new Coordinates3D ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

47
Tree	if ( dataset . isParamList ( dataset ) ) { return result ; }
Code	if ( dataset . isParamList ( dataset ) ) { return result ; }
Distance : 5

48
Tree	if ( new isBottom ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

49
Tree	if ( dataset . contains ( dataset ) ) { return result ; }
Code	if ( dataset . contains ( dataset ) ) { return result ; }
Distance : 5

50
Tree	if ( dataset . isDeclaredSloppy ( dataset ) ) { return result ; }
Code	if ( dataset . isDeclaredSloppy ( dataset ) ) { return result ; }
Distance : 5

51
Tree	if ( isBottom () ) { return result ; }
Code	if ( isBottom () ) { return result ; }
Distance : 3

52
Tree	if ( dataset . getPrinter ( dataset ) ) { return result ; }
Code	if ( dataset . getPrinter ( dataset ) ) { return result ; }
Distance : 5

53
Tree	if ( dataset ( dataset ) ) { return result ; }
Code	if ( dataset ( dataset ) ) { return result ; }
Distance : 3

54
Tree	if ( dataset . isEmptyOrNull ( dataset ) ) { return result ; }
Code	if ( dataset . isEmptyOrNull ( dataset ) ) { return result ; }
Distance : 5

55
Tree	if ( dataset . equal ( dataset ) ) { return result ; }
Code	if ( dataset . equal ( dataset ) ) { return result ; }
Distance : 5

56
Tree	if ( indexOf ( dataset ) ) { return result ; }
Code	if ( indexOf ( dataset ) ) { return result ; }
Distance : 4

57
Tree	if ( dataset . != ( dataset ) ) { return result ; }
Code	if ( dataset . != ( dataset ) ) { return result ; }
Distance : 5

58
Tree	if ( dataset . isEmptyType () ) { return result ; }
Code	if ( dataset . isEmptyType () ) { return result ; }
Distance : 3

59
Tree	if ( dataset . isBottom ( dataset ) ) { return result ; }
Code	if ( dataset . isBottom ( dataset ) ) { return result ; }
Distance : 5

60
Tree	if ( dataset . isEmpty ( dataset ) ) { return result ; }
Code	if ( dataset . isEmpty ( dataset ) ) { return result ; }
Distance : 5

61
Tree	if ( dataset . isNaN ( dataset ) ) { return result ; }
Code	if ( dataset . isNaN ( dataset ) ) { return result ; }
Distance : 5

62
Tree	if ( dataset . getParent ( dataset ) ) { return result ; }
Code	if ( dataset . getParent ( dataset ) ) { return result ; }
Distance : 5

63
Tree	if ( dataset . indexOf () ) { return result ; }
Code	if ( dataset . indexOf () ) { return result ; }
Distance : 3

64
Tree	if ( isBottom ( dataset ) ) { return result ; }
Code	if ( isBottom ( dataset ) ) { return result ; }
Distance : 4

65
Tree	if ( dataset . indexOf ( dataset ) ) { return result ; }
Code	if ( dataset . indexOf ( dataset ) ) { return result ; }
Distance : 5

66
Tree	if ( dataset . regionMatches ( dataset ) ) { return result ; }
Code	if ( dataset . regionMatches ( dataset ) ) { return result ; }
Distance : 5

67
Tree	if ( dataset . equal () ) { return result ; }
Code	if ( dataset . equal () ) { return result ; }
Distance : 3

68
Tree	if ( dataset . findStackedRangeBounds ( dataset ) ) { return result ; }
Code	if ( dataset . findStackedRangeBounds ( dataset ) ) { return result ; }
Distance : 5

69
Tree	if ( dataset . codePointCount ( dataset ) ) { return result ; }
Code	if ( dataset . codePointCount ( dataset ) ) { return result ; }
Distance : 5

70
Tree	if ( dataset . isEnhancedFor ( dataset ) ) { return result ; }
Code	if ( dataset . isEnhancedFor ( dataset ) ) { return result ; }
Distance : 5

71
Tree	if ( firstNonBottom ( dataset ) ) { return result ; }
Code	if ( firstNonBottom ( dataset ) ) { return result ; }
Distance : 4

72
Tree	if ( isEmpty ( dataset ) ) { return result ; }
Code	if ( isEmpty ( dataset ) ) { return result ; }
Distance : 4

73
Tree	if ( dataset . dataset ( dataset ) ) { return result ; }
Code	if ( dataset . dataset ( dataset ) ) { return result ; }
Distance : 5

74
Tree	if ( dataset . != () ) { return result ; }
Code	if ( dataset . != () ) { return result ; }
Distance : 3

75
Tree	if ( dataset . hotspot ( dataset ) ) { return result ; }
Code	if ( dataset . hotspot ( dataset ) ) { return result ; }
Distance : 5

76
Tree	if ( dataset . isAssignableFrom ( dataset ) ) { return result ; }
Code	if ( dataset . isAssignableFrom ( dataset ) ) { return result ; }
Distance : 5

77
Tree	if ( dataset . hasSlot ( dataset ) ) { return result ; }
Code	if ( dataset . hasSlot ( dataset ) ) { return result ; }
Distance : 5

78
Tree	if ( dataset . isBottom () ) { return result ; }
Code	if ( dataset . isBottom () ) { return result ; }
Distance : 3

79
Tree	if ( dataset . isEmpty () ) { return result ; }
Code	if ( dataset . isEmpty () ) { return result ; }
Distance : 3

80
Tree	if ( dataset . isPointInRect ( dataset ) ) { return result ; }
Code	if ( dataset . isPointInRect ( dataset ) ) { return result ; }
Distance : 5

81
Tree	if ( dataset . isPrimitive ( dataset ) ) { return result ; }
Code	if ( dataset . isPrimitive ( dataset ) ) { return result ; }
Distance : 5

82
Tree	if ( new indexOf ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new indexOf ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

83
Tree	if ( dataset . isNaN () ) { return result ; }
Code	if ( dataset . isNaN () ) { return result ; }
Distance : 3

84
Tree	if ( isEmptyType ( dataset ) ) { return result ; }
Code	if ( isEmptyType ( dataset ) ) { return result ; }
Distance : 4

85
Tree	if ( dataset . isForIn ( dataset ) ) { return result ; }
Code	if ( dataset . isForIn ( dataset ) ) { return result ; }
Distance : 5

86
Tree	if ( dataset . abs ( dataset ) ) { return result ; }
Code	if ( dataset . abs ( dataset ) ) { return result ; }
Distance : 5

87
Tree	if ( dataset . isNoType ( dataset ) ) { return result ; }
Code	if ( dataset . isNoType ( dataset ) ) { return result ; }
Distance : 5

88
Tree	if ( dataset != null ) { return result . hashCode ( dataset ) ; }
Code	if ( dataset != null ) { return result . hashCode ( dataset ) ; }
Distance : 6

89
Tree	if ( dataset . getParent () ) { return result ; }
Code	if ( dataset . getParent () ) { return result ; }
Distance : 3

90
Tree	if ( dataset . x1 ( dataset ) ) { return result ; }
Code	if ( dataset . x1 ( dataset ) ) { return result ; }
Distance : 5

91
Tree	if ( dataset . equalsIgnoreCase ( dataset ) ) { return result ; }
Code	if ( dataset . equalsIgnoreCase ( dataset ) ) { return result ; }
Distance : 5

92
Tree	if ( dataset . hasOwnSlot ( dataset ) ) { return result ; }
Code	if ( dataset . hasOwnSlot ( dataset ) ) { return result ; }
Distance : 5

93
Tree	if ( dataset . isVanillaFor ( dataset ) ) { return result ; }
Code	if ( dataset . isVanillaFor ( dataset ) ) { return result ; }
Distance : 5

94
Tree	if ( new RealMatrixImpl ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new RealMatrixImpl ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

95
Tree	if ( dataset . toUpperCase ( dataset ) ) { return result ; }
Code	if ( dataset . toUpperCase ( dataset ) ) { return result ; }
Distance : 5

96
Tree	if ( dataset . startsWith ( dataset ) ) { return result ; }
Code	if ( dataset . startsWith ( dataset ) ) { return result ; }
Distance : 5

97
Tree	if ( new indexOf ( dataset ) . toFormatter ( result ) ) { return result ; }
Code	if ( new indexOf ( dataset ) . toFormatter ( result ) ) { return result ; }
Distance : 9

98
Tree	if ( dataset . isLoose ( dataset ) ) { return result ; }
Code	if ( dataset . isLoose ( dataset ) ) { return result ; }
Distance : 5

99
Tree	if ( dataset . fraction ( dataset ) ) { return result ; }
Code	if ( dataset . fraction ( dataset ) ) { return result ; }
Distance : 5

100
Tree	if ( new Coordinates3D ( dataset ) . that ( result ) ) { return result ; }
Code	if ( new Coordinates3D ( dataset ) . that ( result ) ) { return result ; }
Distance : 9

101
Tree	if ( dataset . cumulativeProbability ( dataset ) ) { return result ; }
Code	if ( dataset . cumulativeProbability ( dataset ) ) { return result ; }
Distance : 5

102
Tree	if ( dataset . isName ( dataset ) ) { return result ; }
Code	if ( dataset . isName ( dataset ) ) { return result ; }
Distance : 5

103
Tree	if ( dataset . quote ( dataset ) ) { return result ; }
Code	if ( dataset . quote ( dataset ) ) { return result ; }
Distance : 5

104
Tree	if ( dataset . isVoid ( dataset ) ) { return result ; }
Code	if ( dataset . isVoid ( dataset ) ) { return result ; }
Distance : 5

105
Tree	if ( dataset != null ) { return result . getFirstChild ( dataset ) ; }
Code	if ( dataset != null ) { return result . getFirstChild ( dataset ) ; }
Distance : 6

106
Tree	if ( dataset . doubleToLongBits ( dataset ) ) { return result ; }
Code	if ( dataset . doubleToLongBits ( dataset ) ) { return result ; }
Distance : 5

107
Tree	if ( dataset . nullNotPermitted ( dataset ) ) { return result ; }
Code	if ( dataset . nullNotPermitted ( dataset ) ) { return result ; }
Distance : 5

108
Tree	if ( dataset . toFormatter ( dataset ) ) { return result ; }
Code	if ( dataset . toFormatter ( dataset ) ) { return result ; }
Distance : 5

109
Tree	if ( toFormatter ( dataset ) ) { return result ; }
Code	if ( toFormatter ( dataset ) ) { return result ; }
Distance : 4

110
Tree	if ( dataset . getDataset () ) { return result ; }
Code	if ( dataset . getDataset () ) { return result ; }
Distance : 3

111
Tree	if ( dataset . canBeCalled ( dataset ) ) { return result ; }
Code	if ( dataset . canBeCalled ( dataset ) ) { return result ; }
Distance : 5

112
Tree	if ( isEmpty () ) { return result ; }
Code	if ( isEmpty () ) { return result ; }
Distance : 3

113
Tree	if ( new NullArgumentException ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new NullArgumentException ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

114
Tree	if ( dataset . isEmptyType ( dataset ) ) { return result ; }
Code	if ( dataset . isEmptyType ( dataset ) ) { return result ; }
Distance : 5

115
Tree	if ( dataset . remove ( dataset ) ) { return result ; }
Code	if ( dataset . remove ( dataset ) ) { return result ; }
Distance : 5

116
Tree	if ( dataset . getPackageName ( dataset ) ) { return result ; }
Code	if ( dataset . getPackageName ( dataset ) ) { return result ; }
Distance : 5

117
Tree	if ( isPowerOf2 ( dataset ) ) { return result ; }
Code	if ( isPowerOf2 ( dataset ) ) { return result ; }
Distance : 4

118
Tree	if ( dataset . booleanValue () ) { return result ; }
Code	if ( dataset . booleanValue () ) { return result ; }
Distance : 3

119
Tree	if ( dataset . isSubtype ( dataset ) ) { return result ; }
Code	if ( dataset . isSubtype ( dataset ) ) { return result ; }
Distance : 5

120
Tree	if ( dataset . isShorthandProperty ( dataset ) ) { return result ; }
Code	if ( dataset . isShorthandProperty ( dataset ) ) { return result ; }
Distance : 5

121
Tree	if ( getDataset ( dataset ) ) { return result ; }
Code	if ( getDataset ( dataset ) ) { return result ; }
Distance : 4

122
Tree	if ( dataset . isGenericObjectType ( dataset ) ) { return result ; }
Code	if ( dataset . isGenericObjectType ( dataset ) ) { return result ; }
Distance : 5

123
Tree	if ( new isBottom ( dataset ) . isBottom ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . isBottom ( result ) ) { return result ; }
Distance : 9

124
Tree	if ( dataset . isReturn ( dataset ) ) { return result ; }
Code	if ( dataset . isReturn ( dataset ) ) { return result ; }
Distance : 5

125
Tree	if ( dataset . isTrue ( dataset ) ) { return result ; }
Code	if ( dataset . isTrue ( dataset ) ) { return result ; }
Distance : 5

126
Tree	if ( containsNow ( dataset ) ) { return result ; }
Code	if ( containsNow ( dataset ) ) { return result ; }
Distance : 4

127
Tree	if ( dataset . append ( dataset ) ) { return result ; }
Code	if ( dataset . append ( dataset ) ) { return result ; }
Distance : 5

128
Tree	if ( dataset . isPowerOfTwo ( dataset ) ) { return result ; }
Code	if ( dataset . isPowerOfTwo ( dataset ) ) { return result ; }
Distance : 5

129
Tree	if ( firstNonBottom () ) { return result ; }
Code	if ( firstNonBottom () ) { return result ; }
Distance : 3

130
Tree	if ( isAmbiguousObject ( dataset ) ) { return result ; }
Code	if ( isAmbiguousObject ( dataset ) ) { return result ; }
Distance : 4

131
Tree	if ( dataset . doIntercept ( dataset ) ) { return result ; }
Code	if ( dataset . doIntercept ( dataset ) ) { return result ; }
Distance : 5

132
Tree	if ( new Coordinates3D ( dataset ) . getSolver ( result ) ) { return result ; }
Code	if ( new Coordinates3D ( dataset ) . getSolver ( result ) ) { return result ; }
Distance : 9

133
Tree	if ( dataset . divide ( dataset ) ) { return result ; }
Code	if ( dataset . divide ( dataset ) ) { return result ; }
Distance : 5

134
Tree	if ( new isBottom ( dataset ) . returnFalse ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . returnFalse ( result ) ) { return result ; }
Distance : 9

135
Tree	if ( dataset . entities ( dataset ) ) { return result ; }
Code	if ( dataset . entities ( dataset ) ) { return result ; }
Distance : 5

136
Tree	if ( dataset . isPrimitive () ) { return result ; }
Code	if ( dataset . isPrimitive () ) { return result ; }
Distance : 3

137
Tree	if ( new ObjectUtils ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new ObjectUtils ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

138
Tree	if ( dataset . IEEEremainder ( dataset ) ) { return result ; }
Code	if ( dataset . IEEEremainder ( dataset ) ) { return result ; }
Distance : 5

139
Tree	if ( dataset . isIdentifier ( dataset ) ) { return result ; }
Code	if ( dataset . isIdentifier ( dataset ) ) { return result ; }
Distance : 5

140
Tree	if ( dataset . DatasetUtils ( dataset ) ) { return result ; }
Code	if ( dataset . DatasetUtils ( dataset ) ) { return result ; }
Distance : 5

141
Tree	if ( types ( dataset ) ) { return result ; }
Code	if ( types ( dataset ) ) { return result ; }
Distance : 4

142
Tree	if ( dataset . createRealMatrix ( dataset ) ) { return result ; }
Code	if ( dataset . createRealMatrix ( dataset ) ) { return result ; }
Distance : 5

143
Tree	if ( dataset . isSubtypeWithoutStructuralTyping ( dataset ) ) { return result ; }
Code	if ( dataset . isSubtypeWithoutStructuralTyping ( dataset ) ) { return result ; }
Distance : 5

144
Tree	if ( dataset . image ( dataset ) ) { return result ; }
Code	if ( dataset . image ( dataset ) ) { return result ; }
Distance : 5

145
Tree	if ( dataset . isForOf ( dataset ) ) { return result ; }
Code	if ( dataset . isForOf ( dataset ) ) { return result ; }
Distance : 5

146
Tree	if ( dataset . isDeclared ( dataset ) ) { return result ; }
Code	if ( dataset . isDeclared ( dataset ) ) { return result ; }
Distance : 5

147
Tree	if ( findStackedRangeBounds ( dataset ) ) { return result ; }
Code	if ( findStackedRangeBounds ( dataset ) ) { return result ; }
Distance : 4

148
Tree	if ( dataset . longBitsToDouble ( dataset ) ) { return result ; }
Code	if ( dataset . longBitsToDouble ( dataset ) ) { return result ; }
Distance : 5

149
Tree	if ( isNoType ( dataset ) ) { return result ; }
Code	if ( isNoType ( dataset ) ) { return result ; }
Distance : 4

150
Tree	if ( new x1 ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new x1 ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

151
Tree	if ( dataset . isHoistScope ( dataset ) ) { return result ; }
Code	if ( dataset . isHoistScope ( dataset ) ) { return result ; }
Distance : 5

152
Tree	if ( new isBottom ( dataset ) . toFormatter ( result ) ) { return result ; }
Code	if ( new isBottom ( dataset ) . toFormatter ( result ) ) { return result ; }
Distance : 9

153
Tree	if ( dataset . isPointInRect () ) { return result ; }
Code	if ( dataset . isPointInRect () ) { return result ; }
Distance : 3

154
Tree	if ( dataset . isImport ( dataset ) ) { return result ; }
Code	if ( dataset . isImport ( dataset ) ) { return result ; }
Distance : 5

155
Tree	if ( canCollapse ( dataset ) ) { return result ; }
Code	if ( canCollapse ( dataset ) ) { return result ; }
Distance : 4

156
Tree	if ( dataset . isDeclaredInFunctionBlockOrParameter ( dataset ) ) { return result ; }
Code	if ( dataset . isDeclaredInFunctionBlockOrParameter ( dataset ) ) { return result ; }
Distance : 5

157
Tree	if ( dataset . isEnhancedFor () ) { return result ; }
Code	if ( dataset . isEnhancedFor () ) { return result ; }
Distance : 3

158
Tree	if ( dataset . toClass ( dataset ) ) { return result ; }
Code	if ( dataset . toClass ( dataset ) ) { return result ; }
Distance : 5

159
Tree	if ( new indexOf ( dataset ) . that ( result ) ) { return result ; }
Code	if ( new indexOf ( dataset ) . that ( result ) ) { return result ; }
Distance : 9

160
Tree	if ( dataset . INFINITE_WINDOW ( dataset ) ) { return result ; }
Code	if ( dataset . INFINITE_WINDOW ( dataset ) ) { return result ; }
Distance : 5

161
Tree	if ( dataset . lastIndexOf ( dataset ) ) { return result ; }
Code	if ( dataset . lastIndexOf ( dataset ) ) { return result ; }
Distance : 5

162
Tree	if ( dataset . dataset () ) { return result ; }
Code	if ( dataset . dataset () ) { return result ; }
Distance : 3

163
Tree	if ( dataset . sizeEndText ( dataset ) ) { return result ; }
Code	if ( dataset . sizeEndText ( dataset ) ) { return result ; }
Distance : 5

164
Tree	if ( dataset . hotspot () ) { return result ; }
Code	if ( dataset . hotspot () ) { return result ; }
Distance : 3

165
Tree	if ( dataset != null ) { return result . getParent ( dataset ) ; }
Code	if ( dataset != null ) { return result . getParent ( dataset ) ; }
Distance : 6

166
Tree	if ( dataset . charAt ( dataset ) ) { return result ; }
Code	if ( dataset . charAt ( dataset ) ) { return result ; }
Distance : 5

167
Tree	if ( dataset . chiSquareTest ( dataset ) ) { return result ; }
Code	if ( dataset . chiSquareTest ( dataset ) ) { return result ; }
Distance : 5

168
Tree	if ( dataset . primitiveTypeOf ( dataset ) ) { return result ; }
Code	if ( dataset . primitiveTypeOf ( dataset ) ) { return result ; }
Distance : 5

169
Tree	if ( isEmptyType () ) { return result ; }
Code	if ( isEmptyType () ) { return result ; }
Distance : 3

170
Tree	if ( dataset . isAssignableFrom () ) { return result ; }
Code	if ( dataset . isAssignableFrom () ) { return result ; }
Distance : 3

171
Tree	if ( dataset . isClassy ( dataset ) ) { return result ; }
Code	if ( dataset . isClassy ( dataset ) ) { return result ; }
Distance : 5

172
Tree	if ( dataset . hasSlot () ) { return result ; }
Code	if ( dataset . hasSlot () ) { return result ; }
Distance : 3

173
Tree	if ( dataset . hasChildren ( dataset ) ) { return result ; }
Code	if ( dataset . hasChildren ( dataset ) ) { return result ; }
Distance : 5

174
Tree	if ( dataset . createsScope ( dataset ) ) { return result ; }
Code	if ( dataset . createsScope ( dataset ) ) { return result ; }
Distance : 5

175
Tree	if ( new indexOf ( dataset ) . getSolver ( result ) ) { return result ; }
Code	if ( new indexOf ( dataset ) . getSolver ( result ) ) { return result ; }
Distance : 9

176
Tree	if ( dataset . isModuleScope ( dataset ) ) { return result ; }
Code	if ( dataset . isModuleScope ( dataset ) ) { return result ; }
Distance : 5

177
Tree	if ( dataset . isBlock () ) { return result ; }
Code	if ( dataset . isBlock () ) { return result ; }
Distance : 3

178
Tree	if ( dataset . parseWithIOException () ) { return result ; }
Code	if ( dataset . parseWithIOException () ) { return result ; }
Distance : 3

179
Tree	if ( isInterface ( dataset ) ) { return result ; }
Code	if ( isInterface ( dataset ) ) { return result ; }
Distance : 4

180
Tree	if ( dataset . getMethod () ) { return result ; }
Code	if ( dataset . getMethod () ) { return result ; }
Distance : 3

181
Tree	if ( dataset . ch ( dataset ) ) { return result ; }
Code	if ( dataset . ch ( dataset ) ) { return result ; }
Distance : 5

182
Tree	if ( dataset != null ) { return result . getInstance ( dataset ) ; }
Code	if ( dataset != null ) { return result . getInstance ( dataset ) ; }
Distance : 6

183
Tree	if ( dataset . isInterface () ) { return result ; }
Code	if ( dataset . isInterface () ) { return result ; }
Distance : 3

184
Tree	if ( dataset . isNonSingular () ) { return result ; }
Code	if ( dataset . isNonSingular () ) { return result ; }
Distance : 3

185
Tree	if ( dataset . getNormal ( dataset ) ) { return result ; }
Code	if ( dataset . getNormal ( dataset ) ) { return result ; }
Distance : 5

186
Tree	if ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ) { return result ; }
Code	if ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ) { return result ; }
Distance : 4

187
Tree	if ( dataset . setFunction ( dataset ) ) { return result ; }
Code	if ( dataset . setFunction ( dataset ) ) { return result ; }
Distance : 5

188
Tree	if ( dataset . LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ) { return result ; }
Code	if ( dataset . LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT ( dataset ) ) { return result ; }
Distance : 5

189
Tree	if ( new RankDeficientMatrixException ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new RankDeficientMatrixException ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

190
Tree	if ( new LUDecompositionImpl ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new LUDecompositionImpl ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

191
Tree	if ( new indexOf ( dataset ) . hasSize ( result ) ) { return result ; }
Code	if ( new indexOf ( dataset ) . hasSize ( result ) ) { return result ; }
Distance : 9

192
Tree	if ( new MathInternalError ( dataset ) . indexOf ( result ) ) { return result ; }
Code	if ( new MathInternalError ( dataset ) . indexOf ( result ) ) { return result ; }
Distance : 9

193
Tree	if ( dataset != null ) { return result . isEnhancedFor ( dataset ) ; }
Code	if ( dataset != null ) { return result . isEnhancedFor ( dataset ) ; }
Distance : 6

194
Tree	if ( getParent () ) { return result ; }
Code	if ( getParent () ) { return result ; }
Distance : 3

195
Tree	if ( StringUtils.EMPTY () ) { return result ; }
Code	if ( StringUtils.EMPTY () ) { return result ; }
Distance : 3

196
Tree	if ( LocalizedFormats.FRACTION () ) { return result ; }
Code	if ( LocalizedFormats.FRACTION () ) { return result ; }
Distance : 3

197
Tree	if ( NonSquareMatrixException () ) { return result ; }
Code	if ( NonSquareMatrixException () ) { return result ; }
Distance : 3

198
Tree	if ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR () ) { return result ; }
Code	if ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR () ) { return result ; }
Distance : 3

199
Tree	if ( SingularMatrixException () ) { return result ; }
Code	if ( SingularMatrixException () ) { return result ; }
Distance : 3

========================================================================


========================================================================
Example Number: 10
Parent Code is: 
name.globalSets == NUMBER_CONSTANT && name.localSets == NUMBER_CONSTANT && name.aliasingGets > NUMBER_CONSTANT
-------------------------------------------------------------------------------
Child code is: 
! name.inExterns && name.globalSets == NUMBER_CONSTANT && name.localSets == NUMBER_CONSTANT && name.aliasingGets > NUMBER_CONSTANT
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (27 (27 (40{val=name.globalSets}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (40{val=name.localSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.aliasingGets}) (231{val=>}) (34{val=NUMBER_CONSTANT}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (27 (27 (38 (207{val=!}) (40{val=name.inExterns})) (249{val=&&}) (27 (40{val=name.globalSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.localSets}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (249{val=&&}) (27 (40{val=name.aliasingGets}) (231{val=>}) (34{val=NUMBER_CONSTANT}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/130/parent/src_com_google_javascript_jscomp_CollapseProperties.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	! name.localSets && name.localSets == null && super
Code	! name.localSets && name.localSets == null && super
Distance : 9

1
Tree	! name.localSets && name.localSets == null && getReferencedType
Code	! name.localSets && name.localSets == null && getReferencedType
Distance : 9

2
Tree	! name.localSets && name.localSets == null && CompilerOptions.LanguageMode.NO_TRANSPILE
Code	! name.localSets && name.localSets == null && CompilerOptions.LanguageMode.NO_TRANSPILE
Distance : 9

3
Tree	! name.localSets && name.localSets == null && hasChildren
Code	! name.localSets && name.localSets == null && hasChildren
Distance : 9

4
Tree	! name.localSets && name.localSets == null && standardDeviation.length
Code	! name.localSets && name.localSets == null && standardDeviation.length
Distance : 9

5
Tree	! name.localSets && name.localSets == null && includesGlobals
Code	! name.localSets && name.localSets == null && includesGlobals
Distance : 9

6
Tree	! name.localSets && name.localSets == null && startPoint.length
Code	! name.localSets && name.localSets == null && startPoint.length
Distance : 9

7
Tree	! name.localSets && name.localSets == null && startConfiguration.length
Code	! name.localSets && name.localSets == null && startConfiguration.length
Distance : 9

8
Tree	! name.localSets && name.localSets == null && getExceptionTypes
Code	! name.localSets && name.localSets == null && getExceptionTypes
Distance : 9

9
Tree	! name.localSets && name.localSets == null && MockitoSpy
Code	! name.localSets && name.localSets == null && MockitoSpy
Distance : 9

10
Tree	! name.localSets && name.localSets == null && isTheTruthyType
Code	! name.localSets && name.localSets == null && isTheTruthyType
Distance : 9

11
Tree	! name.localSets && name.localSets == null && Calendar.SUNDAY
Code	! name.localSets && name.localSets == null && Calendar.SUNDAY
Distance : 9

12
Tree	! name.localSets && name.localSets == null && qNameRoot
Code	! name.localSets && name.localSets == null && qNameRoot
Distance : 9

13
Tree	! name.globalSets && name.localSets == null && magnitude
Code	! name.globalSets && name.localSets == null && magnitude
Distance : 8

14
Tree	! name.localSets && name.localSets == null && BooleanLiteralSet.EMPTY
Code	! name.localSets && name.localSets == null && BooleanLiteralSet.EMPTY
Distance : 9

15
Tree	! name.localSets && name.localSets == null && argumentsMatch
Code	! name.localSets && name.localSets == null && argumentsMatch
Distance : 9

16
Tree	! name.localSets && name.localSets == null && isKnown
Code	! name.localSets && name.localSets == null && isKnown
Distance : 9

17
Tree	! name.localSets && name.localSets == null && isThisProp
Code	! name.localSets && name.localSets == null && isThisProp
Distance : 9

18
Tree	! name.localSets && name.localSets == null && options.propertyRenaming
Code	! name.localSets && name.localSets == null && options.propertyRenaming
Distance : 9

19
Tree	! name.localSets && name.localSets == null && FeatureSet.ES3
Code	! name.localSets && name.localSets == null && FeatureSet.ES3
Distance : 9

20
Tree	! name.localSets && name.localSets == null && isNamedType
Code	! name.localSets && name.localSets == null && isNamedType
Distance : 9

21
Tree	! name.localSets && name.localSets == null && isSupported
Code	! name.localSets && name.localSets == null && isSupported
Distance : 9

22
Tree	! name.localSets && name.localSets == null && CharUtils.NUL
Code	! name.localSets && name.localSets == null && CharUtils.NUL
Distance : 9

23
Tree	! name.localSets && name.localSets == null && getDateTimeZone
Code	! name.localSets && name.localSets == null && getDateTimeZone
Distance : 9

24
Tree	! name.localSets && name.localSets == null && getParent
Code	! name.localSets && name.localSets == null && getParent
Distance : 9

25
Tree	! name.localSets && name.localSets == null && restricted
Code	! name.localSets && name.localSets == null && restricted
Distance : 9

26
Tree	! name.localSets && name.localSets == null && isUnknownType
Code	! name.localSets && name.localSets == null && isUnknownType
Distance : 9

27
Tree	! name.localSets && name.localSets == null && createParseException
Code	! name.localSets && name.localSets == null && createParseException
Distance : 9

28
Tree	! name.localSets && name.localSets == null && isReferenceToRemovedVar
Code	! name.localSets && name.localSets == null && isReferenceToRemovedVar
Distance : 9

29
Tree	! name.localSets && name.localSets == null && isConstant
Code	! name.localSets && name.localSets == null && isConstant
Distance : 9

30
Tree	! name.globalSets && name.localSets == null && while
Code	! name.globalSets && name.localSets == null && while
Distance : 8

31
Tree	! name.localSets && name.localSets == null && getPropType
Code	! name.localSets && name.localSets == null && getPropType
Distance : 9

32
Tree	! name.localSets && name.localSets == null && isTopFunction
Code	! name.localSets && name.localSets == null && isTopFunction
Distance : 9

33
Tree	! name.localSets && name.localSets == null && topInterface
Code	! name.localSets && name.localSets == null && topInterface
Distance : 9

34
Tree	! name.localSets && name.localSets == null && zval.length
Code	! name.localSets && name.localSets == null && zval.length
Distance : 9

35
Tree	! name.localSets && name.localSets == null && containsArray
Code	! name.localSets && name.localSets == null && containsArray
Distance : 9

36
Tree	! name.localSets && name.localSets == null && isTop
Code	! name.localSets && name.localSets == null && isTop
Distance : 9

37
Tree	! name.localSets && name.localSets == break; && super
Code	! name.localSets && name.localSets == break; && super
Distance : 9

38
Tree	! name.localSets && name.localSets == null && SourceMap.LocationMapping
Code	! name.localSets && name.localSets == null && SourceMap.LocationMapping
Distance : 9

39
Tree	! name.localSets && name.localSets == null && Year.MAXIMUM_YEAR
Code	! name.localSets && name.localSets == null && Year.MAXIMUM_YEAR
Distance : 9

40
Tree	! name.localSets && name.localSets == null && isNullable
Code	! name.localSets && name.localSets == null && isNullable
Distance : 9

41
Tree	! name.localSets && name.localSets == null && TypeInferenceMode.DISABLED
Code	! name.localSets && name.localSets == null && TypeInferenceMode.DISABLED
Distance : 9

42
Tree	! name.localSets && name.localSets == null && fval.length
Code	! name.localSets && name.localSets == null && fval.length
Distance : 9

43
Tree	! name.localSets && name.localSets == null && enumLiteralHasKey
Code	! name.localSets && name.localSets == null && enumLiteralHasKey
Distance : 9

44
Tree	! name.localSets && name.localSets == null && isReturnTypeInferred
Code	! name.localSets && name.localSets == null && isReturnTypeInferred
Distance : 9

45
Tree	! name.localSets && name.localSets == null && contains
Code	! name.localSets && name.localSets == null && contains
Distance : 9

46
Tree	! name.localSets && name.localSets == null && lhsClass
Code	! name.localSets && name.localSets == null && lhsClass
Distance : 9

47
Tree	! name.localSets && name.localSets == null && superClassQName
Code	! name.localSets && name.localSets == null && superClassQName
Distance : 9

48
Tree	! name.localSets && name.localSets == null && isStrict
Code	! name.localSets && name.localSets == null && isStrict
Distance : 9

49
Tree	! name.localSets && name.localSets == null && SerializableBoundedType
Code	! name.localSets && name.localSets == null && SerializableBoundedType
Distance : 9

50
Tree	! name.localSets && name.localSets == null && atLeastOnceMode
Code	! name.localSets && name.localSets == null && atLeastOnceMode
Distance : 9

51
Tree	! name.localSets && name.localSets == null && SIZE_THRESHOLD
Code	! name.localSets && name.localSets == null && SIZE_THRESHOLD
Distance : 9

52
Tree	! name.localSets && name.localSets == null && isBuiltinObject
Code	! name.localSets && name.localSets == null && isBuiltinObject
Distance : 9

53
Tree	! name.localSets && name.localSets == null && peek
Code	! name.localSets && name.localSets == null && peek
Distance : 9

54
Tree	! name.localSets && name.localSets == null && interceptors.target
Code	! name.localSets && name.localSets == null && interceptors.target
Distance : 9

55
Tree	! name.globalSets && name.localSets == null && shouldDisambiguateProperties
Code	! name.globalSets && name.localSets == null && shouldDisambiguateProperties
Distance : 8

56
Tree	! name.globalSets && name.localSets == null && currentScript.defaultExportRhs
Code	! name.globalSets && name.localSets == null && currentScript.defaultExportRhs
Distance : 8

57
Tree	! name.localSets && name.localSets == null && enableSubstitutionInVariables
Code	! name.localSets && name.localSets == null && enableSubstitutionInVariables
Distance : 9

58
Tree	! name.localSets && name.localSets == null && InitializationError
Code	! name.localSets && name.localSets == null && InitializationError
Distance : 9

59
Tree	! name.localSets && name.localSets == null && isCallTo
Code	! name.localSets && name.localSets == null && isCallTo
Distance : 9

60
Tree	! name.localSets && name.localSets == null && stubPassedToVerify
Code	! name.localSets && name.localSets == null && stubPassedToVerify
Distance : 9

61
Tree	! name.localSets && name.localSets == null && RankDeficientMatrixException
Code	! name.localSets && name.localSets == null && RankDeficientMatrixException
Distance : 9

62
Tree	! name.localSets && name.localSets == null && isDeclaredSloppy
Code	! name.localSets && name.localSets == null && isDeclaredSloppy
Distance : 9

63
Tree	! name.localSets && name.localSets == null && getSearchTree
Code	! name.localSets && name.localSets == null && getSearchTree
Distance : 9

64
Tree	! name.localSets && name.localSets == null && ^=
Code	! name.localSets && name.localSets == null && ^=
Distance : 9

65
Tree	! name.localSets && name.localSets == null && short
Code	! name.localSets && name.localSets == null && short
Distance : 9

66
Tree	! name.localSets && name.localSets == null && deepEquals
Code	! name.localSets && name.localSets == null && deepEquals
Distance : 9

67
Tree	! name.localSets && name.localSets == null && mask
Code	! name.localSets && name.localSets == null && mask
Distance : 9

68
Tree	! name.localSets && name.localSets == null && matchLabel
Code	! name.localSets && name.localSets == null && matchLabel
Distance : 9

69
Tree	! name.localSets && name.localSets == null && Map.Entry
Code	! name.localSets && name.localSets == null && Map.Entry
Distance : 9

70
Tree	! name.localSets && name.localSets == null && isGeneratorFunction
Code	! name.localSets && name.localSets == null && isGeneratorFunction
Distance : 9

71
Tree	! name.localSets && name.localSets == null && Sin
Code	! name.localSets && name.localSets == null && Sin
Distance : 9

72
Tree	! name.localSets && name.localSets == null && canCollapse
Code	! name.localSets && name.localSets == null && canCollapse
Distance : 9

73
Tree	! name.localSets && name.localSets == super(); && super
Code	! name.localSets && name.localSets == super(); && super
Distance : 9

74
Tree	! name.localSets && name.localSets == null && isNamespaceDecl
Code	! name.localSets && name.localSets == null && isNamespaceDecl
Distance : 9

75
Tree	! name.localSets && name.localSets == null && Throwable
Code	! name.localSets && name.localSets == null && Throwable
Distance : 9

76
Tree	! name.localSets && name.localSets == null && isString
Code	! name.localSets && name.localSets == null && isString
Distance : 9

77
Tree	! name.localSets && name.localSets == null && isModule
Code	! name.localSets && name.localSets == null && isModule
Distance : 9

78
Tree	! name.localSets && name.localSets == null && isAssignTarget
Code	! name.localSets && name.localSets == null && isAssignTarget
Distance : 9

79
Tree	! name.localSets && name.localSets == null && getObjs
Code	! name.localSets && name.localSets == null && getObjs
Distance : 9

80
Tree	! name.localSets && name.localSets == null && et
Code	! name.localSets && name.localSets == null && et
Distance : 9

81
Tree	! name.localSets && name.localSets == null && MILLIS_PER_DAY
Code	! name.localSets && name.localSets == null && MILLIS_PER_DAY
Distance : 9

82
Tree	! name.localSets && name.localSets == null && getString
Code	! name.localSets && name.localSets == null && getString
Distance : 9

83
Tree	! name.localSets && name.localSets == null && isWhitelistedType
Code	! name.localSets && name.localSets == null && isWhitelistedType
Distance : 9

84
Tree	! name.localSets && name.localSets == null && getEnums
Code	! name.localSets && name.localSets == null && getEnums
Distance : 9

85
Tree	! name.localSets && name.localSets == null && Token.NEW
Code	! name.localSets && name.localSets == null && Token.NEW
Distance : 9

86
Tree	! name.localSets && name.localSets == null && double
Code	! name.localSets && name.localSets == null && double
Distance : 9

87
Tree	! name.localSets && name.localSets == null && shouldNotCreateStrictlyWithoutMocks
Code	! name.localSets && name.localSets == null && shouldNotCreateStrictlyWithoutMocks
Distance : 9

88
Tree	! name.localSets && name.localSets == null && isMockitoMock
Code	! name.localSets && name.localSets == null && isMockitoMock
Distance : 9

89
Tree	! name.localSets && name.localSets == null && @
Code	! name.localSets && name.localSets == null && @
Distance : 9

90
Tree	! name.localSets && name.localSets == null && Reach.LOCAL_ONLY
Code	! name.localSets && name.localSets == null && Reach.LOCAL_ONLY
Distance : 9

91
Tree	! name.localSets && name.localSets == null && IncrementalCheckMode.OFF
Code	! name.localSets && name.localSets == null && IncrementalCheckMode.OFF
Distance : 9

92
Tree	! name.localSets && name.localSets == null && anyList
Code	! name.localSets && name.localSets == null && anyList
Distance : 9

93
Tree	! name.localSets && name.localSets == null && char
Code	! name.localSets && name.localSets == null && char
Distance : 9

94
Tree	! name.globalSets && name.localSets == null && IncrementalCheckMode.GENERATE_IJS
Code	! name.globalSets && name.localSets == null && IncrementalCheckMode.GENERATE_IJS
Distance : 8

95
Tree	! name.localSets && name.localSets == null && getOptions
Code	! name.localSets && name.localSets == null && getOptions
Distance : 9

96
Tree	! name.localSets && name.localSets == null && getNumRepetitions
Code	! name.localSets && name.localSets == null && getNumRepetitions
Distance : 9

97
Tree	! name.localSets && name.localSets == null && suppressDupPropWarning
Code	! name.localSets && name.localSets == null && suppressDupPropWarning
Distance : 9

98
Tree	! name.localSets && name.localSets == null && current.parent.scopes
Code	! name.localSets && name.localSets == null && current.parent.scopes
Distance : 9

99
Tree	! name.localSets && name.localSets == null && explicitMode
Code	! name.localSets && name.localSets == null && explicitMode
Distance : 9

100
Tree	! name.localSets && name.localSets == null && ADDITIVE_MODE
Code	! name.localSets && name.localSets == null && ADDITIVE_MODE
Distance : 9

101
Tree	! name.localSets && name.localSets == null && if
Code	! name.localSets && name.localSets == null && if
Distance : 9

102
Tree	! name.localSets && name.localSets == null && throws
Code	! name.localSets && name.localSets == null && throws
Distance : 9

103
Tree	! name.localSets && name.localSets == null && long
Code	! name.localSets && name.localSets == null && long
Distance : 9

104
Tree	! name.localSets && name.localSets == null && isLiteralObject
Code	! name.localSets && name.localSets == null && isLiteralObject
Distance : 9

105
Tree	! name.localSets && name.localSets == null && assert
Code	! name.localSets && name.localSets == null && assert
Distance : 9

106
Tree	! name.localSets && name.localSets == null && public
Code	! name.localSets && name.localSets == null && public
Distance : 9

107
Tree	! name.localSets && name.localSets == null && continue;
Code	! name.localSets && name.localSets == null && continue;
Distance : 9

108
Tree	! name.localSets && name.localSets == null && false
Code	! name.localSets && name.localSets == null && false
Distance : 9

109
Tree	! name.localSets && name.localSets == null && getBooleanProp
Code	! name.localSets && name.localSets == null && getBooleanProp
Distance : 9

110
Tree	! name.localSets && name.localSets == null && abstract
Code	! name.localSets && name.localSets == null && abstract
Distance : 9

111
Tree	! name.localSets && name.localSets == null && hasErrors
Code	! name.localSets && name.localSets == null && hasErrors
Distance : 9

112
Tree	! name.localSets && name.localSets == null && isPointInRect
Code	! name.localSets && name.localSets == null && isPointInRect
Distance : 9

113
Tree	! name.localSets && name.localSets == null && +
Code	! name.localSets && name.localSets == null && +
Distance : 9

114
Tree	! name.localSets && name.localSets == null && *
Code	! name.localSets && name.localSets == null && *
Distance : 9

115
Tree	! name.localSets && name.localSets == null && int
Code	! name.localSets && name.localSets == null && int
Distance : 9

116
Tree	! name.localSets && name.localSets == null && getLanguageOut
Code	! name.localSets && name.localSets == null && getLanguageOut
Distance : 9

117
Tree	! name.localSets && name.localSets == continue; && super
Code	! name.localSets && name.localSets == continue; && super
Distance : 9

118
Tree	! name.localSets && name.localSets == null && class
Code	! name.localSets && name.localSets == null && class
Distance : 9

119
Tree	! name.localSets && name.localSets == null && isRead
Code	! name.localSets && name.localSets == null && isRead
Distance : 9

120
Tree	! name.localSets && name.localSets == null && TypeInferenceMode.BOTH
Code	! name.localSets && name.localSets == null && TypeInferenceMode.BOTH
Distance : 9

121
Tree	! name.localSets && name.localSets == null && isMismatchesReported
Code	! name.localSets && name.localSets == null && isMismatchesReported
Distance : 9

122
Tree	! name.localSets && name.localSets == null && break;
Code	! name.localSets && name.localSets == null && break;
Distance : 9

123
Tree	! name.globalSets && name.localSets == null && float
Code	! name.globalSets && name.localSets == null && float
Distance : 8

124
Tree	! name.localSets && name.localSets == null && ?
Code	! name.localSets && name.localSets == null && ?
Distance : 9

125
Tree	! name.localSets && name.localSets == null && synchronized
Code	! name.localSets && name.localSets == null && synchronized
Distance : 9

126
Tree	! name.localSets && name.localSets == null && &&
Code	! name.localSets && name.localSets == null && &&
Distance : 9

127
Tree	! name.localSets && name.localSets == null && extends
Code	! name.localSets && name.localSets == null && extends
Distance : 9

128
Tree	! name.localSets && name.localSets == null && else
Code	! name.localSets && name.localSets == null && else
Distance : 9

129
Tree	! name.localSets && name.localSets == null && ^
Code	! name.localSets && name.localSets == null && ^
Distance : 9

130
Tree	! name.localSets && name.localSets == null && ++
Code	! name.localSets && name.localSets == null && ++
Distance : 9

131
Tree	! name.localSets && name.localSets == null && >=
Code	! name.localSets && name.localSets == null && >=
Distance : 9

132
Tree	! name.localSets && name.localSets == null && /=
Code	! name.localSets && name.localSets == null && /=
Distance : 9

133
Tree	! name.localSets && name.localSets == null && &
Code	! name.localSets && name.localSets == null && &
Distance : 9

134
Tree	! name.localSets && name.localSets == null && {}
Code	! name.localSets && name.localSets == null && {}
Distance : 9

135
Tree	! name.localSets && name.localSets == null && []
Code	! name.localSets && name.localSets == null && []
Distance : 9

136
Tree	! name.localSets && name.localSets == null && :
Code	! name.localSets && name.localSets == null && :
Distance : 9

137
Tree	! name.localSets && name.localSets == null && <=
Code	! name.localSets && name.localSets == null && <=
Distance : 9

138
Tree	! name.localSets && name.localSets == null && !=
Code	! name.localSets && name.localSets == null && !=
Distance : 9

139
Tree	! name.localSets && name.localSets == null && /
Code	! name.localSets && name.localSets == null && /
Distance : 9

140
Tree	! name.localSets && name.localSets == null && instanceof
Code	! name.localSets && name.localSets == null && instanceof
Distance : 9

141
Tree	! name.localSets && name.localSets == null && %
Code	! name.localSets && name.localSets == null && %
Distance : 9

142
Tree	! name.localSets && name.localSets == null && +=
Code	! name.localSets && name.localSets == null && +=
Distance : 9

143
Tree	! name.localSets && name.localSets == null && !
Code	! name.localSets && name.localSets == null && !
Distance : 9

144
Tree	! name.localSets && name.localSets == null && private
Code	! name.localSets && name.localSets == null && private
Distance : 9

145
Tree	! name.localSets && name.localSets == null && &=
Code	! name.localSets && name.localSets == null && &=
Distance : 9

146
Tree	! name.localSets && name.localSets == null && boolean
Code	! name.localSets && name.localSets == null && boolean
Distance : 9

147
Tree	! name.localSets && name.localSets == null && case
Code	! name.localSets && name.localSets == null && case
Distance : 9

148
Tree	! name.localSets && name.localSets == null && stubbingLookupListener
Code	! name.localSets && name.localSets == null && stubbingLookupListener
Distance : 9

149
Tree	! name.localSets && name.localSets == null && AbstractScope
Code	! name.localSets && name.localSets == null && AbstractScope
Distance : 9

150
Tree	! name.localSets && name.localSets == null && *=
Code	! name.localSets && name.localSets == null && *=
Distance : 9

151
Tree	! name.localSets && name.localSets == null && default:
Code	! name.localSets && name.localSets == null && default:
Distance : 9

152
Tree	! name.localSets && name.localSets == null && hasSameMethod
Code	! name.localSets && name.localSets == null && hasSameMethod
Distance : 9

153
Tree	! name.localSets && name.localSets == null && <>
Code	! name.localSets && name.localSets == null && <>
Distance : 9

154
Tree	! name.localSets && name.localSets == null && JsdocUtil
Code	! name.localSets && name.localSets == null && JsdocUtil
Distance : 9

155
Tree	! name.localSets && name.localSets == null && LanguageMode.TYPESCRIPT
Code	! name.localSets && name.localSets == null && LanguageMode.TYPESCRIPT
Distance : 9

156
Tree	! name.localSets && name.localSets == null && MockitoMock
Code	! name.localSets && name.localSets == null && MockitoMock
Distance : 9

157
Tree	! name.localSets && name.localSets == return; && super
Code	! name.localSets && name.localSets == return; && super
Distance : 9

158
Tree	! name.localSets && name.localSets == null && orderingContext
Code	! name.localSets && name.localSets == null && orderingContext
Distance : 9

159
Tree	! name.localSets && name.localSets == null && funType
Code	! name.localSets && name.localSets == null && funType
Distance : 9

160
Tree	! name.localSets && name.localSets == null && DecompositionType.UNDECOMPOSABLE
Code	! name.localSets && name.localSets == null && DecompositionType.UNDECOMPOSABLE
Distance : 9

161
Tree	! name.localSets && name.localSets == null && Config.StrictMode.SLOPPY
Code	! name.localSets && name.localSets == null && Config.StrictMode.SLOPPY
Distance : 9

162
Tree	! name.localSets && name.localSets == null && checkNotNull
Code	! name.localSets && name.localSets == null && checkNotNull
Distance : 9

163
Tree	! name.localSets && name.localSets == null && isPropertyDeclarationOnThis
Code	! name.localSets && name.localSets == null && isPropertyDeclarationOnThis
Distance : 9

164
Tree	! name.localSets && name.localSets == null && getMask
Code	! name.localSets && name.localSets == null && getMask
Distance : 9

165
Tree	! name.localSets && name.localSets == continue; && CHAR_CONS
Code	! name.localSets && name.localSets == continue; && CHAR_CONS
Distance : 9

166
Tree	! name.localSets && name.localSets == null && getHistogram2
Code	! name.localSets && name.localSets == null && getHistogram2
Distance : 9

167
Tree	! name.localSets && name.localSets == null && PropertyRenamingPolicy.ALL_UNQUOTED
Code	! name.localSets && name.localSets == null && PropertyRenamingPolicy.ALL_UNQUOTED
Distance : 9

168
Tree	! name.localSets && name.localSets == null && LocalizedFormats.EULER_ANGLES_SINGULARITY
Code	! name.localSets && name.localSets == null && LocalizedFormats.EULER_ANGLES_SINGULARITY
Distance : 9

169
Tree	! name.localSets && name.localSets == null && isLastMatcherVarargMatcher
Code	! name.localSets && name.localSets == null && isLastMatcherVarargMatcher
Distance : 9

170
Tree	! name.localSets && name.localSets == null && getMatcher
Code	! name.localSets && name.localSets == null && getMatcher
Distance : 9

171
Tree	! name.localSets && name.localSets == null && getLanguageIn
Code	! name.localSets && name.localSets == null && getLanguageIn
Distance : 9

172
Tree	! name.localSets && name.localSets == null && shouldPreserve
Code	! name.localSets && name.localSets == null && shouldPreserve
Distance : 9

173
Tree	! name.localSets && name.localSets == null && matchesStringContext
Code	! name.localSets && name.localSets == null && matchesStringContext
Distance : 9

174
Tree	! name.localSets && name.localSets == null && getRunOTIafterNTI
Code	! name.localSets && name.localSets == null && getRunOTIafterNTI
Distance : 9

175
Tree	! name.localSets && name.localSets == null && --
Code	! name.localSets && name.localSets == null && --
Distance : 9

176
Tree	! name.localSets && name.localSets == null && static
Code	! name.localSets && name.localSets == null && static
Distance : 9

177
Tree	! name.localSets && name.localSets == null && throw
Code	! name.localSets && name.localSets == null && throw
Distance : 9

178
Tree	! name.localSets && name.localSets == null && options.skipTranspilationAndCrash
Code	! name.localSets && name.localSets == null && options.skipTranspilationAndCrash
Distance : 9

179
Tree	! name.localSets && name.localSets == null && hasSingleThrow
Code	! name.localSets && name.localSets == null && hasSingleThrow
Distance : 9

180
Tree	! name.localSets && name.localSets == null && %=
Code	! name.localSets && name.localSets == null && %=
Distance : 9

181
Tree	! name.localSets && name.localSets == null && byte
Code	! name.localSets && name.localSets == null && byte
Distance : 9

182
Tree	! name.localSets && name.localSets == null && isReturnTypeNullable
Code	! name.localSets && name.localSets == null && isReturnTypeNullable
Distance : 9

183
Tree	! name.localSets && name.localSets == null && for
Code	! name.localSets && name.localSets == null && for
Distance : 9

184
Tree	! name.localSets && name.localSets == null && getUnknownType
Code	! name.localSets && name.localSets == null && getUnknownType
Distance : 9

185
Tree	! name.localSets && name.localSets == null && try
Code	! name.localSets && name.localSets == null && try
Distance : 9

186
Tree	! name.localSets && name.localSets == null && isVanillaFunction
Code	! name.localSets && name.localSets == null && isVanillaFunction
Distance : 9

187
Tree	! name.localSets && name.localSets == null && return;
Code	! name.localSets && name.localSets == null && return;
Distance : 9

188
Tree	! name.localSets && name.localSets == null && isDotPrototype
Code	! name.localSets && name.localSets == null && isDotPrototype
Distance : 9

189
Tree	! name.localSets && name.localSets == null && return
Code	! name.localSets && name.localSets == null && return
Distance : 9

190
Tree	! name.localSets && name.localSets == null && isLoose
Code	! name.localSets && name.localSets == null && isLoose
Distance : 9

191
Tree	! name.localSets && name.localSets == null && MatchResult.NO_MATCH
Code	! name.localSets && name.localSets == null && MatchResult.NO_MATCH
Distance : 9

192
Tree	! name.localSets && name.localSets == null && delimiters.length
Code	! name.localSets && name.localSets == null && delimiters.length
Distance : 9

193
Tree	! name.localSets && name.localSets == null && anyStringNull
Code	! name.localSets && name.localSets == null && anyStringNull
Distance : 9

194
Tree	! name.localSets && name.localSets == null && options.checksOnly
Code	! name.localSets && name.localSets == null && options.checksOnly
Distance : 9

195
Tree	! name.localSets && name.localSets == null && getOutputFeatureSet
Code	! name.localSets && name.localSets == null && getOutputFeatureSet
Distance : 9

196
Tree	! name.localSets && name.localSets == null && -=
Code	! name.localSets && name.localSets == null && -=
Distance : 9

197
Tree	! name.localSets && name.localSets == null && objType.nominalType
Code	! name.localSets && name.localSets == null && objType.nominalType
Distance : 9

198
Tree	! name.localSets && name.localSets == null && CHAR_CONS
Code	! name.localSets && name.localSets == null && CHAR_CONS
Distance : 9

199
Tree	! name.localSets && name.localSets == null && TracerMode.ALL
Code	! name.localSets && name.localSets == null && TracerMode.ALL
Distance : 9

========================================================================


========================================================================
Example Number: 11
Parent Code is: 
Context rhsContext = Context.OTHER ;
-------------------------------------------------------------------------------
Child code is: 
Context rhsContext = getContextForNoInOperator ( context ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Context})) (59 (800{val=rhsContext}) (204{val==}) (40{val=Context.OTHER})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Context})) (59 (800{val=rhsContext}) (204{val==}) (32 (802{val=getContextForNoInOperator}) (214{val=(}) (800{val=context}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/123/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Context rhsContext ;
Code	Context rhsContext ;
Distance : 5

1
Tree	final Context rhsContext = Context.OTHER ; d
Code	final Context rhsContext = Context.OTHER ; d
Distance : 6

2
Tree	final Context rhsContext = Context.OTHER ; setUp
Code	final Context rhsContext = Context.OTHER ; setUp
Distance : 6

3
Tree	final Context rhsContext = Context.OTHER ; StrBuilder
Code	final Context rhsContext = Context.OTHER ; StrBuilder
Distance : 6

4
Tree	final Context rhsContext = Context.OTHER ; getParent
Code	final Context rhsContext = Context.OTHER ; getParent
Distance : 6

5
Tree	final Context rhsContext = Context.OTHER ; node
Code	final Context rhsContext = Context.OTHER ; node
Distance : 6

6
Tree	final Context rhsContext = Context.OTHER ; size
Code	final Context rhsContext = Context.OTHER ; size
Distance : 6

7
Tree	final Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT_2015
Code	final Context rhsContext = Context.OTHER ; LanguageMode.ECMASCRIPT_2015
Distance : 6

8
Tree	final Context rhsContext = Context.OTHER ; mockingProgress
Code	final Context rhsContext = Context.OTHER ; mockingProgress
Distance : 6

9
Tree	final Context rhsContext = Context.OTHER ; StringBuilder
Code	final Context rhsContext = Context.OTHER ; StringBuilder
Distance : 6

10
Tree	final Context rhsContext = Context.OTHER ; isEmpty
Code	final Context rhsContext = Context.OTHER ; isEmpty
Distance : 6

11
Tree	final Context rhsContext = Context.OTHER ; get
Code	final Context rhsContext = Context.OTHER ; get
Distance : 6

12
Tree	final Context rhsContext = Context.OTHER ; return;
Code	final Context rhsContext = Context.OTHER ; return;
Distance : 6

13
Tree	final Context rhsContext = Context.OTHER ; chrono
Code	final Context rhsContext = Context.OTHER ; chrono
Distance : 6

14
Tree	final Context rhsContext = Context.OTHER ; abs
Code	final Context rhsContext = Context.OTHER ; abs
Distance : 6

15
Tree	final Context rhsContext = Context.OTHER ; reportMatcher
Code	final Context rhsContext = Context.OTHER ; reportMatcher
Distance : 6

16
Tree	final Context rhsContext = Context.OTHER ; instant
Code	final Context rhsContext = Context.OTHER ; instant
Distance : 6

17
Tree	final Context rhsContext = Context.OTHER ; .
Code	final Context rhsContext = Context.OTHER ; .
Distance : 6

18
Tree	final Context rhsContext = Context.OTHER ; name
Code	final Context rhsContext = Context.OTHER ; name
Distance : 6

19
Tree	final Context rhsContext = Context.OTHER ; {
Code	final Context rhsContext = Context.OTHER ; {
Distance : 6

20
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; LINE_JOINER
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; LINE_JOINER
Distance : 5

21
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; invocation
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; invocation
Distance : 5

22
Tree	final Context rhsContext = Context.OTHER ; equals
Code	final Context rhsContext = Context.OTHER ; equals
Distance : 6

23
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; fireChangeEvent
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; fireChangeEvent
Distance : 5

24
Tree	final Context rhsContext = Context.OTHER ; TestUtilities
Code	final Context rhsContext = Context.OTHER ; TestUtilities
Distance : 6

25
Tree	final Context rhsContext = Context.OTHER ; simpleMethod
Code	final Context rhsContext = Context.OTHER ; simpleMethod
Distance : 6

26
Tree	final Context rhsContext = Context.OTHER ; NodeTraversal
Code	final Context rhsContext = Context.OTHER ; NodeTraversal
Distance : 6

27
Tree	final Context rhsContext = Context.OTHER ; root
Code	final Context rhsContext = Context.OTHER ; root
Distance : 6

28
Tree	final Context rhsContext = Context.OTHER ; NodeUtil
Code	final Context rhsContext = Context.OTHER ; NodeUtil
Distance : 6

29
Tree	final Context rhsContext = Context.OTHER ; Test
Code	final Context rhsContext = Context.OTHER ; Test
Distance : 6

30
Tree	final Context rhsContext = Context.OTHER ; Class
Code	final Context rhsContext = Context.OTHER ; Class
Distance : 6

31
Tree	final Context rhsContext = Context.OTHER ; source
Code	final Context rhsContext = Context.OTHER ; source
Distance : 6

32
Tree	final Context rhsContext = Context.OTHER ; toString
Code	final Context rhsContext = Context.OTHER ; toString
Distance : 6

33
Tree	final Context rhsContext = Context.OTHER ; c
Code	final Context rhsContext = Context.OTHER ; c
Distance : 6

34
Tree	final Context rhsContext = Context.OTHER ; JSType
Code	final Context rhsContext = Context.OTHER ; JSType
Distance : 6

35
Tree	final Context rhsContext = Context.OTHER ; setAcceptedLanguage
Code	final Context rhsContext = Context.OTHER ; setAcceptedLanguage
Distance : 6

36
Tree	final Context rhsContext = Context.OTHER ; static
Code	final Context rhsContext = Context.OTHER ; static
Distance : 6

37
Tree	final Context rhsContext = Context.OTHER ; matcher
Code	final Context rhsContext = Context.OTHER ; matcher
Distance : 6

38
Tree	final Context rhsContext = Context.OTHER ; append
Code	final Context rhsContext = Context.OTHER ; append
Distance : 6

39
Tree	final Context rhsContext = Context.OTHER ; UnivariateFunction
Code	final Context rhsContext = Context.OTHER ; UnivariateFunction
Distance : 6

40
Tree	final Context rhsContext = Context.OTHER ; checkNotNull
Code	final Context rhsContext = Context.OTHER ; checkNotNull
Distance : 6

41
Tree	final Context rhsContext = Context.OTHER ; ()
Code	final Context rhsContext = Context.OTHER ; ()
Distance : 6

42
Tree	final Context rhsContext = Context.OTHER ; scope
Code	final Context rhsContext = Context.OTHER ; scope
Distance : 6

43
Tree	final Context rhsContext = Context.OTHER ; sb
Code	final Context rhsContext = Context.OTHER ; sb
Distance : 6

44
Tree	final Context rhsContext = Context.OTHER ; isBlock
Code	final Context rhsContext = Context.OTHER ; isBlock
Distance : 6

45
Tree	final Context rhsContext = Context.OTHER ; returnZero
Code	final Context rhsContext = Context.OTHER ; returnZero
Distance : 6

46
Tree	final Context rhsContext = Context.OTHER ; getArgumentMatcherStorage
Code	final Context rhsContext = Context.OTHER ; getArgumentMatcherStorage
Distance : 6

47
Tree	final Context rhsContext = Context.OTHER ; js
Code	final Context rhsContext = Context.OTHER ; js
Distance : 6

48
Tree	final Context rhsContext = Context.OTHER ; ex
Code	final Context rhsContext = Context.OTHER ; ex
Distance : 6

49
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; getInstance
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; getInstance
Distance : 5

50
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; createIllegalArgumentException
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; createIllegalArgumentException
Distance : 5

51
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; size
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; size
Distance : 5

52
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; LanguageMode.ECMASCRIPT_2015
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; LanguageMode.ECMASCRIPT_2015
Distance : 5

53
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; MutableTimePeriod
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; MutableTimePeriod
Distance : 5

54
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; stroke
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; stroke
Distance : 5

55
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; sb
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; sb
Distance : 5

56
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; scope
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; scope
Distance : 5

57
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; getFirstChild
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; getFirstChild
Distance : 5

58
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; throws
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; throws
Distance : 5

59
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; Double
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; Double
Distance : 5

60
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; <=
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; <=
Distance : 5

61
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; clone
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; clone
Distance : 5

62
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; sqrt
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; sqrt
Distance : 5

63
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; isBlock
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; isBlock
Distance : 5

64
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; returnZero
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; returnZero
Distance : 5

65
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; UnivariateFunction
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; UnivariateFunction
Distance : 5

66
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; append
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; append
Distance : 5

67
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; y
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; y
Distance : 5

68
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; LanguageMode.ECMASCRIPT6
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; LanguageMode.ECMASCRIPT6
Distance : 5

69
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; valueOf
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; valueOf
Distance : 5

70
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; instance
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; instance
Distance : 5

71
Tree	Context rhsContext = NUMBER_CONSTANT ;
Code	Context rhsContext = NUMBER_CONSTANT ;
Distance : 4

72
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; chrono
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; chrono
Distance : 5

73
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; serialised
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; serialised
Distance : 5

74
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; return;
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; return;
Distance : 5

75
Tree	final Context rhsContext = Context.OTHER ; Preconditions
Code	final Context rhsContext = Context.OTHER ; Preconditions
Distance : 6

76
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; parent
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; parent
Distance : 5

77
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; testSame
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; testSame
Distance : 5

78
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; x
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; x
Distance : 5

79
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; try
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; try
Distance : 5

80
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; fail
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; fail
Distance : 5

81
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; Args
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; Args
Distance : 5

82
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; List
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; List
Distance : 5

83
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; f
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; f
Distance : 5

84
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; ParamChecks
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; ParamChecks
Distance : 5

85
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; array
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; array
Distance : 5

86
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; <>
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; <>
Distance : 5

87
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; m
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; m
Distance : 5

88
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; boolean
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; boolean
Distance : 5

89
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; :
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; :
Distance : 5

90
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; result
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; result
Distance : 5

91
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; join
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; join
Distance : 5

92
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; paint
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; paint
Distance : 5

93
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; *
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; *
Distance : 5

94
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; type
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; type
Distance : 5

95
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; assertThat
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; assertThat
Distance : 5

96
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; str
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; str
Distance : 5

97
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; verify
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; verify
Distance : 5

98
Tree	final Context rhsContext = Context.OTHER ; Math
Code	final Context rhsContext = Context.OTHER ; Math
Distance : 6

99
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ; ArrayList
Code	Context rhsContext = Context.OTHER . Context.OTHER () ; ArrayList
Distance : 5

100
Tree	final Context rhsContext = Context.OTHER ; options
Code	final Context rhsContext = Context.OTHER ; options
Distance : 6

101
Tree	private Context context = Context.OTHER ;
Code	private Context context = Context.OTHER ;
Distance : 6

102
Tree	public Context context = Context.OTHER ;
Code	public Context context = Context.OTHER ;
Distance : 6

103
Tree	Context rhsContext = context ? Context.OTHER : Context.OTHER ;
Code	Context rhsContext = context ? Context.OTHER : Context.OTHER ;
Distance : 5

104
Tree	Context Context [] = context . Context.OTHER () ;
Code	Context Context [] = context . Context.OTHER () ;
Distance : 6

105
Tree	protected Context context = Context.OTHER ;
Code	protected Context context = Context.OTHER ;
Distance : 6

106
Tree	Context context = Context.OTHER . Context.OTHER () ;
Code	Context context = Context.OTHER . Context.OTHER () ;
Distance : 5

107
Tree	Context context = Context.OTHER ? Context.OTHER : Context.OTHER ;
Code	Context context = Context.OTHER ? Context.OTHER : Context.OTHER ;
Distance : 6

108
Tree	Context context = context . Context.OTHER () ;
Code	Context context = context . Context.OTHER () ;
Distance : 5

109
Tree	Context context = context ? Context.OTHER : Context.OTHER ;
Code	Context context = context ? Context.OTHER : Context.OTHER ;
Distance : 6

110
Tree	final Context rhsContext = Context.OTHER ; false
Code	final Context rhsContext = Context.OTHER ; false
Distance : 6

111
Tree	final Context rhsContext = Context.OTHER ; int
Code	final Context rhsContext = Context.OTHER ; int
Distance : 6

112
Tree	final Context rhsContext = Context.OTHER ; double
Code	final Context rhsContext = Context.OTHER ; double
Distance : 6

113
Tree	final Context rhsContext = Context.OTHER ; checkState
Code	final Context rhsContext = Context.OTHER ; checkState
Distance : 6

114
Tree	final Context rhsContext = Context.OTHER ; )
Code	final Context rhsContext = Context.OTHER ; )
Distance : 5

115
Tree	final Context rhsContext = Context.OTHER ; <s>
Code	final Context rhsContext = Context.OTHER ; <s>
Distance : 6

116
Tree	final Context rhsContext = Context.OTHER ; else
Code	final Context rhsContext = Context.OTHER ; else
Distance : 6

117
Tree	final Context rhsContext = Context.OTHER ; :
Code	final Context rhsContext = Context.OTHER ; :
Distance : 6

118
Tree	final Context rhsContext = Context.OTHER ; invocations
Code	final Context rhsContext = Context.OTHER ; invocations
Distance : 6

119
Tree	final Context rhsContext = Context.OTHER ; result
Code	final Context rhsContext = Context.OTHER ; result
Distance : 6

120
Tree	final Context rhsContext = Context.OTHER ; getMessage
Code	final Context rhsContext = Context.OTHER ; getMessage
Distance : 6

121
Tree	final Context rhsContext = Context.OTHER ; (
Code	final Context rhsContext = Context.OTHER ; (
Distance : 6

122
Tree	Context context = context ;
Code	Context context = context ;
Distance : 4

123
Tree	final Context rhsContext = Context.OTHER ; stream
Code	final Context rhsContext = Context.OTHER ; stream
Distance : 6

124
Tree	Context rhsContext = context . Context.OTHER () ;
Code	Context rhsContext = context . Context.OTHER () ;
Distance : 4

125
Tree	abstract Context context = Context.OTHER ;
Code	abstract Context context = Context.OTHER ;
Distance : 6

126
Tree	Context rhsContext = Context.OTHER ;
Code	Context rhsContext = Context.OTHER ;
Distance : 4

127
Tree	final Context rhsContext = Context.OTHER ; wanted
Code	final Context rhsContext = Context.OTHER ; wanted
Distance : 6

128
Tree	Context rhsContext = STRING_CONSTANT ;
Code	Context rhsContext = STRING_CONSTANT ;
Distance : 4

129
Tree	final Context rhsContext = Context.OTHER ;
Code	final Context rhsContext = Context.OTHER ;
Distance : 5

130
Tree	Context rhsContext = Context.OTHER ;
Code	Context rhsContext = Context.OTHER ;
Distance : 4

131
Tree	Context context ;
Code	Context context ;
Distance : 5

132
Tree	Context context = NUMBER_CONSTANT ;
Code	Context context = NUMBER_CONSTANT ;
Distance : 5

133
Tree	Context context = Context.OTHER ;
Code	Context context = Context.OTHER ;
Distance : 5

134
Tree	abstract Context rhsContext = Context.OTHER ;
Code	abstract Context rhsContext = Context.OTHER ;
Distance : 5

135
Tree	Context context = STRING_CONSTANT ;
Code	Context context = STRING_CONSTANT ;
Distance : 5

136
Tree	synchronized Context rhsContext = Context.OTHER ;
Code	synchronized Context rhsContext = Context.OTHER ;
Distance : 5

137
Tree	Context rhsContext = context ;
Code	Context rhsContext = context ;
Distance : 3

138
Tree	private Context rhsContext = Context.OTHER ;
Code	private Context rhsContext = Context.OTHER ;
Distance : 5

139
Tree	static Context rhsContext = Context.OTHER ;
Code	static Context rhsContext = Context.OTHER ;
Distance : 5

140
Tree	public Context rhsContext = Context.OTHER ;
Code	public Context rhsContext = Context.OTHER ;
Distance : 5

141
Tree	final Context context = Context.OTHER ;
Code	final Context context = Context.OTHER ;
Distance : 6

142
Tree	protected Context rhsContext = Context.OTHER ;
Code	protected Context rhsContext = Context.OTHER ;
Distance : 5

143
Tree	Context rhsContext = Context.OTHER . Context.OTHER () ;
Code	Context rhsContext = Context.OTHER . Context.OTHER () ;
Distance : 4

144
Tree	Context context = Context.OTHER ;
Code	Context context = Context.OTHER ;
Distance : 5

145
Tree	Context rhsContext = Context.OTHER ? Context.OTHER : Context.OTHER ;
Code	Context rhsContext = Context.OTHER ? Context.OTHER : Context.OTHER ;
Distance : 5

146
Tree	Context Context [] = Context.OTHER . Context.OTHER () ;
Code	Context Context [] = Context.OTHER . Context.OTHER () ;
Distance : 6

147
Tree	synchronized Context context = Context.OTHER ;
Code	synchronized Context context = Context.OTHER ;
Distance : 6

148
Tree	final Context rhsContext = Context.OTHER ; values
Code	final Context rhsContext = Context.OTHER ; values
Distance : 6

149
Tree	static Context context = Context.OTHER ;
Code	static Context context = Context.OTHER ;
Distance : 6

150
Tree	final Context rhsContext = Context.OTHER ; assertEquals
Code	final Context rhsContext = Context.OTHER ; assertEquals
Distance : 6

151
Tree	final Context rhsContext = Context.OTHER ; fail
Code	final Context rhsContext = Context.OTHER ; fail
Distance : 6

152
Tree	final Context rhsContext = Context.OTHER ; TestUtils
Code	final Context rhsContext = Context.OTHER ; TestUtils
Distance : 6

153
Tree	final Context rhsContext = Context.OTHER ; m
Code	final Context rhsContext = Context.OTHER ; m
Distance : 6

154
Tree	final Context rhsContext = Context.OTHER ; *
Code	final Context rhsContext = Context.OTHER ; *
Distance : 6

155
Tree	final Context rhsContext = Context.OTHER ; char
Code	final Context rhsContext = Context.OTHER ; char
Distance : 6

156
Tree	final Context rhsContext = Context.OTHER ; isNormalBlock
Code	final Context rhsContext = Context.OTHER ; isNormalBlock
Distance : 6

157
Tree	final Context rhsContext = Context.OTHER ; contains
Code	final Context rhsContext = Context.OTHER ; contains
Distance : 6

158
Tree	final Context rhsContext = Context.OTHER ; null
Code	final Context rhsContext = Context.OTHER ; null
Distance : 6

159
Tree	final Context rhsContext = Context.OTHER ; +
Code	final Context rhsContext = Context.OTHER ; +
Distance : 6

160
Tree	final Context rhsContext = Context.OTHER ; if
Code	final Context rhsContext = Context.OTHER ; if
Distance : 6

161
Tree	final Context rhsContext = Context.OTHER ; @
Code	final Context rhsContext = Context.OTHER ; @
Distance : 6

162
Tree	final Context rhsContext = Context.OTHER ; <
Code	final Context rhsContext = Context.OTHER ; <
Distance : 6

163
Tree	final Context rhsContext = Context.OTHER ; public
Code	final Context rhsContext = Context.OTHER ; public
Distance : 6

164
Tree	final Context rhsContext = Context.OTHER ; createIllegalArgumentException
Code	final Context rhsContext = Context.OTHER ; createIllegalArgumentException
Distance : 6

165
Tree	final Context rhsContext = Context.OTHER ; parent
Code	final Context rhsContext = Context.OTHER ; parent
Distance : 6

166
Tree	final Context rhsContext = Context.OTHER ; fireChangeEvent
Code	final Context rhsContext = Context.OTHER ; fireChangeEvent
Distance : 6

167
Tree	final Context rhsContext = Context.OTHER ; ArrayList
Code	final Context rhsContext = Context.OTHER ; ArrayList
Distance : 6

168
Tree	final Context rhsContext = Context.OTHER ; type
Code	final Context rhsContext = Context.OTHER ; type
Distance : 6

169
Tree	final Context rhsContext = Context.OTHER ; getInstance
Code	final Context rhsContext = Context.OTHER ; getInstance
Distance : 6

170
Tree	final Context rhsContext = Context.OTHER ; boolean
Code	final Context rhsContext = Context.OTHER ; boolean
Distance : 6

171
Tree	final Context rhsContext = Context.OTHER ; protected
Code	final Context rhsContext = Context.OTHER ; protected
Distance : 6

172
Tree	final Context rhsContext = Context.OTHER ; p
Code	final Context rhsContext = Context.OTHER ; p
Distance : 6

173
Tree	final Context rhsContext = Context.OTHER ; >
Code	final Context rhsContext = Context.OTHER ; >
Distance : 6

174
Tree	final Context rhsContext = Context.OTHER ; test
Code	final Context rhsContext = Context.OTHER ; test
Distance : 6

175
Tree	final Context rhsContext = Context.OTHER ; serialised
Code	final Context rhsContext = Context.OTHER ; serialised
Distance : 6

176
Tree	final Context rhsContext = Context.OTHER ; i
Code	final Context rhsContext = Context.OTHER ; i
Distance : 6

177
Tree	final Context rhsContext = Context.OTHER ; value
Code	final Context rhsContext = Context.OTHER ; value
Distance : 6

178
Tree	final Context rhsContext = Context.OTHER ; out
Code	final Context rhsContext = Context.OTHER ; out
Distance : 6

179
Tree	final Context rhsContext = Context.OTHER ; ,
Code	final Context rhsContext = Context.OTHER ; ,
Distance : 6

180
Tree	final Context rhsContext = Context.OTHER ; =
Code	final Context rhsContext = Context.OTHER ; =
Distance : 6

181
Tree	final Context rhsContext = Context.OTHER ; ;
Code	final Context rhsContext = Context.OTHER ; ;
Distance : 5

182
Tree	final Context rhsContext = Context.OTHER ; try
Code	final Context rhsContext = Context.OTHER ; try
Distance : 6

183
Tree	final Context rhsContext = Context.OTHER ; NUMBER_CONSTANT
Code	final Context rhsContext = Context.OTHER ; NUMBER_CONSTANT
Distance : 6

184
Tree	final Context rhsContext = Context.OTHER ; <blank>
Code	final Context rhsContext = Context.OTHER ; <blank>
Distance : 6

185
Tree	final Context rhsContext = Context.OTHER ; =
Code	final Context rhsContext = Context.OTHER ; =
Distance : 6

186
Tree	final Context rhsContext = Context.OTHER ; this
Code	final Context rhsContext = Context.OTHER ; this
Distance : 6

187
Tree	final Context rhsContext = Context.OTHER ; index
Code	final Context rhsContext = Context.OTHER ; index
Distance : 6

188
Tree	final Context rhsContext = Context.OTHER ; T
Code	final Context rhsContext = Context.OTHER ; T
Distance : 6

189
Tree	final Context rhsContext = Context.OTHER ; &&
Code	final Context rhsContext = Context.OTHER ; &&
Distance : 6

190
Tree	final Context rhsContext = Context.OTHER ; !=
Code	final Context rhsContext = Context.OTHER ; !=
Distance : 6

191
Tree	final Context rhsContext = Context.OTHER ; }
Code	final Context rhsContext = Context.OTHER ; }
Distance : 6

192
Tree	final Context rhsContext = Context.OTHER ; !
Code	final Context rhsContext = Context.OTHER ; !
Distance : 6

193
Tree	final Context rhsContext = Context.OTHER ; STRING_CONSTANT
Code	final Context rhsContext = Context.OTHER ; STRING_CONSTANT
Distance : 6

194
Tree	final Context rhsContext = Context.OTHER ; new
Code	final Context rhsContext = Context.OTHER ; new
Distance : 6

195
Tree	final Context rhsContext = Context.OTHER ; return
Code	final Context rhsContext = Context.OTHER ; return
Distance : 6

196
Tree	final Context rhsContext = Context.OTHER ; super
Code	final Context rhsContext = Context.OTHER ; super
Distance : 6

197
Tree	final Context rhsContext = Context.OTHER ; final
Code	final Context rhsContext = Context.OTHER ; final
Distance : 6

198
Tree	Context rhsContext = Context.OTHER ; equals
Code	Context rhsContext = Context.OTHER ; equals
Distance : 5

199
Tree	Context rhsContext = Context.OTHER ; setAcceptedLanguage
Code	Context rhsContext = Context.OTHER ; setAcceptedLanguage
Distance : 5

========================================================================


========================================================================
Example Number: 12
Parent Code is: 
{ return topType ; }
-------------------------------------------------------------------------------
Child code is: 
{ return topType . isAllType () ? getNativeType ( ARRAY_TYPE ) : topType ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (800{val=topType}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (32 (800{val=topType}) (235{val=.}) (802{val=isAllType}) (216{val=()})) (233{val=?}) (32 (802{val=getNativeType}) (214{val=(}) (800{val=ARRAY_TYPE}) (215{val=)})) (226{val=:}) (800{val=topType})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/111/parent/src_com_google_javascript_jscomp_type_ClosureReverseAbstractInterpreter.java
-------------------------------------------------------------------------------
Edit Distance : 10
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return this . topType ; } setAcceptedLanguage
Code	{ return this . topType ; } setAcceptedLanguage
Distance : 10

1
Tree	{ return this . topType ; } super
Code	{ return this . topType ; } super
Distance : 10

2
Tree	{ return this . topType ; } mock
Code	{ return this . topType ; } mock
Distance : 10

3
Tree	{ return this . topType ; } Override
Code	{ return this . topType ; } Override
Distance : 10

4
Tree	{ return this . topType ; } public
Code	{ return this . topType ; } public
Distance : 10

5
Tree	{ return this . topType ; } >
Code	{ return this . topType ; } >
Distance : 10

6
Tree	{ return this . topType ; } new
Code	{ return this . topType ; } new
Distance : 10

7
Tree	{ return this . topType ; } STRING_CONSTANT
Code	{ return this . topType ; } STRING_CONSTANT
Distance : 10

8
Tree	{ return this . topType ; } ,
Code	{ return this . topType ; } ,
Distance : 10

9
Tree	{ return this . topType ; } .
Code	{ return this . topType ; } .
Distance : 10

10
Tree	{ return this . topType ; } test
Code	{ return this . topType ; } test
Distance : 10

11
Tree	{ return this . topType ; } class
Code	{ return this . topType ; } class
Distance : 10

12
Tree	{ return this . topType ; } Object
Code	{ return this . topType ; } Object
Distance : 10

13
Tree	{ return this . topType ; } Test
Code	{ return this . topType ; } Test
Distance : 10

14
Tree	{ return ARRAY_TYPE ; } value
Code	{ return ARRAY_TYPE ; } value
Distance : 11

15
Tree	{ return ARRAY_TYPE ; } ?
Code	{ return ARRAY_TYPE ; } ?
Distance : 11

16
Tree	{ return ARRAY_TYPE ; } /
Code	{ return ARRAY_TYPE ; } /
Distance : 11

17
Tree	{ return ARRAY_TYPE ; } length
Code	{ return ARRAY_TYPE ; } length
Distance : 11

18
Tree	{ return ARRAY_TYPE ; } long
Code	{ return ARRAY_TYPE ; } long
Distance : 11

19
Tree	{ return ARRAY_TYPE ; } valueOf
Code	{ return ARRAY_TYPE ; } valueOf
Distance : 11

20
Tree	{ return this . topType ; } !=
Code	{ return this . topType ; } !=
Distance : 10

21
Tree	{ return this . topType ; } false
Code	{ return this . topType ; } false
Distance : 10

22
Tree	{ return this . topType ; } int
Code	{ return this . topType ; } int
Distance : 10

23
Tree	{ return this . topType ; } double
Code	{ return this . topType ; } double
Distance : 10

24
Tree	{ return ARRAY_TYPE ; } lines
Code	{ return ARRAY_TYPE ; } lines
Distance : 11

25
Tree	{ return this . topType . isAllType () ; } Integer
Code	{ return this . topType . isAllType () ; } Integer
Distance : 10

26
Tree	{ return ARRAY_TYPE ; } notifyListeners
Code	{ return ARRAY_TYPE ; } notifyListeners
Distance : 11

27
Tree	{ return ARRAY_TYPE ; } c
Code	{ return ARRAY_TYPE ; } c
Distance : 11

28
Tree	{ return ARRAY_TYPE ; } Node
Code	{ return ARRAY_TYPE ; } Node
Distance : 11

29
Tree	{ return ARRAY_TYPE ; } Exception
Code	{ return ARRAY_TYPE ; } Exception
Distance : 11

30
Tree	{ return ARRAY_TYPE ; } Fraction
Code	{ return ARRAY_TYPE ; } Fraction
Distance : 11

31
Tree	{ return ARRAY_TYPE ; } Assert
Code	{ return ARRAY_TYPE ; } Assert
Distance : 11

32
Tree	{ return this . topType ; } getParent
Code	{ return this . topType ; } getParent
Distance : 10

33
Tree	{ return ARRAY_TYPE ; } instance
Code	{ return ARRAY_TYPE ; } instance
Distance : 11

34
Tree	{ return this . topType ; } node
Code	{ return this . topType ; } node
Distance : 10

35
Tree	{ return this . topType ; } for
Code	{ return this . topType ; } for
Distance : 10

36
Tree	{ return this . topType ; } @
Code	{ return this . topType ; } @
Distance : 10

37
Tree	{ return this . topType ; } !
Code	{ return this . topType ; } !
Distance : 10

38
Tree	{ return this . topType ; } assertEquals
Code	{ return this . topType ; } assertEquals
Distance : 10

39
Tree	{ return this . topType ; } ==
Code	{ return this . topType ; } ==
Distance : 10

40
Tree	{ return this . topType ; } void
Code	{ return this . topType ; } void
Distance : 10

41
Tree	{ return this . topType ; } []
Code	{ return this . topType ; } []
Distance : 10

42
Tree	{ return this . topType ; } nullNotPermitted
Code	{ return this . topType ; } nullNotPermitted
Distance : 10

43
Tree	{ return this . topType ; } checkState
Code	{ return this . topType ; } checkState
Distance : 10

44
Tree	{ return this . topType ; } Invocation
Code	{ return this . topType ; } Invocation
Distance : 10

45
Tree	{ return ARRAY_TYPE ; } protected
Code	{ return ARRAY_TYPE ; } protected
Distance : 11

46
Tree	{ return ARRAY_TYPE ; } values
Code	{ return ARRAY_TYPE ; } values
Distance : 11

47
Tree	{ return this . topType ; } Class
Code	{ return this . topType ; } Class
Distance : 10

48
Tree	{ return this . topType ; } externs
Code	{ return this . topType ; } externs
Distance : 10

49
Tree	{ return this . topType ; } assertTrue
Code	{ return this . topType ; } assertTrue
Distance : 10

50
Tree	{ return this . topType ; } return;
Code	{ return this . topType ; } return;
Distance : 10

51
Tree	{ return this . topType ; } mode
Code	{ return this . topType ; } mode
Distance : 10

52
Tree	{ return this . topType ; } <s>
Code	{ return this . topType ; } <s>
Distance : 10

53
Tree	{ return this . topType ; } if
Code	{ return this . topType ; } if
Distance : 10

54
Tree	{ return this . topType ; } <blank>
Code	{ return this . topType ; } <blank>
Distance : 10

55
Tree	{ return this . topType ; } {
Code	{ return this . topType ; } {
Distance : 10

56
Tree	{ return this . topType ; } )
Code	{ return this . topType ; } )
Distance : 10

57
Tree	{ return this . topType ; } d
Code	{ return this . topType ; } d
Distance : 10

58
Tree	{ return this . topType ; } ;
Code	{ return this . topType ; } ;
Distance : 10

59
Tree	{ return this . topType ; } {
Code	{ return this . topType ; } {
Distance : 10

60
Tree	{ return this . topType ; } n
Code	{ return this . topType ; } n
Distance : 10

61
Tree	{ return this . topType ; } e
Code	{ return this . topType ; } e
Distance : 10

62
Tree	{ return this . topType ; } <
Code	{ return this . topType ; } <
Distance : 10

63
Tree	{ return this . topType ; } return
Code	{ return this . topType ; } return
Distance : 10

64
Tree	{ return this . topType ; } true
Code	{ return this . topType ; } true
Distance : 10

65
Tree	{ return this . topType ; } NUMBER_CONSTANT
Code	{ return this . topType ; } NUMBER_CONSTANT
Distance : 10

66
Tree	{ return this . topType ; } this
Code	{ return this . topType ; } this
Distance : 10

67
Tree	{ return this . topType ; } final
Code	{ return this . topType ; } final
Distance : 10

68
Tree	{ return this . topType ; } ()
Code	{ return this . topType ; } ()
Distance : 10

69
Tree	{ return ARRAY_TYPE ; } verify
Code	{ return ARRAY_TYPE ; } verify
Distance : 11

70
Tree	{ return this . topType ; } equals
Code	{ return this . topType ; } equals
Distance : 10

71
Tree	{ return this . topType ; } js
Code	{ return this . topType ; } js
Distance : 10

72
Tree	{ return this . topType ; } [
Code	{ return this . topType ; } [
Distance : 10

73
Tree	{ return this . topType ; } MathRuntimeException
Code	{ return this . topType ; } MathRuntimeException
Distance : 10

74
Tree	{ return this . topType ; } {}
Code	{ return this . topType ; } {}
Distance : 10

75
Tree	{ return this . topType ; } f
Code	{ return this . topType ; } f
Distance : 10

76
Tree	{ return this . topType ; } ParamChecks
Code	{ return this . topType ; } ParamChecks
Distance : 10

77
Tree	{ return this . topType ; } -
Code	{ return this . topType ; } -
Distance : 10

78
Tree	{ return this . topType ; } Preconditions
Code	{ return this . topType ; } Preconditions
Distance : 10

79
Tree	{ return this . topType ; } T
Code	{ return this . topType ; } T
Distance : 10

80
Tree	{ return this . topType ; } &&
Code	{ return this . topType ; } &&
Distance : 10

81
Tree	{ return this . topType ; } TestUtilities
Code	{ return this . topType ; } TestUtilities
Distance : 10

82
Tree	{ return multiplicand ; }
Code	{ return multiplicand ; }
Distance : 11

83
Tree	{ return this . topType ; } char
Code	{ return this . topType ; } char
Distance : 10

84
Tree	{ return this . topType ; } else
Code	{ return this . topType ; } else
Distance : 10

85
Tree	{ return this . topType ; } getMessage
Code	{ return this . topType ; } getMessage
Distance : 10

86
Tree	{ return this . topType ; } out
Code	{ return this . topType ; } out
Distance : 10

87
Tree	{ return this . topType ; } matcher
Code	{ return this . topType ; } matcher
Distance : 10

88
Tree	{ return this . topType ; } chrono
Code	{ return this . topType ; } chrono
Distance : 10

89
Tree	{ return this . topType ; } instant
Code	{ return this . topType ; } instant
Distance : 10

90
Tree	{ return this . topType ; } pattern
Code	{ return this . topType ; } pattern
Distance : 10

91
Tree	{ return this . topType ; } getChronology
Code	{ return this . topType ; } getChronology
Distance : 10

92
Tree	{ return this . topType ; } JSType
Code	{ return this . topType ; } JSType
Distance : 10

93
Tree	{ return ARRAY_TYPE ; } NodeUtil
Code	{ return ARRAY_TYPE ; } NodeUtil
Distance : 11

94
Tree	{ return ARRAY_TYPE ; } compiler
Code	{ return ARRAY_TYPE ; } compiler
Distance : 11

95
Tree	{ return ARRAY_TYPE ; } null
Code	{ return ARRAY_TYPE ; } null
Distance : 11

96
Tree	{ return this . topType ; } Integer
Code	{ return this . topType ; } Integer
Distance : 10

97
Tree	{ return this . topType ; } v
Code	{ return this . topType ; } v
Distance : 10

98
Tree	{ return this . topType ; } expected
Code	{ return this . topType ; } expected
Distance : 10

99
Tree	{ return this . topType ; } reportCodeChange
Code	{ return this . topType ; } reportCodeChange
Distance : 10

100
Tree	{ return this . topType ; } invocation
Code	{ return this . topType ; } invocation
Distance : 10

101
Tree	{ return this . topType ; } assertThat
Code	{ return this . topType ; } assertThat
Distance : 10

102
Tree	{ return this . topType ; } FastMath
Code	{ return this . topType ; } FastMath
Distance : 10

103
Tree	{ return this . topType ; } UnivariateFunction
Code	{ return this . topType ; } UnivariateFunction
Distance : 10

104
Tree	{ return this . topType ; } append
Code	{ return this . topType ; } append
Distance : 10

105
Tree	{ return this . topType ; } y
Code	{ return this . topType ; } y
Distance : 10

106
Tree	{ return this . topType ; } obj
Code	{ return this . topType ; } obj
Distance : 10

107
Tree	{ return this . topType ; } StrBuilder
Code	{ return this . topType ; } StrBuilder
Distance : 10

108
Tree	{ return this . topType ; } setUp
Code	{ return this . topType ; } setUp
Distance : 10

109
Tree	{ return this . topType ; } invocations
Code	{ return this . topType ; } invocations
Distance : 10

110
Tree	{ return this . topType ; } index
Code	{ return this . topType ; } index
Distance : 10

111
Tree	{ return this . topType ; } reportMatcher
Code	{ return this . topType ; } reportMatcher
Distance : 10

112
Tree	{ return this . topType ; } abs
Code	{ return this . topType ; } abs
Distance : 10

113
Tree	{ return this . topType ; } Double
Code	{ return this . topType ; } Double
Distance : 10

114
Tree	{ return this . topType ; } <=
Code	{ return this . topType ; } <=
Distance : 10

115
Tree	{ return this . topType ; } b
Code	{ return this . topType ; } b
Distance : 10

116
Tree	{ return this . topType ; } PeriodType
Code	{ return this . topType ; } PeriodType
Distance : 10

117
Tree	{ return this . topType ; } a
Code	{ return this . topType ; } a
Distance : 10

118
Tree	{ return this . topType ; } LanguageMode.ECMASCRIPT6
Code	{ return this . topType ; } LanguageMode.ECMASCRIPT6
Distance : 10

119
Tree	{ return this . topType ; } alpha
Code	{ return this . topType ; } alpha
Distance : 10

120
Tree	{ return this . topType . isAllType () ; } }
Code	{ return this . topType . isAllType () ; } }
Distance : 10

121
Tree	{ return this . topType . isAllType () ; } ()
Code	{ return this . topType . isAllType () ; } ()
Distance : 10

122
Tree	{ return this . topType . isAllType () ; } {
Code	{ return this . topType . isAllType () ; } {
Distance : 10

123
Tree	{ return this . topType . isAllType () ; } <blank>
Code	{ return this . topType . isAllType () ; } <blank>
Distance : 10

124
Tree	{ return this . topType . isAllType () ; } {
Code	{ return this . topType . isAllType () ; } {
Distance : 10

125
Tree	{ return this . topType . isAllType () ; } <s>
Code	{ return this . topType . isAllType () ; } <s>
Distance : 10

126
Tree	{ return this . topType ; } ?
Code	{ return this . topType ; } ?
Distance : 10

127
Tree	{ return ARRAY_TYPE ; } equals
Code	{ return ARRAY_TYPE ; } equals
Distance : 11

128
Tree	{ return this . topType ; } i
Code	{ return this . topType ; } i
Distance : 10

129
Tree	{ return this . topType ; } optimizer
Code	{ return this . topType ; } optimizer
Distance : 10

130
Tree	{ return this . topType ; } createIllegalArgumentException
Code	{ return this . topType ; } createIllegalArgumentException
Distance : 10

131
Tree	{ return this . topType ; } sb
Code	{ return this . topType ; } sb
Distance : 10

132
Tree	{ return this . topType ; } sqrt
Code	{ return this . topType ; } sqrt
Distance : 10

133
Tree	{ return this . topType ; } clone
Code	{ return this . topType ; } clone
Distance : 10

134
Tree	{ return this . topType ; } getFirstChild
Code	{ return this . topType ; } getFirstChild
Distance : 10

135
Tree	{ return this . topType ; } throws
Code	{ return this . topType ; } throws
Distance : 10

136
Tree	{ return this . topType ; } simpleMethod
Code	{ return this . topType ; } simpleMethod
Distance : 10

137
Tree	{ return this . topType ; } getArgumentMatcherStorage
Code	{ return this . topType ; } getArgumentMatcherStorage
Distance : 10

138
Tree	{ return this . topType ; } returnZero
Code	{ return this . topType ; } returnZero
Distance : 10

139
Tree	{ return this . topType ; } isBlock
Code	{ return this . topType ; } isBlock
Distance : 10

140
Tree	{ return this . topType ; } scope
Code	{ return this . topType ; } scope
Distance : 10

141
Tree	{ return this . topType ; } field
Code	{ return this . topType ; } field
Distance : 10

142
Tree	{ return this . topType ; } traverseEs6
Code	{ return this . topType ; } traverseEs6
Distance : 10

143
Tree	{ return this . topType ; } contains
Code	{ return this . topType ; } contains
Distance : 10

144
Tree	{ return ARRAY_TYPE ; } getInstance
Code	{ return ARRAY_TYPE ; } getInstance
Distance : 11

145
Tree	{ return ARRAY_TYPE ; } *
Code	{ return ARRAY_TYPE ; } *
Distance : 11

146
Tree	{ return ARRAY_TYPE ; } type
Code	{ return ARRAY_TYPE ; } type
Distance : 11

147
Tree	{ return ARRAY_TYPE ; } m
Code	{ return ARRAY_TYPE ; } m
Distance : 11

148
Tree	{ return ARRAY_TYPE ; } boolean
Code	{ return ARRAY_TYPE ; } boolean
Distance : 11

149
Tree	{ return ARRAY_TYPE ; } paint
Code	{ return ARRAY_TYPE ; } paint
Distance : 11

150
Tree	{ return ARRAY_TYPE ; } join
Code	{ return ARRAY_TYPE ; } join
Distance : 11

151
Tree	{ return ARRAY_TYPE ; } List
Code	{ return ARRAY_TYPE ; } List
Distance : 11

152
Tree	{ return ARRAY_TYPE ; } ex
Code	{ return ARRAY_TYPE ; } ex
Distance : 11

153
Tree	{ return ARRAY_TYPE ; } serialised
Code	{ return ARRAY_TYPE ; } serialised
Distance : 11

154
Tree	{ return ARRAY_TYPE ; } NodeTraversal
Code	{ return ARRAY_TYPE ; } NodeTraversal
Distance : 11

155
Tree	{ return ARRAY_TYPE ; } String
Code	{ return ARRAY_TYPE ; } String
Distance : 11

156
Tree	{ return this . topType ; } ArrayList
Code	{ return this . topType ; } ArrayList
Distance : 10

157
Tree	{ return this . topType ; } x
Code	{ return this . topType ; } x
Distance : 10

158
Tree	{ return this . topType ; } testSame
Code	{ return this . topType ; } testSame
Distance : 10

159
Tree	{ return this . topType ; } LINE_JOINER
Code	{ return this . topType ; } LINE_JOINER
Distance : 10

160
Tree	{ return ARRAY_TYPE ; } i
Code	{ return ARRAY_TYPE ; } i
Distance : 11

161
Tree	{ return ARRAY_TYPE ; } throw
Code	{ return ARRAY_TYPE ; } throw
Distance : 11

162
Tree	{ return ARRAY_TYPE ; } catch
Code	{ return ARRAY_TYPE ; } catch
Distance : 11

163
Tree	{ return ARRAY_TYPE ; } +
Code	{ return ARRAY_TYPE ; } +
Distance : 11

164
Tree	{ return ARRAY_TYPE ; } root
Code	{ return ARRAY_TYPE ; } root
Distance : 11

165
Tree	{ return this . topType ; } s
Code	{ return this . topType ; } s
Distance : 10

166
Tree	{ return ARRAY_TYPE ; } checkNotNull
Code	{ return ARRAY_TYPE ; } checkNotNull
Distance : 11

167
Tree	{ return ARRAY_TYPE ; } source
Code	{ return ARRAY_TYPE ; } source
Distance : 11

168
Tree	{ return this . topType ; } isNormalBlock
Code	{ return this . topType ; } isNormalBlock
Distance : 10

169
Tree	{ return this . topType ; } size
Code	{ return this . topType ; } size
Distance : 10

170
Tree	{ return this . topType ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . topType ; } LanguageMode.ECMASCRIPT_2015
Distance : 10

171
Tree	{ return this . topType ; } mockingProgress
Code	{ return this . topType ; } mockingProgress
Distance : 10

172
Tree	{ return this . topType ; } StringBuilder
Code	{ return this . topType ; } StringBuilder
Distance : 10

173
Tree	{ return this . topType ; } stroke
Code	{ return this . topType ; } stroke
Distance : 10

174
Tree	{ return this . topType ; } MutableTimePeriod
Code	{ return this . topType ; } MutableTimePeriod
Distance : 10

175
Tree	{ return this . topType ; } IllegalArgumentException
Code	{ return this . topType ; } IllegalArgumentException
Distance : 10

176
Tree	{ return this . topType ; } parent
Code	{ return this . topType ; } parent
Distance : 10

177
Tree	{ return ARRAY_TYPE ; } TestUtils
Code	{ return ARRAY_TYPE ; } TestUtils
Distance : 11

178
Tree	{ return this . topType ; } throw
Code	{ return this . topType ; } throw
Distance : 10

179
Tree	{ return ARRAY_TYPE ; } add
Code	{ return ARRAY_TYPE ; } add
Distance : 11

180
Tree	{ return ARRAY_TYPE ; } name
Code	{ return ARRAY_TYPE ; } name
Distance : 11

181
Tree	{ return ARRAY_TYPE ; } checkArgument
Code	{ return ARRAY_TYPE ; } checkArgument
Distance : 11

182
Tree	{ return ARRAY_TYPE ; } data
Code	{ return ARRAY_TYPE ; } data
Distance : 11

183
Tree	{ return ARRAY_TYPE ; } p
Code	{ return ARRAY_TYPE ; } p
Distance : 11

184
Tree	{ return ARRAY_TYPE ; } options
Code	{ return ARRAY_TYPE ; } options
Distance : 11

185
Tree	{ return ARRAY_TYPE ; } wanted
Code	{ return ARRAY_TYPE ; } wanted
Distance : 11

186
Tree	{ return ARRAY_TYPE ; } Math
Code	{ return ARRAY_TYPE ; } Math
Distance : 11

187
Tree	{ return ARRAY_TYPE ; } toString
Code	{ return ARRAY_TYPE ; } toString
Distance : 11

188
Tree	{ return this . topType ; } fireChangeEvent
Code	{ return this . topType ; } fireChangeEvent
Distance : 10

189
Tree	{ return this . topType . isAllType () ; } =
Code	{ return this . topType . isAllType () ; } =
Distance : 10

190
Tree	{ return this . topType ; } t
Code	{ return this . topType ; } t
Distance : 10

191
Tree	{ return this . topType ; } getField
Code	{ return this . topType ; } getField
Distance : 10

192
Tree	{ return ARRAY_TYPE ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ARRAY_TYPE ; } LanguageMode.ECMASCRIPT_2015
Distance : 11

193
Tree	{ return ARRAY_TYPE ; } size
Code	{ return ARRAY_TYPE ; } size
Distance : 11

194
Tree	{ return ARRAY_TYPE ; } isNormalBlock
Code	{ return ARRAY_TYPE ; } isNormalBlock
Distance : 11

195
Tree	{ return ARRAY_TYPE ; } contains
Code	{ return ARRAY_TYPE ; } contains
Distance : 11

196
Tree	{ return ARRAY_TYPE ; } isBlock
Code	{ return ARRAY_TYPE ; } isBlock
Distance : 11

197
Tree	{ return ARRAY_TYPE ; } alpha
Code	{ return ARRAY_TYPE ; } alpha
Distance : 11

198
Tree	{ return ARRAY_TYPE ; } optimizer
Code	{ return ARRAY_TYPE ; } optimizer
Distance : 11

199
Tree	{ return ARRAY_TYPE ; } parent
Code	{ return ARRAY_TYPE ; } parent
Distance : 11

========================================================================


========================================================================
Example Number: 13
Parent Code is: 
{ if ( assignLhsChild != null ) { return true ; } return false ; }
-------------------------------------------------------------------------------
Child code is: 
{ if ( assignLhsChild != null ) { return true ; } return parent != null && NodeUtil . isGet ( parent ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=assignLhsChild}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (9{val=false}) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=assignLhsChild}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (9{val=true}) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (27 (27 (800{val=parent}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isGet}) (214{val=(}) (800{val=parent}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/100/parent/src_com_google_javascript_jscomp_CheckGlobalThis.java
-------------------------------------------------------------------------------
Edit Distance : 10
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ if ( assignLhsChild != null ) { return true ; } return false ; }
Code	{ if ( assignLhsChild != null ) { return true ; } return false ; }
Distance : 10

1
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } verify
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } verify
Distance : 20

2
Tree	{ if ( ! parent ) { return true ; } return isGet ( NodeUtil , NodeUtil . isGet ( parent ) ) ; }
Code	{ if ( ! parent ) { return true ; } return isGet ( NodeUtil , NodeUtil . isGet ( parent ) ) ; }
Distance : 8

3
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Exception
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Exception
Distance : 20

4
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Node
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Node
Distance : 20

5
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } assertEquals
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } assertEquals
Distance : 20

6
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } !
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } !
Distance : 20

7
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } []
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } []
Distance : 20

8
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } nullNotPermitted
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } nullNotPermitted
Distance : 20

9
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } test
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } test
Distance : 20

10
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } @
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } @
Distance : 20

11
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } int
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } int
Distance : 20

12
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } false
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } false
Distance : 20

13
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } MathRuntimeException
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } MathRuntimeException
Distance : 20

14
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Integer
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Integer
Distance : 20

15
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } {}
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } {}
Distance : 20

16
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } mode
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } mode
Distance : 20

17
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } -
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } -
Distance : 20

18
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Preconditions
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } Preconditions
Distance : 20

19
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } [
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } [
Distance : 20

20
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } ]
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } ]
Distance : 20

21
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } ==
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } ==
Distance : 20

22
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } void
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } void
Distance : 20

23
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } catch
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } catch
Distance : 20

24
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } throw
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } throw
Distance : 20

25
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } n
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } n
Distance : 20

26
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } e
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } e
Distance : 20

27
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } String
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } String
Distance : 20

28
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } fail
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } fail
Distance : 18

29
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } true
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } true
Distance : 20

30
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } v
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } v
Distance : 20

31
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } compiler
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } compiler
Distance : 20

32
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } !=
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } !=
Distance : 20

33
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } value
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } value
Distance : 20

34
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } x
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } x
Distance : 18

35
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } testSame
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } testSame
Distance : 18

36
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } parent
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } parent
Distance : 18

37
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } createIllegalArgumentException
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } createIllegalArgumentException
Distance : 18

38
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <>
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <>
Distance : 18

39
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } array
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } array
Distance : 18

40
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ParamChecks
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ParamChecks
Distance : 18

41
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } f
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } f
Distance : 18

42
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } result
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } result
Distance : 18

43
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } :
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } :
Distance : 18

44
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } boolean
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } boolean
Distance : 18

45
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } double
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } double
Distance : 20

46
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } m
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } m
Distance : 18

47
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertThat
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertThat
Distance : 18

48
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } LINE_JOINER
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } LINE_JOINER
Distance : 18

49
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } str
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } str
Distance : 18

50
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } serialised
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } serialised
Distance : 18

51
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getInstance
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getInstance
Distance : 18

52
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } fireChangeEvent
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } fireChangeEvent
Distance : 18

53
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ArrayList
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ArrayList
Distance : 18

54
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } IllegalArgumentException
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } IllegalArgumentException
Distance : 18

55
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } FastMath
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } FastMath
Distance : 18

56
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } expected
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } expected
Distance : 18

57
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } reportCodeChange
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } reportCodeChange
Distance : 18

58
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } List
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } List
Distance : 18

59
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Args
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Args
Distance : 18

60
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } invocation
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } invocation
Distance : 18

61
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } super
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } super
Distance : 20

62
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } try
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } try
Distance : 18

63
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } checkState
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } checkState
Distance : 20

64
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Assert
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Assert
Distance : 18

65
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } node
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } node
Distance : 18

66
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkNotNull
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkNotNull
Distance : 18

67
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Integer
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Integer
Distance : 18

68
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } v
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } v
Distance : 18

69
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } length
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } length
Distance : 18

70
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } long
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } long
Distance : 18

71
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } &&
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } &&
Distance : 18

72
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } T
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } T
Distance : 18

73
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } i
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } i
Distance : 18

74
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } value
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } value
Distance : 18

75
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } -
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } -
Distance : 18

76
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Preconditions
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Preconditions
Distance : 18

77
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } [
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } [
Distance : 18

78
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ]
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ]
Distance : 18

79
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } TestUtils
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } TestUtils
Distance : 18

80
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertEquals
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertEquals
Distance : 18

81
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } []
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } []
Distance : 18

82
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } nullNotPermitted
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } nullNotPermitted
Distance : 18

83
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } throw
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } throw
Distance : 18

84
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } catch
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } catch
Distance : 18

85
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } void
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } void
Distance : 18

86
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ==
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ==
Distance : 18

87
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } false
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } false
Distance : 18

88
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } int
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } int
Distance : 18

89
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } @
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } @
Distance : 18

90
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } test
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } test
Distance : 18

91
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } p
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } p
Distance : 18

92
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } options
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } options
Distance : 18

93
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } source
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } source
Distance : 18

94
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } !
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } !
Distance : 18

95
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } toString
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } toString
Distance : 18

96
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } index
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } index
Distance : 18

97
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } reportCodeChange
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } reportCodeChange
Distance : 20

98
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } compiler
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } compiler
Distance : 18

99
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } String
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } String
Distance : 18

100
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } e
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } e
Distance : 18

101
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } n
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } n
Distance : 18

102
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } return
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } return
Distance : 18

103
Tree	{ if ( ! assignLhsChild . isGet ( != ) ) { return true ; } return false ; } class
Code	{ if ( ! assignLhsChild . isGet ( != ) ) { return true ; } return false ; } class
Distance : 16

104
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } STRING_CONSTANT
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } STRING_CONSTANT
Distance : 18

105
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } new
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } new
Distance : 18

106
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } public
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } public
Distance : 18

107
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } >
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } >
Distance : 18

108
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } null
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } null
Distance : 18

109
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } +
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } +
Distance : 18

110
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ,
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ,
Distance : 18

111
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } .
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } .
Distance : 18

112
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } )
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } )
Distance : 18

113
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ;
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ;
Distance : 18

114
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } (
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } (
Distance : 18

115
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <s>
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <s>
Distance : 18

116
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ;
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ;
Distance : 18

117
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <blank>
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <blank>
Distance : 18

118
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } class
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } class
Distance : 18

119
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Object
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Object
Distance : 18

120
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } mock
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } mock
Distance : 18

121
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Override
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Override
Distance : 18

122
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } mode
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } mode
Distance : 18

123
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } true
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } true
Distance : 18

124
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } {}
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } {}
Distance : 18

125
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } MathRuntimeException
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } MathRuntimeException
Distance : 18

126
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getParent
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getParent
Distance : 18

127
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Fraction
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Fraction
Distance : 18

128
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } invocations
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } invocations
Distance : 18

129
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } matcher
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } matcher
Distance : 18

130
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getMessage
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } getMessage
Distance : 18

131
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } StrBuilder
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } StrBuilder
Distance : 18

132
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } setUp
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } setUp
Distance : 18

133
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } externs
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } externs
Distance : 18

134
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertTrue
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } assertTrue
Distance : 18

135
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ?
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ?
Distance : 18

136
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } /
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } /
Distance : 18

137
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Invocation
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Invocation
Distance : 18

138
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } for
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } for
Distance : 18

139
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } equals
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } equals
Distance : 18

140
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } d
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } d
Distance : 18

141
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } static
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } static
Distance : 18

142
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } setAcceptedLanguage
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } setAcceptedLanguage
Distance : 18

143
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } reportMatcher
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } reportMatcher
Distance : 18

144
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } TestUtilities
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } TestUtilities
Distance : 18

145
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } abs
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } abs
Distance : 18

146
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } protected
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } protected
Distance : 18

147
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } out
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } out
Distance : 18

148
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } stream
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } stream
Distance : 18

149
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } char
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } char
Distance : 18

150
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } JSType
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } JSType
Distance : 18

151
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } get
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } get
Distance : 18

152
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } isEmpty
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } isEmpty
Distance : 18

153
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkState
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkState
Distance : 18

154
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } double
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } double
Distance : 18

155
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } super
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } super
Distance : 18

156
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } !=
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } !=
Distance : 18

157
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } type
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } type
Distance : 18

158
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } wanted
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } wanted
Distance : 18

159
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } values
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } values
Distance : 18

160
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } js
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } js
Distance : 18

161
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } *
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } *
Distance : 18

162
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } paint
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } paint
Distance : 18

163
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } return;
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } return;
Distance : 18

164
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } chrono
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } chrono
Distance : 18

165
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } c
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } c
Distance : 18

166
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } notifyListeners
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } notifyListeners
Distance : 18

167
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Class
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Class
Distance : 18

168
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Test
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Test
Distance : 18

169
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } size
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } size
Distance : 18

170
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } LanguageMode.ECMASCRIPT_2015
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } LanguageMode.ECMASCRIPT_2015
Distance : 18

171
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } MutableTimePeriod
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } MutableTimePeriod
Distance : 18

172
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } stroke
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } stroke
Distance : 18

173
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ex
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ex
Distance : 18

174
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } NodeTraversal
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } NodeTraversal
Distance : 18

175
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } StringBuilder
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } StringBuilder
Distance : 18

176
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkArgument
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } checkArgument
Distance : 18

177
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } field
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } field
Distance : 18

178
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } t
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } t
Distance : 18

179
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } name
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } name
Distance : 18

180
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } add
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } add
Distance : 18

181
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } {
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } {
Distance : 18

182
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ()
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } ()
Distance : 18

183
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } }
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } }
Distance : 18

184
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } =
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } =
Distance : 18

185
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } final
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } final
Distance : 18

186
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } this
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } this
Distance : 18

187
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } <
Distance : 18

188
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } if
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } if
Distance : 18

189
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Math
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Math
Distance : 18

190
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } data
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } data
Distance : 18

191
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } join
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } join
Distance : 18

192
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } else
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } else
Distance : 18

193
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } instant
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } instant
Distance : 18

194
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } root
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } root
Distance : 18

195
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } createIllegalArgumentException
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } createIllegalArgumentException
Distance : 20

196
Tree	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Node
Code	{ if ( ! isGet ( assignLhsChild , parent ) ) { return false ; } return false ; } Node
Distance : 18

197
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } i
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } i
Distance : 20

198
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } T
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } T
Distance : 20

199
Tree	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } &&
Code	{ if ( ! isGet ( assignLhsChild , parent , false ) ) { return false ; } return false ; } &&
Distance : 20

========================================================================


========================================================================
Example Number: 14
Parent Code is: 
int indexOfDot = namespace . indexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Child code is: 
int indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/93/parent/src_com_google_javascript_jscomp_ProcessClosurePrimitives.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int gmt [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int gmt [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

1
Tree	int microsphereData [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int microsphereData [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

2
Tree	int setTimeZone [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setTimeZone [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

3
Tree	int VisibleForTesting [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int VisibleForTesting [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

4
Tree	int divisor.mant [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int divisor.mant [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

5
Tree	int FriendlyReturnValues [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int FriendlyReturnValues [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

6
Tree	int someUnusedStubbingThatQualifiesForWarning [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int someUnusedStubbingThatQualifiesForWarning [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

7
Tree	int uniDimIndex [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int uniDimIndex [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

8
Tree	int stringArray [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int stringArray [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

9
Tree	int properNumerator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int properNumerator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

10
Tree	int testFunctionCall2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testFunctionCall2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

11
Tree	int fieldWasInitializedUsingContructorArgs [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int fieldWasInitializedUsingContructorArgs [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

12
Tree	int messages [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int messages [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

13
Tree	int testFunctionBind5 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testFunctionBind5 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

14
Tree	int bundler [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int bundler [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

15
Tree	int isConstDeclaration [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isConstDeclaration [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

16
Tree	int testValidRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testValidRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

17
Tree	int testName3 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testName3 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

18
Tree	int testTaggedTemplateError [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testTaggedTemplateError [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

19
Tree	long namespace [] = namespace . indexOf ( CHAR_CONS ) ;
Code	long namespace [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 4

20
Tree	int testArrayAccess6 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testArrayAccess6 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

21
Tree	int testDivision [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testDivision [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

22
Tree	int DefaultTransformer [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DefaultTransformer [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

23
Tree	int measurements [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int measurements [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

24
Tree	int BooleanOutcomePair [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int BooleanOutcomePair [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

25
Tree	int hoistRoot [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int hoistRoot [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

26
Tree	int toText [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int toText [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

27
Tree	int throwsIOException [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int throwsIOException [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

28
Tree	int testMissingProperty30 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingProperty30 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

29
Tree	int isCommonJsImport [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isCommonJsImport [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

30
Tree	int dataInOrder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int dataInOrder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

31
Tree	int testNotViolation2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNotViolation2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

32
Tree	int HarmonicFunction [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int HarmonicFunction [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

33
Tree	int FACTORIALS [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int FACTORIALS [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

34
Tree	int testMissingModuleDependencySkipNonStrict [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingModuleDependencySkipNonStrict [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

35
Tree	int newVar [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newVar [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

36
Tree	int DeclaredTypeRegistry [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DeclaredTypeRegistry [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

37
Tree	int testNamespaceResetInLocalScope2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNamespaceResetInLocalScope2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

38
Tree	int notAMockPassedToWhenMethod [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int notAMockPassedToWhenMethod [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

39
Tree	int sIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int sIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

40
Tree	int ImageMapUtils [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ImageMapUtils [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

41
Tree	int testSwitchCase [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testSwitchCase [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

42
Tree	int stage1Passes [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int stage1Passes [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

43
Tree	int setMask [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setMask [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

44
Tree	int clusters [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int clusters [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

45
Tree	int inbits [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int inbits [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

46
Tree	int RemoveUnusedPolyfillsTest [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int RemoveUnusedPolyfillsTest [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

47
Tree	int getEnums [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getEnums [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

48
Tree	int DormandPrince54FieldStepInterpolator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DormandPrince54FieldStepInterpolator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

49
Tree	int minuendYear [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minuendYear [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

50
Tree	int lowerParam [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int lowerParam [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

51
Tree	int centers [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int centers [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

52
Tree	int Rotation [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Rotation [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

53
Tree	int isLhsOfAssign [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isLhsOfAssign [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

54
Tree	int DurationConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DurationConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

55
Tree	int validateRestParameters [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int validateRestParameters [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

56
Tree	int newInput [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newInput [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

57
Tree	int testRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

58
Tree	int testRedeclare_withES6Modules [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testRedeclare_withES6Modules [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

59
Tree	int Time [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Time [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

60
Tree	int testMissingProperty10 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingProperty10 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

61
Tree	int vd [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int vd [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

62
Tree	int numCalls [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int numCalls [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

63
Tree	int ko2D2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ko2D2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

64
Tree	int curN [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int curN [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

65
Tree	int doSanityChecks [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int doSanityChecks [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

66
Tree	int rh [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int rh [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

67
Tree	int historyIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int historyIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

68
Tree	int integers [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int integers [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

69
Tree	int AClass [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int AClass [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

70
Tree	int secondArgument [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int secondArgument [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

71
Tree	int es6config [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int es6config [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

72
Tree	int testPathologicalCaseThatsOkAnyway [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testPathologicalCaseThatsOkAnyway [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

73
Tree	int exitCodeValue [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int exitCodeValue [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

74
Tree	int IntervalConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int IntervalConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

75
Tree	int TestProblem5 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int TestProblem5 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

76
Tree	int removePropertyChangeListener [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int removePropertyChangeListener [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

77
Tree	int allowSourcelessWarnings [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int allowSourcelessWarnings [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

78
Tree	int newSize [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newSize [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

79
Tree	int setBaseItemLabelsVisible [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setBaseItemLabelsVisible [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

80
Tree	int testTransformationWithInvalidMaprecord [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testTransformationWithInvalidMaprecord [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

81
Tree	int YieldFinder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int YieldFinder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

82
Tree	int curMonth0 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int curMonth0 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

83
Tree	int rowOffset [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int rowOffset [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

84
Tree	int ExcludingURLClassLoaderBuilder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ExcludingURLClassLoaderBuilder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

85
Tree	int ObjectStreamClass [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ObjectStreamClass [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

86
Tree	int directions [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int directions [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

87
Tree	int endLimit [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int endLimit [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

88
Tree	int recordDeepStubMock [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int recordDeepStubMock [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

89
Tree	int TemplatizedType [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int TemplatizedType [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

90
Tree	int loc [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int loc [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

91
Tree	int lastHold [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int lastHold [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

92
Tree	int IdentifierToken [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int IdentifierToken [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

93
Tree	int clonedIndices [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int clonedIndices [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

94
Tree	int expectStringOrNumber [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int expectStringOrNumber [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

95
Tree	int matchedNodeInfo [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int matchedNodeInfo [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

96
Tree	int zipEntryPath [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int zipEntryPath [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

97
Tree	int putIfAbsent [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int putIfAbsent [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

98
Tree	int ODEIntegrator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ODEIntegrator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

99
Tree	int isLoggable [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isLoggable [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

100
Tree	int getTestName [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getTestName [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

101
Tree	int minadj [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minadj [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

102
Tree	int sgY2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int sgY2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

103
Tree	int PivotingStrategyInterface [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int PivotingStrategyInterface [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

104
Tree	int some_class_with_parametered_constructor [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int some_class_with_parametered_constructor [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

105
Tree	int shell [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int shell [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

106
Tree	int handleStep [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int handleStep [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

107
Tree	int multiplicand [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int multiplicand [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

108
Tree	int getOrderOfRegressors [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getOrderOfRegressors [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

109
Tree	int tpv2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int tpv2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

110
Tree	int isTypecheckingEnabled [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isTypecheckingEnabled [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

111
Tree	int q0 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int q0 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

112
Tree	int minusYears [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minusYears [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

113
Tree	int getErrorManager [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getErrorManager [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

114
Tree	int shutdown [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int shutdown [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

115
Tree	int ProcessDefinesTest [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ProcessDefinesTest [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

116
Tree	int omegaImaginaryForward [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int omegaImaginaryForward [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

117
Tree	int RealVectorFormat [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int RealVectorFormat [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

118
Tree	int NumericEntityUnescaper [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int NumericEntityUnescaper [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

119
Tree	int transpileUnmarkedBlock [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int transpileUnmarkedBlock [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

120
Tree	int JsonFileSpec [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int JsonFileSpec [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

121
Tree	int testNgInjectToArrowFunctions [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNgInjectToArrowFunctions [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

122
Tree	int scan [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int scan [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

123
Tree	int isMarkedConst [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isMarkedConst [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

124
Tree	int addGuard [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int addGuard [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

125
Tree	int Sigmoid [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Sigmoid [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

126
Tree	int ImportLogBean [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ImportLogBean [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

127
Tree	int MockBytecodeGenerator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int MockBytecodeGenerator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

128
Tree	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

129
Tree	int namespace = namespace . indexOf ( CHAR_CONS , continue; ) ;
Code	int namespace = namespace . indexOf ( CHAR_CONS , continue; ) ;
Distance : 4

130
Tree	double indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	double indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

131
Tree	boolean indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

132
Tree	int indexOfDot = namespace . lastIndexOf ( namespace , default: ) ;
Code	int indexOfDot = namespace . lastIndexOf ( namespace , default: ) ;
Distance : 3

133
Tree	int indexOfDot = namespace . lastIndexOf ( CHAR_CONS , break; ) ;
Code	int indexOfDot = namespace . lastIndexOf ( CHAR_CONS , break; ) ;
Distance : 2

134
Tree	void namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	void namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

135
Tree	byte indexOfDot = namespace . indexOf ( namespace , default: ) ;
Code	byte indexOfDot = namespace . indexOf ( namespace , default: ) ;
Distance : 5

136
Tree	byte indexOfDot = namespace . lastIndexOf ( namespace , super(); ) ;
Code	byte indexOfDot = namespace . lastIndexOf ( namespace , super(); ) ;
Distance : 4

137
Tree	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Distance : 3

138
Tree	short indexOfDot = namespace . indexOf ( CHAR_CONS , continue; ) ;
Code	short indexOfDot = namespace . indexOf ( CHAR_CONS , continue; ) ;
Distance : 4

139
Tree	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Code	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Distance : 3

140
Tree	short indexOfDot = namespace . indexOf ( namespace , null ) ;
Code	short indexOfDot = namespace . indexOf ( namespace , null ) ;
Distance : 5

141
Tree	int namespace = namespace . indexOf ( namespace , null ) ;
Code	int namespace = namespace . indexOf ( namespace , null ) ;
Distance : 5

142
Tree	float indexOfDot = namespace . indexOf ( namespace , break; ) ;
Code	float indexOfDot = namespace . indexOf ( namespace , break; ) ;
Distance : 5

143
Tree	float namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	float namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

144
Tree	char namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	char namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

145
Tree	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

146
Tree	float indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	float indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 4

147
Tree	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

148
Tree	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

149
Tree	long indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	long indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

150
Tree	byte indexOfDot = namespace . indexOf ( CHAR_CONS , break; ) ;
Code	byte indexOfDot = namespace . indexOf ( CHAR_CONS , break; ) ;
Distance : 4

151
Tree	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

152
Tree	long namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	long namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

153
Tree	void indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	void indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 4

154
Tree	boolean namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	boolean namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

155
Tree	int namespace = namespace . indexOf ( CHAR_CONS , return; ) ;
Code	int namespace = namespace . indexOf ( CHAR_CONS , return; ) ;
Distance : 4

156
Tree	double namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	double namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

157
Tree	boolean namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	boolean namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

158
Tree	double namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	double namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

159
Tree	double indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	double indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

160
Tree	short namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	short namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

161
Tree	boolean indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	boolean indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

162
Tree	char namespace = namespace . lastIndexOf ( CHAR_CONS ) ;
Code	char namespace = namespace . lastIndexOf ( CHAR_CONS ) ;
Distance : 2

163
Tree	short namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	short namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

164
Tree	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

165
Tree	char indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Code	char indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Distance : 4

166
Tree	float indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Code	float indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Distance : 4

167
Tree	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , super(); ) ;
Code	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , super(); ) ;
Distance : 3

168
Tree	char indexOfDot = namespace . lastIndexOf ( namespace , continue; ) ;
Code	char indexOfDot = namespace . lastIndexOf ( namespace , continue; ) ;
Distance : 4

169
Tree	short namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	short namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

170
Tree	long namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

171
Tree	long indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

172
Tree	long indexOfDot = namespace . indexOf ( CHAR_CONS , default: ) ;
Code	long indexOfDot = namespace . indexOf ( CHAR_CONS , default: ) ;
Distance : 4

173
Tree	long namespace = namespace . indexOf ( namespace , return; ) ;
Code	long namespace = namespace . indexOf ( namespace , return; ) ;
Distance : 6

174
Tree	void indexOfDot = namespace . indexOf ( namespace , break; ) ;
Code	void indexOfDot = namespace . indexOf ( namespace , break; ) ;
Distance : 5

175
Tree	void namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	void namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

176
Tree	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

177
Tree	char indexOfDot = namespace . lastIndexOf ( namespace , return; ) ;
Code	char indexOfDot = namespace . lastIndexOf ( namespace , return; ) ;
Distance : 4

178
Tree	long namespace = namespace . indexOf ( namespace , continue; ) ;
Code	long namespace = namespace . indexOf ( namespace , continue; ) ;
Distance : 6

179
Tree	byte namespace = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Code	byte namespace = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Distance : 4

180
Tree	void namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	void namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

181
Tree	float namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	float namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

182
Tree	int indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	int indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 3

183
Tree	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Code	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Distance : 3

184
Tree	long namespace = namespace . indexOf ( CHAR_CONS ) ;
Code	long namespace = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

185
Tree	short indexOfDot = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	short indexOfDot = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

186
Tree	void namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

187
Tree	int namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	int namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

188
Tree	double indexOfDot = namespace . indexOf ( namespace , return; ) ;
Code	double indexOfDot = namespace . indexOf ( namespace , return; ) ;
Distance : 5

189
Tree	boolean indexOfDot = namespace . indexOf ( namespace , return; ) ;
Code	boolean indexOfDot = namespace . indexOf ( namespace , return; ) ;
Distance : 5

190
Tree	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
Code	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
Distance : 1

191
Tree	short indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	short indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

192
Tree	void indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

193
Tree	long indexOfDot = namespace . indexOf ( namespace , continue; ) ;
Code	long indexOfDot = namespace . indexOf ( namespace , continue; ) ;
Distance : 5

194
Tree	int namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	int namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

195
Tree	long indexOfDot = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	long indexOfDot = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 4

196
Tree	long indexOfDot = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long indexOfDot = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 6

197
Tree	short indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	short indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

198
Tree	int namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	int namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

199
Tree	byte namespace = namespace . indexOf ( namespace , null ) ;
Code	byte namespace = namespace . indexOf ( namespace , null ) ;
Distance : 6

========================================================================


========================================================================
Example Number: 15
Parent Code is: 
int indexOfDot = namespace . indexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Child code is: 
int indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=indexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=indexOfDot}) (204{val==}) (32 (800{val=namespace}) (235{val=.}) (802{val=lastIndexOf}) (214{val=(}) (13{val=CHAR_CONS}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/92/parent/src_com_google_javascript_jscomp_ProcessClosurePrimitives.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int gmt [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int gmt [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

1
Tree	int microsphereData [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int microsphereData [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

2
Tree	int setTimeZone [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setTimeZone [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

3
Tree	int VisibleForTesting [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int VisibleForTesting [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

4
Tree	int divisor.mant [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int divisor.mant [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

5
Tree	int FriendlyReturnValues [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int FriendlyReturnValues [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

6
Tree	int someUnusedStubbingThatQualifiesForWarning [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int someUnusedStubbingThatQualifiesForWarning [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

7
Tree	int uniDimIndex [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int uniDimIndex [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

8
Tree	int stringArray [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int stringArray [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

9
Tree	int properNumerator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int properNumerator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

10
Tree	int testFunctionCall2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testFunctionCall2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

11
Tree	int fieldWasInitializedUsingContructorArgs [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int fieldWasInitializedUsingContructorArgs [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

12
Tree	int messages [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int messages [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

13
Tree	int testFunctionBind5 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testFunctionBind5 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

14
Tree	int bundler [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int bundler [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

15
Tree	int isConstDeclaration [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isConstDeclaration [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

16
Tree	int testValidRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testValidRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

17
Tree	int testName3 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testName3 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

18
Tree	int testTaggedTemplateError [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testTaggedTemplateError [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

19
Tree	long namespace [] = namespace . indexOf ( CHAR_CONS ) ;
Code	long namespace [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 4

20
Tree	int testArrayAccess6 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testArrayAccess6 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

21
Tree	int testDivision [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testDivision [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

22
Tree	int DefaultTransformer [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DefaultTransformer [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

23
Tree	int measurements [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int measurements [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

24
Tree	int BooleanOutcomePair [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int BooleanOutcomePair [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

25
Tree	int hoistRoot [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int hoistRoot [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

26
Tree	int toText [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int toText [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

27
Tree	int throwsIOException [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int throwsIOException [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

28
Tree	int testMissingProperty30 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingProperty30 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

29
Tree	int isCommonJsImport [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isCommonJsImport [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

30
Tree	int dataInOrder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int dataInOrder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

31
Tree	int testNotViolation2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNotViolation2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

32
Tree	int HarmonicFunction [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int HarmonicFunction [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

33
Tree	int FACTORIALS [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int FACTORIALS [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

34
Tree	int testMissingModuleDependencySkipNonStrict [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingModuleDependencySkipNonStrict [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

35
Tree	int newVar [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newVar [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

36
Tree	int DeclaredTypeRegistry [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DeclaredTypeRegistry [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

37
Tree	int testNamespaceResetInLocalScope2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNamespaceResetInLocalScope2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

38
Tree	int notAMockPassedToWhenMethod [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int notAMockPassedToWhenMethod [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

39
Tree	int sIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int sIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

40
Tree	int ImageMapUtils [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ImageMapUtils [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

41
Tree	int testSwitchCase [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testSwitchCase [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

42
Tree	int stage1Passes [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int stage1Passes [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

43
Tree	int setMask [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setMask [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

44
Tree	int clusters [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int clusters [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

45
Tree	int inbits [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int inbits [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

46
Tree	int RemoveUnusedPolyfillsTest [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int RemoveUnusedPolyfillsTest [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

47
Tree	int getEnums [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getEnums [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

48
Tree	int DormandPrince54FieldStepInterpolator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DormandPrince54FieldStepInterpolator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

49
Tree	int minuendYear [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minuendYear [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

50
Tree	int lowerParam [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int lowerParam [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

51
Tree	int centers [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int centers [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

52
Tree	int Rotation [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Rotation [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

53
Tree	int isLhsOfAssign [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isLhsOfAssign [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

54
Tree	int DurationConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int DurationConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

55
Tree	int validateRestParameters [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int validateRestParameters [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

56
Tree	int newInput [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newInput [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

57
Tree	int testRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testRestParameter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

58
Tree	int testRedeclare_withES6Modules [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testRedeclare_withES6Modules [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

59
Tree	int Time [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Time [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

60
Tree	int testMissingProperty10 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testMissingProperty10 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

61
Tree	int vd [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int vd [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

62
Tree	int numCalls [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int numCalls [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

63
Tree	int ko2D2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ko2D2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

64
Tree	int curN [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int curN [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

65
Tree	int doSanityChecks [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int doSanityChecks [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

66
Tree	int rh [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int rh [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

67
Tree	int historyIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int historyIdx [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

68
Tree	int integers [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int integers [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

69
Tree	int AClass [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int AClass [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

70
Tree	int secondArgument [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int secondArgument [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

71
Tree	int es6config [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int es6config [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

72
Tree	int testPathologicalCaseThatsOkAnyway [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testPathologicalCaseThatsOkAnyway [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

73
Tree	int exitCodeValue [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int exitCodeValue [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

74
Tree	int IntervalConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int IntervalConverter [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

75
Tree	int TestProblem5 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int TestProblem5 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

76
Tree	int removePropertyChangeListener [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int removePropertyChangeListener [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

77
Tree	int allowSourcelessWarnings [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int allowSourcelessWarnings [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

78
Tree	int newSize [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int newSize [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

79
Tree	int setBaseItemLabelsVisible [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int setBaseItemLabelsVisible [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

80
Tree	int testTransformationWithInvalidMaprecord [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testTransformationWithInvalidMaprecord [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

81
Tree	int YieldFinder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int YieldFinder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

82
Tree	int curMonth0 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int curMonth0 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

83
Tree	int rowOffset [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int rowOffset [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

84
Tree	int ExcludingURLClassLoaderBuilder [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ExcludingURLClassLoaderBuilder [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

85
Tree	int ObjectStreamClass [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ObjectStreamClass [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

86
Tree	int directions [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int directions [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

87
Tree	int endLimit [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int endLimit [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

88
Tree	int recordDeepStubMock [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int recordDeepStubMock [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

89
Tree	int TemplatizedType [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int TemplatizedType [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

90
Tree	int loc [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int loc [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

91
Tree	int lastHold [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int lastHold [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

92
Tree	int IdentifierToken [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int IdentifierToken [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

93
Tree	int clonedIndices [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int clonedIndices [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

94
Tree	int expectStringOrNumber [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int expectStringOrNumber [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

95
Tree	int matchedNodeInfo [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int matchedNodeInfo [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

96
Tree	int zipEntryPath [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int zipEntryPath [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

97
Tree	int putIfAbsent [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int putIfAbsent [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

98
Tree	int ODEIntegrator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ODEIntegrator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

99
Tree	int isLoggable [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isLoggable [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

100
Tree	int getTestName [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getTestName [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

101
Tree	int minadj [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minadj [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

102
Tree	int sgY2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int sgY2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

103
Tree	int PivotingStrategyInterface [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int PivotingStrategyInterface [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

104
Tree	int some_class_with_parametered_constructor [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int some_class_with_parametered_constructor [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

105
Tree	int shell [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int shell [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

106
Tree	int handleStep [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int handleStep [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

107
Tree	int multiplicand [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int multiplicand [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

108
Tree	int getOrderOfRegressors [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getOrderOfRegressors [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

109
Tree	int tpv2 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int tpv2 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

110
Tree	int isTypecheckingEnabled [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isTypecheckingEnabled [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

111
Tree	int q0 [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int q0 [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

112
Tree	int minusYears [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int minusYears [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

113
Tree	int getErrorManager [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int getErrorManager [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

114
Tree	int shutdown [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int shutdown [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

115
Tree	int ProcessDefinesTest [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ProcessDefinesTest [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

116
Tree	int omegaImaginaryForward [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int omegaImaginaryForward [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

117
Tree	int RealVectorFormat [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int RealVectorFormat [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

118
Tree	int NumericEntityUnescaper [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int NumericEntityUnescaper [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

119
Tree	int transpileUnmarkedBlock [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int transpileUnmarkedBlock [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

120
Tree	int JsonFileSpec [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int JsonFileSpec [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

121
Tree	int testNgInjectToArrowFunctions [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int testNgInjectToArrowFunctions [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

122
Tree	int scan [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int scan [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

123
Tree	int isMarkedConst [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int isMarkedConst [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

124
Tree	int addGuard [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int addGuard [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

125
Tree	int Sigmoid [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int Sigmoid [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

126
Tree	int ImportLogBean [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int ImportLogBean [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

127
Tree	int MockBytecodeGenerator [] = namespace . indexOf ( CHAR_CONS ) ;
Code	int MockBytecodeGenerator [] = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

128
Tree	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

129
Tree	int namespace = namespace . indexOf ( CHAR_CONS , continue; ) ;
Code	int namespace = namespace . indexOf ( CHAR_CONS , continue; ) ;
Distance : 4

130
Tree	double indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	double indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

131
Tree	boolean indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

132
Tree	int indexOfDot = namespace . lastIndexOf ( namespace , default: ) ;
Code	int indexOfDot = namespace . lastIndexOf ( namespace , default: ) ;
Distance : 3

133
Tree	int indexOfDot = namespace . lastIndexOf ( CHAR_CONS , break; ) ;
Code	int indexOfDot = namespace . lastIndexOf ( CHAR_CONS , break; ) ;
Distance : 2

134
Tree	void namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	void namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

135
Tree	byte indexOfDot = namespace . indexOf ( namespace , default: ) ;
Code	byte indexOfDot = namespace . indexOf ( namespace , default: ) ;
Distance : 5

136
Tree	byte indexOfDot = namespace . lastIndexOf ( namespace , super(); ) ;
Code	byte indexOfDot = namespace . lastIndexOf ( namespace , super(); ) ;
Distance : 4

137
Tree	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Code	boolean indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Distance : 3

138
Tree	short indexOfDot = namespace . indexOf ( CHAR_CONS , continue; ) ;
Code	short indexOfDot = namespace . indexOf ( CHAR_CONS , continue; ) ;
Distance : 4

139
Tree	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Code	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , return; ) ;
Distance : 3

140
Tree	short indexOfDot = namespace . indexOf ( namespace , null ) ;
Code	short indexOfDot = namespace . indexOf ( namespace , null ) ;
Distance : 5

141
Tree	int namespace = namespace . indexOf ( namespace , null ) ;
Code	int namespace = namespace . indexOf ( namespace , null ) ;
Distance : 5

142
Tree	float indexOfDot = namespace . indexOf ( namespace , break; ) ;
Code	float indexOfDot = namespace . indexOf ( namespace , break; ) ;
Distance : 5

143
Tree	float namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	float namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

144
Tree	char namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	char namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

145
Tree	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

146
Tree	float indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	float indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 4

147
Tree	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

148
Tree	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

149
Tree	long indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	long indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

150
Tree	byte indexOfDot = namespace . indexOf ( CHAR_CONS , break; ) ;
Code	byte indexOfDot = namespace . indexOf ( CHAR_CONS , break; ) ;
Distance : 4

151
Tree	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Code	double indexOfDot = namespace . lastIndexOf ( CHAR_CONS , continue; ) ;
Distance : 3

152
Tree	long namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	long namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

153
Tree	void indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	void indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 4

154
Tree	boolean namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	boolean namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

155
Tree	int namespace = namespace . indexOf ( CHAR_CONS , return; ) ;
Code	int namespace = namespace . indexOf ( CHAR_CONS , return; ) ;
Distance : 4

156
Tree	double namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	double namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

157
Tree	boolean namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	boolean namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

158
Tree	double namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	double namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

159
Tree	double indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	double indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

160
Tree	short namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	short namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

161
Tree	boolean indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	boolean indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

162
Tree	char namespace = namespace . lastIndexOf ( CHAR_CONS ) ;
Code	char namespace = namespace . lastIndexOf ( CHAR_CONS ) ;
Distance : 2

163
Tree	short namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	short namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

164
Tree	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

165
Tree	char indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Code	char indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Distance : 4

166
Tree	float indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Code	float indexOfDot = namespace . indexOf ( CHAR_CONS , null ) ;
Distance : 4

167
Tree	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , super(); ) ;
Code	long indexOfDot = namespace . lastIndexOf ( CHAR_CONS , super(); ) ;
Distance : 3

168
Tree	char indexOfDot = namespace . lastIndexOf ( namespace , continue; ) ;
Code	char indexOfDot = namespace . lastIndexOf ( namespace , continue; ) ;
Distance : 4

169
Tree	short namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	short namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

170
Tree	long namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

171
Tree	long indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

172
Tree	long indexOfDot = namespace . indexOf ( CHAR_CONS , default: ) ;
Code	long indexOfDot = namespace . indexOf ( CHAR_CONS , default: ) ;
Distance : 4

173
Tree	long namespace = namespace . indexOf ( namespace , return; ) ;
Code	long namespace = namespace . indexOf ( namespace , return; ) ;
Distance : 6

174
Tree	void indexOfDot = namespace . indexOf ( namespace , break; ) ;
Code	void indexOfDot = namespace . indexOf ( namespace , break; ) ;
Distance : 5

175
Tree	void namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	void namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 6

176
Tree	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	float namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 8

177
Tree	char indexOfDot = namespace . lastIndexOf ( namespace , return; ) ;
Code	char indexOfDot = namespace . lastIndexOf ( namespace , return; ) ;
Distance : 4

178
Tree	long namespace = namespace . indexOf ( namespace , continue; ) ;
Code	long namespace = namespace . indexOf ( namespace , continue; ) ;
Distance : 6

179
Tree	byte namespace = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Code	byte namespace = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Distance : 4

180
Tree	void namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	void namespace = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

181
Tree	float namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	float namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 5

182
Tree	int indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Code	int indexOfDot = namespace . indexOf ( CHAR_CONS , super(); ) ;
Distance : 3

183
Tree	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Code	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS , null ) ;
Distance : 3

184
Tree	long namespace = namespace . indexOf ( CHAR_CONS ) ;
Code	long namespace = namespace . indexOf ( CHAR_CONS ) ;
Distance : 3

185
Tree	short indexOfDot = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	short indexOfDot = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

186
Tree	void namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void namespace = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

187
Tree	int namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	int namespace = namespace . indexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 5

188
Tree	double indexOfDot = namespace . indexOf ( namespace , return; ) ;
Code	double indexOfDot = namespace . indexOf ( namespace , return; ) ;
Distance : 5

189
Tree	boolean indexOfDot = namespace . indexOf ( namespace , return; ) ;
Code	boolean indexOfDot = namespace . indexOf ( namespace , return; ) ;
Distance : 5

190
Tree	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
Code	char indexOfDot = namespace . lastIndexOf ( CHAR_CONS ) ;
Distance : 1

191
Tree	short indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	short indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

192
Tree	void indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	void indexOfDot = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

193
Tree	long indexOfDot = namespace . indexOf ( namespace , continue; ) ;
Code	long indexOfDot = namespace . indexOf ( namespace , continue; ) ;
Distance : 5

194
Tree	int namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	int namespace = namespace . indexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 7

195
Tree	long indexOfDot = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Code	long indexOfDot = namespace . lastIndexOf ( NUMBER_CONSTANT , NUMBER_CONSTANT ) ;
Distance : 4

196
Tree	long indexOfDot = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Code	long indexOfDot = namespace . lastIndexOf ( STRING_CONSTANT , STRING_CONSTANT , namespace ) ;
Distance : 6

197
Tree	short indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Code	short indexOfDot = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

198
Tree	int namespace = namespace . lastIndexOf ( namespace , null ) ;
Code	int namespace = namespace . lastIndexOf ( namespace , null ) ;
Distance : 4

199
Tree	byte namespace = namespace . indexOf ( namespace , null ) ;
Code	byte namespace = namespace . indexOf ( namespace , null ) ;
Distance : 6

========================================================================


========================================================================
Example Number: 16
Parent Code is: 
! type . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
-------------------------------------------------------------------------------
Child code is: 
! type . restrictByNotNullOrUndefined () . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (800{val=type}) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (38 (207{val=!}) (32 (32 (800{val=type}) (235{val=.}) (802{val=restrictByNotNullOrUndefined}) (216{val=()})) (235{val=.}) (802{val=isSubtype}) (214{val=(}) (32 (800{val=typeRegistry}) (235{val=.}) (802{val=getNativeType}) (214{val=(}) (800{val=OBJECT_TYPE}) (215{val=)})) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/90/parent/src_com_google_javascript_jscomp_FunctionTypeBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 6

1
Tree	! OBJECT_TYPE . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! OBJECT_TYPE . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

2
Tree	! isSubtype ( type . isSubtype ( typeRegistry ) )
Code	! isSubtype ( type . isSubtype ( typeRegistry ) )
Distance : 8

3
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , typeRegistry )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , typeRegistry )
Distance : 7

4
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 6

5
Tree	! type . isSubtype ( type . isSubtype ( typeRegistry ) , OBJECT_TYPE )
Code	! type . isSubtype ( type . isSubtype ( typeRegistry ) , OBJECT_TYPE )
Distance : 7

6
Tree	! type . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) , type )
Code	! type . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) , type )
Distance : 7

7
Tree	! type . getNativeType ( type . restrictByNotNullOrUndefined ( type ) )
Code	! type . getNativeType ( type . restrictByNotNullOrUndefined ( type ) )
Distance : 7

8
Tree	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Code	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Distance : 8

9
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) , type )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) , type )
Distance : 7

10
Tree	! type . getNativeType ( OBJECT_TYPE . getNativeType ( type ) , typeRegistry )
Code	! type . getNativeType ( OBJECT_TYPE . getNativeType ( type ) , typeRegistry )
Distance : 8

11
Tree	! OBJECT_TYPE . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! OBJECT_TYPE . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 8

12
Tree	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , type )
Code	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , type )
Distance : 7

13
Tree	! type . restrictByNotNullOrUndefined ( type . getNativeType ( type ) , typeRegistry )
Code	! type . restrictByNotNullOrUndefined ( type . getNativeType ( type ) , typeRegistry )
Distance : 7

14
Tree	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( typeRegistry ) , typeRegistry )
Code	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( typeRegistry ) , typeRegistry )
Distance : 7

15
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( type ) , OBJECT_TYPE )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( type ) , OBJECT_TYPE )
Distance : 7

16
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Distance : 7

17
Tree	! typeRegistry . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Code	! typeRegistry . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Distance : 6

18
Tree	! type . isSubtype ( type . isSubtype ( type ) )
Code	! type . isSubtype ( type . isSubtype ( type ) )
Distance : 6

19
Tree	! OBJECT_TYPE . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! OBJECT_TYPE . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 7

20
Tree	! OBJECT_TYPE . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! OBJECT_TYPE . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 6

21
Tree	! type . isSubtype ( OBJECT_TYPE . getNativeType ( type ) , typeRegistry )
Code	! type . isSubtype ( OBJECT_TYPE . getNativeType ( type ) , typeRegistry )
Distance : 7

22
Tree	! type . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) , type )
Code	! type . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) , type )
Distance : 7

23
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type ) . getNativeType ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( type ) . getNativeType ()
Distance : 10

24
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . getNativeType ()
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . getNativeType ()
Distance : 10

25
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . getNativeType ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 7

26
Tree	! getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Code	! getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Distance : 9

27
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) )
Distance : 6

28
Tree	! restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Code	! restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Distance : 8

29
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 6

30
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 6

31
Tree	! getNativeType ( OBJECT_TYPE . isSubtype ( type ) )
Code	! getNativeType ( OBJECT_TYPE . isSubtype ( type ) )
Distance : 9

32
Tree	! typeRegistry . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! typeRegistry . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 6

33
Tree	! restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( type ) )
Code	! restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( type ) )
Distance : 8

34
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

35
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! typeRegistry . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 7

36
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Distance : 6

37
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Distance : 6

38
Tree	! isSubtype ( type . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! isSubtype ( type . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 8

39
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 6

40
Tree	! type . isSubtype ( type . restrictByNotNullOrUndefined ( type ) )
Code	! type . isSubtype ( type . restrictByNotNullOrUndefined ( type ) )
Distance : 6

41
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . getNativeType ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . getNativeType ()
Distance : 10

42
Tree	! type . getNativeType ( type . isSubtype ( typeRegistry ) , OBJECT_TYPE )
Code	! type . getNativeType ( type . isSubtype ( typeRegistry ) , OBJECT_TYPE )
Distance : 7

43
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Distance : 6

44
Tree	! type . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) , type )
Code	! type . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) , type )
Distance : 8

45
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) , type )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) , type )
Distance : 7

46
Tree	! typeRegistry . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! typeRegistry . isSubtype ( typeRegistry . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 6

47
Tree	! type . isSubtype ( OBJECT_TYPE . getNativeType ( type ) )
Code	! type . isSubtype ( OBJECT_TYPE . getNativeType ( type ) )
Distance : 5

48
Tree	! type . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Code	! type . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Distance : 8

49
Tree	! type . getNativeType ( type ) . restrictByNotNullOrUndefined ()
Code	! type . getNativeType ( type ) . restrictByNotNullOrUndefined ()
Distance : 11

50
Tree	! getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 8

51
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) , OBJECT_TYPE )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) , OBJECT_TYPE )
Distance : 7

52
Tree	! type . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Code	! type . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Distance : 7

53
Tree	! type . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , type )
Code	! type . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , type )
Distance : 6

54
Tree	! type . isSubtype ( type . getNativeType ( type ) , OBJECT_TYPE )
Code	! type . isSubtype ( type . getNativeType ( type ) , OBJECT_TYPE )
Distance : 7

55
Tree	! getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 8

56
Tree	! restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 7

57
Tree	! restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 7

58
Tree	! getNativeType ( type . getNativeType ( typeRegistry ) )
Code	! getNativeType ( type . getNativeType ( typeRegistry ) )
Distance : 8

59
Tree	! type . getNativeType ( type . getNativeType ( OBJECT_TYPE ) , typeRegistry )
Code	! type . getNativeType ( type . getNativeType ( OBJECT_TYPE ) , typeRegistry )
Distance : 7

60
Tree	! type . getNativeType ( type ) . isSubtype ()
Code	! type . getNativeType ( type ) . isSubtype ()
Distance : 11

61
Tree	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( typeRegistry ) )
Code	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( typeRegistry ) )
Distance : 6

62
Tree	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

63
Tree	! getNativeType ( typeRegistry . isSubtype ( type ) )
Code	! getNativeType ( typeRegistry . isSubtype ( type ) )
Distance : 8

64
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 5

65
Tree	! isSubtype ( type . getNativeType ( type ) )
Code	! isSubtype ( type . getNativeType ( type ) )
Distance : 7

66
Tree	! type . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Code	! type . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Distance : 7

67
Tree	! isSubtype ( OBJECT_TYPE . isSubtype ( typeRegistry ) )
Code	! isSubtype ( OBJECT_TYPE . isSubtype ( typeRegistry ) )
Distance : 8

68
Tree	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

69
Tree	! type . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) , type )
Code	! type . restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) , type )
Distance : 7

70
Tree	! type . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Code	! type . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Distance : 8

71
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( OBJECT_TYPE ) , typeRegistry )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( OBJECT_TYPE ) , typeRegistry )
Distance : 7

72
Tree	! isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 8

73
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 6

74
Tree	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Code	! typeRegistry . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Distance : 7

75
Tree	! type . getNativeType ( type . isSubtype ( type ) )
Code	! type . getNativeType ( type . isSubtype ( type ) )
Distance : 7

76
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

77
Tree	! type . isSubtype ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , typeRegistry )
Code	! type . isSubtype ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , typeRegistry )
Distance : 7

78
Tree	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 6

79
Tree	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( typeRegistry ) )
Code	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( typeRegistry ) )
Distance : 7

80
Tree	! OBJECT_TYPE . isSubtype ( type . getNativeType ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . isSubtype ( type . getNativeType ( OBJECT_TYPE ) )
Distance : 5

81
Tree	! type . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Code	! type . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Distance : 6

82
Tree	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 8

83
Tree	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! typeRegistry . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

84
Tree	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) , type )
Code	! type . restrictByNotNullOrUndefined ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) , type )
Distance : 7

85
Tree	! type . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Code	! type . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry ) , OBJECT_TYPE )
Distance : 8

86
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Distance : 6

87
Tree	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( typeRegistry ) )
Code	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( typeRegistry ) )
Distance : 6

88
Tree	! restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Code	! restrictByNotNullOrUndefined ( type . getNativeType ( typeRegistry ) )
Distance : 7

89
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Distance : 6

90
Tree	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 7

91
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) c
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) c
Distance : 6

92
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Exception
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Exception
Distance : 6

93
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) {}
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) {}
Distance : 6

94
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) boolean
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) boolean
Distance : 6

95
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Preconditions
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Preconditions
Distance : 6

96
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) array
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) array
Distance : 6

97
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) f
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) f
Distance : 6

98
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) mock
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) mock
Distance : 6

99
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) verify
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) verify
Distance : 6

100
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) MathRuntimeException
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) MathRuntimeException
Distance : 6

101
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ParamChecks
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ParamChecks
Distance : 6

102
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) [
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) [
Distance : 6

103
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) -
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) -
Distance : 6

104
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) class
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) class
Distance : 6

105
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Integer
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Integer
Distance : 6

106
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) testSame
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) testSame
Distance : 6

107
Tree	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

108
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Code	! typeRegistry . getNativeType ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Distance : 10

109
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Override
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Override
Distance : 6

110
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) v
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) v
Distance : 6

111
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Node
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Node
Distance : 6

112
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) &&
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) &&
Distance : 6

113
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) mode
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) mode
Distance : 6

114
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Object
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) Object
Distance : 6

115
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) expected
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) expected
Distance : 6

116
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) str
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) str
Distance : 6

117
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) x
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) x
Distance : 6

118
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) LINE_JOINER
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) LINE_JOINER
Distance : 6

119
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) parent
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) parent
Distance : 6

120
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ]
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ]
Distance : 6

121
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ArrayList
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) ArrayList
Distance : 6

122
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) t
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) t
Distance : 6

123
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) IllegalArgumentException
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) IllegalArgumentException
Distance : 6

124
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) invocation
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) invocation
Distance : 6

125
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) FastMath
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) FastMath
Distance : 6

126
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) field
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) field
Distance : 6

127
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) reportCodeChange
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) reportCodeChange
Distance : 6

128
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) name
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) name
Distance : 6

129
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) createIllegalArgumentException
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) createIllegalArgumentException
Distance : 6

130
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) .
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) .
Distance : 6

131
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) true
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) true
Distance : 6

132
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type ) . restrictByNotNullOrUndefined ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( type ) . restrictByNotNullOrUndefined ()
Distance : 11

133
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE ) . getNativeType ()
Code	! typeRegistry . getNativeType ( OBJECT_TYPE ) . getNativeType ()
Distance : 10

134
Tree	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( type ) )
Code	! OBJECT_TYPE . isSubtype ( typeRegistry . isSubtype ( type ) )
Distance : 6

135
Tree	! typeRegistry . isSubtype ( type ) . getNativeType ()
Code	! typeRegistry . isSubtype ( type ) . getNativeType ()
Distance : 10

136
Tree	! typeRegistry . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

137
Tree	! restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( type ) )
Code	! restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( type ) )
Distance : 8

138
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . isSubtype ( OBJECT_TYPE ) )
Distance : 6

139
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 6

140
Tree	! typeRegistry . isSubtype ( type . getNativeType ( typeRegistry ) )
Code	! typeRegistry . isSubtype ( type . getNativeType ( typeRegistry ) )
Distance : 6

141
Tree	! typeRegistry . isSubtype ( typeRegistry . isSubtype ( type ) )
Code	! typeRegistry . isSubtype ( typeRegistry . isSubtype ( type ) )
Distance : 6

142
Tree	! getNativeType ( type . isSubtype ( type ) )
Code	! getNativeType ( type . isSubtype ( type ) )
Distance : 9

143
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Distance : 11

144
Tree	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 7

145
Tree	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . getNativeType ( typeRegistry ) )
Distance : 6

146
Tree	! typeRegistry . isSubtype ( OBJECT_TYPE ) . getNativeType ()
Code	! typeRegistry . isSubtype ( OBJECT_TYPE ) . getNativeType ()
Distance : 10

147
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 7

148
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

149
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . isSubtype ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . isSubtype ()
Distance : 11

150
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

151
Tree	! typeRegistry . getNativeType ( type . getNativeType ( typeRegistry ) )
Code	! typeRegistry . getNativeType ( type . getNativeType ( typeRegistry ) )
Distance : 7

152
Tree	! typeRegistry . getNativeType ( typeRegistry . isSubtype ( type ) )
Code	! typeRegistry . getNativeType ( typeRegistry . isSubtype ( type ) )
Distance : 7

153
Tree	! typeRegistry . isSubtype ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . isSubtype ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 6

154
Tree	! restrictByNotNullOrUndefined ( type . isSubtype ( type ) )
Code	! restrictByNotNullOrUndefined ( type . isSubtype ( type ) )
Distance : 8

155
Tree	! getNativeType ( type . restrictByNotNullOrUndefined ( type ) )
Code	! getNativeType ( type . restrictByNotNullOrUndefined ( type ) )
Distance : 9

156
Tree	! typeRegistry . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Code	! typeRegistry . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( type ) )
Distance : 7

157
Tree	! typeRegistry . getNativeType ( type . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . getNativeType ( type . isSubtype ( OBJECT_TYPE ) )
Distance : 7

158
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . restrictByNotNullOrUndefined ()
Distance : 11

159
Tree	! typeRegistry . getNativeType ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! typeRegistry . getNativeType ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 7

160
Tree	! isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Code	! isSubtype ( OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) )
Distance : 8

161
Tree	! typeRegistry . getNativeType ( OBJECT_TYPE ) . isSubtype ()
Code	! typeRegistry . getNativeType ( OBJECT_TYPE ) . isSubtype ()
Distance : 10

162
Tree	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) . getNativeType ()
Code	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) . getNativeType ()
Distance : 10

163
Tree	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 7

164
Tree	! typeRegistry . restrictByNotNullOrUndefined ( type ) . isSubtype ()
Code	! typeRegistry . restrictByNotNullOrUndefined ( type ) . isSubtype ()
Distance : 11

165
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

166
Tree	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( type ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( type ) )
Distance : 6

167
Tree	! typeRegistry . isSubtype ( type . isSubtype ( OBJECT_TYPE ) )
Code	! typeRegistry . isSubtype ( type . isSubtype ( OBJECT_TYPE ) )
Distance : 6

168
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . isSubtype ()
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( OBJECT_TYPE ) . isSubtype ()
Distance : 11

169
Tree	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( type ) )
Code	! OBJECT_TYPE . getNativeType ( typeRegistry . isSubtype ( type ) )
Distance : 7

170
Tree	! type . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
Code	! type . getNativeType ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
Distance : 4

171
Tree	! isSubtype ( OBJECT_TYPE . isSubtype ( type ) )
Code	! isSubtype ( OBJECT_TYPE . isSubtype ( type ) )
Distance : 8

172
Tree	! OBJECT_TYPE . getNativeType ( type . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . getNativeType ( type . getNativeType ( typeRegistry ) )
Distance : 7

173
Tree	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Code	! OBJECT_TYPE . isSubtype ( OBJECT_TYPE . isSubtype ( OBJECT_TYPE ) )
Distance : 6

174
Tree	! typeRegistry . getNativeType ( type ) . getNativeType ()
Code	! typeRegistry . getNativeType ( type ) . getNativeType ()
Distance : 11

175
Tree	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) . getNativeType ()
Code	! OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) . getNativeType ()
Distance : 11

176
Tree	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) . getNativeType ()
Code	! OBJECT_TYPE . restrictByNotNullOrUndefined ( type ) . getNativeType ()
Distance : 10

177
Tree	! OBJECT_TYPE . isSubtype ( type . getNativeType ( typeRegistry ) )
Code	! OBJECT_TYPE . isSubtype ( type . getNativeType ( typeRegistry ) )
Distance : 6

178
Tree	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) (
Code	! restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) ) (
Distance : 6

179
Tree	! type . getNativeType ( OBJECT_TYPE . getNativeType ( type ) )
Code	! type . getNativeType ( OBJECT_TYPE . getNativeType ( type ) )
Distance : 6

180
Tree	! restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Code	! restrictByNotNullOrUndefined ( typeRegistry . isSubtype ( type ) )
Distance : 7

181
Tree	! restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) )
Code	! restrictByNotNullOrUndefined ( OBJECT_TYPE . getNativeType ( OBJECT_TYPE ) )
Distance : 6

182
Tree	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
Code	! typeRegistry . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) )
Distance : 4

183
Tree	! type . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! type . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 6

184
Tree	! type . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! type . getNativeType ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

185
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( typeRegistry ) , typeRegistry )
Distance : 6

186
Tree	! isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Code	! isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) )
Distance : 6

187
Tree	! type . isSubtype ( typeRegistry . isSubtype ( typeRegistry ) )
Code	! type . isSubtype ( typeRegistry . isSubtype ( typeRegistry ) )
Distance : 5

188
Tree	! type . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! type . isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 6

189
Tree	! type . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! type . isSubtype ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 6

190
Tree	! isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) )
Code	! isSubtype ( typeRegistry . isSubtype ( OBJECT_TYPE ) )
Distance : 6

191
Tree	! type . isSubtype ( type . getNativeType ( OBJECT_TYPE ) )
Code	! type . isSubtype ( type . getNativeType ( OBJECT_TYPE ) )
Distance : 4

192
Tree	! type . getNativeType ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! type . getNativeType ( typeRegistry . isSubtype ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 7

193
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . getNativeType ( OBJECT_TYPE ) , type )
Distance : 5

194
Tree	! type . isSubtype ( typeRegistry . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Code	! type . isSubtype ( typeRegistry . getNativeType ( typeRegistry ) , OBJECT_TYPE )
Distance : 6

195
Tree	! type . getNativeType ( type . getNativeType ( OBJECT_TYPE ) )
Code	! type . getNativeType ( type . getNativeType ( OBJECT_TYPE ) )
Distance : 5

196
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( typeRegistry ) )
Distance : 5

197
Tree	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Code	! type . restrictByNotNullOrUndefined ( typeRegistry . restrictByNotNullOrUndefined ( OBJECT_TYPE ) , OBJECT_TYPE )
Distance : 6

198
Tree	! type . isSubtype ( typeRegistry . getNativeType ( type ) )
Code	! type . isSubtype ( typeRegistry . getNativeType ( type ) )
Distance : 4

199
Tree	! type . getNativeType ( typeRegistry . isSubtype ( typeRegistry ) )
Code	! type . getNativeType ( typeRegistry . isSubtype ( typeRegistry ) )
Distance : 6

========================================================================


========================================================================
Example Number: 17
Parent Code is: 
return true ;
-------------------------------------------------------------------------------
Child code is: 
return false ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (9{val=true}) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (9{val=false}) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/86/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return true ;
Code	return true ;
Distance : 1

1
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + ADDITIVE_MODE ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + ADDITIVE_MODE ;
Distance : 7

2
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + node ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + node ;
Distance : 7

3
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + dateFormat ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + dateFormat ;
Distance : 7

4
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + ref ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + ref ;
Distance : 7

5
Tree	return STRING_CONSTANT + fn + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + fn + STRING_CONSTANT + callNode ;
Distance : 7

6
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + n ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + n ;
Distance : 7

7
Tree	return FastFourierTransformer . abs () ? null : S ;
Code	return FastFourierTransformer . abs () ? null : S ;
Distance : 8

8
Tree	return STRING_CONSTANT + tableau + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + tableau + STRING_CONSTANT + callNode ;
Distance : 7

9
Tree	return STRING_CONSTANT + obj1 + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + obj1 + STRING_CONSTANT + callNode ;
Distance : 7

10
Tree	return STRING_CONSTANT + child + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + child + STRING_CONSTANT + callNode ;
Distance : 7

11
Tree	return subtree ;
Code	return subtree ;
Distance : 1

12
Tree	return parent . abs () ? null : obj1 ;
Code	return parent . abs () ? null : obj1 ;
Distance : 8

13
Tree	return dateFormat ;
Code	return dateFormat ;
Distance : 1

14
Tree	return Strings ;
Code	return Strings ;
Distance : 1

15
Tree	return STRING_CONSTANT + directly + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + directly + STRING_CONSTANT + callNode ;
Distance : 7

16
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + cond ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + cond ;
Distance : 7

17
Tree	return parent ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ;
Code	return parent ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ;
Distance : 5

18
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + randomData ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + randomData ;
Distance : 7

19
Tree	return point ;
Code	return point ;
Distance : 1

20
Tree	return FastFourierTransformer . clone () ? null : parent ;
Code	return FastFourierTransformer . clone () ? null : parent ;
Distance : 8

21
Tree	return this == callNode ;
Code	return this == callNode ;
Distance : 3

22
Tree	return fn ;
Code	return fn ;
Distance : 1

23
Tree	return ArithmeticUtils ? f.length : FunctionFlavor.NORMAL ;
Code	return ArithmeticUtils ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

24
Tree	return STRING_CONSTANT + scopeRoot + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + scopeRoot + STRING_CONSTANT + callNode ;
Distance : 7

25
Tree	return STRING_CONSTANT + ADDITIVE_MODE + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + ADDITIVE_MODE + STRING_CONSTANT + callNode ;
Distance : 7

26
Tree	return STRING_CONSTANT + parent + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + parent + STRING_CONSTANT + callNode ;
Distance : 7

27
Tree	return FastFourierTransformer ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ;
Code	return FastFourierTransformer ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ;
Distance : 5

28
Tree	return INDEX_NOT_FOUND ;
Code	return INDEX_NOT_FOUND ;
Distance : 1

29
Tree	return STRING_CONSTANT + warningsGuard + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + warningsGuard + STRING_CONSTANT + callNode ;
Distance : 7

30
Tree	return MOCKITO_PROXY_MARKER ;
Code	return MOCKITO_PROXY_MARKER ;
Distance : 1

31
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + obj2 ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + obj2 ;
Distance : 7

32
Tree	return STRING_CONSTANT + range + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + range + STRING_CONSTANT + callNode ;
Distance : 7

33
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + FastMath ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + FastMath ;
Distance : 7

34
Tree	return Objects ;
Code	return Objects ;
Distance : 1

35
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + height ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + height ;
Distance : 7

36
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + rawType ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + rawType ;
Distance : 7

37
Tree	return randomData ? f.length : FunctionFlavor.NORMAL ;
Code	return randomData ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

38
Tree	return epsilon ;
Code	return epsilon ;
Distance : 1

39
Tree	return csti ;
Code	return csti ;
Distance : 1

40
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + expr ;
Distance : 7

41
Tree	return this == FastMath ;
Code	return this == FastMath ;
Distance : 3

42
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + tolerance ;
Distance : 7

43
Tree	return STRING_CONSTANT + getProp + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + getProp + STRING_CONSTANT + callNode ;
Distance : 7

44
Tree	return this == height ;
Code	return this == height ;
Distance : 3

45
Tree	return tree ;
Code	return tree ;
Distance : 1

46
Tree	return FastMath ? f.length : FunctionFlavor.NORMAL ;
Code	return FastMath ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

47
Tree	return STRING_CONSTANT + scopeCreator + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + scopeCreator + STRING_CONSTANT + callNode ;
Distance : 7

48
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + ref ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + ref ;
Distance : 7

49
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + height ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + height ;
Distance : 7

50
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + FastMath ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + FastMath ;
Distance : 7

51
Tree	return blind ;
Code	return blind ;
Distance : 1

52
Tree	return recvType ;
Code	return recvType ;
Distance : 1

53
Tree	return pb ;
Code	return pb ;
Distance : 1

54
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + randomData ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + randomData ;
Distance : 7

55
Tree	return parent . abs () ? null : S ;
Code	return parent . abs () ? null : S ;
Distance : 8

56
Tree	return x2 ;
Code	return x2 ;
Distance : 1

57
Tree	return this == s ;
Code	return this == s ;
Distance : 3

58
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + Math ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + Math ;
Distance : 7

59
Tree	return STRING_CONSTANT + tolerance + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + tolerance + STRING_CONSTANT + expr ;
Distance : 7

60
Tree	return Gamma ;
Code	return Gamma ;
Distance : 1

61
Tree	return STRING_CONSTANT + tolerance + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + tolerance + STRING_CONSTANT + tolerance ;
Distance : 7

62
Tree	return DatasetUtils ;
Code	return DatasetUtils ;
Distance : 1

63
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + val ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + val ;
Distance : 7

64
Tree	return optimizer ;
Code	return optimizer ;
Distance : 1

65
Tree	return NodeUtil . abs () ? null : parent ;
Code	return NodeUtil . abs () ? null : parent ;
Distance : 8

66
Tree	return STRING_CONSTANT + degreesOfFreedom + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + degreesOfFreedom + STRING_CONSTANT + callNode ;
Distance : 7

67
Tree	return FastFourierTransformer . abs () ? null : randomData ;
Code	return FastFourierTransformer . abs () ? null : randomData ;
Distance : 8

68
Tree	return parent . clone () ? null : parent ;
Code	return parent . clone () ? null : parent ;
Distance : 8

69
Tree	return decomposition ;
Code	return decomposition ;
Distance : 1

70
Tree	return STRING_CONSTANT + forward + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + forward + STRING_CONSTANT + expr ;
Distance : 7

71
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + forward ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + forward ;
Distance : 7

72
Tree	return FastFourierTransformer ? f.length : f.length ;
Code	return FastFourierTransformer ? f.length : f.length ;
Distance : 5

73
Tree	return nameNode ;
Code	return nameNode ;
Distance : 1

74
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + obj1 ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + obj1 ;
Distance : 7

75
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + delegate ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + delegate ;
Distance : 7

76
Tree	return oneOverN ;
Code	return oneOverN ;
Distance : 1

77
Tree	return this == warningsGuard ;
Code	return this == warningsGuard ;
Distance : 3

78
Tree	return singularValues ;
Code	return singularValues ;
Distance : 1

79
Tree	return FastFourierTransformer . clone () ? null : blind ;
Code	return FastFourierTransformer . clone () ? null : blind ;
Distance : 8

80
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + Deprecated ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + Deprecated ;
Distance : 7

81
Tree	return cond ;
Code	return cond ;
Distance : 1

82
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + obj2 ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + obj2 ;
Distance : 7

83
Tree	return callNode ? f.length : FunctionFlavor.NORMAL ;
Code	return callNode ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

84
Tree	return INDEX_OFFSET ;
Code	return INDEX_OFFSET ;
Distance : 1

85
Tree	return definitionProvider ;
Code	return definitionProvider ;
Distance : 1

86
Tree	return includeInterval ;
Code	return includeInterval ;
Distance : 1

87
Tree	return scopeCreator ? f.length : FunctionFlavor.NORMAL ;
Code	return scopeCreator ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

88
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + ADDITIVE_MODE ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + ADDITIVE_MODE ;
Distance : 7

89
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + parent ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + parent ;
Distance : 7

90
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + dateFormat ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + dateFormat ;
Distance : 7

91
Tree	return height ? f.length : FunctionFlavor.NORMAL ;
Code	return height ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

92
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + rawType ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + rawType ;
Distance : 7

93
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + n ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + n ;
Distance : 7

94
Tree	return iChronology ;
Code	return iChronology ;
Distance : 1

95
Tree	return STRING_CONSTANT + randomData + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + randomData + STRING_CONSTANT + callNode ;
Distance : 7

96
Tree	return this == forward ;
Code	return this == forward ;
Distance : 3

97
Tree	return state ;
Code	return state ;
Distance : 1

98
Tree	return STRING_CONSTANT + superType + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + superType + STRING_CONSTANT + callNode ;
Distance : 7

99
Tree	return FastFourierTransformer ;
Code	return FastFourierTransformer ;
Distance : 1

100
Tree	return warningsGuard ? f.length : FunctionFlavor.NORMAL ;
Code	return warningsGuard ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

101
Tree	return DurationType ;
Code	return DurationType ;
Distance : 1

102
Tree	return tableau ;
Code	return tableau ;
Distance : 1

103
Tree	return NOT_FOUND ;
Code	return NOT_FOUND ;
Distance : 1

104
Tree	return forward ;
Code	return forward ;
Distance : 1

105
Tree	return STRING_CONSTANT + DurationType + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + DurationType + STRING_CONSTANT + callNode ;
Distance : 7

106
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + randomData ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + randomData ;
Distance : 7

107
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + obj2 ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + obj2 ;
Distance : 7

108
Tree	return n ;
Code	return n ;
Distance : 1

109
Tree	return EqCache ;
Code	return EqCache ;
Distance : 1

110
Tree	return tol ;
Code	return tol ;
Distance : 1

111
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + rawType ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + rawType ;
Distance : 7

112
Tree	return qnameNode ;
Code	return qnameNode ;
Distance : 1

113
Tree	return getProp ;
Code	return getProp ;
Distance : 1

114
Tree	return range ;
Code	return range ;
Distance : 1

115
Tree	return this == rawType ;
Code	return this == rawType ;
Distance : 3

116
Tree	return cls ;
Code	return cls ;
Distance : 1

117
Tree	return scopeRoot ;
Code	return scopeRoot ;
Distance : 1

118
Tree	return replacement ;
Code	return replacement ;
Distance : 1

119
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + expr ;
Distance : 7

120
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + height ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + height ;
Distance : 7

121
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + tolerance ;
Distance : 7

122
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + ADDITIVE_MODE ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + ADDITIVE_MODE ;
Distance : 7

123
Tree	return Math ;
Code	return Math ;
Distance : 1

124
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + callNode ;
Distance : 7

125
Tree	return scopeCreator ;
Code	return scopeCreator ;
Distance : 1

126
Tree	return parent . abs () ? null : tolerance ;
Code	return parent . abs () ? null : tolerance ;
Distance : 8

127
Tree	return parent ;
Code	return parent ;
Distance : 1

128
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + callNode ;
Distance : 7

129
Tree	return NodeUtil ;
Code	return NodeUtil ;
Distance : 1

130
Tree	return tolerance ;
Code	return tolerance ;
Distance : 1

131
Tree	return TransformUtils ;
Code	return TransformUtils ;
Distance : 1

132
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + callNode ;
Distance : 7

133
Tree	return val ;
Code	return val ;
Distance : 1

134
Tree	return warningsGuard ;
Code	return warningsGuard ;
Distance : 1

135
Tree	return FastFourierTransformer ? f.length : FunctionFlavor.NORMAL ;
Code	return FastFourierTransformer ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

136
Tree	return randomData ;
Code	return randomData ;
Distance : 1

137
Tree	return FastMath ;
Code	return FastMath ;
Distance : 1

138
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + callNode ;
Distance : 7

139
Tree	return this == tolerance ;
Code	return this == tolerance ;
Distance : 3

140
Tree	return this == scopeCreator ;
Code	return this == scopeCreator ;
Distance : 3

141
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + expr ;
Distance : 7

142
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + tolerance ;
Distance : 7

143
Tree	return ArithmeticUtils ;
Code	return ArithmeticUtils ;
Distance : 1

144
Tree	return parent ? f.length : FunctionFlavor.NORMAL ;
Code	return parent ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

145
Tree	return callNode ;
Code	return callNode ;
Distance : 1

146
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + ref ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + ref ;
Distance : 7

147
Tree	return height ;
Code	return height ;
Distance : 1

148
Tree	return FastFourierTransformer . abs () ? null : parent ;
Code	return FastFourierTransformer . abs () ? null : parent ;
Distance : 8

149
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + FastMath ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + FastMath ;
Distance : 7

150
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + ref ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + ref ;
Distance : 7

151
Tree	return n0 ;
Code	return n0 ;
Distance : 1

152
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + FastMath ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + FastMath ;
Distance : 7

153
Tree	return VIRTUAL_FILE ;
Code	return VIRTUAL_FILE ;
Distance : 1

154
Tree	return this == randomData ;
Code	return this == randomData ;
Distance : 3

155
Tree	return PlaneAngleRadians ;
Code	return PlaneAngleRadians ;
Distance : 1

156
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + obj2 ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + obj2 ;
Distance : 7

157
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + forward ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + forward ;
Distance : 7

158
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + ADDITIVE_MODE ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + ADDITIVE_MODE ;
Distance : 7

159
Tree	return res ;
Code	return res ;
Distance : 1

160
Tree	return STRING_CONSTANT + FastMath + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + FastMath + STRING_CONSTANT + callNode ;
Distance : 7

161
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + rawType ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + rawType ;
Distance : 7

162
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + expr ;
Distance : 7

163
Tree	return RealVector ;
Code	return RealVector ;
Distance : 1

164
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + scopeCreator ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + scopeCreator ;
Distance : 7

165
Tree	return scale ;
Code	return scale ;
Distance : 1

166
Tree	return val ? f.length : FunctionFlavor.NORMAL ;
Code	return val ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

167
Tree	return setKey ;
Code	return setKey ;
Distance : 1

168
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + randomData ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + randomData ;
Distance : 7

169
Tree	return threshold ;
Code	return threshold ;
Distance : 1

170
Tree	return ref ;
Code	return ref ;
Distance : 1

171
Tree	return s ;
Code	return s ;
Distance : 1

172
Tree	return parent . abs () ? null : blind ;
Code	return parent . abs () ? null : blind ;
Distance : 8

173
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + randomData ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + randomData ;
Distance : 7

174
Tree	return STRING_CONSTANT + expr + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + expr + STRING_CONSTANT + tolerance ;
Distance : 7

175
Tree	return FastFourierTransformer . abs () ? null : tolerance ;
Code	return FastFourierTransformer . abs () ? null : tolerance ;
Distance : 8

176
Tree	return STRING_CONSTANT + tolerance + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + tolerance + STRING_CONSTANT + callNode ;
Distance : 7

177
Tree	return step ;
Code	return step ;
Distance : 1

178
Tree	return FastFourierTransformer . abs () ? null : blind ;
Code	return FastFourierTransformer . abs () ? null : blind ;
Distance : 8

179
Tree	return transformed ;
Code	return transformed ;
Distance : 1

180
Tree	return STRING_CONSTANT + forward + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + forward + STRING_CONSTANT + callNode ;
Distance : 7

181
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + dateFormat ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + dateFormat ;
Distance : 7

182
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + n ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + n ;
Distance : 7

183
Tree	return NodeUtil ? f.length : FunctionFlavor.NORMAL ;
Code	return NodeUtil ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

184
Tree	return STRING_CONSTANT + obj + STRING_CONSTANT + callNode ;
Code	return STRING_CONSTANT + obj + STRING_CONSTANT + callNode ;
Distance : 7

185
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + FastMath ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + FastMath ;
Distance : 7

186
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + expr ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + expr ;
Distance : 7

187
Tree	return FastFourierTransformer . abs () ? null : obj1 ;
Code	return FastFourierTransformer . abs () ? null : obj1 ;
Distance : 8

188
Tree	return STRING_CONSTANT + callNode + STRING_CONSTANT + parent ;
Code	return STRING_CONSTANT + callNode + STRING_CONSTANT + parent ;
Distance : 7

189
Tree	return tolerance ? f.length : FunctionFlavor.NORMAL ;
Code	return tolerance ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

190
Tree	return rawType ;
Code	return rawType ;
Distance : 1

191
Tree	return TransformUtils ? f.length : FunctionFlavor.NORMAL ;
Code	return TransformUtils ? f.length : FunctionFlavor.NORMAL ;
Distance : 5

192
Tree	return MatrixUtils ;
Code	return MatrixUtils ;
Distance : 1

193
Tree	return obj2 ;
Code	return obj2 ;
Distance : 1

194
Tree	return STRING_CONSTANT + rawType + STRING_CONSTANT + ADDITIVE_MODE ;
Code	return STRING_CONSTANT + rawType + STRING_CONSTANT + ADDITIVE_MODE ;
Distance : 7

195
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + ref ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + ref ;
Distance : 7

196
Tree	return parent . abs () ? null : parent ;
Code	return parent . abs () ? null : parent ;
Distance : 8

197
Tree	return STRING_CONSTANT + ref + STRING_CONSTANT + tolerance ;
Code	return STRING_CONSTANT + ref + STRING_CONSTANT + tolerance ;
Distance : 7

198
Tree	return true ; ParamChecks
Code	return true ; ParamChecks
Distance : 2

199
Tree	return true ; f
Code	return true ; f
Distance : 2

========================================================================


========================================================================
Example Number: 18
Parent Code is: 
return TernaryValue.TRUE ;
-------------------------------------------------------------------------------
Child code is: 
return TernaryValue.UNKNOWN ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=TernaryValue.TRUE}) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (40{val=TernaryValue.UNKNOWN}) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/75/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return this . minX . TOP_OBJECT ;
Code	return this . minX . TOP_OBJECT ;
Distance : 5

1
Tree	return parent . incrementalCheckMode () . scalar ;
Code	return parent . incrementalCheckMode () . scalar ;
Distance : 6

2
Tree	return ShapeUtils . createsScope () . TRUTHY ;
Code	return ShapeUtils . createsScope () . TRUTHY ;
Distance : 6

3
Tree	return target.length . createsScope () . getParser ;
Code	return target.length . createsScope () . getParser ;
Distance : 6

4
Tree	return inMemoryClassObjects . maxY () ? null : parent ;
Code	return inMemoryClassObjects . maxY () ? null : parent ;
Distance : 8

5
Tree	return this . maxY . compare () ;
Code	return this . maxY . compare () ;
Distance : 6

6
Tree	return RegularizedBeta . createsScope () . reportAnd ;
Code	return RegularizedBeta . createsScope () . reportAnd ;
Distance : 6

7
Tree	return numberOfTrials . createsScope () . parsePatterns ;
Code	return numberOfTrials . createsScope () . parsePatterns ;
Distance : 6

8
Tree	return integrator ;
Code	return integrator ;
Distance : 1

9
Tree	return DEFAULT_EPSILON . createsScope () ? null : parent ;
Code	return DEFAULT_EPSILON . createsScope () ? null : parent ;
Distance : 8

10
Tree	return SHORT_PREFIX_STYLE . createsScope () . success ;
Code	return SHORT_PREFIX_STYLE . createsScope () . success ;
Distance : 6

11
Tree	return parent . createsScope () . getNumber ;
Code	return parent . createsScope () . getNumber ;
Distance : 6

12
Tree	return inMemoryClassObjects . createsScope () ? null : counts ;
Code	return inMemoryClassObjects . createsScope () ? null : counts ;
Distance : 8

13
Tree	return parent . anovaFValue () ? null : obj1 ;
Code	return parent . anovaFValue () ? null : obj1 ;
Distance : 8

14
Tree	return inMemoryClassObjects . createsScope () ? null : x1 ;
Code	return inMemoryClassObjects . createsScope () ? null : x1 ;
Distance : 8

15
Tree	return this . minimum . TRUTHY ;
Code	return this . minimum . TRUTHY ;
Distance : 5

16
Tree	return parent . isEmptyType () ? null : parent ;
Code	return parent . isEmptyType () ? null : parent ;
Distance : 8

17
Tree	return this . domainCrosshairStroke . UNKNOWN ;
Code	return this . domainCrosshairStroke . UNKNOWN ;
Distance : 5

18
Tree	return inMemoryClassObjects . createsScope () ? null : verification ;
Code	return inMemoryClassObjects . createsScope () ? null : verification ;
Distance : 8

19
Tree	return bindComponents.thisValue ;
Code	return bindComponents.thisValue ;
Distance : 1

20
Tree	return this . commonTypes . getTopObject () ;
Code	return this . commonTypes . getTopObject () ;
Distance : 6

21
Tree	return functionNames . createsScope () ? null : numberOfTrials ;
Code	return functionNames . createsScope () ? null : numberOfTrials ;
Distance : 8

22
Tree	return inMemoryClassObjects . createsScope () . valueFor ;
Code	return inMemoryClassObjects . createsScope () . valueFor ;
Distance : 6

23
Tree	return FastFourierTransformer . createsScope () ? null : obj1 ;
Code	return FastFourierTransformer . createsScope () ? null : obj1 ;
Distance : 8

24
Tree	return this . commonTypes . isChanged () ;
Code	return this . commonTypes . isChanged () ;
Distance : 6

25
Tree	return ZERO ;
Code	return ZERO ;
Distance : 1

26
Tree	return directions . createsScope () ? null : obj1 ;
Code	return directions . createsScope () ? null : obj1 ;
Distance : 8

27
Tree	return DEFAULT_STYLE . createsScope () . scalar ;
Code	return DEFAULT_STYLE . createsScope () . scalar ;
Distance : 6

28
Tree	return inMemoryClassObjects . createsScope () . returnType ;
Code	return inMemoryClassObjects . createsScope () . returnType ;
Distance : 6

29
Tree	return sd . createsScope () . populationSize ;
Code	return sd . createsScope () . populationSize ;
Distance : 6

30
Tree	return inMemoryClassObjects . incrementalCheckMode () . populationSize ;
Code	return inMemoryClassObjects . incrementalCheckMode () . populationSize ;
Distance : 6

31
Tree	return valueIfNull . createsScope () ? null : obj1 ;
Code	return valueIfNull . createsScope () ? null : obj1 ;
Distance : 8

32
Tree	return superCall . createsScope () ? null : parent ;
Code	return superCall . createsScope () ? null : parent ;
Distance : 8

33
Tree	return this . commonTypes . floor () ;
Code	return this . commonTypes . floor () ;
Distance : 6

34
Tree	return numberOfTrials . createsScope () . integrator ;
Code	return numberOfTrials . createsScope () . integrator ;
Distance : 6

35
Tree	return this . maxItemWidth . createsScope () ;
Code	return this . maxItemWidth . createsScope () ;
Distance : 6

36
Tree	return parent . getNameNode () ? null : parent ;
Code	return parent . getNameNode () ? null : parent ;
Distance : 8

37
Tree	return ShapeUtils . createsScope () . maxY ;
Code	return ShapeUtils . createsScope () . maxY ;
Distance : 6

38
Tree	return SubtypeCache ;
Code	return SubtypeCache ;
Distance : 1

39
Tree	return startValue . createsScope () . populationSize ;
Code	return startValue . createsScope () . populationSize ;
Distance : 6

40
Tree	return this . runSmartNameRemoval . TRUTHY ;
Code	return this . runSmartNameRemoval . TRUTHY ;
Distance : 5

41
Tree	return numberOfTrials . createsScope () ? null : gamma ;
Code	return numberOfTrials . createsScope () ? null : gamma ;
Distance : 8

42
Tree	return variablesToInclude.length ;
Code	return variablesToInclude.length ;
Distance : 1

43
Tree	return MULTI_LINE_STYLE ;
Code	return MULTI_LINE_STYLE ;
Distance : 1

44
Tree	return target.length . createsScope () . value ;
Code	return target.length . createsScope () . value ;
Distance : 6

45
Tree	return this . maxY . shouldGenerateTypedExterns () ;
Code	return this . maxY . shouldGenerateTypedExterns () ;
Distance : 6

46
Tree	return MOCKITO_PROXY_MARKER . createsScope () ? null : obj1 ;
Code	return MOCKITO_PROXY_MARKER . createsScope () ? null : obj1 ;
Distance : 8

47
Tree	return optimaValues . createsScope () . scalar ;
Code	return optimaValues . createsScope () . scalar ;
Distance : 6

48
Tree	return parent . createsScope () ? null : superCall ;
Code	return parent . createsScope () ? null : superCall ;
Distance : 8

49
Tree	return this . runSmartNameRemoval . createsScope () ;
Code	return this . runSmartNameRemoval . createsScope () ;
Distance : 6

50
Tree	return parent . getNameNode () ? null : obj1 ;
Code	return parent . getNameNode () ? null : obj1 ;
Distance : 8

51
Tree	return inMemoryClassObjects . maxY () ? null : obj1 ;
Code	return inMemoryClassObjects . maxY () ? null : obj1 ;
Distance : 8

52
Tree	return stdDev ;
Code	return stdDev ;
Distance : 1

53
Tree	return SHORT_PREFIX_STYLE . createsScope () ? null : incrementalCheckMode ;
Code	return SHORT_PREFIX_STYLE . createsScope () ? null : incrementalCheckMode ;
Distance : 8

54
Tree	return this . maxY . getNameNode () ;
Code	return this . maxY . getNameNode () ;
Distance : 6

55
Tree	return y2 . createsScope () ? null : syntacticScope ;
Code	return y2 . createsScope () ? null : syntacticScope ;
Distance : 8

56
Tree	return this . commonTypes . getParser () ;
Code	return this . commonTypes . getParser () ;
Distance : 6

57
Tree	return loadModuleStatement ;
Code	return loadModuleStatement ;
Distance : 1

58
Tree	return SHORT_PREFIX_STYLE . createsScope () ? null : upperPlusLower ;
Code	return SHORT_PREFIX_STYLE . createsScope () ? null : upperPlusLower ;
Distance : 8

59
Tree	return numberOfTrials . createsScope () . getParser () ;
Code	return numberOfTrials . createsScope () . getParser () ;
Distance : 7

60
Tree	return sumDifference ;
Code	return sumDifference ;
Distance : 1

61
Tree	return parent . compare () ? null : numberOfTrials ;
Code	return parent . compare () ? null : numberOfTrials ;
Distance : 8

62
Tree	return PotentialDeclaration . createsScope () ? null : numberOfTrials ;
Code	return PotentialDeclaration . createsScope () ? null : numberOfTrials ;
Distance : 8

63
Tree	return DEFAULT_EPSILON . createsScope () ? null : obj1 ;
Code	return DEFAULT_EPSILON . createsScope () ? null : obj1 ;
Distance : 8

64
Tree	return variableReference ;
Code	return variableReference ;
Distance : 1

65
Tree	return inMemoryClassObjects . createsScope () ? null : observed1 ;
Code	return inMemoryClassObjects . createsScope () ? null : observed1 ;
Distance : 8

66
Tree	return parent . isEmptyType () ? null : obj1 ;
Code	return parent . isEmptyType () ? null : obj1 ;
Distance : 8

67
Tree	return initial . createsScope () ? null : numberOfTrials ;
Code	return initial . createsScope () ? null : numberOfTrials ;
Distance : 8

68
Tree	return inMemoryClassObjects . anovaFValue () ? null : parent ;
Code	return inMemoryClassObjects . anovaFValue () ? null : parent ;
Distance : 8

69
Tree	return this . printExterns . getNameNode () ;
Code	return this . printExterns . getNameNode () ;
Distance : 6

70
Tree	return DEFAULT_ZERO_TOLERANCE ;
Code	return DEFAULT_ZERO_TOLERANCE ;
Distance : 1

71
Tree	return MASK_NON_SIGN_INT . createsScope () ? null : parent ;
Code	return MASK_NON_SIGN_INT . createsScope () ? null : parent ;
Distance : 8

72
Tree	return inMemoryClassObjects . createsScope () . currentScope ;
Code	return inMemoryClassObjects . createsScope () . currentScope ;
Distance : 6

73
Tree	return superCall . createsScope () ? null : obj1 ;
Code	return superCall . createsScope () ? null : obj1 ;
Distance : 8

74
Tree	return checkUnusedLocals ;
Code	return checkUnusedLocals ;
Distance : 1

75
Tree	return inMemoryClassObjects . returnValueFor () . scalar ;
Code	return inMemoryClassObjects . returnValueFor () . scalar ;
Distance : 6

76
Tree	return parent . returnValueFor () ? null : numberOfTrials ;
Code	return parent . returnValueFor () ? null : numberOfTrials ;
Distance : 8

77
Tree	return YEAR_MONTH . createsScope () ? null : parent ;
Code	return YEAR_MONTH . createsScope () ? null : parent ;
Distance : 8

78
Tree	return returnTypeExpr ;
Code	return returnTypeExpr ;
Distance : 1

79
Tree	return this . commonTypes . toStringTree () ;
Code	return this . commonTypes . toStringTree () ;
Distance : 6

80
Tree	return this . printExterns . shouldGenerateTypedExterns () ;
Code	return this . printExterns . shouldGenerateTypedExterns () ;
Distance : 6

81
Tree	return singleSiteDefinitions ;
Code	return singleSiteDefinitions ;
Distance : 1

82
Tree	return numberOfTrials . compare () ? null : parent ;
Code	return numberOfTrials . compare () ? null : parent ;
Distance : 8

83
Tree	return inMemoryClassObjects . createsScope () ? null : ALL ;
Code	return inMemoryClassObjects . createsScope () ? null : ALL ;
Distance : 8

84
Tree	return et ;
Code	return et ;
Distance : 1

85
Tree	return numberOfTrials . returnValueFor () ? null : obj1 ;
Code	return numberOfTrials . returnValueFor () ? null : obj1 ;
Distance : 8

86
Tree	return RegularizedBeta . createsScope () ? null : sampleSize ;
Code	return RegularizedBeta . createsScope () ? null : sampleSize ;
Distance : 8

87
Tree	return currentAnalysis ;
Code	return currentAnalysis ;
Distance : 1

88
Tree	return this . printExterns . compare () ;
Code	return this . printExterns . compare () ;
Distance : 6

89
Tree	return this . commonTypes . isImportRhs () ;
Code	return this . commonTypes . isImportRhs () ;
Distance : 6

90
Tree	return y2 . createsScope () ? null : incrementalCheckMode ;
Code	return y2 . createsScope () ? null : incrementalCheckMode ;
Distance : 8

91
Tree	return this . minimum . createsScope () ;
Code	return this . minimum . createsScope () ;
Distance : 6

92
Tree	return modifyCallSites ;
Code	return modifyCallSites ;
Distance : 1

93
Tree	return EscapeUtils . createsScope () ? null : interceptors ;
Code	return EscapeUtils . createsScope () ? null : interceptors ;
Distance : 8

94
Tree	return y2 . createsScope () ? null : upperPlusLower ;
Code	return y2 . createsScope () ? null : upperPlusLower ;
Distance : 8

95
Tree	return NOT_FOUND . createsScope () ? null : numberOfTrials ;
Code	return NOT_FOUND . createsScope () ? null : numberOfTrials ;
Distance : 8

96
Tree	return quadrantOrigin ;
Code	return quadrantOrigin ;
Distance : 1

97
Tree	return GitContributionsProvider ;
Code	return GitContributionsProvider ;
Distance : 1

98
Tree	return _boundaries . createsScope () . scalar ;
Code	return _boundaries . createsScope () . scalar ;
Distance : 6

99
Tree	return populationSize . createsScope () . populationSize ;
Code	return populationSize . createsScope () . populationSize ;
Distance : 6

100
Tree	return SHORT_PREFIX_STYLE . createsScope () . jsRoot ;
Code	return SHORT_PREFIX_STYLE . createsScope () . jsRoot ;
Distance : 6

101
Tree	return sd . createsScope () ? null : obj1 ;
Code	return sd . createsScope () ? null : obj1 ;
Distance : 8

102
Tree	return FastFourierTransformer . createsScope () ? null : parent ;
Code	return FastFourierTransformer . createsScope () ? null : parent ;
Distance : 8

103
Tree	return newMean ;
Code	return newMean ;
Distance : 1

104
Tree	return this . printExterns . getEmptyObjectLiteral () ;
Code	return this . printExterns . getEmptyObjectLiteral () ;
Distance : 6

105
Tree	return MILLIS_TYPE ;
Code	return MILLIS_TYPE ;
Distance : 1

106
Tree	return y2 . createsScope () . searchChars ;
Code	return y2 . createsScope () . searchChars ;
Distance : 6

107
Tree	return daemon ;
Code	return daemon ;
Distance : 1

108
Tree	return inlineProperties ;
Code	return inlineProperties ;
Distance : 1

109
Tree	return this . TRUTHY . createsScope () ;
Code	return this . TRUTHY . createsScope () ;
Distance : 6

110
Tree	return transformed . createsScope () . TRUTHY ;
Code	return transformed . createsScope () . TRUTHY ;
Distance : 6

111
Tree	return DEFAULT_STYLE . createsScope () . maxY ;
Code	return DEFAULT_STYLE . createsScope () . maxY ;
Distance : 6

112
Tree	return SHORT_PREFIX_STYLE . createsScope () ? null : sampleSize ;
Code	return SHORT_PREFIX_STYLE . createsScope () ? null : sampleSize ;
Distance : 8

113
Tree	return parent . compare () . scalar ;
Code	return parent . compare () . scalar ;
Distance : 6

114
Tree	return rvalue ;
Code	return rvalue ;
Distance : 1

115
Tree	return inMemoryClassObjects . createsScope () ? null : real ;
Code	return inMemoryClassObjects . createsScope () ? null : real ;
Distance : 8

116
Tree	return this . domainCrosshairStroke . primitiveType ;
Code	return this . domainCrosshairStroke . primitiveType ;
Distance : 5

117
Tree	return proto ;
Code	return proto ;
Distance : 1

118
Tree	return EscapeUtils . createsScope () . remainder ;
Code	return EscapeUtils . createsScope () . remainder ;
Distance : 6

119
Tree	return FACTORIALS . createsScope () . maxY ;
Code	return FACTORIALS . createsScope () . maxY ;
Distance : 6

120
Tree	return initial . createsScope () . scalar ;
Code	return initial . createsScope () . scalar ;
Distance : 6

121
Tree	return iBase ;
Code	return iBase ;
Distance : 1

122
Tree	return returnType ;
Code	return returnType ;
Distance : 1

123
Tree	return ALL . createsScope () . maxY ;
Code	return ALL . createsScope () . maxY ;
Distance : 6

124
Tree	return SHORT_PREFIX_STYLE . createsScope () . reportAnd ;
Code	return SHORT_PREFIX_STYLE . createsScope () . reportAnd ;
Distance : 6

125
Tree	return numberOfTrials . createsScope () ? null : interceptors ;
Code	return numberOfTrials . createsScope () ? null : interceptors ;
Distance : 8

126
Tree	return createComplex ;
Code	return createComplex ;
Distance : 1

127
Tree	return populationSize . createsScope () ? null : obj1 ;
Code	return populationSize . createsScope () ? null : obj1 ;
Distance : 8

128
Tree	return y2 . createsScope () ? null : sampleSize ;
Code	return y2 . createsScope () ? null : sampleSize ;
Distance : 8

129
Tree	return inv ;
Code	return inv ;
Distance : 1

130
Tree	return target.length . createsScope () ? null : numberOfTrials ;
Code	return target.length . createsScope () ? null : numberOfTrials ;
Distance : 8

131
Tree	return incrementalCheckMode . createsScope () ? null : parent ;
Code	return incrementalCheckMode . createsScope () ? null : parent ;
Distance : 8

132
Tree	return this . commonTypes . searchChars ;
Code	return this . commonTypes . searchChars ;
Distance : 5

133
Tree	return analyzeInvocationArgsFwdWhenError ;
Code	return analyzeInvocationArgsFwdWhenError ;
Distance : 1

134
Tree	return directions . createsScope () ? null : parent ;
Code	return directions . createsScope () ? null : parent ;
Distance : 8

135
Tree	return this . domainCrosshairStroke . maxY ;
Code	return this . domainCrosshairStroke . maxY ;
Distance : 5

136
Tree	return this . numberOfTrials . TRUTHY ;
Code	return this . numberOfTrials . TRUTHY ;
Distance : 5

137
Tree	return parent . createsScope () . compare ;
Code	return parent . createsScope () . compare ;
Distance : 6

138
Tree	return startValue . createsScope () ? null : obj1 ;
Code	return startValue . createsScope () ? null : obj1 ;
Distance : 8

139
Tree	return this . defaultOutlineStroke . compare () ;
Code	return this . defaultOutlineStroke . compare () ;
Distance : 6

140
Tree	return this . commonTypes . replace () ;
Code	return this . commonTypes . replace () ;
Distance : 6

141
Tree	return parent . maxY () ? null : obj1 ;
Code	return parent . maxY () ? null : obj1 ;
Distance : 8

142
Tree	return transformed . createsScope () . maxY ;
Code	return transformed . createsScope () . maxY ;
Distance : 6

143
Tree	return valueIfNull . createsScope () ? null : parent ;
Code	return valueIfNull . createsScope () ? null : parent ;
Distance : 8

144
Tree	return ShapeUtils . createsScope () . populationSize ;
Code	return ShapeUtils . createsScope () . populationSize ;
Distance : 6

145
Tree	return EscapeUtils . createsScope () ? null : incrementalCheckMode ;
Code	return EscapeUtils . createsScope () ? null : incrementalCheckMode ;
Distance : 8

146
Tree	return PotentialDeclaration . createsScope () . scalar ;
Code	return PotentialDeclaration . createsScope () . scalar ;
Distance : 6

147
Tree	return ALL . createsScope () . TRUTHY ;
Code	return ALL . createsScope () . TRUTHY ;
Distance : 6

148
Tree	return _boundaries . createsScope () . maxY ;
Code	return _boundaries . createsScope () . maxY ;
Distance : 6

149
Tree	return inMemoryClassObjects . returnValueFor () . maxY ;
Code	return inMemoryClassObjects . returnValueFor () . maxY ;
Distance : 6

150
Tree	return inMemoryClassObjects . incrementalCheckMode () ? null : obj1 ;
Code	return inMemoryClassObjects . incrementalCheckMode () ? null : obj1 ;
Distance : 8

151
Tree	return transformed . createsScope () . scalar ;
Code	return transformed . createsScope () . scalar ;
Distance : 6

152
Tree	return this . commonTypes . getNumElements () ;
Code	return this . commonTypes . getNumElements () ;
Distance : 6

153
Tree	return ALL . createsScope () . scalar ;
Code	return ALL . createsScope () . scalar ;
Distance : 6

154
Tree	return this . defaultOutlineStroke . getNameNode () ;
Code	return this . defaultOutlineStroke . getNameNode () ;
Distance : 6

155
Tree	return EscapeUtils . createsScope () ? null : syntacticScope ;
Code	return EscapeUtils . createsScope () ? null : syntacticScope ;
Distance : 8

156
Tree	return target.length . createsScope () . years ;
Code	return target.length . createsScope () . years ;
Distance : 6

157
Tree	return optimaValues . createsScope () . TRUTHY ;
Code	return optimaValues . createsScope () . TRUTHY ;
Distance : 6

158
Tree	return inMemoryClassObjects . returnValueFor () . TRUTHY ;
Code	return inMemoryClassObjects . returnValueFor () . TRUTHY ;
Distance : 6

159
Tree	return RegularizedBeta . createsScope () ? null : probabilityOfSuccess ;
Code	return RegularizedBeta . createsScope () ? null : probabilityOfSuccess ;
Distance : 8

160
Tree	return SphericalCoordinates ;
Code	return SphericalCoordinates ;
Distance : 1

161
Tree	return ldp . createsScope () ? null : numberOfTrials ;
Code	return ldp . createsScope () ? null : numberOfTrials ;
Distance : 8

162
Tree	return DEFAULT_RETURN_VALUES . createsScope () ? null : obj1 ;
Code	return DEFAULT_RETURN_VALUES . createsScope () ? null : obj1 ;
Distance : 8

163
Tree	return this . minY . createsScope () ;
Code	return this . minY . createsScope () ;
Distance : 6

164
Tree	return SHORT_PREFIX_STYLE . createsScope () . UNKNOWN ;
Code	return SHORT_PREFIX_STYLE . createsScope () . UNKNOWN ;
Distance : 6

165
Tree	return maybeWin . createsScope () ? null : obj1 ;
Code	return maybeWin . createsScope () ? null : obj1 ;
Distance : 8

166
Tree	return RegularizedBeta . createsScope () . numberOfTrials ;
Code	return RegularizedBeta . createsScope () . numberOfTrials ;
Distance : 6

167
Tree	return RegularizedBeta . createsScope () . parent ;
Code	return RegularizedBeta . createsScope () . parent ;
Distance : 6

168
Tree	return incrementalCheckMode . createsScope () ? null : obj1 ;
Code	return incrementalCheckMode . createsScope () ? null : obj1 ;
Distance : 8

169
Tree	return y2 . createsScope () . success ;
Code	return y2 . createsScope () . success ;
Distance : 6

170
Tree	return optimaValues . createsScope () . maxY ;
Code	return optimaValues . createsScope () . maxY ;
Distance : 6

171
Tree	return FACTORIALS . createsScope () . scalar ;
Code	return FACTORIALS . createsScope () . scalar ;
Distance : 6

172
Tree	return numberOfTrials . createsScope () ? null : Euclidean3D ;
Code	return numberOfTrials . createsScope () ? null : Euclidean3D ;
Distance : 8

173
Tree	return parent . createsScope () . quote ;
Code	return parent . createsScope () . quote ;
Distance : 6

174
Tree	return this . commonTypes . toMaybeUnionType () ;
Code	return this . commonTypes . toMaybeUnionType () ;
Distance : 6

175
Tree	return inMemoryClassObjects . compare () . populationSize ;
Code	return inMemoryClassObjects . compare () . populationSize ;
Distance : 6

176
Tree	return parent . createsScope () ? null : observed1 ;
Code	return parent . createsScope () ? null : observed1 ;
Distance : 8

177
Tree	return parent . anovaFValue () ? null : parent ;
Code	return parent . anovaFValue () ? null : parent ;
Distance : 8

178
Tree	return this . numberOfTrials . createsScope () ;
Code	return this . numberOfTrials . createsScope () ;
Distance : 6

179
Tree	return elem ;
Code	return elem ;
Distance : 1

180
Tree	return microsphereElements ;
Code	return microsphereElements ;
Distance : 1

181
Tree	return DEFAULT_STYLE . createsScope () . TRUTHY ;
Code	return DEFAULT_STYLE . createsScope () . TRUTHY ;
Distance : 6

182
Tree	return EscapeUtils . createsScope () ? null : upperPlusLower ;
Code	return EscapeUtils . createsScope () ? null : upperPlusLower ;
Distance : 8

183
Tree	return parent . maxY () . populationSize ;
Code	return parent . maxY () . populationSize ;
Distance : 6

184
Tree	return parent . incrementalCheckMode () . TRUTHY ;
Code	return parent . incrementalCheckMode () . TRUTHY ;
Distance : 6

185
Tree	return this . minY . TRUTHY ;
Code	return this . minY . TRUTHY ;
Distance : 5

186
Tree	return MOCKITO_PROXY_MARKER . createsScope () ? null : parent ;
Code	return MOCKITO_PROXY_MARKER . createsScope () ? null : parent ;
Distance : 8

187
Tree	return _boundaries . createsScope () . TRUTHY ;
Code	return _boundaries . createsScope () . TRUTHY ;
Distance : 6

188
Tree	return FACTORIALS . createsScope () . TRUTHY ;
Code	return FACTORIALS . createsScope () . TRUTHY ;
Distance : 6

189
Tree	return parent . incrementalCheckMode () . maxY ;
Code	return parent . incrementalCheckMode () . maxY ;
Distance : 6

190
Tree	return INSTANCE . createsScope () . populationSize ;
Code	return INSTANCE . createsScope () . populationSize ;
Distance : 6

191
Tree	return y2 . createsScope () . UNKNOWN ;
Code	return y2 . createsScope () . UNKNOWN ;
Distance : 6

192
Tree	return SHORT_PREFIX_STYLE . createsScope () . searchChars ;
Code	return SHORT_PREFIX_STYLE . createsScope () . searchChars ;
Distance : 6

193
Tree	return numberOfTrials . returnValueFor () ? null : parent ;
Code	return numberOfTrials . returnValueFor () ? null : parent ;
Distance : 8

194
Tree	return this . maxItemWidth . TRUTHY ;
Code	return this . maxItemWidth . TRUTHY ;
Distance : 5

195
Tree	return return . createsScope () . scalar ;
Code	return return . createsScope () . scalar ;
Distance : 6

196
Tree	return maybeWin . createsScope () ? null : parent ;
Code	return maybeWin . createsScope () ? null : parent ;
Distance : 8

197
Tree	return checkAndSetStrictModeDirective ;
Code	return checkAndSetStrictModeDirective ;
Distance : 1

198
Tree	return parent . emptyValues () ? null : parent ;
Code	return parent . emptyValues () ? null : parent ;
Distance : 8

199
Tree	return parent . defaultReturnValues () . getParser () ;
Code	return parent . defaultReturnValues () . getParser () ;
Distance : 7

========================================================================


========================================================================
Example Number: 19
Parent Code is: 
if ( c > NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( c > NUMBER_CONSTANT && c < NUMBER_CONSTANT ) { sb . append ( c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=c}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=c}) (252{val=<=}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=appendHexJavaScriptRepresentation}) (214{val=(}) (800{val=sb}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=c}) (231{val=>}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=c}) (230{val=<}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=sb}) (235{val=.}) (802{val=append}) (214{val=(}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (32 (802{val=appendHexJavaScriptRepresentation}) (214{val=(}) (800{val=sb}) (234{val=,}) (800{val=c}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/73/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

1
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Distance : 7

2
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

3
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Distance : 8

4
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

5
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Distance : 8

6
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

7
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

8
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

9
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

10
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

11
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Distance : 5

12
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Distance : 6

13
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Distance : 7

14
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Distance : 7

15
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

16
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 6

17
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

18
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

19
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

20
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

21
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 7

22
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

23
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

24
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Distance : 6

25
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

26
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

27
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( sb , c ) ; }
Distance : 6

28
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

29
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

30
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , sb ) ; }
Distance : 7

31
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { append ( c , c ) ; }
Distance : 8

32
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , sb ) ; }
Distance : 8

33
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( sb , c ) ; }
Distance : 6

34
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 8

35
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , sb ) ; }
Distance : 6

36
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 9

37
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

38
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

39
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

40
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

41
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

42
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

43
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

44
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

45
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

46
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 8

47
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 9

48
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

49
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 8

50
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

51
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

52
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Distance : 5

53
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

54
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

55
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

56
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

57
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

58
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

59
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

60
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

61
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

62
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 9

63
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Distance : 7

64
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Distance : 9

65
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

66
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

67
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

68
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

69
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Distance : 7

70
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Distance : 9

71
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( sb , sb ) ; }
Distance : 7

72
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

73
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Distance : 6

74
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

75
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

76
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 8

77
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 6

78
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

79
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( sb , c ) ; }
Distance : 6

80
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 9

81
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 7

82
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

83
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 8

84
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

85
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

86
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

87
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

88
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 6

89
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

90
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

91
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

92
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 7

93
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 8

94
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

95
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Distance : 6

96
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

97
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

98
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

99
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

100
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

101
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

102
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

103
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

104
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

105
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

106
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Distance : 5

107
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Distance : 6

108
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Distance : 7

109
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Distance : 7

110
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

111
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

112
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

113
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

114
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

115
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

116
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 6

117
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 7

118
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

119
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

120
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

121
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

122
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

123
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

124
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

125
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 8

126
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

127
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

128
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 6

129
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 7

130
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

131
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

132
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

133
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

134
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

135
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

136
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 5

137
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 6

138
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

139
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

140
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

141
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 6

142
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

143
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 7

144
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

145
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

146
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 7

147
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

148
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

149
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

150
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

151
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

152
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 8

153
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , sb ) ; }
Distance : 6

154
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , sb ) ; }
Distance : 8

155
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

156
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 8

157
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 6

158
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 7

159
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

160
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

161
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 8

162
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 6

163
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

164
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { append ( c , c ) ; }
Distance : 8

165
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

166
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( sb , c ) ; }
Distance : 6

167
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , sb ) ; }
Distance : 9

168
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , sb ) ; }
Distance : 7

169
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , sb ) ; } else { append ( c , c ) ; }
Distance : 8

170
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , sb ) ; }
Distance : 8

171
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

172
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( sb , sb ) ; }
Distance : 5

173
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

174
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 8

175
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { appendHexJavaScriptRepresentation ( c , sb ) ; }
Distance : 7

176
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

177
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

178
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

179
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

180
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( sb , c ) ; }
Distance : 5

181
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

182
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

183
Tree	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

184
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 7

185
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 5

186
Tree	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Code	if ( sb >= NUMBER_CONSTANT && sb <= NUMBER_CONSTANT ) { sb . append ( c , sb ) ; } else { append ( c , sb ) ; }
Distance : 9

187
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

188
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 6

189
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

190
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 7

191
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( sb , c ) ; }
Distance : 4

192
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 5

193
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

194
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( sb , c ) ; }
Distance : 5

195
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( sb , c ) ; } else { append ( c , c ) ; }
Distance : 6

196
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { appendHexJavaScriptRepresentation ( c , c ) ; }
Distance : 6

197
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 7

198
Tree	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( sb >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { c . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 8

199
Tree	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Code	if ( c >= NUMBER_CONSTANT && c <= NUMBER_CONSTANT ) { sb . append ( c , c ) ; } else { append ( c , c ) ; }
Distance : 6

========================================================================


========================================================================
Example Number: 20
Parent Code is: 
{ defineSlot ( astParameter , functionNode , jsDocParameter . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
-------------------------------------------------------------------------------
Child code is: 
{ defineSlot ( astParameter , functionNode , jsDocParameter . getJSType () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=astParameter}) (234{val=,}) (800{val=functionNode}) (234{val=,}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (21 (7 (800{val=jsDocParameter}) (204{val==}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getNext}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=defineSlot}) (214{val=(}) (800{val=astParameter}) (234{val=,}) (800{val=functionNode}) (234{val=,}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getJSType}) (216{val=()})) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (21 (7 (800{val=jsDocParameter}) (204{val==}) (32 (800{val=jsDocParameter}) (235{val=.}) (802{val=getNext}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/70/parent/src_com_google_javascript_jscomp_TypedScopeCreator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 5

1
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 5

2
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 6

3
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; astParameter = astParameter . getNext () ; }
Distance : 8

4
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 9

5
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 10

6
Tree	{ defineSlot . defineSlot () ; functionNode = astParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; functionNode = astParameter . getJSType () ; }
Distance : 13

7
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getJSType () ; }
Distance : 9

8
Tree	{ astParameter . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 10

9
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 7

10
Tree	{ defineSlot . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Distance : 11

11
Tree	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 5

12
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 5

13
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 8

14
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 9

15
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 4

16
Tree	{ astParameter . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 11

17
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 8

18
Tree	{ functionNode . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Distance : 12

19
Tree	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

20
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

21
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 5

22
Tree	{ defineSlot . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Distance : 12

23
Tree	{ functionNode . defineSlot () ; functionNode = astParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; functionNode = astParameter . getNext () ; }
Distance : 12

24
Tree	{ functionNode . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Distance : 11

25
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

26
Tree	{ defineSlot . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Distance : 12

27
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; functionNode = astParameter . getNext () ; }
Distance : 8

28
Tree	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

29
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Distance : 4

30
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 8

31
Tree	{ functionNode . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 11

32
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; astParameter = astParameter . getNext () ; }
Distance : 8

33
Tree	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; functionNode = astParameter . getNext () ; }
Distance : 5

34
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 9

35
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 9

36
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 9

37
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 4

38
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 5

39
Tree	{ astParameter . defineSlot () ; astParameter = functionNode . getNext () ; }
Code	{ astParameter . defineSlot () ; astParameter = functionNode . getNext () ; }
Distance : 12

40
Tree	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 9

41
Tree	{ astParameter . defineSlot () ; astParameter = functionNode . getJSType () ; }
Code	{ astParameter . defineSlot () ; astParameter = functionNode . getJSType () ; }
Distance : 13

42
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 5

43
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 3

44
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = functionNode . getJSType () ; }
Distance : 10

45
Tree	{ astParameter . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Distance : 11

46
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 5

47
Tree	{ defineSlot . defineSlot () ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; functionNode = astParameter . getNext () ; }
Distance : 12

48
Tree	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 5

49
Tree	{ defineSlot . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Distance : 11

50
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getJSType () ; }
Distance : 6

51
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getJSType () ; }
Distance : 5

52
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 3

53
Tree	{ astParameter . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Distance : 12

54
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

55
Tree	{ functionNode . defineSlot () ; functionNode = astParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; functionNode = astParameter . getJSType () ; }
Distance : 13

56
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getJSType () ; }
Distance : 4

57
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = functionNode . getNext () ; }
Distance : 4

58
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 9

59
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 5

60
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 3

61
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 4

62
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 8

63
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Distance : 4

64
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 3

65
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 3

66
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 7

67
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getJSType () ; }
Distance : 6

68
Tree	{ astParameter . defineSlot () ; astParameter = astParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; astParameter = astParameter . getJSType () ; }
Distance : 13

69
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 8

70
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Distance : 10

71
Tree	{ astParameter . defineSlot () ; astParameter = astParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; astParameter = astParameter . getNext () ; }
Distance : 12

72
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 4

73
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getNext () ; }
Distance : 5

74
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 2

75
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getJSType () ; }
Distance : 10

76
Tree	{ astParameter . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Distance : 12

77
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getJSType () ; }
Distance : 9

78
Tree	{ functionNode . defineSlot () ; astParameter = astParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; astParameter = astParameter . getJSType () ; }
Distance : 13

79
Tree	{ functionNode . defineSlot () ; astParameter = astParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; astParameter = astParameter . getNext () ; }
Distance : 12

80
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = functionNode . getNext () ; }
Distance : 4

81
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 3

82
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getJSType () ; }
Distance : 5

83
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 8

84
Tree	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 10

85
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

86
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = functionNode . getNext () ; }
Distance : 8

87
Tree	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

88
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 4

89
Tree	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 5

90
Tree	{ functionNode . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Distance : 11

91
Tree	{ functionNode . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; jsDocParameter = astParameter . getJSType () ; }
Distance : 12

92
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = astParameter . getNext () ; }
Distance : 8

93
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getJSType () ; }
Distance : 5

94
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 9

95
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

96
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = functionNode . getNext () ; }
Distance : 3

97
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getJSType () ; }
Distance : 9

98
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getJSType () ; }
Distance : 5

99
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = functionNode . getNext () ; }
Distance : 5

100
Tree	{ astParameter . defineSlot () ; functionNode = astParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; functionNode = astParameter . getNext () ; }
Distance : 12

101
Tree	{ astParameter . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; astParameter = jsDocParameter . getNext () ; }
Distance : 11

102
Tree	{ astParameter . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; astParameter = jsDocParameter . getJSType () ; }
Distance : 12

103
Tree	{ defineSlot . defineSlot () ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; astParameter = astParameter . getNext () ; }
Distance : 12

104
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 5

105
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

106
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = functionNode . getNext () ; }
Distance : 9

107
Tree	{ astParameter . defineSlot () ; functionNode = astParameter . getJSType () ; }
Code	{ astParameter . defineSlot () ; functionNode = astParameter . getJSType () ; }
Distance : 13

108
Tree	{ defineSlot . defineSlot () ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; astParameter = astParameter . getJSType () ; }
Distance : 13

109
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getJSType () ; }
Distance : 4

110
Tree	{ astParameter . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = astParameter . getNext () ; }
Distance : 11

111
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getJSType () ; }
Distance : 6

112
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = functionNode . getNext () ; }
Distance : 4

113
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getJSType () ; }
Distance : 5

114
Tree	{ functionNode . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 10

115
Tree	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 6

116
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Distance : 10

117
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 7

118
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getJSType () ; }
Distance : 11

119
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 5

120
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 7

121
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 8

122
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 9

123
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 9

124
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = functionNode . getJSType () ; }
Distance : 6

125
Tree	{ getNext ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ getNext ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 5

126
Tree	{ astParameter . defineSlot () ; jsDocParameter = functionNode . getNext () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = functionNode . getNext () ; }
Distance : 11

127
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 6

128
Tree	{ defineSlot . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Distance : 12

129
Tree	{ astParameter . defineSlot ( astParameter . getNext () , STRING_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ astParameter . defineSlot ( astParameter . getNext () , STRING_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

130
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 7

131
Tree	{ astParameter . getNext () ; astParameter = astParameter . getJSType () ; }
Code	{ astParameter . getNext () ; astParameter = astParameter . getJSType () ; }
Distance : 13

132
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getJSType () ; }
Distance : 6

133
Tree	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 4

134
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , functionNode . getNext () ) ; functionNode = astParameter . getNext () ; }
Distance : 8

135
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = functionNode . getJSType () ; }
Distance : 4

136
Tree	{ defineSlot ( astParameter , functionNode . defineSlot () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . defineSlot () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

137
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 4

138
Tree	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 3

139
Tree	{ astParameter . defineSlot () ; functionNode = functionNode . getNext () ; }
Code	{ astParameter . defineSlot () ; functionNode = functionNode . getNext () ; }
Distance : 12

140
Tree	{ getNext ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ getNext ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 5

141
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; astParameter = astParameter . getJSType () ; }
Distance : 9

142
Tree	{ defineSlot . defineSlot () ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot . defineSlot () ; astParameter = functionNode . getNext () ; }
Distance : 12

143
Tree	{ astParameter . getNext () ; astParameter = astParameter . getNext () ; }
Code	{ astParameter . getNext () ; astParameter = astParameter . getNext () ; }
Distance : 12

144
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 4

145
Tree	{ defineSlot ( astParameter , functionNode . defineSlot () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . defineSlot () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

146
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; astParameter = functionNode . getNext () ; }
Distance : 5

147
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = functionNode . getNext () ; }
Distance : 6

148
Tree	{ astParameter . defineSlot () ; functionNode = functionNode . getJSType () ; }
Code	{ astParameter . defineSlot () ; functionNode = functionNode . getJSType () ; }
Distance : 13

149
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 5

150
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getNext () ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 7

151
Tree	{ defineSlot . defineSlot () ; astParameter = functionNode . getJSType () ; }
Code	{ defineSlot . defineSlot () ; astParameter = functionNode . getJSType () ; }
Distance : 13

152
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 3

153
Tree	{ defineSlot ( functionNode , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( functionNode , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 5

154
Tree	{ defineSlot . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Distance : 11

155
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; functionNode = jsDocParameter . getNext () ; }
Distance : 4

156
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Distance : 5

157
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 9

158
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 7

159
Tree	{ defineSlot . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Code	{ defineSlot . defineSlot () ; jsDocParameter = jsDocParameter . getJSType () ; }
Distance : 11

160
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = functionNode . getJSType () ; }
Distance : 9

161
Tree	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 5

162
Tree	{ functionNode . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Code	{ functionNode . defineSlot () ; functionNode = jsDocParameter . getNext () ; }
Distance : 11

163
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 3

164
Tree	{ functionNode . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Code	{ functionNode . defineSlot () ; functionNode = jsDocParameter . getJSType () ; }
Distance : 12

165
Tree	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , false ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 4

166
Tree	{ getNext ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ getNext ( astParameter , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

167
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

168
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 7

169
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 4

170
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; functionNode = astParameter . getNext () ; }
Distance : 6

171
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = astParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; astParameter = astParameter . getJSType () ; }
Distance : 7

172
Tree	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

173
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = astParameter . getNext () ; }
Distance : 10

174
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; astParameter = functionNode . getJSType () ; }
Distance : 5

175
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = jsDocParameter . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , false ) ; functionNode = jsDocParameter . getJSType () ; }
Distance : 4

176
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; functionNode = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , jsDocParameter . getNext () ) ; functionNode = astParameter . getNext () ; }
Distance : 8

177
Tree	{ defineSlot ( functionNode , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( functionNode , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

178
Tree	{ defineSlot ( functionNode , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( functionNode , functionNode . getJSType () , true ) ; astParameter = astParameter . getNext () ; }
Distance : 6

179
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = functionNode . getJSType () ; }
Distance : 5

180
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 9

181
Tree	{ astParameter . getJSType () ; astParameter = astParameter . getJSType () ; }
Code	{ astParameter . getJSType () ; astParameter = astParameter . getJSType () ; }
Distance : 12

182
Tree	{ defineSlot ( functionNode , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( functionNode , functionNode . getJSType () , false ) ; astParameter = astParameter . getNext () ; }
Distance : 5

183
Tree	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 8

184
Tree	{ astParameter . defineSlot () ; jsDocParameter = functionNode . getJSType () ; }
Code	{ astParameter . defineSlot () ; jsDocParameter = functionNode . getJSType () ; }
Distance : 12

185
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 8

186
Tree	{ defineSlot . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot . defineSlot () ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 10

187
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 3

188
Tree	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getNext () , true ) ; jsDocParameter = jsDocParameter . getNext () ; }
Distance : 4

189
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = functionNode . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = functionNode . getNext () ; }
Distance : 9

190
Tree	{ functionNode . defineSlot () ; astParameter = functionNode . getJSType () ; }
Code	{ functionNode . defineSlot () ; astParameter = functionNode . getJSType () ; }
Distance : 13

191
Tree	{ getNext ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Code	{ getNext ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = astParameter . getNext () ; }
Distance : 10

192
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getJSType () ) ; astParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , astParameter . getJSType () ) ; astParameter = astParameter . getNext () ; }
Distance : 8

193
Tree	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ defineSlot ( astParameter , astParameter . getJSType () , true ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 5

194
Tree	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , false ) ; functionNode = astParameter . getNext () ; }
Distance : 5

195
Tree	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Code	{ getJSType ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; astParameter = jsDocParameter . getNext () ; }
Distance : 9

196
Tree	{ astParameter . getJSType () ; astParameter = astParameter . getNext () ; }
Code	{ astParameter . getJSType () ; astParameter = astParameter . getNext () ; }
Distance : 11

197
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , true ) ; jsDocParameter = astParameter . getNext () ; }
Distance : 4

198
Tree	{ functionNode . defineSlot () ; astParameter = functionNode . getNext () ; }
Code	{ functionNode . defineSlot () ; astParameter = functionNode . getNext () ; }
Distance : 12

199
Tree	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = functionNode . getJSType () ; }
Code	{ defineSlot ( astParameter , functionNode . getJSType () , NUMBER_CONSTANT , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; functionNode = functionNode . getJSType () ; }
Distance : 10

========================================================================


========================================================================
Example Number: 21
Parent Code is: 
if ( token != JsDocToken.LP ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( token != JsDocToken.LP ) { restoreLookAhead ( token ) ; return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=token}) (242{val=!=}) (40{val=JsDocToken.LP})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=reportTypeSyntaxWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=token}) (242{val=!=}) (40{val=JsDocToken.LP})) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=restoreLookAhead}) (214{val=(}) (800{val=token}) (215{val=)})) (227{val=;})) (41 (329{val=return}) (32 (802{val=reportTypeSyntaxWarning}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/68/parent/src_com_google_javascript_jscomp_parsing_JsDocInfoParser.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } LINE_JOINER
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } LINE_JOINER
Distance : 7

1
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } new
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } new
Distance : 10

2
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } IllegalArgumentException
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } IllegalArgumentException
Distance : 10

3
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } FastMath
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } FastMath
Distance : 10

4
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } super
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } super
Distance : 10

5
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } !=
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } !=
Distance : 10

6
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } &&
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } &&
Distance : 10

7
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } T
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } T
Distance : 10

8
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Preconditions
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Preconditions
Distance : 10

9
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } -
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } -
Distance : 10

10
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } =
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } =
Distance : 10

11
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NUMBER_CONSTANT
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NUMBER_CONSTANT
Distance : 10

12
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } testSame
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } testSame
Distance : 10

13
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } STRING_CONSTANT
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } STRING_CONSTANT
Distance : 10

14
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } this
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } this
Distance : 10

15
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } options
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } options
Distance : 10

16
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } value
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } value
Distance : 10

17
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } i
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } i
Distance : 10

18
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } wanted
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } wanted
Distance : 10

19
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Math
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Math
Distance : 10

20
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ex
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ex
Distance : 10

21
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NodeTraversal
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NodeTraversal
Distance : 10

22
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Override
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Override
Distance : 10

23
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mock
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mock
Distance : 10

24
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } nullNotPermitted
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } nullNotPermitted
Distance : 10

25
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } []
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } []
Distance : 10

26
Tree	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } void
Code	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } void
Distance : 10

27
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } p
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } p
Distance : 10

28
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } null
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } null
Distance : 10

29
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } +
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } +
Distance : 10

30
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } if
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } if
Distance : 10

31
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } mock
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } mock
Distance : 7

32
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } nullNotPermitted
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } nullNotPermitted
Distance : 7

33
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } []
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } []
Distance : 7

34
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } void
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } void
Distance : 7

35
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } ==
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } ==
Distance : 7

36
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } compiler
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } compiler
Distance : 7

37
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } String
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } String
Distance : 7

38
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } catch
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } catch
Distance : 7

39
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } throw
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } throw
Distance : 7

40
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } verify
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } verify
Distance : 10

41
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } valueOf
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } valueOf
Distance : 10

42
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } instance
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } instance
Distance : 10

43
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } return
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } return
Distance : 10

44
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } }
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } }
Distance : 10

45
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {
Distance : 10

46
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ()
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ()
Distance : 10

47
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } }
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } }
Distance : 10

48
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <blank>
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <blank>
Distance : 10

49
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } .
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } .
Distance : 10

50
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ,
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ,
Distance : 10

51
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } (
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } (
Distance : 10

52
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <s>
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <s>
Distance : 10

53
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } )
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } )
Distance : 10

54
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ;
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ;
Distance : 10

55
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } public
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } public
Distance : 10

56
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } >
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } >
Distance : 10

57
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <
Distance : 10

58
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ==
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ==
Distance : 10

59
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } compiler
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } compiler
Distance : 10

60
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } String
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } String
Distance : 10

61
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } catch
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } catch
Distance : 10

62
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } sqrt
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } sqrt
Distance : 10

63
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } PeriodType
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } PeriodType
Distance : 10

64
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } b
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } b
Distance : 10

65
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <=
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } <=
Distance : 10

66
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Double
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Double
Distance : 10

67
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } append
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } append
Distance : 10

68
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } UnivariateFunction
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } UnivariateFunction
Distance : 10

69
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } assertThat
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } assertThat
Distance : 10

70
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } invocation
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } invocation
Distance : 10

71
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } x
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } x
Distance : 10

72
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } contains
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } contains
Distance : 10

73
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isNormalBlock
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isNormalBlock
Distance : 10

74
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } else
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } else
Distance : 10

75
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Invocation
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Invocation
Distance : 10

76
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } matcher
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } matcher
Distance : 10

77
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } instant
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } instant
Distance : 10

78
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } reportMatcher
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } reportMatcher
Distance : 10

79
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } abs
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } abs
Distance : 10

80
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } values
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } values
Distance : 10

81
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } protected
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } protected
Distance : 10

82
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } optimizer
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } optimizer
Distance : 10

83
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } alpha
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } alpha
Distance : 10

84
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } y
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } y
Distance : 10

85
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LanguageMode.ECMASCRIPT6
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LanguageMode.ECMASCRIPT6
Distance : 10

86
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getField
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getField
Distance : 10

87
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } PlotChangeEvent
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } PlotChangeEvent
Distance : 10

88
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } for
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } for
Distance : 10

89
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } clone
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } clone
Distance : 10

90
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } Override
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } Override
Distance : 7

91
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getFirstChild
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getFirstChild
Distance : 10

92
Tree	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } size
Code	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } size
Distance : 10

93
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throw
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throw
Distance : 10

94
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } test
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } test
Distance : 10

95
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } @
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } @
Distance : 10

96
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {}
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {}
Distance : 10

97
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MathRuntimeException
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MathRuntimeException
Distance : 10

98
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ]
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ]
Distance : 10

99
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } [
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } [
Distance : 10

100
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } true
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } true
Distance : 10

101
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mode
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mode
Distance : 10

102
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } final
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } final
Distance : 10

103
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } char
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } char
Distance : 10

104
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } JSType
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } JSType
Distance : 10

105
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } setAcceptedLanguage
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } setAcceptedLanguage
Distance : 10

106
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } static
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } static
Distance : 10

107
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } s
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } s
Distance : 10

108
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } a
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } a
Distance : 10

109
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } stroke
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } stroke
Distance : 10

110
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MutableTimePeriod
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MutableTimePeriod
Distance : 10

111
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } traverseEs6
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } traverseEs6
Distance : 10

112
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } obj
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } obj
Distance : 10

113
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } chrono
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } chrono
Distance : 10

114
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } return;
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } return;
Distance : 10

115
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } get
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } get
Distance : 10

116
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isEmpty
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isEmpty
Distance : 10

117
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } StringBuilder
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } StringBuilder
Distance : 10

118
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mockingProgress
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } mockingProgress
Distance : 10

119
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 10

120
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throws
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throws
Distance : 10

121
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getMessage
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getMessage
Distance : 10

122
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } NodeTraversal
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } NodeTraversal
Distance : 7

123
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } Math
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } Math
Distance : 7

124
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } name
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } name
Distance : 10

125
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkArgument
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkArgument
Distance : 10

126
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } data
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } data
Distance : 10

127
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } TestUtils
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } TestUtils
Distance : 10

128
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkNotNull
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkNotNull
Distance : 10

129
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } scope
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } scope
Distance : 10

130
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } sb
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } sb
Distance : 10

131
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isBlock
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } isBlock
Distance : 10

132
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } returnZero
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } returnZero
Distance : 10

133
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Class
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Class
Distance : 10

134
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Test
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Test
Distance : 10

135
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } e
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } e
Distance : 10

136
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } add
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } add
Distance : 10

137
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } n
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } n
Distance : 10

138
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } join
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } join
Distance : 10

139
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } boolean
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } boolean
Distance : 10

140
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } false
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } false
Distance : 10

141
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } m
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } m
Distance : 10

142
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } lines
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } lines
Distance : 10

143
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } notifyListeners
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } notifyListeners
Distance : 10

144
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } c
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } c
Distance : 10

145
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } toString
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } toString
Distance : 10

146
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } source
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } source
Distance : 10

147
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LINE_JOINER
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } LINE_JOINER
Distance : 10

148
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } str
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } str
Distance : 10

149
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } serialised
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } serialised
Distance : 10

150
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } !
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } !
Distance : 10

151
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } reportCodeChange
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } reportCodeChange
Distance : 10

152
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } expected
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } expected
Distance : 10

153
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } t
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } t
Distance : 10

154
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } []
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } []
Distance : 10

155
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } true
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } true
Distance : 10

156
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } void
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } void
Distance : 10

157
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ==
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ==
Distance : 10

158
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } compiler
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } compiler
Distance : 10

159
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } String
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } String
Distance : 10

160
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } catch
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } catch
Distance : 10

161
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throw
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } throw
Distance : 10

162
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } test
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } test
Distance : 10

163
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } @
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } @
Distance : 10

164
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {}
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } {}
Distance : 10

165
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MathRuntimeException
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } MathRuntimeException
Distance : 10

166
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ]
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ]
Distance : 10

167
Tree	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } [
Code	if ( token != null ) { return token . ( ( token , JsDocToken.LP ) ; } [
Distance : 10

168
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 9

169
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } getMessage
Code	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } getMessage
Distance : 9

170
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } StringBuilder
Code	if ( token != null ) { return reportTypeSyntaxWarning ( token , STRING_CONSTANT ) ; } StringBuilder
Distance : 9

171
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } paint
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } paint
Distance : 10

172
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Integer
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Integer
Distance : 10

173
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } v
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } v
Distance : 10

174
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Exception
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Exception
Distance : 10

175
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Node
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } Node
Distance : 10

176
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } long
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } long
Distance : 10

177
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } length
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } length
Distance : 10

178
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } root
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } root
Distance : 10

179
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NodeUtil
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } NodeUtil
Distance : 10

180
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } field
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } field
Distance : 10

181
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getInstance
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getInstance
Distance : 10

182
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } *
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } *
Distance : 10

183
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } type
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } type
Distance : 10

184
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ArrayList
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } ArrayList
Distance : 10

185
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } )
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } )
Distance : 7

186
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } ;
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } ;
Distance : 7

187
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } public
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } public
Distance : 7

188
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } >
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } >
Distance : 7

189
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } <
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } <
Distance : 7

190
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } if
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } if
Distance : 7

191
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } +
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } +
Distance : 7

192
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } null
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } null
Distance : 7

193
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } STRING_CONSTANT
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } STRING_CONSTANT
Distance : 7

194
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } MathRuntimeException
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } MathRuntimeException
Distance : 7

195
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } @
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } @
Distance : 7

196
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } double
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } double
Distance : 10

197
Tree	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } test
Code	if ( token != null ) { return reportTypeSyntaxWarning ( STRING_CONSTANT ) ; } test
Distance : 7

198
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkState
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } checkState
Distance : 10

199
Tree	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getArgumentMatcherStorage
Code	if ( token != null ) { return token . reportTypeSyntaxWarning ( token , JsDocToken.LP ) ; } getArgumentMatcherStorage
Distance : 10

========================================================================


========================================================================
Example Number: 22
Parent Code is: 
{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ initCompilerOptionsIfTesting () ; return toSource ( n , null , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=initCompilerOptionsIfTesting}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (802{val=toSource}) (214{val=(}) (800{val=n}) (234{val=,}) (500{val=null}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=initCompilerOptionsIfTesting}) (216{val=()})) (227{val=;})) (41 (329{val=return}) (32 (802{val=toSource}) (214{val=(}) (800{val=n}) (234{val=,}) (500{val=null}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/64/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Any.ANY , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Any.ANY , n ) ; }
Distance : 4

1
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : LocalizedFormats.EULER_ANGLES_SINGULARITY ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : LocalizedFormats.EULER_ANGLES_SINGULARITY ) ; }
Distance : 5

2
Tree	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Code	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Distance : 6

3
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT8 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT8 , n ) ; }
Distance : 4

4
Tree	{ toSource () ; return toSource ( ComposableFunction.RINT , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.RINT , n ) ; }
Distance : 5

5
Tree	{ toSource () ; return toSource ( normalizeChildren , n ) ; }
Code	{ toSource () ; return toSource ( normalizeChildren , n ) ; }
Distance : 5

6
Tree	{ toSource () ; return toSource ( Token.LABEL_NAME , n ) ; }
Code	{ toSource () ; return toSource ( Token.LABEL_NAME , n ) ; }
Distance : 5

7
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ABS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ABS , n ) ; }
Distance : 4

8
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Distance : 5

9
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Distance : 4

10
Tree	{ toSource () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Distance : 5

11
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.RINT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.RINT , n ) ; }
Distance : 4

12
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : PropertyCollapseLevel.NONE ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : PropertyCollapseLevel.NONE ) ; }
Distance : 5

13
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SINH , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SINH , n ) ; }
Distance : 4

14
Tree	{ toSource () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Distance : 5

15
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.LABEL_NAME , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.LABEL_NAME , n ) ; }
Distance : 4

16
Tree	{ toSource () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Code	{ toSource () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Distance : 6

17
Tree	{ toSource () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Distance : 5

18
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Distance : 4

19
Tree	{ toSource () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Distance : 5

20
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( DiagnosticGroups.TOO_MANY_TYPE_PARAMS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( DiagnosticGroups.TOO_MANY_TYPE_PARAMS , n ) ; }
Distance : 4

21
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( TokenType.STRING , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( TokenType.STRING , n ) ; }
Distance : 4

22
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( e.lineNumber , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( e.lineNumber , n ) ; }
Distance : 4

23
Tree	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Code	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Distance : 5

24
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Null.NULL , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Null.NULL , n ) ; }
Distance : 4

25
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Opcodes.ASM6 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Opcodes.ASM6 , n ) ; }
Distance : 4

26
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : PropertyCollapseLevel.NONE ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : PropertyCollapseLevel.NONE ) ; }
Distance : 5

27
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FAILED_FRACTION_CONVERSION , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FAILED_FRACTION_CONVERSION , n ) ; }
Distance : 4

28
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : FunctionFlavor.NORMAL ) ; }
Distance : 5

29
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Distance : 4

30
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( BinaryFunction.DIVIDE , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( BinaryFunction.DIVIDE , n ) ; }
Distance : 4

31
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.AWAIT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.AWAIT , n ) ; }
Distance : 4

32
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( OPTION.errorIfNoSemiColon , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( OPTION.errorIfNoSemiColon , n ) ; }
Distance : 4

33
Tree	{ toSource () ; return toSource ( Token.AWAIT , n ) ; }
Code	{ toSource () ; return toSource ( Token.AWAIT , n ) ; }
Distance : 5

34
Tree	{ toSource () ; return toSource ( TokenType.STRING , n ) ; }
Code	{ toSource () ; return toSource ( TokenType.STRING , n ) ; }
Distance : 5

35
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT6_TYPED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT6_TYPED , n ) ; }
Distance : 4

36
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( v.data , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( v.data , n ) ; }
Distance : 4

37
Tree	{ toSource () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Distance : 5

38
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Distance : 5

39
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( RemovalType.REMOVE_RHS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( RemovalType.REMOVE_RHS , n ) ; }
Distance : 4

40
Tree	{ toSource () ; return toSource ( ComposableFunction.ABS , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.ABS , n ) ; }
Distance : 5

41
Tree	{ toSource () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Code	{ toSource () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Distance : 5

42
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( normalizeChildren , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( normalizeChildren , n ) ; }
Distance : 4

43
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Distance : 4

44
Tree	{ toSource () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Distance : 5

45
Tree	{ toSource () ; return toSource ( PredefinedName.FROM , n ) ; }
Code	{ toSource () ; return toSource ( PredefinedName.FROM , n ) ; }
Distance : 5

46
Tree	{ toSource () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Distance : 5

47
Tree	{ toSource () ; return toSource ( ComposableFunction.EXP , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.EXP , n ) ; }
Distance : 5

48
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Distance : 4

49
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.DECLARE , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.DECLARE , n ) ; }
Distance : 4

50
Tree	{ toSource () ; return toSource ( Null.NULL , n ) ; }
Code	{ toSource () ; return toSource ( Null.NULL , n ) ; }
Distance : 5

51
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( NewTypeInference.GLOBAL_THIS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( NewTypeInference.GLOBAL_THIS , n ) ; }
Distance : 4

52
Tree	{ toSource () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : PropertyCollapseLevel.NONE ) ; }
Code	{ toSource () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : PropertyCollapseLevel.NONE ) ; }
Distance : 6

53
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Format.COMPACT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Format.COMPACT , n ) ; }
Distance : 4

54
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( source.sumOfLogs , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( source.sumOfLogs , n ) ; }
Distance : 4

55
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ServletUtilities.tempOneTimeFilePrefix , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ServletUtilities.tempOneTimeFilePrefix , n ) ; }
Distance : 4

56
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? Verification.EXPLICIT : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? Verification.EXPLICIT : FunctionFlavor.NORMAL ) ; }
Distance : 5

57
Tree	{ toSource () ; return toSource ( LocalizedFormats.FAILED_FRACTION_CONVERSION , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.FAILED_FRACTION_CONVERSION , n ) ; }
Distance : 5

58
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Distance : 4

59
Tree	{ toSource () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : FunctionFlavor.NORMAL ) ; }
Code	{ toSource () ; return toSource ( n , n ? TypeInferenceMode.NEITHER : FunctionFlavor.NORMAL ) ; }
Distance : 6

60
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( config.keepGoing , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( config.keepGoing , n ) ; }
Distance : 4

61
Tree	{ toSource () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Code	{ toSource () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Distance : 5

62
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
Distance : 2

63
Tree	{ toSource () ; return toSource ( Opcodes.ASM6 , n ) ; }
Code	{ toSource () ; return toSource ( Opcodes.ASM6 , n ) ; }
Distance : 5

64
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.COS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.COS , n ) ; }
Distance : 4

65
Tree	{ toSource () ; return toSource ( assign.assignNode , n ) ; }
Code	{ toSource () ; return toSource ( assign.assignNode , n ) ; }
Distance : 5

66
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.FLOOR , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.FLOOR , n ) ; }
Distance : 4

67
Tree	{ toSource () ; return toSource ( java.util.Locale.US , n ) ; }
Code	{ toSource () ; return toSource ( java.util.Locale.US , n ) ; }
Distance : 5

68
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Distance : 5

69
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( config.warnTrailingCommas , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( config.warnTrailingCommas , n ) ; }
Distance : 4

70
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( mode.featureSet , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( mode.featureSet , n ) ; }
Distance : 4

71
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( java.util.Locale.US , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( java.util.Locale.US , n ) ; }
Distance : 4

72
Tree	{ toSource () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Code	{ toSource () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Distance : 5

73
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( callSite.parent , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( callSite.parent , n ) ; }
Distance : 4

74
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.NUMBER_TOO_SMALL : PropertyCollapseLevel.NONE ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.NUMBER_TOO_SMALL : PropertyCollapseLevel.NONE ) ; }
Distance : 5

75
Tree	{ toSource () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Distance : 5

76
Tree	{ toSource () ; return toSource ( Token.DECLARE , n ) ; }
Code	{ toSource () ; return toSource ( Token.DECLARE , n ) ; }
Distance : 5

77
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( com.google.javascript.jscomp.ConformanceConfig , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( com.google.javascript.jscomp.ConformanceConfig , n ) ; }
Distance : 4

78
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Distance : 4

79
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED , n ) ; }
Distance : 4

80
Tree	{ toSource () ; return toSource ( ComposableFunction.TAN , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.TAN , n ) ; }
Distance : 5

81
Tree	{ toSource () ; return toSource ( ComposableFunction.SIN , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.SIN , n ) ; }
Distance : 5

82
Tree	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 6

83
Tree	{ toSource () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Code	{ toSource () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Distance : 5

84
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ULP , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ULP , n ) ; }
Distance : 4

85
Tree	{ toSource () ; return toSource ( Token.GETELEM , n ) ; }
Code	{ toSource () ; return toSource ( Token.GETELEM , n ) ; }
Distance : 5

86
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.EXP , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.EXP , n ) ; }
Distance : 4

87
Tree	{ toSource () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Code	{ toSource () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Distance : 5

88
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : LocalizedFormats.EULER_ANGLES_SINGULARITY ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : LocalizedFormats.EULER_ANGLES_SINGULARITY ) ; }
Distance : 5

89
Tree	{ toSource () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Code	{ toSource () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Distance : 5

90
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Distance : 4

91
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Distance : 4

92
Tree	{ toSource () ; return toSource ( Token.PARAM_LIST , n ) ; }
Code	{ toSource () ; return toSource ( Token.PARAM_LIST , n ) ; }
Distance : 5

93
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Distance : 4

94
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Distance : 4

95
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.PARAM_LIST , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.PARAM_LIST , n ) ; }
Distance : 4

96
Tree	{ toSource () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Code	{ toSource () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Distance : 5

97
Tree	{ toSource () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Distance : 5

98
Tree	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Code	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Distance : 5

99
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Distance : 4

100
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Distance : 4

101
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.TAN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.TAN , n ) ; }
Distance : 4

102
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Distance : 4

103
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.GETELEM , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.GETELEM , n ) ; }
Distance : 4

104
Tree	{ toSource () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Code	{ toSource () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Distance : 5

105
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( assign.assignNode , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( assign.assignNode , n ) ; }
Distance : 4

106
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 5

107
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.EXP , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.EXP , n ) ; }
Distance : 4

108
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SIN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SIN , n ) ; }
Distance : 4

109
Tree	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Code	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Distance : 5

110
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Distance : 4

111
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Distance : 4

112
Tree	{ toSource () ; return toSource ( Any.ANY , n ) ; }
Code	{ toSource () ; return toSource ( Any.ANY , n ) ; }
Distance : 5

113
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATIONS , n ) ; }
Distance : 4

114
Tree	{ toSource () ; return toSource ( n , null ) ; }
Code	{ toSource () ; return toSource ( n , null ) ; }
Distance : 3

115
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , null ) ; }
Distance : 2

116
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( STRING_CONSTANT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( STRING_CONSTANT , n ) ; }
Distance : 4

117
Tree	{ toSource () ; return toSource ( Any.ANY , n ) ; }
Code	{ toSource () ; return toSource ( Any.ANY , n ) ; }
Distance : 5

118
Tree	{ toSource () ; return toSource ( n , null ) ; }
Code	{ toSource () ; return toSource ( n , null ) ; }
Distance : 3

119
Tree	{ toSource () ; return toSource ( STRING_CONSTANT , n ) ; }
Code	{ toSource () ; return toSource ( STRING_CONSTANT , n ) ; }
Distance : 5

120
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Distance : 4

121
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( STRING_CONSTANT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( STRING_CONSTANT , n ) ; }
Distance : 4

122
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Distance : 4

123
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Distance : 4

124
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Distance : 4

125
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.PARAM_LIST , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.PARAM_LIST , n ) ; }
Distance : 4

126
Tree	{ toSource () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Distance : 5

127
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Distance : 4

128
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SQRT , n ) ; }
Distance : 4

129
Tree	{ toSource () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Distance : 5

130
Tree	{ toSource () ; return toSource ( STRING_CONSTANT , n ) ; }
Code	{ toSource () ; return toSource ( STRING_CONSTANT , n ) ; }
Distance : 5

131
Tree	{ toSource () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.LOG10 , n ) ; }
Distance : 5

132
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Any.ANY , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Any.ANY , n ) ; }
Distance : 4

133
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LazyHolder.INSTANCE , n ) ; }
Distance : 4

134
Tree	{ toSource () ; return toSource ( ComposableFunction.SIN , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.SIN , n ) ; }
Distance : 5

135
Tree	{ toSource () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Code	{ toSource () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Distance : 5

136
Tree	{ toSource () ; return toSource ( ComposableFunction.TAN , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.TAN , n ) ; }
Distance : 5

137
Tree	{ toSource () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Code	{ toSource () ; return toSource ( oldMockHandler.mockingProgress , n ) ; }
Distance : 5

138
Tree	{ toSource () ; return toSource ( Token.GETELEM , n ) ; }
Code	{ toSource () ; return toSource ( Token.GETELEM , n ) ; }
Distance : 5

139
Tree	{ toSource () ; return toSource ( assign.assignNode , n ) ; }
Code	{ toSource () ; return toSource ( assign.assignNode , n ) ; }
Distance : 5

140
Tree	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ toSource () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 6

141
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ATAN , n ) ; }
Distance : 4

142
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( java.util.Locale.US , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( java.util.Locale.US , n ) ; }
Distance : 4

143
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.DECLARE , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.DECLARE , n ) ; }
Distance : 4

144
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SIN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.SIN , n ) ; }
Distance : 4

145
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.TAN , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.TAN , n ) ; }
Distance : 4

146
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 5

147
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.TYPE_ALIAS , n ) ; }
Distance : 4

148
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.GETELEM , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.GETELEM , n ) ; }
Distance : 4

149
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( PredefinedName.FROM , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( PredefinedName.FROM , n ) ; }
Distance : 4

150
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( assign.assignNode , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( assign.assignNode , n ) ; }
Distance : 4

151
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ProcessDefines.UNKNOWN_DEFINE_WARNING , n ) ; }
Distance : 4

152
Tree	{ toSource () ; return toSource ( ComposableFunction.EXP , n ) ; }
Code	{ toSource () ; return toSource ( ComposableFunction.EXP , n ) ; }
Distance : 5

153
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CEIL , n ) ; }
Distance : 4

154
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Distance : 4

155
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Distance : 4

156
Tree	{ toSource () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Code	{ toSource () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Distance : 5

157
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LanguageMode.ECMASCRIPT_2015 , n ) ; }
Distance : 4

158
Tree	{ toSource () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Code	{ toSource () ; return toSource ( AnyVararg.ANY_VARARG , n ) ; }
Distance : 5

159
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( TokenType.STRING , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( TokenType.STRING , n ) ; }
Distance : 4

160
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Mockito.RETURNS_DEFAULTS , n ) ; }
Distance : 4

161
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.AWAIT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.AWAIT , n ) ; }
Distance : 4

162
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.DIGEST_NOT_INITIALIZED , n ) ; }
Distance : 4

163
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ABS , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.ABS , n ) ; }
Distance : 4

164
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? FunctionFlavor.GENERATOR : PropertyCollapseLevel.NONE ) ; }
Distance : 5

165
Tree	{ toSource () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Distance : 5

166
Tree	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Code	{ toSource () ; return toSource ( LanguageMode.ECMASCRIPT_2016 , n ) ; }
Distance : 5

167
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( Token.LABEL_NAME , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( Token.LABEL_NAME , n ) ; }
Distance : 4

168
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( normalizeChildren , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( normalizeChildren , n ) ; }
Distance : 4

169
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n , n ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Distance : 5

170
Tree	{ toSource () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Code	{ toSource () ; return toSource ( LocalizedFormats.EVALUATION_FAILED , n ) ; }
Distance : 5

171
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.CBRT , n ) ; }
Distance : 4

172
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.NON_SQUARE_MATRIX , n ) ; }
Distance : 4

173
Tree	{ toSource () ; return toSource ( Token.PARAM_LIST , n ) ; }
Code	{ toSource () ; return toSource ( Token.PARAM_LIST , n ) ; }
Distance : 5

174
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , n ) ; }
Distance : 4

175
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.RINT , n ) ; }
Code	{ initCompilerOptionsIfTesting () ; return toSource ( ComposableFunction.RINT , n ) ; }
Distance : 4

176
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } parent
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } parent
Distance : 6

177
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } testSame
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } testSame
Distance : 6

178
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } p
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } p
Distance : 6

179
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Test
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Test
Distance : 6

180
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Class
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Class
Distance : 6

181
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } notifyListeners
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } notifyListeners
Distance : 6

182
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } m
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } m
Distance : 6

183
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } List
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } List
Distance : 6

184
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } :
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } :
Distance : 6

185
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } result
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } result
Distance : 6

186
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Args
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Args
Distance : 6

187
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } fail
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } fail
Distance : 6

188
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } try
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } try
Distance : 6

189
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } type
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } type
Distance : 6

190
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } createIllegalArgumentException
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } createIllegalArgumentException
Distance : 6

191
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } boolean
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } boolean
Distance : 6

192
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } str
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } str
Distance : 6

193
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } NodeTraversal
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } NodeTraversal
Distance : 6

194
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } assertThat
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . , ( n ) , null ) ; } assertThat
Distance : 6

195
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } ex
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } ex
Distance : 6

196
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } *
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } *
Distance : 6

197
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } checkArgument
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } checkArgument
Distance : 6

198
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } for
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } for
Distance : 6

199
Tree	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Invocation
Code	{ initCompilerOptionsIfTesting () ; return toSource ( n . null ( n ) , null ) ; } Invocation
Distance : 6

========================================================================


========================================================================
Example Number: 23
Parent Code is: 
String code = toSource ( root , sourceMap ) ;
-------------------------------------------------------------------------------
Child code is: 
String code = toSource ( root , sourceMap , inputSeqNum == NUMBER_CONSTANT ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (802{val=toSource}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=sourceMap}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=code}) (204{val==}) (32 (802{val=toSource}) (214{val=(}) (800{val=root}) (234{val=,}) (800{val=sourceMap}) (234{val=,}) (27 (800{val=inputSeqNum}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/64/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	String code = root . toSource ( code ) ;
Code	String code = root . toSource ( code ) ;
Distance : 8

1
Tree	String code = toSource ( code , sourceMap , code ) ;
Code	String code = toSource ( code , sourceMap , code ) ;
Distance : 4

2
Tree	String code = toSource ( code , sourceMap , false ) ;
Code	String code = toSource ( code , sourceMap , false ) ;
Distance : 4

3
Tree	String code = toSource ( root , sourceMap , sourceMap ) ;
Code	String code = toSource ( root , sourceMap , sourceMap ) ;
Distance : 3

4
Tree	String root = code . toSource ( root ) ;
Code	String root = code . toSource ( root ) ;
Distance : 9

5
Tree	String code = toSource ( sourceMap , code , true ) ;
Code	String code = toSource ( sourceMap , code , true ) ;
Distance : 5

6
Tree	String root = toSource . toSource ( sourceMap ) ;
Code	String root = toSource . toSource ( sourceMap ) ;
Distance : 8

7
Tree	String sourceMap = toSource ( sourceMap , root , code ) ;
Code	String sourceMap = toSource ( sourceMap , root , code ) ;
Distance : 6

8
Tree	String sourceMap = toSource ( toSource () , STRING_CONSTANT , code , sourceMap ) ;
Code	String sourceMap = toSource ( toSource () , STRING_CONSTANT , code , sourceMap ) ;
Distance : 7

9
Tree	String sourceMap = toSource ( sourceMap , root , false ) ;
Code	String sourceMap = toSource ( sourceMap , root , false ) ;
Distance : 6

10
Tree	String code = toSource ( sourceMap , code , sourceMap ) ;
Code	String code = toSource ( sourceMap , code , sourceMap ) ;
Distance : 5

11
Tree	String root = toSource ( toSource () , STRING_CONSTANT , sourceMap , sourceMap ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , sourceMap , sourceMap ) ;
Distance : 7

12
Tree	String root = sourceMap . toSource ( root , code ) ;
Code	String root = sourceMap . toSource ( root , code ) ;
Distance : 8

13
Tree	String code = toSource ( code , code , code ) ;
Code	String code = toSource ( code , code , code ) ;
Distance : 5

14
Tree	String code = toSource ( code , code , false ) ;
Code	String code = toSource ( code , code , false ) ;
Distance : 5

15
Tree	String code = toSource ( root , sourceMap , sourceMap ) ;
Code	String code = toSource ( root , sourceMap , sourceMap ) ;
Distance : 3

16
Tree	String code = toSource ( toSource () , STRING_CONSTANT , root , code ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , root , code ) ;
Distance : 6

17
Tree	String sourceMap = toSource . toSource ( code , sourceMap ) ;
Code	String sourceMap = toSource . toSource ( code , sourceMap ) ;
Distance : 8

18
Tree	String code = toSource ( sourceMap , sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap , sourceMap ) ;
Distance : 4

19
Tree	String sourceMap = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Code	String sourceMap = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Distance : 7

20
Tree	String code = toSource ( root , sourceMap , true ) ;
Code	String code = toSource ( root , sourceMap , true ) ;
Distance : 3

21
Tree	String sourceMap = toSource ( root , code , code ) ;
Code	String sourceMap = toSource ( root , code , code ) ;
Distance : 5

22
Tree	String sourceMap = toSource ( root , code , false ) ;
Code	String sourceMap = toSource ( root , code , false ) ;
Distance : 5

23
Tree	String root = toSource ( root , sourceMap , root ) ;
Code	String root = toSource ( root , sourceMap , root ) ;
Distance : 4

24
Tree	String code = root . toSource ( code , sourceMap ) ;
Code	String code = root . toSource ( code , sourceMap ) ;
Distance : 7

25
Tree	String root = toSource . toSource ( code , code ) ;
Code	String root = toSource . toSource ( code , code ) ;
Distance : 8

26
Tree	String code = toSource ( toSource () , STRING_CONSTANT , sourceMap , root ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , sourceMap , root ) ;
Distance : 6

27
Tree	String root = toSource ( sourceMap , code , root ) ;
Code	String root = toSource ( sourceMap , code , root ) ;
Distance : 6

28
Tree	String code = code ( root ) ;
Code	String code = code ( root ) ;
Distance : 7

29
Tree	String root = code . toSource ( root , sourceMap ) ;
Code	String root = code . toSource ( root , sourceMap ) ;
Distance : 7

30
Tree	String code = toSource ( sourceMap ) ;
Code	String code = toSource ( sourceMap ) ;
Distance : 6

31
Tree	String code = toSource ( sourceMap , sourceMap , true ) ;
Code	String code = toSource ( sourceMap , sourceMap , true ) ;
Distance : 4

32
Tree	String code = code . toSource ( sourceMap , sourceMap ) ;
Code	String code = code . toSource ( sourceMap , sourceMap ) ;
Distance : 7

33
Tree	String code = toSource ( root , code , sourceMap ) ;
Code	String code = toSource ( root , code , sourceMap ) ;
Distance : 4

34
Tree	String root = toSource . toSource ( sourceMap , sourceMap ) ;
Code	String root = toSource . toSource ( sourceMap , sourceMap ) ;
Distance : 7

35
Tree	String root = sourceMap . toSource ( root ) ;
Code	String root = sourceMap . toSource ( root ) ;
Distance : 9

36
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

37
Tree	String code = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Distance : 6

38
Tree	String root = toSource ( toSource () , STRING_CONSTANT , code , code ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , code , code ) ;
Distance : 7

39
Tree	String sourceMap = toSource . toSource ( code ) ;
Code	String sourceMap = toSource . toSource ( code ) ;
Distance : 9

40
Tree	String root = code . toSource ( root , code ) ;
Code	String root = code . toSource ( root , code ) ;
Distance : 8

41
Tree	String code = root ( root ) ;
Code	String code = root ( root ) ;
Distance : 7

42
Tree	String sourceMap = code . toSource ( root ) ;
Code	String sourceMap = code . toSource ( root ) ;
Distance : 9

43
Tree	String sourceMap = toSource . toSource ( sourceMap ) ;
Code	String sourceMap = toSource . toSource ( sourceMap ) ;
Distance : 8

44
Tree	String sourceMap = toSource ( toSource () , STRING_CONSTANT , sourceMap , sourceMap ) ;
Code	String sourceMap = toSource ( toSource () , STRING_CONSTANT , sourceMap , sourceMap ) ;
Distance : 7

45
Tree	String root = toSource ( root , root ) ;
Code	String root = toSource ( root , root ) ;
Distance : 6

46
Tree	String sourceMap = sourceMap . toSource ( root , code ) ;
Code	String sourceMap = sourceMap . toSource ( root , code ) ;
Distance : 8

47
Tree	String root = toSource ( root , root , true ) ;
Code	String root = toSource ( root , root , true ) ;
Distance : 5

48
Tree	String root = sourceMap . toSource ( sourceMap , root ) ;
Code	String root = sourceMap . toSource ( sourceMap , root ) ;
Distance : 8

49
Tree	String code = toSource ( toSource () , STRING_CONSTANT , root , code ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , root , code ) ;
Distance : 6

50
Tree	String root = toSource ( code , sourceMap , sourceMap ) ;
Code	String root = toSource ( code , sourceMap , sourceMap ) ;
Distance : 5

51
Tree	String root = root . toSource ( code , root ) ;
Code	String root = root . toSource ( code , root ) ;
Distance : 9

52
Tree	String sourceMap = toSource ( toSource () , STRING_CONSTANT , code , code ) ;
Code	String sourceMap = toSource ( toSource () , STRING_CONSTANT , code , code ) ;
Distance : 7

53
Tree	String sourceMap = code . toSource ( root , code ) ;
Code	String sourceMap = code . toSource ( root , code ) ;
Distance : 8

54
Tree	String sourceMap = root . toSource ( root , sourceMap ) ;
Code	String sourceMap = root . toSource ( root , sourceMap ) ;
Distance : 7

55
Tree	String root = code . toSource ( sourceMap , root ) ;
Code	String root = code . toSource ( sourceMap , root ) ;
Distance : 8

56
Tree	String sourceMap = toSource . toSource ( sourceMap , code ) ;
Code	String sourceMap = toSource . toSource ( sourceMap , code ) ;
Distance : 7

57
Tree	String code = toSource ( sourceMap , sourceMap , code ) ;
Code	String code = toSource ( sourceMap , sourceMap , code ) ;
Distance : 4

58
Tree	String code = toSource ( root , root , root ) ;
Code	String code = toSource ( root , root , root ) ;
Distance : 4

59
Tree	String root = root . toSource ( root , code ) ;
Code	String root = root . toSource ( root , code ) ;
Distance : 8

60
Tree	String code = sourceMap . toSource ( sourceMap , sourceMap ) ;
Code	String code = sourceMap . toSource ( sourceMap , sourceMap ) ;
Distance : 7

61
Tree	String code = toSource ( sourceMap , root , sourceMap ) ;
Code	String code = toSource ( sourceMap , root , sourceMap ) ;
Distance : 5

62
Tree	String code = toSource ( sourceMap ) ;
Code	String code = toSource ( sourceMap ) ;
Distance : 6

63
Tree	String root = root . toSource ( root , sourceMap ) ;
Code	String root = root . toSource ( root , sourceMap ) ;
Distance : 7

64
Tree	String code = root . toSource ( sourceMap , sourceMap ) ;
Code	String code = root . toSource ( sourceMap , sourceMap ) ;
Distance : 7

65
Tree	String root = toSource . toSource ( sourceMap , code ) ;
Code	String root = toSource . toSource ( sourceMap , code ) ;
Distance : 7

66
Tree	String sourceMap = toSource ( sourceMap , sourceMap , root ) ;
Code	String sourceMap = toSource ( sourceMap , sourceMap , root ) ;
Distance : 5

67
Tree	String code = toSource ( root , code , sourceMap ) ;
Code	String code = toSource ( root , code , sourceMap ) ;
Distance : 4

68
Tree	String root = sourceMap . toSource ( code , root ) ;
Code	String root = sourceMap . toSource ( code , root ) ;
Distance : 9

69
Tree	String sourceMap = sourceMap . toSource ( root , sourceMap ) ;
Code	String sourceMap = sourceMap . toSource ( root , sourceMap ) ;
Distance : 7

70
Tree	String sourceMap = toSource ( root , sourceMap , root ) ;
Code	String sourceMap = toSource ( root , sourceMap , root ) ;
Distance : 4

71
Tree	String root = toSource . toSource ( root , sourceMap ) ;
Code	String root = toSource . toSource ( root , sourceMap ) ;
Distance : 7

72
Tree	String root = root . toSource ( root ) ;
Code	String root = root . toSource ( root ) ;
Distance : 9

73
Tree	String code = toSource ( root , sourceMap , sourceMap ) ;
Code	String code = toSource ( root , sourceMap , sourceMap ) ;
Distance : 3

74
Tree	String root = code . toSource ( code , root ) ;
Code	String root = code . toSource ( code , root ) ;
Distance : 9

75
Tree	String sourceMap = toSource ( sourceMap , code , root ) ;
Code	String sourceMap = toSource ( sourceMap , code , root ) ;
Distance : 6

76
Tree	String sourceMap = toSource . toSource ( code , code ) ;
Code	String sourceMap = toSource . toSource ( code , code ) ;
Distance : 8

77
Tree	String sourceMap = code . toSource ( root , sourceMap ) ;
Code	String sourceMap = code . toSource ( root , sourceMap ) ;
Distance : 7

78
Tree	String sourceMap = toSource . toSource ( sourceMap , sourceMap ) ;
Code	String sourceMap = toSource . toSource ( sourceMap , sourceMap ) ;
Distance : 7

79
Tree	String sourceMap = sourceMap . toSource ( root ) ;
Code	String sourceMap = sourceMap . toSource ( root ) ;
Distance : 9

80
Tree	String root = toSource ( code , sourceMap ) ;
Code	String root = toSource ( code , sourceMap ) ;
Distance : 6

81
Tree	String code = toSource ( sourceMap , sourceMap , false ) ;
Code	String code = toSource ( sourceMap , sourceMap , false ) ;
Distance : 4

82
Tree	String code = sourceMap ( root ) ;
Code	String code = sourceMap ( root ) ;
Distance : 7

83
Tree	String code = toSource ( root , sourceMap , sourceMap ) ;
Code	String code = toSource ( root , sourceMap , sourceMap ) ;
Distance : 3

84
Tree	String sourceMap = root . toSource ( sourceMap , code ) ;
Code	String sourceMap = root . toSource ( sourceMap , code ) ;
Distance : 8

85
Tree	String root = toSource ( code , root , code ) ;
Code	String root = toSource ( code , root , code ) ;
Distance : 6

86
Tree	String root = toSource ( code , root , false ) ;
Code	String root = toSource ( code , root , false ) ;
Distance : 6

87
Tree	String sourceMap = toSource ( root ) ;
Code	String sourceMap = toSource ( root ) ;
Distance : 7

88
Tree	String sourceMap = toSource ( sourceMap , root ) ;
Code	String sourceMap = toSource ( sourceMap , root ) ;
Distance : 6

89
Tree	String code = toSource ( sourceMap , root , root ) ;
Code	String code = toSource ( sourceMap , root , root ) ;
Distance : 5

90
Tree	String sourceMap = root . toSource ( root , sourceMap ) ;
Code	String sourceMap = root . toSource ( root , sourceMap ) ;
Distance : 7

91
Tree	String root = toSource ( sourceMap , root , sourceMap ) ;
Code	String root = toSource ( sourceMap , root , sourceMap ) ;
Distance : 6

92
Tree	String code = toSource ( code , code ) ;
Code	String code = toSource ( code , code ) ;
Distance : 6

93
Tree	String sourceMap = toSource ( root , sourceMap , sourceMap ) ;
Code	String sourceMap = toSource ( root , sourceMap , sourceMap ) ;
Distance : 4

94
Tree	String code = toSource ( sourceMap , sourceMap , code ) ;
Code	String code = toSource ( sourceMap , sourceMap , code ) ;
Distance : 4

95
Tree	String code = toSource ( sourceMap , sourceMap , false ) ;
Code	String code = toSource ( sourceMap , sourceMap , false ) ;
Distance : 4

96
Tree	String code = toSource . toSource ( root , code ) ;
Code	String code = toSource . toSource ( root , code ) ;
Distance : 7

97
Tree	String root = toSource ( code , sourceMap , root ) ;
Code	String root = toSource ( code , sourceMap , root ) ;
Distance : 5

98
Tree	String sourceMap = toSource ( root , code , sourceMap ) ;
Code	String sourceMap = toSource ( root , code , sourceMap ) ;
Distance : 5

99
Tree	String code = sourceMap . toSource ( root , root ) ;
Code	String code = sourceMap . toSource ( root , root ) ;
Distance : 7

100
Tree	String root = toSource ( root ) ;
Code	String root = toSource ( root ) ;
Distance : 7

101
Tree	String code = toSource ( code , sourceMap ) ;
Code	String code = toSource ( code , sourceMap ) ;
Distance : 5

102
Tree	String code = toSource . toSource ( root ) ;
Code	String code = toSource . toSource ( root ) ;
Distance : 8

103
Tree	String code = toSource . toSource ( root , code ) ;
Code	String code = toSource . toSource ( root , code ) ;
Distance : 7

104
Tree	String sourceMap = toSource ( code , code ) ;
Code	String sourceMap = toSource ( code , code ) ;
Distance : 7

105
Tree	String root = code . toSource ( root , root ) ;
Code	String root = code . toSource ( root , root ) ;
Distance : 8

106
Tree	String code = toSource ( root ) ;
Code	String code = toSource ( root ) ;
Distance : 6

107
Tree	String sourceMap = toSource . toSource ( root , code ) ;
Code	String sourceMap = toSource . toSource ( root , code ) ;
Distance : 8

108
Tree	String root = toSource ( code , sourceMap , sourceMap ) ;
Code	String root = toSource ( code , sourceMap , sourceMap ) ;
Distance : 5

109
Tree	String root = code ( root , code ) ;
Code	String root = code ( root , code ) ;
Distance : 7

110
Tree	String root = toSource ( sourceMap , code ) ;
Code	String root = toSource ( sourceMap , code ) ;
Distance : 6

111
Tree	String root = root ( code , root ) ;
Code	String root = root ( code , root ) ;
Distance : 8

112
Tree	String sourceMap = toSource ( code , sourceMap ) ;
Code	String sourceMap = toSource ( code , sourceMap ) ;
Distance : 6

113
Tree	String code = toSource ( root , code , code ) ;
Code	String code = toSource ( root , code , code ) ;
Distance : 4

114
Tree	String sourceMap = toSource ( root , code ) ;
Code	String sourceMap = toSource ( root , code ) ;
Distance : 6

115
Tree	String sourceMap = root . toSource ( sourceMap ) ;
Code	String sourceMap = root . toSource ( sourceMap ) ;
Distance : 9

116
Tree	String root = toSource ( root , root , sourceMap ) ;
Code	String root = toSource ( root , root , sourceMap ) ;
Distance : 5

117
Tree	String code = toSource ( root , code , root ) ;
Code	String code = toSource ( root , code , root ) ;
Distance : 4

118
Tree	String sourceMap = toSource ( root , code , true ) ;
Code	String sourceMap = toSource ( root , code , true ) ;
Distance : 5

119
Tree	String code = toSource . toSource ( root , sourceMap ) ;
Code	String code = toSource . toSource ( root , sourceMap ) ;
Distance : 6

120
Tree	String code = toSource ( code , code ) ;
Code	String code = toSource ( code , code ) ;
Distance : 6

121
Tree	String sourceMap = toSource ( root , root , sourceMap ) ;
Code	String sourceMap = toSource ( root , root , sourceMap ) ;
Distance : 5

122
Tree	String code = toSource . toSource ( code , root ) ;
Code	String code = toSource . toSource ( code , root ) ;
Distance : 7

123
Tree	String root = toSource ( code , code , root ) ;
Code	String root = toSource ( code , code , root ) ;
Distance : 6

124
Tree	String code = toSource ( code , sourceMap , true ) ;
Code	String code = toSource ( code , sourceMap , true ) ;
Distance : 4

125
Tree	String code = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Distance : 6

126
Tree	String root = toSource ( toSource () , STRING_CONSTANT , code , sourceMap ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , code , sourceMap ) ;
Distance : 7

127
Tree	String code = toSource ( sourceMap , sourceMap ) ;
Code	String code = toSource ( sourceMap , sourceMap ) ;
Distance : 5

128
Tree	String code = code . toSource ( code , sourceMap ) ;
Code	String code = code . toSource ( code , sourceMap ) ;
Distance : 7

129
Tree	String root = toSource ( sourceMap , root , code ) ;
Code	String root = toSource ( sourceMap , root , code ) ;
Distance : 6

130
Tree	String root = toSource . toSource ( code , sourceMap ) ;
Code	String root = toSource . toSource ( code , sourceMap ) ;
Distance : 8

131
Tree	String root = toSource ( sourceMap , root , false ) ;
Code	String root = toSource ( sourceMap , root , false ) ;
Distance : 6

132
Tree	String code = toSource ( root , sourceMap ) ;
Code	String code = toSource ( root , sourceMap ) ;
Distance : 4

133
Tree	String sourceMap = toSource ( code , code , root ) ;
Code	String sourceMap = toSource ( code , code , root ) ;
Distance : 6

134
Tree	String code = toSource ( sourceMap , code ) ;
Code	String code = toSource ( sourceMap , code ) ;
Distance : 5

135
Tree	String code = toSource ( code ) ;
Code	String code = toSource ( code ) ;
Distance : 7

136
Tree	String sourceMap = toSource ( root , sourceMap , code ) ;
Code	String sourceMap = toSource ( root , sourceMap , code ) ;
Distance : 4

137
Tree	String sourceMap = toSource ( root , sourceMap , false ) ;
Code	String sourceMap = toSource ( root , sourceMap , false ) ;
Distance : 4

138
Tree	String root = toSource . toSource ( code ) ;
Code	String root = toSource . toSource ( code ) ;
Distance : 9

139
Tree	String code = root . toSource ( root , root ) ;
Code	String code = root . toSource ( root , root ) ;
Distance : 7

140
Tree	String code = toSource ( code , root , sourceMap ) ;
Code	String code = toSource ( code , root , sourceMap ) ;
Distance : 5

141
Tree	String root = toSource ( sourceMap , sourceMap , root ) ;
Code	String root = toSource ( sourceMap , sourceMap , root ) ;
Distance : 5

142
Tree	String sourceMap = toSource ( code , sourceMap , root ) ;
Code	String sourceMap = toSource ( code , sourceMap , root ) ;
Distance : 5

143
Tree	String root = sourceMap . toSource ( root , sourceMap ) ;
Code	String root = sourceMap . toSource ( root , sourceMap ) ;
Distance : 7

144
Tree	String code = root . toSource ( root , root ) ;
Code	String code = root . toSource ( root , root ) ;
Distance : 7

145
Tree	String code = sourceMap . toSource ( code , sourceMap ) ;
Code	String code = sourceMap . toSource ( code , sourceMap ) ;
Distance : 7

146
Tree	String code = code . toSource ( root , root ) ;
Code	String code = code . toSource ( root , root ) ;
Distance : 7

147
Tree	String code = toSource ( code , sourceMap , sourceMap ) ;
Code	String code = toSource ( code , sourceMap , sourceMap ) ;
Distance : 4

148
Tree	String root = toSource ( root , sourceMap , code ) ;
Code	String root = toSource ( root , sourceMap , code ) ;
Distance : 4

149
Tree	String root = toSource ( root , sourceMap , false ) ;
Code	String root = toSource ( root , sourceMap , false ) ;
Distance : 4

150
Tree	String code = toSource ( code , code , true ) ;
Code	String code = toSource ( code , code , true ) ;
Distance : 5

151
Tree	String sourceMap = toSource ( sourceMap , root , sourceMap ) ;
Code	String sourceMap = toSource ( sourceMap , root , sourceMap ) ;
Distance : 6

152
Tree	String code = toSource ( toSource () , STRING_CONSTANT , code , root ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , code , root ) ;
Distance : 6

153
Tree	String sourceMap = toSource ( code , root , code ) ;
Code	String sourceMap = toSource ( code , root , code ) ;
Distance : 6

154
Tree	String sourceMap = toSource ( code , root , false ) ;
Code	String sourceMap = toSource ( code , root , false ) ;
Distance : 6

155
Tree	String code = toSource ( code , code , sourceMap ) ;
Code	String code = toSource ( code , code , sourceMap ) ;
Distance : 5

156
Tree	String code = sourceMap . toSource ( root , root ) ;
Code	String code = sourceMap . toSource ( root , root ) ;
Distance : 7

157
Tree	String root = toSource ( root , code , false ) ;
Code	String root = toSource ( root , code , false ) ;
Distance : 5

158
Tree	String root = toSource ( root , code , code ) ;
Code	String root = toSource ( root , code , code ) ;
Distance : 5

159
Tree	String code = toSource ( code ) ;
Code	String code = toSource ( code ) ;
Distance : 7

160
Tree	String sourceMap = toSource ( root ) ;
Code	String sourceMap = toSource ( root ) ;
Distance : 7

161
Tree	String code = code . toSource ( root , root ) ;
Code	String code = code . toSource ( root , root ) ;
Distance : 7

162
Tree	String code = toSource . toSource ( sourceMap , root ) ;
Code	String code = toSource . toSource ( sourceMap , root ) ;
Distance : 6

163
Tree	String root = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Distance : 7

164
Tree	String code = toSource ( root , sourceMap , false ) ;
Code	String code = toSource ( root , sourceMap , false ) ;
Distance : 3

165
Tree	String root = toSource ( code , code , sourceMap ) ;
Code	String root = toSource ( code , code , sourceMap ) ;
Distance : 6

166
Tree	String root = toSource ( toSource () , STRING_CONSTANT , sourceMap , code ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , sourceMap , code ) ;
Distance : 7

167
Tree	String sourceMap = toSource ( sourceMap , root , root ) ;
Code	String sourceMap = toSource ( sourceMap , root , root ) ;
Distance : 6

168
Tree	String code = toSource ( code , code , root ) ;
Code	String code = toSource ( code , code , root ) ;
Distance : 5

169
Tree	String root = code . toSource ( root , root ) ;
Code	String root = code . toSource ( root , root ) ;
Distance : 8

170
Tree	String sourceMap = toSource ( sourceMap , sourceMap , code ) ;
Code	String sourceMap = toSource ( sourceMap , sourceMap , code ) ;
Distance : 5

171
Tree	String sourceMap = toSource ( sourceMap , sourceMap , false ) ;
Code	String sourceMap = toSource ( sourceMap , sourceMap , false ) ;
Distance : 5

172
Tree	String sourceMap = toSource . toSource ( root , code ) ;
Code	String sourceMap = toSource . toSource ( root , code ) ;
Distance : 8

173
Tree	String root = toSource . toSource ( sourceMap , root ) ;
Code	String root = toSource . toSource ( sourceMap , root ) ;
Distance : 7

174
Tree	String root = sourceMap . toSource ( root , root ) ;
Code	String root = sourceMap . toSource ( root , root ) ;
Distance : 8

175
Tree	String root = sourceMap . toSource ( code , sourceMap ) ;
Code	String root = sourceMap . toSource ( code , sourceMap ) ;
Distance : 8

176
Tree	String code = toSource ( root , sourceMap , false ) ;
Code	String code = toSource ( root , sourceMap , false ) ;
Distance : 3

177
Tree	String root = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , root , sourceMap ) ;
Distance : 7

178
Tree	String root = code . toSource ( code , sourceMap ) ;
Code	String root = code . toSource ( code , sourceMap ) ;
Distance : 8

179
Tree	String sourceMap = toSource . toSource ( code , root ) ;
Code	String sourceMap = toSource . toSource ( code , root ) ;
Distance : 8

180
Tree	String code = toSource ( root , code , code ) ;
Code	String code = toSource ( root , code , code ) ;
Distance : 4

181
Tree	String code = toSource ( root , code , false ) ;
Code	String code = toSource ( root , code , false ) ;
Distance : 4

182
Tree	String sourceMap = toSource ( code , sourceMap , true ) ;
Code	String sourceMap = toSource ( code , sourceMap , true ) ;
Distance : 5

183
Tree	String code = toSource ( root , sourceMap , code ) ;
Code	String code = toSource ( root , sourceMap , code ) ;
Distance : 3

184
Tree	String code = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Code	String code = toSource ( toSource () , STRING_CONSTANT , root , root ) ;
Distance : 6

185
Tree	String root = toSource ( toSource () , STRING_CONSTANT , code , root ) ;
Code	String root = toSource ( toSource () , STRING_CONSTANT , code , root ) ;
Distance : 7

186
Tree	String code = toSource ( code , sourceMap , root ) ;
Code	String code = toSource ( code , sourceMap , root ) ;
Distance : 4

187
Tree	String root = toSource ( sourceMap , sourceMap , code ) ;
Code	String root = toSource ( sourceMap , sourceMap , code ) ;
Distance : 5

188
Tree	String root = toSource . toSource ( root , code ) ;
Code	String root = toSource . toSource ( root , code ) ;
Distance : 8

189
Tree	String root = toSource ( sourceMap , sourceMap , false ) ;
Code	String root = toSource ( sourceMap , sourceMap , false ) ;
Distance : 5

190
Tree	String code = toSource ( sourceMap , root , true ) ;
Code	String code = toSource ( sourceMap , root , true ) ;
Distance : 5

191
Tree	String sourceMap = toSource ( root , sourceMap , root ) ;
Code	String sourceMap = toSource ( root , sourceMap , root ) ;
Distance : 4

192
Tree	String code = toSource ( sourceMap , root , sourceMap ) ;
Code	String code = toSource ( sourceMap , root , sourceMap ) ;
Distance : 5

193
Tree	String code = toSource ( code , sourceMap , sourceMap ) ;
Code	String code = toSource ( code , sourceMap , sourceMap ) ;
Distance : 4

194
Tree	String code = toSource ( code , root , code ) ;
Code	String code = toSource ( code , root , code ) ;
Distance : 5

195
Tree	String code = toSource ( code , root , false ) ;
Code	String code = toSource ( code , root , false ) ;
Distance : 5

196
Tree	String root = toSource . toSource ( code , root ) ;
Code	String root = toSource . toSource ( code , root ) ;
Distance : 8

197
Tree	String sourceMap = toSource ( root , code , root ) ;
Code	String sourceMap = toSource ( root , code , root ) ;
Distance : 5

198
Tree	String sourceMap = toSource . toSource ( root , sourceMap ) ;
Code	String sourceMap = toSource . toSource ( root , sourceMap ) ;
Distance : 7

199
Tree	String root = toSource ( code , sourceMap , true ) ;
Code	String root = toSource ( code , sourceMap , true ) ;
Distance : 5

========================================================================


========================================================================
Example Number: 24
Parent Code is: 
this . maybeAliased = ! assignNode . getParent () . isExprResult () ;
-------------------------------------------------------------------------------
Child code is: 
this . maybeAliased = NodeUtil . isExpressionResultUsed ( assignNode ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maybeAliased})) (204{val==}) (38 (207{val=!}) (32 (32 (800{val=assignNode}) (235{val=.}) (802{val=getParent}) (216{val=()})) (235{val=.}) (802{val=isExprResult}) (216{val=()})))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=maybeAliased})) (204{val==}) (32 (800{val=NodeUtil}) (235{val=.}) (802{val=isExpressionResultUsed}) (214{val=(}) (800{val=assignNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/45/parent/src_com_google_javascript_jscomp_RemoveUnusedVars.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	typeArguments.length = TypeInferenceMode.CHECKED . getParent () ;
Code	typeArguments.length = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

1
Tree	p.newName = TypeInferenceMode.CHECKED . getParent () ;
Code	p.newName = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

2
Tree	entry.map = MathUtils.TWO_PI . getParent () ;
Code	entry.map = MathUtils.TWO_PI . getParent () ;
Distance : 8

3
Tree	RemoveUnusedCode.Builder = metadata.superClassNameNode . getParent () ;
Code	RemoveUnusedCode.Builder = metadata.superClassNameNode . getParent () ;
Distance : 8

4
Tree	instance.declarations = TypeInferenceMode.CHECKED . getParent () ;
Code	instance.declarations = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

5
Tree	JSTypeNative.NO_OBJECT_TYPE = TypeInferenceMode.CHECKED . getParent () ;
Code	JSTypeNative.NO_OBJECT_TYPE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

6
Tree	copy.linkMap = TypeInferenceMode.CHECKED . getParent () ;
Code	copy.linkMap = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

7
Tree	bindComponents.thisValue = TypeInferenceMode.CHECKED . getParent () ;
Code	bindComponents.thisValue = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

8
Tree	LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE = TypeInferenceMode.CHECKED . getParent () ;
Code	LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

9
Tree	nt1.rawType = RegularizedGamma.P . getParent () ;
Code	nt1.rawType = RegularizedGamma.P . getParent () ;
Distance : 8

10
Tree	currentCase.embedInto = TypeInferenceMode.CHECKED . getParent () ;
Code	currentCase.embedInto = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

11
Tree	Reach.ALL = TypeInferenceMode.CHECKED . getParent () ;
Code	Reach.ALL = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

12
Tree	LocalizedFormats.EVALUATIONS = RegularizedGamma.P . getParent () ;
Code	LocalizedFormats.EVALUATIONS = RegularizedGamma.P . getParent () ;
Distance : 8

13
Tree	OutputJs.NORMAL = TypeInferenceMode.CHECKED . getParent () ;
Code	OutputJs.NORMAL = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

14
Tree	this = TypeInferenceMode.CHECKED . getParent () ;
Code	this = TypeInferenceMode.CHECKED . getParent () ;
Distance : 7

15
Tree	entry.map = metadata.superClassNameNode . getParent () ;
Code	entry.map = metadata.superClassNameNode . getParent () ;
Distance : 8

16
Tree	nt1.rawType = MathUtils.TWO_PI . getParent () ;
Code	nt1.rawType = MathUtils.TWO_PI . getParent () ;
Distance : 8

17
Tree	setMinorTickCount = RegularizedGamma.P . getParent () ;
Code	setMinorTickCount = RegularizedGamma.P . getParent () ;
Distance : 8

18
Tree	ref.node = RegularizedGamma.P . getParent () ;
Code	ref.node = RegularizedGamma.P . getParent () ;
Distance : 8

19
Tree	that.drawable = TypeInferenceMode.CHECKED . getParent () ;
Code	that.drawable = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

20
Tree	LocalizedFormats.EVALUATIONS = MathUtils.TWO_PI . getParent () ;
Code	LocalizedFormats.EVALUATIONS = MathUtils.TWO_PI . getParent () ;
Distance : 8

21
Tree	CopyOnWriteArrayList = TypeInferenceMode.CHECKED . getParent () ;
Code	CopyOnWriteArrayList = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

22
Tree	TransformType.FORWARD = TypeInferenceMode.CHECKED . getParent () ;
Code	TransformType.FORWARD = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

23
Tree	LocalizedFormats.SAME_SIGN_AT_ENDPOINTS = TypeInferenceMode.CHECKED . getParent () ;
Code	LocalizedFormats.SAME_SIGN_AT_ENDPOINTS = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

24
Tree	setMinorTickCount = MathUtils.TWO_PI . getParent () ;
Code	setMinorTickCount = MathUtils.TWO_PI . getParent () ;
Distance : 8

25
Tree	lastLink.nextLink = TypeInferenceMode.CHECKED . getParent () ;
Code	lastLink.nextLink = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

26
Tree	NewTypeInference.INEXISTENT_PROPERTY = metadata.superClassNameNode . getParent () ;
Code	NewTypeInference.INEXISTENT_PROPERTY = metadata.superClassNameNode . getParent () ;
Distance : 8

27
Tree	LocalizedFormats.NO_DATA = TypeInferenceMode.CHECKED . getParent () ;
Code	LocalizedFormats.NO_DATA = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

28
Tree	other.liveSet = TypeInferenceMode.CHECKED . getParent () ;
Code	other.liveSet = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

29
Tree	entry.map = RegularizedGamma.P . getParent () ;
Code	entry.map = RegularizedGamma.P . getParent () ;
Distance : 8

30
Tree	nt1.rawType = TypeInferenceMode.CHECKED . getParent () ;
Code	nt1.rawType = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

31
Tree	LocalizedFormats.EVALUATIONS = TypeInferenceMode.CHECKED . getParent () ;
Code	LocalizedFormats.EVALUATIONS = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

32
Tree	setMinorTickCount = TypeInferenceMode.CHECKED . getParent () ;
Code	setMinorTickCount = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

33
Tree	ref.node = TypeInferenceMode.CHECKED . getParent () ;
Code	ref.node = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

34
Tree	SimplexSolver.DEFAULT_ULPS = TypeInferenceMode.CHECKED . getParent () ;
Code	SimplexSolver.DEFAULT_ULPS = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

35
Tree	addListeners = TypeInferenceMode.CHECKED . getParent () ;
Code	addListeners = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

36
Tree	finder.firstUnverifiedToReturn = TypeInferenceMode.CHECKED . getParent () ;
Code	finder.firstUnverifiedToReturn = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

37
Tree	Node.FREE_CALL = TypeInferenceMode.CHECKED . getParent () ;
Code	Node.FREE_CALL = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

38
Tree	TypeInferenceMode.NEITHER = TypeInferenceMode.CHECKED . getParent () ;
Code	TypeInferenceMode.NEITHER = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

39
Tree	typeArguments.length = RegularizedGamma.P . getParent () ;
Code	typeArguments.length = RegularizedGamma.P . getParent () ;
Distance : 8

40
Tree	ImmutableMultiset.Builder = TypeInferenceMode.CHECKED . getParent () ;
Code	ImmutableMultiset.Builder = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

41
Tree	setChart = TypeInferenceMode.CHECKED . getParent () ;
Code	setChart = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

42
Tree	state.out = TypeInferenceMode.CHECKED . getParent () ;
Code	state.out = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

43
Tree	typeArguments.length = MathUtils.TWO_PI . getParent () ;
Code	typeArguments.length = MathUtils.TWO_PI . getParent () ;
Distance : 8

44
Tree	LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE = TypeInferenceMode.CHECKED . getParent () ;
Code	LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

45
Tree	callSite.parent = TypeInferenceMode.CHECKED . getParent () ;
Code	callSite.parent = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

46
Tree	t1.time = TypeInferenceMode.CHECKED . getParent () ;
Code	t1.time = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

47
Tree	NewTypeInference.INEXISTENT_PROPERTY = RegularizedGamma.P . getParent () ;
Code	NewTypeInference.INEXISTENT_PROPERTY = RegularizedGamma.P . getParent () ;
Distance : 8

48
Tree	RegularizedGamma.P = TypeInferenceMode.CHECKED . getParent () ;
Code	RegularizedGamma.P = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

49
Tree	RemoveUnusedCode.Builder = RegularizedGamma.P . getParent () ;
Code	RemoveUnusedCode.Builder = RegularizedGamma.P . getParent () ;
Distance : 8

50
Tree	typeArguments.length = metadata.superClassNameNode . getParent () ;
Code	typeArguments.length = metadata.superClassNameNode . getParent () ;
Distance : 8

51
Tree	NewTypeInference.INEXISTENT_PROPERTY = MathUtils.TWO_PI . getParent () ;
Code	NewTypeInference.INEXISTENT_PROPERTY = MathUtils.TWO_PI . getParent () ;
Distance : 8

52
Tree	oneOverN = TypeInferenceMode.CHECKED . getParent () ;
Code	oneOverN = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

53
Tree	Node.FLAG_LOCAL_RESULTS = TypeInferenceMode.CHECKED . getParent () ;
Code	Node.FLAG_LOCAL_RESULTS = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

54
Tree	RemoveUnusedCode.Builder = MathUtils.TWO_PI . getParent () ;
Code	RemoveUnusedCode.Builder = MathUtils.TWO_PI . getParent () ;
Distance : 8

55
Tree	error.node = TypeInferenceMode.CHECKED . getParent () ;
Code	error.node = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

56
Tree	dest.n = TypeInferenceMode.CHECKED . getParent () ;
Code	dest.n = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

57
Tree	Void.TYPE = TypeInferenceMode.CHECKED . getParent () ;
Code	Void.TYPE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

58
Tree	ref.node = MathUtils.TWO_PI . getParent () ;
Code	ref.node = MathUtils.TWO_PI . getParent () ;
Distance : 8

59
Tree	nt1.rawType = metadata.superClassNameNode . getParent () ;
Code	nt1.rawType = metadata.superClassNameNode . getParent () ;
Distance : 8

60
Tree	Token.SCRIPT = TypeInferenceMode.CHECKED . getParent () ;
Code	Token.SCRIPT = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

61
Tree	mapper.start = TypeInferenceMode.CHECKED . getParent () ;
Code	mapper.start = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

62
Tree	SimplexSolver.DEFAULT_ULPS = metadata.superClassNameNode . getParent () ;
Code	SimplexSolver.DEFAULT_ULPS = metadata.superClassNameNode . getParent () ;
Distance : 8

63
Tree	that.key = TypeInferenceMode.CHECKED . getParent () ;
Code	that.key = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

64
Tree	Node.FREE_CALL = RegularizedGamma.P . getParent () ;
Code	Node.FREE_CALL = RegularizedGamma.P . getParent () ;
Distance : 8

65
Tree	that.artifactPaint = TypeInferenceMode.CHECKED . getParent () ;
Code	that.artifactPaint = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

66
Tree	addListeners = metadata.superClassNameNode . getParent () ;
Code	addListeners = metadata.superClassNameNode . getParent () ;
Distance : 8

67
Tree	finder.firstUnverifiedToReturn = MathUtils.TWO_PI . getParent () ;
Code	finder.firstUnverifiedToReturn = MathUtils.TWO_PI . getParent () ;
Distance : 8

68
Tree	Exec.INSTANCE = TypeInferenceMode.CHECKED . getParent () ;
Code	Exec.INSTANCE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

69
Tree	that.indexParamName = TypeInferenceMode.CHECKED . getParent () ;
Code	that.indexParamName = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

70
Tree	typeArguments.length = MostRecentTypechecker.OTI . getParent () ;
Code	typeArguments.length = MostRecentTypechecker.OTI . getParent () ;
Distance : 8

71
Tree	ModuleLoader.PathResolver.RELATIVE = TypeInferenceMode.CHECKED . getParent () ;
Code	ModuleLoader.PathResolver.RELATIVE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

72
Tree	Advice.AllArguments = TypeInferenceMode.CHECKED . getParent () ;
Code	Advice.AllArguments = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

73
Tree	Token.GETELEM = TypeInferenceMode.CHECKED . getParent () ;
Code	Token.GETELEM = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

74
Tree	currentScript.exportsToInline = TypeInferenceMode.CHECKED . getParent () ;
Code	currentScript.exportsToInline = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

75
Tree	RemoveUnusedCode.Builder = ( assignNode ) assignNode . getParent () ;
Code	RemoveUnusedCode.Builder = ( assignNode ) assignNode . getParent () ;
Distance : 10

76
Tree	TypeInferenceMode.NEITHER = RegularizedGamma.P . getParent () ;
Code	TypeInferenceMode.NEITHER = RegularizedGamma.P . getParent () ;
Distance : 8

77
Tree	that.groupPaint = TypeInferenceMode.CHECKED . getParent () ;
Code	that.groupPaint = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

78
Tree	options.appNameStr = TypeInferenceMode.CHECKED . getParent () ;
Code	options.appNameStr = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

79
Tree	setLayout = TypeInferenceMode.CHECKED . getParent () ;
Code	setLayout = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

80
Tree	FunctionFlavor.NORMAL = TypeInferenceMode.CHECKED . getParent () ;
Code	FunctionFlavor.NORMAL = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

81
Tree	Node.FREE_CALL = MathUtils.TWO_PI . getParent () ;
Code	Node.FREE_CALL = MathUtils.TWO_PI . getParent () ;
Distance : 8

82
Tree	Feature.AMBIENT_DECLARATION = TypeInferenceMode.CHECKED . getParent () ;
Code	Feature.AMBIENT_DECLARATION = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

83
Tree	ImmutableMultiset.Builder = RegularizedGamma.P . getParent () ;
Code	ImmutableMultiset.Builder = RegularizedGamma.P . getParent () ;
Distance : 8

84
Tree	NewTypeInference.INEXISTENT_PROPERTY = ( assignNode ) assignNode . getParent () ;
Code	NewTypeInference.INEXISTENT_PROPERTY = ( assignNode ) assignNode . getParent () ;
Distance : 10

85
Tree	compilerState.functionNames = TypeInferenceMode.CHECKED . getParent () ;
Code	compilerState.functionNames = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

86
Tree	NewTypeInference.GLOBAL_THIS = TypeInferenceMode.CHECKED . getParent () ;
Code	NewTypeInference.GLOBAL_THIS = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

87
Tree	entry.map = TypeInferenceMode.CHECKED . getParent () ;
Code	entry.map = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

88
Tree	c.seriesList = TypeInferenceMode.CHECKED . getParent () ;
Code	c.seriesList = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

89
Tree	LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR = TypeInferenceMode.CHECKED . getParent () ;
Code	LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

90
Tree	PeepholeFoldConstantsTest = TypeInferenceMode.CHECKED . getParent () ;
Code	PeepholeFoldConstantsTest = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

91
Tree	PreprocessorSymbolTable.CachedInstanceFactory = TypeInferenceMode.CHECKED . getParent () ;
Code	PreprocessorSymbolTable.CachedInstanceFactory = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

92
Tree	JSTypeNative.FUNCTION_INSTANCE_TYPE = TypeInferenceMode.CHECKED . getParent () ;
Code	JSTypeNative.FUNCTION_INSTANCE_TYPE = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

93
Tree	Feature.MODULES = TypeInferenceMode.CHECKED . getParent () ;
Code	Feature.MODULES = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

94
Tree	SimplexSolver.DEFAULT_ULPS = RegularizedGamma.P . getParent () ;
Code	SimplexSolver.DEFAULT_ULPS = RegularizedGamma.P . getParent () ;
Distance : 8

95
Tree	compilerState.globalTypeInfo = TypeInferenceMode.CHECKED . getParent () ;
Code	compilerState.globalTypeInfo = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

96
Tree	LocalizedFormats.EVALUATIONS = metadata.superClassNameNode . getParent () ;
Code	LocalizedFormats.EVALUATIONS = metadata.superClassNameNode . getParent () ;
Distance : 8

97
Tree	addListeners = RegularizedGamma.P . getParent () ;
Code	addListeners = RegularizedGamma.P . getParent () ;
Distance : 8

98
Tree	currentScript.declareLegacyNamespace = TypeInferenceMode.CHECKED . getParent () ;
Code	currentScript.declareLegacyNamespace = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

99
Tree	interpolator.currentDerivative = TypeInferenceMode.CHECKED . getParent () ;
Code	interpolator.currentDerivative = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

100
Tree	MostRecentTypechecker.OTI = TypeInferenceMode.CHECKED . getParent () ;
Code	MostRecentTypechecker.OTI = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

101
Tree	typeArguments.length = ( assignNode ) assignNode . getParent () ;
Code	typeArguments.length = ( assignNode ) assignNode . getParent () ;
Distance : 10

102
Tree	finder.firstUnverifiedToReturn = RegularizedGamma.P . getParent () ;
Code	finder.firstUnverifiedToReturn = RegularizedGamma.P . getParent () ;
Distance : 8

103
Tree	problem.y = TypeInferenceMode.CHECKED . getParent () ;
Code	problem.y = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

104
Tree	setMinorTickCount = metadata.superClassNameNode . getParent () ;
Code	setMinorTickCount = metadata.superClassNameNode . getParent () ;
Distance : 8

105
Tree	PureFunctionIdentifier.DriverInJ2cl = TypeInferenceMode.CHECKED . getParent () ;
Code	PureFunctionIdentifier.DriverInJ2cl = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

106
Tree	ref.node = metadata.superClassNameNode . getParent () ;
Code	ref.node = metadata.superClassNameNode . getParent () ;
Distance : 8

107
Tree	Ref.Type.PROTOTYPE_GET = TypeInferenceMode.CHECKED . getParent () ;
Code	Ref.Type.PROTOTYPE_GET = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

108
Tree	java.lang.Class = TypeInferenceMode.CHECKED . getParent () ;
Code	java.lang.Class = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

109
Tree	Token.SUPER = TypeInferenceMode.CHECKED . getParent () ;
Code	Token.SUPER = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

110
Tree	java.util.Locale.US = TypeInferenceMode.CHECKED . getParent () ;
Code	java.util.Locale.US = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

111
Tree	that.entities = TypeInferenceMode.CHECKED . getParent () ;
Code	that.entities = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

112
Tree	addListeners = MathUtils.TWO_PI . getParent () ;
Code	addListeners = MathUtils.TWO_PI . getParent () ;
Distance : 8

113
Tree	global.root = TypeInferenceMode.CHECKED . getParent () ;
Code	global.root = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

114
Tree	config.parseTypeSyntax = TypeInferenceMode.CHECKED . getParent () ;
Code	config.parseTypeSyntax = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

115
Tree	RenderingHints.KEY_TEXT_ANTIALIASING = TypeInferenceMode.CHECKED . getParent () ;
Code	RenderingHints.KEY_TEXT_ANTIALIASING = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

116
Tree	SimplexSolver.DEFAULT_ULPS = MathUtils.TWO_PI . getParent () ;
Code	SimplexSolver.DEFAULT_ULPS = MathUtils.TWO_PI . getParent () ;
Distance : 8

117
Tree	RemoveUnusedCode.Builder = TypeInferenceMode.CHECKED . getParent () ;
Code	RemoveUnusedCode.Builder = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

118
Tree	NewTypeInference.INEXISTENT_PROPERTY = TypeInferenceMode.CHECKED . getParent () ;
Code	NewTypeInference.INEXISTENT_PROPERTY = TypeInferenceMode.CHECKED . getParent () ;
Distance : 8

119
Tree	that.entities = assignNode . assignNode ( assignNode ) ;
Code	that.entities = assignNode . assignNode ( assignNode ) ;
Distance : 5

120
Tree	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Code	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Distance : 6

121
Tree	this . assignNode = ( assignNode ) assignNode . isExprResult () ;
Code	this . assignNode = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

122
Tree	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Code	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Distance : 8

123
Tree	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Code	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Distance : 7

124
Tree	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Code	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Distance : 8

125
Tree	this . maybeAliased = ( assignNode ) assignNode . isExprResult () ;
Code	this . maybeAliased = ( assignNode ) assignNode . isExprResult () ;
Distance : 7

126
Tree	this . maybeAliased = ( NodeUtil ) NodeUtil . getParent () ;
Code	this . maybeAliased = ( NodeUtil ) NodeUtil . getParent () ;
Distance : 6

127
Tree	this . NodeUtil = ( NodeUtil ) NodeUtil . isExprResult () ;
Code	this . NodeUtil = ( NodeUtil ) NodeUtil . isExprResult () ;
Distance : 7

128
Tree	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Code	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

129
Tree	this . assignNode = ( assignNode ) assignNode . isExprResult () ;
Code	this . assignNode = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

130
Tree	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Code	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Distance : 8

131
Tree	LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE = MathUtils.TWO_PI . getParent () ;
Code	LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE = MathUtils.TWO_PI . getParent () ;
Distance : 8

132
Tree	this . assignNode = ( assignNode ) NodeUtil . isExprResult () ;
Code	this . assignNode = ( assignNode ) NodeUtil . isExprResult () ;
Distance : 8

133
Tree	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Code	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

134
Tree	this . NodeUtil = ( NodeUtil ) assignNode . getParent () ;
Code	this . NodeUtil = ( NodeUtil ) assignNode . getParent () ;
Distance : 7

135
Tree	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Code	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

136
Tree	this . maybeAliased = ( NodeUtil ) assignNode . isExprResult () ;
Code	this . maybeAliased = ( NodeUtil ) assignNode . isExprResult () ;
Distance : 6

137
Tree	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

138
Tree	this . assignNode = ( NodeUtil ) NodeUtil . getParent () ;
Code	this . assignNode = ( NodeUtil ) NodeUtil . getParent () ;
Distance : 7

139
Tree	this . maybeAliased = ( assignNode ) assignNode . isExprResult () ;
Code	this . maybeAliased = ( assignNode ) assignNode . isExprResult () ;
Distance : 7

140
Tree	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Code	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

141
Tree	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Code	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Distance : 7

142
Tree	this . assignNode = ( NodeUtil ) assignNode . isExprResult () ;
Code	this . assignNode = ( NodeUtil ) assignNode . isExprResult () ;
Distance : 7

143
Tree	this . NodeUtil = ( NodeUtil ) assignNode . getParent () ;
Code	this . NodeUtil = ( NodeUtil ) assignNode . getParent () ;
Distance : 7

144
Tree	this . assignNode = ( assignNode ) NodeUtil . isExprResult () ;
Code	this . assignNode = ( assignNode ) NodeUtil . isExprResult () ;
Distance : 8

145
Tree	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Code	this . NodeUtil = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

146
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

147
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

148
Tree	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

149
Tree	this . maybeAliased = ( NodeUtil ) NodeUtil . isExprResult () ;
Code	this . maybeAliased = ( NodeUtil ) NodeUtil . isExprResult () ;
Distance : 6

150
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

151
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

152
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

153
Tree	this . assignNode = ( NodeUtil ) NodeUtil . isExprResult () ;
Code	this . assignNode = ( NodeUtil ) NodeUtil . isExprResult () ;
Distance : 7

154
Tree	this . NodeUtil = ( NodeUtil ) NodeUtil . getParent () ;
Code	this . NodeUtil = ( NodeUtil ) NodeUtil . getParent () ;
Distance : 7

155
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

156
Tree	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Code	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Distance : 6

157
Tree	this . NodeUtil = ( NodeUtil ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( NodeUtil ) assignNode . isExprResult () ;
Distance : 7

158
Tree	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Code	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Distance : 7

159
Tree	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Code	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Distance : 7

160
Tree	this . NodeUtil = ( assignNode ) NodeUtil . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) NodeUtil . isExprResult () ;
Distance : 8

161
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

162
Tree	this . maybeAliased = ( assignNode ) NodeUtil . isExprResult () ;
Code	this . maybeAliased = ( assignNode ) NodeUtil . isExprResult () ;
Distance : 7

163
Tree	this . assignNode = ( NodeUtil ) assignNode . isExprResult () ;
Code	this . assignNode = ( NodeUtil ) assignNode . isExprResult () ;
Distance : 7

164
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

165
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; parent
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; parent
Distance : 8

166
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; x
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; x
Distance : 8

167
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; ArrayList
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; ArrayList
Distance : 8

168
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; LINE_JOINER
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; LINE_JOINER
Distance : 8

169
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; Object
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; Object
Distance : 8

170
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; str
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; str
Distance : 8

171
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; expected
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; expected
Distance : 8

172
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; testSame
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; testSame
Distance : 8

173
Tree	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Code	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Distance : 8

174
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; createIllegalArgumentException
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; createIllegalArgumentException
Distance : 8

175
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; t
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; t
Distance : 8

176
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; IllegalArgumentException
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; IllegalArgumentException
Distance : 8

177
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; invocation
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; invocation
Distance : 8

178
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; FastMath
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; FastMath
Distance : 8

179
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; field
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; field
Distance : 8

180
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; reportCodeChange
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; reportCodeChange
Distance : 8

181
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; name
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; name
Distance : 8

182
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ; ]
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ; ]
Distance : 8

183
Tree	this . assignNode = ! assignNode . isExprResult () . isExprResult () ;
Code	this . assignNode = ! assignNode . isExprResult () . isExprResult () ;
Distance : 8

184
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

185
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

186
Tree	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

187
Tree	this . maybeAliased = ( ! ) assignNode . getParent () ;
Code	this . maybeAliased = ( ! ) assignNode . getParent () ;
Distance : 7

188
Tree	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Code	this . maybeAliased = ( assignNode ) assignNode . getParent () ;
Distance : 7

189
Tree	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) assignNode . isExprResult () ;
Distance : 8

190
Tree	this . NodeUtil = ( NodeUtil ) NodeUtil . getParent () ;
Code	this . NodeUtil = ( NodeUtil ) NodeUtil . getParent () ;
Distance : 7

191
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

192
Tree	this . assignNode = ( assignNode ) assignNode . getParent () ;
Code	this . assignNode = ( assignNode ) assignNode . getParent () ;
Distance : 8

193
Tree	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Code	this . maybeAliased = ( assignNode ) NodeUtil . getParent () ;
Distance : 7

194
Tree	this . NodeUtil = ( assignNode ) NodeUtil . isExprResult () ;
Code	this . NodeUtil = ( assignNode ) NodeUtil . isExprResult () ;
Distance : 8

195
Tree	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Code	this . assignNode = ( assignNode ) NodeUtil . getParent () ;
Distance : 8

196
Tree	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Code	this . maybeAliased = ( NodeUtil ) assignNode . getParent () ;
Distance : 6

197
Tree	this . NodeUtil = ( NodeUtil ) assignNode . isExprResult () ;
Code	this . NodeUtil = ( NodeUtil ) assignNode . isExprResult () ;
Distance : 7

198
Tree	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Code	this . NodeUtil = ( assignNode ) assignNode . getParent () ;
Distance : 8

199
Tree	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Code	this . assignNode = ( NodeUtil ) assignNode . getParent () ;
Distance : 7

========================================================================


========================================================================
Example Number: 25
Parent Code is: 
if ( x < NUMBER_CONSTANT && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( ( x < NUMBER_CONSTANT  negativeZero ) && prev == CHAR_CONS ) { add ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=prev}) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (36 (214{val=(}) (27 (27 (800{val=x}) (230{val=<}) (34{val=NUMBER_CONSTANT})) (250{val=||}) (800{val=negativeZero})) (215{val=)})) (249{val=&&}) (27 (800{val=prev}) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (21 (32 (802{val=add}) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/38/parent/src_com_google_javascript_jscomp_CodeConsumer.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

1
Tree	if ( x < NUMBER_CONSTANT && lastI [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && lastI [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

2
Tree	if ( x < NUMBER_CONSTANT && FastDateParser.JAPANESE_IMPERIAL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && FastDateParser.JAPANESE_IMPERIAL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

3
Tree	if ( x < NUMBER_CONSTANT && isDotPrototype [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isDotPrototype [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

4
Tree	if ( x < NUMBER_CONSTANT && isPointInRect == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPointInRect == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

5
Tree	if ( x < NUMBER_CONSTANT && fval.length == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && fval.length == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

6
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == DecompositionType.DECOMPOSABLE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == DecompositionType.DECOMPOSABLE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

7
Tree	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

8
Tree	if ( x < NUMBER_CONSTANT && isKnown == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isKnown == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

9
Tree	if ( x < NUMBER_CONSTANT && definitionsGatherer.definitions [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && definitionsGatherer.definitions [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

10
Tree	if ( x < NUMBER_CONSTANT && DateUtils.MILLIS_PER_HOUR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DateUtils.MILLIS_PER_HOUR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

11
Tree	if ( x < NUMBER_CONSTANT && subtrahendMonth [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && subtrahendMonth [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

12
Tree	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

13
Tree	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

14
Tree	if ( x < NUMBER_CONSTANT && other.nominalType == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && other.nominalType == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

15
Tree	if ( x < NUMBER_CONSTANT && isPropertyAbsentTest [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPropertyAbsentTest [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

16
Tree	if ( x < NUMBER_CONSTANT && current.parent.scopes == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.parent.scopes == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

17
Tree	if ( x < NUMBER_CONSTANT && Token.NEW == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Token.NEW == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

18
Tree	if ( x < NUMBER_CONSTANT && isUnknownObject == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isUnknownObject == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

19
Tree	if ( x < NUMBER_CONSTANT && PAD_LIMIT [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && PAD_LIMIT [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

20
Tree	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

21
Tree	if ( x < NUMBER_CONSTANT && mant.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && mant.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

22
Tree	if ( x < NUMBER_CONSTANT && isComingFromSignedJar [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isComingFromSignedJar [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

23
Tree	if ( x < NUMBER_CONSTANT && sample1.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && sample1.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

24
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.CARDAN_ANGLES_SINGULARITY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.CARDAN_ANGLES_SINGULARITY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

25
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Distance : 5

26
Tree	if ( x < NUMBER_CONSTANT && CharacterCodingException [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharacterCodingException [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

27
Tree	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

28
Tree	if ( x < NUMBER_CONSTANT && startConfiguration.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && startConfiguration.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

29
Tree	if ( x < NUMBER_CONSTANT && isPointInRect == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPointInRect == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

30
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Year.MAXIMUM_YEAR ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Year.MAXIMUM_YEAR ) { add ( STRING_CONSTANT ) ; }
Distance : 5

31
Tree	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

32
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Distance : 5

33
Tree	if ( x < NUMBER_CONSTANT && current.scopes == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.scopes == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

34
Tree	if ( x < NUMBER_CONSTANT && closeLen [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && closeLen [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

35
Tree	if ( x < NUMBER_CONSTANT && stdErrors [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && stdErrors [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

36
Tree	if ( x < NUMBER_CONSTANT && countSum2 [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && countSum2 [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

37
Tree	if ( x < NUMBER_CONSTANT && osVersion [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && osVersion [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

38
Tree	if ( x < NUMBER_CONSTANT && fval.length == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && fval.length == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

39
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Distance : 5

40
Tree	if ( x < NUMBER_CONSTANT && variablesToInclude.length [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && variablesToInclude.length [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

41
Tree	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

42
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == Year.MAXIMUM_YEAR ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == Year.MAXIMUM_YEAR ) { add ( STRING_CONSTANT ) ; }
Distance : 5

43
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Distance : 5

44
Tree	if ( x < NUMBER_CONSTANT && ModifyType.ROUND == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && ModifyType.ROUND == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

45
Tree	if ( x < NUMBER_CONSTANT && cutOff [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && cutOff [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

46
Tree	if ( x < NUMBER_CONSTANT && MILLIS_PER_DAY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && MILLIS_PER_DAY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

47
Tree	if ( x < NUMBER_CONSTANT && isTypeScriptSpecificKeyword [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isTypeScriptSpecificKeyword [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

48
Tree	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

49
Tree	if ( x < NUMBER_CONSTANT && unusedAssignment [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && unusedAssignment [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

50
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

51
Tree	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.OFF == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.OFF == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

52
Tree	if ( x < NUMBER_CONSTANT && objType.nominalType == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && objType.nominalType == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

53
Tree	if ( x < NUMBER_CONSTANT && ConstCheck.CONST_REASSIGNED_VALUE_ERROR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && ConstCheck.CONST_REASSIGNED_VALUE_ERROR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

54
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == Integer.MIN_VALUE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == Integer.MIN_VALUE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

55
Tree	if ( x < NUMBER_CONSTANT && si [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && si [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

56
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == EMPTY ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == EMPTY ) { add ( STRING_CONSTANT ) ; }
Distance : 5

57
Tree	if ( x < NUMBER_CONSTANT && EvalMode.EVAL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && EvalMode.EVAL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

58
Tree	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

59
Tree	if ( x < NUMBER_CONSTANT && current.parent.scopes == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.parent.scopes == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

60
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Distance : 5

61
Tree	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

62
Tree	if ( x < NUMBER_CONSTANT && MatchResult.NO_MATCH == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && MatchResult.NO_MATCH == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

63
Tree	if ( x < NUMBER_CONSTANT && & == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && & == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

64
Tree	if ( x < NUMBER_CONSTANT && targets == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && targets == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

65
Tree	if ( x < NUMBER_CONSTANT && values.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && values.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

66
Tree	if ( x < NUMBER_CONSTANT && isReturnTypeNullable [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReturnTypeNullable [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

67
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Distance : 5

68
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Token.NEW ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Token.NEW ) { add ( STRING_CONSTANT ) ; }
Distance : 5

69
Tree	if ( x < NUMBER_CONSTANT && isRead [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isRead [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

70
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

71
Tree	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

72
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

73
Tree	if ( x < NUMBER_CONSTANT && pass2Index == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && pass2Index == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

74
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == StringUtils.EMPTY ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == StringUtils.EMPTY ) { add ( STRING_CONSTANT ) ; }
Distance : 5

75
Tree	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

76
Tree	if ( x < NUMBER_CONSTANT && clonedIndices [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && clonedIndices [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

77
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == StringUtils.EMPTY ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == StringUtils.EMPTY ) { add ( STRING_CONSTANT ) ; }
Distance : 5

78
Tree	if ( x < NUMBER_CONSTANT && blockColumns [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && blockColumns [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

79
Tree	if ( x < NUMBER_CONSTANT && enumLiteralHasKey [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && enumLiteralHasKey [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

80
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Integer.MIN_VALUE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == Integer.MIN_VALUE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

81
Tree	if ( x < NUMBER_CONSTANT && objType.nominalType == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && objType.nominalType == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

82
Tree	if ( x < NUMBER_CONSTANT && Integer.MIN_VALUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Integer.MIN_VALUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

83
Tree	if ( x < NUMBER_CONSTANT && other.nominalType == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && other.nominalType == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

84
Tree	if ( x < NUMBER_CONSTANT && isGeneratorFunction [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isGeneratorFunction [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

85
Tree	if ( x < NUMBER_CONSTANT && newEnd [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && newEnd [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

86
Tree	if ( x < NUMBER_CONSTANT && temp2 [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && temp2 [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

87
Tree	if ( x < NUMBER_CONSTANT && chrs [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && chrs [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

88
Tree	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

89
Tree	if ( x < NUMBER_CONSTANT && anyStringNull == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && anyStringNull == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

90
Tree	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

91
Tree	if ( x < NUMBER_CONSTANT && delimiters.length == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && delimiters.length == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

92
Tree	if ( x < NUMBER_CONSTANT && means [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && means [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

93
Tree	if ( x < NUMBER_CONSTANT && interceptors.target == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && interceptors.target == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

94
Tree	if ( x < NUMBER_CONSTANT && options.propertyRenaming == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.propertyRenaming == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

95
Tree	if ( x < NUMBER_CONSTANT && PAD_LIMIT == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && PAD_LIMIT == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

96
Tree	if ( x < NUMBER_CONSTANT && DEFAULT_EXPANSION_FACTOR [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DEFAULT_EXPANSION_FACTOR [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

97
Tree	if ( x < NUMBER_CONSTANT && pass2Index == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && pass2Index == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

98
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == DecompositionType.DECOMPOSABLE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == DecompositionType.DECOMPOSABLE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

99
Tree	if ( x < NUMBER_CONSTANT && pass2Index [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && pass2Index [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

100
Tree	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && iChronology.MILLIS_PER_DAY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

101
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

102
Tree	if ( x < NUMBER_CONSTANT && other.nominalType == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && other.nominalType == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

103
Tree	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && IncrementalCheckMode.GENERATE_IJS == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

104
Tree	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && TernaryValue.TRUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

105
Tree	if ( x < NUMBER_CONSTANT && objType.nominalType == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && objType.nominalType == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

106
Tree	if ( x < NUMBER_CONSTANT && zval.length [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && zval.length [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

107
Tree	if ( x < NUMBER_CONSTANT && thisUnresolved [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && thisUnresolved [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

108
Tree	if ( x < NUMBER_CONSTANT && xi [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && xi [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

109
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

110
Tree	if ( x < NUMBER_CONSTANT && isComingFromSealedPackage [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isComingFromSealedPackage [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

111
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Distance : 5

112
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

113
Tree	if ( x < NUMBER_CONSTANT && ExpansionMode.MULTIPLICATIVE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && ExpansionMode.MULTIPLICATIVE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

114
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Distance : 5

115
Tree	if ( x < NUMBER_CONSTANT && rh [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && rh [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

116
Tree	if ( x < NUMBER_CONSTANT && STATE_RUNNING [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && STATE_RUNNING [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

117
Tree	if ( x < NUMBER_CONSTANT && isPointInRect == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPointInRect == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

118
Tree	if ( x < NUMBER_CONSTANT && estimationType [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && estimationType [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

119
Tree	if ( x < NUMBER_CONSTANT && modulesSupplier [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && modulesSupplier [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

120
Tree	if ( x < NUMBER_CONSTANT && RADIX [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && RADIX [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

121
Tree	if ( x < NUMBER_CONSTANT && fval.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && fval.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

122
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

123
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

124
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

125
Tree	if ( x < NUMBER_CONSTANT && Year.MINIMUM_YEAR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MINIMUM_YEAR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

126
Tree	if ( x < NUMBER_CONSTANT && omegaImaginaryInverse [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && omegaImaginaryInverse [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

127
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

128
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

129
Tree	if ( x < NUMBER_CONSTANT && isPointInRect == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPointInRect == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

130
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

131
Tree	if ( x < NUMBER_CONSTANT && enclosing [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && enclosing [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

132
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

133
Tree	if ( x < NUMBER_CONSTANT && centers [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && centers [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

134
Tree	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

135
Tree	if ( x < NUMBER_CONSTANT && current.parent.scopes == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.parent.scopes == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

136
Tree	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

137
Tree	if ( x < NUMBER_CONSTANT && delimiters.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && delimiters.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

138
Tree	if ( x < NUMBER_CONSTANT && pass2Index == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && pass2Index == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

139
Tree	if ( x < NUMBER_CONSTANT && thatUnresolved [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && thatUnresolved [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

140
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

141
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == ExpansionMode.MULTIPLICATIVE ) { add ( STRING_CONSTANT ) ; }
Distance : 5

142
Tree	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

143
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

144
Tree	if ( x < NUMBER_CONSTANT && omegaImaginaryForward [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && omegaImaginaryForward [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

145
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Distance : 5

146
Tree	if ( x < NUMBER_CONSTANT && isVanillaFunction == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isVanillaFunction == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

147
Tree	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

148
Tree	if ( x < NUMBER_CONSTANT && options.removeUnusedVars == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.removeUnusedVars == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

149
Tree	if ( x < NUMBER_CONSTANT && matchLabel == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && matchLabel == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

150
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.EULER_ANGLES_SINGULARITY == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

151
Tree	if ( x < NUMBER_CONSTANT && pass2Index == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && pass2Index == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

152
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == ModifyType.ROUND ) { add ( STRING_CONSTANT ) ; }
Distance : 5

153
Tree	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

154
Tree	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DisposalCheckingPolicy.OFF == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

155
Tree	if ( x < NUMBER_CONSTANT && SIZE_THRESHOLD [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && SIZE_THRESHOLD [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

156
Tree	if ( x < NUMBER_CONSTANT && FACTORIALS [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && FACTORIALS [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

157
Tree	if ( x < NUMBER_CONSTANT && distB [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && distB [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

158
Tree	if ( x < NUMBER_CONSTANT && EnumType [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && EnumType [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

159
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == current.parent.scopes ) { add ( STRING_CONSTANT ) ; }
Distance : 5

160
Tree	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Long.MAX_VALUE == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

161
Tree	if ( x < NUMBER_CONSTANT && isKnown [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isKnown [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

162
Tree	if ( x < NUMBER_CONSTANT && deepEquals == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && deepEquals == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

163
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == DisposalCheckingPolicy.OFF ) { add ( STRING_CONSTANT ) ; }
Distance : 5

164
Tree	if ( x < NUMBER_CONSTANT && integrationTestPoints [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && integrationTestPoints [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

165
Tree	if ( x < NUMBER_CONSTANT && ya [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && ya [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

166
Tree	if ( x < NUMBER_CONSTANT && delimiters.length == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && delimiters.length == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

167
Tree	if ( x < NUMBER_CONSTANT && rhs.b == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && rhs.b == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

168
Tree	if ( x < NUMBER_CONSTANT && lastMatch [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && lastMatch [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

169
Tree	if ( x < NUMBER_CONSTANT && SourceMap.LocationMapping == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && SourceMap.LocationMapping == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

170
Tree	if ( x < NUMBER_CONSTANT && getNumberOfEquations == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && getNumberOfEquations == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

171
Tree	if ( x < NUMBER_CONSTANT && searchCharSequences [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && searchCharSequences [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

172
Tree	if ( x < NUMBER_CONSTANT && DefaultPassConfig [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DefaultPassConfig [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

173
Tree	if ( x < NUMBER_CONSTANT && matchLabel [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && matchLabel [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

174
Tree	if ( x < NUMBER_CONSTANT && CharUtils.NUL == rhs.b ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.NUL == rhs.b ) { add ( STRING_CONSTANT ) ; }
Distance : 5

175
Tree	if ( x < NUMBER_CONSTANT && isOSVersionMatch == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isOSVersionMatch == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

176
Tree	if ( x < NUMBER_CONSTANT && DecompositionType.DECOMPOSABLE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && DecompositionType.DECOMPOSABLE == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

177
Tree	if ( x < NUMBER_CONSTANT && SECONDS_MILLIS [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && SECONDS_MILLIS [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

178
Tree	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && Year.MAXIMUM_YEAR == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Distance : 5

179
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == isLastMatcherVarargMatcher ) { add ( STRING_CONSTANT ) ; }
Distance : 5

180
Tree	if ( x < NUMBER_CONSTANT && zval.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && zval.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

181
Tree	if ( x < NUMBER_CONSTANT && isValidPivotColumn == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isValidPivotColumn == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

182
Tree	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

183
Tree	if ( x < NUMBER_CONSTANT && current.parent.scopes == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.parent.scopes == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

184
Tree	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isLastMatcherVarargMatcher == startPoint.length ) { add ( STRING_CONSTANT ) ; }
Distance : 5

185
Tree	if ( x < NUMBER_CONSTANT && isPointInRect == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isPointInRect == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

186
Tree	if ( x < NUMBER_CONSTANT && CharUtils.CR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && CharUtils.CR == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

187
Tree	if ( x < NUMBER_CONSTANT && sample2.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && sample2.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

188
Tree	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && isReferenceToRemovedVar == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

189
Tree	if ( x < NUMBER_CONSTANT && LocalizedFormats.OVERFLOW_IN_ADDITION == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && LocalizedFormats.OVERFLOW_IN_ADDITION == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

190
Tree	if ( x < NUMBER_CONSTANT && startPoint.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && startPoint.length == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

191
Tree	if ( x < NUMBER_CONSTANT && current.parent.scopes == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && current.parent.scopes == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

192
Tree	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && options.skipTranspilationAndCrash == LocalizedFormats.OVERFLOW_IN_ADDITION ) { add ( STRING_CONSTANT ) ; }
Distance : 5

193
Tree	if ( x < NUMBER_CONSTANT && delimiters.length == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && delimiters.length == IncrementalCheckMode.GENERATE_IJS ) { add ( STRING_CONSTANT ) ; }
Distance : 5

194
Tree	if ( x < NUMBER_CONSTANT && getEnums == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && getEnums == CharUtils.NUL ) { add ( STRING_CONSTANT ) ; }
Distance : 5

195
Tree	if ( x < NUMBER_CONSTANT && anyStringNull [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Code	if ( x < NUMBER_CONSTANT && anyStringNull [ NUMBER_CONSTANT ] == null ) { add ( STRING_CONSTANT ) ; }
Distance : 7

196
Tree	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } add
Code	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } add
Distance : 6

197
Tree	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } sb
Code	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } sb
Distance : 6

198
Tree	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } scope
Code	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } scope
Distance : 6

199
Tree	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } getFirstChild
Code	if ( x < NUMBER_CONSTANT && prev >= prev ) { add ( STRING_CONSTANT ) ; } getFirstChild
Distance : 6

========================================================================


========================================================================
Example Number: 26
Parent Code is: 
cc . listSeparator () ;
-------------------------------------------------------------------------------
Child code is: 
cc . addOp ( opStr , true ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=cc}) (235{val=.}) (802{val=listSeparator}) (216{val=()})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=cc}) (235{val=.}) (802{val=addOp}) (214{val=(}) (800{val=opStr}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/34/parent/src_com_google_javascript_jscomp_CodeGenerator.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	listSeparator () ; name
Code	listSeparator () ; name
Distance : 9

1
Tree	listSeparator () ; =
Code	listSeparator () ; =
Distance : 9

2
Tree	listSeparator () ; (
Code	listSeparator () ; (
Distance : 8

3
Tree	listSeparator () ; <s>
Code	listSeparator () ; <s>
Distance : 9

4
Tree	listSeparator () ; nullNotPermitted
Code	listSeparator () ; nullNotPermitted
Distance : 9

5
Tree	listSeparator () ; void
Code	listSeparator () ; void
Distance : 9

6
Tree	listSeparator () ; cc
Code	listSeparator () ; cc
Distance : 9

7
Tree	listSeparator () ; T
Code	listSeparator () ; T
Distance : 9

8
Tree	listSeparator () ; Test
Code	listSeparator () ; Test
Distance : 9

9
Tree	listSeparator () ; }
Code	listSeparator () ; }
Distance : 9

10
Tree	listSeparator () ; Class
Code	listSeparator () ; Class
Distance : 9

11
Tree	listSeparator () ; {}
Code	listSeparator () ; {}
Distance : 9

12
Tree	listSeparator () ; f
Code	listSeparator () ; f
Distance : 9

13
Tree	listSeparator () ; ParamChecks
Code	listSeparator () ; ParamChecks
Distance : 9

14
Tree	listSeparator () ; -
Code	listSeparator () ; -
Distance : 9

15
Tree	listSeparator () ; Preconditions
Code	listSeparator () ; Preconditions
Distance : 9

16
Tree	listSeparator () ; &&
Code	listSeparator () ; &&
Distance : 9

17
Tree	listSeparator () ; ==
Code	listSeparator () ; ==
Distance : 9

18
Tree	listSeparator () ; ]
Code	listSeparator () ; ]
Distance : 9

19
Tree	listSeparator () ; MathRuntimeException
Code	listSeparator () ; MathRuntimeException
Distance : 9

20
Tree	listSeparator () ; [
Code	listSeparator () ; [
Distance : 9

21
Tree	listSeparator () ; .
Code	listSeparator () ; .
Distance : 9

22
Tree	listSeparator () ; STRING_CONSTANT
Code	listSeparator () ; STRING_CONSTANT
Distance : 9

23
Tree	listSeparator () ; Args
Code	listSeparator () ; Args
Distance : 9

24
Tree	listSeparator () ; List
Code	listSeparator () ; List
Distance : 9

25
Tree	listSeparator () ; join
Code	listSeparator () ; join
Distance : 9

26
Tree	listSeparator () ; getParent
Code	listSeparator () ; getParent
Distance : 9

27
Tree	listSeparator () ; node
Code	listSeparator () ; node
Distance : 9

28
Tree	listSeparator () ; Invocation
Code	listSeparator () ; Invocation
Distance : 9

29
Tree	listSeparator () ; public
Code	listSeparator () ; public
Distance : 9

30
Tree	listSeparator () ; checkState
Code	listSeparator () ; checkState
Distance : 9

31
Tree	listSeparator () ; ,
Code	listSeparator () ; ,
Distance : 8

32
Tree	listSeparator () ; double
Code	listSeparator () ; double
Distance : 9

33
Tree	listSeparator () ; false
Code	listSeparator () ; false
Distance : 9

34
Tree	listSeparator () ; !=
Code	listSeparator () ; !=
Distance : 9

35
Tree	listSeparator () ; super
Code	listSeparator () ; super
Distance : 9

36
Tree	listSeparator () ; mock
Code	listSeparator () ; mock
Distance : 9

37
Tree	listSeparator () ; Override
Code	listSeparator () ; Override
Distance : 9

38
Tree	listSeparator () ; >
Code	listSeparator () ; >
Distance : 9

39
Tree	listSeparator () ; []
Code	listSeparator () ; []
Distance : 9

40
Tree	listSeparator () ; new
Code	listSeparator () ; new
Distance : 9

41
Tree	listSeparator () ; int
Code	listSeparator () ; int
Distance : 9

42
Tree	listSeparator () ; array
Code	listSeparator () ; array
Distance : 9

43
Tree	listSeparator () ; Object
Code	listSeparator () ; Object
Distance : 9

44
Tree	listSeparator () ; test
Code	listSeparator () ; test
Distance : 9

45
Tree	listSeparator () ; d
Code	listSeparator () ; d
Distance : 9

46
Tree	listSeparator () ; externs
Code	listSeparator () ; externs
Distance : 9

47
Tree	listSeparator () ; assertTrue
Code	listSeparator () ; assertTrue
Distance : 9

48
Tree	listSeparator () ; isEmpty
Code	listSeparator () ; isEmpty
Distance : 9

49
Tree	listSeparator () ; return;
Code	listSeparator () ; return;
Distance : 9

50
Tree	listSeparator () ; ;
Code	listSeparator () ; ;
Distance : 8

51
Tree	listSeparator () ; this
Code	listSeparator () ; this
Distance : 9

52
Tree	listSeparator () ; ()
Code	listSeparator () ; ()
Distance : 9

53
Tree	listSeparator () ; equals
Code	listSeparator () ; equals
Distance : 9

54
Tree	listSeparator () ; {
Code	listSeparator () ; {
Distance : 9

55
Tree	listSeparator () ; e
Code	listSeparator () ; e
Distance : 9

56
Tree	listSeparator () ; <
Code	listSeparator () ; <
Distance : 9

57
Tree	listSeparator () ; if
Code	listSeparator () ; if
Distance : 9

58
Tree	listSeparator () ; return
Code	listSeparator () ; return
Distance : 9

59
Tree	listSeparator () ; NUMBER_CONSTANT
Code	listSeparator () ; NUMBER_CONSTANT
Distance : 9

60
Tree	listSeparator () ; final
Code	listSeparator () ; final
Distance : 9

61
Tree	listSeparator () ; chrono
Code	listSeparator () ; chrono
Distance : 9

62
Tree	listSeparator () ; field
Code	listSeparator () ; field
Distance : 9

63
Tree	listSeparator () ; n
Code	listSeparator () ; n
Distance : 9

64
Tree	listSeparator () ; class
Code	listSeparator () ; class
Distance : 9

65
Tree	listSeparator () ; TestUtilities
Code	listSeparator () ; TestUtilities
Distance : 9

66
Tree	listSeparator () ; getChronology
Code	listSeparator () ; getChronology
Distance : 9

67
Tree	listSeparator () ; @
Code	listSeparator () ; @
Distance : 9

68
Tree	listSeparator () ; !
Code	listSeparator () ; !
Distance : 9

69
Tree	listSeparator () ; assertEquals
Code	listSeparator () ; assertEquals
Distance : 9

70
Tree	listSeparator () ; <blank>
Code	listSeparator () ; <blank>
Distance : 9

71
Tree	listSeparator () ; )
Code	listSeparator () ; )
Distance : 8

72
Tree	listSeparator () ; for
Code	listSeparator () ; for
Distance : 9

73
Tree	listSeparator () ; matcher
Code	listSeparator () ; matcher
Distance : 9

74
Tree	listSeparator () ; static
Code	listSeparator () ; static
Distance : 9

75
Tree	listSeparator () ; js
Code	listSeparator () ; js
Distance : 9

76
Tree	listSeparator () ; setAcceptedLanguage
Code	listSeparator () ; setAcceptedLanguage
Distance : 9

77
Tree	listSeparator () ; char
Code	listSeparator () ; char
Distance : 9

78
Tree	listSeparator () ; else
Code	listSeparator () ; else
Distance : 9

79
Tree	listSeparator () ; getMessage
Code	listSeparator () ; getMessage
Distance : 9

80
Tree	listSeparator () ; out
Code	listSeparator () ; out
Distance : 9

81
Tree	listSeparator () ; stream
Code	listSeparator () ; stream
Distance : 9

82
Tree	listSeparator () ; instant
Code	listSeparator () ; instant
Distance : 9

83
Tree	listSeparator () ; get
Code	listSeparator () ; get
Distance : 9

84
Tree	listSeparator () ; pattern
Code	listSeparator () ; pattern
Distance : 9

85
Tree	listSeparator () ; JSType
Code	listSeparator () ; JSType
Distance : 9

86
Tree	listSeparator () ; <>
Code	listSeparator () ; <>
Distance : 9

87
Tree	listSeparator () ; try
Code	listSeparator () ; try
Distance : 9

88
Tree	listSeparator () ; fail
Code	listSeparator () ; fail
Distance : 9

89
Tree	listSeparator () ; LanguageMode.ECMASCRIPT6
Code	listSeparator () ; LanguageMode.ECMASCRIPT6
Distance : 9

90
Tree	listSeparator () ; y
Code	listSeparator () ; y
Distance : 9

91
Tree	listSeparator () ; Integer
Code	listSeparator () ; Integer
Distance : 9

92
Tree	listSeparator () ; v
Code	listSeparator () ; v
Distance : 9

93
Tree	listSeparator () ; expected
Code	listSeparator () ; expected
Distance : 9

94
Tree	listSeparator () ; obj
Code	listSeparator () ; obj
Distance : 9

95
Tree	listSeparator () ; traverseEs6
Code	listSeparator () ; traverseEs6
Distance : 9

96
Tree	listSeparator () ; MutableTimePeriod
Code	listSeparator () ; MutableTimePeriod
Distance : 9

97
Tree	listSeparator () ; optimizer
Code	listSeparator () ; optimizer
Distance : 9

98
Tree	listSeparator () ; b
Code	listSeparator () ; b
Distance : 9

99
Tree	listSeparator () ; setUp
Code	listSeparator () ; setUp
Distance : 9

100
Tree	listSeparator () ; invocations
Code	listSeparator () ; invocations
Distance : 9

101
Tree	listSeparator () ; index
Code	listSeparator () ; index
Distance : 9

102
Tree	listSeparator () ; reportMatcher
Code	listSeparator () ; reportMatcher
Distance : 9

103
Tree	listSeparator () ; abs
Code	listSeparator () ; abs
Distance : 9

104
Tree	listSeparator () ; Double
Code	listSeparator () ; Double
Distance : 9

105
Tree	listSeparator () ; <=
Code	listSeparator () ; <=
Distance : 9

106
Tree	listSeparator () ; PeriodType
Code	listSeparator () ; PeriodType
Distance : 9

107
Tree	listSeparator () ; StrBuilder
Code	listSeparator () ; StrBuilder
Distance : 9

108
Tree	listSeparator () ; stroke
Code	listSeparator () ; stroke
Distance : 9

109
Tree	listSeparator () ; alpha
Code	listSeparator () ; alpha
Distance : 9

110
Tree	listSeparator () ; returnZero
Code	listSeparator () ; returnZero
Distance : 9

111
Tree	cc . listSeparator () ; wanted
Code	cc . listSeparator () ; wanted
Distance : 7

112
Tree	cc . listSeparator () ; Math
Code	cc . listSeparator () ; Math
Distance : 7

113
Tree	cc . listSeparator () ; add
Code	cc . listSeparator () ; add
Distance : 7

114
Tree	cc . listSeparator () ; name
Code	cc . listSeparator () ; name
Distance : 7

115
Tree	cc . listSeparator ( cc ) ; lines
Code	cc . listSeparator ( cc ) ; lines
Distance : 5

116
Tree	cc . listSeparator ( cc ) ; Args
Code	cc . listSeparator ( cc ) ; Args
Distance : 5

117
Tree	cc . listSeparator ( cc ) ; Node
Code	cc . listSeparator ( cc ) ; Node
Distance : 5

118
Tree	cc . listSeparator ( cc ) ; m
Code	cc . listSeparator ( cc ) ; m
Distance : 5

119
Tree	listSeparator () ; isBlock
Code	listSeparator () ; isBlock
Distance : 9

120
Tree	listSeparator () ; append
Code	listSeparator () ; append
Distance : 9

121
Tree	listSeparator () ; scope
Code	listSeparator () ; scope
Distance : 9

122
Tree	listSeparator () ; sb
Code	listSeparator () ; sb
Distance : 9

123
Tree	listSeparator () ; sqrt
Code	listSeparator () ; sqrt
Distance : 9

124
Tree	listSeparator () ; clone
Code	listSeparator () ; clone
Distance : 9

125
Tree	listSeparator () ; getFirstChild
Code	listSeparator () ; getFirstChild
Distance : 9

126
Tree	listSeparator () ; throws
Code	listSeparator () ; throws
Distance : 9

127
Tree	listSeparator () ; simpleMethod
Code	listSeparator () ; simpleMethod
Distance : 9

128
Tree	listSeparator () ; getArgumentMatcherStorage
Code	listSeparator () ; getArgumentMatcherStorage
Distance : 9

129
Tree	listSeparator () ; UnivariateFunction
Code	listSeparator () ; UnivariateFunction
Distance : 9

130
Tree	listSeparator () ; a
Code	listSeparator () ; a
Distance : 9

131
Tree	listSeparator () ; s
Code	listSeparator () ; s
Distance : 9

132
Tree	listSeparator () ; contains
Code	listSeparator () ; contains
Distance : 9

133
Tree	listSeparator () ; ex
Code	listSeparator () ; ex
Distance : 9

134
Tree	listSeparator () ; NodeTraversal
Code	listSeparator () ; NodeTraversal
Distance : 9

135
Tree	listSeparator () ; root
Code	listSeparator () ; root
Distance : 9

136
Tree	listSeparator () ; type
Code	listSeparator () ; type
Distance : 9

137
Tree	listSeparator () ; boolean
Code	listSeparator () ; boolean
Distance : 9

138
Tree	listSeparator () ; FastMath
Code	listSeparator () ; FastMath
Distance : 9

139
Tree	listSeparator () ; str
Code	listSeparator () ; str
Distance : 9

140
Tree	listSeparator () ; IllegalArgumentException
Code	listSeparator () ; IllegalArgumentException
Distance : 9

141
Tree	listSeparator () ; add
Code	listSeparator () ; add
Distance : 9

142
Tree	listSeparator () ; createIllegalArgumentException
Code	listSeparator () ; createIllegalArgumentException
Distance : 9

143
Tree	listSeparator () ; fireChangeEvent
Code	listSeparator () ; fireChangeEvent
Distance : 9

144
Tree	listSeparator () ; ArrayList
Code	listSeparator () ; ArrayList
Distance : 9

145
Tree	listSeparator () ; x
Code	listSeparator () ; x
Distance : 9

146
Tree	listSeparator () ; testSame
Code	listSeparator () ; testSame
Distance : 9

147
Tree	listSeparator () ; LINE_JOINER
Code	listSeparator () ; LINE_JOINER
Distance : 9

148
Tree	listSeparator () ; result
Code	listSeparator () ; result
Distance : 9

149
Tree	listSeparator () ; paint
Code	listSeparator () ; paint
Distance : 9

150
Tree	listSeparator () ; :
Code	listSeparator () ; :
Distance : 9

151
Tree	listSeparator () ; parent
Code	listSeparator () ; parent
Distance : 9

152
Tree	new testRemoveRepeatedProperties ( cc ) . listSeparator () ;
Code	new testRemoveRepeatedProperties ( cc ) . listSeparator () ;
Distance : 8

153
Tree	new stage1Passes ( cc ) . listSeparator () ;
Code	new stage1Passes ( cc ) . listSeparator () ;
Distance : 8

154
Tree	new features.mockedType ( cc ) . listSeparator () ;
Code	new features.mockedType ( cc ) . listSeparator () ;
Distance : 8

155
Tree	listSeparator () ; isNormalBlock
Code	listSeparator () ; isNormalBlock
Distance : 9

156
Tree	listSeparator () ; size
Code	listSeparator () ; size
Distance : 9

157
Tree	listSeparator () ; LanguageMode.ECMASCRIPT_2015
Code	listSeparator () ; LanguageMode.ECMASCRIPT_2015
Distance : 9

158
Tree	listSeparator () ; mockingProgress
Code	listSeparator () ; mockingProgress
Distance : 9

159
Tree	listSeparator () ; StringBuilder
Code	listSeparator () ; StringBuilder
Distance : 9

160
Tree	listSeparator () ; reportCodeChange
Code	listSeparator () ; reportCodeChange
Distance : 9

161
Tree	listSeparator () ; invocation
Code	listSeparator () ; invocation
Distance : 9

162
Tree	listSeparator () ; assertThat
Code	listSeparator () ; assertThat
Distance : 9

163
Tree	listSeparator () ; wanted
Code	listSeparator () ; wanted
Distance : 9

164
Tree	listSeparator () ; *
Code	listSeparator () ; *
Distance : 9

165
Tree	listSeparator () ; getInstance
Code	listSeparator () ; getInstance
Distance : 9

166
Tree	listSeparator () ; serialised
Code	listSeparator () ; serialised
Distance : 9

167
Tree	listSeparator () ; checkNotNull
Code	listSeparator () ; checkNotNull
Distance : 9

168
Tree	listSeparator () ; TestUtils
Code	listSeparator () ; TestUtils
Distance : 9

169
Tree	listSeparator () ; source
Code	listSeparator () ; source
Distance : 9

170
Tree	listSeparator () ; toString
Code	listSeparator () ; toString
Distance : 9

171
Tree	listSeparator () ; Math
Code	listSeparator () ; Math
Distance : 9

172
Tree	listSeparator () ; options
Code	listSeparator () ; options
Distance : 9

173
Tree	cc . listSeparator ( java.util.Locale.US ) ;
Code	cc . listSeparator ( java.util.Locale.US ) ;
Distance : 4

174
Tree	listSeparator () ; t
Code	listSeparator () ; t
Distance : 9

175
Tree	cc . listSeparator () ; root
Code	cc . listSeparator () ; root
Distance : 7

176
Tree	listSeparator () ; PlotChangeEvent
Code	listSeparator () ; PlotChangeEvent
Distance : 9

177
Tree	listSeparator () ; Collection
Code	listSeparator () ; Collection
Distance : 9

178
Tree	new mult ( cc ) . listSeparator () ;
Code	new mult ( cc ) . listSeparator () ;
Distance : 8

179
Tree	cc . listSeparator ( Feature.NEW_TARGET ) ;
Code	cc . listSeparator ( Feature.NEW_TARGET ) ;
Distance : 4

180
Tree	new Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES ( cc ) . listSeparator () ;
Code	new Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES ( cc ) . listSeparator () ;
Distance : 8

181
Tree	new Answers.CALLS_REAL_METHODS ( cc ) . listSeparator () ;
Code	new Answers.CALLS_REAL_METHODS ( cc ) . listSeparator () ;
Distance : 8

182
Tree	cc . listSeparator ( oldStatement ) ;
Code	cc . listSeparator ( oldStatement ) ;
Distance : 4

183
Tree	new NumericEntityUnescaper ( cc ) . listSeparator () ;
Code	new NumericEntityUnescaper ( cc ) . listSeparator () ;
Distance : 8

184
Tree	new datasetToScaleMap ( cc ) . listSeparator () ;
Code	new datasetToScaleMap ( cc ) . listSeparator () ;
Distance : 8

185
Tree	new isValidAliasRhs ( cc ) . listSeparator () ;
Code	new isValidAliasRhs ( cc ) . listSeparator () ;
Distance : 8

186
Tree	new DiagnosticGroups.UNUSED_LOCAL_VARIABLE ( cc ) . listSeparator () ;
Code	new DiagnosticGroups.UNUSED_LOCAL_VARIABLE ( cc ) . listSeparator () ;
Distance : 8

187
Tree	new isDotPrototype ( cc ) . listSeparator () ;
Code	new isDotPrototype ( cc ) . listSeparator () ;
Distance : 8

188
Tree	new isASTNormalized ( cc ) . listSeparator () ;
Code	new isASTNormalized ( cc ) . listSeparator () ;
Distance : 8

189
Tree	cc . listSeparator ( keyValPairs.length ) ;
Code	cc . listSeparator ( keyValPairs.length ) ;
Distance : 4

190
Tree	new SelfInstanceTwoVarsReflectionTestFixture ( cc ) . listSeparator () ;
Code	new SelfInstanceTwoVarsReflectionTestFixture ( cc ) . listSeparator () ;
Distance : 8

191
Tree	new ClickableStackTracesTest ( cc ) . listSeparator () ;
Code	new ClickableStackTracesTest ( cc ) . listSeparator () ;
Distance : 8

192
Tree	new setErrorHandler ( cc ) . listSeparator () ;
Code	new setErrorHandler ( cc ) . listSeparator () ;
Distance : 8

193
Tree	new getTypeNodes ( cc ) . listSeparator () ;
Code	new getTypeNodes ( cc ) . listSeparator () ;
Distance : 8

194
Tree	new setStringMap ( cc ) . listSeparator () ;
Code	new setStringMap ( cc ) . listSeparator () ;
Distance : 8

195
Tree	new DisambiguatePropertiesTest ( cc ) . listSeparator () ;
Code	new DisambiguatePropertiesTest ( cc ) . listSeparator () ;
Distance : 8

196
Tree	new RemoveUnusedPolyfillsTest ( cc ) . listSeparator () ;
Code	new RemoveUnusedPolyfillsTest ( cc ) . listSeparator () ;
Distance : 8

197
Tree	new nextTime ( cc ) . listSeparator () ;
Code	new nextTime ( cc ) . listSeparator () ;
Distance : 8

198
Tree	new UnicodeUnescaper ( cc ) . listSeparator () ;
Code	new UnicodeUnescaper ( cc ) . listSeparator () ;
Distance : 8

199
Tree	cc . listSeparator ( misplacedArgumentMatcherHere ) ;
Code	cc . listSeparator ( misplacedArgumentMatcherHere ) ;
Distance : 4

========================================================================


========================================================================
Example Number: 27
Parent Code is: 
options.dependencyOptions . needsManagement () && ! options.skipAllPasses && options.closurePass
-------------------------------------------------------------------------------
Child code is: 
options.dependencyOptions . needsManagement () && options.closurePass
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (40{val=options.dependencyOptions}) (235{val=.}) (802{val=needsManagement}) (216{val=()})) (249{val=&&}) (38 (207{val=!}) (40{val=options.skipAllPasses})) (249{val=&&}) (40{val=options.closurePass})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (40{val=options.dependencyOptions}) (235{val=.}) (802{val=needsManagement}) (216{val=()})) (249{val=&&}) (40{val=options.closurePass})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/31/parent/src_com_google_javascript_jscomp_Compiler.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	convention . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	convention . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

1
Tree	null != includesGlobals . needsManagement ( null )
Code	null != includesGlobals . needsManagement ( null )
Distance : 6

2
Tree	null != funType . && ( path . class )
Code	null != funType . && ( path . class )
Distance : 9

3
Tree	NULL_TYPE . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	NULL_TYPE . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

4
Tree	null != removeUnusedConstructorProperties . && ( null )
Code	null != removeUnusedConstructorProperties . && ( null )
Distance : 7

5
Tree	null != setFunction . needsManagement ( null )
Code	null != setFunction . needsManagement ( null )
Distance : 6

6
Tree	null != SECONDS_MILLIS . needsManagement ( path . class )
Code	null != SECONDS_MILLIS . needsManagement ( path . class )
Distance : 8

7
Tree	null != outputJs . needsManagement ( null )
Code	null != outputJs . needsManagement ( null )
Distance : 6

8
Tree	null != enableSubstitutionInVariables . needsManagement ( path . class )
Code	null != enableSubstitutionInVariables . needsManagement ( path . class )
Distance : 8

9
Tree	null != isInClass . needsManagement ( null )
Code	null != isInClass . needsManagement ( null )
Distance : 6

10
Tree	null != isBooleanObjectType . && ( decl . class )
Code	null != isBooleanObjectType . && ( decl . class )
Distance : 9

11
Tree	null != zval.length . options.skipAllPasses ( null )
Code	null != zval.length . options.skipAllPasses ( null )
Distance : 7

12
Tree	null != nextStrategy . needsManagement ( null )
Code	null != nextStrategy . needsManagement ( null )
Distance : 6

13
Tree	null != staticGetProp . && ( null )
Code	null != staticGetProp . && ( null )
Distance : 7

14
Tree	null != hoistRoot . needsManagement ( null )
Code	null != hoistRoot . needsManagement ( null )
Distance : 6

15
Tree	null != InitializationError . needsManagement ( null )
Code	null != InitializationError . needsManagement ( null )
Distance : 6

16
Tree	null != REACHABLE . needsManagement ( null )
Code	null != REACHABLE . needsManagement ( null )
Distance : 6

17
Tree	null != sideEffectInfo . needsManagement ( null )
Code	null != sideEffectInfo . needsManagement ( null )
Distance : 6

18
Tree	null != Feature . options.skipAllPasses ( decl . class )
Code	null != Feature . options.skipAllPasses ( decl . class )
Distance : 9

19
Tree	namedA . needsManagement ( null ) > NUMBER_CONSTANT
Code	namedA . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

20
Tree	null != DefaultPassConfig . needsManagement ( path . class )
Code	null != DefaultPassConfig . needsManagement ( path . class )
Distance : 8

21
Tree	null != thatUnresolved . needsManagement ( path . class )
Code	null != thatUnresolved . needsManagement ( path . class )
Distance : 8

22
Tree	null != DisposalCheckingPolicy.OFF . needsManagement ( null )
Code	null != DisposalCheckingPolicy.OFF . needsManagement ( null )
Distance : 6

23
Tree	null != Token.NEW . options.closurePass ( null )
Code	null != Token.NEW . options.closurePass ( null )
Distance : 7

24
Tree	null != lhsClass . needsManagement ( null )
Code	null != lhsClass . needsManagement ( null )
Distance : 6

25
Tree	StackTraceFilteringTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	StackTraceFilteringTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

26
Tree	null != jars . && ( null )
Code	null != jars . && ( null )
Distance : 7

27
Tree	null != NUMBER_STRING_SYMBOL . needsManagement ( null )
Code	null != NUMBER_STRING_SYMBOL . needsManagement ( null )
Distance : 6

28
Tree	subformats . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	subformats . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

29
Tree	null != useNode . needsManagement ( null )
Code	null != useNode . needsManagement ( null )
Distance : 6

30
Tree	null != isArrow . needsManagement ( null )
Code	null != isArrow . needsManagement ( null )
Distance : 6

31
Tree	null != superEquals . && ( null )
Code	null != superEquals . && ( null )
Distance : 7

32
Tree	null != modulesSupplier . needsManagement ( decl . class )
Code	null != modulesSupplier . needsManagement ( decl . class )
Distance : 8

33
Tree	null != stepNumber . needsManagement ( null )
Code	null != stepNumber . needsManagement ( null )
Distance : 6

34
Tree	tzId . needsManagement ( null ) > NUMBER_CONSTANT
Code	tzId . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

35
Tree	null != grandParent . needsManagement ( null )
Code	null != grandParent . needsManagement ( null )
Distance : 6

36
Tree	null != uniqueId . needsManagement ( null )
Code	null != uniqueId . needsManagement ( null )
Distance : 6

37
Tree	null != isLiteralObject . needsManagement ( path . class )
Code	null != isLiteralObject . needsManagement ( path . class )
Distance : 8

38
Tree	null != ARROW_FN . options.skipAllPasses ( path . class )
Code	null != ARROW_FN . options.skipAllPasses ( path . class )
Distance : 9

39
Tree	options.dependencyOptions < type
Code	options.dependencyOptions < type
Distance : 5

40
Tree	null != isHoistScopeRootNode . needsManagement ( null )
Code	null != isHoistScopeRootNode . needsManagement ( null )
Distance : 6

41
Tree	null != enumLiteralHasKey . needsManagement ( path . class )
Code	null != enumLiteralHasKey . needsManagement ( path . class )
Distance : 8

42
Tree	null != CLEANER . && ( null )
Code	null != CLEANER . && ( null )
Distance : 7

43
Tree	null != isTypeScriptSpecificKeyword . && ( null )
Code	null != isTypeScriptSpecificKeyword . && ( null )
Distance : 7

44
Tree	null != ADDITIVE_MODE . needsManagement ( path . class )
Code	null != ADDITIVE_MODE . needsManagement ( path . class )
Distance : 8

45
Tree	null != MILLIS_PER_DAY . needsManagement ( type . class )
Code	null != MILLIS_PER_DAY . needsManagement ( type . class )
Distance : 8

46
Tree	subformats . needsManagement ( null ) > NUMBER_CONSTANT
Code	subformats . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

47
Tree	null != Contribution . needsManagement ( null )
Code	null != Contribution . needsManagement ( null )
Distance : 6

48
Tree	null != superClassQName . needsManagement ( path . class )
Code	null != superClassQName . needsManagement ( path . class )
Distance : 8

49
Tree	null != LAST_ARGUMENT . needsManagement ( null )
Code	null != LAST_ARGUMENT . needsManagement ( null )
Distance : 6

50
Tree	StackTraceFilteringTest . needsManagement ( null ) > NUMBER_CONSTANT
Code	StackTraceFilteringTest . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

51
Tree	null != origDataCopy . needsManagement ( null )
Code	null != origDataCopy . needsManagement ( null )
Distance : 6

52
Tree	null != smartNullPointerException . options.skipAllPasses ( null )
Code	null != smartNullPointerException . options.skipAllPasses ( null )
Distance : 7

53
Tree	this . setUpRan . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . setUpRan . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

54
Tree	null != containsArray . needsManagement ( null )
Code	null != containsArray . needsManagement ( null )
Distance : 6

55
Tree	null != originalGeneratorBody . needsManagement ( null )
Code	null != originalGeneratorBody . needsManagement ( null )
Distance : 6

56
Tree	null != ModuleType.GOOG_MODULE . && ( null )
Code	null != ModuleType.GOOG_MODULE . && ( null )
Distance : 7

57
Tree	null != methodEquals . needsManagement ( decl . class )
Code	null != methodEquals . needsManagement ( decl . class )
Distance : 8

58
Tree	null != googScopeBlock . needsManagement ( null )
Code	null != googScopeBlock . needsManagement ( null )
Distance : 6

59
Tree	null != isRead . needsManagement ( type . class )
Code	null != isRead . needsManagement ( type . class )
Distance : 8

60
Tree	null != Year.MINIMUM_YEAR . options.skipAllPasses ( null )
Code	null != Year.MINIMUM_YEAR . options.skipAllPasses ( null )
Distance : 7

61
Tree	AtLeastXVerificationTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	AtLeastXVerificationTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

62
Tree	null != getFunction . && ( path . class )
Code	null != getFunction . && ( path . class )
Distance : 9

63
Tree	null != MemberDefinition . options.skipAllPasses ( null )
Code	null != MemberDefinition . options.skipAllPasses ( null )
Distance : 7

64
Tree	this . fontRenderContext . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . fontRenderContext . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

65
Tree	null != areMatchingExits . needsManagement ( null )
Code	null != areMatchingExits . needsManagement ( null )
Distance : 6

66
Tree	null != loneBlocks . needsManagement ( null )
Code	null != loneBlocks . needsManagement ( null )
Distance : 6

67
Tree	sourceJarComparator . needsManagement ( null ) > NUMBER_CONSTANT
Code	sourceJarComparator . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

68
Tree	null != scanInnerBlocks . needsManagement ( null )
Code	null != scanInnerBlocks . needsManagement ( null )
Distance : 6

69
Tree	null != clss . needsManagement ( null )
Code	null != clss . needsManagement ( null )
Distance : 6

70
Tree	null != argMismatchStubbings . needsManagement ( decl . class )
Code	null != argMismatchStubbings . needsManagement ( decl . class )
Distance : 8

71
Tree	null != FALSY_MASK . needsManagement ( null )
Code	null != FALSY_MASK . needsManagement ( null )
Distance : 6

72
Tree	this . shell . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . shell . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

73
Tree	OngoingVerifyingModeTest . needsManagement ( null ) > NUMBER_CONSTANT
Code	OngoingVerifyingModeTest . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

74
Tree	null != minPrecedence . needsManagement ( null )
Code	null != minPrecedence . needsManagement ( null )
Distance : 6

75
Tree	null != constructorNameNode . options.skipAllPasses ( null )
Code	null != constructorNameNode . options.skipAllPasses ( null )
Distance : 7

76
Tree	null != isArrayType . needsManagement ( path . class )
Code	null != isArrayType . needsManagement ( path . class )
Distance : 8

77
Tree	null != getEnclosingStatement . options.skipAllPasses ( null )
Code	null != getEnclosingStatement . options.skipAllPasses ( null )
Distance : 7

78
Tree	this . itemURLGeneratorMap . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . itemURLGeneratorMap . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

79
Tree	patternParam . needsManagement ( null ) > NUMBER_CONSTANT
Code	patternParam . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

80
Tree	options.dependencyOptions < isLoose
Code	options.dependencyOptions < isLoose
Distance : 5

81
Tree	objectMethodsGuru . needsManagement ( path . class ) > NUMBER_CONSTANT
Code	objectMethodsGuru . needsManagement ( path . class ) > NUMBER_CONSTANT
Distance : 8

82
Tree	this . inliningReach . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . inliningReach . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

83
Tree	null != startCase . needsManagement ( null )
Code	null != startCase . needsManagement ( null )
Distance : 6

84
Tree	options.dependencyOptions < params
Code	options.dependencyOptions < params
Distance : 5

85
Tree	null != isRead . needsManagement ( decl . class )
Code	null != isRead . needsManagement ( decl . class )
Distance : 8

86
Tree	oldRoot . needsManagement ( path . class ) > NUMBER_CONSTANT
Code	oldRoot . needsManagement ( path . class ) > NUMBER_CONSTANT
Distance : 8

87
Tree	null != unusedAssignment . needsManagement ( path . class )
Code	null != unusedAssignment . needsManagement ( path . class )
Distance : 8

88
Tree	null != enclosing . options.closurePass ( null )
Code	null != enclosing . options.closurePass ( null )
Distance : 7

89
Tree	null != hasOverriddenNativeProperty . needsManagement ( null )
Code	null != hasOverriddenNativeProperty . needsManagement ( null )
Distance : 6

90
Tree	null != MILLIS . needsManagement ( null )
Code	null != MILLIS . needsManagement ( null )
Distance : 6

91
Tree	this . intervals . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . intervals . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

92
Tree	null != scenario . needsManagement ( null )
Code	null != scenario . needsManagement ( null )
Distance : 6

93
Tree	null != isLiteralObject . needsManagement ( type . class )
Code	null != isLiteralObject . needsManagement ( type . class )
Distance : 8

94
Tree	null != enumLiteralHasKey . needsManagement ( type . class )
Code	null != enumLiteralHasKey . needsManagement ( type . class )
Distance : 8

95
Tree	bundler . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Code	bundler . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Distance : 8

96
Tree	findDeps . needsManagement ( decl . class ) > NUMBER_CONSTANT
Code	findDeps . needsManagement ( decl . class ) > NUMBER_CONSTANT
Distance : 8

97
Tree	null != NewOngoingStubbing . && ( null )
Code	null != NewOngoingStubbing . && ( null )
Distance : 7

98
Tree	null != varStatement . needsManagement ( null )
Code	null != varStatement . needsManagement ( null )
Distance : 6

99
Tree	null != AAClass . needsManagement ( path . class )
Code	null != AAClass . needsManagement ( path . class )
Distance : 8

100
Tree	null != excludeNullValues . needsManagement ( null )
Code	null != excludeNullValues . needsManagement ( null )
Distance : 6

101
Tree	null != ARROW_FN . needsManagement ( type . class )
Code	null != ARROW_FN . needsManagement ( type . class )
Distance : 8

102
Tree	needsManagement < isUnresolved
Code	needsManagement < isUnresolved
Distance : 5

103
Tree	typesIndexedByProperty . needsManagement ( path . class ) > NUMBER_CONSTANT
Code	typesIndexedByProperty . needsManagement ( path . class ) > NUMBER_CONSTANT
Distance : 8

104
Tree	null != isExportLhs . needsManagement ( null )
Code	null != isExportLhs . needsManagement ( null )
Distance : 6

105
Tree	null != uniquifier . && ( null )
Code	null != uniquifier . && ( null )
Distance : 7

106
Tree	null != ResourceBundleWrapper . && ( null )
Code	null != ResourceBundleWrapper . && ( null )
Distance : 7

107
Tree	null != removeGlobals . needsManagement ( null )
Code	null != removeGlobals . needsManagement ( null )
Distance : 6

108
Tree	typesIndexedByProperty . needsManagement ( decl . class ) > NUMBER_CONSTANT
Code	typesIndexedByProperty . needsManagement ( decl . class ) > NUMBER_CONSTANT
Distance : 8

109
Tree	null != objType.nominalType . needsManagement ( null )
Code	null != objType.nominalType . needsManagement ( null )
Distance : 6

110
Tree	null != MILLIS_PER_DAY . options.skipAllPasses ( decl . class )
Code	null != MILLIS_PER_DAY . options.skipAllPasses ( decl . class )
Distance : 9

111
Tree	null != isGeneratorFunction . needsManagement ( null )
Code	null != isGeneratorFunction . needsManagement ( null )
Distance : 6

112
Tree	null != other.isLoose . needsManagement ( null )
Code	null != other.isLoose . needsManagement ( null )
Distance : 6

113
Tree	pomComparator . needsManagement ( null ) > NUMBER_CONSTANT
Code	pomComparator . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

114
Tree	this . q0 . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . q0 . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

115
Tree	oldRoot . needsManagement ( decl . class ) > NUMBER_CONSTANT
Code	oldRoot . needsManagement ( decl . class ) > NUMBER_CONSTANT
Distance : 8

116
Tree	null != MockitoSpy . needsManagement ( null )
Code	null != MockitoSpy . needsManagement ( null )
Distance : 6

117
Tree	this . rightmostName . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . rightmostName . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

118
Tree	objectMethodsGuru . needsManagement ( decl . class ) > NUMBER_CONSTANT
Code	objectMethodsGuru . needsManagement ( decl . class ) > NUMBER_CONSTANT
Distance : 8

119
Tree	null != iShort . needsManagement ( null )
Code	null != iShort . needsManagement ( null )
Distance : 6

120
Tree	null != JsdocUtil . && ( type . class )
Code	null != JsdocUtil . && ( type . class )
Distance : 9

121
Tree	null != email . needsManagement ( null )
Code	null != email . needsManagement ( null )
Distance : 6

122
Tree	sourceJarComparator . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	sourceJarComparator . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

123
Tree	null != ADDITIVE_MODE . needsManagement ( type . class )
Code	null != ADDITIVE_MODE . needsManagement ( type . class )
Distance : 8

124
Tree	null != maximalIterationCount . && ( null )
Code	null != maximalIterationCount . && ( null )
Distance : 7

125
Tree	null != inlineProperties . needsManagement ( null )
Code	null != inlineProperties . needsManagement ( null )
Distance : 6

126
Tree	guardA . needsManagement ( null ) > NUMBER_CONSTANT
Code	guardA . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

127
Tree	null != IncrementalCheckMode.GENERATE_IJS . needsManagement ( null )
Code	null != IncrementalCheckMode.GENERATE_IJS . needsManagement ( null )
Distance : 6

128
Tree	this . categoryLabelToolTips . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . categoryLabelToolTips . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

129
Tree	null != OutputJs.NORMAL . needsManagement ( null )
Code	null != OutputJs.NORMAL . needsManagement ( null )
Distance : 6

130
Tree	null != fullNameMatcher . needsManagement ( null )
Code	null != fullNameMatcher . needsManagement ( null )
Distance : 6

131
Tree	null != NodeUtil . options.skipAllPasses ( null )
Code	null != NodeUtil . options.skipAllPasses ( null )
Distance : 7

132
Tree	null != wantedInvocationCount . needsManagement ( null )
Code	null != wantedInvocationCount . needsManagement ( null )
Distance : 6

133
Tree	null != AstChange . && ( null )
Code	null != AstChange . && ( null )
Distance : 7

134
Tree	null != AccessibleObject . && ( null )
Code	null != AccessibleObject . && ( null )
Distance : 7

135
Tree	null != roundUp . && ( null )
Code	null != roundUp . && ( null )
Distance : 7

136
Tree	null != thisUnresolved . needsManagement ( type . class )
Code	null != thisUnresolved . needsManagement ( type . class )
Distance : 8

137
Tree	null != wantedArgumentPosition . needsManagement ( null )
Code	null != wantedArgumentPosition . needsManagement ( null )
Distance : 6

138
Tree	null != booleanThat . needsManagement ( null )
Code	null != booleanThat . needsManagement ( null )
Distance : 6

139
Tree	options.dependencyOptions < LocalQName
Code	options.dependencyOptions < LocalQName
Distance : 5

140
Tree	null != currentScript.hasCreatedExportObject . options.skipAllPasses ( null )
Code	null != currentScript.hasCreatedExportObject . options.skipAllPasses ( null )
Distance : 7

141
Tree	pomComparator . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	pomComparator . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

142
Tree	the_mock_type . needsManagement ( null ) > NUMBER_CONSTANT
Code	the_mock_type . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

143
Tree	this . TimesTest . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . TimesTest . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

144
Tree	this . minX . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . minX . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

145
Tree	oos . needsManagement ( null ) > NUMBER_CONSTANT
Code	oos . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

146
Tree	tzId . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	tzId . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

147
Tree	null != thisUnresolved . needsManagement ( decl . class )
Code	null != thisUnresolved . needsManagement ( decl . class )
Distance : 8

148
Tree	LogBeta . needsManagement ( null ) > NUMBER_CONSTANT
Code	LogBeta . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

149
Tree	DefaultRegisteredInvocationsTest . needsManagement ( null ) > NUMBER_CONSTANT
Code	DefaultRegisteredInvocationsTest . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

150
Tree	null != DefaultPassConfig . needsManagement ( type . class )
Code	null != DefaultPassConfig . needsManagement ( type . class )
Distance : 8

151
Tree	this . NULL_TYPE . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . NULL_TYPE . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

152
Tree	Single . needsManagement ( null ) > NUMBER_CONSTANT
Code	Single . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

153
Tree	fakeReturnValues . needsManagement ( null ) > NUMBER_CONSTANT
Code	fakeReturnValues . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

154
Tree	this . usageScope . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . usageScope . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

155
Tree	null != thatUnresolved . needsManagement ( type . class )
Code	null != thatUnresolved . needsManagement ( type . class )
Distance : 8

156
Tree	OngoingVerifyingModeTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	OngoingVerifyingModeTest . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

157
Tree	patternParam . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	patternParam . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

158
Tree	sectionOutlineStrokeMap . needsManagement ( null ) > NUMBER_CONSTANT
Code	sectionOutlineStrokeMap . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

159
Tree	ImageMapUtils . needsManagement ( null ) > NUMBER_CONSTANT
Code	ImageMapUtils . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

160
Tree	null != IncrementalCheckMode.OFF . needsManagement ( path . class )
Code	null != IncrementalCheckMode.OFF . needsManagement ( path . class )
Distance : 8

161
Tree	this . naf . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . naf . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

162
Tree	the_mock_type . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	the_mock_type . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

163
Tree	typesIndexedByProperty . needsManagement ( type . class ) > NUMBER_CONSTANT
Code	typesIndexedByProperty . needsManagement ( type . class ) > NUMBER_CONSTANT
Distance : 8

164
Tree	iPeriodConverters . needsManagement ( null ) > NUMBER_CONSTANT
Code	iPeriodConverters . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

165
Tree	null != isUnknownObject . needsManagement ( path . class )
Code	null != isUnknownObject . needsManagement ( path . class )
Distance : 8

166
Tree	rightmostName . needsManagement ( null ) > NUMBER_CONSTANT
Code	rightmostName . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

167
Tree	ClickableStackTracesTest . needsManagement ( null ) > NUMBER_CONSTANT
Code	ClickableStackTracesTest . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

168
Tree	null != ADDITIVE_MODE . needsManagement ( decl . class )
Code	null != ADDITIVE_MODE . needsManagement ( decl . class )
Distance : 8

169
Tree	convention . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Code	convention . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Distance : 8

170
Tree	oldRoot . needsManagement ( type . class ) > NUMBER_CONSTANT
Code	oldRoot . needsManagement ( type . class ) > NUMBER_CONSTANT
Distance : 8

171
Tree	this . annotations . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . annotations . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

172
Tree	this . ClassImposterizerTest . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . ClassImposterizerTest . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

173
Tree	null != unreferencedPropertiesMayBeRemoved . && ( path . class )
Code	null != unreferencedPropertiesMayBeRemoved . && ( path . class )
Distance : 9

174
Tree	objectMethodsGuru . needsManagement ( type . class ) > NUMBER_CONSTANT
Code	objectMethodsGuru . needsManagement ( type . class ) > NUMBER_CONSTANT
Distance : 8

175
Tree	this . mayUseMap . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . mayUseMap . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

176
Tree	AtLeastXVerificationTest . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Code	AtLeastXVerificationTest . needsManagement ( currentScript . class ) > NUMBER_CONSTANT
Distance : 8

177
Tree	null != parent.rootNode . needsManagement ( path . class )
Code	null != parent.rootNode . needsManagement ( path . class )
Distance : 8

178
Tree	this . objectMethodsGuru . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . objectMethodsGuru . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

179
Tree	namedA . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	namedA . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

180
Tree	null != recordedMatchersSize . needsManagement ( null )
Code	null != recordedMatchersSize . needsManagement ( null )
Distance : 6

181
Tree	null != SECONDS_MILLIS . options.skipAllPasses ( type . class )
Code	null != SECONDS_MILLIS . options.skipAllPasses ( type . class )
Distance : 9

182
Tree	null != ScriptDescription . && ( path . class )
Code	null != ScriptDescription . && ( path . class )
Distance : 9

183
Tree	guardA . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	guardA . needsManagement ( NUMBER_CONSTANT ) > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 8

184
Tree	AnswerFactoryTest . needsManagement ( null ) > NUMBER_CONSTANT
Code	AnswerFactoryTest . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

185
Tree	loader . needsManagement ( null ) > NUMBER_CONSTANT
Code	loader . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

186
Tree	null != JsdocUtil . && ( decl . class )
Code	null != JsdocUtil . && ( decl . class )
Distance : 9

187
Tree	null != ownerName . needsManagement ( path . class )
Code	null != ownerName . needsManagement ( path . class )
Distance : 8

188
Tree	null != funType . needsManagement ( type . class )
Code	null != funType . needsManagement ( type . class )
Distance : 8

189
Tree	null != enableSubstitutionInVariables . needsManagement ( type . class )
Code	null != enableSubstitutionInVariables . needsManagement ( type . class )
Distance : 8

190
Tree	null != isDefinedInSrc . needsManagement ( path . class )
Code	null != isDefinedInSrc . needsManagement ( path . class )
Distance : 8

191
Tree	scopeType . needsManagement ( null ) > NUMBER_CONSTANT
Code	scopeType . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

192
Tree	options.dependencyOptions < ctorType
Code	options.dependencyOptions < ctorType
Distance : 5

193
Tree	findDeps . needsManagement ( path . class ) > NUMBER_CONSTANT
Code	findDeps . needsManagement ( path . class ) > NUMBER_CONSTANT
Distance : 8

194
Tree	ListIterator . needsManagement ( null ) > NUMBER_CONSTANT
Code	ListIterator . needsManagement ( null ) > NUMBER_CONSTANT
Distance : 6

195
Tree	null != isKnown . needsManagement ( path . class )
Code	null != isKnown . needsManagement ( path . class )
Distance : 8

196
Tree	null != getFunction . options.skipAllPasses ( type . class )
Code	null != getFunction . options.skipAllPasses ( type . class )
Distance : 9

197
Tree	null != pass2Index . needsManagement ( path . class )
Code	null != pass2Index . needsManagement ( path . class )
Distance : 8

198
Tree	this . domainMarkers . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Code	this . domainMarkers . needsManagement () > NUMBER_CONSTANT == NUMBER_CONSTANT
Distance : 7

199
Tree	tzId / decl == NUMBER_CONSTANT
Code	tzId / decl == NUMBER_CONSTANT
Distance : 6

========================================================================


========================================================================
Example Number: 28
Parent Code is: 
{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ ( new NodeTraversal ( compiler , this ) ) . traverseRoots ( externs , root ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=traverse}) (214{val=(}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (36 (214{val=(}) (14 (304{val=new}) (43 (801{val=NodeTraversal})) (214{val=(}) (800{val=compiler}) (234{val=,}) (315{val=this}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=traverseRoots}) (214{val=(}) (800{val=externs}) (234{val=,}) (800{val=root}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/30/parent/src_com_google_javascript_jscomp_FlowSensitiveInlineVariables.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( root ) ; }
Distance : 5

1
Tree	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverse ( root ) ; }
Distance : 8

2
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Distance : 8

3
Tree	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverse ( root ) ; }
Distance : 8

4
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

5
Tree	{ ( new NodeTraversal ( externs , null , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , null , false ) ) . traverseRoots ( externs ) ; }
Distance : 6

6
Tree	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverseRoots ( externs ) ; }
Distance : 7

7
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , ! ) ; }
Distance : 7

8
Tree	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( compiler ) ; }
Distance : 9

9
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , false ) ; }
Distance : 5

10
Tree	{ ( new NodeTraversal ( compiler , null , true ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , null , true ) ) . traverse ( externs ) ; }
Distance : 6

11
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , null ) ; }
Distance : 9

12
Tree	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , false ) ; }
Code	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , false ) ; }
Distance : 7

13
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , super ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , super ) ; }
Distance : 7

14
Tree	{ ( new NodeTraversal ( root , this , root ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( root , this , root ) ) . traverseRoots ( root ) ; }
Distance : 5

15
Tree	{ ( new NodeTraversal ( root , this , externs ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( root , this , externs ) ) . traverseRoots ( root ) ; }
Distance : 5

16
Tree	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverse ( externs ) ; }
Distance : 6

17
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

18
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , null ) ; }
Distance : 9

19
Tree	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( compiler ) ; }
Distance : 7

20
Tree	{ ( new NodeTraversal ( root , null , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( root , null , false ) ) . traverseRoots ( root ) ; }
Distance : 6

21
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , false ) ; }
Distance : 5

22
Tree	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverse ( externs ) ; }
Distance : 8

23
Tree	{ traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , false ) ; }
Code	{ traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , false ) ; }
Distance : 7

24
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , super ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , super ) ; }
Distance : 7

25
Tree	{ ( new NodeTraversal ( root , this , root ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( root , this , root ) ) . traverseRoots ( externs ) ; }
Distance : 5

26
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , null ) ; }
Distance : 7

27
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Distance : 8

28
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

29
Tree	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( root ) , false ) ; }
Distance : 7

30
Tree	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverse ( externs ) ; }
Distance : 6

31
Tree	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverseRoots ( externs ) ; }
Distance : 7

32
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Distance : 8

33
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

34
Tree	{ compiler . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ compiler . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

35
Tree	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( externs ) ; }
Distance : 7

36
Tree	{ ( new NodeTraversal ( externs , this , root ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , root ) ) . traverseRoots ( root ) ; }
Distance : 5

37
Tree	{ externs . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ externs . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

38
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

39
Tree	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverseRoots ( root ) ; }
Distance : 7

40
Tree	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverseRoots ( root ) ; }
Distance : 7

41
Tree	{ ( new NodeTraversal ( externs , this , externs ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , externs ) ) . traverseRoots ( root ) ; }
Distance : 5

42
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( compiler ) ; }
Distance : 5

43
Tree	{ ( new NodeTraversal ( externs , null , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( externs , null , false ) ) . traverseRoots ( root ) ; }
Distance : 6

44
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , false ) ; }
Distance : 6

45
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( compiler ) ; }
Distance : 8

46
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , ! ) ; }
Distance : 7

47
Tree	{ ( new NodeTraversal ( externs , this , root ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , this , root ) ) . traverseRoots ( externs ) ; }
Distance : 5

48
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Distance : 9

49
Tree	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverse ( root ) ; }
Distance : 8

50
Tree	{ root . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ root . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

51
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , false ) ; }
Distance : 6

52
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

53
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Distance : 8

54
Tree	{ ( new NodeTraversal ( externs , this , externs ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , this , externs ) ) . traverseRoots ( externs ) ; }
Distance : 5

55
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Distance : 9

56
Tree	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverse ( root ) ; }
Distance : 6

57
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Distance : 8

58
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 10

59
Tree	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverse ( root ) ; }
Distance : 6

60
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Distance : 9

61
Tree	{ ( new NodeTraversal ( compiler , null , true ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , null , true ) ) . traverse ( root ) ; }
Distance : 6

62
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Distance : 8

63
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Distance : 9

64
Tree	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

65
Tree	{ ( new NodeTraversal ( root , this , compiler ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( root , this , compiler ) ) . traverse ( externs ) ; }
Distance : 6

66
Tree	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) . traverse ( CHAR_CONS ) ; }
Distance : 8

67
Tree	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( compiler ) ; }
Distance : 7

68
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , null ) ; }
Distance : 9

69
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , null ) ; }
Distance : 9

70
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , CHAR_CONS ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , CHAR_CONS ) ; }
Distance : 6

71
Tree	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs , root ) . traverse ( CHAR_CONS ) ; }
Distance : 8

72
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , null ) ; }
Distance : 9

73
Tree	{ ( new NodeTraversal ( compiler , externs , compiler , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , externs , compiler , false ) ) . traverse ( externs ) ; }
Distance : 8

74
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

75
Tree	{ ( new NodeTraversal ( compiler , null , true ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , null , true ) ) . traverseRoots ( root ) ; }
Distance : 5

76
Tree	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( compiler ) ; }
Distance : 7

77
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , CHAR_CONS ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , CHAR_CONS ) ; }
Distance : 6

78
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( compiler ) , false ) ; }
Distance : 7

79
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( root ) . traverseRoots ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( root ) . traverseRoots ( CHAR_CONS ) ; }
Distance : 10

80
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

81
Tree	{ ( new NodeTraversal ( root , compiler , compiler , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( root , compiler , compiler , false ) ) . traverse ( externs ) ; }
Distance : 8

82
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs , root ) . traverseRoots ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( externs , root ) . traverseRoots ( CHAR_CONS ) ; }
Distance : 9

83
Tree	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , externs , false ) ) . traverseRoots ( root ) ; }
Distance : 7

84
Tree	{ ( new NodeTraversal ( compiler , return; , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , return; , false ) ) . traverse ( root ) ; }
Distance : 6

85
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , ! ) ; }
Distance : 6

86
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , null ) ; }
Distance : 8

87
Tree	{ externs . traverseRoots ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ externs . traverseRoots ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

88
Tree	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( compiler ) ; }
Distance : 8

89
Tree	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , compiler ) ) . traverseRoots ( root ) ; }
Distance : 5

90
Tree	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , super(); , false ) ) . traverseRoots ( root ) ; }
Distance : 5

91
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , null ) ; }
Distance : 8

92
Tree	{ compiler . traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Code	{ compiler . traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Distance : 9

93
Tree	{ compiler . traverseRoots ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ compiler . traverseRoots ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

94
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , null ) ; }
Distance : 7

95
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

96
Tree	{ traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , false ) ; }
Code	{ traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , false ) ; }
Distance : 6

97
Tree	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Code	{ root . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Distance : 8

98
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( externs ) , null ) ; }
Distance : 7

99
Tree	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( compiler ) ; }
Distance : 7

100
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , ! ) ; }
Distance : 6

101
Tree	{ ( new NodeTraversal ( compiler , externs , compiler , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , externs , compiler , false ) ) . traverse ( root ) ; }
Distance : 8

102
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , CHAR_CONS ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , CHAR_CONS ) ; }
Distance : 7

103
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( externs ) , null ) ; }
Distance : 7

104
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverse ( externs , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

105
Tree	{ ( new NodeTraversal ( root , this , externs ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( root , this , externs ) ) . traverseRoots ( externs ) ; }
Distance : 5

106
Tree	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

107
Tree	{ ( new NodeTraversal ( root , this , compiler ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( root , this , compiler ) ) . traverse ( root ) ; }
Distance : 6

108
Tree	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverse ( externs ) ; }
Distance : 8

109
Tree	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverse ( externs ) ; }
Distance : 8

110
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , null ) ; }
Distance : 9

111
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , ! ) ; }
Distance : 6

112
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , null ) ; }
Distance : 8

113
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , super ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , super ) ; }
Distance : 6

114
Tree	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , false ) ; }
Code	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , false ) ; }
Distance : 6

115
Tree	{ ( new NodeTraversal ( root , compiler , compiler , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( root , compiler , compiler , false ) ) . traverse ( root ) ; }
Distance : 8

116
Tree	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( compiler ) ; }
Distance : 8

117
Tree	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , false ) ; }
Distance : 6

118
Tree	{ root . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ root . traverse ( traverseRoots ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

119
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) , null ) ; }
Distance : 8

120
Tree	{ ( new NodeTraversal ( root , null , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( root , null , false ) ) . traverseRoots ( externs ) ; }
Distance : 6

121
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( compiler ) , false ) ; }
Distance : 7

122
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverse ( externs ) . traverse ( CHAR_CONS ) ; }
Distance : 9

123
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , super ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , super ) ; }
Distance : 6

124
Tree	{ new NodeTraversal ( compiler , this , root ) . traverse ( root , root ) . traverseRoots ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , root ) . traverse ( root , root ) . traverseRoots ( CHAR_CONS ) ; }
Distance : 10

125
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , CHAR_CONS ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , CHAR_CONS ) ; }
Distance : 7

126
Tree	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( externs ) ; }
Distance : 6

127
Tree	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( compiler ) ; }
Distance : 9

128
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( compiler ) ; }
Distance : 6

129
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( compiler ) ; }
Distance : 6

130
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( compiler ) ; }
Distance : 9

131
Tree	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( root ) ; }
Distance : 7

132
Tree	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( externs ) ; }
Distance : 6

133
Tree	{ compiler . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ compiler . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

134
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , false ) ; }
Distance : 7

135
Tree	{ externs . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Code	{ externs . traverse ( traverse ( NUMBER_CONSTANT , false ) , null ) ; }
Distance : 13

136
Tree	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( externs ) ; }
Distance : 6

137
Tree	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( externs ) ; }
Distance : 8

138
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Distance : 9

139
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , false ) ; }
Distance : 7

140
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Distance : 9

141
Tree	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( root ) ; }
Distance : 6

142
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Distance : 9

143
Tree	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( externs ) ; }
Distance : 8

144
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Distance : 9

145
Tree	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( externs , null , false ) ) . traverse ( externs ) ; }
Distance : 7

146
Tree	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( root , this , externs ) ) . traverse ( root ) ; }
Distance : 6

147
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , false ) ; }
Distance : 6

148
Tree	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( root , null , false ) ) . traverse ( root ) ; }
Distance : 7

149
Tree	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( root , this , root ) ) . traverse ( externs ) ; }
Distance : 6

150
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Distance : 8

151
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , false ) ; }
Distance : 6

152
Tree	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , externs ) ) . traverse ( root ) ; }
Distance : 6

153
Tree	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Code	{ compiler . traverse ( new NodeTraversal ( compiler , this , externs ) . traverse ( externs ) , null ) ; }
Distance : 8

154
Tree	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , root , false ) ) . traverse ( root ) ; }
Distance : 8

155
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( compiler ) ; }
Distance : 6

156
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( root ) ; }
Distance : 6

157
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( externs ) ; }
Distance : 5

158
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( externs ) ; }
Distance : 5

159
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( externs ) ; }
Distance : 6

160
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( root ) ; }
Distance : 4

161
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( root ) ; }
Distance : 4

162
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( root ) ; }
Distance : 5

163
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( externs ) ; }
Distance : 4

164
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( root ) ; }
Distance : 5

165
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( externs ) ; }
Distance : 4

166
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( root ) ; }
Distance : 8

167
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverseRoots ( externs ) ; }
Distance : 5

168
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverse ( externs ) ; }
Distance : 5

169
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( compiler ) ; }
Distance : 6

170
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverse ( externs ) ; }
Distance : 8

171
Tree	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , null , false ) ) . traverse ( compiler ) ; }
Distance : 7

172
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( root ) ; }
Distance : 4

173
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( root ) ; }
Distance : 7

174
Tree	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , this , compiler ) ) . traverseRoots ( externs ) ; }
Distance : 4

175
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverseRoots ( compiler ) ; }
Distance : 5

176
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( compiler ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverseRoots ( compiler ) ; }
Distance : 5

177
Tree	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , root , compiler , false ) ) . traverse ( root ) ; }
Distance : 8

178
Tree	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( externs , this , root ) ) . traverse ( root ) ; }
Distance : 6

179
Tree	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( externs ) ; }
Code	{ ( new NodeTraversal ( compiler , compiler , compiler , false ) ) . traverseRoots ( externs ) ; }
Distance : 7

180
Tree	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Code	{ externs . traverse ( new NodeTraversal ( compiler , this , root ) . traverse ( externs ) , null ) ; }
Distance : 8

181
Tree	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , this , externs ) ) . traverse ( root ) ; }
Distance : 5

182
Tree	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( root ) ; } values
Code	{ ( new NodeTraversal ( compiler , this , root ) ) . traverse ( root ) ; } values
Distance : 6

183
Tree	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } mockingProgress
Code	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } mockingProgress
Distance : 4

184
Tree	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 4

185
Tree	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } size
Code	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } size
Distance : 4

186
Tree	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } PeriodType
Code	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } PeriodType
Distance : 4

187
Tree	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } b
Code	{ ( new NodeTraversal ( compiler , this ) ) . traverse ( root ) ; } b
Distance : 4

188
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

189
Tree	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , ! ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , externs ) . traverseRoots ( root ) , ! ) ; }
Distance : 6

190
Tree	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root , root ) . traverseRoots ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , externs ) . traverse ( root , root ) . traverseRoots ( CHAR_CONS ) ; }
Distance : 10

191
Tree	{ externs . traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Code	{ externs . traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverse ( root ) , null ) ; }
Distance : 9

192
Tree	{ compiler . traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Code	{ compiler . traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Distance : 9

193
Tree	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , false ) ; }
Code	{ traverseRoots ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , false ) ; }
Distance : 6

194
Tree	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , super ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , root ) . traverseRoots ( root ) , super ) ; }
Distance : 6

195
Tree	{ externs . traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Code	{ externs . traverseRoots ( new NodeTraversal ( compiler , this , externs ) . traverse ( root ) , null ) ; }
Distance : 9

196
Tree	{ new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Code	{ new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root , root ) . traverse ( CHAR_CONS ) ; }
Distance : 9

197
Tree	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root ) , false ) ; }
Code	{ traverse ( new NodeTraversal ( compiler , this , compiler ) . traverseRoots ( root ) , false ) ; }
Distance : 6

198
Tree	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( externs , compiler , compiler , false ) ) . traverseRoots ( root ) ; }
Distance : 7

199
Tree	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverseRoots ( root ) ; }
Code	{ ( new NodeTraversal ( compiler , root , root , false ) ) . traverseRoots ( root ) ; }
Distance : 7

========================================================================


========================================================================
Example Number: 29
Parent Code is: 
Node catchBody = block ( catchNode ) . copyInformationFrom ( catchNode ) ;
-------------------------------------------------------------------------------
Child code is: 
Node catchBody = blockUnchecked ( catchNode ) . copyInformationFrom ( catchNode ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=catchBody}) (204{val==}) (32 (32 (802{val=block}) (214{val=(}) (800{val=catchNode}) (215{val=)})) (235{val=.}) (802{val=copyInformationFrom}) (214{val=(}) (800{val=catchNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Node})) (59 (800{val=catchBody}) (204{val==}) (32 (32 (802{val=blockUnchecked}) (214{val=(}) (800{val=catchNode}) (215{val=)})) (235{val=.}) (802{val=copyInformationFrom}) (214{val=(}) (800{val=catchNode}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/27/parent/src_com_google_javascript_rhino_IR.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Node catchBody = catchBody . block ( catchBody ) ; add
Code	Node catchBody = catchBody . block ( catchBody ) ; add
Distance : 7

1
Tree	Node catchBody = block ( catchBody ) ; stroke
Code	Node catchBody = block ( catchBody ) ; stroke
Distance : 8

2
Tree	Node catchBody = block ( catchBody ) ; MutableTimePeriod
Code	Node catchBody = block ( catchBody ) ; MutableTimePeriod
Distance : 8

3
Tree	Node catchBody = block ( catchBody ) ; get
Code	Node catchBody = block ( catchBody ) ; get
Distance : 8

4
Tree	Node catchBody = block ( catchBody ) ; isEmpty
Code	Node catchBody = block ( catchBody ) ; isEmpty
Distance : 8

5
Tree	Node catchBody = block ( catchBody ) ; PeriodType
Code	Node catchBody = block ( catchBody ) ; PeriodType
Distance : 8

6
Tree	Node catchBody = block ( catchBody ) ; b
Code	Node catchBody = block ( catchBody ) ; b
Distance : 8

7
Tree	Node catchBody = block ( catchBody ) ; contains
Code	Node catchBody = block ( catchBody ) ; contains
Distance : 8

8
Tree	Node catchBody = block ( catchBody ) ; isNormalBlock
Code	Node catchBody = block ( catchBody ) ; isNormalBlock
Distance : 8

9
Tree	Node catchBody = block ( catchBody ) ; public
Code	Node catchBody = block ( catchBody ) ; public
Distance : 8

10
Tree	Node catchBody = block ( catchBody ) ; >
Code	Node catchBody = block ( catchBody ) ; >
Distance : 8

11
Tree	Node catchBody = block ( catchBody ) ; d
Code	Node catchBody = block ( catchBody ) ; d
Distance : 8

12
Tree	Node catchBody = block ( catchBody ) ; StringBuilder
Code	Node catchBody = block ( catchBody ) ; StringBuilder
Distance : 8

13
Tree	Node catchBody = block ( catchBody ) ; a
Code	Node catchBody = block ( catchBody ) ; a
Distance : 8

14
Tree	Node catchBody = block ( catchBody ) ; sqrt
Code	Node catchBody = block ( catchBody ) ; sqrt
Distance : 8

15
Tree	Node catchBody = block ( catchBody ) ; mockingProgress
Code	Node catchBody = block ( catchBody ) ; mockingProgress
Distance : 8

16
Tree	Node catchBody = block ( catchBody ) ; return;
Code	Node catchBody = block ( catchBody ) ; return;
Distance : 8

17
Tree	Node catchBody = block ( catchBody ) ; chrono
Code	Node catchBody = block ( catchBody ) ; chrono
Distance : 8

18
Tree	Node catchBody = block ( catchBody ) ; size
Code	Node catchBody = block ( catchBody ) ; size
Distance : 8

19
Tree	Node catchBody = block ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Code	Node catchBody = block ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Distance : 8

20
Tree	Node catchBody = catchBody . block ( catchBody ) ; result
Code	Node catchBody = catchBody . block ( catchBody ) ; result
Distance : 7

21
Tree	Node catchBody = catchBody . block ( catchBody ) ; Args
Code	Node catchBody = catchBody . block ( catchBody ) ; Args
Distance : 7

22
Tree	Node catchBody = catchBody . block ( catchBody ) ; matcher
Code	Node catchBody = catchBody . block ( catchBody ) ; matcher
Distance : 7

23
Tree	Node catchBody = catchBody . block ( catchBody ) ; compiler
Code	Node catchBody = catchBody . block ( catchBody ) ; compiler
Distance : 7

24
Tree	Node catchBody = catchBody . block ( catchBody ) ; :
Code	Node catchBody = catchBody . block ( catchBody ) ; :
Distance : 7

25
Tree	Node catchBody = catchBody . block ( catchBody ) ; boolean
Code	Node catchBody = catchBody . block ( catchBody ) ; boolean
Distance : 7

26
Tree	Node catchBody = catchBody ( catchBody ) ; createIllegalArgumentException
Code	Node catchBody = catchBody ( catchBody ) ; createIllegalArgumentException
Distance : 8

27
Tree	Node catchBody = catchBody ( catchBody ) ; parent
Code	Node catchBody = catchBody ( catchBody ) ; parent
Distance : 8

28
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; boolean
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; boolean
Distance : 4

29
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; t
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; t
Distance : 4

30
Tree	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; result
Code	Node catchBody = block ( catchBody ) . copyInformationFrom ( catchBody ) ; result
Distance : 4

31
Tree	Node catchBody = catchBody . block ( catchBody ) ; NUMBER_CONSTANT
Code	Node catchBody = catchBody . block ( catchBody ) ; NUMBER_CONSTANT
Distance : 7

32
Tree	Node catchBody = catchBody . block ( catchBody ) ; String
Code	Node catchBody = catchBody . block ( catchBody ) ; String
Distance : 7

33
Tree	Node catchBody = catchBody . block ( catchBody ) ; e
Code	Node catchBody = catchBody . block ( catchBody ) ; e
Distance : 7

34
Tree	Node catchBody = catchBody . block ( catchBody ) ; n
Code	Node catchBody = catchBody . block ( catchBody ) ; n
Distance : 7

35
Tree	Node catchBody = catchBody . block ( catchBody ) ; throw
Code	Node catchBody = catchBody . block ( catchBody ) ; throw
Distance : 7

36
Tree	Node catchBody = catchBody . block ( catchBody ) ; a
Code	Node catchBody = catchBody . block ( catchBody ) ; a
Distance : 7

37
Tree	Node catchBody = catchBody . block ( catchBody ) ; catch
Code	Node catchBody = catchBody . block ( catchBody ) ; catch
Distance : 7

38
Tree	Node catchBody = catchBody . block ( catchBody ) ; ==
Code	Node catchBody = catchBody . block ( catchBody ) ; ==
Distance : 7

39
Tree	Node catchBody = catchBody . block ( catchBody ) ; return
Code	Node catchBody = catchBody . block ( catchBody ) ; return
Distance : 7

40
Tree	Node catchBody = catchBody . block ( catchBody ) ; STRING_CONSTANT
Code	Node catchBody = catchBody . block ( catchBody ) ; STRING_CONSTANT
Distance : 7

41
Tree	Node catchBody = catchBody . block ( catchBody ) ; List
Code	Node catchBody = catchBody . block ( catchBody ) ; List
Distance : 7

42
Tree	Node catchBody = catchBody . block ( catchBody ) ; new
Code	Node catchBody = catchBody . block ( catchBody ) ; new
Distance : 7

43
Tree	Node catchBody = catchBody . block ( catchBody ) ; {
Code	Node catchBody = catchBody . block ( catchBody ) ; {
Distance : 7

44
Tree	Node catchBody = catchBody . block ( catchBody ) ; ()
Code	Node catchBody = catchBody . block ( catchBody ) ; ()
Distance : 7

45
Tree	Node catchBody = catchBody . block ( catchBody ) ; }
Code	Node catchBody = catchBody . block ( catchBody ) ; }
Distance : 7

46
Tree	Node catchBody = catchBody . block ( catchBody ) ; =
Code	Node catchBody = catchBody . block ( catchBody ) ; =
Distance : 7

47
Tree	Node catchBody = catchBody . block ( catchBody ) ; m
Code	Node catchBody = catchBody . block ( catchBody ) ; m
Distance : 7

48
Tree	Node catchBody = catchBody . block ( catchBody ) ; void
Code	Node catchBody = catchBody . block ( catchBody ) ; void
Distance : 7

49
Tree	Node catchBody = catchBody ( catchBody ) ; str
Code	Node catchBody = catchBody ( catchBody ) ; str
Distance : 8

50
Tree	Node catchBody = catchBody . block ( catchBody ) ; mode
Code	Node catchBody = catchBody . block ( catchBody ) ; mode
Distance : 7

51
Tree	Node catchBody = catchBody . block ( catchBody ) ; JSType
Code	Node catchBody = catchBody . block ( catchBody ) ; JSType
Distance : 7

52
Tree	Node catchBody = catchBody . block ( catchBody ) ; root
Code	Node catchBody = catchBody . block ( catchBody ) ; root
Distance : 7

53
Tree	Node catchBody = catchBody . block ( catchBody ) ; wanted
Code	Node catchBody = catchBody . block ( catchBody ) ; wanted
Distance : 7

54
Tree	Node catchBody = catchBody . block ( catchBody ) ; Math
Code	Node catchBody = catchBody . block ( catchBody ) ; Math
Distance : 7

55
Tree	Node catchBody = catchBody . block ( catchBody ) ; invocations
Code	Node catchBody = catchBody . block ( catchBody ) ; invocations
Distance : 7

56
Tree	Node catchBody = catchBody . block ( catchBody ) ; index
Code	Node catchBody = catchBody . block ( catchBody ) ; index
Distance : 7

57
Tree	Node catchBody = catchBody . block ( catchBody ) ; getParent
Code	Node catchBody = catchBody . block ( catchBody ) ; getParent
Distance : 7

58
Tree	Node catchBody = catchBody . block ( catchBody ) ; node
Code	Node catchBody = catchBody . block ( catchBody ) ; node
Distance : 7

59
Tree	Node catchBody = catchBody . block ( catchBody ) ; values
Code	Node catchBody = catchBody . block ( catchBody ) ; values
Distance : 7

60
Tree	Node catchBody = catchBody . block ( catchBody ) ; protected
Code	Node catchBody = catchBody . block ( catchBody ) ; protected
Distance : 7

61
Tree	Node catchBody = catchBody . block ( catchBody ) ; out
Code	Node catchBody = catchBody . block ( catchBody ) ; out
Distance : 7

62
Tree	Node catchBody = catchBody . block ( catchBody ) ; stream
Code	Node catchBody = catchBody . block ( catchBody ) ; stream
Distance : 7

63
Tree	Node catchBody = block ( catchBody ) ; JSType
Code	Node catchBody = block ( catchBody ) ; JSType
Distance : 8

64
Tree	Node catchBody = block ( catchBody ) ; char
Code	Node catchBody = block ( catchBody ) ; char
Distance : 8

65
Tree	Node catchBody = block ( catchBody ) ; abs
Code	Node catchBody = block ( catchBody ) ; abs
Distance : 8

66
Tree	Node catchBody = catchBody . block ( catchBody ) ; !=
Code	Node catchBody = catchBody . block ( catchBody ) ; !=
Distance : 7

67
Tree	Node catchBody = catchBody . block ( catchBody ) ; <>
Code	Node catchBody = catchBody . block ( catchBody ) ; <>
Distance : 7

68
Tree	Node catchBody = catchBody . block ( catchBody ) ; &&
Code	Node catchBody = catchBody . block ( catchBody ) ; &&
Distance : 7

69
Tree	Node catchBody = catchBody . block ( catchBody ) ; T
Code	Node catchBody = catchBody . block ( catchBody ) ; T
Distance : 7

70
Tree	Node catchBody = catchBody . block ( catchBody ) ; i
Code	Node catchBody = catchBody . block ( catchBody ) ; i
Distance : 7

71
Tree	Node catchBody = catchBody . block ( catchBody ) ; value
Code	Node catchBody = catchBody . block ( catchBody ) ; value
Distance : 7

72
Tree	Node catchBody = catchBody . block ( catchBody ) ; checkState
Code	Node catchBody = catchBody . block ( catchBody ) ; checkState
Distance : 7

73
Tree	Node catchBody = catchBody . block ( catchBody ) ; NodeUtil
Code	Node catchBody = catchBody . block ( catchBody ) ; NodeUtil
Distance : 7

74
Tree	Node catchBody = catchBody . block ( catchBody ) ; data
Code	Node catchBody = catchBody . block ( catchBody ) ; data
Distance : 7

75
Tree	Node catchBody = catchBody . block ( catchBody ) ; checkArgument
Code	Node catchBody = catchBody . block ( catchBody ) ; checkArgument
Distance : 7

76
Tree	Node catchBody = catchBody . block ( catchBody ) ; NodeTraversal
Code	Node catchBody = catchBody . block ( catchBody ) ; NodeTraversal
Distance : 7

77
Tree	Node catchBody = catchBody . block ( catchBody ) ; get
Code	Node catchBody = catchBody . block ( catchBody ) ; get
Distance : 7

78
Tree	Node catchBody = catchBody . block ( catchBody ) ; isEmpty
Code	Node catchBody = catchBody . block ( catchBody ) ; isEmpty
Distance : 7

79
Tree	Node catchBody = catchBody . block ( catchBody ) ; ]
Code	Node catchBody = catchBody . block ( catchBody ) ; ]
Distance : 7

80
Tree	Node catchBody = catchBody . block ( catchBody ) ; [
Code	Node catchBody = catchBody . block ( catchBody ) ; [
Distance : 7

81
Tree	Node catchBody = catchBody . block ( catchBody ) ; Preconditions
Code	Node catchBody = catchBody . block ( catchBody ) ; Preconditions
Distance : 7

82
Tree	Node catchBody = catchBody . block ( catchBody ) ; -
Code	Node catchBody = catchBody . block ( catchBody ) ; -
Distance : 7

83
Tree	Node catchBody = catchBody . block ( catchBody ) ; true
Code	Node catchBody = catchBody . block ( catchBody ) ; true
Distance : 7

84
Tree	Node catchBody = catchBody . block ( catchBody ) ; fail
Code	Node catchBody = catchBody . block ( catchBody ) ; fail
Distance : 7

85
Tree	Node catchBody = catchBody . block ( catchBody ) ; {}
Code	Node catchBody = catchBody . block ( catchBody ) ; {}
Distance : 7

86
Tree	Node catchBody = catchBody . block ( catchBody ) ; MathRuntimeException
Code	Node catchBody = catchBody . block ( catchBody ) ; MathRuntimeException
Distance : 7

87
Tree	Node catchBody = catchBody . block ( catchBody ) ; char
Code	Node catchBody = catchBody . block ( catchBody ) ; char
Distance : 7

88
Tree	Node catchBody = catchBody . block ( catchBody ) ; stroke
Code	Node catchBody = catchBody . block ( catchBody ) ; stroke
Distance : 7

89
Tree	Node catchBody = catchBody . block ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Code	Node catchBody = catchBody . block ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Distance : 7

90
Tree	Node catchBody = catchBody . block ( catchBody ) ; size
Code	Node catchBody = catchBody . block ( catchBody ) ; size
Distance : 7

91
Tree	Node catchBody = catchBody . block ( catchBody ) ; obj
Code	Node catchBody = catchBody . block ( catchBody ) ; obj
Distance : 7

92
Tree	Node catchBody = catchBody . block ( catchBody ) ; traverseEs6
Code	Node catchBody = catchBody . block ( catchBody ) ; traverseEs6
Distance : 7

93
Tree	Node catchBody = catchBody . block ( catchBody ) ; chrono
Code	Node catchBody = catchBody . block ( catchBody ) ; chrono
Distance : 7

94
Tree	Node catchBody = catchBody . block ( catchBody ) ; return;
Code	Node catchBody = catchBody . block ( catchBody ) ; return;
Distance : 7

95
Tree	Node catchBody = catchBody . block ( catchBody ) ; mockingProgress
Code	Node catchBody = catchBody . block ( catchBody ) ; mockingProgress
Distance : 7

96
Tree	Node catchBody = catchBody . block ( catchBody ) ; StringBuilder
Code	Node catchBody = catchBody . block ( catchBody ) ; StringBuilder
Distance : 7

97
Tree	Node catchBody = catchBody . block ( catchBody ) ; try
Code	Node catchBody = catchBody . block ( catchBody ) ; try
Distance : 7

98
Tree	Node catchBody = catchBody . block ( catchBody ) ; ex
Code	Node catchBody = catchBody . block ( catchBody ) ; ex
Distance : 7

99
Tree	Node catchBody = catchBody . block ( catchBody ) ; MutableTimePeriod
Code	Node catchBody = catchBody . block ( catchBody ) ; MutableTimePeriod
Distance : 7

100
Tree	Node catchBody = catchBody ( catchBody ) ; LINE_JOINER
Code	Node catchBody = catchBody ( catchBody ) ; LINE_JOINER
Distance : 8

101
Tree	Node catchBody = catchBody ( catchBody ) ; assertThat
Code	Node catchBody = catchBody ( catchBody ) ; assertThat
Distance : 8

102
Tree	Node catchBody = catchBody ( catchBody ) ; invocation
Code	Node catchBody = catchBody ( catchBody ) ; invocation
Distance : 8

103
Tree	Node catchBody = catchBody ( catchBody ) ; Invocation
Code	Node catchBody = catchBody ( catchBody ) ; Invocation
Distance : 8

104
Tree	Node catchBody = catchBody ( catchBody ) ; js
Code	Node catchBody = catchBody ( catchBody ) ; js
Distance : 8

105
Tree	Node catchBody = catchBody ( catchBody ) ; TestUtilities
Code	Node catchBody = catchBody ( catchBody ) ; TestUtilities
Distance : 8

106
Tree	Node catchBody = catchBody ( catchBody ) ; StrBuilder
Code	Node catchBody = catchBody ( catchBody ) ; StrBuilder
Distance : 8

107
Tree	Node catchBody = catchBody ( catchBody ) ; setUp
Code	Node catchBody = catchBody ( catchBody ) ; setUp
Distance : 8

108
Tree	Node catchBody = block ( catchBody ) ; Preconditions
Code	Node catchBody = block ( catchBody ) ; Preconditions
Distance : 8

109
Tree	Node catchBody = block ( catchBody ) ; [
Code	Node catchBody = block ( catchBody ) ; [
Distance : 8

110
Tree	Node catchBody = block ( catchBody ) ; ]
Code	Node catchBody = block ( catchBody ) ; ]
Distance : 8

111
Tree	Node catchBody = block ( catchBody ) ; str
Code	Node catchBody = block ( catchBody ) ; str
Distance : 8

112
Tree	Node catchBody = block ( catchBody ) ; LINE_JOINER
Code	Node catchBody = block ( catchBody ) ; LINE_JOINER
Distance : 8

113
Tree	Node catchBody = block ( catchBody ) ; assertThat
Code	Node catchBody = block ( catchBody ) ; assertThat
Distance : 8

114
Tree	Node catchBody = block ( catchBody ) ; invocation
Code	Node catchBody = block ( catchBody ) ; invocation
Distance : 8

115
Tree	Node catchBody = block ( catchBody ) ; add
Code	Node catchBody = block ( catchBody ) ; add
Distance : 8

116
Tree	Node catchBody = block ( catchBody ) ; name
Code	Node catchBody = block ( catchBody ) ; name
Distance : 8

117
Tree	Node catchBody = block ( catchBody ) ; t
Code	Node catchBody = block ( catchBody ) ; t
Distance : 8

118
Tree	Node catchBody = block ( catchBody ) ; field
Code	Node catchBody = block ( catchBody ) ; field
Distance : 8

119
Tree	Node catchBody = block ( catchBody ) ; n
Code	Node catchBody = block ( catchBody ) ; n
Distance : 8

120
Tree	Node catchBody = catchBody ( catchBody ) ; class
Code	Node catchBody = catchBody ( catchBody ) ; class
Distance : 8

121
Tree	Node catchBody = catchBody ( catchBody ) ; mock
Code	Node catchBody = catchBody ( catchBody ) ; mock
Distance : 8

122
Tree	Node catchBody = catchBody ( catchBody ) ; setAcceptedLanguage
Code	Node catchBody = catchBody ( catchBody ) ; setAcceptedLanguage
Distance : 8

123
Tree	Node catchBody = catchBody ( catchBody ) ; stream
Code	Node catchBody = catchBody ( catchBody ) ; stream
Distance : 8

124
Tree	Node catchBody = block ( catchBody ) ; e
Code	Node catchBody = block ( catchBody ) ; e
Distance : 8

125
Tree	Node catchBody = block ( catchBody ) ; String
Code	Node catchBody = block ( catchBody ) ; String
Distance : 8

126
Tree	Node catchBody = block ( catchBody ) ; compiler
Code	Node catchBody = block ( catchBody ) ; compiler
Distance : 8

127
Tree	Node catchBody = block ( catchBody ) ; data
Code	Node catchBody = block ( catchBody ) ; data
Distance : 8

128
Tree	Node catchBody = catchBody ( catchBody ) ; false
Code	Node catchBody = catchBody ( catchBody ) ; false
Distance : 8

129
Tree	Node catchBody = catchBody ( catchBody ) ; equals
Code	Node catchBody = catchBody ( catchBody ) ; equals
Distance : 8

130
Tree	Node catchBody = catchBody ( catchBody ) ; Object
Code	Node catchBody = catchBody ( catchBody ) ; Object
Distance : 8

131
Tree	Node catchBody = block ( catchBody ) ; array
Code	Node catchBody = block ( catchBody ) ; array
Distance : 8

132
Tree	Node catchBody = block ( catchBody ) ; checkArgument
Code	Node catchBody = block ( catchBody ) ; checkArgument
Distance : 8

133
Tree	Node catchBody = block ( catchBody ) ; NodeTraversal
Code	Node catchBody = block ( catchBody ) ; NodeTraversal
Distance : 8

134
Tree	Node catchBody = block ( catchBody ) ; ex
Code	Node catchBody = block ( catchBody ) ; ex
Distance : 8

135
Tree	Node catchBody = block ( catchBody ) ; mode
Code	Node catchBody = block ( catchBody ) ; mode
Distance : 8

136
Tree	Node catchBody = block ( catchBody ) ; true
Code	Node catchBody = block ( catchBody ) ; true
Distance : 8

137
Tree	Node catchBody = block ( catchBody ) ; {}
Code	Node catchBody = block ( catchBody ) ; {}
Distance : 8

138
Tree	Node catchBody = catchBody ( catchBody ) ; Assert
Code	Node catchBody = catchBody ( catchBody ) ; Assert
Distance : 8

139
Tree	Node catchBody = block ( catchBody ) ; MathRuntimeException
Code	Node catchBody = block ( catchBody ) ; MathRuntimeException
Distance : 8

140
Tree	Node catchBody = block ( catchBody ) ; ParamChecks
Code	Node catchBody = block ( catchBody ) ; ParamChecks
Distance : 8

141
Tree	Node catchBody = catchBody ( catchBody ) ; for
Code	Node catchBody = catchBody ( catchBody ) ; for
Distance : 8

142
Tree	Node catchBody = block ( catchBody ) ; f
Code	Node catchBody = block ( catchBody ) ; f
Distance : 8

143
Tree	Node catchBody = block ( catchBody ) ; List
Code	Node catchBody = block ( catchBody ) ; List
Distance : 8

144
Tree	Node catchBody = block ( catchBody ) ; Args
Code	Node catchBody = block ( catchBody ) ; Args
Distance : 8

145
Tree	Node catchBody = block ( catchBody ) ; fail
Code	Node catchBody = block ( catchBody ) ; fail
Distance : 8

146
Tree	Node catchBody = block ( catchBody ) ; try
Code	Node catchBody = block ( catchBody ) ; try
Distance : 8

147
Tree	Node catchBody = block ( catchBody ) ; verify
Code	Node catchBody = block ( catchBody ) ; verify
Distance : 8

148
Tree	Node catchBody = block ( catchBody ) ; lines
Code	Node catchBody = block ( catchBody ) ; lines
Distance : 8

149
Tree	Node catchBody = block ( catchBody ) ; Exception
Code	Node catchBody = block ( catchBody ) ; Exception
Distance : 8

150
Tree	Node catchBody = block ( catchBody ) ; <>
Code	Node catchBody = block ( catchBody ) ; <>
Distance : 8

151
Tree	Node catchBody = catchBody ( catchBody ) ; invocations
Code	Node catchBody = catchBody ( catchBody ) ; invocations
Distance : 8

152
Tree	Node catchBody = catchBody ( catchBody ) ; index
Code	Node catchBody = catchBody ( catchBody ) ; index
Distance : 8

153
Tree	Node catchBody = catchBody ( catchBody ) ; getParent
Code	Node catchBody = catchBody ( catchBody ) ; getParent
Distance : 8

154
Tree	Node catchBody = catchBody ( catchBody ) ; getInstance
Code	Node catchBody = catchBody ( catchBody ) ; getInstance
Distance : 8

155
Tree	Node catchBody = catchBody ( catchBody ) ; fireChangeEvent
Code	Node catchBody = catchBody ( catchBody ) ; fireChangeEvent
Distance : 8

156
Tree	Node catchBody = catchBody ( catchBody ) ; ArrayList
Code	Node catchBody = catchBody ( catchBody ) ; ArrayList
Distance : 8

157
Tree	Node catchBody = catchBody ( catchBody ) ; <>
Code	Node catchBody = catchBody ( catchBody ) ; <>
Distance : 8

158
Tree	Node catchBody = catchBody ( catchBody ) ; array
Code	Node catchBody = catchBody ( catchBody ) ; array
Distance : 8

159
Tree	Node catchBody = catchBody ( catchBody ) ; ParamChecks
Code	Node catchBody = catchBody ( catchBody ) ; ParamChecks
Distance : 8

160
Tree	Node catchBody = catchBody ( catchBody ) ; f
Code	Node catchBody = catchBody ( catchBody ) ; f
Distance : 8

161
Tree	Node catchBody = catchBody ( catchBody ) ; notifyListeners
Code	Node catchBody = catchBody ( catchBody ) ; notifyListeners
Distance : 8

162
Tree	Node catchBody = catchBody ( catchBody ) ; c
Code	Node catchBody = catchBody ( catchBody ) ; c
Distance : 8

163
Tree	Node catchBody = catchBody ( catchBody ) ; x
Code	Node catchBody = catchBody ( catchBody ) ; x
Distance : 8

164
Tree	Node catchBody = catchBody ( catchBody ) ; serialised
Code	Node catchBody = catchBody ( catchBody ) ; serialised
Distance : 8

165
Tree	Node catchBody = catchBody ( catchBody ) ; testSame
Code	Node catchBody = catchBody ( catchBody ) ; testSame
Distance : 8

166
Tree	Node catchBody = catchBody ( catchBody ) ; mockingProgress
Code	Node catchBody = catchBody ( catchBody ) ; mockingProgress
Distance : 8

167
Tree	Node catchBody = catchBody ( catchBody ) ; StringBuilder
Code	Node catchBody = catchBody ( catchBody ) ; StringBuilder
Distance : 8

168
Tree	Node catchBody = catchBody ( catchBody ) ; sqrt
Code	Node catchBody = catchBody ( catchBody ) ; sqrt
Distance : 8

169
Tree	Node catchBody = catchBody ( catchBody ) ; clone
Code	Node catchBody = catchBody ( catchBody ) ; clone
Distance : 8

170
Tree	Node catchBody = catchBody ( catchBody ) ; <=
Code	Node catchBody = catchBody ( catchBody ) ; <=
Distance : 8

171
Tree	Node catchBody = catchBody ( catchBody ) ; Double
Code	Node catchBody = catchBody ( catchBody ) ; Double
Distance : 8

172
Tree	Node catchBody = catchBody ( catchBody ) ; isNormalBlock
Code	Node catchBody = catchBody ( catchBody ) ; isNormalBlock
Distance : 8

173
Tree	Node catchBody = catchBody ( catchBody ) ; contains
Code	Node catchBody = catchBody ( catchBody ) ; contains
Distance : 8

174
Tree	Node catchBody = catchBody ( catchBody ) ; b
Code	Node catchBody = catchBody ( catchBody ) ; b
Distance : 8

175
Tree	Node catchBody = catchBody ( catchBody ) ; PeriodType
Code	Node catchBody = catchBody ( catchBody ) ; PeriodType
Distance : 8

176
Tree	Node catchBody = catchBody ( catchBody ) ; return;
Code	Node catchBody = catchBody ( catchBody ) ; return;
Distance : 8

177
Tree	Node catchBody = catchBody . block ( catchBody ) ; double
Code	Node catchBody = catchBody . block ( catchBody ) ; double
Distance : 7

178
Tree	Node catchBody = catchBody ( catchBody ) ; chrono
Code	Node catchBody = catchBody ( catchBody ) ; chrono
Distance : 8

179
Tree	Node catchBody = catchBody ( catchBody ) ; *
Code	Node catchBody = catchBody ( catchBody ) ; *
Distance : 8

180
Tree	Node catchBody = catchBody ( catchBody ) ; node
Code	Node catchBody = catchBody ( catchBody ) ; node
Distance : 8

181
Tree	Node catchBody = catchBody ( catchBody ) ; values
Code	Node catchBody = catchBody ( catchBody ) ; values
Distance : 8

182
Tree	Node catchBody = catchBody ( catchBody ) ; protected
Code	Node catchBody = catchBody ( catchBody ) ; protected
Distance : 8

183
Tree	Node catchBody = catchBody ( catchBody ) ; out
Code	Node catchBody = catchBody ( catchBody ) ; out
Distance : 8

184
Tree	Node catchBody = catchBody ( catchBody ) ; a
Code	Node catchBody = catchBody ( catchBody ) ; a
Distance : 8

185
Tree	Node catchBody = catchBody ( catchBody ) ; JSType
Code	Node catchBody = catchBody ( catchBody ) ; JSType
Distance : 8

186
Tree	Node catchBody = catchBody ( catchBody ) ; s
Code	Node catchBody = catchBody ( catchBody ) ; s
Distance : 8

187
Tree	Node catchBody = catchBody ( catchBody ) ; traverseEs6
Code	Node catchBody = catchBody ( catchBody ) ; traverseEs6
Distance : 8

188
Tree	Node catchBody = catchBody ( catchBody ) ; obj
Code	Node catchBody = catchBody ( catchBody ) ; obj
Distance : 8

189
Tree	Node catchBody = catchBody ( catchBody ) ; size
Code	Node catchBody = catchBody ( catchBody ) ; size
Distance : 8

190
Tree	Node catchBody = catchBody ( catchBody ) ; join
Code	Node catchBody = catchBody ( catchBody ) ; join
Distance : 8

191
Tree	Node catchBody = catchBody ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Code	Node catchBody = catchBody ( catchBody ) ; LanguageMode.ECMASCRIPT_2015
Distance : 8

192
Tree	Node catchBody = catchBody ( catchBody ) ; stroke
Code	Node catchBody = catchBody ( catchBody ) ; stroke
Distance : 8

193
Tree	Node catchBody = catchBody ( catchBody ) ; isEmpty
Code	Node catchBody = catchBody ( catchBody ) ; isEmpty
Distance : 8

194
Tree	Node catchBody = catchBody ( catchBody ) ; Fraction
Code	Node catchBody = catchBody ( catchBody ) ; Fraction
Distance : 8

195
Tree	Node catchBody = catchBody ( catchBody ) ; TestUtils
Code	Node catchBody = catchBody ( catchBody ) ; TestUtils
Distance : 8

196
Tree	Node catchBody = catchBody ( catchBody ) ; checkNotNull
Code	Node catchBody = catchBody ( catchBody ) ; checkNotNull
Distance : 8

197
Tree	Node catchBody = catchBody ( catchBody ) ; p
Code	Node catchBody = catchBody ( catchBody ) ; p
Distance : 8

198
Tree	Node catchBody = catchBody ( catchBody ) ; options
Code	Node catchBody = catchBody ( catchBody ) ; options
Distance : 8

199
Tree	Node catchBody = catchBody ( catchBody ) ; source
Code	Node catchBody = catchBody ( catchBody ) ; source
Distance : 8

========================================================================


========================================================================
Example Number: 30
Parent Code is: 
{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.UNCOND , finallyNode ) ; } }
-------------------------------------------------------------------------------
Child code is: 
{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , Branch.ON_EX , finallyNode ) ; } }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=finallyNode})) (226{val=:}) (32 (40{val=cfa.finallyMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=cfa}) (235{val=.}) (802{val=createEdge}) (214{val=(}) (800{val=fromNode}) (234{val=,}) (40{val=Branch.UNCOND}) (234{val=,}) (800{val=finallyNode}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (70 (303{val=for}) (214{val=(}) (44 (43 (801{val=Node})) (800{val=finallyNode})) (226{val=:}) (32 (40{val=cfa.finallyMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=parent}) (215{val=)})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=cfa}) (235{val=.}) (802{val=createEdge}) (214{val=(}) (800{val=fromNode}) (234{val=,}) (40{val=Branch.ON_EX}) (234{val=,}) (800{val=finallyNode}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/14/parent/src_com_google_javascript_jscomp_ControlFlowAnalysis.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ for ( Node fromNode : cfa.finallyMap . get () ) { get ( parent , null ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get () ) { get ( parent , null ) ; } }
Distance : 11

1
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( Branch.UNCOND , STRING_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( Branch.UNCOND , STRING_CONSTANT ) ; } }
Distance : 4

2
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { parent . get ( true ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { parent . get ( true ) ; } }
Distance : 9

3
Tree	{ for ( Node fromNode : fromNode . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : fromNode . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 10

4
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Distance : 4

5
Tree	{ for ( Node parent : fromNode . get ( parent ) ) { cfa . get ( false ) ; } }
Code	{ for ( Node parent : fromNode . get ( parent ) ) { cfa . get ( false ) ; } }
Distance : 8

6
Tree	{ for ( Node parent : parent . get ( parent ) ) { get ( fromNode , null ) ; } }
Code	{ for ( Node parent : parent . get ( parent ) ) { get ( fromNode , null ) ; } }
Distance : 8

7
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { get ( fromNode , null ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { get ( fromNode , null ) ; } }
Distance : 7

8
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , super(); ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , super(); ) ; } }
Distance : 6

9
Tree	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , super(); ) ; } }
Code	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , super(); ) ; } }
Distance : 9

10
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Distance : 6

11
Tree	{ for ( Node finallyNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 8

12
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Distance : 5

13
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , return; ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , return; ) ; } }
Distance : 6

14
Tree	{ for ( Node finallyNode : parent . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : parent . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 9

15
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Distance : 5

16
Tree	{ for ( Node finallyNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 8

17
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { parent . get ( true ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { parent . get ( true ) ; } }
Distance : 8

18
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Distance : 6

19
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . get ( true ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { parent . get ( true ) ; } }
Distance : 7

20
Tree	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 9

21
Tree	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , return; ) ; } }
Code	{ for ( Node finallyNode : fromNode . get () ) { createEdge ( fromNode , return; ) ; } }
Distance : 9

22
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( Branch.UNCOND , STRING_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( Branch.UNCOND , STRING_CONSTANT ) ; } }
Distance : 5

23
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , STRING_CONSTANT ) ; } }
Distance : 5

24
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , break; ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , break; ) ; } }
Distance : 6

25
Tree	{ for ( Node parent : fromNode . get ( parent ) ) { get ( fromNode , null ) ; } }
Code	{ for ( Node parent : fromNode . get ( parent ) ) { get ( fromNode , null ) ; } }
Distance : 8

26
Tree	{ for ( Node parent : parent . get ( parent ) ) { fromNode . get ( false ) ; } }
Code	{ for ( Node parent : parent . get ( parent ) ) { fromNode . get ( false ) ; } }
Distance : 9

27
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . get ( false ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { fromNode . get ( false ) ; } }
Distance : 8

28
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , super(); ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , super(); ) ; } }
Distance : 7

29
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

30
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

31
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

32
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

33
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

34
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

35
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

36
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

37
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

38
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

39
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

40
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

41
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

42
Tree	{ for ( Node fromNode : fromNode . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node fromNode : fromNode . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

43
Tree	{ for ( Node parent : fromNode . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : fromNode . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

44
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

45
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

46
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

47
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

48
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

49
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

50
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

51
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

52
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

53
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

54
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

55
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

56
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 8

57
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

58
Tree	{ for ( Node finallyNode : parent . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : parent . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

59
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

60
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

61
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

62
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

63
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

64
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

65
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

66
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

67
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

68
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

69
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

70
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

71
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

72
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

73
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

74
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

75
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

76
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

77
Tree	{ for ( Node fromNode : cfa.finallyMap . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

78
Tree	{ for ( Node parent : parent . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : parent . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

79
Tree	{ for ( Node parent : cfa.finallyMap . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . createEdge ( parent ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

80
Tree	{ for ( Node fromNode : parent . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node fromNode : parent . createEdge ( parent ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

81
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

82
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

83
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

84
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

85
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

86
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

87
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

88
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

89
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

90
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

91
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

92
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

93
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

94
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

95
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

96
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

97
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

98
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

99
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

100
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

101
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

102
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

103
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

104
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

105
Tree	{ for ( Node parent : fromNode . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : fromNode . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 8

106
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

107
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

108
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

109
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

110
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

111
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

112
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

113
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

114
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

115
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

116
Tree	{ for ( Node finallyNode : fromNode . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : fromNode . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

117
Tree	{ for ( Node parent : fromNode . get ( fromNode ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : fromNode . get ( fromNode ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

118
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

119
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

120
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

121
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

122
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

123
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

124
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

125
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

126
Tree	{ for ( Node fromNode : fromNode . get () ) { createEdge ( fromNode , super(); ) ; } }
Code	{ for ( Node fromNode : fromNode . get () ) { createEdge ( fromNode , super(); ) ; } }
Distance : 10

127
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

128
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Distance : 6

129
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

130
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

131
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

132
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

133
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 14

134
Tree	{ for ( Node parent : fromNode . get () ) { get ( fromNode , null ) ; } }
Code	{ for ( Node parent : fromNode . get () ) { get ( fromNode , null ) ; } }
Distance : 11

135
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

136
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Distance : 7

137
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

138
Tree	{ for ( Node fromNode : fromNode . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node fromNode : fromNode . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

139
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

140
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

141
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

142
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

143
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , finallyNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , finallyNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

144
Tree	{ for ( Node parent : parent . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : parent . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 8

145
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { get () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 7

146
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , continue; ) ; } }
Distance : 6

147
Tree	{ for ( Node fromNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 9

148
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

149
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

150
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

151
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

152
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

153
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

154
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , return; ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , return; ) ; } }
Distance : 7

155
Tree	{ for ( Node fromNode : parent . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : parent . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 10

156
Tree	{ for ( Node fromNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get () ) { createEdge ( fromNode , continue; ) ; } }
Distance : 9

157
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { createEdge ( fromNode , parent , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 14

158
Tree	{ for ( Node parent : parent . get ( parent ) ) { cfa . get ( false ) ; } }
Code	{ for ( Node parent : parent . get ( parent ) ) { cfa . get ( false ) ; } }
Distance : 8

159
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

160
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

161
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { createEdge ( parent , finallyNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

162
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { parent . get ( true ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { parent . get ( true ) ; } }
Distance : 9

163
Tree	{ for ( Node parent : parent . get ( fromNode ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node parent : parent . get ( fromNode ) ) { get () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

164
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

165
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { parent . createEdge ( fromNode , fromNode , fromNode , fromNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { parent . createEdge ( fromNode , fromNode , fromNode , fromNode , fromNode ) ; } }
Distance : 8

166
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , fromNode , finallyNode ) ; } }
Distance : 6

167
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Distance : 6

168
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

169
Tree	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 8

170
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 8

171
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 7

172
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 7

173
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { get ( fromNode , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { get ( fromNode , fromNode , fromNode , fromNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 13

174
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , finallyNode , finallyNode , finallyNode , fromNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 11

175
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode ) ; } }
Distance : 6

176
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 7

177
Tree	{ for ( Node finallyNode : parent . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : parent . createEdge ( fromNode ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

178
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { createEdge ( parent , fromNode , fromNode , fromNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

179
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 6

180
Tree	{ for ( Node finallyNode : fromNode . createEdge ( fromNode ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node finallyNode : fromNode . createEdge ( fromNode ) ) { createEdge () . get ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 10

181
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . get ( true ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { parent . get ( true ) ; } }
Distance : 8

182
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , finallyNode , fromNode , finallyNode , fromNode ) ; } }
Distance : 5

183
Tree	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : parent . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 7

184
Tree	{ for ( Node finallyNode : cfa.finallyMap . get () ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get () ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 8

185
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 7

186
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { cfa . createEdge ( fromNode , fromNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 6

187
Tree	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get ( parent ) ) { createEdge ( fromNode , fromNode , finallyNode , finallyNode , finallyNode , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } }
Distance : 12

188
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 7

189
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 6

190
Tree	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . get ( false ) ; } }
Code	{ for ( Node parent : cfa.finallyMap . get ( parent ) ) { cfa . get ( false ) ; } }
Distance : 7

191
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , finallyNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 7

192
Tree	{ for ( Node fromNode : fromNode . createEdge ( parent ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Code	{ for ( Node fromNode : fromNode . createEdge ( parent ) ) { createEdge () . createEdge ( Branch.UNCOND , Branch.UNCOND ) ; } }
Distance : 9

193
Tree	{ for ( Node finallyNode : fromNode . get ( parent ) ) { parent . createEdge ( fromNode , fromNode , fromNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node finallyNode : fromNode . get ( parent ) ) { parent . createEdge ( fromNode , fromNode , fromNode , fromNode , finallyNode ) ; } }
Distance : 7

194
Tree	{ for ( Node finallyNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : parent . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 7

195
Tree	{ for ( Node finallyNode : cfa.finallyMap . get () ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get () ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Distance : 9

196
Tree	{ for ( Node fromNode : cfa.finallyMap . get () ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get () ) { fromNode . createEdge ( fromNode , finallyNode , fromNode , finallyNode , finallyNode ) ; } }
Distance : 10

197
Tree	{ for ( Node fromNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : fromNode . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Distance : 8

198
Tree	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Code	{ for ( Node finallyNode : cfa.finallyMap . get ( parent ) ) { fromNode . createEdge ( fromNode , fromNode , finallyNode , fromNode , fromNode ) ; } }
Distance : 6

199
Tree	{ for ( Node fromNode : cfa.finallyMap . get () ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Code	{ for ( Node fromNode : cfa.finallyMap . get () ) { cfa . createEdge ( fromNode , fromNode , finallyNode , fromNode , finallyNode ) ; } }
Distance : 9

========================================================================


========================================================================
Example Number: 31
Parent Code is: 
{ if ( recurse ) { return allResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
-------------------------------------------------------------------------------
Child code is: 
{ if ( recurse ) { return anyResultsMatch ( n , MAY_BE_STRING_PREDICATE ) ; } else { return mayBeStringHelper ( n ) ; } }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=recurse}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=allResultsMatch}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=MAY_BE_STRING_PREDICATE}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mayBeStringHelper}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (800{val=recurse}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyResultsMatch}) (214{val=(}) (800{val=n}) (234{val=,}) (800{val=MAY_BE_STRING_PREDICATE}) (215{val=)})) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=mayBeStringHelper}) (214{val=(}) (800{val=n}) (215{val=)})) (227{val=;})) (219{val=}}))) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/10/parent/src_com_google_javascript_jscomp_NodeUtil.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ==
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ==
Distance : 8

1
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getInstance
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getInstance
Distance : 8

2
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } serialised
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } serialised
Distance : 8

3
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } join
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } join
Distance : 8

4
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } paint
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } paint
Distance : 8

5
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } *
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } *
Distance : 8

6
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } type
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } type
Distance : 8

7
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } type
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } type
Distance : 6

8
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } paint
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } paint
Distance : 6

9
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } else
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } else
Distance : 6

10
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } !=
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } !=
Distance : 6

11
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } new
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } new
Distance : 6

12
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } STRING_CONSTANT
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } STRING_CONSTANT
Distance : 6

13
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } NUMBER_CONSTANT
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } NUMBER_CONSTANT
Distance : 6

14
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } return
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } return
Distance : 6

15
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } &&
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } &&
Distance : 6

16
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } T
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } T
Distance : 6

17
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } i
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } i
Distance : 6

18
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } value
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } value
Distance : 6

19
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } checkState
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } checkState
Distance : 6

20
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } double
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } double
Distance : 6

21
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } super
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } super
Distance : 6

22
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertEquals
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertEquals
Distance : 6

23
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ()
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ()
Distance : 6

24
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } !
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } !
Distance : 6

25
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } []
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } []
Distance : 6

26
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fireChangeEvent
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fireChangeEvent
Distance : 8

27
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } nullNotPermitted
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } nullNotPermitted
Distance : 6

28
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ArrayList
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ArrayList
Distance : 8

29
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertTrue
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertTrue
Distance : 6

30
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } t
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } t
Distance : 8

31
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } name
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } name
Distance : 8

32
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } add
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } add
Distance : 8

33
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } externs
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } externs
Distance : 8

34
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertTrue
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertTrue
Distance : 8

35
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ?
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ?
Distance : 8

36
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } /
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } /
Distance : 8

37
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } List
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } List
Distance : 8

38
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fail
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fail
Distance : 8

39
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Node
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Node
Distance : 6

40
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } checkNotNull
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } checkNotNull
Distance : 6

41
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } compiler
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } compiler
Distance : 6

42
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } String
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } String
Distance : 6

43
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } e
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } e
Distance : 6

44
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } n
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } n
Distance : 6

45
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } throw
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } throw
Distance : 6

46
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } catch
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } catch
Distance : 6

47
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } void
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } void
Distance : 6

48
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ==
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ==
Distance : 6

49
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Assert
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Assert
Distance : 6

50
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Fraction
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Fraction
Distance : 6

51
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } TestUtils
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } TestUtils
Distance : 6

52
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } /
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } /
Distance : 6

53
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } try
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } try
Distance : 8

54
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ?
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ?
Distance : 6

55
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } externs
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } externs
Distance : 6

56
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } field
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } field
Distance : 8

57
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } test
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } test
Distance : 6

58
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } int
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } int
Distance : 6

59
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } abs
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } abs
Distance : 6

60
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportMatcher
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportMatcher
Distance : 6

61
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Distance : 6

62
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } +
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } +
Distance : 6

63
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } return;
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } return;
Distance : 6

64
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } null
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } null
Distance : 6

65
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } >
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } >
Distance : 6

66
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } public
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } public
Distance : 6

67
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } final
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } final
Distance : 6

68
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } this
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } this
Distance : 6

69
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } <
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } <
Distance : 6

70
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } if
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } if
Distance : 6

71
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ArrayList
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ArrayList
Distance : 6

72
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fireChangeEvent
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fireChangeEvent
Distance : 6

73
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getInstance
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getInstance
Distance : 6

74
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } serialised
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } serialised
Distance : 6

75
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } chrono
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } chrono
Distance : 6

76
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mockingProgress
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mockingProgress
Distance : 6

77
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocations
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocations
Distance : 6

78
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } throws
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } throws
Distance : 6

79
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } try
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } try
Distance : 6

80
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fail
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } fail
Distance : 6

81
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Args
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Args
Distance : 6

82
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } List
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } List
Distance : 6

83
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } result
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } result
Distance : 6

84
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ;
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ;
Distance : 6

85
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } @
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } @
Distance : 6

86
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } )
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } )
Distance : 6

87
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ,
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ,
Distance : 6

88
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } false
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } false
Distance : 6

89
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } stream
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } stream
Distance : 6

90
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } out
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } out
Distance : 6

91
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } protected
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } protected
Distance : 6

92
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } values
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } values
Distance : 6

93
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } {
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } {
Distance : 6

94
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } }
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } }
Distance : 6

95
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getParent
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } getParent
Distance : 6

96
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Distance : 6

97
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } add
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } add
Distance : 6

98
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } name
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } name
Distance : 6

99
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } t
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } t
Distance : 6

100
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } field
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } field
Distance : 6

101
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } IllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } IllegalArgumentException
Distance : 6

102
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } FastMath
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } FastMath
Distance : 6

103
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } expected
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } expected
Distance : 6

104
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportCodeChange
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportCodeChange
Distance : 6

105
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } x
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } x
Distance : 6

106
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } testSame
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } testSame
Distance : 6

107
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } parent
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } parent
Distance : 6

108
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } str
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } str
Distance : 6

109
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } =
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } =
Distance : 6

110
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LINE_JOINER
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LINE_JOINER
Distance : 6

111
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertThat
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertThat
Distance : 6

112
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocation
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocation
Distance : 6

113
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } .
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } .
Distance : 6

114
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } IllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } IllegalArgumentException
Distance : 8

115
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } FastMath
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } FastMath
Distance : 8

116
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } expected
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } expected
Distance : 8

117
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } instant
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } instant
Distance : 8

118
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } matcher
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } matcher
Distance : 8

119
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } isEmpty
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } isEmpty
Distance : 8

120
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } get
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } get
Distance : 8

121
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } JSType
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } JSType
Distance : 8

122
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } char
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } char
Distance : 8

123
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } chrono
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } chrono
Distance : 8

124
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } return;
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } return;
Distance : 8

125
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } mockingProgress
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } mockingProgress
Distance : 8

126
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } StringBuilder
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } StringBuilder
Distance : 8

127
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } stroke
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } stroke
Distance : 8

128
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } setAcceptedLanguage
Distance : 6

129
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } else
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } else
Distance : 6

130
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } abs
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper ( n ) ; } } abs
Distance : 6

131
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } stroke
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } stroke
Distance : 6

132
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } f
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } f
Distance : 6

133
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ParamChecks
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ParamChecks
Distance : 6

134
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } array
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } array
Distance : 6

135
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } <>
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } <>
Distance : 6

136
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } a
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } a
Distance : 6

137
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } s
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } s
Distance : 6

138
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } traverseEs6
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } traverseEs6
Distance : 6

139
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } obj
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } obj
Distance : 6

140
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } size
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } size
Distance : 6

141
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LanguageMode.ECMASCRIPT_2015
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LanguageMode.ECMASCRIPT_2015
Distance : 6

142
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } getMessage
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } getMessage
Distance : 8

143
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } MutableTimePeriod
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } MutableTimePeriod
Distance : 6

144
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } else
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } else
Distance : 8

145
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } reportMatcher
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } reportMatcher
Distance : 8

146
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } if
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } if
Distance : 8

147
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } <
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } <
Distance : 8

148
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } index
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } index
Distance : 8

149
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } invocations
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } invocations
Distance : 8

150
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } d
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } d
Distance : 8

151
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } size
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } size
Distance : 8

152
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } traverseEs6
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } traverseEs6
Distance : 8

153
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } s
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } s
Distance : 8

154
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } a
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } a
Distance : 8

155
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Node
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Node
Distance : 8

156
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Exception
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Exception
Distance : 8

157
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } lines
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } lines
Distance : 8

158
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } verify
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } verify
Distance : 8

159
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Integer
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Integer
Distance : 8

160
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } v
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } v
Distance : 8

161
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } length
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } length
Distance : 8

162
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } long
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } long
Distance : 8

163
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Math
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } Math
Distance : 8

164
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } wanted
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } wanted
Distance : 8

165
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } root
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } root
Distance : 8

166
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } TestUtilities
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } TestUtilities
Distance : 8

167
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } StrBuilder
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } StrBuilder
Distance : 8

168
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } setUp
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } setUp
Distance : 8

169
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } static
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } static
Distance : 8

170
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } setAcceptedLanguage
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } setAcceptedLanguage
Distance : 8

171
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } abs
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n , n ) ; } } abs
Distance : 8

172
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } PeriodType
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } PeriodType
Distance : 6

173
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mock
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mock
Distance : 6

174
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } b
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } b
Distance : 6

175
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } MathRuntimeException
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } MathRuntimeException
Distance : 6

176
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } {}
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } {}
Distance : 6

177
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } true
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } true
Distance : 6

178
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mode
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } mode
Distance : 6

179
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } -
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } -
Distance : 6

180
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Preconditions
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Preconditions
Distance : 6

181
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } [
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } [
Distance : 6

182
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ]
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } ]
Distance : 6

183
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } verify
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } verify
Distance : 6

184
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Exception
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Exception
Distance : 6

185
Tree	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } *
Code	{ if ( recurse ) { return allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } *
Distance : 6

186
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } x
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } x
Distance : 8

187
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } result
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } result
Distance : 8

188
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } :
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } :
Distance : 8

189
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } boolean
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } boolean
Distance : 8

190
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } m
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } m
Distance : 8

191
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocation
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } invocation
Distance : 8

192
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertThat
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } assertThat
Distance : 8

193
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LINE_JOINER
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } LINE_JOINER
Distance : 8

194
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } str
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } str
Distance : 8

195
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } createIllegalArgumentException
Distance : 8

196
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } parent
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } parent
Distance : 8

197
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } testSame
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } testSame
Distance : 8

198
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportCodeChange
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } reportCodeChange
Distance : 8

199
Tree	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Args
Code	{ if ( recurse ) { return allResultsMatch . allResultsMatch ( n ) ; } else { return mayBeStringHelper . mayBeStringHelper ( n ) ; } } Args
Distance : 8

========================================================================


========================================================================
Example Number: 32
Parent Code is: 
String moduleName = guessCJSModuleName ( normalizeSourceName ( script . getSourceFileName () ) ) ;
-------------------------------------------------------------------------------
Child code is: 
String moduleName = guessCJSModuleName ( script . getSourceFileName () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (802{val=guessCJSModuleName}) (214{val=(}) (32 (802{val=normalizeSourceName}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=String})) (59 (800{val=moduleName}) (204{val==}) (32 (802{val=guessCJSModuleName}) (214{val=(}) (32 (800{val=script}) (235{val=.}) (802{val=getSourceFileName}) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/9/parent/src_com_google_javascript_jscomp_ProcessCommonJSModules.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; values
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; values
Distance : 5

1
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; (
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; (
Distance : 5

2
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <s>
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <s>
Distance : 5

3
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ;
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ;
Distance : 5

4
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; name
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; name
Distance : 5

5
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; testSame
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; testSame
Distance : 5

6
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; x
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; x
Distance : 5

7
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; reportCodeChange
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; reportCodeChange
Distance : 5

8
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; expected
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; expected
Distance : 5

9
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; FastMath
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; FastMath
Distance : 5

10
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; IllegalArgumentException
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; IllegalArgumentException
Distance : 5

11
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; field
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; field
Distance : 5

12
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; t
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; t
Distance : 5

13
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; add
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; add
Distance : 5

14
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; createIllegalArgumentException
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; createIllegalArgumentException
Distance : 5

15
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; externs
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; externs
Distance : 5

16
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; assertTrue
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; assertTrue
Distance : 5

17
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ?
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ?
Distance : 5

18
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NodeTraversal
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NodeTraversal
Distance : 5

19
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; /
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; /
Distance : 5

20
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; checkArgument
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; checkArgument
Distance : 5

21
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NodeUtil
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NodeUtil
Distance : 5

22
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; =
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; =
Distance : 5

23
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; obj
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; obj
Distance : 5

24
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; v
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; v
Distance : 5

25
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; traverseEs6
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; traverseEs6
Distance : 5

26
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; s
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; s
Distance : 5

27
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; a
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; a
Distance : 5

28
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Node
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Node
Distance : 5

29
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Exception
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Exception
Distance : 5

30
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; lines
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; lines
Distance : 5

31
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; verify
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; verify
Distance : 5

32
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Integer
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Integer
Distance : 5

33
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; length
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; length
Distance : 5

34
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ex
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ex
Distance : 5

35
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; long
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; long
Distance : 5

36
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Math
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Math
Distance : 5

37
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; wanted
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; wanted
Distance : 5

38
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; root
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; root
Distance : 5

39
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; data
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; data
Distance : 5

40
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; checkNotNull
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; checkNotNull
Distance : 5

41
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; TestUtils
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; TestUtils
Distance : 5

42
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Fraction
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Fraction
Distance : 5

43
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; assertThat
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; assertThat
Distance : 5

44
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ]
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ]
Distance : 5

45
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Preconditions
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Preconditions
Distance : 5

46
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <blank>
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <blank>
Distance : 5

47
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; this
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; this
Distance : 5

48
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; catch
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; catch
Distance : 5

49
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; throw
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; throw
Distance : 5

50
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; n
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; n
Distance : 5

51
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; e
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; e
Distance : 5

52
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; String
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; String
Distance : 5

53
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; compiler
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; compiler
Distance : 5

54
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; if
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; if
Distance : 5

55
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; <
Distance : 5

56
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; final
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; final
Distance : 5

57
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ==
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ==
Distance : 5

58
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; public
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; public
Distance : 5

59
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; >
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; >
Distance : 5

60
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; invocation
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; invocation
Distance : 5

61
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; m
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; m
Distance : 5

62
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; boolean
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; boolean
Distance : 5

63
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; :
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; :
Distance : 5

64
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Assert
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Assert
Distance : 5

65
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; parent
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; parent
Distance : 5

66
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; str
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; str
Distance : 5

67
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; [
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; [
Distance : 5

68
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; try
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; try
Distance : 5

69
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ArrayList
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ArrayList
Distance : 5

70
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; fireChangeEvent
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; fireChangeEvent
Distance : 5

71
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; getInstance
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; getInstance
Distance : 5

72
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ()
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; ()
Distance : 5

73
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; serialised
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; serialised
Distance : 5

74
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; paint
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; paint
Distance : 5

75
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; *
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; *
Distance : 5

76
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; type
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; type
Distance : 5

77
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; fail
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; fail
Distance : 5

78
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; LINE_JOINER
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; LINE_JOINER
Distance : 5

79
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Args
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Args
Distance : 5

80
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; List
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; List
Distance : 5

81
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; result
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; result
Distance : 5

82
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; join
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; join
Distance : 5

83
Tree	String moduleName = getSourceFileName ( script , script ) ; IllegalArgumentException
Code	String moduleName = getSourceFileName ( script , script ) ; IllegalArgumentException
Distance : 5

84
Tree	String moduleName = getSourceFileName ( script , script ) ; field
Code	String moduleName = getSourceFileName ( script , script ) ; field
Distance : 5

85
Tree	String moduleName = getSourceFileName ( script , script ) ; t
Code	String moduleName = getSourceFileName ( script , script ) ; t
Distance : 5

86
Tree	String moduleName = getSourceFileName ( script ) ; public
Code	String moduleName = getSourceFileName ( script ) ; public
Distance : 5

87
Tree	String moduleName = getSourceFileName ( script ) ; final
Code	String moduleName = getSourceFileName ( script ) ; final
Distance : 5

88
Tree	String moduleName = getSourceFileName ( script ) ; this
Code	String moduleName = getSourceFileName ( script ) ; this
Distance : 5

89
Tree	String moduleName = getSourceFileName ( script ) ; <
Code	String moduleName = getSourceFileName ( script ) ; <
Distance : 5

90
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; super
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; super
Distance : 11

91
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; double
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; double
Distance : 11

92
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; checkState
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; checkState
Distance : 11

93
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; value
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; value
Distance : 11

94
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; i
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; i
Distance : 11

95
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; &&
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; &&
Distance : 11

96
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Object
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Object
Distance : 11

97
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; return
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; return
Distance : 11

98
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; NUMBER_CONSTANT
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; NUMBER_CONSTANT
Distance : 11

99
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; STRING_CONSTANT
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; STRING_CONSTANT
Distance : 11

100
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; new
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; new
Distance : 11

101
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; {
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; {
Distance : 11

102
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ()
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ()
Distance : 11

103
Tree	String moduleName = getSourceFileName ( script ) ; >
Code	String moduleName = getSourceFileName ( script ) ; >
Distance : 5

104
Tree	String moduleName = getSourceFileName ( script ) ; null
Code	String moduleName = getSourceFileName ( script ) ; null
Distance : 5

105
Tree	String moduleName = getSourceFileName ( script ) ; +
Code	String moduleName = getSourceFileName ( script ) ; +
Distance : 5

106
Tree	String moduleName = getSourceFileName ( script ) ; !=
Code	String moduleName = getSourceFileName ( script ) ; !=
Distance : 5

107
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; fail
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; fail
Distance : 11

108
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; :
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; :
Distance : 11

109
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; result
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; result
Distance : 11

110
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; List
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; List
Distance : 11

111
Tree	String moduleName = getSourceFileName ( script , script ) ; externs
Code	String moduleName = getSourceFileName ( script , script ) ; externs
Distance : 5

112
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Args
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Args
Distance : 11

113
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; m
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; m
Distance : 11

114
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; try
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; try
Distance : 11

115
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; }
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; }
Distance : 11

116
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ]
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ]
Distance : 11

117
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Preconditions
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; Preconditions
Distance : 11

118
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; -
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; -
Distance : 11

119
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; mode
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; mode
Distance : 11

120
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; boolean
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; boolean
Distance : 11

121
Tree	String moduleName = getSourceFileName ( script ) ; getMessage
Code	String moduleName = getSourceFileName ( script ) ; getMessage
Distance : 5

122
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; class
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; class
Distance : 11

123
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; T
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; T
Distance : 11

124
Tree	String moduleName = getSourceFileName ( script ) ; super
Code	String moduleName = getSourceFileName ( script ) ; super
Distance : 5

125
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; [
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; [
Distance : 11

126
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; null
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; null
Distance : 5

127
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; =
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; =
Distance : 11

128
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; <s>
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; <s>
Distance : 11

129
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; size
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; size
Distance : 5

130
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; p
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; p
Distance : 5

131
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; {
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; {
Distance : 5

132
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; new
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; new
Distance : 5

133
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; STRING_CONSTANT
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; STRING_CONSTANT
Distance : 5

134
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NUMBER_CONSTANT
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; NUMBER_CONSTANT
Distance : 5

135
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; return
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; return
Distance : 5

136
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; toString
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; toString
Distance : 5

137
Tree	String moduleName = getSourceFileName ( script ) ; /
Code	String moduleName = getSourceFileName ( script ) ; /
Distance : 5

138
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; options
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; options
Distance : 5

139
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Test
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Test
Distance : 5

140
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; }
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; }
Distance : 5

141
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Class
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; Class
Distance : 5

142
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; notifyListeners
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; notifyListeners
Distance : 5

143
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; c
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; c
Distance : 5

144
Tree	String moduleName = getSourceFileName ( script , script ) ; add
Code	String moduleName = getSourceFileName ( script , script ) ; add
Distance : 5

145
Tree	String moduleName = getSourceFileName ( script , script ) ; name
Code	String moduleName = getSourceFileName ( script , script ) ; name
Distance : 5

146
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; LanguageMode.ECMASCRIPT_2015
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; LanguageMode.ECMASCRIPT_2015
Distance : 5

147
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; MutableTimePeriod
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; MutableTimePeriod
Distance : 5

148
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; equals
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; equals
Distance : 5

149
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; d
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; d
Distance : 5

150
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ;
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ;
Distance : 11

151
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; <blank>
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; <blank>
Distance : 11

152
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ;
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; ;
Distance : 11

153
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; )
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; )
Distance : 11

154
Tree	String moduleName = getSourceFileName ( script ) ; double
Code	String moduleName = getSourceFileName ( script ) ; double
Distance : 5

155
Tree	String moduleName = getSourceFileName ( script ) ; value
Code	String moduleName = getSourceFileName ( script ) ; value
Distance : 5

156
Tree	String moduleName = getSourceFileName ( script ) ; i
Code	String moduleName = getSourceFileName ( script ) ; i
Distance : 5

157
Tree	String moduleName = getSourceFileName ( script ) ; T
Code	String moduleName = getSourceFileName ( script ) ; T
Distance : 5

158
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; (
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) , STRING_CONSTANT , script , moduleName ) ; (
Distance : 11

159
Tree	String moduleName = getSourceFileName ( script ) ; matcher
Code	String moduleName = getSourceFileName ( script ) ; matcher
Distance : 5

160
Tree	String moduleName = getSourceFileName ( script ) ; optimizer
Code	String moduleName = getSourceFileName ( script ) ; optimizer
Distance : 5

161
Tree	String moduleName = getSourceFileName ( script ) ; getArgumentMatcherStorage
Code	String moduleName = getSourceFileName ( script ) ; getArgumentMatcherStorage
Distance : 5

162
Tree	String moduleName = getSourceFileName ( script ) ; simpleMethod
Code	String moduleName = getSourceFileName ( script ) ; simpleMethod
Distance : 5

163
Tree	String moduleName = guessCJSModuleName ( script , script ) ;
Code	String moduleName = guessCJSModuleName ( script , script ) ;
Distance : 3

164
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; node
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; node
Distance : 5

165
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; getParent
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; getParent
Distance : 5

166
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; index
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; index
Distance : 5

167
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; invocations
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; invocations
Distance : 5

168
Tree	String moduleName = getSourceFileName ( script ) ; alpha
Code	String moduleName = getSourceFileName ( script ) ; alpha
Distance : 5

169
Tree	String script = guessCJSModuleName ( normalizeSourceName ( moduleName . getSourceFileName ( moduleName . getSourceFileName () ) ) ) ;
Code	String script = guessCJSModuleName ( normalizeSourceName ( moduleName . getSourceFileName ( moduleName . getSourceFileName () ) ) ) ;
Distance : 10

170
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; +
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; +
Distance : 5

171
Tree	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; .
Code	String moduleName = getSourceFileName ( getSourceFileName ( script . getSourceFileName () ) ) ; .
Distance : 5

172
Tree	String moduleName = getSourceFileName ( script , script ) ; parent
Code	String moduleName = getSourceFileName ( script , script ) ; parent
Distance : 5

173
Tree	String moduleName = getSourceFileName ( script , script ) ; createIllegalArgumentException
Code	String moduleName = getSourceFileName ( script , script ) ; createIllegalArgumentException
Distance : 5

174
Tree	String moduleName = getSourceFileName ( script , script ) ; str
Code	String moduleName = getSourceFileName ( script , script ) ; str
Distance : 5

175
Tree	String moduleName = getSourceFileName ( script , script ) ; LINE_JOINER
Code	String moduleName = getSourceFileName ( script , script ) ; LINE_JOINER
Distance : 5

176
Tree	String moduleName = getSourceFileName ( script , script ) ; assertThat
Code	String moduleName = getSourceFileName ( script , script ) ; assertThat
Distance : 5

177
Tree	String moduleName = getSourceFileName ( script , script ) ; invocation
Code	String moduleName = getSourceFileName ( script , script ) ; invocation
Distance : 5

178
Tree	String moduleName = getSourceFileName ( script , script ) ; ,
Code	String moduleName = getSourceFileName ( script , script ) ; ,
Distance : 5

179
Tree	String moduleName = getSourceFileName ( script , script ) ; )
Code	String moduleName = getSourceFileName ( script , script ) ; )
Distance : 5

180
Tree	String moduleName = getSourceFileName ( script , script ) ; {
Code	String moduleName = getSourceFileName ( script , script ) ; {
Distance : 5

181
Tree	String moduleName = getSourceFileName ( script , script ) ; ;
Code	String moduleName = getSourceFileName ( script , script ) ; ;
Distance : 5

182
Tree	String moduleName = getSourceFileName ( script , script ) ; <blank>
Code	String moduleName = getSourceFileName ( script , script ) ; <blank>
Distance : 5

183
Tree	String moduleName = getSourceFileName ( script , script ) ; ;
Code	String moduleName = getSourceFileName ( script , script ) ; ;
Distance : 5

184
Tree	String moduleName = getSourceFileName ( script , script ) ; <s>
Code	String moduleName = getSourceFileName ( script , script ) ; <s>
Distance : 5

185
Tree	String moduleName = getSourceFileName ( script , script ) ; (
Code	String moduleName = getSourceFileName ( script , script ) ; (
Distance : 5

186
Tree	String moduleName = getSourceFileName ( script , script ) ; =
Code	String moduleName = getSourceFileName ( script , script ) ; =
Distance : 5

187
Tree	String moduleName = getSourceFileName ( script , script ) ; }
Code	String moduleName = getSourceFileName ( script , script ) ; }
Distance : 5

188
Tree	String moduleName = getSourceFileName ( script , script ) ; ()
Code	String moduleName = getSourceFileName ( script , script ) ; ()
Distance : 5

189
Tree	String moduleName = getSourceFileName ( script , script ) ; testSame
Code	String moduleName = getSourceFileName ( script , script ) ; testSame
Distance : 5

190
Tree	String moduleName = getSourceFileName ( script , script ) ; out
Code	String moduleName = getSourceFileName ( script , script ) ; out
Distance : 5

191
Tree	String moduleName = getSourceFileName ( script , script ) ; .
Code	String moduleName = getSourceFileName ( script , script ) ; .
Distance : 5

192
Tree	String moduleName = getSourceFileName ( script , script ) ; new
Code	String moduleName = getSourceFileName ( script , script ) ; new
Distance : 5

193
Tree	String moduleName = getSourceFileName ( script , script ) ; T
Code	String moduleName = getSourceFileName ( script , script ) ; T
Distance : 5

194
Tree	String moduleName = getSourceFileName ( script , script ) ; i
Code	String moduleName = getSourceFileName ( script , script ) ; i
Distance : 5

195
Tree	String moduleName = getSourceFileName ( script , script ) ; value
Code	String moduleName = getSourceFileName ( script , script ) ; value
Distance : 5

196
Tree	String moduleName = getSourceFileName ( script , script ) ; checkState
Code	String moduleName = getSourceFileName ( script , script ) ; checkState
Distance : 5

197
Tree	String moduleName = getSourceFileName ( script , script ) ; double
Code	String moduleName = getSourceFileName ( script , script ) ; double
Distance : 5

198
Tree	String moduleName = getSourceFileName ( script , script ) ; super
Code	String moduleName = getSourceFileName ( script , script ) ; super
Distance : 5

199
Tree	String moduleName = getSourceFileName ( script , script ) ; assertEquals
Code	String moduleName = getSourceFileName ( script , script ) ; assertEquals
Distance : 5

========================================================================


========================================================================
Example Number: 33
Parent Code is: 
c . canInline ()
-------------------------------------------------------------------------------
Child code is: 
c . canInline ( t . getScope () )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=canInline}) (216{val=()})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (32 (800{val=c}) (235{val=.}) (802{val=canInline}) (214{val=(}) (32 (800{val=t}) (235{val=.}) (802{val=getScope}) (216{val=()})) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Closure/3/parent/src_com_google_javascript_jscomp_FlowSensitiveInlineVariables.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	canInline () ,
Code	canInline () ,
Distance : 7

1
Tree	c . canInline () )
Code	c . canInline () )
Distance : 4

2
Tree	c . canInline () IllegalArgumentException
Code	c . canInline () IllegalArgumentException
Distance : 5

3
Tree	c . canInline () FastMath
Code	c . canInline () FastMath
Distance : 5

4
Tree	c . canInline () expected
Code	c . canInline () expected
Distance : 5

5
Tree	c . canInline () reportCodeChange
Code	c . canInline () reportCodeChange
Distance : 5

6
Tree	c . canInline () return
Code	c . canInline () return
Distance : 5

7
Tree	c . canInline () NUMBER_CONSTANT
Code	c . canInline () NUMBER_CONSTANT
Distance : 5

8
Tree	c . canInline () STRING_CONSTANT
Code	c . canInline () STRING_CONSTANT
Distance : 5

9
Tree	c . canInline () new
Code	c . canInline () new
Distance : 5

10
Tree	c . canInline () public
Code	c . canInline () public
Distance : 5

11
Tree	c . canInline () >
Code	c . canInline () >
Distance : 5

12
Tree	c . canInline () null
Code	c . canInline () null
Distance : 5

13
Tree	c . canInline () +
Code	c . canInline () +
Distance : 5

14
Tree	c . canInline () ,
Code	c . canInline () ,
Distance : 5

15
Tree	c . canInline () .
Code	c . canInline () .
Distance : 5

16
Tree	c . canInline () ;
Code	c . canInline () ;
Distance : 5

17
Tree	c . canInline () {}
Code	c . canInline () {}
Distance : 5

18
Tree	c . canInline () (
Code	c . canInline () (
Distance : 5

19
Tree	c . canInline () <s>
Code	c . canInline () <s>
Distance : 5

20
Tree	c . canInline () c
Code	c . canInline () c
Distance : 5

21
Tree	c . canInline () <blank>
Code	c . canInline () <blank>
Distance : 5

22
Tree	c . canInline () {
Code	c . canInline () {
Distance : 5

23
Tree	c . canInline () ()
Code	c . canInline () ()
Distance : 5

24
Tree	this . c . canInline () =
Code	this . c . canInline () =
Distance : 6

25
Tree	c . canInline () true
Code	c . canInline () true
Distance : 5

26
Tree	c . canInline () test
Code	c . canInline () test
Distance : 5

27
Tree	canInline () checkArgument
Code	canInline () checkArgument
Distance : 7

28
Tree	canInline () isBlock
Code	canInline () isBlock
Distance : 7

29
Tree	canInline () returnZero
Code	canInline () returnZero
Distance : 7

30
Tree	canInline () getArgumentMatcherStorage
Code	canInline () getArgumentMatcherStorage
Distance : 7

31
Tree	canInline () simpleMethod
Code	canInline () simpleMethod
Distance : 7

32
Tree	canInline () throws
Code	canInline () throws
Distance : 7

33
Tree	canInline () getFirstChild
Code	canInline () getFirstChild
Distance : 7

34
Tree	canInline () clone
Code	canInline () clone
Distance : 7

35
Tree	this . c . canInline () {
Code	this . c . canInline () {
Distance : 6

36
Tree	this . c . canInline () this
Code	this . c . canInline () this
Distance : 6

37
Tree	this . c . canInline () }
Code	this . c . canInline () }
Distance : 6

38
Tree	c . canInline () class
Code	c . canInline () class
Distance : 5

39
Tree	c . canInline () }
Code	c . canInline () }
Distance : 5

40
Tree	c . canInline () @
Code	c . canInline () @
Distance : 5

41
Tree	c . canInline () false
Code	c . canInline () false
Distance : 5

42
Tree	c . canInline () ==
Code	c . canInline () ==
Distance : 5

43
Tree	c . canInline () void
Code	c . canInline () void
Distance : 5

44
Tree	c . canInline () catch
Code	c . canInline () catch
Distance : 5

45
Tree	c . canInline () throw
Code	c . canInline () throw
Distance : 5

46
Tree	c . canInline () nullNotPermitted
Code	c . canInline () nullNotPermitted
Distance : 5

47
Tree	canInline () Math
Code	canInline () Math
Distance : 7

48
Tree	canInline () wanted
Code	canInline () wanted
Distance : 7

49
Tree	canInline () options
Code	canInline () options
Distance : 7

50
Tree	canInline () p
Code	canInline () p
Distance : 7

51
Tree	canInline () data
Code	canInline () data
Distance : 7

52
Tree	c . canInline () int
Code	c . canInline () int
Distance : 5

53
Tree	canInline () alpha
Code	canInline () alpha
Distance : 7

54
Tree	c . canInline () =
Code	c . canInline () =
Distance : 5

55
Tree	c . canInline () final
Code	c . canInline () final
Distance : 5

56
Tree	this . c . canInline () int
Code	this . c . canInline () int
Distance : 6

57
Tree	this . c . canInline () @
Code	this . c . canInline () @
Distance : 6

58
Tree	this . c . canInline () test
Code	this . c . canInline () test
Distance : 6

59
Tree	this . c . canInline () mode
Code	this . c . canInline () mode
Distance : 6

60
Tree	this . c . canInline () true
Code	this . c . canInline () true
Distance : 6

61
Tree	this . c . canInline () {}
Code	this . c . canInline () {}
Distance : 6

62
Tree	this . c . canInline () MathRuntimeException
Code	this . c . canInline () MathRuntimeException
Distance : 6

63
Tree	this . c . canInline () if
Code	this . c . canInline () if
Distance : 6

64
Tree	this . c . canInline () <
Code	this . c . canInline () <
Distance : 6

65
Tree	this . c . canInline () final
Code	this . c . canInline () final
Distance : 6

66
Tree	this . c . canInline () i
Code	this . c . canInline () i
Distance : 6

67
Tree	this . c . canInline () T
Code	this . c . canInline () T
Distance : 6

68
Tree	this . c . canInline () &&
Code	this . c . canInline () &&
Distance : 6

69
Tree	this . c . canInline () p
Code	this . c . canInline () p
Distance : 6

70
Tree	canInline () root
Code	canInline () root
Distance : 7

71
Tree	canInline () NodeUtil
Code	canInline () NodeUtil
Distance : 7

72
Tree	canInline () Assert
Code	canInline () Assert
Distance : 7

73
Tree	canInline () Fraction
Code	canInline () Fraction
Distance : 7

74
Tree	canInline () Exception
Code	canInline () Exception
Distance : 7

75
Tree	canInline () Node
Code	canInline () Node
Distance : 7

76
Tree	canInline () c
Code	canInline () c
Distance : 7

77
Tree	canInline () notifyListeners
Code	canInline () notifyListeners
Distance : 7

78
Tree	canInline () lines
Code	canInline () lines
Distance : 7

79
Tree	this . c . canInline () false
Code	this . c . canInline () false
Distance : 6

80
Tree	canInline () serialised
Code	canInline () serialised
Distance : 7

81
Tree	canInline () checkNotNull
Code	canInline () checkNotNull
Distance : 7

82
Tree	canInline () TestUtils
Code	canInline () TestUtils
Distance : 7

83
Tree	c . canInline () this
Code	c . canInline () this
Distance : 5

84
Tree	c . canInline () <
Code	c . canInline () <
Distance : 5

85
Tree	c . canInline () if
Code	c . canInline () if
Distance : 5

86
Tree	c . canInline () MathRuntimeException
Code	c . canInline () MathRuntimeException
Distance : 5

87
Tree	canInline () name
Code	canInline () name
Distance : 7

88
Tree	canInline () add
Code	canInline () add
Distance : 7

89
Tree	canInline () ex
Code	canInline () ex
Distance : 7

90
Tree	this . c . canInline () ==
Code	this . c . canInline () ==
Distance : 6

91
Tree	this . c . canInline () value
Code	this . c . canInline () value
Distance : 6

92
Tree	this . c . canInline () class
Code	this . c . canInline () class
Distance : 6

93
Tree	this . c . canInline () Object
Code	this . c . canInline () Object
Distance : 6

94
Tree	canInline () js
Code	canInline () js
Distance : 7

95
Tree	this . c . canInline () mock
Code	this . c . canInline () mock
Distance : 6

96
Tree	this . c . canInline () assertEquals
Code	this . c . canInline () assertEquals
Distance : 6

97
Tree	this . c . canInline () !
Code	this . c . canInline () !
Distance : 6

98
Tree	this . c . canInline () []
Code	this . c . canInline () []
Distance : 6

99
Tree	this . c . canInline () nullNotPermitted
Code	this . c . canInline () nullNotPermitted
Distance : 6

100
Tree	this . c . canInline () throw
Code	this . c . canInline () throw
Distance : 6

101
Tree	c . canInline () -
Code	c . canInline () -
Distance : 5

102
Tree	c . canInline () Preconditions
Code	c . canInline () Preconditions
Distance : 5

103
Tree	this . c . canInline () catch
Code	this . c . canInline () catch
Distance : 6

104
Tree	this . c . canInline () void
Code	this . c . canInline () void
Distance : 6

105
Tree	canInline () source
Code	canInline () source
Distance : 7

106
Tree	canInline () NodeTraversal
Code	canInline () NodeTraversal
Distance : 7

107
Tree	this . c . canInline () Override
Code	this . c . canInline () Override
Distance : 6

108
Tree	canInline () verify
Code	canInline () verify
Distance : 7

109
Tree	canInline () optimizer
Code	canInline () optimizer
Distance : 7

110
Tree	canInline () y
Code	canInline () y
Distance : 7

111
Tree	this . c . canInline () <s>
Code	this . c . canInline () <s>
Distance : 6

112
Tree	this . c . canInline () (
Code	this . c . canInline () (
Distance : 6

113
Tree	this . c . canInline () ;
Code	this . c . canInline () ;
Distance : 6

114
Tree	this . c . canInline () )
Code	this . c . canInline () )
Distance : 5

115
Tree	this . c . canInline () .
Code	this . c . canInline () .
Distance : 6

116
Tree	this . c . canInline () ,
Code	this . c . canInline () ,
Distance : 6

117
Tree	this . c . canInline () +
Code	this . c . canInline () +
Distance : 6

118
Tree	this . c . canInline () null
Code	this . c . canInline () null
Distance : 6

119
Tree	this . c . canInline () public
Code	this . c . canInline () public
Distance : 6

120
Tree	this . c . canInline () [
Code	this . c . canInline () [
Distance : 6

121
Tree	this . c . canInline () new
Code	this . c . canInline () new
Distance : 6

122
Tree	this . c . canInline () STRING_CONSTANT
Code	this . c . canInline () STRING_CONSTANT
Distance : 6

123
Tree	this . c . canInline () NUMBER_CONSTANT
Code	this . c . canInline () NUMBER_CONSTANT
Distance : 6

124
Tree	canInline () array
Code	canInline () array
Distance : 7

125
Tree	this . c . canInline () reportCodeChange
Code	this . c . canInline () reportCodeChange
Distance : 6

126
Tree	this . c . canInline () expected
Code	this . c . canInline () expected
Distance : 6

127
Tree	this . c . canInline () FastMath
Code	this . c . canInline () FastMath
Distance : 6

128
Tree	this . c . canInline () IllegalArgumentException
Code	this . c . canInline () IllegalArgumentException
Distance : 6

129
Tree	this . c . canInline () -
Code	this . c . canInline () -
Distance : 6

130
Tree	this . c . canInline () Preconditions
Code	this . c . canInline () Preconditions
Distance : 6

131
Tree	canInline () Args
Code	canInline () Args
Distance : 7

132
Tree	canInline () fail
Code	canInline () fail
Distance : 7

133
Tree	canInline () <>
Code	canInline () <>
Distance : 7

134
Tree	this . c . canInline () c
Code	this . c . canInline () c
Distance : 6

135
Tree	this . c . canInline () <blank>
Code	this . c . canInline () <blank>
Distance : 6

136
Tree	this . c . canInline () >
Code	this . c . canInline () >
Distance : 6

137
Tree	this . c . canInline () ]
Code	this . c . canInline () ]
Distance : 6

138
Tree	this . c . canInline () abs
Code	this . c . canInline () abs
Distance : 6

139
Tree	this . c . canInline () reportMatcher
Code	this . c . canInline () reportMatcher
Distance : 6

140
Tree	this . c . canInline () setAcceptedLanguage
Code	this . c . canInline () setAcceptedLanguage
Distance : 6

141
Tree	this . c . canInline () char
Code	this . c . canInline () char
Distance : 6

142
Tree	this . c . canInline () static
Code	this . c . canInline () static
Distance : 6

143
Tree	this . c . canInline () JSType
Code	this . c . canInline () JSType
Distance : 6

144
Tree	this . c . canInline () get
Code	this . c . canInline () get
Distance : 6

145
Tree	this . c . canInline () stream
Code	this . c . canInline () stream
Distance : 6

146
Tree	this . c . canInline () out
Code	this . c . canInline () out
Distance : 6

147
Tree	this . c . canInline () protected
Code	this . c . canInline () protected
Distance : 6

148
Tree	canInline () boolean
Code	canInline () boolean
Distance : 7

149
Tree	canInline () LanguageMode.ECMASCRIPT_2015
Code	canInline () LanguageMode.ECMASCRIPT_2015
Distance : 7

150
Tree	this . c . canInline () PlotChangeEvent
Code	this . c . canInline () PlotChangeEvent
Distance : 6

151
Tree	this . c . canInline () solver
Code	this . c . canInline () solver
Distance : 6

152
Tree	this . c . canInline () Collection
Code	this . c . canInline () Collection
Distance : 6

153
Tree	canInline () m
Code	canInline () m
Distance : 7

154
Tree	canInline () join
Code	canInline () join
Distance : 7

155
Tree	canInline () paint
Code	canInline () paint
Distance : 7

156
Tree	this . c . canInline () isEmpty
Code	this . c . canInline () isEmpty
Distance : 6

157
Tree	canInline () getInstance
Code	canInline () getInstance
Distance : 7

158
Tree	canInline () *
Code	canInline () *
Distance : 7

159
Tree	canInline () type
Code	canInline () type
Distance : 7

160
Tree	canInline () List
Code	canInline () List
Distance : 7

161
Tree	this . c . canInline () return
Code	this . c . canInline () return
Distance : 6

162
Tree	this . c . canInline () getField
Code	this . c . canInline () getField
Distance : 6

163
Tree	canInline () LanguageMode.ECMASCRIPT6
Code	canInline () LanguageMode.ECMASCRIPT6
Distance : 7

164
Tree	canInline () PeriodType
Code	canInline () PeriodType
Distance : 7

165
Tree	canInline () s
Code	canInline () s
Distance : 7

166
Tree	canInline () UnivariateFunction
Code	canInline () UnivariateFunction
Distance : 7

167
Tree	canInline () scope
Code	canInline () scope
Distance : 7

168
Tree	canInline () sb
Code	canInline () sb
Distance : 7

169
Tree	canInline () invocation
Code	canInline () invocation
Distance : 7

170
Tree	this . c . canInline () ()
Code	this . c . canInline () ()
Distance : 6

171
Tree	canInline () :
Code	canInline () :
Distance : 7

172
Tree	canInline () result
Code	canInline () result
Distance : 7

173
Tree	canInline () str
Code	canInline () str
Distance : 7

174
Tree	canInline () LINE_JOINER
Code	canInline () LINE_JOINER
Distance : 7

175
Tree	canInline () testSame
Code	canInline () testSame
Distance : 7

176
Tree	canInline () x
Code	canInline () x
Distance : 7

177
Tree	canInline () ArrayList
Code	canInline () ArrayList
Distance : 7

178
Tree	canInline () fireChangeEvent
Code	canInline () fireChangeEvent
Distance : 7

179
Tree	canInline () parent
Code	canInline () parent
Distance : 7

180
Tree	canInline () createIllegalArgumentException
Code	canInline () createIllegalArgumentException
Distance : 7

181
Tree	canInline () IllegalArgumentException
Code	canInline () IllegalArgumentException
Distance : 7

182
Tree	canInline () FastMath
Code	canInline () FastMath
Distance : 7

183
Tree	canInline () assertThat
Code	canInline () assertThat
Distance : 7

184
Tree	canInline () reportCodeChange
Code	canInline () reportCodeChange
Distance : 7

185
Tree	canInline () sqrt
Code	canInline () sqrt
Distance : 7

186
Tree	canInline () expected
Code	canInline () expected
Distance : 7

187
Tree	canInline () v
Code	canInline () v
Distance : 7

188
Tree	canInline () Integer
Code	canInline () Integer
Distance : 7

189
Tree	canInline () equals
Code	canInline () equals
Distance : 7

190
Tree	canInline () d
Code	canInline () d
Distance : 7

191
Tree	canInline () externs
Code	canInline () externs
Distance : 7

192
Tree	canInline () assertTrue
Code	canInline () assertTrue
Distance : 7

193
Tree	canInline () contains
Code	canInline () contains
Distance : 7

194
Tree	canInline () isNormalBlock
Code	canInline () isNormalBlock
Distance : 7

195
Tree	canInline () size
Code	canInline () size
Distance : 7

196
Tree	canInline () mockingProgress
Code	canInline () mockingProgress
Distance : 7

197
Tree	canInline () try
Code	canInline () try
Distance : 7

198
Tree	canInline () StringBuilder
Code	canInline () StringBuilder
Distance : 7

199
Tree	canInline () stroke
Code	canInline () stroke
Distance : 7

========================================================================


========================================================================
Example Number: 34
Parent Code is: 
int len = thisBuf.length - strLen ;
-------------------------------------------------------------------------------
Child code is: 
int len = size - strLen + NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=len}) (204{val==}) (27 (40{val=thisBuf.length}) (201{val=-}) (800{val=strLen}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=len}) (204{val==}) (27 (27 (800{val=size}) (201{val=-}) (800{val=strLen})) (200{val=+}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/61/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int len = size - strLen ;
Code	int len = size - strLen ;
Distance : 2

1
Tree	int len = len + strLen + len + len ;
Code	int len = len + strLen + len + len ;
Distance : 5

2
Tree	int len = size - size ;
Code	int len = size - size ;
Distance : 3

3
Tree	float len = size - strLen ;
Code	float len = size - strLen ;
Distance : 3

4
Tree	double len = size / strLen ;
Code	double len = size / strLen ;
Distance : 4

5
Tree	char len = size + strLen + strLen + strLen ;
Code	char len = size + strLen + strLen + strLen ;
Distance : 5

6
Tree	double len = len / strLen ;
Code	double len = len / strLen ;
Distance : 5

7
Tree	char len = NUMBER_CONSTANT * thisBuf.length ;
Code	char len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

8
Tree	boolean len = size + strLen + strLen + strLen ;
Code	boolean len = size + strLen + strLen + strLen ;
Distance : 5

9
Tree	float len = len - strLen ;
Code	float len = len - strLen ;
Distance : 4

10
Tree	int len = len - size ;
Code	int len = len - size ;
Distance : 4

11
Tree	double len = size + strLen + len + strLen ;
Code	double len = size + strLen + len + strLen ;
Distance : 5

12
Tree	boolean len = NUMBER_CONSTANT * thisBuf.length ;
Code	boolean len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

13
Tree	char len = len + strLen + strLen + strLen ;
Code	char len = len + strLen + strLen + strLen ;
Distance : 6

14
Tree	char len = size & NUMBER_CONSTANT ;
Code	char len = size & NUMBER_CONSTANT ;
Distance : 4

15
Tree	byte len = size + strLen + strLen + strLen ;
Code	byte len = size + strLen + strLen + strLen ;
Distance : 5

16
Tree	boolean len = len + strLen + strLen + strLen ;
Code	boolean len = len + strLen + strLen + strLen ;
Distance : 6

17
Tree	long len = size + strLen + strLen + len ;
Code	long len = size + strLen + strLen + len ;
Distance : 5

18
Tree	byte len = NUMBER_CONSTANT * thisBuf.length ;
Code	byte len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

19
Tree	double len = len + strLen + len + strLen ;
Code	double len = len + strLen + len + strLen ;
Distance : 6

20
Tree	int len = len + len + strLen + len ;
Code	int len = len + len + strLen + len ;
Distance : 5

21
Tree	int len = strLen + strLen + strLen + len ;
Code	int len = strLen + strLen + strLen + len ;
Distance : 5

22
Tree	int len = size + strLen + len + len ;
Code	int len = size + strLen + len + len ;
Distance : 4

23
Tree	long len = len & NUMBER_CONSTANT ;
Code	long len = len & NUMBER_CONSTANT ;
Distance : 5

24
Tree	byte len = size - strLen ;
Code	byte len = size - strLen ;
Distance : 3

25
Tree	int len = len + len + strLen + strLen ;
Code	int len = len + len + strLen + strLen ;
Distance : 5

26
Tree	byte len = len - strLen ;
Code	byte len = len - strLen ;
Distance : 4

27
Tree	int len = NUMBER_CONSTANT * strLen * strLen * thisBuf.length ;
Code	int len = NUMBER_CONSTANT * strLen * strLen * thisBuf.length ;
Distance : 6

28
Tree	double len = size + strLen + strLen + len ;
Code	double len = size + strLen + strLen + len ;
Distance : 5

29
Tree	double len = len + strLen + strLen + len ;
Code	double len = len + strLen + strLen + len ;
Distance : 6

30
Tree	int len = size / strLen - strLen ;
Code	int len = size / strLen - strLen ;
Distance : 3

31
Tree	int len = strLen + strLen + strLen + strLen ;
Code	int len = strLen + strLen + strLen + strLen ;
Distance : 5

32
Tree	long len = size + strLen + strLen + strLen ;
Code	long len = size + strLen + strLen + strLen ;
Distance : 5

33
Tree	int len = len / strLen - strLen ;
Code	int len = len / strLen - strLen ;
Distance : 4

34
Tree	long len = NUMBER_CONSTANT * thisBuf.length ;
Code	long len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

35
Tree	double len = size - len ;
Code	double len = size - len ;
Distance : 4

36
Tree	int strLen = size - strLen ;
Code	int strLen = size - strLen ;
Distance : 3

37
Tree	long len = len + strLen + strLen + strLen ;
Code	long len = len + strLen + strLen + strLen ;
Distance : 6

38
Tree	double len = strLen - strLen ;
Code	double len = strLen - strLen ;
Distance : 4

39
Tree	long len = size & NUMBER_CONSTANT ;
Code	long len = size & NUMBER_CONSTANT ;
Distance : 4

40
Tree	int len = strLen & NUMBER_CONSTANT ;
Code	int len = strLen & NUMBER_CONSTANT ;
Distance : 3

41
Tree	double len = len - len ;
Code	double len = len - len ;
Distance : 5

42
Tree	int strLen = len - strLen ;
Code	int strLen = len - strLen ;
Distance : 4

43
Tree	int len = size + len + strLen + len ;
Code	int len = size + len + strLen + len ;
Distance : 4

44
Tree	boolean len = len - strLen ;
Code	boolean len = len - strLen ;
Distance : 4

45
Tree	double len = size + len + strLen + strLen ;
Code	double len = size + len + strLen + strLen ;
Distance : 5

46
Tree	long len = len + strLen + strLen + len ;
Code	long len = len + strLen + strLen + len ;
Distance : 6

47
Tree	boolean len = size + strLen + strLen + len ;
Code	boolean len = size + strLen + strLen + len ;
Distance : 5

48
Tree	int strLen = len + strLen + strLen + strLen ;
Code	int strLen = len + strLen + strLen + strLen ;
Distance : 6

49
Tree	double strLen = size - strLen ;
Code	double strLen = size - strLen ;
Distance : 4

50
Tree	boolean len = len + strLen + strLen + len ;
Code	boolean len = len + strLen + strLen + len ;
Distance : 6

51
Tree	int len = len + strLen + strLen + size ;
Code	int len = len + strLen + strLen + size ;
Distance : 5

52
Tree	int len = strLen / strLen ;
Code	int len = strLen / strLen ;
Distance : 4

53
Tree	byte len = size + strLen + strLen + len ;
Code	byte len = size + strLen + strLen + len ;
Distance : 5

54
Tree	double len = strLen & NUMBER_CONSTANT ;
Code	double len = strLen & NUMBER_CONSTANT ;
Distance : 4

55
Tree	long len = size / strLen ;
Code	long len = size / strLen ;
Distance : 4

56
Tree	int strLen = size & NUMBER_CONSTANT ;
Code	int strLen = size & NUMBER_CONSTANT ;
Distance : 4

57
Tree	int len = size / len ;
Code	int len = size / len ;
Distance : 4

58
Tree	double len = size + len + strLen + len ;
Code	double len = size + len + strLen + len ;
Distance : 5

59
Tree	int len = len + strLen + size + strLen ;
Code	int len = len + strLen + size + strLen ;
Distance : 5

60
Tree	byte len = len + strLen + strLen + len ;
Code	byte len = len + strLen + strLen + len ;
Distance : 6

61
Tree	double len = size + strLen + len + len ;
Code	double len = size + strLen + len + len ;
Distance : 5

62
Tree	long len = len / strLen ;
Code	long len = len / strLen ;
Distance : 5

63
Tree	double strLen = len - strLen ;
Code	double strLen = len - strLen ;
Distance : 5

64
Tree	int len = size / strLen - len ;
Code	int len = size / strLen - len ;
Distance : 3

65
Tree	double len = len + len + strLen + len ;
Code	double len = len + len + strLen + len ;
Distance : 6

66
Tree	int len = len + len + len + strLen ;
Code	int len = len + len + len + strLen ;
Distance : 6

67
Tree	boolean len = size & NUMBER_CONSTANT ;
Code	boolean len = size & NUMBER_CONSTANT ;
Distance : 4

68
Tree	int strLen = NUMBER_CONSTANT * thisBuf.length ;
Code	int strLen = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

69
Tree	char len = len + strLen + strLen + len ;
Code	char len = len + strLen + strLen + len ;
Distance : 6

70
Tree	byte len = len + strLen + strLen + strLen ;
Code	byte len = len + strLen + strLen + strLen ;
Distance : 6

71
Tree	boolean len = len & NUMBER_CONSTANT ;
Code	boolean len = len & NUMBER_CONSTANT ;
Distance : 5

72
Tree	byte len = size & NUMBER_CONSTANT ;
Code	byte len = size & NUMBER_CONSTANT ;
Distance : 4

73
Tree	double len = len + len + strLen + strLen ;
Code	double len = len + len + strLen + strLen ;
Distance : 6

74
Tree	short len = size - strLen ;
Code	short len = size - strLen ;
Distance : 3

75
Tree	byte len = len & NUMBER_CONSTANT ;
Code	byte len = len & NUMBER_CONSTANT ;
Distance : 5

76
Tree	double len = NUMBER_CONSTANT * strLen * strLen * thisBuf.length ;
Code	double len = NUMBER_CONSTANT * strLen * strLen * thisBuf.length ;
Distance : 7

77
Tree	int len = strLen - len ;
Code	int len = strLen - len ;
Distance : 4

78
Tree	long len = size - len ;
Code	long len = size - len ;
Distance : 4

79
Tree	short len = len - strLen ;
Code	short len = len - strLen ;
Distance : 4

80
Tree	long len = strLen - strLen ;
Code	long len = strLen - strLen ;
Distance : 4

81
Tree	int len = size + len + len + strLen ;
Code	int len = size + len + len + strLen ;
Distance : 5

82
Tree	double len = size / strLen - strLen ;
Code	double len = size / strLen - strLen ;
Distance : 4

83
Tree	long len = len - len ;
Code	long len = len - len ;
Distance : 5

84
Tree	double len = len / strLen - strLen ;
Code	double len = len / strLen - strLen ;
Distance : 5

85
Tree	int strLen = size + strLen + strLen + strLen ;
Code	int strLen = size + strLen + strLen + strLen ;
Distance : 5

86
Tree	char len = size + strLen + strLen + len ;
Code	char len = size + strLen + strLen + len ;
Distance : 5

87
Tree	double len = strLen + strLen + strLen + strLen ;
Code	double len = strLen + strLen + strLen + strLen ;
Distance : 6

88
Tree	int len = size + strLen + strLen + size ;
Code	int len = size + strLen + strLen + size ;
Distance : 4

89
Tree	int len = size + strLen + size + strLen ;
Code	int len = size + strLen + size + strLen ;
Distance : 4

90
Tree	int len = len + strLen + len + strLen ;
Code	int len = len + strLen + len + strLen ;
Distance : 5

91
Tree	char len = len & NUMBER_CONSTANT ;
Code	char len = len & NUMBER_CONSTANT ;
Distance : 5

92
Tree	int len = len - strLen ;
Code	int len = len - strLen ;
Distance : 3

93
Tree	double len = len + strLen + strLen + strLen ;
Code	double len = len + strLen + strLen + strLen ;
Distance : 6

94
Tree	double len = size & NUMBER_CONSTANT ;
Code	double len = size & NUMBER_CONSTANT ;
Distance : 4

95
Tree	int len = size / strLen ;
Code	int len = size / strLen ;
Distance : 3

96
Tree	double len = len & NUMBER_CONSTANT ;
Code	double len = len & NUMBER_CONSTANT ;
Distance : 5

97
Tree	int len = len / strLen ;
Code	int len = len / strLen ;
Distance : 4

98
Tree	int len = size + strLen + len + strLen ;
Code	int len = size + strLen + len + strLen ;
Distance : 4

99
Tree	char len = size - strLen ;
Code	char len = size - strLen ;
Distance : 3

100
Tree	char len = len - strLen ;
Code	char len = len - strLen ;
Distance : 4

101
Tree	double len = NUMBER_CONSTANT * thisBuf.length ;
Code	double len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 6

102
Tree	int len = size + len + strLen + strLen ;
Code	int len = size + len + strLen + strLen ;
Distance : 4

103
Tree	int len = size + strLen + strLen + len ;
Code	int len = size + strLen + strLen + len ;
Distance : 4

104
Tree	int len = len & NUMBER_CONSTANT ;
Code	int len = len & NUMBER_CONSTANT ;
Distance : 4

105
Tree	double len = len - strLen ;
Code	double len = len - strLen ;
Distance : 4

106
Tree	int len = size & NUMBER_CONSTANT ;
Code	int len = size & NUMBER_CONSTANT ;
Distance : 3

107
Tree	int len = len + strLen + strLen + strLen ;
Code	int len = len + strLen + strLen + strLen ;
Distance : 5

108
Tree	double len = size - strLen ;
Code	double len = size - strLen ;
Distance : 3

109
Tree	int len = NUMBER_CONSTANT * thisBuf.length ;
Code	int len = NUMBER_CONSTANT * thisBuf.length ;
Distance : 5

110
Tree	int len = size + strLen + strLen + strLen ;
Code	int len = size + strLen + strLen + strLen ;
Distance : 4

111
Tree	int len = len + strLen + strLen + len ;
Code	int len = len + strLen + strLen + len ;
Distance : 5

112
Tree	double len = size + strLen + strLen + strLen ;
Code	double len = size + strLen + strLen + strLen ;
Distance : 5

113
Tree	boolean len = size - strLen ;
Code	boolean len = size - strLen ;
Distance : 3

114
Tree	long len = len - strLen ;
Code	long len = len - strLen ;
Distance : 4

115
Tree	int len = strLen - strLen ;
Code	int len = strLen - strLen ;
Distance : 3

116
Tree	long len = size - strLen ;
Code	long len = size - strLen ;
Distance : 3

117
Tree	int len = size - len ;
Code	int len = size - len ;
Distance : 3

118
Tree	int len = len - len ;
Code	int len = len - len ;
Distance : 4

119
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; else
Code	int len = NUMBER_CONSTANT * thisBuf.length ; else
Distance : 6

120
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; instant
Code	int len = NUMBER_CONSTANT * thisBuf.length ; instant
Distance : 6

121
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; out
Code	int len = NUMBER_CONSTANT * thisBuf.length ; out
Distance : 6

122
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; throw
Code	int len = NUMBER_CONSTANT * thisBuf.length ; throw
Distance : 6

123
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; []
Code	int len = NUMBER_CONSTANT * thisBuf.length ; []
Distance : 6

124
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; =
Code	int len = NUMBER_CONSTANT * thisBuf.length ; =
Distance : 6

125
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; e
Code	int len = NUMBER_CONSTANT * thisBuf.length ; e
Distance : 6

126
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; public
Code	int len = NUMBER_CONSTANT * thisBuf.length ; public
Distance : 6

127
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; null
Code	int len = NUMBER_CONSTANT * thisBuf.length ; null
Distance : 6

128
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; String
Code	int len = NUMBER_CONSTANT * thisBuf.length ; String
Distance : 6

129
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; n
Code	int len = NUMBER_CONSTANT * thisBuf.length ; n
Distance : 6

130
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; compiler
Code	int len = NUMBER_CONSTANT * thisBuf.length ; compiler
Distance : 6

131
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; catch
Code	int len = NUMBER_CONSTANT * thisBuf.length ; catch
Distance : 6

132
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; STRING_CONSTANT
Code	int len = NUMBER_CONSTANT * thisBuf.length ; STRING_CONSTANT
Distance : 6

133
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; +
Code	int len = NUMBER_CONSTANT * thisBuf.length ; +
Distance : 6

134
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; matcher
Code	int len = NUMBER_CONSTANT * thisBuf.length ; matcher
Distance : 6

135
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; data
Code	int len = NUMBER_CONSTANT * thisBuf.length ; data
Distance : 6

136
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; ex
Code	int len = NUMBER_CONSTANT * thisBuf.length ; ex
Distance : 6

137
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; s
Code	int len = NUMBER_CONSTANT * thisBuf.length ; s
Distance : 6

138
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; obj
Code	int len = NUMBER_CONSTANT * thisBuf.length ; obj
Distance : 6

139
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; a
Code	int len = NUMBER_CONSTANT * thisBuf.length ; a
Distance : 6

140
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; ==
Code	int len = NUMBER_CONSTANT * thisBuf.length ; ==
Distance : 6

141
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; setUp
Code	int len = NUMBER_CONSTANT * thisBuf.length ; setUp
Distance : 6

142
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; js
Code	int len = NUMBER_CONSTANT * thisBuf.length ; js
Distance : 6

143
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; reportMatcher
Code	int len = NUMBER_CONSTANT * thisBuf.length ; reportMatcher
Distance : 6

144
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; {
Code	int len = NUMBER_CONSTANT * thisBuf.length ; {
Distance : 6

145
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; getParent
Code	int len = NUMBER_CONSTANT * thisBuf.length ; getParent
Distance : 6

146
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; getMessage
Code	int len = NUMBER_CONSTANT * thisBuf.length ; getMessage
Distance : 6

147
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; stream
Code	int len = NUMBER_CONSTANT * thisBuf.length ; stream
Distance : 6

148
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; values
Code	int len = NUMBER_CONSTANT * thisBuf.length ; values
Distance : 6

149
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; root
Code	int len = NUMBER_CONSTANT * thisBuf.length ; root
Distance : 6

150
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; name
Code	int len = NUMBER_CONSTANT * thisBuf.length ; name
Distance : 6

151
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; .
Code	int len = NUMBER_CONSTANT * thisBuf.length ; .
Distance : 6

152
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; StrBuilder
Code	int len = NUMBER_CONSTANT * thisBuf.length ; StrBuilder
Distance : 6

153
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; length
Code	int len = NUMBER_CONSTANT * thisBuf.length ; length
Distance : 6

154
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; Assert
Code	int len = NUMBER_CONSTANT * thisBuf.length ; Assert
Distance : 6

155
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; node
Code	int len = NUMBER_CONSTANT * thisBuf.length ; node
Distance : 6

156
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; invocations
Code	int len = NUMBER_CONSTANT * thisBuf.length ; invocations
Distance : 6

157
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; protected
Code	int len = NUMBER_CONSTANT * thisBuf.length ; protected
Distance : 6

158
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; return;
Code	int len = NUMBER_CONSTANT * thisBuf.length ; return;
Distance : 6

159
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; isEmpty
Code	int len = NUMBER_CONSTANT * thisBuf.length ; isEmpty
Distance : 6

160
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; char
Code	int len = NUMBER_CONSTANT * thisBuf.length ; char
Distance : 6

161
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; get
Code	int len = NUMBER_CONSTANT * thisBuf.length ; get
Distance : 6

162
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; setAcceptedLanguage
Code	int len = NUMBER_CONSTANT * thisBuf.length ; setAcceptedLanguage
Distance : 6

163
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; abs
Code	int len = NUMBER_CONSTANT * thisBuf.length ; abs
Distance : 6

164
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; JSType
Code	int len = NUMBER_CONSTANT * thisBuf.length ; JSType
Distance : 6

165
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; size
Code	int len = NUMBER_CONSTANT * thisBuf.length ; size
Distance : 6

166
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; LanguageMode.ECMASCRIPT_2015
Code	int len = NUMBER_CONSTANT * thisBuf.length ; LanguageMode.ECMASCRIPT_2015
Distance : 6

167
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; StringBuilder
Code	int len = NUMBER_CONSTANT * thisBuf.length ; StringBuilder
Distance : 6

168
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; chrono
Code	int len = NUMBER_CONSTANT * thisBuf.length ; chrono
Distance : 6

169
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; T
Code	int len = NUMBER_CONSTANT * thisBuf.length ; T
Distance : 6

170
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; [
Code	int len = NUMBER_CONSTANT * thisBuf.length ; [
Distance : 6

171
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; -
Code	int len = NUMBER_CONSTANT * thisBuf.length ; -
Distance : 6

172
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; ]
Code	int len = NUMBER_CONSTANT * thisBuf.length ; ]
Distance : 6

173
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; true
Code	int len = NUMBER_CONSTANT * thisBuf.length ; true
Distance : 6

174
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; static
Code	int len = NUMBER_CONSTANT * thisBuf.length ; static
Distance : 6

175
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; index
Code	int len = NUMBER_CONSTANT * thisBuf.length ; index
Distance : 6

176
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; stroke
Code	int len = NUMBER_CONSTANT * thisBuf.length ; stroke
Distance : 6

177
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; traverseEs6
Code	int len = NUMBER_CONSTANT * thisBuf.length ; traverseEs6
Distance : 6

178
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; isNormalBlock
Code	int len = NUMBER_CONSTANT * thisBuf.length ; isNormalBlock
Distance : 6

179
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; PeriodType
Code	int len = NUMBER_CONSTANT * thisBuf.length ; PeriodType
Distance : 6

180
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; <=
Code	int len = NUMBER_CONSTANT * thisBuf.length ; <=
Distance : 6

181
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; TestUtils
Code	int len = NUMBER_CONSTANT * thisBuf.length ; TestUtils
Distance : 6

182
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; long
Code	int len = NUMBER_CONSTANT * thisBuf.length ; long
Distance : 6

183
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; Integer
Code	int len = NUMBER_CONSTANT * thisBuf.length ; Integer
Distance : 6

184
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; NodeTraversal
Code	int len = NUMBER_CONSTANT * thisBuf.length ; NodeTraversal
Distance : 6

185
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; Fraction
Code	int len = NUMBER_CONSTANT * thisBuf.length ; Fraction
Distance : 6

186
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; checkNotNull
Code	int len = NUMBER_CONSTANT * thisBuf.length ; checkNotNull
Distance : 6

187
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; return
Code	int len = NUMBER_CONSTANT * thisBuf.length ; return
Distance : 6

188
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; ?
Code	int len = NUMBER_CONSTANT * thisBuf.length ; ?
Distance : 6

189
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; Class
Code	int len = NUMBER_CONSTANT * thisBuf.length ; Class
Distance : 6

190
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; toString
Code	int len = NUMBER_CONSTANT * thisBuf.length ; toString
Distance : 6

191
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; p
Code	int len = NUMBER_CONSTANT * thisBuf.length ; p
Distance : 6

192
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; source
Code	int len = NUMBER_CONSTANT * thisBuf.length ; source
Distance : 6

193
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; wanted
Code	int len = NUMBER_CONSTANT * thisBuf.length ; wanted
Distance : 6

194
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; NodeUtil
Code	int len = NUMBER_CONSTANT * thisBuf.length ; NodeUtil
Distance : 6

195
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; Math
Code	int len = NUMBER_CONSTANT * thisBuf.length ; Math
Distance : 6

196
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; options
Code	int len = NUMBER_CONSTANT * thisBuf.length ; options
Distance : 6

197
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; this
Code	int len = NUMBER_CONSTANT * thisBuf.length ; this
Distance : 6

198
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; mockingProgress
Code	int len = NUMBER_CONSTANT * thisBuf.length ; mockingProgress
Distance : 6

199
Tree	int len = NUMBER_CONSTANT * thisBuf.length ; }
Code	int len = NUMBER_CONSTANT * thisBuf.length ; }
Distance : 6

========================================================================


========================================================================
Example Number: 35
Parent Code is: 
i < thisBuf.length
-------------------------------------------------------------------------------
Child code is: 
i < size
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (40{val=thisBuf.length})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (800{val=size})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/60/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	i > NUMBER_CONSTANT
Code	i > NUMBER_CONSTANT
Distance : 2

1
Tree	i . getCanonicalName () != thisBuf.length
Code	i . getCanonicalName () != thisBuf.length
Distance : 5

2
Tree	current.parent () != thisBuf.length
Code	current.parent () != thisBuf.length
Distance : 4

3
Tree	i . longValue () != thisBuf.length
Code	i . longValue () != thisBuf.length
Distance : 5

4
Tree	isSetterDef () != thisBuf.length
Code	isSetterDef () != thisBuf.length
Distance : 4

5
Tree	includesGlobals () != thisBuf.length
Code	includesGlobals () != thisBuf.length
Distance : 4

6
Tree	i . nextBoolean () != thisBuf.length
Code	i . nextBoolean () != thisBuf.length
Distance : 5

7
Tree	i . forName () != thisBuf.length
Code	i . forName () != thisBuf.length
Distance : 5

8
Tree	isTypecheckingEnabled () != thisBuf.length
Code	isTypecheckingEnabled () != thisBuf.length
Distance : 4

9
Tree	toPrinter () != thisBuf.length
Code	toPrinter () != thisBuf.length
Distance : 4

10
Tree	getNormalizedReferenceName () != thisBuf.length
Code	getNormalizedReferenceName () != thisBuf.length
Distance : 4

11
Tree	i . isAsyncContext () != thisBuf.length
Code	i . isAsyncContext () != thisBuf.length
Distance : 5

12
Tree	getInf ( i ) != thisBuf.length
Code	getInf ( i ) != thisBuf.length
Distance : 5

13
Tree	i . getRightElement () != thisBuf.length
Code	i . getRightElement () != thisBuf.length
Distance : 5

14
Tree	i . toComparison () != thisBuf.length
Code	i . toComparison () != thisBuf.length
Distance : 5

15
Tree	shouldDisambiguateProperties ( i ) != thisBuf.length
Code	shouldDisambiguateProperties ( i ) != thisBuf.length
Distance : 5

16
Tree	getLowerDate ( i ) != thisBuf.length
Code	getLowerDate ( i ) != thisBuf.length
Distance : 5

17
Tree	Entities.ISO8859_1_ARRAY_LENGTH ( i ) != thisBuf.length
Code	Entities.ISO8859_1_ARRAY_LENGTH ( i ) != thisBuf.length
Distance : 5

18
Tree	doesFunctionReferenceOwnArgumentsObject ( i ) != thisBuf.length
Code	doesFunctionReferenceOwnArgumentsObject ( i ) != thisBuf.length
Distance : 5

19
Tree	getPrototypeProperty ( i ) != thisBuf.length
Code	getPrototypeProperty ( i ) != thisBuf.length
Distance : 5

20
Tree	i . factorial () != thisBuf.length
Code	i . factorial () != thisBuf.length
Distance : 5

21
Tree	i . isBuiltinObject () != thisBuf.length
Code	i . isBuiltinObject () != thisBuf.length
Distance : 5

22
Tree	i . emptyList () != thisBuf.length
Code	i . emptyList () != thisBuf.length
Distance : 5

23
Tree	i . isVerifiedStrictly () != thisBuf.length
Code	i . isVerifiedStrictly () != thisBuf.length
Distance : 5

24
Tree	astValidationEnabled ( i ) != thisBuf.length
Code	astValidationEnabled ( i ) != thisBuf.length
Distance : 5

25
Tree	i . IEEEremainder () != thisBuf.length
Code	i . IEEEremainder () != thisBuf.length
Distance : 5

26
Tree	that.id () != thisBuf.length
Code	that.id () != thisBuf.length
Distance : 4

27
Tree	isOutlineVisible ( i ) != thisBuf.length
Code	isOutlineVisible ( i ) != thisBuf.length
Distance : 5

28
Tree	isAssignmentToPrototype ( i ) != thisBuf.length
Code	isAssignmentToPrototype ( i ) != thisBuf.length
Distance : 5

29
Tree	mockable () != thisBuf.length
Code	mockable () != thisBuf.length
Distance : 4

30
Tree	i . isExprResult () != thisBuf.length
Code	i . isExprResult () != thisBuf.length
Distance : 5

31
Tree	i . charMatcher () != thisBuf.length
Code	i . charMatcher () != thisBuf.length
Distance : 5

32
Tree	getUserHome ( i ) != thisBuf.length
Code	getUserHome ( i ) != thisBuf.length
Distance : 5

33
Tree	getLeapDurationField ( i ) != thisBuf.length
Code	getLeapDurationField ( i ) != thisBuf.length
Distance : 5

34
Tree	isSymbol ( i ) != thisBuf.length
Code	isSymbol ( i ) != thisBuf.length
Distance : 5

35
Tree	isRadiusMinorGridlinesVisible () != thisBuf.length
Code	isRadiusMinorGridlinesVisible () != thisBuf.length
Distance : 4

36
Tree	extraInterfacesCannotContainMockedType ( i ) != thisBuf.length
Code	extraInterfacesCannotContainMockedType ( i ) != thisBuf.length
Distance : 5

37
Tree	newVar () != thisBuf.length
Code	newVar () != thisBuf.length
Distance : 4

38
Tree	searchArray () != thisBuf.length
Code	searchArray () != thisBuf.length
Distance : 4

39
Tree	entrySet () != thisBuf.length
Code	entrySet () != thisBuf.length
Distance : 4

40
Tree	isVerifiedStrictly () != thisBuf.length
Code	isVerifiedStrictly () != thisBuf.length
Distance : 4

41
Tree	asPropertyMap () != thisBuf.length
Code	asPropertyMap () != thisBuf.length
Distance : 4

42
Tree	isConstDeclaration () != thisBuf.length
Code	isConstDeclaration () != thisBuf.length
Distance : 4

43
Tree	visitForIn ( i ) != thisBuf.length
Code	visitForIn ( i ) != thisBuf.length
Distance : 5

44
Tree	isDotPrototype ( i ) != thisBuf.length
Code	isDotPrototype ( i ) != thisBuf.length
Distance : 5

45
Tree	iChronology.MILLIS_PER_DAY ( i ) != thisBuf.length
Code	iChronology.MILLIS_PER_DAY ( i ) != thisBuf.length
Distance : 5

46
Tree	i . getEpsilon () != thisBuf.length
Code	i . getEpsilon () != thisBuf.length
Distance : 5

47
Tree	i . getDataRef () != thisBuf.length
Code	i . getDataRef () != thisBuf.length
Distance : 5

48
Tree	i . getGeneratorUpperBounds () != thisBuf.length
Code	i . getGeneratorUpperBounds () != thisBuf.length
Distance : 5

49
Tree	SECONDS_MILLIS () != thisBuf.length
Code	SECONDS_MILLIS () != thisBuf.length
Distance : 4

50
Tree	size > NUMBER_CONSTANT
Code	size > NUMBER_CONSTANT
Distance : 3

51
Tree	i . abs () != thisBuf.length
Code	i . abs () != thisBuf.length
Distance : 5

52
Tree	skipStringLiteralEscapeSequence () != thisBuf.length
Code	skipStringLiteralEscapeSequence () != thisBuf.length
Distance : 4

53
Tree	isBuiltinObject () != thisBuf.length
Code	isBuiltinObject () != thisBuf.length
Distance : 4

54
Tree	SECONDS_MILLIS ( i ) != thisBuf.length
Code	SECONDS_MILLIS ( i ) != thisBuf.length
Distance : 5

55
Tree	i . copySelf () != thisBuf.length
Code	i . copySelf () != thisBuf.length
Distance : 5

56
Tree	i . isStruct () != thisBuf.length
Code	i . isStruct () != thisBuf.length
Distance : 5

57
Tree	getIgnoredMatcher () != thisBuf.length
Code	getIgnoredMatcher () != thisBuf.length
Distance : 4

58
Tree	markStubUsed ( i ) != thisBuf.length
Code	markStubUsed ( i ) != thisBuf.length
Distance : 5

59
Tree	i . parseDouble () != thisBuf.length
Code	i . parseDouble () != thisBuf.length
Distance : 5

60
Tree	i . getBeta () != thisBuf.length
Code	i . getBeta () != thisBuf.length
Distance : 5

61
Tree	i . stubInfo () != thisBuf.length
Code	i . stubInfo () != thisBuf.length
Distance : 5

62
Tree	skipStringLiteralEscapeSequence ( i ) != thisBuf.length
Code	skipStringLiteralEscapeSequence ( i ) != thisBuf.length
Distance : 5

63
Tree	isBuiltinObject ( i ) != thisBuf.length
Code	isBuiltinObject ( i ) != thisBuf.length
Distance : 5

64
Tree	this == size
Code	this == size
Distance : 2

65
Tree	getIgnoredMatcher ( i ) != thisBuf.length
Code	getIgnoredMatcher ( i ) != thisBuf.length
Distance : 5

66
Tree	i / size
Code	i / size
Distance : 1

67
Tree	i . valueOf () != thisBuf.length
Code	i . valueOf () != thisBuf.length
Distance : 5

68
Tree	i == thisBuf.length
Code	i == thisBuf.length
Distance : 2

69
Tree	i < thisBuf.length
Code	i < thisBuf.length
Distance : 1

70
Tree	stubInfo ( i ) != thisBuf.length
Code	stubInfo ( i ) != thisBuf.length
Distance : 5

71
Tree	i . intValue () != thisBuf.length
Code	i . intValue () != thisBuf.length
Distance : 5

72
Tree	toPrinter ( i ) != thisBuf.length
Code	toPrinter ( i ) != thisBuf.length
Distance : 5

73
Tree	isTypecheckingEnabled ( i ) != thisBuf.length
Code	isTypecheckingEnabled ( i ) != thisBuf.length
Distance : 5

74
Tree	i . natural () != thisBuf.length
Code	i . natural () != thisBuf.length
Distance : 5

75
Tree	that.id ( i ) != thisBuf.length
Code	that.id ( i ) != thisBuf.length
Distance : 5

76
Tree	mockable ( i ) != thisBuf.length
Code	mockable ( i ) != thisBuf.length
Distance : 5

77
Tree	i . getPrinter () != thisBuf.length
Code	i . getPrinter () != thisBuf.length
Distance : 5

78
Tree	isRadiusMinorGridlinesVisible ( i ) != thisBuf.length
Code	isRadiusMinorGridlinesVisible ( i ) != thisBuf.length
Distance : 5

79
Tree	i . hashCode () != thisBuf.length
Code	i . hashCode () != thisBuf.length
Distance : 5

80
Tree	newVar ( i ) != thisBuf.length
Code	newVar ( i ) != thisBuf.length
Distance : 5

81
Tree	searchArray ( i ) != thisBuf.length
Code	searchArray ( i ) != thisBuf.length
Distance : 5

82
Tree	entrySet ( i ) != thisBuf.length
Code	entrySet ( i ) != thisBuf.length
Distance : 5

83
Tree	i . getMatchers () != thisBuf.length
Code	i . getMatchers () != thisBuf.length
Distance : 5

84
Tree	isConstDeclaration ( i ) != thisBuf.length
Code	isConstDeclaration ( i ) != thisBuf.length
Distance : 5

85
Tree	isVerifiedStrictly ( i ) != thisBuf.length
Code	isVerifiedStrictly ( i ) != thisBuf.length
Distance : 5

86
Tree	markStubUsed () != thisBuf.length
Code	markStubUsed () != thisBuf.length
Distance : 4

87
Tree	asPropertyMap ( i ) != thisBuf.length
Code	asPropertyMap ( i ) != thisBuf.length
Distance : 5

88
Tree	i . getDimension () != thisBuf.length
Code	i . getDimension () != thisBuf.length
Distance : 5

89
Tree	i . getVertices () != thisBuf.length
Code	i . getVertices () != thisBuf.length
Distance : 5

90
Tree	getNormalizedReferenceName ( i ) != thisBuf.length
Code	getNormalizedReferenceName ( i ) != thisBuf.length
Distance : 5

91
Tree	current.parent ( i ) != thisBuf.length
Code	current.parent ( i ) != thisBuf.length
Distance : 5

92
Tree	isSetterDef ( i ) != thisBuf.length
Code	isSetterDef ( i ) != thisBuf.length
Distance : 5

93
Tree	includesGlobals ( i ) != thisBuf.length
Code	includesGlobals ( i ) != thisBuf.length
Distance : 5

94
Tree	stubInfo () != thisBuf.length
Code	stubInfo () != thisBuf.length
Distance : 4

95
Tree	i . doubleToLongBits () != thisBuf.length
Code	i . doubleToLongBits () != thisBuf.length
Distance : 5

96
Tree	pivotRow ( i ) != thisBuf.length
Code	pivotRow ( i ) != thisBuf.length
Distance : 5

97
Tree	chromosomeRepresentation ( i ) != thisBuf.length
Code	chromosomeRepresentation ( i ) != thisBuf.length
Distance : 5

98
Tree	getPrototypeProperty () != thisBuf.length
Code	getPrototypeProperty () != thisBuf.length
Distance : 4

99
Tree	simpleQuote ( i ) != thisBuf.length
Code	simpleQuote ( i ) != thisBuf.length
Distance : 5

100
Tree	i . toBooleanObject () != thisBuf.length
Code	i . toBooleanObject () != thisBuf.length
Distance : 5

101
Tree	i . dateParser () != thisBuf.length
Code	i . dateParser () != thisBuf.length
Distance : 5

102
Tree	AstChange ( i ) != thisBuf.length
Code	AstChange ( i ) != thisBuf.length
Distance : 5

103
Tree	computeJacobian ( i ) != thisBuf.length
Code	computeJacobian ( i ) != thisBuf.length
Distance : 5

104
Tree	i . getInf () != thisBuf.length
Code	i . getInf () != thisBuf.length
Distance : 5

105
Tree	getQuotedString ( i ) != thisBuf.length
Code	getQuotedString ( i ) != thisBuf.length
Distance : 5

106
Tree	getFailures ( i ) != thisBuf.length
Code	getFailures ( i ) != thisBuf.length
Distance : 5

107
Tree	addWrapPartial ( i ) != thisBuf.length
Code	addWrapPartial ( i ) != thisBuf.length
Distance : 5

108
Tree	getRealEigenvalue ( i ) != thisBuf.length
Code	getRealEigenvalue ( i ) != thisBuf.length
Distance : 5

109
Tree	isDotPrototype () != thisBuf.length
Code	isDotPrototype () != thisBuf.length
Distance : 4

110
Tree	iChronology.MILLIS_PER_DAY () != thisBuf.length
Code	iChronology.MILLIS_PER_DAY () != thisBuf.length
Distance : 4

111
Tree	i . getAbsoluteAccuracy () != thisBuf.length
Code	i . getAbsoluteAccuracy () != thisBuf.length
Distance : 5

112
Tree	visitForIn () != thisBuf.length
Code	visitForIn () != thisBuf.length
Distance : 4

113
Tree	i . getRunCount () != thisBuf.length
Code	i . getRunCount () != thisBuf.length
Distance : 5

114
Tree	i . entrySet () != thisBuf.length
Code	i . entrySet () != thisBuf.length
Distance : 5

115
Tree	front ( i ) != thisBuf.length
Code	front ( i ) != thisBuf.length
Distance : 5

116
Tree	newEmptyClinitMethod ( i ) != thisBuf.length
Code	newEmptyClinitMethod ( i ) != thisBuf.length
Distance : 5

117
Tree	zb ( i ) != thisBuf.length
Code	zb ( i ) != thisBuf.length
Distance : 5

118
Tree	jacobianEvaluations ( i ) != thisBuf.length
Code	jacobianEvaluations ( i ) != thisBuf.length
Distance : 5

119
Tree	Cartesian2D.POSITIVE_INFINITY ( i ) != thisBuf.length
Code	Cartesian2D.POSITIVE_INFINITY ( i ) != thisBuf.length
Distance : 5

120
Tree	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN ( i ) != thisBuf.length
Code	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN ( i ) != thisBuf.length
Distance : 5

121
Tree	qNameRoot ( i ) != thisBuf.length
Code	qNameRoot ( i ) != thisBuf.length
Distance : 5

122
Tree	getSum ( i ) != thisBuf.length
Code	getSum ( i ) != thisBuf.length
Distance : 5

123
Tree	i == i
Code	i == i
Distance : 2

124
Tree	getOrderOfRegressors ( i ) != thisBuf.length
Code	getOrderOfRegressors ( i ) != thisBuf.length
Distance : 5

125
Tree	clusters ( i ) != thisBuf.length
Code	clusters ( i ) != thisBuf.length
Distance : 5

126
Tree	size == i
Code	size == i
Distance : 3

127
Tree	zval.length ( i ) != thisBuf.length
Code	zval.length ( i ) != thisBuf.length
Distance : 5

128
Tree	getRhs ( i ) != thisBuf.length
Code	getRhs ( i ) != thisBuf.length
Distance : 5

129
Tree	rightmostName ( i ) != thisBuf.length
Code	rightmostName ( i ) != thisBuf.length
Distance : 5

130
Tree	i . getZone () != thisBuf.length
Code	i . getZone () != thisBuf.length
Distance : 5

131
Tree	matchesSymbolContext ( i ) != thisBuf.length
Code	matchesSymbolContext ( i ) != thisBuf.length
Distance : 5

132
Tree	getUserHome () != thisBuf.length
Code	getUserHome () != thisBuf.length
Distance : 4

133
Tree	JsonFileSpec ( i ) != thisBuf.length
Code	JsonFileSpec ( i ) != thisBuf.length
Distance : 5

134
Tree	isTheFalsyType ( i ) != thisBuf.length
Code	isTheFalsyType ( i ) != thisBuf.length
Distance : 5

135
Tree	prevChild.next ( i ) != thisBuf.length
Code	prevChild.next ( i ) != thisBuf.length
Distance : 5

136
Tree	fnQualifiedName ( i ) != thisBuf.length
Code	fnQualifiedName ( i ) != thisBuf.length
Distance : 5

137
Tree	i . isSetterDef () != thisBuf.length
Code	i . isSetterDef () != thisBuf.length
Distance : 5

138
Tree	EliminationPass ( i ) != thisBuf.length
Code	EliminationPass ( i ) != thisBuf.length
Distance : 5

139
Tree	getLeapDurationField () != thisBuf.length
Code	getLeapDurationField () != thisBuf.length
Distance : 4

140
Tree	tok2 ( i ) != thisBuf.length
Code	tok2 ( i ) != thisBuf.length
Distance : 5

141
Tree	isPrototypeMethod ( i ) != thisBuf.length
Code	isPrototypeMethod ( i ) != thisBuf.length
Distance : 5

142
Tree	extraInterfacesCannotContainMockedType () != thisBuf.length
Code	extraInterfacesCannotContainMockedType () != thisBuf.length
Distance : 4

143
Tree	isSymbol () != thisBuf.length
Code	isSymbol () != thisBuf.length
Distance : 4

144
Tree	isDeleted ( i ) != thisBuf.length
Code	isDeleted ( i ) != thisBuf.length
Distance : 5

145
Tree	isCreatable ( i ) != thisBuf.length
Code	isCreatable ( i ) != thisBuf.length
Distance : 5

146
Tree	getProperNumerator ( i ) != thisBuf.length
Code	getProperNumerator ( i ) != thisBuf.length
Distance : 5

147
Tree	astValidationEnabled () != thisBuf.length
Code	astValidationEnabled () != thisBuf.length
Distance : 4

148
Tree	getInf () != thisBuf.length
Code	getInf () != thisBuf.length
Distance : 4

149
Tree	getMinArity ( i ) != thisBuf.length
Code	getMinArity ( i ) != thisBuf.length
Distance : 5

150
Tree	i . sinh () != thisBuf.length
Code	i . sinh () != thisBuf.length
Distance : 5

151
Tree	i . getIgnoredMatcher () != thisBuf.length
Code	i . getIgnoredMatcher () != thisBuf.length
Distance : 5

152
Tree	isTypeScriptSpecificKeyword ( i ) != thisBuf.length
Code	isTypeScriptSpecificKeyword ( i ) != thisBuf.length
Distance : 5

153
Tree	isValidAliasRhs ( i ) != thisBuf.length
Code	isValidAliasRhs ( i ) != thisBuf.length
Distance : 5

154
Tree	getEnums ( i ) != thisBuf.length
Code	getEnums ( i ) != thisBuf.length
Distance : 5

155
Tree	getTaskCount ( i ) != thisBuf.length
Code	getTaskCount ( i ) != thisBuf.length
Distance : 5

156
Tree	microsphereData ( i ) != thisBuf.length
Code	microsphereData ( i ) != thisBuf.length
Distance : 5

157
Tree	getExportPostfix ( i ) != thisBuf.length
Code	getExportPostfix ( i ) != thisBuf.length
Distance : 5

158
Tree	shouldDisambiguateProperties () != thisBuf.length
Code	shouldDisambiguateProperties () != thisBuf.length
Distance : 4

159
Tree	createDouble ( i ) != thisBuf.length
Code	createDouble ( i ) != thisBuf.length
Distance : 5

160
Tree	maybeWarn ( i ) != thisBuf.length
Code	maybeWarn ( i ) != thisBuf.length
Distance : 5

161
Tree	i . identityHashCode () != thisBuf.length
Code	i . identityHashCode () != thisBuf.length
Distance : 5

162
Tree	i . currentTimeMillis () != thisBuf.length
Code	i . currentTimeMillis () != thisBuf.length
Distance : 5

163
Tree	Entities.ISO8859_1_ARRAY_LENGTH () != thisBuf.length
Code	Entities.ISO8859_1_ARRAY_LENGTH () != thisBuf.length
Distance : 4

164
Tree	getLowerDate () != thisBuf.length
Code	getLowerDate () != thisBuf.length
Distance : 4

165
Tree	i . isClassMembers () != thisBuf.length
Code	i . isClassMembers () != thisBuf.length
Distance : 5

166
Tree	doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Code	doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Distance : 4

167
Tree	reducedPoints ( i ) != thisBuf.length
Code	reducedPoints ( i ) != thisBuf.length
Distance : 5

168
Tree	matchesObjectContext ( i ) != thisBuf.length
Code	matchesObjectContext ( i ) != thisBuf.length
Distance : 5

169
Tree	setRange ( i ) != thisBuf.length
Code	setRange ( i ) != thisBuf.length
Distance : 5

170
Tree	i == size
Code	i == size
Distance : 1

171
Tree	createLineRegion ( i ) != thisBuf.length
Code	createLineRegion ( i ) != thisBuf.length
Distance : 5

172
Tree	ARROW_FN ( i ) != thisBuf.length
Code	ARROW_FN ( i ) != thisBuf.length
Distance : 5

173
Tree	getDelimiterMatcher ( i ) != thisBuf.length
Code	getDelimiterMatcher ( i ) != thisBuf.length
Distance : 5

174
Tree	eras ( i ) != thisBuf.length
Code	eras ( i ) != thisBuf.length
Distance : 5

175
Tree	i . getPoint () != thisBuf.length
Code	i . getPoint () != thisBuf.length
Distance : 5

176
Tree	notAMockPassedToWhenMethod ( i ) != thisBuf.length
Code	notAMockPassedToWhenMethod ( i ) != thisBuf.length
Distance : 5

177
Tree	testMissingModuleDependencySkipNonStrict ( i ) != thisBuf.length
Code	testMissingModuleDependencySkipNonStrict ( i ) != thisBuf.length
Distance : 5

178
Tree	assertPassOrder ( i ) != thisBuf.length
Code	assertPassOrder ( i ) != thisBuf.length
Distance : 5

179
Tree	updateGlobalNameDeclaration ( i ) != thisBuf.length
Code	updateGlobalNameDeclaration ( i ) != thisBuf.length
Distance : 5

180
Tree	isLoggable ( i ) != thisBuf.length
Code	isLoggable ( i ) != thisBuf.length
Distance : 5

181
Tree	decompMatrix ( i ) != thisBuf.length
Code	decompMatrix ( i ) != thisBuf.length
Distance : 5

182
Tree	CharUtils.CR ( i ) != thisBuf.length
Code	CharUtils.CR ( i ) != thisBuf.length
Distance : 5

183
Tree	i . isNameDeclaration () != thisBuf.length
Code	i . isNameDeclaration () != thisBuf.length
Distance : 5

184
Tree	isNotEmpty ( i ) != thisBuf.length
Code	isNotEmpty ( i ) != thisBuf.length
Distance : 5

185
Tree	DisambiguatePropertiesTest ( i ) != thisBuf.length
Code	DisambiguatePropertiesTest ( i ) != thisBuf.length
Distance : 5

186
Tree	IncrementalCheckMode.OFF ( i ) != thisBuf.length
Code	IncrementalCheckMode.OFF ( i ) != thisBuf.length
Distance : 5

187
Tree	StandardCategoryToolTipGenerator ( i ) != thisBuf.length
Code	StandardCategoryToolTipGenerator ( i ) != thisBuf.length
Distance : 5

188
Tree	ArrayUtils.EMPTY_STRING_ARRAY ( i ) != thisBuf.length
Code	ArrayUtils.EMPTY_STRING_ARRAY ( i ) != thisBuf.length
Distance : 5

189
Tree	constructor_instantiation ( i ) != thisBuf.length
Code	constructor_instantiation ( i ) != thisBuf.length
Distance : 5

190
Tree	FunctionScopeBuilder ( i ) != thisBuf.length
Code	FunctionScopeBuilder ( i ) != thisBuf.length
Distance : 5

191
Tree	shouldPrint ( i ) != thisBuf.length
Code	shouldPrint ( i ) != thisBuf.length
Distance : 5

192
Tree	i . doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Code	i . doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Distance : 5

193
Tree	lhsOfForInLoop ( i ) != thisBuf.length
Code	lhsOfForInLoop ( i ) != thisBuf.length
Distance : 5

194
Tree	newEnd ( i ) != thisBuf.length
Code	newEnd ( i ) != thisBuf.length
Distance : 5

195
Tree	i / i
Code	i / i
Distance : 2

196
Tree	SecantSolver ( i ) != thisBuf.length
Code	SecantSolver ( i ) != thisBuf.length
Distance : 5

197
Tree	this == i
Code	this == i
Distance : 3

198
Tree	i < thisBuf.length instance
Code	i < thisBuf.length instance
Distance : 2

199
Tree	i . isStringKey () != thisBuf.length
Code	i . isStringKey () != thisBuf.length
Distance : 5

========================================================================


========================================================================
Example Number: 36
Parent Code is: 
i < thisBuf.length
-------------------------------------------------------------------------------
Child code is: 
i < this . size
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (40{val=thisBuf.length})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (800{val=i}) (230{val=<}) (22 (315{val=this}) (235{val=.}) (800{val=size}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/60/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	i > NUMBER_CONSTANT
Code	i > NUMBER_CONSTANT
Distance : 4

1
Tree	i . getCanonicalName () != thisBuf.length
Code	i . getCanonicalName () != thisBuf.length
Distance : 5

2
Tree	current.parent () != thisBuf.length
Code	current.parent () != thisBuf.length
Distance : 5

3
Tree	i . longValue () != thisBuf.length
Code	i . longValue () != thisBuf.length
Distance : 5

4
Tree	isSetterDef () != thisBuf.length
Code	isSetterDef () != thisBuf.length
Distance : 5

5
Tree	includesGlobals () != thisBuf.length
Code	includesGlobals () != thisBuf.length
Distance : 5

6
Tree	i . nextBoolean () != thisBuf.length
Code	i . nextBoolean () != thisBuf.length
Distance : 5

7
Tree	i . forName () != thisBuf.length
Code	i . forName () != thisBuf.length
Distance : 5

8
Tree	isTypecheckingEnabled () != thisBuf.length
Code	isTypecheckingEnabled () != thisBuf.length
Distance : 5

9
Tree	toPrinter () != thisBuf.length
Code	toPrinter () != thisBuf.length
Distance : 5

10
Tree	getNormalizedReferenceName () != thisBuf.length
Code	getNormalizedReferenceName () != thisBuf.length
Distance : 5

11
Tree	i . isAsyncContext () != thisBuf.length
Code	i . isAsyncContext () != thisBuf.length
Distance : 5

12
Tree	getInf ( i ) != thisBuf.length
Code	getInf ( i ) != thisBuf.length
Distance : 6

13
Tree	i . getRightElement () != thisBuf.length
Code	i . getRightElement () != thisBuf.length
Distance : 5

14
Tree	i . toComparison () != thisBuf.length
Code	i . toComparison () != thisBuf.length
Distance : 5

15
Tree	shouldDisambiguateProperties ( i ) != thisBuf.length
Code	shouldDisambiguateProperties ( i ) != thisBuf.length
Distance : 6

16
Tree	getLowerDate ( i ) != thisBuf.length
Code	getLowerDate ( i ) != thisBuf.length
Distance : 6

17
Tree	Entities.ISO8859_1_ARRAY_LENGTH ( i ) != thisBuf.length
Code	Entities.ISO8859_1_ARRAY_LENGTH ( i ) != thisBuf.length
Distance : 6

18
Tree	doesFunctionReferenceOwnArgumentsObject ( i ) != thisBuf.length
Code	doesFunctionReferenceOwnArgumentsObject ( i ) != thisBuf.length
Distance : 6

19
Tree	getPrototypeProperty ( i ) != thisBuf.length
Code	getPrototypeProperty ( i ) != thisBuf.length
Distance : 6

20
Tree	i . factorial () != thisBuf.length
Code	i . factorial () != thisBuf.length
Distance : 5

21
Tree	i . isBuiltinObject () != thisBuf.length
Code	i . isBuiltinObject () != thisBuf.length
Distance : 5

22
Tree	i . emptyList () != thisBuf.length
Code	i . emptyList () != thisBuf.length
Distance : 5

23
Tree	i . isVerifiedStrictly () != thisBuf.length
Code	i . isVerifiedStrictly () != thisBuf.length
Distance : 5

24
Tree	astValidationEnabled ( i ) != thisBuf.length
Code	astValidationEnabled ( i ) != thisBuf.length
Distance : 6

25
Tree	i . IEEEremainder () != thisBuf.length
Code	i . IEEEremainder () != thisBuf.length
Distance : 5

26
Tree	that.id () != thisBuf.length
Code	that.id () != thisBuf.length
Distance : 5

27
Tree	isOutlineVisible ( i ) != thisBuf.length
Code	isOutlineVisible ( i ) != thisBuf.length
Distance : 6

28
Tree	isAssignmentToPrototype ( i ) != thisBuf.length
Code	isAssignmentToPrototype ( i ) != thisBuf.length
Distance : 6

29
Tree	mockable () != thisBuf.length
Code	mockable () != thisBuf.length
Distance : 5

30
Tree	i . isExprResult () != thisBuf.length
Code	i . isExprResult () != thisBuf.length
Distance : 5

31
Tree	i . charMatcher () != thisBuf.length
Code	i . charMatcher () != thisBuf.length
Distance : 5

32
Tree	getUserHome ( i ) != thisBuf.length
Code	getUserHome ( i ) != thisBuf.length
Distance : 6

33
Tree	getLeapDurationField ( i ) != thisBuf.length
Code	getLeapDurationField ( i ) != thisBuf.length
Distance : 6

34
Tree	isSymbol ( i ) != thisBuf.length
Code	isSymbol ( i ) != thisBuf.length
Distance : 6

35
Tree	isRadiusMinorGridlinesVisible () != thisBuf.length
Code	isRadiusMinorGridlinesVisible () != thisBuf.length
Distance : 5

36
Tree	extraInterfacesCannotContainMockedType ( i ) != thisBuf.length
Code	extraInterfacesCannotContainMockedType ( i ) != thisBuf.length
Distance : 6

37
Tree	newVar () != thisBuf.length
Code	newVar () != thisBuf.length
Distance : 5

38
Tree	searchArray () != thisBuf.length
Code	searchArray () != thisBuf.length
Distance : 5

39
Tree	entrySet () != thisBuf.length
Code	entrySet () != thisBuf.length
Distance : 5

40
Tree	isVerifiedStrictly () != thisBuf.length
Code	isVerifiedStrictly () != thisBuf.length
Distance : 5

41
Tree	asPropertyMap () != thisBuf.length
Code	asPropertyMap () != thisBuf.length
Distance : 5

42
Tree	isConstDeclaration () != thisBuf.length
Code	isConstDeclaration () != thisBuf.length
Distance : 5

43
Tree	visitForIn ( i ) != thisBuf.length
Code	visitForIn ( i ) != thisBuf.length
Distance : 6

44
Tree	isDotPrototype ( i ) != thisBuf.length
Code	isDotPrototype ( i ) != thisBuf.length
Distance : 6

45
Tree	iChronology.MILLIS_PER_DAY ( i ) != thisBuf.length
Code	iChronology.MILLIS_PER_DAY ( i ) != thisBuf.length
Distance : 6

46
Tree	i . getEpsilon () != thisBuf.length
Code	i . getEpsilon () != thisBuf.length
Distance : 5

47
Tree	i . getDataRef () != thisBuf.length
Code	i . getDataRef () != thisBuf.length
Distance : 5

48
Tree	i . getGeneratorUpperBounds () != thisBuf.length
Code	i . getGeneratorUpperBounds () != thisBuf.length
Distance : 5

49
Tree	SECONDS_MILLIS () != thisBuf.length
Code	SECONDS_MILLIS () != thisBuf.length
Distance : 5

50
Tree	size > NUMBER_CONSTANT
Code	size > NUMBER_CONSTANT
Distance : 5

51
Tree	i . abs () != thisBuf.length
Code	i . abs () != thisBuf.length
Distance : 5

52
Tree	skipStringLiteralEscapeSequence () != thisBuf.length
Code	skipStringLiteralEscapeSequence () != thisBuf.length
Distance : 5

53
Tree	isBuiltinObject () != thisBuf.length
Code	isBuiltinObject () != thisBuf.length
Distance : 5

54
Tree	SECONDS_MILLIS ( i ) != thisBuf.length
Code	SECONDS_MILLIS ( i ) != thisBuf.length
Distance : 6

55
Tree	i . copySelf () != thisBuf.length
Code	i . copySelf () != thisBuf.length
Distance : 5

56
Tree	i . isStruct () != thisBuf.length
Code	i . isStruct () != thisBuf.length
Distance : 5

57
Tree	getIgnoredMatcher () != thisBuf.length
Code	getIgnoredMatcher () != thisBuf.length
Distance : 5

58
Tree	markStubUsed ( i ) != thisBuf.length
Code	markStubUsed ( i ) != thisBuf.length
Distance : 6

59
Tree	i . parseDouble () != thisBuf.length
Code	i . parseDouble () != thisBuf.length
Distance : 5

60
Tree	i . getBeta () != thisBuf.length
Code	i . getBeta () != thisBuf.length
Distance : 5

61
Tree	i . stubInfo () != thisBuf.length
Code	i . stubInfo () != thisBuf.length
Distance : 5

62
Tree	skipStringLiteralEscapeSequence ( i ) != thisBuf.length
Code	skipStringLiteralEscapeSequence ( i ) != thisBuf.length
Distance : 6

63
Tree	isBuiltinObject ( i ) != thisBuf.length
Code	isBuiltinObject ( i ) != thisBuf.length
Distance : 6

64
Tree	this == size
Code	this == size
Distance : 3

65
Tree	getIgnoredMatcher ( i ) != thisBuf.length
Code	getIgnoredMatcher ( i ) != thisBuf.length
Distance : 6

66
Tree	i / size
Code	i / size
Distance : 3

67
Tree	i . valueOf () != thisBuf.length
Code	i . valueOf () != thisBuf.length
Distance : 5

68
Tree	i == thisBuf.length
Code	i == thisBuf.length
Distance : 4

69
Tree	i < thisBuf.length
Code	i < thisBuf.length
Distance : 3

70
Tree	stubInfo ( i ) != thisBuf.length
Code	stubInfo ( i ) != thisBuf.length
Distance : 6

71
Tree	i . intValue () != thisBuf.length
Code	i . intValue () != thisBuf.length
Distance : 5

72
Tree	toPrinter ( i ) != thisBuf.length
Code	toPrinter ( i ) != thisBuf.length
Distance : 6

73
Tree	isTypecheckingEnabled ( i ) != thisBuf.length
Code	isTypecheckingEnabled ( i ) != thisBuf.length
Distance : 6

74
Tree	i . natural () != thisBuf.length
Code	i . natural () != thisBuf.length
Distance : 5

75
Tree	that.id ( i ) != thisBuf.length
Code	that.id ( i ) != thisBuf.length
Distance : 6

76
Tree	mockable ( i ) != thisBuf.length
Code	mockable ( i ) != thisBuf.length
Distance : 6

77
Tree	i . getPrinter () != thisBuf.length
Code	i . getPrinter () != thisBuf.length
Distance : 5

78
Tree	isRadiusMinorGridlinesVisible ( i ) != thisBuf.length
Code	isRadiusMinorGridlinesVisible ( i ) != thisBuf.length
Distance : 6

79
Tree	i . hashCode () != thisBuf.length
Code	i . hashCode () != thisBuf.length
Distance : 5

80
Tree	newVar ( i ) != thisBuf.length
Code	newVar ( i ) != thisBuf.length
Distance : 6

81
Tree	searchArray ( i ) != thisBuf.length
Code	searchArray ( i ) != thisBuf.length
Distance : 6

82
Tree	entrySet ( i ) != thisBuf.length
Code	entrySet ( i ) != thisBuf.length
Distance : 6

83
Tree	i . getMatchers () != thisBuf.length
Code	i . getMatchers () != thisBuf.length
Distance : 5

84
Tree	isConstDeclaration ( i ) != thisBuf.length
Code	isConstDeclaration ( i ) != thisBuf.length
Distance : 6

85
Tree	isVerifiedStrictly ( i ) != thisBuf.length
Code	isVerifiedStrictly ( i ) != thisBuf.length
Distance : 6

86
Tree	markStubUsed () != thisBuf.length
Code	markStubUsed () != thisBuf.length
Distance : 5

87
Tree	asPropertyMap ( i ) != thisBuf.length
Code	asPropertyMap ( i ) != thisBuf.length
Distance : 6

88
Tree	i . getDimension () != thisBuf.length
Code	i . getDimension () != thisBuf.length
Distance : 5

89
Tree	i . getVertices () != thisBuf.length
Code	i . getVertices () != thisBuf.length
Distance : 5

90
Tree	getNormalizedReferenceName ( i ) != thisBuf.length
Code	getNormalizedReferenceName ( i ) != thisBuf.length
Distance : 6

91
Tree	current.parent ( i ) != thisBuf.length
Code	current.parent ( i ) != thisBuf.length
Distance : 6

92
Tree	isSetterDef ( i ) != thisBuf.length
Code	isSetterDef ( i ) != thisBuf.length
Distance : 6

93
Tree	includesGlobals ( i ) != thisBuf.length
Code	includesGlobals ( i ) != thisBuf.length
Distance : 6

94
Tree	stubInfo () != thisBuf.length
Code	stubInfo () != thisBuf.length
Distance : 5

95
Tree	i . doubleToLongBits () != thisBuf.length
Code	i . doubleToLongBits () != thisBuf.length
Distance : 5

96
Tree	pivotRow ( i ) != thisBuf.length
Code	pivotRow ( i ) != thisBuf.length
Distance : 6

97
Tree	chromosomeRepresentation ( i ) != thisBuf.length
Code	chromosomeRepresentation ( i ) != thisBuf.length
Distance : 6

98
Tree	getPrototypeProperty () != thisBuf.length
Code	getPrototypeProperty () != thisBuf.length
Distance : 5

99
Tree	simpleQuote ( i ) != thisBuf.length
Code	simpleQuote ( i ) != thisBuf.length
Distance : 6

100
Tree	i . toBooleanObject () != thisBuf.length
Code	i . toBooleanObject () != thisBuf.length
Distance : 5

101
Tree	i . dateParser () != thisBuf.length
Code	i . dateParser () != thisBuf.length
Distance : 5

102
Tree	AstChange ( i ) != thisBuf.length
Code	AstChange ( i ) != thisBuf.length
Distance : 6

103
Tree	computeJacobian ( i ) != thisBuf.length
Code	computeJacobian ( i ) != thisBuf.length
Distance : 6

104
Tree	i . getInf () != thisBuf.length
Code	i . getInf () != thisBuf.length
Distance : 5

105
Tree	getQuotedString ( i ) != thisBuf.length
Code	getQuotedString ( i ) != thisBuf.length
Distance : 6

106
Tree	getFailures ( i ) != thisBuf.length
Code	getFailures ( i ) != thisBuf.length
Distance : 6

107
Tree	addWrapPartial ( i ) != thisBuf.length
Code	addWrapPartial ( i ) != thisBuf.length
Distance : 6

108
Tree	getRealEigenvalue ( i ) != thisBuf.length
Code	getRealEigenvalue ( i ) != thisBuf.length
Distance : 6

109
Tree	isDotPrototype () != thisBuf.length
Code	isDotPrototype () != thisBuf.length
Distance : 5

110
Tree	iChronology.MILLIS_PER_DAY () != thisBuf.length
Code	iChronology.MILLIS_PER_DAY () != thisBuf.length
Distance : 5

111
Tree	i . getAbsoluteAccuracy () != thisBuf.length
Code	i . getAbsoluteAccuracy () != thisBuf.length
Distance : 5

112
Tree	visitForIn () != thisBuf.length
Code	visitForIn () != thisBuf.length
Distance : 5

113
Tree	i . getRunCount () != thisBuf.length
Code	i . getRunCount () != thisBuf.length
Distance : 5

114
Tree	i . entrySet () != thisBuf.length
Code	i . entrySet () != thisBuf.length
Distance : 5

115
Tree	front ( i ) != thisBuf.length
Code	front ( i ) != thisBuf.length
Distance : 6

116
Tree	newEmptyClinitMethod ( i ) != thisBuf.length
Code	newEmptyClinitMethod ( i ) != thisBuf.length
Distance : 6

117
Tree	zb ( i ) != thisBuf.length
Code	zb ( i ) != thisBuf.length
Distance : 6

118
Tree	jacobianEvaluations ( i ) != thisBuf.length
Code	jacobianEvaluations ( i ) != thisBuf.length
Distance : 6

119
Tree	Cartesian2D.POSITIVE_INFINITY ( i ) != thisBuf.length
Code	Cartesian2D.POSITIVE_INFINITY ( i ) != thisBuf.length
Distance : 6

120
Tree	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN ( i ) != thisBuf.length
Code	LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN ( i ) != thisBuf.length
Distance : 6

121
Tree	qNameRoot ( i ) != thisBuf.length
Code	qNameRoot ( i ) != thisBuf.length
Distance : 6

122
Tree	getSum ( i ) != thisBuf.length
Code	getSum ( i ) != thisBuf.length
Distance : 6

123
Tree	i == i
Code	i == i
Distance : 4

124
Tree	getOrderOfRegressors ( i ) != thisBuf.length
Code	getOrderOfRegressors ( i ) != thisBuf.length
Distance : 6

125
Tree	clusters ( i ) != thisBuf.length
Code	clusters ( i ) != thisBuf.length
Distance : 6

126
Tree	size == i
Code	size == i
Distance : 5

127
Tree	zval.length ( i ) != thisBuf.length
Code	zval.length ( i ) != thisBuf.length
Distance : 6

128
Tree	getRhs ( i ) != thisBuf.length
Code	getRhs ( i ) != thisBuf.length
Distance : 6

129
Tree	rightmostName ( i ) != thisBuf.length
Code	rightmostName ( i ) != thisBuf.length
Distance : 6

130
Tree	i . getZone () != thisBuf.length
Code	i . getZone () != thisBuf.length
Distance : 5

131
Tree	matchesSymbolContext ( i ) != thisBuf.length
Code	matchesSymbolContext ( i ) != thisBuf.length
Distance : 6

132
Tree	getUserHome () != thisBuf.length
Code	getUserHome () != thisBuf.length
Distance : 5

133
Tree	JsonFileSpec ( i ) != thisBuf.length
Code	JsonFileSpec ( i ) != thisBuf.length
Distance : 6

134
Tree	isTheFalsyType ( i ) != thisBuf.length
Code	isTheFalsyType ( i ) != thisBuf.length
Distance : 6

135
Tree	prevChild.next ( i ) != thisBuf.length
Code	prevChild.next ( i ) != thisBuf.length
Distance : 6

136
Tree	fnQualifiedName ( i ) != thisBuf.length
Code	fnQualifiedName ( i ) != thisBuf.length
Distance : 6

137
Tree	i . isSetterDef () != thisBuf.length
Code	i . isSetterDef () != thisBuf.length
Distance : 5

138
Tree	EliminationPass ( i ) != thisBuf.length
Code	EliminationPass ( i ) != thisBuf.length
Distance : 6

139
Tree	getLeapDurationField () != thisBuf.length
Code	getLeapDurationField () != thisBuf.length
Distance : 5

140
Tree	tok2 ( i ) != thisBuf.length
Code	tok2 ( i ) != thisBuf.length
Distance : 6

141
Tree	isPrototypeMethod ( i ) != thisBuf.length
Code	isPrototypeMethod ( i ) != thisBuf.length
Distance : 6

142
Tree	extraInterfacesCannotContainMockedType () != thisBuf.length
Code	extraInterfacesCannotContainMockedType () != thisBuf.length
Distance : 5

143
Tree	isSymbol () != thisBuf.length
Code	isSymbol () != thisBuf.length
Distance : 5

144
Tree	isDeleted ( i ) != thisBuf.length
Code	isDeleted ( i ) != thisBuf.length
Distance : 6

145
Tree	isCreatable ( i ) != thisBuf.length
Code	isCreatable ( i ) != thisBuf.length
Distance : 6

146
Tree	getProperNumerator ( i ) != thisBuf.length
Code	getProperNumerator ( i ) != thisBuf.length
Distance : 6

147
Tree	astValidationEnabled () != thisBuf.length
Code	astValidationEnabled () != thisBuf.length
Distance : 5

148
Tree	getInf () != thisBuf.length
Code	getInf () != thisBuf.length
Distance : 5

149
Tree	getMinArity ( i ) != thisBuf.length
Code	getMinArity ( i ) != thisBuf.length
Distance : 6

150
Tree	i . sinh () != thisBuf.length
Code	i . sinh () != thisBuf.length
Distance : 5

151
Tree	i . getIgnoredMatcher () != thisBuf.length
Code	i . getIgnoredMatcher () != thisBuf.length
Distance : 5

152
Tree	isTypeScriptSpecificKeyword ( i ) != thisBuf.length
Code	isTypeScriptSpecificKeyword ( i ) != thisBuf.length
Distance : 6

153
Tree	isValidAliasRhs ( i ) != thisBuf.length
Code	isValidAliasRhs ( i ) != thisBuf.length
Distance : 6

154
Tree	getEnums ( i ) != thisBuf.length
Code	getEnums ( i ) != thisBuf.length
Distance : 6

155
Tree	getTaskCount ( i ) != thisBuf.length
Code	getTaskCount ( i ) != thisBuf.length
Distance : 6

156
Tree	microsphereData ( i ) != thisBuf.length
Code	microsphereData ( i ) != thisBuf.length
Distance : 6

157
Tree	getExportPostfix ( i ) != thisBuf.length
Code	getExportPostfix ( i ) != thisBuf.length
Distance : 6

158
Tree	shouldDisambiguateProperties () != thisBuf.length
Code	shouldDisambiguateProperties () != thisBuf.length
Distance : 5

159
Tree	createDouble ( i ) != thisBuf.length
Code	createDouble ( i ) != thisBuf.length
Distance : 6

160
Tree	maybeWarn ( i ) != thisBuf.length
Code	maybeWarn ( i ) != thisBuf.length
Distance : 6

161
Tree	i . identityHashCode () != thisBuf.length
Code	i . identityHashCode () != thisBuf.length
Distance : 5

162
Tree	i . currentTimeMillis () != thisBuf.length
Code	i . currentTimeMillis () != thisBuf.length
Distance : 5

163
Tree	Entities.ISO8859_1_ARRAY_LENGTH () != thisBuf.length
Code	Entities.ISO8859_1_ARRAY_LENGTH () != thisBuf.length
Distance : 5

164
Tree	getLowerDate () != thisBuf.length
Code	getLowerDate () != thisBuf.length
Distance : 5

165
Tree	i . isClassMembers () != thisBuf.length
Code	i . isClassMembers () != thisBuf.length
Distance : 5

166
Tree	doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Code	doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Distance : 5

167
Tree	reducedPoints ( i ) != thisBuf.length
Code	reducedPoints ( i ) != thisBuf.length
Distance : 6

168
Tree	matchesObjectContext ( i ) != thisBuf.length
Code	matchesObjectContext ( i ) != thisBuf.length
Distance : 6

169
Tree	setRange ( i ) != thisBuf.length
Code	setRange ( i ) != thisBuf.length
Distance : 6

170
Tree	i == size
Code	i == size
Distance : 3

171
Tree	createLineRegion ( i ) != thisBuf.length
Code	createLineRegion ( i ) != thisBuf.length
Distance : 6

172
Tree	ARROW_FN ( i ) != thisBuf.length
Code	ARROW_FN ( i ) != thisBuf.length
Distance : 6

173
Tree	getDelimiterMatcher ( i ) != thisBuf.length
Code	getDelimiterMatcher ( i ) != thisBuf.length
Distance : 6

174
Tree	eras ( i ) != thisBuf.length
Code	eras ( i ) != thisBuf.length
Distance : 6

175
Tree	i . getPoint () != thisBuf.length
Code	i . getPoint () != thisBuf.length
Distance : 5

176
Tree	notAMockPassedToWhenMethod ( i ) != thisBuf.length
Code	notAMockPassedToWhenMethod ( i ) != thisBuf.length
Distance : 6

177
Tree	testMissingModuleDependencySkipNonStrict ( i ) != thisBuf.length
Code	testMissingModuleDependencySkipNonStrict ( i ) != thisBuf.length
Distance : 6

178
Tree	assertPassOrder ( i ) != thisBuf.length
Code	assertPassOrder ( i ) != thisBuf.length
Distance : 6

179
Tree	updateGlobalNameDeclaration ( i ) != thisBuf.length
Code	updateGlobalNameDeclaration ( i ) != thisBuf.length
Distance : 6

180
Tree	isLoggable ( i ) != thisBuf.length
Code	isLoggable ( i ) != thisBuf.length
Distance : 6

181
Tree	decompMatrix ( i ) != thisBuf.length
Code	decompMatrix ( i ) != thisBuf.length
Distance : 6

182
Tree	CharUtils.CR ( i ) != thisBuf.length
Code	CharUtils.CR ( i ) != thisBuf.length
Distance : 6

183
Tree	i . isNameDeclaration () != thisBuf.length
Code	i . isNameDeclaration () != thisBuf.length
Distance : 5

184
Tree	isNotEmpty ( i ) != thisBuf.length
Code	isNotEmpty ( i ) != thisBuf.length
Distance : 6

185
Tree	DisambiguatePropertiesTest ( i ) != thisBuf.length
Code	DisambiguatePropertiesTest ( i ) != thisBuf.length
Distance : 6

186
Tree	IncrementalCheckMode.OFF ( i ) != thisBuf.length
Code	IncrementalCheckMode.OFF ( i ) != thisBuf.length
Distance : 6

187
Tree	StandardCategoryToolTipGenerator ( i ) != thisBuf.length
Code	StandardCategoryToolTipGenerator ( i ) != thisBuf.length
Distance : 6

188
Tree	ArrayUtils.EMPTY_STRING_ARRAY ( i ) != thisBuf.length
Code	ArrayUtils.EMPTY_STRING_ARRAY ( i ) != thisBuf.length
Distance : 6

189
Tree	constructor_instantiation ( i ) != thisBuf.length
Code	constructor_instantiation ( i ) != thisBuf.length
Distance : 6

190
Tree	FunctionScopeBuilder ( i ) != thisBuf.length
Code	FunctionScopeBuilder ( i ) != thisBuf.length
Distance : 6

191
Tree	shouldPrint ( i ) != thisBuf.length
Code	shouldPrint ( i ) != thisBuf.length
Distance : 6

192
Tree	i . doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Code	i . doesFunctionReferenceOwnArgumentsObject () != thisBuf.length
Distance : 5

193
Tree	lhsOfForInLoop ( i ) != thisBuf.length
Code	lhsOfForInLoop ( i ) != thisBuf.length
Distance : 6

194
Tree	newEnd ( i ) != thisBuf.length
Code	newEnd ( i ) != thisBuf.length
Distance : 6

195
Tree	i / i
Code	i / i
Distance : 4

196
Tree	SecantSolver ( i ) != thisBuf.length
Code	SecantSolver ( i ) != thisBuf.length
Distance : 6

197
Tree	this == i
Code	this == i
Distance : 4

198
Tree	i < thisBuf.length instance
Code	i < thisBuf.length instance
Distance : 3

199
Tree	i . isStringKey () != thisBuf.length
Code	i . isStringKey () != thisBuf.length
Distance : 5

========================================================================


========================================================================
Example Number: 37
Parent Code is: 
{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ str . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=str}) (235{val=.}) (802{val=getChars}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=strLen}) (234{val=,}) (800{val=buffer}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (800{val=str}) (235{val=.}) (802{val=getChars}) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=width}) (234{val=,}) (800{val=buffer}) (234{val=,}) (800{val=size}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/59/parent/src_java_org_apache_commons_lang_text_StrBuilder.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ str . getChars ( null , strLen , buffer , size ) ; }
Code	{ str . getChars ( null , strLen , buffer , size ) ; }
Distance : 2

1
Tree	{ str . getChars ( NUMBER_CONSTANT , str , buffer , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , buffer , strLen ) ; }
Distance : 2

2
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Distance : 3

3
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Distance : 3

4
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Distance : 3

5
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , str , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , str , size ) ; }
Distance : 2

6
Tree	{ str . getChars ( NUMBER_CONSTANT , str , str , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , str , str ) ; }
Distance : 3

7
Tree	{ buffer . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Distance : 2

8
Tree	{ str . getChars ( NUMBER_CONSTANT , str , str , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , str , buffer ) ; }
Distance : 3

9
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , size , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , size , buffer ) ; }
Distance : 3

10
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Distance : 3

11
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Distance : 3

12
Tree	{ size . getChars ( NUMBER_CONSTANT , str , strLen , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , strLen , size ) ; }
Distance : 3

13
Tree	{ str . getChars ( NUMBER_CONSTANT , str , strLen , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , strLen , size ) ; }
Distance : 2

14
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , str , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , str , buffer ) ; }
Distance : 3

15
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Distance : 2

16
Tree	{ str . getChars ( str , getChars () , this ) ; } verify
Code	{ str . getChars ( str , getChars () , this ) ; } verify
Distance : 6

17
Tree	{ str . getChars ( str , getChars () , this ) ; } c
Code	{ str . getChars ( str , getChars () , this ) ; } c
Distance : 6

18
Tree	{ str . getChars ( str , getChars () , this ) ; } lines
Code	{ str . getChars ( str , getChars () , this ) ; } lines
Distance : 6

19
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Distance : 3

20
Tree	{ str . getChars ( str , getChars () , this ) ; } v
Code	{ str . getChars ( str , getChars () , this ) ; } v
Distance : 6

21
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Distance : 3

22
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , size , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , size , str ) ; }
Distance : 3

23
Tree	{ size . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Distance : 4

24
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Distance : 4

25
Tree	{ str . getChars ( NUMBER_CONSTANT , size , size , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , size , buffer ) ; }
Distance : 3

26
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Distance : 4

27
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , strLen , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , strLen , strLen ) ; }
Distance : 3

28
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , width ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , width ) ; }
Distance : 3

29
Tree	{ size . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Distance : 3

30
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Distance : 4

31
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Distance : 2

32
Tree	{ strLen . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Distance : 3

33
Tree	{ width . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Code	{ width . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Distance : 3

34
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , buffer ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , buffer ) ; }
Distance : 4

35
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , str ) ; }
Distance : 3

36
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , buffer ) ; }
Distance : 3

37
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , str ) ; }
Distance : 2

38
Tree	{ str . getChars ( NUMBER_CONSTANT , str , size , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , size , size ) ; }
Distance : 2

39
Tree	{ size . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Distance : 2

40
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , buffer ) ; }
Distance : 2

41
Tree	{ str . getChars ( NUMBER_CONSTANT , size , size , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , size , size ) ; }
Distance : 2

42
Tree	{ str . getChars ( str , getChars () , this ) ; } Node
Code	{ str . getChars ( str , getChars () , this ) ; } Node
Distance : 6

43
Tree	{ str . getChars ( str , getChars () , this ) ; } Integer
Code	{ str . getChars ( str , getChars () , this ) ; } Integer
Distance : 6

44
Tree	{ str . getChars ( str , getChars () , this ) ; } length
Code	{ str . getChars ( str , getChars () , this ) ; } length
Distance : 6

45
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Distance : 3

46
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Distance : 3

47
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , width ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , width ) ; }
Distance : 2

48
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , strLen ) ; }
Distance : 2

49
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Distance : 3

50
Tree	{ size . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Distance : 3

51
Tree	{ strLen . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Distance : 2

52
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Distance : 3

53
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , width , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , width , size ) ; }
Distance : 2

54
Tree	{ str . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Distance : 3

55
Tree	{ size . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Distance : 2

56
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Distance : 3

57
Tree	{ str . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Distance : 3

58
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Distance : 2

59
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Distance : 3

60
Tree	{ str . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , buffer , buffer ) ; }
Distance : 2

61
Tree	{ str . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , strLen , buffer ) ; }
Distance : 3

62
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Distance : 3

63
Tree	{ size . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Distance : 3

64
Tree	{ str . getChars ( NUMBER_CONSTANT , size , str , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , str , size ) ; }
Distance : 2

65
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Distance : 3

66
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , size , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , size , strLen ) ; }
Distance : 3

67
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Distance : 1

68
Tree	{ str . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Distance : 1

69
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Distance : 2

70
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Distance : 3

71
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , buffer ) ; }
Distance : 2

72
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , strLen , size ) ; }
Distance : 2

73
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Distance : 1

74
Tree	{ str . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , buffer , str ) ; }
Distance : 2

75
Tree	{ str . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , buffer , buffer ) ; }
Distance : 2

76
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , size , size ) ; }
Distance : 2

77
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Distance : 2

78
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , buffer , size ) ; }
Distance : 2

79
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , buffer , strLen ) ; }
Distance : 2

80
Tree	{ str . getChars ( NUMBER_CONSTANT , str , str , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , str , size ) ; }
Distance : 2

81
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , str , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , str , str ) ; }
Distance : 3

82
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Distance : 2

83
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Distance : 3

84
Tree	{ str . getChars ( NUMBER_CONSTANT , size , buffer , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , buffer , size ) ; }
Distance : 1

85
Tree	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , strLen , str , size ) ; }
Distance : 3

86
Tree	{ strLen . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Distance : 3

87
Tree	{ str . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Distance : 2

88
Tree	{ size . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Distance : 3

89
Tree	{ str . getChars ( NUMBER_CONSTANT , size , size , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , size , str ) ; }
Distance : 3

90
Tree	{ str . getChars ( Token.PARAM_LIST , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( Token.PARAM_LIST , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

91
Tree	{ str . getChars ( LocalizedFormats.DIMENSIONS_MISMATCH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.DIMENSIONS_MISMATCH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

92
Tree	{ str . getChars ( RealMethod.FromCallable , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( RealMethod.FromCallable , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

93
Tree	{ str . getChars ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

94
Tree	{ str . getChars ( Cartesian1D.ZERO , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( Cartesian1D.ZERO , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

95
Tree	{ str . getChars ( LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.TOO_LARGE_CUTOFF_SINGULAR_VALUE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

96
Tree	{ str . getChars ( MathUtils.TWO_PI , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( MathUtils.TWO_PI , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

97
Tree	{ getChars ( strLen , strLen , size , valueOf ) ; }
Code	{ getChars ( strLen , strLen , size , valueOf ) ; }
Distance : 6

98
Tree	{ str . getChars ( LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.NOT_POWER_OF_TWO_PLUS_ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

99
Tree	{ str . getChars ( AnyVararg.ANY_VARARG , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( AnyVararg.ANY_VARARG , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

100
Tree	{ getChars ( strLen , buffer , size , size , size , size ) ; }
Code	{ getChars ( strLen , buffer , size , size , size , size ) ; }
Distance : 9

101
Tree	{ str . getChars ( Fraction.ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( Fraction.ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

102
Tree	{ str . getChars ( to.finalField , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( to.finalField , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

103
Tree	{ str . getChars ( decamelizeMatcher , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( decamelizeMatcher , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

104
Tree	{ getChars ( strLen , strLen , size , data.length ) ; }
Code	{ getChars ( strLen , strLen , size , data.length ) ; }
Distance : 6

105
Tree	{ str . getChars ( ComposableFunction.FLOOR , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( ComposableFunction.FLOOR , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

106
Tree	{ str . getChars ( LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

107
Tree	{ str . getChars ( DiagnosticGroups.TOO_MANY_TYPE_PARAMS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( DiagnosticGroups.TOO_MANY_TYPE_PARAMS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

108
Tree	{ str . getChars ( Feature.AMBIENT_DECLARATION , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( Feature.AMBIENT_DECLARATION , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

109
Tree	{ str . getChars ( ISOYearOfEraDateTimeField.INSTANCE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( ISOYearOfEraDateTimeField.INSTANCE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

110
Tree	{ str . getChars ( ComposableFunction.LOG1P , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( ComposableFunction.LOG1P , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

111
Tree	{ str . getChars ( Locale.FRENCH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( Locale.FRENCH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

112
Tree	{ str . getChars ( LocalizedFormats.LCM_OVERFLOW_64_BITS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.LCM_OVERFLOW_64_BITS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

113
Tree	{ str . getChars ( LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Code	{ str . getChars ( LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Distance : 7

114
Tree	{ str . getChars ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + buffer ) ; }
Code	{ str . getChars ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + buffer ) ; }
Distance : 7

115
Tree	{ str . getChars ( LocalizedFormats.NON_SQUARE_MATRIX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.NON_SQUARE_MATRIX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

116
Tree	{ getChars ( str , str , size , values.length ) ; }
Code	{ getChars ( str , str , size , values.length ) ; }
Distance : 6

117
Tree	{ getChars ( strLen , ModifyType.CEILING , false ) ; }
Code	{ getChars ( strLen , ModifyType.CEILING , false ) ; }
Distance : 7

118
Tree	{ str . getChars ( LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

119
Tree	{ str . getChars ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , NUMBER_CONSTANT , str , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR , NUMBER_CONSTANT , str , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

120
Tree	{ getChars ( strLen , buffer , size , Boolean ) ; }
Code	{ getChars ( strLen , buffer , size , Boolean ) ; }
Distance : 6

121
Tree	{ str . getChars ( ComposableFunction.CEIL , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( ComposableFunction.CEIL , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

122
Tree	{ str . getChars ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Code	{ str . getChars ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Distance : 7

123
Tree	{ str . getChars ( NaNStrategy.MAXIMAL , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( NaNStrategy.MAXIMAL , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

124
Tree	{ getChars ( buffer , strLen , size , values.length ) ; }
Code	{ getChars ( buffer , strLen , size , values.length ) ; }
Distance : 6

125
Tree	{ str . getChars ( CompilerTestCase.LINE_JOINER , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( CompilerTestCase.LINE_JOINER , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

126
Tree	{ str . getChars ( global.root , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( global.root , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

127
Tree	{ str . getChars ( Node.ANALYZED_DURING_GTI , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( Node.ANALYZED_DURING_GTI , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

128
Tree	{ str . getChars ( other.call , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( other.call , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

129
Tree	{ getChars ( strLen , strLen , size , searchStr ) ; }
Code	{ getChars ( strLen , strLen , size , searchStr ) ; }
Distance : 6

130
Tree	{ str . getChars ( currentCase.caseBlock , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( currentCase.caseBlock , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

131
Tree	{ str . getChars ( PropertyCollapseLevel.NONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( PropertyCollapseLevel.NONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

132
Tree	{ getChars ( str , strLen , size , Integer ) ; }
Code	{ getChars ( str , strLen , size , Integer ) ; }
Distance : 6

133
Tree	{ getChars ( strLen , strLen , size , line.sin ) ; }
Code	{ getChars ( strLen , strLen , size , line.sin ) ; }
Distance : 6

134
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Distance : 4

135
Tree	{ buffer . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , size , buffer , str ) ; }
Distance : 3

136
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , width , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , width , size ) ; }
Distance : 3

137
Tree	{ size . getChars ( NUMBER_CONSTANT , size , str , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , size , str , size ) ; }
Distance : 3

138
Tree	{ size . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Distance : 4

139
Tree	{ buffer . getChars ( NUMBER_CONSTANT , buffer , str , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , buffer , str , size ) ; }
Distance : 3

140
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , width ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , buffer , width ) ; }
Distance : 2

141
Tree	{ size . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Distance : 3

142
Tree	{ width . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Code	{ width . getChars ( NUMBER_CONSTANT , strLen , buffer , str ) ; }
Distance : 3

143
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Distance : 4

144
Tree	{ buffer . getChars ( NUMBER_CONSTANT , str , str , str ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , str , str , str ) ; }
Distance : 4

145
Tree	{ str . getChars ( NUMBER_CONSTANT , width , size , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , width , size , size ) ; }
Distance : 1

146
Tree	{ buffer . getChars ( NUMBER_CONSTANT , str , str , buffer ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , str , str , buffer ) ; }
Distance : 4

147
Tree	{ str . getChars ( NUMBER_CONSTANT , size , strLen , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , strLen , buffer ) ; }
Distance : 3

148
Tree	{ size . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Distance : 1

149
Tree	{ size . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Distance : 3

150
Tree	{ strLen . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Distance : 1

151
Tree	{ size . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Distance : 4

152
Tree	{ str . getChars ( NUMBER_CONSTANT , size , strLen , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , size , strLen , str ) ; }
Distance : 3

153
Tree	{ buffer . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , str , strLen , str ) ; }
Distance : 4

154
Tree	{ size . getChars ( NUMBER_CONSTANT , buffer , buffer , strLen ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , buffer , buffer , strLen ) ; }
Distance : 3

155
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , width ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , width ) ; }
Distance : 3

156
Tree	{ getChars ( strLen , strLen , size , HashUtils ) ; }
Code	{ getChars ( strLen , strLen , size , HashUtils ) ; }
Distance : 6

157
Tree	{ str . getChars ( Locale.ENGLISH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( Locale.ENGLISH , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

158
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , str , strLen ) ; }
Distance : 4

159
Tree	{ str . getChars ( str , getChars () , this ) ; } null
Code	{ str . getChars ( str , getChars () , this ) ; } null
Distance : 6

160
Tree	{ str . getChars ( NUMBER_CONSTANT , width , str , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , width , str , str ) ; }
Distance : 2

161
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , width , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , width , size ) ; }
Distance : 2

162
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Distance : 4

163
Tree	{ width . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Code	{ width . getChars ( NUMBER_CONSTANT , str , buffer , size ) ; }
Distance : 2

164
Tree	{ strLen . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , buffer , size , size ) ; }
Distance : 3

165
Tree	{ buffer . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , width , buffer , size ) ; }
Distance : 1

166
Tree	{ str . getChars ( NUMBER_CONSTANT , str , width , str ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , width , str ) ; }
Distance : 3

167
Tree	{ size . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , str , size , buffer ) ; }
Distance : 4

168
Tree	{ strLen . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , str , size , str ) ; }
Distance : 4

169
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , size , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , size , strLen ) ; }
Distance : 3

170
Tree	{ str . getChars ( NUMBER_CONSTANT , width , str , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , width , str , buffer ) ; }
Distance : 2

171
Tree	{ str . getChars ( NUMBER_CONSTANT , strLen , size , width ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , strLen , size , width ) ; }
Distance : 3

172
Tree	{ buffer . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Distance : 3

173
Tree	{ strLen . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Code	{ strLen . getChars ( NUMBER_CONSTANT , strLen , strLen , strLen ) ; }
Distance : 4

174
Tree	{ str . getChars ( NUMBER_CONSTANT , str , width , buffer ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , str , width , buffer ) ; }
Distance : 3

175
Tree	{ str . getChars ( NUMBER_CONSTANT , width , buffer , strLen ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , width , buffer , strLen ) ; }
Distance : 1

176
Tree	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , strLen ) ; }
Code	{ size . getChars ( NUMBER_CONSTANT , strLen , buffer , strLen ) ; }
Distance : 3

177
Tree	{ buffer . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Code	{ buffer . getChars ( NUMBER_CONSTANT , buffer , buffer , size ) ; }
Distance : 2

178
Tree	{ str . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Code	{ str . getChars ( NUMBER_CONSTANT , buffer , strLen , size ) ; }
Distance : 2

179
Tree	{ str . getChars ( Level.FINE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Code	{ str . getChars ( Level.FINE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + str ) ; }
Distance : 7

180
Tree	{ str . getChars ( prop.type , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( prop.type , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

181
Tree	{ str . getChars ( CompilerOptions.J2clPassMode , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( CompilerOptions.J2clPassMode , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

182
Tree	{ str . getChars ( ComposableFunction.EXP , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( ComposableFunction.EXP , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

183
Tree	{ str . getChars ( loopNode.collection , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( loopNode.collection , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

184
Tree	{ getChars ( strLen , values.length , false ) ; }
Code	{ getChars ( strLen , values.length , false ) ; }
Distance : 7

185
Tree	{ str . getChars ( EXTVAR_EXTERNS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( EXTVAR_EXTERNS , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

186
Tree	{ str . getChars ( callSite.parent , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( callSite.parent , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

187
Tree	{ getChars ( strLen , Calendar.OCTOBER , false ) ; }
Code	{ getChars ( strLen , Calendar.OCTOBER , false ) ; }
Distance : 7

188
Tree	{ getChars ( strLen , iValues.length , false ) ; }
Code	{ getChars ( strLen , iValues.length , false ) ; }
Distance : 7

189
Tree	{ getChars ( strLen , str , size , size ) ; }
Code	{ getChars ( strLen , str , size , size ) ; }
Distance : 5

190
Tree	{ str . getChars ( LocalizedFormats.INSUFFICIENT_DIMENSION , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( LocalizedFormats.INSUFFICIENT_DIMENSION , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

191
Tree	{ getChars ( strLen , strLen , size , regex ) ; }
Code	{ getChars ( strLen , strLen , size , regex ) ; }
Distance : 6

192
Tree	{ getChars ( str , StringUtils.EMPTY , false ) ; }
Code	{ getChars ( str , StringUtils.EMPTY , false ) ; }
Distance : 7

193
Tree	{ str . getChars ( ComposableFunction.SIGNUM , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( ComposableFunction.SIGNUM , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

194
Tree	{ str . getChars ( BigFraction.ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Code	{ str . getChars ( BigFraction.ONE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , size + NUMBER_CONSTANT ) ; }
Distance : 6

195
Tree	{ getChars ( strLen , org.joda.time.gwt.util.Arrays , false ) ; }
Code	{ getChars ( strLen , org.joda.time.gwt.util.Arrays , false ) ; }
Distance : 7

196
Tree	{ getChars ( strLen , Feature.MEMBER_DECLARATIONS , false ) ; }
Code	{ getChars ( strLen , Feature.MEMBER_DECLARATIONS , false ) ; }
Distance : 7

197
Tree	{ getChars ( strLen , strLen , size , Segment ) ; }
Code	{ getChars ( strLen , strLen , size , Segment ) ; }
Distance : 6

198
Tree	{ getChars ( strLen , strLen , size , Object ) ; }
Code	{ getChars ( strLen , strLen , size , Object ) ; }
Distance : 6

199
Tree	{ str . getChars ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Code	{ str . getChars ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE , NUMBER_CONSTANT , strLen , NUMBER_CONSTANT , STRING_CONSTANT + size ) ; }
Distance : 6

========================================================================


========================================================================
Example Number: 38
Parent Code is: 
{ return cAvailableLocaleSet . contains ( locale ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return availableLocaleList () . contains ( locale ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=cAvailableLocaleSet}) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=availableLocaleList}) (216{val=()})) (235{val=.}) (802{val=contains}) (214{val=(}) (800{val=locale}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/57/parent/src_java_org_apache_commons_lang_LocaleUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } [
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } [
Distance : 4

1
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } nullNotPermitted
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } nullNotPermitted
Distance : 4

2
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } this
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } this
Distance : 3

3
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } }
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } }
Distance : 3

4
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } =
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } =
Distance : 3

5
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ,
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ,
Distance : 3

6
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } .
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } .
Distance : 3

7
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } )
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } )
Distance : 3

8
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ;
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ;
Distance : 3

9
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } <blank>
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } <blank>
Distance : 3

10
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } {
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } {
Distance : 3

11
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } <s>
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } <s>
Distance : 3

12
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } (
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } (
Distance : 3

13
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } createIllegalArgumentException
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } createIllegalArgumentException
Distance : 3

14
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } if
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } if
Distance : 3

15
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } final
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } final
Distance : 3

16
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } {
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } {
Distance : 3

17
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } public
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } public
Distance : 3

18
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } >
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } >
Distance : 3

19
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } null
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } null
Distance : 3

20
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } +
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } +
Distance : 3

21
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } !=
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } !=
Distance : 3

22
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } super
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } super
Distance : 3

23
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } double
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } double
Distance : 3

24
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } checkState
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } checkState
Distance : 3

25
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } value
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } value
Distance : 3

26
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } i
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } i
Distance : 3

27
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } <
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } <
Distance : 3

28
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } T
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } T
Distance : 3

29
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } testSame
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } testSame
Distance : 3

30
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } parent
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } parent
Distance : 4

31
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } assertThat
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } assertThat
Distance : 4

32
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } LINE_JOINER
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } LINE_JOINER
Distance : 4

33
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } str
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } str
Distance : 4

34
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } nullNotPermitted
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } nullNotPermitted
Distance : 3

35
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } test
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } test
Distance : 3

36
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } @
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } @
Distance : 3

37
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } int
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } int
Distance : 3

38
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } false
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } false
Distance : 3

39
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } d
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } d
Distance : 3

40
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } equals
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } equals
Distance : 3

41
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } for
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } for
Distance : 3

42
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Invocation
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Invocation
Distance : 3

43
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } createIllegalArgumentException
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } createIllegalArgumentException
Distance : 4

44
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } js
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } js
Distance : 3

45
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } StrBuilder
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } StrBuilder
Distance : 3

46
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } setUp
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } setUp
Distance : 3

47
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } add
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } add
Distance : 4

48
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } name
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } name
Distance : 4

49
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } t
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } t
Distance : 4

50
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } field
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } field
Distance : 4

51
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } IllegalArgumentException
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } IllegalArgumentException
Distance : 4

52
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } FastMath
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } FastMath
Distance : 4

53
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } expected
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } expected
Distance : 4

54
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } reportCodeChange
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } reportCodeChange
Distance : 4

55
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } x
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } x
Distance : 4

56
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } testSame
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } testSame
Distance : 4

57
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } TestUtilities
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } TestUtilities
Distance : 3

58
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } &&
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } &&
Distance : 3

59
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ()
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ()
Distance : 3

60
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } new
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } new
Distance : 3

61
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } return;
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } return;
Distance : 3

62
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } s
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } s
Distance : 3

63
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } traverseEs6
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } traverseEs6
Distance : 3

64
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } obj
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } obj
Distance : 3

65
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } size
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } size
Distance : 3

66
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

67
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } MutableTimePeriod
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } MutableTimePeriod
Distance : 3

68
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } stroke
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } stroke
Distance : 3

69
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } isEmpty
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } isEmpty
Distance : 3

70
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } get
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } get
Distance : 3

71
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } JSType
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } JSType
Distance : 3

72
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } char
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } char
Distance : 3

73
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } reportMatcher
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } reportMatcher
Distance : 3

74
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } chrono
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } chrono
Distance : 3

75
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } abs
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } abs
Distance : 3

76
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } StringBuilder
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } StringBuilder
Distance : 3

77
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } sqrt
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } sqrt
Distance : 3

78
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } clone
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } clone
Distance : 3

79
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } <=
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } <=
Distance : 3

80
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Double
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Double
Distance : 3

81
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } isNormalBlock
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } isNormalBlock
Distance : 3

82
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } contains
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } contains
Distance : 3

83
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } b
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } b
Distance : 3

84
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } PeriodType
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } PeriodType
Distance : 3

85
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } invocation
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } invocation
Distance : 3

86
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } assertThat
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } assertThat
Distance : 3

87
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } mockingProgress
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } mockingProgress
Distance : 3

88
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } setAcceptedLanguage
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } setAcceptedLanguage
Distance : 3

89
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } static
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } static
Distance : 3

90
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } NUMBER_CONSTANT
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } NUMBER_CONSTANT
Distance : 3

91
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } str
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } str
Distance : 3

92
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } n
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } n
Distance : 3

93
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Math
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Math
Distance : 3

94
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } wanted
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } wanted
Distance : 3

95
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } root
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } root
Distance : 3

96
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } NodeUtil
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } NodeUtil
Distance : 3

97
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } data
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } data
Distance : 3

98
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } checkArgument
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } checkArgument
Distance : 3

99
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } NodeTraversal
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } NodeTraversal
Distance : 3

100
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ex
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ex
Distance : 3

101
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ==
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ==
Distance : 3

102
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } void
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } void
Distance : 3

103
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } catch
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } catch
Distance : 3

104
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } throw
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } throw
Distance : 3

105
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } e
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } e
Distance : 3

106
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } STRING_CONSTANT
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } STRING_CONSTANT
Distance : 3

107
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } String
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } String
Distance : 3

108
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } compiler
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } compiler
Distance : 3

109
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } MathRuntimeException
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } MathRuntimeException
Distance : 3

110
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } {}
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } {}
Distance : 3

111
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } true
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } true
Distance : 3

112
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } mode
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } mode
Distance : 3

113
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } -
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } -
Distance : 3

114
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Preconditions
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Preconditions
Distance : 3

115
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } [
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } [
Distance : 3

116
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } ]
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } ]
Distance : 3

117
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } return
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } return
Distance : 3

118
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } invocation
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } invocation
Distance : 4

119
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } LINE_JOINER
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } LINE_JOINER
Distance : 3

120
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } !
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } !
Distance : 4

121
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } !=
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } !=
Distance : 4

122
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } null
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } null
Distance : 6

123
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } +
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } +
Distance : 6

124
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } static
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } static
Distance : 6

125
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } setAcceptedLanguage
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } setAcceptedLanguage
Distance : 6

126
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } else
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } else
Distance : 7

127
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } StringBuilder
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } StringBuilder
Distance : 7

128
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } getMessage
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } getMessage
Distance : 7

129
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } instant
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } instant
Distance : 7

130
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } matcher
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } matcher
Distance : 7

131
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } isEmpty
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } isEmpty
Distance : 7

132
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } get
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } get
Distance : 7

133
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } JSType
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } JSType
Distance : 7

134
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } >
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } >
Distance : 6

135
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } char
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } char
Distance : 7

136
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } return;
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } return;
Distance : 7

137
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } mockingProgress
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } mockingProgress
Distance : 7

138
Tree	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } setUp
Code	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } setUp
Distance : 6

139
Tree	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } source
Code	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } source
Distance : 6

140
Tree	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } TestUtilities
Code	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } TestUtilities
Distance : 6

141
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } expected
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } expected
Distance : 3

142
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } :
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } :
Distance : 3

143
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } boolean
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } boolean
Distance : 3

144
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } m
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } m
Distance : 3

145
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Node
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Node
Distance : 3

146
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Exception
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Exception
Distance : 3

147
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } lines
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } lines
Distance : 3

148
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } chrono
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } chrono
Distance : 7

149
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } verify
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } verify
Distance : 3

150
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } public
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } public
Distance : 6

151
Tree	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } StrBuilder
Code	{ return ( int ) contains ( locale + NUMBER_CONSTANT ) ; } StrBuilder
Distance : 6

152
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } s
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } s
Distance : 7

153
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } a
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } a
Distance : 7

154
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Node
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Node
Distance : 7

155
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Exception
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Exception
Distance : 7

156
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } lines
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } lines
Distance : 7

157
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } verify
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } verify
Distance : 7

158
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Integer
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Integer
Distance : 7

159
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } v
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } v
Distance : 7

160
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } length
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } length
Distance : 7

161
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } long
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } long
Distance : 7

162
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Math
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } Math
Distance : 7

163
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } wanted
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } wanted
Distance : 7

164
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } final
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } final
Distance : 6

165
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } root
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } root
Distance : 7

166
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } data
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } data
Distance : 7

167
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } checkArgument
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } checkArgument
Distance : 7

168
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } NodeTraversal
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } NodeTraversal
Distance : 7

169
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } ex
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } ex
Distance : 7

170
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } reportMatcher
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } reportMatcher
Distance : 6

171
Tree	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } abs
Code	{ return cAvailableLocaleSet . contains ( ( locale ) locale ) ; } abs
Distance : 6

172
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 7

173
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } MutableTimePeriod
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } MutableTimePeriod
Distance : 7

174
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } stroke
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } stroke
Distance : 7

175
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } abs
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } abs
Distance : 7

176
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } setAcceptedLanguage
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } setAcceptedLanguage
Distance : 7

177
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } reportMatcher
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } reportMatcher
Distance : 7

178
Tree	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } NodeUtil
Code	{ return cAvailableLocaleSet . contains ( locale . contains ( locale ) ) ; } NodeUtil
Distance : 7

179
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } Integer
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } Integer
Distance : 3

180
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } v
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } v
Distance : 3

181
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } length
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } length
Distance : 3

182
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } assertEquals
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } assertEquals
Distance : 3

183
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } !
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } !
Distance : 3

184
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } new
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } new
Distance : 4

185
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } ,
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } ,
Distance : 4

186
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } .
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } .
Distance : 4

187
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } )
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } )
Distance : 4

188
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } ;
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } ;
Distance : 4

189
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } <blank>
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } <blank>
Distance : 4

190
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } {
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } {
Distance : 4

191
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } <s>
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } <s>
Distance : 4

192
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } (
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } (
Distance : 4

193
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } =
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } =
Distance : 4

194
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } isBlock
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } isBlock
Distance : 3

195
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } }
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } }
Distance : 4

196
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } {
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } {
Distance : 4

197
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } STRING_CONSTANT
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } STRING_CONSTANT
Distance : 4

198
Tree	{ return cAvailableLocaleSet . contains ( locale ) ; } []
Code	{ return cAvailableLocaleSet . contains ( locale ) ; } []
Distance : 3

199
Tree	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } NUMBER_CONSTANT
Code	{ return cAvailableLocaleSet . contains () . contains ( locale ) ; } NUMBER_CONSTANT
Distance : 4

========================================================================


========================================================================
Example Number: 39
Parent Code is: 
{ escapeJavaStyleString ( out , str , true ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ escapeJavaStyleString ( out , str , true , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ escapeJavaStyleString ( out , out ) ; }
Code	{ escapeJavaStyleString ( out , out ) ; }
Distance : 5

1
Tree	{ DatePrinter . escapeJavaStyleString ( str , out ) ; }
Code	{ DatePrinter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

2
Tree	{ printTimeZone . escapeJavaStyleString ( str , out ) ; }
Code	{ printTimeZone . escapeJavaStyleString ( str , out ) ; }
Distance : 7

3
Tree	{ org.joda.time.gwt.util.Arrays . escapeJavaStyleString ( str , out ) ; }
Code	{ org.joda.time.gwt.util.Arrays . escapeJavaStyleString ( str , out ) ; }
Distance : 7

4
Tree	{ DurationConverter . escapeJavaStyleString ( str , out ) ; }
Code	{ DurationConverter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

5
Tree	{ cachedP . escapeJavaStyleString ( str , out ) ; }
Code	{ cachedP . escapeJavaStyleString ( str , out ) ; }
Distance : 7

6
Tree	{ MillisDurationField.INSTANCE . escapeJavaStyleString ( str , out ) ; }
Code	{ MillisDurationField.INSTANCE . escapeJavaStyleString ( str , out ) ; }
Distance : 7

7
Tree	{ str . escapeJavaStyleString ( out ) ; }
Code	{ str . escapeJavaStyleString ( out ) ; }
Distance : 8

8
Tree	{ isSameLocalTime . escapeJavaStyleString ( str , out ) ; }
Code	{ isSameLocalTime . escapeJavaStyleString ( str , out ) ; }
Distance : 7

9
Tree	{ maybeAddUsage . escapeJavaStyleString ( str , str ) ; }
Code	{ maybeAddUsage . escapeJavaStyleString ( str , str ) ; }
Distance : 7

10
Tree	{ addMeasurement . escapeJavaStyleString ( str , out ) ; }
Code	{ addMeasurement . escapeJavaStyleString ( str , out ) ; }
Distance : 7

11
Tree	{ str . escapeJavaStyleString ( str ? Byte.MIN_VALUE : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? Byte.MIN_VALUE : FunctionFlavor.NORMAL ) ; }
Distance : 8

12
Tree	{ StringEscapeUtils.ESCAPE_CSV . escapeJavaStyleString ( str , out ) ; }
Code	{ StringEscapeUtils.ESCAPE_CSV . escapeJavaStyleString ( str , out ) ; }
Distance : 7

13
Tree	{ str . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_LARGE : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_LARGE : FunctionFlavor.NORMAL ) ; }
Distance : 8

14
Tree	{ testFunctionNamesAndIds . escapeJavaStyleString ( str , out ) ; }
Code	{ testFunctionNamesAndIds . escapeJavaStyleString ( str , out ) ; }
Distance : 7

15
Tree	{ str . escapeJavaStyleString ( str ? Color.BLACK : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? Color.BLACK : FunctionFlavor.NORMAL ) ; }
Distance : 8

16
Tree	{ SparseFieldMatrix . escapeJavaStyleString ( str , str ) ; }
Code	{ SparseFieldMatrix . escapeJavaStyleString ( str , str ) ; }
Distance : 7

17
Tree	{ str . escapeJavaStyleString ( str ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 8

18
Tree	{ str . escapeJavaStyleString ( str ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Distance : 8

19
Tree	{ indexOfDifference . escapeJavaStyleString ( str , out ) ; }
Code	{ indexOfDifference . escapeJavaStyleString ( str , out ) ; }
Distance : 7

20
Tree	{ out . escapeJavaStyleString ( str ? Byte.MIN_VALUE : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? Byte.MIN_VALUE : FunctionFlavor.NORMAL ) ; }
Distance : 8

21
Tree	{ setTimeZone . escapeJavaStyleString ( str , out ) ; }
Code	{ setTimeZone . escapeJavaStyleString ( str , out ) ; }
Distance : 7

22
Tree	{ str . escapeJavaStyleString ( str ? flags.outputWrapper : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? flags.outputWrapper : FunctionFlavor.NORMAL ) ; }
Distance : 8

23
Tree	{ BigReal . escapeJavaStyleString ( str , out ) ; }
Code	{ BigReal . escapeJavaStyleString ( str , out ) ; }
Distance : 7

24
Tree	{ validateRestParameters . escapeJavaStyleString ( str , out ) ; }
Code	{ validateRestParameters . escapeJavaStyleString ( str , out ) ; }
Distance : 7

25
Tree	{ substring . escapeJavaStyleString ( str , out ) ; }
Code	{ substring . escapeJavaStyleString ( str , out ) ; }
Distance : 7

26
Tree	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : x.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : x.length ) ; }
Distance : 8

27
Tree	{ computeCorrelationMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ computeCorrelationMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

28
Tree	{ MockitoCore . escapeJavaStyleString ( str , out ) ; }
Code	{ MockitoCore . escapeJavaStyleString ( str , out ) ; }
Distance : 7

29
Tree	{ correct . escapeJavaStyleString ( str , out ) ; }
Code	{ correct . escapeJavaStyleString ( str , out ) ; }
Distance : 7

30
Tree	{ TimePeriodValue . escapeJavaStyleString ( str , out ) ; }
Code	{ TimePeriodValue . escapeJavaStyleString ( str , out ) ; }
Distance : 7

31
Tree	{ setSeriesLinesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesLinesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

32
Tree	{ AClass . escapeJavaStyleString ( str , out ) ; }
Code	{ AClass . escapeJavaStyleString ( str , out ) ; }
Distance : 7

33
Tree	{ close . escapeJavaStyleString ( str , out ) ; }
Code	{ close . escapeJavaStyleString ( str , out ) ; }
Distance : 7

34
Tree	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : x.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : x.length ) ; }
Distance : 8

35
Tree	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : x.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : x.length ) ; }
Distance : 8

36
Tree	{ setSeriesShapesVisible . escapeJavaStyleString ( str , str ) ; }
Code	{ setSeriesShapesVisible . escapeJavaStyleString ( str , str ) ; }
Distance : 7

37
Tree	{ MultiBackgroundInitializer.MultiBackgroundInitializerResults . escapeJavaStyleString ( str , out ) ; }
Code	{ MultiBackgroundInitializer.MultiBackgroundInitializerResults . escapeJavaStyleString ( str , out ) ; }
Distance : 7

38
Tree	{ regex . escapeJavaStyleString ( str , out ) ; }
Code	{ regex . escapeJavaStyleString ( str , out ) ; }
Distance : 7

39
Tree	{ ObjectList . escapeJavaStyleString ( str , out ) ; }
Code	{ ObjectList . escapeJavaStyleString ( str , out ) ; }
Distance : 7

40
Tree	{ setAlphaInternal . escapeJavaStyleString ( str , out ) ; }
Code	{ setAlphaInternal . escapeJavaStyleString ( str , out ) ; }
Distance : 7

41
Tree	{ printTo . escapeJavaStyleString ( str , out ) ; }
Code	{ printTo . escapeJavaStyleString ( str , out ) ; }
Distance : 7

42
Tree	{ Mockito.mockitoState . escapeJavaStyleString ( str , out ) ; }
Code	{ Mockito.mockitoState . escapeJavaStyleString ( str , out ) ; }
Distance : 7

43
Tree	{ sumLogImpl . escapeJavaStyleString ( str , out ) ; }
Code	{ sumLogImpl . escapeJavaStyleString ( str , out ) ; }
Distance : 7

44
Tree	{ ModifyType.CEILING . escapeJavaStyleString ( str , out ) ; }
Code	{ ModifyType.CEILING . escapeJavaStyleString ( str , out ) ; }
Distance : 7

45
Tree	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : x.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : x.length ) ; }
Distance : 8

46
Tree	{ Hibernate.DATE . escapeJavaStyleString ( str , out ) ; }
Code	{ Hibernate.DATE . escapeJavaStyleString ( str , out ) ; }
Distance : 7

47
Tree	{ dest.variance . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.variance . escapeJavaStyleString ( str , out ) ; }
Distance : 7

48
Tree	{ switch . escapeJavaStyleString ( str , out ) ; }
Code	{ switch . escapeJavaStyleString ( str , out ) ; }
Distance : 7

49
Tree	{ str . escapeJavaStyleString ( str ? TransformType.INVERSE : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? TransformType.INVERSE : FunctionFlavor.NORMAL ) ; }
Distance : 8

50
Tree	{ getRegistry . escapeJavaStyleString ( str , out ) ; }
Code	{ getRegistry . escapeJavaStyleString ( str , out ) ; }
Distance : 7

51
Tree	{ ModuloAxis . escapeJavaStyleString ( str , out ) ; }
Code	{ ModuloAxis . escapeJavaStyleString ( str , out ) ; }
Distance : 7

52
Tree	{ str . escapeJavaStyleString ( str ? typeArguments.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? typeArguments.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

53
Tree	{ str . escapeJavaStyleString ( str ? mant.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? mant.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

54
Tree	{ FieldUtils . escapeJavaStyleString ( str , out ) ; }
Code	{ FieldUtils . escapeJavaStyleString ( str , out ) ; }
Distance : 7

55
Tree	{ buffer . escapeJavaStyleString ( str , out ) ; }
Code	{ buffer . escapeJavaStyleString ( str , out ) ; }
Distance : 7

56
Tree	{ g0 . escapeJavaStyleString ( str , out ) ; }
Code	{ g0 . escapeJavaStyleString ( str , out ) ; }
Distance : 7

57
Tree	{ writeDouble . escapeJavaStyleString ( str , out ) ; }
Code	{ writeDouble . escapeJavaStyleString ( str , out ) ; }
Distance : 7

58
Tree	{ Provider . escapeJavaStyleString ( str , out ) ; }
Code	{ Provider . escapeJavaStyleString ( str , out ) ; }
Distance : 7

59
Tree	{ out . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Distance : 8

60
Tree	{ vals . escapeJavaStyleString ( str , str ) ; }
Code	{ vals . escapeJavaStyleString ( str , str ) ; }
Distance : 7

61
Tree	{ es6config . escapeJavaStyleString ( str , out ) ; }
Code	{ es6config . escapeJavaStyleString ( str , out ) ; }
Distance : 7

62
Tree	{ stats . escapeJavaStyleString ( str , out ) ; }
Code	{ stats . escapeJavaStyleString ( str , out ) ; }
Distance : 7

63
Tree	{ validateIndexWithinInvocationRange . escapeJavaStyleString ( str , out ) ; }
Code	{ validateIndexWithinInvocationRange . escapeJavaStyleString ( str , out ) ; }
Distance : 7

64
Tree	{ mocks.length . escapeJavaStyleString ( str , out ) ; }
Code	{ mocks.length . escapeJavaStyleString ( str , out ) ; }
Distance : 7

65
Tree	{ setSeconds . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeconds . escapeJavaStyleString ( str , out ) ; }
Distance : 7

66
Tree	{ iso . escapeJavaStyleString ( str , out ) ; }
Code	{ iso . escapeJavaStyleString ( str , out ) ; }
Distance : 7

67
Tree	{ out . escapeJavaStyleString ( str ? f.length : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ out . escapeJavaStyleString ( str ? f.length : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

68
Tree	{ escapeJavaStyleString ( out , out , false ) ; }
Code	{ escapeJavaStyleString ( out , out , false ) ; }
Distance : 4

69
Tree	{ noNullElements . escapeJavaStyleString ( str , out ) ; }
Code	{ noNullElements . escapeJavaStyleString ( str , out ) ; }
Distance : 7

70
Tree	{ out . escapeJavaStyleString ( str ? v.data : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? v.data : FunctionFlavor.NORMAL ) ; }
Distance : 8

71
Tree	{ str . escapeJavaStyleString ( str ? values.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? values.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

72
Tree	{ str . escapeJavaStyleString ( str ? f.length : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ str . escapeJavaStyleString ( str ? f.length : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

73
Tree	{ str . escapeJavaStyleString ( str ? v.data : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? v.data : FunctionFlavor.NORMAL ) ; }
Distance : 8

74
Tree	{ out . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_LARGE : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_LARGE : FunctionFlavor.NORMAL ) ; }
Distance : 8

75
Tree	{ LoessInterpolator . escapeJavaStyleString ( str , str ) ; }
Code	{ LoessInterpolator . escapeJavaStyleString ( str , str ) ; }
Distance : 7

76
Tree	{ out . escapeJavaStyleString ( str ? Color.BLACK : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? Color.BLACK : FunctionFlavor.NORMAL ) ; }
Distance : 8

77
Tree	{ lastIndexOf . escapeJavaStyleString ( str , str ) ; }
Code	{ lastIndexOf . escapeJavaStyleString ( str , str ) ; }
Distance : 7

78
Tree	{ Pair . escapeJavaStyleString ( str , out ) ; }
Code	{ Pair . escapeJavaStyleString ( str , out ) ; }
Distance : 7

79
Tree	{ str . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? LocalizedFormats.NUMBER_TOO_SMALL : FunctionFlavor.NORMAL ) ; }
Distance : 8

80
Tree	{ dest.incMoment . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.incMoment . escapeJavaStyleString ( str , out ) ; }
Distance : 7

81
Tree	{ lastWasGap . escapeJavaStyleString ( str , out ) ; }
Code	{ lastWasGap . escapeJavaStyleString ( str , out ) ; }
Distance : 7

82
Tree	{ subtract . escapeJavaStyleString ( str , out ) ; }
Code	{ subtract . escapeJavaStyleString ( str , out ) ; }
Distance : 7

83
Tree	{ UnescapeUtils.UNESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Code	{ UnescapeUtils.UNESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Distance : 7

84
Tree	{ translate . escapeJavaStyleString ( str , str ) ; }
Code	{ translate . escapeJavaStyleString ( str , str ) ; }
Distance : 7

85
Tree	{ out . escapeJavaStyleString ( str ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? FunctionFlavor.GENERATOR : FunctionFlavor.NORMAL ) ; }
Distance : 8

86
Tree	{ out . escapeJavaStyleString ( out ) ; }
Code	{ out . escapeJavaStyleString ( out ) ; }
Distance : 8

87
Tree	{ appendDigits . escapeJavaStyleString ( str , out ) ; }
Code	{ appendDigits . escapeJavaStyleString ( str , out ) ; }
Distance : 7

88
Tree	{ Line . escapeJavaStyleString ( str , out ) ; }
Code	{ Line . escapeJavaStyleString ( str , out ) ; }
Distance : 7

89
Tree	{ out . escapeJavaStyleString ( str ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY : FunctionFlavor.NORMAL ) ; }
Distance : 8

90
Tree	{ StandardEntityCollection . escapeJavaStyleString ( str , out ) ; }
Code	{ StandardEntityCollection . escapeJavaStyleString ( str , out ) ; }
Distance : 7

91
Tree	{ out . escapeJavaStyleString ( str ? flags.outputWrapper : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? flags.outputWrapper : FunctionFlavor.NORMAL ) ; }
Distance : 8

92
Tree	{ cannotInitializeForInjectMocksAnnotation . escapeJavaStyleString ( str , out ) ; }
Code	{ cannotInitializeForInjectMocksAnnotation . escapeJavaStyleString ( str , out ) ; }
Distance : 7

93
Tree	{ CharSequenceUtils . escapeJavaStyleString ( str , out ) ; }
Code	{ CharSequenceUtils . escapeJavaStyleString ( str , out ) ; }
Distance : 7

94
Tree	{ nextInt . escapeJavaStyleString ( str , out ) ; }
Code	{ nextInt . escapeJavaStyleString ( str , out ) ; }
Distance : 7

95
Tree	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

96
Tree	{ addOrderedRequire . escapeJavaStyleString ( str , out ) ; }
Code	{ addOrderedRequire . escapeJavaStyleString ( str , out ) ; }
Distance : 7

97
Tree	{ tStart . escapeJavaStyleString ( str , out ) ; }
Code	{ tStart . escapeJavaStyleString ( str , out ) ; }
Distance : 7

98
Tree	{ escapeJavaStyleString ( out , out , str ) ; }
Code	{ escapeJavaStyleString ( out , out , str ) ; }
Distance : 4

99
Tree	{ escapeJavaStyleString ( str , out ) ; }
Code	{ escapeJavaStyleString ( str , out ) ; }
Distance : 5

100
Tree	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : FunctionFlavor.NORMAL ) ; }
Distance : 8

101
Tree	{ checkTokenized . escapeJavaStyleString ( str , out ) ; }
Code	{ checkTokenized . escapeJavaStyleString ( str , out ) ; }
Distance : 7

102
Tree	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : FunctionFlavor.NORMAL ) ; }
Distance : 8

103
Tree	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : FunctionFlavor.NORMAL ) ; }
Distance : 8

104
Tree	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : FunctionFlavor.NORMAL ) ; }
Distance : 8

105
Tree	{ str . escapeJavaStyleString ( out , out ) ; }
Code	{ str . escapeJavaStyleString ( out , out ) ; }
Distance : 7

106
Tree	{ TestProblem5 . escapeJavaStyleString ( str , out ) ; }
Code	{ TestProblem5 . escapeJavaStyleString ( str , out ) ; }
Distance : 7

107
Tree	{ helperExposeExpression . escapeJavaStyleString ( str , out ) ; }
Code	{ helperExposeExpression . escapeJavaStyleString ( str , out ) ; }
Distance : 7

108
Tree	{ out . escapeJavaStyleString ( out , out ) ; }
Code	{ out . escapeJavaStyleString ( out , out ) ; }
Distance : 7

109
Tree	{ sourceJarComparator . escapeJavaStyleString ( str , out ) ; }
Code	{ sourceJarComparator . escapeJavaStyleString ( str , out ) ; }
Distance : 7

110
Tree	{ RealMethod.FromCallable . escapeJavaStyleString ( str , out ) ; }
Code	{ RealMethod.FromCallable . escapeJavaStyleString ( str , out ) ; }
Distance : 7

111
Tree	{ verifyZeroInteractions . escapeJavaStyleString ( str , out ) ; }
Code	{ verifyZeroInteractions . escapeJavaStyleString ( str , out ) ; }
Distance : 7

112
Tree	{ StrSubstitutor . escapeJavaStyleString ( str , out ) ; }
Code	{ StrSubstitutor . escapeJavaStyleString ( str , out ) ; }
Distance : 7

113
Tree	{ someUnusedStubbingThatQualifiesForWarning . escapeJavaStyleString ( str , out ) ; }
Code	{ someUnusedStubbingThatQualifiesForWarning . escapeJavaStyleString ( str , out ) ; }
Distance : 7

114
Tree	{ escapeJavaStyleString ( out , out , out , false ) ; }
Code	{ escapeJavaStyleString ( out , out , out , false ) ; }
Distance : 3

115
Tree	{ pads . escapeJavaStyleString ( str , out ) ; }
Code	{ pads . escapeJavaStyleString ( str , out ) ; }
Distance : 7

116
Tree	{ str . escapeJavaStyleString ( str ? f.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? f.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

117
Tree	{ escapeJavaStyleString ( out , str , true ) ; }
Code	{ escapeJavaStyleString ( out , str , true ) ; }
Distance : 2

118
Tree	{ lastIdx . escapeJavaStyleString ( str , out ) ; }
Code	{ lastIdx . escapeJavaStyleString ( str , out ) ; }
Distance : 7

119
Tree	{ instantiatorProvider . escapeJavaStyleString ( str , out ) ; }
Code	{ instantiatorProvider . escapeJavaStyleString ( str , out ) ; }
Distance : 7

120
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( out , out ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( out , out ) ; }
Distance : 7

121
Tree	{ vals . escapeJavaStyleString ( str , out ) ; }
Code	{ vals . escapeJavaStyleString ( str , out ) ; }
Distance : 7

122
Tree	{ escapeJavaStyleString ( out , str ) ; }
Code	{ escapeJavaStyleString ( out , str ) ; }
Distance : 4

123
Tree	{ padChar . escapeJavaStyleString ( str , out ) ; }
Code	{ padChar . escapeJavaStyleString ( str , out ) ; }
Distance : 7

124
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , out ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , out ) ; }
Distance : 7

125
Tree	{ str . escapeJavaStyleString ( str , out ) ; }
Code	{ str . escapeJavaStyleString ( str , out ) ; }
Distance : 7

126
Tree	{ out . escapeJavaStyleString ( str , out ) ; }
Code	{ out . escapeJavaStyleString ( str , out ) ; }
Distance : 7

127
Tree	{ escapeJavaStyleString ( out , str , false ) ; }
Code	{ escapeJavaStyleString ( out , str , false ) ; }
Distance : 3

128
Tree	{ escapeJavaStyleString ( out , out , true ) ; }
Code	{ escapeJavaStyleString ( out , out , true ) ; }
Distance : 3

129
Tree	{ str . escapeJavaStyleString ( str ) ; }
Code	{ str . escapeJavaStyleString ( str ) ; }
Distance : 8

130
Tree	{ out . escapeJavaStyleString ( str ) ; }
Code	{ out . escapeJavaStyleString ( str ) ; }
Distance : 8

131
Tree	{ centered . escapeJavaStyleString ( str , out ) ; }
Code	{ centered . escapeJavaStyleString ( str , out ) ; }
Distance : 7

132
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , str ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , str ) ; }
Distance : 7

133
Tree	{ escapeJavaStyleString ( out , out , out ) ; }
Code	{ escapeJavaStyleString ( out , out , out ) ; }
Distance : 4

134
Tree	{ array.length . escapeJavaStyleString ( str , out ) ; }
Code	{ array.length . escapeJavaStyleString ( str , out ) ; }
Distance : 7

135
Tree	{ out . escapeJavaStyleString ( str , str ) ; }
Code	{ out . escapeJavaStyleString ( str , str ) ; }
Distance : 7

136
Tree	{ setSeriesShapesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesShapesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

137
Tree	{ maybeAddUsage . escapeJavaStyleString ( str , out ) ; }
Code	{ maybeAddUsage . escapeJavaStyleString ( str , out ) ; }
Distance : 7

138
Tree	{ SparseFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ SparseFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

139
Tree	{ LoessInterpolator . escapeJavaStyleString ( str , out ) ; }
Code	{ LoessInterpolator . escapeJavaStyleString ( str , out ) ; }
Distance : 7

140
Tree	{ lastIndexOf . escapeJavaStyleString ( str , out ) ; }
Code	{ lastIndexOf . escapeJavaStyleString ( str , out ) ; }
Distance : 7

141
Tree	{ translate . escapeJavaStyleString ( str , out ) ; }
Code	{ translate . escapeJavaStyleString ( str , out ) ; }
Distance : 7

142
Tree	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Code	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Distance : 7

143
Tree	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , str ) ; }
Code	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , str ) ; }
Distance : 7

144
Tree	{ str . escapeJavaStyleString ( str , str ) ; }
Code	{ str . escapeJavaStyleString ( str , str ) ; }
Distance : 7

145
Tree	{ setEndMillis . escapeJavaStyleString ( str , out ) ; }
Code	{ setEndMillis . escapeJavaStyleString ( str , out ) ; }
Distance : 7

146
Tree	{ CategoryLabelWidthType . escapeJavaStyleString ( str , out ) ; }
Code	{ CategoryLabelWidthType . escapeJavaStyleString ( str , out ) ; }
Distance : 7

147
Tree	{ newValues . escapeJavaStyleString ( str , out ) ; }
Code	{ newValues . escapeJavaStyleString ( str , out ) ; }
Distance : 7

148
Tree	{ str . escapeJavaStyleString ( str ? x.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? x.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

149
Tree	{ str . escapeJavaStyleString ( str ? d.length : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? d.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

150
Tree	{ BigFraction . escapeJavaStyleString ( str , out ) ; }
Code	{ BigFraction . escapeJavaStyleString ( str , out ) ; }
Distance : 7

151
Tree	{ scaled . escapeJavaStyleString ( str , out ) ; }
Code	{ scaled . escapeJavaStyleString ( str , out ) ; }
Distance : 7

152
Tree	{ FitnessFunction . escapeJavaStyleString ( str , out ) ; }
Code	{ FitnessFunction . escapeJavaStyleString ( str , out ) ; }
Distance : 7

153
Tree	{ MillisDuration . escapeJavaStyleString ( str , out ) ; }
Code	{ MillisDuration . escapeJavaStyleString ( str , out ) ; }
Distance : 7

154
Tree	{ setLinesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setLinesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

155
Tree	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ str . escapeJavaStyleString ( str ? Es6ToEs3Util.CANNOT_CONVERT_YET : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

156
Tree	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ out . escapeJavaStyleString ( str ? Strictness.SILENT : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

157
Tree	{ addRetType . escapeJavaStyleString ( str , out ) ; }
Code	{ addRetType . escapeJavaStyleString ( str , out ) ; }
Distance : 7

158
Tree	{ UnpaddedNumberField . escapeJavaStyleString ( str , out ) ; }
Code	{ UnpaddedNumberField . escapeJavaStyleString ( str , out ) ; }
Distance : 7

159
Tree	{ escapeJavaStyleString ( out , str , out ) ; }
Code	{ escapeJavaStyleString ( out , str , out ) ; }
Distance : 3

160
Tree	{ iterateRangeBounds . escapeJavaStyleString ( str , out ) ; }
Code	{ iterateRangeBounds . escapeJavaStyleString ( str , out ) ; }
Distance : 7

161
Tree	{ out . escapeJavaStyleString ( str ? x.length : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? x.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

162
Tree	{ checkSignificanceLevel . escapeJavaStyleString ( str , out ) ; }
Code	{ checkSignificanceLevel . escapeJavaStyleString ( str , out ) ; }
Distance : 7

163
Tree	{ out . escapeJavaStyleString ( str ? d.length : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? d.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

164
Tree	{ cacheEntry.input . escapeJavaStyleString ( str , out ) ; }
Code	{ cacheEntry.input . escapeJavaStyleString ( str , out ) ; }
Distance : 7

165
Tree	{ source.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Code	{ source.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Distance : 7

166
Tree	{ Rectangle2D.Double . escapeJavaStyleString ( str , out ) ; }
Code	{ Rectangle2D.Double . escapeJavaStyleString ( str , out ) ; }
Distance : 7

167
Tree	{ ZipfDistribution . escapeJavaStyleString ( str , out ) ; }
Code	{ ZipfDistribution . escapeJavaStyleString ( str , out ) ; }
Distance : 7

168
Tree	{ array.length . escapeJavaStyleString ( str , str ) ; }
Code	{ array.length . escapeJavaStyleString ( str , str ) ; }
Distance : 7

169
Tree	{ checkContractExpand . escapeJavaStyleString ( str , out ) ; }
Code	{ checkContractExpand . escapeJavaStyleString ( str , out ) ; }
Distance : 7

170
Tree	{ getThrowableCount . escapeJavaStyleString ( str , out ) ; }
Code	{ getThrowableCount . escapeJavaStyleString ( str , out ) ; }
Distance : 7

171
Tree	{ logSum . escapeJavaStyleString ( str , out ) ; }
Code	{ logSum . escapeJavaStyleString ( str , out ) ; }
Distance : 7

172
Tree	{ fixUnitializedVarDeclarations . escapeJavaStyleString ( str , out ) ; }
Code	{ fixUnitializedVarDeclarations . escapeJavaStyleString ( str , out ) ; }
Distance : 7

173
Tree	{ out . escapeJavaStyleString ( str ? f.length : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? f.length : FunctionFlavor.NORMAL ) ; }
Distance : 8

174
Tree	{ BlockFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ BlockFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

175
Tree	{ smallestIndexOfDiff . escapeJavaStyleString ( str , out ) ; }
Code	{ smallestIndexOfDiff . escapeJavaStyleString ( str , out ) ; }
Distance : 7

176
Tree	{ stdDev . escapeJavaStyleString ( str , out ) ; }
Code	{ stdDev . escapeJavaStyleString ( str , out ) ; }
Distance : 7

177
Tree	{ dest.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Distance : 7

178
Tree	{ resetMock . escapeJavaStyleString ( str , out ) ; }
Code	{ resetMock . escapeJavaStyleString ( str , out ) ; }
Distance : 7

179
Tree	{ str . escapeJavaStyleString ( str ? System.out : FunctionFlavor.NORMAL ) ; }
Code	{ str . escapeJavaStyleString ( str ? System.out : FunctionFlavor.NORMAL ) ; }
Distance : 8

180
Tree	{ getLength . escapeJavaStyleString ( str , out ) ; }
Code	{ getLength . escapeJavaStyleString ( str , out ) ; }
Distance : 7

181
Tree	{ setQuantile . escapeJavaStyleString ( str , out ) ; }
Code	{ setQuantile . escapeJavaStyleString ( str , out ) ; }
Distance : 7

182
Tree	{ setShapesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setShapesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

183
Tree	{ repeat . escapeJavaStyleString ( str , out ) ; }
Code	{ repeat . escapeJavaStyleString ( str , out ) ; }
Distance : 7

184
Tree	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Code	{ str . escapeJavaStyleString ( str ? Strictness.SILENT : LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ) ; }
Distance : 8

185
Tree	{ ImmutableSortedSet . escapeJavaStyleString ( str , out ) ; }
Code	{ ImmutableSortedSet . escapeJavaStyleString ( str , out ) ; }
Distance : 7

186
Tree	{ out . escapeJavaStyleString ( str ? System.out : FunctionFlavor.NORMAL ) ; }
Code	{ out . escapeJavaStyleString ( str ? System.out : FunctionFlavor.NORMAL ) ; }
Distance : 8

187
Tree	{ setSeriesItemLabelsVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesItemLabelsVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

188
Tree	{ IntervalConverter . escapeJavaStyleString ( str , out ) ; }
Code	{ IntervalConverter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

189
Tree	{ escapeJavaStyleString ( str , out , false ) ; }
Code	{ escapeJavaStyleString ( str , out , false ) ; }
Distance : 4

190
Tree	{ CompilerTestCase.LINE_JOINER . escapeJavaStyleString ( str , out ) ; }
Code	{ CompilerTestCase.LINE_JOINER . escapeJavaStyleString ( str , out ) ; }
Distance : 7

191
Tree	{ alg . escapeJavaStyleString ( str , out ) ; }
Code	{ alg . escapeJavaStyleString ( str , out ) ; }
Distance : 7

192
Tree	{ str . escapeJavaStyleString ( str , out ) ; } obj
Code	{ str . escapeJavaStyleString ( str , out ) ; } obj
Distance : 8

193
Tree	{ str . escapeJavaStyleString ( str , out ) ; } size
Code	{ str . escapeJavaStyleString ( str , out ) ; } size
Distance : 8

194
Tree	{ str . escapeJavaStyleString ( str , out ) ; } y
Code	{ str . escapeJavaStyleString ( str , out ) ; } y
Distance : 8

195
Tree	{ str . escapeJavaStyleString ( str , out ) ; } LanguageMode.ECMASCRIPT6
Code	{ str . escapeJavaStyleString ( str , out ) ; } LanguageMode.ECMASCRIPT6
Distance : 8

196
Tree	{ str . escapeJavaStyleString ( str , out ) ; } checkState
Code	{ str . escapeJavaStyleString ( str , out ) ; } checkState
Distance : 8

197
Tree	{ str . escapeJavaStyleString ( str , out ) ; } T
Code	{ str . escapeJavaStyleString ( str , out ) ; } T
Distance : 8

198
Tree	{ str . escapeJavaStyleString ( str , out ) ; } i
Code	{ str . escapeJavaStyleString ( str , out ) ; } i
Distance : 8

199
Tree	{ str . escapeJavaStyleString ( str , out ) ; } &&
Code	{ str . escapeJavaStyleString ( str , out ) ; } &&
Distance : 8

========================================================================


========================================================================
Example Number: 40
Parent Code is: 
{ return escapeJavaStyleString ( str , true ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return escapeJavaStyleString ( str , true , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=true}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ this . str = str ; super }
Code	{ this . str = str ; super }
Distance : 9

1
Tree	{ return escapeJavaStyleString ( str , that.paint ) ; }
Code	{ return escapeJavaStyleString ( str , that.paint ) ; }
Distance : 3

2
Tree	{ this . str = str ; mask }
Code	{ this . str = str ; mask }
Distance : 9

3
Tree	{ this . str = str ; peg }
Code	{ this . str = str ; peg }
Distance : 9

4
Tree	{ this . str = str ; UnivariateIntegrator }
Code	{ this . str = str ; UnivariateIntegrator }
Distance : 9

5
Tree	{ this . str = str ; ? }
Code	{ this . str = str ; ? }
Distance : 9

6
Tree	{ this . str = str ; getField }
Code	{ this . str = str ; getField }
Distance : 9

7
Tree	{ this . str = str ; compiler }
Code	{ this . str = str ; compiler }
Distance : 9

8
Tree	{ this . str = str ; LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE }
Code	{ this . str = str ; LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE }
Distance : 9

9
Tree	{ this . str = str ; createIllegalArgumentException }
Code	{ this . str = str ; createIllegalArgumentException }
Distance : 9

10
Tree	{ this . str = str ; isEquals }
Code	{ this . str = str ; isEquals }
Distance : 9

11
Tree	{ return escapeJavaStyleString ( str , Integer.MIN_VALUE ) ; }
Code	{ return escapeJavaStyleString ( str , Integer.MIN_VALUE ) ; }
Distance : 3

12
Tree	{ this . str = str ; iMillis }
Code	{ this . str = str ; iMillis }
Distance : 9

13
Tree	{ this . str = str ; UnitSphereSampler }
Code	{ this . str = str ; UnitSphereSampler }
Distance : 9

14
Tree	{ this . str = str ; ObjectOutputStream }
Code	{ this . str = str ; ObjectOutputStream }
Distance : 9

15
Tree	{ this . str = str ; testSameEs6 }
Code	{ this . str = str ; testSameEs6 }
Distance : 9

16
Tree	{ this . str = str ; assertNoPureCalls }
Code	{ this . str = str ; assertNoPureCalls }
Distance : 9

17
Tree	{ this . str = str ; array }
Code	{ this . str = str ; array }
Distance : 9

18
Tree	{ this . str = str ; RandomDataGenerator }
Code	{ this . str = str ; RandomDataGenerator }
Distance : 9

19
Tree	{ this . str = str ; threadSafely }
Code	{ this . str = str ; threadSafely }
Distance : 9

20
Tree	{ this . str = str ; continue }
Code	{ this . str = str ; continue }
Distance : 9

21
Tree	{ return escapeJavaStyleString ( str , TypeInferenceMode.CHECKED ) ; }
Code	{ return escapeJavaStyleString ( str , TypeInferenceMode.CHECKED ) ; }
Distance : 3

22
Tree	{ this . str = str ; ignoreWarnings }
Code	{ this . str = str ; ignoreWarnings }
Distance : 9

23
Tree	{ this . str = str ; ReadablePeriod }
Code	{ this . str = str ; ReadablePeriod }
Distance : 9

24
Tree	{ this . str = str ; getEmptyObjectLiteral }
Code	{ this . str = str ; getEmptyObjectLiteral }
Distance : 9

25
Tree	{ this . str = str ; printTo }
Code	{ this . str = str ; printTo }
Distance : 9

26
Tree	{ this . str = str ; integrator }
Code	{ this . str = str ; integrator }
Distance : 9

27
Tree	{ this . str = str ; parseError }
Code	{ this . str = str ; parseError }
Distance : 9

28
Tree	{ this . str = str ; UnivariateRealFunction }
Code	{ this . str = str ; UnivariateRealFunction }
Distance : 9

29
Tree	{ return escapeJavaStyleString ( str , PropAccess.INCLUDE_STRAY_PROPS ) ; }
Code	{ return escapeJavaStyleString ( str , PropAccess.INCLUDE_STRAY_PROPS ) ; }
Distance : 3

30
Tree	{ this . str = str ; UnivariateOptimizer }
Code	{ this . str = str ; UnivariateOptimizer }
Distance : 9

31
Tree	{ this . str = str ; AllowedSolution.ANY_SIDE }
Code	{ this . str = str ; AllowedSolution.ANY_SIDE }
Distance : 9

32
Tree	{ this . str = str ; clone }
Code	{ this . str = str ; clone }
Distance : 9

33
Tree	{ this . str = str ; MOCKING_PROGRESS }
Code	{ this . str = str ; MOCKING_PROGRESS }
Distance : 9

34
Tree	{ this . str = str ; throws }
Code	{ this . str = str ; throws }
Distance : 9

35
Tree	{ this . str = str ; testTypes }
Code	{ this . str = str ; testTypes }
Distance : 9

36
Tree	{ this . str = str ; IllegalArgumentException }
Code	{ this . str = str ; IllegalArgumentException }
Distance : 9

37
Tree	{ return escapeJavaStyleString ( str , startPoint.length ) ; }
Code	{ return escapeJavaStyleString ( str , startPoint.length ) ; }
Distance : 3

38
Tree	{ this . str = str ; MockName }
Code	{ this . str = str ; MockName }
Distance : 9

39
Tree	{ this . str = str ; assertArrayEquals }
Code	{ this . str = str ; assertArrayEquals }
Distance : 9

40
Tree	{ return escapeJavaStyleString ( str , otherC.pole ) ; }
Code	{ return escapeJavaStyleString ( str , otherC.pole ) ; }
Distance : 3

41
Tree	{ this . str = str ; *= }
Code	{ this . str = str ; *= }
Distance : 9

42
Tree	{ this . str = str ; RectangleEdge }
Code	{ this . str = str ; RectangleEdge }
Distance : 9

43
Tree	{ this . str = str ; S }
Code	{ this . str = str ; S }
Distance : 9

44
Tree	{ this . str = str ; assertMessageContains }
Code	{ this . str = str ; assertMessageContains }
Distance : 9

45
Tree	{ return escapeJavaStyleString ( str , Annotation.IMPLEMENTS ) ; }
Code	{ return escapeJavaStyleString ( str , Annotation.IMPLEMENTS ) ; }
Distance : 3

46
Tree	{ this . str = str ; iChronology }
Code	{ this . str = str ; iChronology }
Distance : 9

47
Tree	{ this . str = str ; URI }
Code	{ this . str = str ; URI }
Distance : 9

48
Tree	{ this . str = str ; CrossModuleReferenceCollector }
Code	{ this . str = str ; CrossModuleReferenceCollector }
Distance : 9

49
Tree	{ this . str = str ; while }
Code	{ this . str = str ; while }
Distance : 9

50
Tree	{ this . str = str ; Object }
Code	{ this . str = str ; Object }
Distance : 9

51
Tree	{ return escapeJavaStyleString ( str , FunctionFlavor.GENERATOR ) ; }
Code	{ return escapeJavaStyleString ( str , FunctionFlavor.GENERATOR ) ; }
Distance : 3

52
Tree	{ this . str = str ; default: }
Code	{ this . str = str ; default: }
Distance : 9

53
Tree	{ this . str = str ; DateTimePrinter }
Code	{ this . str = str ; DateTimePrinter }
Distance : 9

54
Tree	{ this . str = str ; FeatureSet.BARE_MINIMUM }
Code	{ this . str = str ; FeatureSet.BARE_MINIMUM }
Distance : 9

55
Tree	{ this . str = str ; ^ }
Code	{ this . str = str ; ^ }
Distance : 9

56
Tree	{ this . str = str ; this }
Code	{ this . str = str ; this }
Distance : 9

57
Tree	{ this . str = str ; checkNotNull }
Code	{ this . str = str ; checkNotNull }
Distance : 9

58
Tree	{ this . str = str ; assert }
Code	{ this . str = str ; assert }
Distance : 9

59
Tree	{ this . str = str ; ++ }
Code	{ this . str = str ; ++ }
Distance : 9

60
Tree	{ this . str = str ; CHAR_CONS }
Code	{ this . str = str ; CHAR_CONS }
Distance : 9

61
Tree	{ this . str = str ; fireChangeEvent }
Code	{ this . str = str ; fireChangeEvent }
Distance : 9

62
Tree	{ return escapeJavaStyleString ( str , true ) ; }
Code	{ return escapeJavaStyleString ( str , true ) ; }
Distance : 2

63
Tree	{ this . str = str ; throw }
Code	{ this . str = str ; throw }
Distance : 9

64
Tree	{ this . str = str ; else }
Code	{ this . str = str ; else }
Distance : 9

65
Tree	{ return escapeJavaStyleString ( str , LocalizedFormats.NUMBER_TOO_SMALL ) ; }
Code	{ return escapeJavaStyleString ( str , LocalizedFormats.NUMBER_TOO_SMALL ) ; }
Distance : 3

66
Tree	{ this . str = str ; ThreadSafeDelegatingErrorManager }
Code	{ this . str = str ; ThreadSafeDelegatingErrorManager }
Distance : 9

67
Tree	{ this . str = str ; LocalizedFormats.VECTOR_LENGTH_MISMATCH }
Code	{ this . str = str ; LocalizedFormats.VECTOR_LENGTH_MISMATCH }
Distance : 9

68
Tree	{ return escapeJavaStyleString ( str , includeInterval ) ; }
Code	{ return escapeJavaStyleString ( str , includeInterval ) ; }
Distance : 3

69
Tree	{ this . str = str ; iSuffixes }
Code	{ this . str = str ; iSuffixes }
Distance : 9

70
Tree	{ this . str = str ; if }
Code	{ this . str = str ; if }
Distance : 9

71
Tree	{ this . str = str ; expectedFeatures }
Code	{ this . str = str ; expectedFeatures }
Distance : 9

72
Tree	{ return escapeJavaStyleString ( str , LocalizedFormats.CARDAN_ANGLES_SINGULARITY ) ; }
Code	{ return escapeJavaStyleString ( str , LocalizedFormats.CARDAN_ANGLES_SINGULARITY ) ; }
Distance : 3

73
Tree	{ this . str = str ; preserveGoogProvidesAndRequires }
Code	{ this . str = str ; preserveGoogProvidesAndRequires }
Distance : 9

74
Tree	{ this . str = str ; InvocationImpl }
Code	{ this . str = str ; InvocationImpl }
Distance : 9

75
Tree	{ this . str = str ; DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT }
Code	{ this . str = str ; DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT }
Distance : 9

76
Tree	{ this . str = str ; assertFalse }
Code	{ this . str = str ; assertFalse }
Distance : 9

77
Tree	{ return escapeJavaStyleString ( str , FunctionFlavor.NORMAL ) ; }
Code	{ return escapeJavaStyleString ( str , FunctionFlavor.NORMAL ) ; }
Distance : 3

78
Tree	{ return escapeJavaStyleString ( str , Byte.MIN_VALUE ) ; }
Code	{ return escapeJavaStyleString ( str , Byte.MIN_VALUE ) ; }
Distance : 3

79
Tree	{ this . str = str ; Path }
Code	{ this . str = str ; Path }
Distance : 9

80
Tree	{ this . str = str ; Answer }
Code	{ this . str = str ; Answer }
Distance : 9

81
Tree	{ this . str = str ; getName }
Code	{ this . str = str ; getName }
Distance : 9

82
Tree	{ this . str = str ; extends }
Code	{ this . str = str ; extends }
Distance : 9

83
Tree	{ this . str = str ; TypeInferenceMode.NEITHER }
Code	{ this . str = str ; TypeInferenceMode.NEITHER }
Distance : 9

84
Tree	{ this . str = str ; MockSettingsInfo }
Code	{ this . str = str ; MockSettingsInfo }
Distance : 9

85
Tree	{ this . str = str ; UnivariateVectorialFunction }
Code	{ this . str = str ; UnivariateVectorialFunction }
Distance : 9

86
Tree	{ this . str = str ; DummyLocalizable }
Code	{ this . str = str ; DummyLocalizable }
Distance : 9

87
Tree	{ this . str = str ; res }
Code	{ this . str = str ; res }
Distance : 9

88
Tree	{ this . str = str ; SerialUtils }
Code	{ this . str = str ; SerialUtils }
Distance : 9

89
Tree	{ this . str = str ; getLastArguments }
Code	{ this . str = str ; getLastArguments }
Distance : 9

90
Tree	{ this . str = str ; ContinuousOutputFieldModel }
Code	{ this . str = str ; ContinuousOutputFieldModel }
Distance : 9

91
Tree	{ this . str = str ; problem.y }
Code	{ this . str = str ; problem.y }
Distance : 9

92
Tree	{ this . str = str ; argumentsMatch }
Code	{ this . str = str ; argumentsMatch }
Distance : 9

93
Tree	{ return escapeJavaStyleString ( str , LocalizedFormats.INTERNAL_ERROR ) ; }
Code	{ return escapeJavaStyleString ( str , LocalizedFormats.INTERNAL_ERROR ) ; }
Distance : 3

94
Tree	{ return escapeJavaStyleString ( str , PolymerClassDefinition.DefinitionType.ObjectLiteral ) ; }
Code	{ return escapeJavaStyleString ( str , PolymerClassDefinition.DefinitionType.ObjectLiteral ) ; }
Distance : 3

95
Tree	{ this . str = str ; testDependentModules }
Code	{ this . str = str ; testDependentModules }
Distance : 9

96
Tree	{ this . str = str ; Set }
Code	{ this . str = str ; Set }
Distance : 9

97
Tree	{ return escapeJavaStyleString ( str , EquivalenceMethod.DATA_FLOW ) ; }
Code	{ return escapeJavaStyleString ( str , EquivalenceMethod.DATA_FLOW ) ; }
Distance : 3

98
Tree	{ this . str = str ; DelayedExecution }
Code	{ this . str = str ; DelayedExecution }
Distance : 9

99
Tree	{ return escapeJavaStyleString ( str , TransformType.INVERSE ) ; }
Code	{ return escapeJavaStyleString ( str , TransformType.INVERSE ) ; }
Distance : 3

100
Tree	{ this . str = str ; enableTypeCheck }
Code	{ this . str = str ; enableTypeCheck }
Distance : 9

101
Tree	{ this . str = str ; public }
Code	{ this . str = str ; public }
Distance : 9

102
Tree	{ this . str = str ; boolean }
Code	{ this . str = str ; boolean }
Distance : 9

103
Tree	{ this . str = str ; Matcher }
Code	{ this . str = str ; Matcher }
Distance : 9

104
Tree	{ this . str = str ; enableRunTypeCheckAfterProcessing }
Code	{ this . str = str ; enableRunTypeCheckAfterProcessing }
Distance : 9

105
Tree	{ this . str = str ; -- }
Code	{ this . str = str ; -- }
Distance : 9

106
Tree	{ this . str = str ; validateAstChangeMarking }
Code	{ this . str = str ; validateAstChangeMarking }
Distance : 9

107
Tree	{ this . str = str ; short }
Code	{ this . str = str ; short }
Distance : 9

108
Tree	{ this . str = str ; synchronized }
Code	{ this . str = str ; synchronized }
Distance : 9

109
Tree	{ this . str = str ; allowExternsChanges }
Code	{ this . str = str ; allowExternsChanges }
Distance : 9

110
Tree	{ this . str = str ; float }
Code	{ this . str = str ; float }
Distance : 9

111
Tree	{ this . str = str ; int }
Code	{ this . str = str ; int }
Distance : 9

112
Tree	{ return escapeJavaStyleString ( str , ModuleType.GOOG_MODULE ) ; }
Code	{ return escapeJavaStyleString ( str , ModuleType.GOOG_MODULE ) ; }
Distance : 3

113
Tree	{ this . str = str ; double }
Code	{ this . str = str ; double }
Distance : 9

114
Tree	{ this . str = str ; reportAnd }
Code	{ this . str = str ; reportAnd }
Distance : 9

115
Tree	{ return escapeJavaStyleString ( str , Color.BLACK ) ; }
Code	{ return escapeJavaStyleString ( str , Color.BLACK ) ; }
Distance : 3

116
Tree	{ return escapeJavaStyleString ( str , iValues.length ) ; }
Code	{ return escapeJavaStyleString ( str , iValues.length ) ; }
Distance : 3

117
Tree	{ this . str = str ; false }
Code	{ this . str = str ; false }
Distance : 9

118
Tree	{ return escapeJavaStyleString ( str , d.length ) ; }
Code	{ return escapeJavaStyleString ( str , d.length ) ; }
Distance : 3

119
Tree	{ this . str = str ; & }
Code	{ this . str = str ; & }
Distance : 9

120
Tree	{ this . str = str ; reportCodeChange }
Code	{ this . str = str ; reportCodeChange }
Distance : 9

121
Tree	{ this . str = str ; {} }
Code	{ this . str = str ; {} }
Distance : 9

122
Tree	{ this . str = str ; long }
Code	{ this . str = str ; long }
Distance : 9

123
Tree	{ this . str = str ; try }
Code	{ this . str = str ; try }
Distance : 9

124
Tree	{ this . str = str ; fireAnnotationChanged }
Code	{ this . str = str ; fireAnnotationChanged }
Distance : 9

125
Tree	{ return escapeJavaStyleString ( str , false ) ; }
Code	{ return escapeJavaStyleString ( str , false ) ; }
Distance : 3

126
Tree	{ this . str = str ; setValues }
Code	{ this . str = str ; setValues }
Distance : 9

127
Tree	{ this . str = str ; private }
Code	{ this . str = str ; private }
Distance : 9

128
Tree	{ this . str = str ; Printable }
Code	{ this . str = str ; Printable }
Distance : 9

129
Tree	{ this . str = str ; break; }
Code	{ this . str = str ; break; }
Distance : 9

130
Tree	{ this . str = str ; return; }
Code	{ this . str = str ; return; }
Distance : 9

131
Tree	{ this . str = str ; static }
Code	{ this . str = str ; static }
Distance : 9

132
Tree	{ this . str = str ; return }
Code	{ this . str = str ; return }
Distance : 9

133
Tree	{ this . str = str ; * }
Code	{ this . str = str ; * }
Distance : 9

134
Tree	{ this . str = str ; <= }
Code	{ this . str = str ; <= }
Distance : 9

135
Tree	{ this . str = str ; void }
Code	{ this . str = str ; void }
Distance : 9

136
Tree	{ this . str = str ; continue; }
Code	{ this . str = str ; continue; }
Distance : 9

137
Tree	{ this . str = str ; disableTypeCheck }
Code	{ this . str = str ; disableTypeCheck }
Distance : 9

138
Tree	{ this . str = str ; += }
Code	{ this . str = str ; += }
Distance : 9

139
Tree	{ this . str = str ; reportMatcher }
Code	{ this . str = str ; reportMatcher }
Distance : 9

140
Tree	{ super . escapeJavaStyleString ( str ) ; return false ; }
Code	{ super . escapeJavaStyleString ( str ) ; return false ; }
Distance : 7

141
Tree	{ this . str = str ; byte }
Code	{ this . str = str ; byte }
Distance : 9

142
Tree	{ this . str = str ; abstract }
Code	{ this . str = str ; abstract }
Distance : 9

143
Tree	{ super . escapeJavaStyleString ( str ) ; return null ; }
Code	{ super . escapeJavaStyleString ( str ) ; return null ; }
Distance : 7

144
Tree	{ this . str = str ; final }
Code	{ this . str = str ; final }
Distance : 9

145
Tree	{ this . str = str ; char }
Code	{ this . str = str ; char }
Distance : 9

146
Tree	{ this . str = str ; TypeI }
Code	{ this . str = str ; TypeI }
Distance : 9

147
Tree	{ this . str = str ; for }
Code	{ this . str = str ; for }
Distance : 9

148
Tree	{ this . str = str ; checkArgument }
Code	{ this . str = str ; checkArgument }
Distance : 9

149
Tree	{ this . str = str ; @ }
Code	{ this . str = str ; @ }
Distance : 9

150
Tree	{ this . str = str ; notNull }
Code	{ this . str = str ; notNull }
Distance : 9

151
Tree	{ this . str = str ; - }
Code	{ this . str = str ; - }
Distance : 9

152
Tree	{ this . str = str ; CircleVectorial }
Code	{ this . str = str ; CircleVectorial }
Distance : 9

153
Tree	{ this . str = str ; setLanguage }
Code	{ this . str = str ; setLanguage }
Distance : 9

154
Tree	{ this . str = str ; ReadablePartial }
Code	{ this . str = str ; ReadablePartial }
Distance : 9

155
Tree	{ this . str = str ; Font }
Code	{ this . str = str ; Font }
Distance : 9

156
Tree	{ this . str = str ; LanguageMode.ECMASCRIPT_NEXT }
Code	{ this . str = str ; LanguageMode.ECMASCRIPT_NEXT }
Distance : 9

157
Tree	{ this . str = str ; enableGatherExternProperties }
Code	{ this . str = str ; enableGatherExternProperties }
Distance : 9

158
Tree	{ this . str = str ; super(); }
Code	{ this . str = str ; super(); }
Distance : 9

159
Tree	{ this . str = str ; LocalizedFormats.NO_DATA }
Code	{ this . str = str ; LocalizedFormats.NO_DATA }
Distance : 9

160
Tree	{ this . str = str ; InternalParser }
Code	{ this . str = str ; InternalParser }
Distance : 9

161
Tree	{ this . str = str ; assertEquals }
Code	{ this . str = str ; assertEquals }
Distance : 9

162
Tree	{ this . str = str ; unsupported }
Code	{ this . str = str ; unsupported }
Distance : 9

163
Tree	{ this . str = str ; HashMap }
Code	{ this . str = str ; HashMap }
Distance : 9

164
Tree	{ this . str = str ; assertNotNull }
Code	{ this . str = str ; assertNotNull }
Distance : 9

165
Tree	{ this . str = str ; Period }
Code	{ this . str = str ; Period }
Distance : 9

166
Tree	{ return escapeJavaStyleString ( str , f.length ) ; }
Code	{ return escapeJavaStyleString ( str , f.length ) ; }
Distance : 3

167
Tree	{ this . str = str ; notifyListeners }
Code	{ this . str = str ; notifyListeners }
Distance : 9

168
Tree	{ this . str = str ; other.value }
Code	{ this . str = str ; other.value }
Distance : 9

169
Tree	{ this . str = str ; assertNull }
Code	{ this . str = str ; assertNull }
Distance : 9

170
Tree	{ this . str = str ; value }
Code	{ this . str = str ; value }
Distance : 9

171
Tree	{ this . str = str ; ArgumentCaptor }
Code	{ this . str = str ; ArgumentCaptor }
Distance : 9

172
Tree	{ return escapeJavaStyleString ( str , Es6ToEs3Util.CANNOT_CONVERT_YET ) ; }
Code	{ return escapeJavaStyleString ( str , Es6ToEs3Util.CANNOT_CONVERT_YET ) ; }
Distance : 3

173
Tree	{ this . str = str ; <> }
Code	{ this . str = str ; <> }
Distance : 9

174
Tree	{ this . str = str ; finally }
Code	{ this . str = str ; finally }
Distance : 9

175
Tree	{ this . str = str ; reportNot }
Code	{ this . str = str ; reportNot }
Distance : 9

176
Tree	{ this . str = str ; switch }
Code	{ this . str = str ; switch }
Distance : 9

177
Tree	{ this . str = str ; setAcceptedLanguage }
Code	{ this . str = str ; setAcceptedLanguage }
Distance : 9

178
Tree	{ this . str = str ; FunctionEvaluationException }
Code	{ this . str = str ; FunctionEvaluationException }
Distance : 9

179
Tree	{ this . str = str ; JSType }
Code	{ this . str = str ; JSType }
Distance : 9

180
Tree	{ this . str = str ; case }
Code	{ this . str = str ; case }
Distance : 9

181
Tree	{ this . str = str ; setCostAccuracy }
Code	{ this . str = str ; setCostAccuracy }
Distance : 9

182
Tree	{ this . str = str ; && }
Code	{ this . str = str ; && }
Distance : 9

183
Tree	{ this . str = str ; mockingProgress }
Code	{ this . str = str ; mockingProgress }
Distance : 9

184
Tree	{ this . str = str ; catch }
Code	{ this . str = str ; catch }
Distance : 9

185
Tree	{ this . str = str ; class }
Code	{ this . str = str ; class }
Distance : 9

186
Tree	{ this . str = str ; enableNormalize }
Code	{ this . str = str ; enableNormalize }
Distance : 9

187
Tree	{ return escapeJavaStyleString ( str , IncrementalCheckMode.GENERATE_IJS ) ; }
Code	{ return escapeJavaStyleString ( str , IncrementalCheckMode.GENERATE_IJS ) ; }
Distance : 3

188
Tree	{ this . str = str ; T }
Code	{ this . str = str ; T }
Distance : 9

189
Tree	{ this . str = str ; fireDatasetChanged }
Code	{ this . str = str ; fireDatasetChanged }
Distance : 9

190
Tree	{ this . str = str ; setSeedInternal }
Code	{ this . str = str ; setSeedInternal }
Distance : 9

191
Tree	{ return escapeJavaStyleString ( str , Strictness.SILENT ) ; }
Code	{ return escapeJavaStyleString ( str , Strictness.SILENT ) ; }
Distance : 3

192
Tree	{ this . str = str ; Method }
Code	{ this . str = str ; Method }
Distance : 9

193
Tree	{ this . str = str ; testRewrite }
Code	{ this . str = str ; testRewrite }
Distance : 9

194
Tree	{ this . str = str ; ! }
Code	{ this . str = str ; ! }
Distance : 9

195
Tree	{ this . str = str ; MatchableInvocation }
Code	{ this . str = str ; MatchableInvocation }
Distance : 9

196
Tree	{ return escapeJavaStyleString ( str , TypeInferenceMode.NEITHER ) ; }
Code	{ return escapeJavaStyleString ( str , TypeInferenceMode.NEITHER ) ; }
Distance : 3

197
Tree	{ this . str = str ; preserveClosurePrimitives }
Code	{ this . str = str ; preserveClosurePrimitives }
Distance : 9

198
Tree	{ return escapeJavaStyleString ( str , false ) ; } ]
Code	{ return escapeJavaStyleString ( str , false ) ; } ]
Distance : 4

199
Tree	{ return escapeJavaStyleString ( str , false ) ; } &&
Code	{ return escapeJavaStyleString ( str , false ) ; } &&
Distance : 4

========================================================================


========================================================================
Example Number: 41
Parent Code is: 
{ escapeJavaStyleString ( out , str , false ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ escapeJavaStyleString ( out , str , false , false ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=out}) (234{val=,}) (800{val=str}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ escapeJavaStyleString ( out , out , out ) ; }
Code	{ escapeJavaStyleString ( out , out , out ) ; }
Distance : 4

1
Tree	{ out . escapeJavaStyleString ( str ? iValues.length : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? iValues.length : array.length ) ; }
Distance : 8

2
Tree	{ MultiBackgroundInitializer.MultiBackgroundInitializerResults . escapeJavaStyleString ( str , out ) ; }
Code	{ MultiBackgroundInitializer.MultiBackgroundInitializerResults . escapeJavaStyleString ( str , out ) ; }
Distance : 7

3
Tree	{ setAlphaInternal . escapeJavaStyleString ( str , out ) ; }
Code	{ setAlphaInternal . escapeJavaStyleString ( str , out ) ; }
Distance : 7

4
Tree	{ Mockito.mockitoState . escapeJavaStyleString ( str , out ) ; }
Code	{ Mockito.mockitoState . escapeJavaStyleString ( str , out ) ; }
Distance : 7

5
Tree	{ str . escapeJavaStyleString ( str ? RandomNameGenerator.NONFIRST_CHAR : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? RandomNameGenerator.NONFIRST_CHAR : array.length ) ; }
Distance : 8

6
Tree	{ ObjectList . escapeJavaStyleString ( str , out ) ; }
Code	{ ObjectList . escapeJavaStyleString ( str , out ) ; }
Distance : 7

7
Tree	{ sumLogImpl . escapeJavaStyleString ( str , out ) ; }
Code	{ sumLogImpl . escapeJavaStyleString ( str , out ) ; }
Distance : 7

8
Tree	{ validateRestParameters . escapeJavaStyleString ( str , out ) ; }
Code	{ validateRestParameters . escapeJavaStyleString ( str , out ) ; }
Distance : 7

9
Tree	{ BigReal . escapeJavaStyleString ( str , out ) ; }
Code	{ BigReal . escapeJavaStyleString ( str , out ) ; }
Distance : 7

10
Tree	{ regex . escapeJavaStyleString ( str , out ) ; }
Code	{ regex . escapeJavaStyleString ( str , out ) ; }
Distance : 7

11
Tree	{ printTimeZone . escapeJavaStyleString ( str , out ) ; }
Code	{ printTimeZone . escapeJavaStyleString ( str , out ) ; }
Distance : 7

12
Tree	{ cachedP . escapeJavaStyleString ( str , out ) ; }
Code	{ cachedP . escapeJavaStyleString ( str , out ) ; }
Distance : 7

13
Tree	{ printTo . escapeJavaStyleString ( str , out ) ; }
Code	{ printTo . escapeJavaStyleString ( str , out ) ; }
Distance : 7

14
Tree	{ org.joda.time.gwt.util.Arrays . escapeJavaStyleString ( str , out ) ; }
Code	{ org.joda.time.gwt.util.Arrays . escapeJavaStyleString ( str , out ) ; }
Distance : 7

15
Tree	{ maybeAddUsage . escapeJavaStyleString ( str , str ) ; }
Code	{ maybeAddUsage . escapeJavaStyleString ( str , str ) ; }
Distance : 7

16
Tree	{ out . escapeJavaStyleString ( str ? RandomNameGenerator.NONFIRST_CHAR : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? RandomNameGenerator.NONFIRST_CHAR : array.length ) ; }
Distance : 8

17
Tree	{ MillisDurationField.INSTANCE . escapeJavaStyleString ( str , out ) ; }
Code	{ MillisDurationField.INSTANCE . escapeJavaStyleString ( str , out ) ; }
Distance : 7

18
Tree	{ addMeasurement . escapeJavaStyleString ( str , out ) ; }
Code	{ addMeasurement . escapeJavaStyleString ( str , out ) ; }
Distance : 7

19
Tree	{ DatePrinter . escapeJavaStyleString ( str , out ) ; }
Code	{ DatePrinter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

20
Tree	{ str . escapeJavaStyleString ( str ? p2.vector : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? p2.vector : array.length ) ; }
Distance : 8

21
Tree	{ str . escapeJavaStyleString ( str ? array.length : PropertyCollapseLevel.NONE ) ; }
Code	{ str . escapeJavaStyleString ( str ? array.length : PropertyCollapseLevel.NONE ) ; }
Distance : 8

22
Tree	{ DurationConverter . escapeJavaStyleString ( str , out ) ; }
Code	{ DurationConverter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

23
Tree	{ setSeriesShapesVisible . escapeJavaStyleString ( str , str ) ; }
Code	{ setSeriesShapesVisible . escapeJavaStyleString ( str , str ) ; }
Distance : 7

24
Tree	{ AClass . escapeJavaStyleString ( str , out ) ; }
Code	{ AClass . escapeJavaStyleString ( str , out ) ; }
Distance : 7

25
Tree	{ out . escapeJavaStyleString ( str ? values.length : PropertyCollapseLevel.NONE ) ; }
Code	{ out . escapeJavaStyleString ( str ? values.length : PropertyCollapseLevel.NONE ) ; }
Distance : 8

26
Tree	{ UnpaddedNumberField . escapeJavaStyleString ( str , out ) ; }
Code	{ UnpaddedNumberField . escapeJavaStyleString ( str , out ) ; }
Distance : 7

27
Tree	{ addRetType . escapeJavaStyleString ( str , out ) ; }
Code	{ addRetType . escapeJavaStyleString ( str , out ) ; }
Distance : 7

28
Tree	{ MockitoCore . escapeJavaStyleString ( str , out ) ; }
Code	{ MockitoCore . escapeJavaStyleString ( str , out ) ; }
Distance : 7

29
Tree	{ Rectangle2D.Double . escapeJavaStyleString ( str , out ) ; }
Code	{ Rectangle2D.Double . escapeJavaStyleString ( str , out ) ; }
Distance : 7

30
Tree	{ padChar . escapeJavaStyleString ( str , out ) ; }
Code	{ padChar . escapeJavaStyleString ( str , out ) ; }
Distance : 7

31
Tree	{ source.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Code	{ source.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Distance : 7

32
Tree	{ checkContractExpand . escapeJavaStyleString ( str , out ) ; }
Code	{ checkContractExpand . escapeJavaStyleString ( str , out ) ; }
Distance : 7

33
Tree	{ tStart . escapeJavaStyleString ( str , out ) ; }
Code	{ tStart . escapeJavaStyleString ( str , out ) ; }
Distance : 7

34
Tree	{ ModifyType.CEILING . escapeJavaStyleString ( str , out ) ; }
Code	{ ModifyType.CEILING . escapeJavaStyleString ( str , out ) ; }
Distance : 7

35
Tree	{ checkSignificanceLevel . escapeJavaStyleString ( str , out ) ; }
Code	{ checkSignificanceLevel . escapeJavaStyleString ( str , out ) ; }
Distance : 7

36
Tree	{ computeCorrelationMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ computeCorrelationMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

37
Tree	{ nextInt . escapeJavaStyleString ( str , out ) ; }
Code	{ nextInt . escapeJavaStyleString ( str , out ) ; }
Distance : 7

38
Tree	{ TimePeriodValue . escapeJavaStyleString ( str , out ) ; }
Code	{ TimePeriodValue . escapeJavaStyleString ( str , out ) ; }
Distance : 7

39
Tree	{ substring . escapeJavaStyleString ( str , out ) ; }
Code	{ substring . escapeJavaStyleString ( str , out ) ; }
Distance : 7

40
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : Locale.ROOT ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : Locale.ROOT ) ; }
Distance : 8

41
Tree	{ str . escapeJavaStyleString ( str ? iValues.length : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? iValues.length : array.length ) ; }
Distance : 8

42
Tree	{ close . escapeJavaStyleString ( str , out ) ; }
Code	{ close . escapeJavaStyleString ( str , out ) ; }
Distance : 7

43
Tree	{ setSeriesLinesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesLinesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

44
Tree	{ correct . escapeJavaStyleString ( str , out ) ; }
Code	{ correct . escapeJavaStyleString ( str , out ) ; }
Distance : 7

45
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : Locale.ROOT ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : Locale.ROOT ) ; }
Distance : 8

46
Tree	{ SparseFieldMatrix . escapeJavaStyleString ( str , str ) ; }
Code	{ SparseFieldMatrix . escapeJavaStyleString ( str , str ) ; }
Distance : 7

47
Tree	{ out . escapeJavaStyleString ( str ? array.length : PropertyCollapseLevel.NONE ) ; }
Code	{ out . escapeJavaStyleString ( str ? array.length : PropertyCollapseLevel.NONE ) ; }
Distance : 8

48
Tree	{ isSameLocalTime . escapeJavaStyleString ( str , out ) ; }
Code	{ isSameLocalTime . escapeJavaStyleString ( str , out ) ; }
Distance : 7

49
Tree	{ lastWasGap . escapeJavaStyleString ( str , out ) ; }
Code	{ lastWasGap . escapeJavaStyleString ( str , out ) ; }
Distance : 7

50
Tree	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : currentState.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : currentState.length ) ; }
Distance : 8

51
Tree	{ dest.incMoment . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.incMoment . escapeJavaStyleString ( str , out ) ; }
Distance : 7

52
Tree	{ ModuloAxis . escapeJavaStyleString ( str , out ) ; }
Code	{ ModuloAxis . escapeJavaStyleString ( str , out ) ; }
Distance : 7

53
Tree	{ Provider . escapeJavaStyleString ( str , out ) ; }
Code	{ Provider . escapeJavaStyleString ( str , out ) ; }
Distance : 7

54
Tree	{ es6config . escapeJavaStyleString ( str , out ) ; }
Code	{ es6config . escapeJavaStyleString ( str , out ) ; }
Distance : 7

55
Tree	{ out . escapeJavaStyleString ( out ) ; }
Code	{ out . escapeJavaStyleString ( out ) ; }
Distance : 8

56
Tree	{ addOrderedRequire . escapeJavaStyleString ( str , out ) ; }
Code	{ addOrderedRequire . escapeJavaStyleString ( str , out ) ; }
Distance : 7

57
Tree	{ FieldUtils . escapeJavaStyleString ( str , out ) ; }
Code	{ FieldUtils . escapeJavaStyleString ( str , out ) ; }
Distance : 7

58
Tree	{ cannotInitializeForInjectMocksAnnotation . escapeJavaStyleString ( str , out ) ; }
Code	{ cannotInitializeForInjectMocksAnnotation . escapeJavaStyleString ( str , out ) ; }
Distance : 7

59
Tree	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : EscapeUtils.ESCAPE_JAVA ) ; }
Code	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : EscapeUtils.ESCAPE_JAVA ) ; }
Distance : 8

60
Tree	{ out . escapeJavaStyleString ( str ? v2.data.length : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? v2.data.length : array.length ) ; }
Distance : 8

61
Tree	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : v2.data.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : v2.data.length ) ; }
Distance : 8

62
Tree	{ buffer . escapeJavaStyleString ( str , out ) ; }
Code	{ buffer . escapeJavaStyleString ( str , out ) ; }
Distance : 7

63
Tree	{ g0 . escapeJavaStyleString ( str , out ) ; }
Code	{ g0 . escapeJavaStyleString ( str , out ) ; }
Distance : 7

64
Tree	{ noNullElements . escapeJavaStyleString ( str , out ) ; }
Code	{ noNullElements . escapeJavaStyleString ( str , out ) ; }
Distance : 7

65
Tree	{ vals . escapeJavaStyleString ( str , str ) ; }
Code	{ vals . escapeJavaStyleString ( str , str ) ; }
Distance : 7

66
Tree	{ centered . escapeJavaStyleString ( str , str ) ; }
Code	{ centered . escapeJavaStyleString ( str , str ) ; }
Distance : 7

67
Tree	{ mocks.length . escapeJavaStyleString ( str , out ) ; }
Code	{ mocks.length . escapeJavaStyleString ( str , out ) ; }
Distance : 7

68
Tree	{ escapeJavaStyleString ( out , out ) ; }
Code	{ escapeJavaStyleString ( out , out ) ; }
Distance : 5

69
Tree	{ getRegistry . escapeJavaStyleString ( str , out ) ; }
Code	{ getRegistry . escapeJavaStyleString ( str , out ) ; }
Distance : 7

70
Tree	{ subtract . escapeJavaStyleString ( str , out ) ; }
Code	{ subtract . escapeJavaStyleString ( str , out ) ; }
Distance : 7

71
Tree	{ str . escapeJavaStyleString ( str ? v2.data.length : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? v2.data.length : array.length ) ; }
Distance : 8

72
Tree	{ Line . escapeJavaStyleString ( str , out ) ; }
Code	{ Line . escapeJavaStyleString ( str , out ) ; }
Distance : 7

73
Tree	{ StringEscapeUtils.ESCAPE_CSV . escapeJavaStyleString ( str , out ) ; }
Code	{ StringEscapeUtils.ESCAPE_CSV . escapeJavaStyleString ( str , out ) ; }
Distance : 7

74
Tree	{ testFunctionNamesAndIds . escapeJavaStyleString ( str , out ) ; }
Code	{ testFunctionNamesAndIds . escapeJavaStyleString ( str , out ) ; }
Distance : 7

75
Tree	{ str . escapeJavaStyleString ( str ? System.out : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? System.out : array.length ) ; }
Distance : 8

76
Tree	{ setTimeZone . escapeJavaStyleString ( str , out ) ; }
Code	{ setTimeZone . escapeJavaStyleString ( str , out ) ; }
Distance : 7

77
Tree	{ indexOfDifference . escapeJavaStyleString ( str , out ) ; }
Code	{ indexOfDifference . escapeJavaStyleString ( str , out ) ; }
Distance : 7

78
Tree	{ out . escapeJavaStyleString ( str ? p2.vector : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? p2.vector : array.length ) ; }
Distance : 8

79
Tree	{ str . escapeJavaStyleString ( out ) ; }
Code	{ str . escapeJavaStyleString ( out ) ; }
Distance : 8

80
Tree	{ dest.variance . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.variance . escapeJavaStyleString ( str , out ) ; }
Distance : 7

81
Tree	{ Hibernate.DATE . escapeJavaStyleString ( str , out ) ; }
Code	{ Hibernate.DATE . escapeJavaStyleString ( str , out ) ; }
Distance : 7

82
Tree	{ str . escapeJavaStyleString ( str ? size : PropertyCollapseLevel.NONE ) ; }
Code	{ str . escapeJavaStyleString ( str ? size : PropertyCollapseLevel.NONE ) ; }
Distance : 8

83
Tree	{ LoessInterpolator . escapeJavaStyleString ( str , str ) ; }
Code	{ LoessInterpolator . escapeJavaStyleString ( str , str ) ; }
Distance : 7

84
Tree	{ out . escapeJavaStyleString ( str ? System.out : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? System.out : array.length ) ; }
Distance : 8

85
Tree	{ lastIndexOf . escapeJavaStyleString ( str , str ) ; }
Code	{ lastIndexOf . escapeJavaStyleString ( str , str ) ; }
Distance : 7

86
Tree	{ switch . escapeJavaStyleString ( str , out ) ; }
Code	{ switch . escapeJavaStyleString ( str , out ) ; }
Distance : 7

87
Tree	{ UnescapeUtils.UNESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Code	{ UnescapeUtils.UNESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Distance : 7

88
Tree	{ translate . escapeJavaStyleString ( str , str ) ; }
Code	{ translate . escapeJavaStyleString ( str , str ) ; }
Distance : 7

89
Tree	{ out . escapeJavaStyleString ( str ? size : PropertyCollapseLevel.NONE ) ; }
Code	{ out . escapeJavaStyleString ( str ? size : PropertyCollapseLevel.NONE ) ; }
Distance : 8

90
Tree	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : EscapeUtils.ESCAPE_JAVA ) ; }
Code	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : EscapeUtils.ESCAPE_JAVA ) ; }
Distance : 8

91
Tree	{ CharSequenceUtils . escapeJavaStyleString ( str , out ) ; }
Code	{ CharSequenceUtils . escapeJavaStyleString ( str , out ) ; }
Distance : 7

92
Tree	{ Pair . escapeJavaStyleString ( str , out ) ; }
Code	{ Pair . escapeJavaStyleString ( str , out ) ; }
Distance : 7

93
Tree	{ appendDigits . escapeJavaStyleString ( str , out ) ; }
Code	{ appendDigits . escapeJavaStyleString ( str , out ) ; }
Distance : 7

94
Tree	{ BigFraction . escapeJavaStyleString ( str , out ) ; }
Code	{ BigFraction . escapeJavaStyleString ( str , out ) ; }
Distance : 7

95
Tree	{ FitnessFunction . escapeJavaStyleString ( str , out ) ; }
Code	{ FitnessFunction . escapeJavaStyleString ( str , out ) ; }
Distance : 7

96
Tree	{ StandardEntityCollection . escapeJavaStyleString ( str , out ) ; }
Code	{ StandardEntityCollection . escapeJavaStyleString ( str , out ) ; }
Distance : 7

97
Tree	{ setLinesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setLinesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

98
Tree	{ LoessInterpolator . escapeJavaStyleString ( str , out ) ; }
Code	{ LoessInterpolator . escapeJavaStyleString ( str , out ) ; }
Distance : 7

99
Tree	{ lastIndexOf . escapeJavaStyleString ( str , out ) ; }
Code	{ lastIndexOf . escapeJavaStyleString ( str , out ) ; }
Distance : 7

100
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : array.length ) ; }
Distance : 8

101
Tree	{ translate . escapeJavaStyleString ( str , out ) ; }
Code	{ translate . escapeJavaStyleString ( str , out ) ; }
Distance : 7

102
Tree	{ vals . escapeJavaStyleString ( str , out ) ; }
Code	{ vals . escapeJavaStyleString ( str , out ) ; }
Distance : 7

103
Tree	{ centered . escapeJavaStyleString ( str , out ) ; }
Code	{ centered . escapeJavaStyleString ( str , out ) ; }
Distance : 7

104
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( out , out ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( out , out ) ; }
Distance : 7

105
Tree	{ escapeJavaStyleString ( str , out , out ) ; }
Code	{ escapeJavaStyleString ( str , out , out ) ; }
Distance : 4

106
Tree	{ helperExposeExpression . escapeJavaStyleString ( str , out ) ; }
Code	{ helperExposeExpression . escapeJavaStyleString ( str , out ) ; }
Distance : 7

107
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : array.length ) ; }
Distance : 8

108
Tree	{ escapeJavaStyleString ( str , out ) ; }
Code	{ escapeJavaStyleString ( str , out ) ; }
Distance : 5

109
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : PropertyCollapseLevel.NONE ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : PropertyCollapseLevel.NONE ) ; }
Distance : 8

110
Tree	{ checkTokenized . escapeJavaStyleString ( str , out ) ; }
Code	{ checkTokenized . escapeJavaStyleString ( str , out ) ; }
Distance : 7

111
Tree	{ escapeJavaStyleString ( str , out , str ) ; }
Code	{ escapeJavaStyleString ( str , out , str ) ; }
Distance : 4

112
Tree	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : array.length ) ; }
Distance : 8

113
Tree	{ str . escapeJavaStyleString ( out , out ) ; }
Code	{ str . escapeJavaStyleString ( out , out ) ; }
Distance : 7

114
Tree	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : array.length ) ; }
Distance : 8

115
Tree	{ TestProblem5 . escapeJavaStyleString ( str , out ) ; }
Code	{ TestProblem5 . escapeJavaStyleString ( str , out ) ; }
Distance : 7

116
Tree	{ out . escapeJavaStyleString ( out , out ) ; }
Code	{ out . escapeJavaStyleString ( out , out ) ; }
Distance : 7

117
Tree	{ RealMethod.FromCallable . escapeJavaStyleString ( str , out ) ; }
Code	{ RealMethod.FromCallable . escapeJavaStyleString ( str , out ) ; }
Distance : 7

118
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : PropertyCollapseLevel.NONE ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : PropertyCollapseLevel.NONE ) ; }
Distance : 8

119
Tree	{ sourceJarComparator . escapeJavaStyleString ( str , out ) ; }
Code	{ sourceJarComparator . escapeJavaStyleString ( str , out ) ; }
Distance : 7

120
Tree	{ SparseFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ SparseFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

121
Tree	{ setSeriesShapesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesShapesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

122
Tree	{ escapeJavaStyleString ( out , out , str ) ; }
Code	{ escapeJavaStyleString ( out , out , str ) ; }
Distance : 4

123
Tree	{ iterateRangeBounds . escapeJavaStyleString ( str , out ) ; }
Code	{ iterateRangeBounds . escapeJavaStyleString ( str , out ) ; }
Distance : 7

124
Tree	{ escapeJavaStyleString ( out , out , false ) ; }
Code	{ escapeJavaStyleString ( out , out , false ) ; }
Distance : 3

125
Tree	{ escapeJavaStyleString ( out , out , out , false ) ; }
Code	{ escapeJavaStyleString ( out , out , out , false ) ; }
Distance : 2

126
Tree	{ escapeJavaStyleString ( out , out , str , false ) ; }
Code	{ escapeJavaStyleString ( out , out , str , false ) ; }
Distance : 2

127
Tree	{ escapeJavaStyleString ( out , str , out ) ; }
Code	{ escapeJavaStyleString ( out , str , out ) ; }
Distance : 3

128
Tree	{ escapeJavaStyleString ( out , str ) ; }
Code	{ escapeJavaStyleString ( out , str ) ; }
Distance : 4

129
Tree	{ escapeJavaStyleString ( out , str , str ) ; }
Code	{ escapeJavaStyleString ( out , str , str ) ; }
Distance : 3

130
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , out ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , out ) ; }
Distance : 7

131
Tree	{ maybeAddUsage . escapeJavaStyleString ( str , out ) ; }
Code	{ maybeAddUsage . escapeJavaStyleString ( str , out ) ; }
Distance : 7

132
Tree	{ escapeJavaStyleString ( out , str , false ) ; }
Code	{ escapeJavaStyleString ( out , str , false ) ; }
Distance : 2

133
Tree	{ out . escapeJavaStyleString ( str , out ) ; }
Code	{ out . escapeJavaStyleString ( str , out ) ; }
Distance : 7

134
Tree	{ escapeJavaStyleString ( out , str , out , false ) ; }
Code	{ escapeJavaStyleString ( out , str , out , false ) ; }
Distance : 1

135
Tree	{ str . escapeJavaStyleString ( str ) ; }
Code	{ str . escapeJavaStyleString ( str ) ; }
Distance : 8

136
Tree	{ out . escapeJavaStyleString ( str ) ; }
Code	{ out . escapeJavaStyleString ( str ) ; }
Distance : 8

137
Tree	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , str ) ; }
Code	{ EscapeUtils.ESCAPE_JAVA . escapeJavaStyleString ( str , str ) ; }
Distance : 7

138
Tree	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Code	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , out ) ; }
Distance : 7

139
Tree	{ array.length . escapeJavaStyleString ( str , out ) ; }
Code	{ array.length . escapeJavaStyleString ( str , out ) ; }
Distance : 7

140
Tree	{ str . escapeJavaStyleString ( str , str ) ; }
Code	{ str . escapeJavaStyleString ( str , str ) ; }
Distance : 7

141
Tree	{ out . escapeJavaStyleString ( str , str ) ; }
Code	{ out . escapeJavaStyleString ( str , str ) ; }
Distance : 7

142
Tree	{ str . escapeJavaStyleString ( str , out ) ; }
Code	{ str . escapeJavaStyleString ( str , out ) ; }
Distance : 7

143
Tree	{ str . escapeJavaStyleString ( str ? values.length : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? values.length : array.length ) ; }
Distance : 8

144
Tree	{ escapeJavaStyleString ( out , str , str , false ) ; }
Code	{ escapeJavaStyleString ( out , str , str , false ) ; }
Distance : 1

145
Tree	{ out . escapeJavaStyleString ( str ? values.length : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? values.length : array.length ) ; }
Distance : 8

146
Tree	{ ImmutableSortedSet . escapeJavaStyleString ( str , out ) ; }
Code	{ ImmutableSortedSet . escapeJavaStyleString ( str , out ) ; }
Distance : 7

147
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : EscapeUtils.ESCAPE_JAVA ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : EscapeUtils.ESCAPE_JAVA ) ; }
Distance : 8

148
Tree	{ setShapesVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setShapesVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

149
Tree	{ str . escapeJavaStyleString ( str ? size : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? size : array.length ) ; }
Distance : 8

150
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : currentState.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : currentState.length ) ; }
Distance : 8

151
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : v2.data.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : v2.data.length ) ; }
Distance : 8

152
Tree	{ array.length . escapeJavaStyleString ( str , str ) ; }
Code	{ array.length . escapeJavaStyleString ( str , str ) ; }
Distance : 7

153
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : EscapeUtils.ESCAPE_JAVA ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : EscapeUtils.ESCAPE_JAVA ) ; }
Distance : 8

154
Tree	{ setSeriesItemLabelsVisible . escapeJavaStyleString ( str , out ) ; }
Code	{ setSeriesItemLabelsVisible . escapeJavaStyleString ( str , out ) ; }
Distance : 7

155
Tree	{ out . escapeJavaStyleString ( str ? size : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? size : array.length ) ; }
Distance : 8

156
Tree	{ IntervalConverter . escapeJavaStyleString ( str , out ) ; }
Code	{ IntervalConverter . escapeJavaStyleString ( str , out ) ; }
Distance : 7

157
Tree	{ getThrowableCount . escapeJavaStyleString ( str , out ) ; }
Code	{ getThrowableCount . escapeJavaStyleString ( str , out ) ; }
Distance : 7

158
Tree	{ escapeJavaStyleString ( str , out , false ) ; }
Code	{ escapeJavaStyleString ( str , out , false ) ; }
Distance : 3

159
Tree	{ newValues . escapeJavaStyleString ( str , out ) ; }
Code	{ newValues . escapeJavaStyleString ( str , out ) ; }
Distance : 7

160
Tree	{ alg . escapeJavaStyleString ( str , out ) ; }
Code	{ alg . escapeJavaStyleString ( str , out ) ; }
Distance : 7

161
Tree	{ scaled . escapeJavaStyleString ( str , out ) ; }
Code	{ scaled . escapeJavaStyleString ( str , out ) ; }
Distance : 7

162
Tree	{ str . escapeJavaStyleString ( str ? values.length : PropertyCollapseLevel.NONE ) ; }
Code	{ str . escapeJavaStyleString ( str ? values.length : PropertyCollapseLevel.NONE ) ; }
Distance : 8

163
Tree	{ ZipfDistribution . escapeJavaStyleString ( str , out ) ; }
Code	{ ZipfDistribution . escapeJavaStyleString ( str , out ) ; }
Distance : 7

164
Tree	{ lastIdx . escapeJavaStyleString ( str , out ) ; }
Code	{ lastIdx . escapeJavaStyleString ( str , out ) ; }
Distance : 7

165
Tree	{ MillisDuration . escapeJavaStyleString ( str , out ) ; }
Code	{ MillisDuration . escapeJavaStyleString ( str , out ) ; }
Distance : 7

166
Tree	{ CategoryLabelWidthType . escapeJavaStyleString ( str , out ) ; }
Code	{ CategoryLabelWidthType . escapeJavaStyleString ( str , out ) ; }
Distance : 7

167
Tree	{ repeat . escapeJavaStyleString ( str , out ) ; }
Code	{ repeat . escapeJavaStyleString ( str , out ) ; }
Distance : 7

168
Tree	{ out . escapeJavaStyleString ( str ? array.length : array.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? array.length : array.length ) ; }
Distance : 8

169
Tree	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : v2.data.length ) ; }
Code	{ out . escapeJavaStyleString ( str ? StringUtils.EMPTY : v2.data.length ) ; }
Distance : 8

170
Tree	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : PropertyCollapseLevel.NONE ) ; }
Code	{ out . escapeJavaStyleString ( str ? Locale.ENGLISH : PropertyCollapseLevel.NONE ) ; }
Distance : 8

171
Tree	{ StrSubstitutor . escapeJavaStyleString ( str , out ) ; }
Code	{ StrSubstitutor . escapeJavaStyleString ( str , out ) ; }
Distance : 7

172
Tree	{ verifyZeroInteractions . escapeJavaStyleString ( str , out ) ; }
Code	{ verifyZeroInteractions . escapeJavaStyleString ( str , out ) ; }
Distance : 7

173
Tree	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , str ) ; }
Code	{ EscapeUtils.ESCAPE_ECMASCRIPT . escapeJavaStyleString ( str , str ) ; }
Distance : 7

174
Tree	{ pads . escapeJavaStyleString ( str , out ) ; }
Code	{ pads . escapeJavaStyleString ( str , out ) ; }
Distance : 7

175
Tree	{ cacheEntry.input . escapeJavaStyleString ( str , out ) ; }
Code	{ cacheEntry.input . escapeJavaStyleString ( str , out ) ; }
Distance : 7

176
Tree	{ instantiatorProvider . escapeJavaStyleString ( str , out ) ; }
Code	{ instantiatorProvider . escapeJavaStyleString ( str , out ) ; }
Distance : 7

177
Tree	{ setEndMillis . escapeJavaStyleString ( str , out ) ; }
Code	{ setEndMillis . escapeJavaStyleString ( str , out ) ; }
Distance : 7

178
Tree	{ fixUnitializedVarDeclarations . escapeJavaStyleString ( str , out ) ; }
Code	{ fixUnitializedVarDeclarations . escapeJavaStyleString ( str , out ) ; }
Distance : 7

179
Tree	{ logSum . escapeJavaStyleString ( str , out ) ; }
Code	{ logSum . escapeJavaStyleString ( str , out ) ; }
Distance : 7

180
Tree	{ BlockFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Code	{ BlockFieldMatrix . escapeJavaStyleString ( str , out ) ; }
Distance : 7

181
Tree	{ someUnusedStubbingThatQualifiesForWarning . escapeJavaStyleString ( str , out ) ; }
Code	{ someUnusedStubbingThatQualifiesForWarning . escapeJavaStyleString ( str , out ) ; }
Distance : 7

182
Tree	{ resetMock . escapeJavaStyleString ( str , out ) ; }
Code	{ resetMock . escapeJavaStyleString ( str , out ) ; }
Distance : 7

183
Tree	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : PropertyCollapseLevel.NONE ) ; }
Code	{ str . escapeJavaStyleString ( str ? Locale.ENGLISH : PropertyCollapseLevel.NONE ) ; }
Distance : 8

184
Tree	{ CompilerTestCase.LINE_JOINER . escapeJavaStyleString ( str , out ) ; }
Code	{ CompilerTestCase.LINE_JOINER . escapeJavaStyleString ( str , out ) ; }
Distance : 7

185
Tree	{ setQuantile . escapeJavaStyleString ( str , out ) ; }
Code	{ setQuantile . escapeJavaStyleString ( str , out ) ; }
Distance : 7

186
Tree	{ str . escapeJavaStyleString ( str ? array.length : array.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? array.length : array.length ) ; }
Distance : 8

187
Tree	{ dest.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Code	{ dest.sumOfLogs . escapeJavaStyleString ( str , out ) ; }
Distance : 7

188
Tree	{ stdDev . escapeJavaStyleString ( str , out ) ; }
Code	{ stdDev . escapeJavaStyleString ( str , out ) ; }
Distance : 7

189
Tree	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : currentState.length ) ; }
Code	{ str . escapeJavaStyleString ( str ? StringUtils.EMPTY : currentState.length ) ; }
Distance : 8

190
Tree	{ smallestIndexOfDiff . escapeJavaStyleString ( str , out ) ; }
Code	{ smallestIndexOfDiff . escapeJavaStyleString ( str , out ) ; }
Distance : 7

191
Tree	{ getLength . escapeJavaStyleString ( str , out ) ; }
Code	{ getLength . escapeJavaStyleString ( str , out ) ; }
Distance : 7

192
Tree	{ str . escapeJavaStyleString ( str , out ) ; } s
Code	{ str . escapeJavaStyleString ( str , out ) ; } s
Distance : 8

193
Tree	{ str . escapeJavaStyleString ( str , out ) ; } traverseEs6
Code	{ str . escapeJavaStyleString ( str , out ) ; } traverseEs6
Distance : 8

194
Tree	{ str . escapeJavaStyleString ( str , out ) ; } obj
Code	{ str . escapeJavaStyleString ( str , out ) ; } obj
Distance : 8

195
Tree	{ str . escapeJavaStyleString ( str , out ) ; } y
Code	{ str . escapeJavaStyleString ( str , out ) ; } y
Distance : 8

196
Tree	{ str . escapeJavaStyleString ( str , out ) ; } double
Code	{ str . escapeJavaStyleString ( str , out ) ; } double
Distance : 8

197
Tree	{ str . escapeJavaStyleString ( str , out ) ; } i
Code	{ str . escapeJavaStyleString ( str , out ) ; } i
Distance : 8

198
Tree	{ str . escapeJavaStyleString ( str , out ) ; } value
Code	{ str . escapeJavaStyleString ( str , out ) ; } value
Distance : 8

199
Tree	{ str . escapeJavaStyleString ( str , out ) ; } T
Code	{ str . escapeJavaStyleString ( str , out ) ; } T
Distance : 8

========================================================================


========================================================================
Example Number: 42
Parent Code is: 
{ return escapeJavaStyleString ( str , false ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return escapeJavaStyleString ( str , false , false ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=escapeJavaStyleString}) (214{val=(}) (800{val=str}) (234{val=,}) (9{val=false}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/46/parent/src_java_org_apache_commons_lang_StringEscapeUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ this . str = str ; super }
Code	{ this . str = str ; super }
Distance : 9

1
Tree	{ this . str = str ; Period }
Code	{ this . str = str ; Period }
Distance : 9

2
Tree	{ this . str = str ; checkArgument }
Code	{ this . str = str ; checkArgument }
Distance : 9

3
Tree	{ this . str = str ; CircleVectorial }
Code	{ this . str = str ; CircleVectorial }
Distance : 9

4
Tree	{ this . str = str ; catch }
Code	{ this . str = str ; catch }
Distance : 9

5
Tree	{ this . str = str ; enableNormalize }
Code	{ this . str = str ; enableNormalize }
Distance : 9

6
Tree	{ this . str = str ; JSType }
Code	{ this . str = str ; JSType }
Distance : 9

7
Tree	{ this . str = str ; && }
Code	{ this . str = str ; && }
Distance : 9

8
Tree	{ this . str = str ; double }
Code	{ this . str = str ; double }
Distance : 9

9
Tree	{ this . str = str ; T }
Code	{ this . str = str ; T }
Distance : 9

10
Tree	{ this . str = str ; testRewrite }
Code	{ this . str = str ; testRewrite }
Distance : 9

11
Tree	{ this . str = str ; Method }
Code	{ this . str = str ; Method }
Distance : 9

12
Tree	{ this . str = str ; int }
Code	{ this . str = str ; int }
Distance : 9

13
Tree	{ this . str = str ; class }
Code	{ this . str = str ; class }
Distance : 9

14
Tree	{ this . str = str ; mockingProgress }
Code	{ this . str = str ; mockingProgress }
Distance : 9

15
Tree	{ this . str = str ; setAcceptedLanguage }
Code	{ this . str = str ; setAcceptedLanguage }
Distance : 9

16
Tree	{ return escapeJavaStyleString ( str , configureWith ) ; }
Code	{ return escapeJavaStyleString ( str , configureWith ) ; }
Distance : 3

17
Tree	{ this . str = str ; reportCodeChange }
Code	{ this . str = str ; reportCodeChange }
Distance : 9

18
Tree	{ this . str = str ; <> }
Code	{ this . str = str ; <> }
Distance : 9

19
Tree	{ this . str = str ; setCostAccuracy }
Code	{ this . str = str ; setCostAccuracy }
Distance : 9

20
Tree	{ this . str = str ; void }
Code	{ this . str = str ; void }
Distance : 9

21
Tree	{ this . str = str ; HashMap }
Code	{ this . str = str ; HashMap }
Distance : 9

22
Tree	{ this . str = str ; fireDatasetChanged }
Code	{ this . str = str ; fireDatasetChanged }
Distance : 9

23
Tree	{ this . str = str ; notNull }
Code	{ this . str = str ; notNull }
Distance : 9

24
Tree	{ this . str = str ; MatchableInvocation }
Code	{ this . str = str ; MatchableInvocation }
Distance : 9

25
Tree	{ this . str = str ; assertNotNull }
Code	{ this . str = str ; assertNotNull }
Distance : 9

26
Tree	{ this . str = str ; enableGatherExternProperties }
Code	{ this . str = str ; enableGatherExternProperties }
Distance : 9

27
Tree	{ this . str = str ; ArgumentCaptor }
Code	{ this . str = str ; ArgumentCaptor }
Distance : 9

28
Tree	{ this . str = str ; switch }
Code	{ this . str = str ; switch }
Distance : 9

29
Tree	{ this . str = str ; clone }
Code	{ this . str = str ; clone }
Distance : 9

30
Tree	{ this . str = str ; notifyListeners }
Code	{ this . str = str ; notifyListeners }
Distance : 9

31
Tree	{ this . str = str ; other.value }
Code	{ this . str = str ; other.value }
Distance : 9

32
Tree	{ this . str = str ; printTo }
Code	{ this . str = str ; printTo }
Distance : 9

33
Tree	{ this . str = str ; assertEquals }
Code	{ this . str = str ; assertEquals }
Distance : 9

34
Tree	{ this . str = str ; ! }
Code	{ this . str = str ; ! }
Distance : 9

35
Tree	{ this . str = str ; preserveClosurePrimitives }
Code	{ this . str = str ; preserveClosurePrimitives }
Distance : 9

36
Tree	{ this . str = str ; finally }
Code	{ this . str = str ; finally }
Distance : 9

37
Tree	{ this . str = str ; InternalParser }
Code	{ this . str = str ; InternalParser }
Distance : 9

38
Tree	{ this . str = str ; integrator }
Code	{ this . str = str ; integrator }
Distance : 9

39
Tree	{ this . str = str ; case }
Code	{ this . str = str ; case }
Distance : 9

40
Tree	{ this . str = str ; assertNull }
Code	{ this . str = str ; assertNull }
Distance : 9

41
Tree	{ this . str = str ; reportNot }
Code	{ this . str = str ; reportNot }
Distance : 9

42
Tree	{ this . str = str ; Font }
Code	{ this . str = str ; Font }
Distance : 9

43
Tree	{ this . str = str ; - }
Code	{ this . str = str ; - }
Distance : 9

44
Tree	{ this . str = str ; setLanguage }
Code	{ this . str = str ; setLanguage }
Distance : 9

45
Tree	{ this . str = str ; LanguageMode.ECMASCRIPT_NEXT }
Code	{ this . str = str ; LanguageMode.ECMASCRIPT_NEXT }
Distance : 9

46
Tree	{ this . str = str ; & }
Code	{ this . str = str ; & }
Distance : 9

47
Tree	{ this . str = str ; LocalizedFormats.NO_DATA }
Code	{ this . str = str ; LocalizedFormats.NO_DATA }
Distance : 9

48
Tree	{ this . str = str ; FunctionEvaluationException }
Code	{ this . str = str ; FunctionEvaluationException }
Distance : 9

49
Tree	{ this . str = str ; reportAnd }
Code	{ this . str = str ; reportAnd }
Distance : 9

50
Tree	{ this . str = str ; char }
Code	{ this . str = str ; char }
Distance : 9

51
Tree	{ this . str = str ; reportMatcher }
Code	{ this . str = str ; reportMatcher }
Distance : 9

52
Tree	{ this . str = str ; disableTypeCheck }
Code	{ this . str = str ; disableTypeCheck }
Distance : 9

53
Tree	{ this . str = str ; += }
Code	{ this . str = str ; += }
Distance : 9

54
Tree	{ this . str = str ; <= }
Code	{ this . str = str ; <= }
Distance : 9

55
Tree	{ this . str = str ; * }
Code	{ this . str = str ; * }
Distance : 9

56
Tree	{ this . str = str ; continue; }
Code	{ this . str = str ; continue; }
Distance : 9

57
Tree	{ this . str = str ; @ }
Code	{ this . str = str ; @ }
Distance : 9

58
Tree	{ this . str = str ; return }
Code	{ this . str = str ; return }
Distance : 9

59
Tree	{ this . str = str ; private }
Code	{ this . str = str ; private }
Distance : 9

60
Tree	{ this . str = str ; static }
Code	{ this . str = str ; static }
Distance : 9

61
Tree	{ this . str = str ; break; }
Code	{ this . str = str ; break; }
Distance : 9

62
Tree	{ this . str = str ; return; }
Code	{ this . str = str ; return; }
Distance : 9

63
Tree	{ this . str = str ; Printable }
Code	{ this . str = str ; Printable }
Distance : 9

64
Tree	{ this . str = str ; this }
Code	{ this . str = str ; this }
Distance : 9

65
Tree	{ this . str = str ; checkNotNull }
Code	{ this . str = str ; checkNotNull }
Distance : 9

66
Tree	{ this . str = str ; assert }
Code	{ this . str = str ; assert }
Distance : 9

67
Tree	{ this . str = str ; ++ }
Code	{ this . str = str ; ++ }
Distance : 9

68
Tree	{ this . str = str ; fireChangeEvent }
Code	{ this . str = str ; fireChangeEvent }
Distance : 9

69
Tree	{ this . str = str ; CHAR_CONS }
Code	{ this . str = str ; CHAR_CONS }
Distance : 9

70
Tree	{ this . str = str ; throw }
Code	{ this . str = str ; throw }
Distance : 9

71
Tree	{ this . str = str ; byte }
Code	{ this . str = str ; byte }
Distance : 9

72
Tree	{ this . str = str ; MOCKING_PROGRESS }
Code	{ this . str = str ; MOCKING_PROGRESS }
Distance : 9

73
Tree	{ this . str = str ; abstract }
Code	{ this . str = str ; abstract }
Distance : 9

74
Tree	{ this . str = str ; final }
Code	{ this . str = str ; final }
Distance : 9

75
Tree	{ this . str = str ; synchronized }
Code	{ this . str = str ; synchronized }
Distance : 9

76
Tree	{ this . str = str ; float }
Code	{ this . str = str ; float }
Distance : 9

77
Tree	{ this . str = str ; allowExternsChanges }
Code	{ this . str = str ; allowExternsChanges }
Distance : 9

78
Tree	{ return escapeJavaStyleString ( str , StringUtils.EMPTY ) ; }
Code	{ return escapeJavaStyleString ( str , StringUtils.EMPTY ) ; }
Distance : 3

79
Tree	{ this . str = str ; public }
Code	{ this . str = str ; public }
Distance : 9

80
Tree	{ return escapeJavaStyleString ( str , iValues.length ) ; }
Code	{ return escapeJavaStyleString ( str , iValues.length ) ; }
Distance : 3

81
Tree	{ this . str = str ; boolean }
Code	{ this . str = str ; boolean }
Distance : 9

82
Tree	{ this . str = str ; long }
Code	{ this . str = str ; long }
Distance : 9

83
Tree	{ this . str = str ; false }
Code	{ this . str = str ; false }
Distance : 8

84
Tree	{ this . str = str ; validateAstChangeMarking }
Code	{ this . str = str ; validateAstChangeMarking }
Distance : 9

85
Tree	{ this . str = str ; short }
Code	{ this . str = str ; short }
Distance : 9

86
Tree	{ this . str = str ; enableRunTypeCheckAfterProcessing }
Code	{ this . str = str ; enableRunTypeCheckAfterProcessing }
Distance : 9

87
Tree	{ this . str = str ; enableTypeCheck }
Code	{ this . str = str ; enableTypeCheck }
Distance : 9

88
Tree	{ this . str = str ; -- }
Code	{ this . str = str ; -- }
Distance : 9

89
Tree	{ this . str = str ; {} }
Code	{ this . str = str ; {} }
Distance : 9

90
Tree	{ this . str = str ; TypeI }
Code	{ this . str = str ; TypeI }
Distance : 9

91
Tree	{ this . str = str ; Matcher }
Code	{ this . str = str ; Matcher }
Distance : 9

92
Tree	{ this . str = str ; try }
Code	{ this . str = str ; try }
Distance : 9

93
Tree	{ super . escapeJavaStyleString ( str ) ; return null ; }
Code	{ super . escapeJavaStyleString ( str ) ; return null ; }
Distance : 7

94
Tree	{ super . escapeJavaStyleString ( str ) ; return false ; }
Code	{ super . escapeJavaStyleString ( str ) ; return false ; }
Distance : 6

95
Tree	{ this . str = str ; fireAnnotationChanged }
Code	{ this . str = str ; fireAnnotationChanged }
Distance : 9

96
Tree	{ this . str = str ; for }
Code	{ this . str = str ; for }
Distance : 9

97
Tree	{ this . str = str ; else }
Code	{ this . str = str ; else }
Distance : 9

98
Tree	{ this . str = str ; setSeedInternal }
Code	{ this . str = str ; setSeedInternal }
Distance : 9

99
Tree	{ return escapeJavaStyleString ( str , str , options.removeUnusedPrototypeProperties ) ; }
Code	{ return escapeJavaStyleString ( str , str , options.removeUnusedPrototypeProperties ) ; }
Distance : 2

100
Tree	{ this . str = str ; DummyLocalizable }
Code	{ this . str = str ; DummyLocalizable }
Distance : 9

101
Tree	{ this . str = str ; MockitoConfiguration }
Code	{ this . str = str ; MockitoConfiguration }
Distance : 9

102
Tree	{ this . str = str ; cloned.chars }
Code	{ this . str = str ; cloned.chars }
Distance : 9

103
Tree	{ this . str = str ; getLastArguments }
Code	{ this . str = str ; getLastArguments }
Distance : 9

104
Tree	{ this . str = str ; ContinuousOutputFieldModel }
Code	{ this . str = str ; ContinuousOutputFieldModel }
Distance : 9

105
Tree	{ this . str = str ; problem.y }
Code	{ this . str = str ; problem.y }
Distance : 9

106
Tree	{ this . str = str ; Map.Entry }
Code	{ this . str = str ; Map.Entry }
Distance : 9

107
Tree	{ this . str = str ; argumentsMatch }
Code	{ this . str = str ; argumentsMatch }
Distance : 9

108
Tree	{ this . str = str ; TypeInferenceMode.OTI_ONLY }
Code	{ this . str = str ; TypeInferenceMode.OTI_ONLY }
Distance : 9

109
Tree	{ this . str = str ; continue }
Code	{ this . str = str ; continue }
Distance : 9

110
Tree	{ this . str = str ; SerialUtils }
Code	{ this . str = str ; SerialUtils }
Distance : 9

111
Tree	{ this . str = str ; StringBuffer }
Code	{ this . str = str ; StringBuffer }
Distance : 9

112
Tree	{ this . str = str ; while }
Code	{ this . str = str ; while }
Distance : 9

113
Tree	{ this . str = str ; MockHandlerInterface }
Code	{ this . str = str ; MockHandlerInterface }
Distance : 9

114
Tree	{ this . str = str ; Localizable }
Code	{ this . str = str ; Localizable }
Distance : 9

115
Tree	{ this . str = str ; getArguments }
Code	{ this . str = str ; getArguments }
Distance : 9

116
Tree	{ this . str = str ; compiler }
Code	{ this . str = str ; compiler }
Distance : 9

117
Tree	{ this . str = str ; HandyReturnValues }
Code	{ this . str = str ; HandyReturnValues }
Distance : 9

118
Tree	{ return escapeJavaStyleString ( str , str , Verification.EXPLICIT ) ; }
Code	{ return escapeJavaStyleString ( str , str , Verification.EXPLICIT ) ; }
Distance : 2

119
Tree	{ this . str = str ; CompareToBuilder }
Code	{ this . str = str ; CompareToBuilder }
Distance : 9

120
Tree	{ this . str = str ; ThreadSafeDelegatingErrorManager }
Code	{ this . str = str ; ThreadSafeDelegatingErrorManager }
Distance : 9

121
Tree	{ this . str = str ; matcher }
Code	{ this . str = str ; matcher }
Distance : 9

122
Tree	{ this . str = str ; InvocationContainerImpl }
Code	{ this . str = str ; InvocationContainerImpl }
Distance : 9

123
Tree	{ this . str = str ; TextFragment }
Code	{ this . str = str ; TextFragment }
Distance : 9

124
Tree	{ this . str = str ; if }
Code	{ this . str = str ; if }
Distance : 9

125
Tree	{ this . str = str ; FlowScope }
Code	{ this . str = str ; FlowScope }
Distance : 9

126
Tree	{ this . str = str ; addWindowProperties }
Code	{ this . str = str ; addWindowProperties }
Distance : 9

127
Tree	{ this . str = str ; withLoose }
Code	{ this . str = str ; withLoose }
Distance : 9

128
Tree	{ this . str = str ; testSameEs6 }
Code	{ this . str = str ; testSameEs6 }
Distance : 9

129
Tree	{ this . str = str ; iMillis }
Code	{ this . str = str ; iMillis }
Distance : 9

130
Tree	{ this . str = str ; LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE }
Code	{ this . str = str ; LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE }
Distance : 9

131
Tree	{ this . str = str ; LocalizedFormats.VECTOR_LENGTH_MISMATCH }
Code	{ this . str = str ; LocalizedFormats.VECTOR_LENGTH_MISMATCH }
Distance : 9

132
Tree	{ this . str = str ; UnivariateVectorialFunction }
Code	{ this . str = str ; UnivariateVectorialFunction }
Distance : 9

133
Tree	{ this . str = str ; : }
Code	{ this . str = str ; : }
Distance : 9

134
Tree	{ this . str = str ; DateTimeParser }
Code	{ this . str = str ; DateTimeParser }
Distance : 9

135
Tree	{ return escapeJavaStyleString ( str , that.paint ) ; }
Code	{ return escapeJavaStyleString ( str , that.paint ) ; }
Distance : 3

136
Tree	{ this . str = str ; preserveGoogProvidesAndRequires }
Code	{ this . str = str ; preserveGoogProvidesAndRequires }
Distance : 9

137
Tree	{ return escapeJavaStyleString ( str , str , rhs.b ) ; }
Code	{ return escapeJavaStyleString ( str , str , rhs.b ) ; }
Distance : 2

138
Tree	{ return escapeJavaStyleString ( str , array.length ) ; }
Code	{ return escapeJavaStyleString ( str , array.length ) ; }
Distance : 3

139
Tree	{ this . str = str ; CrossModuleReferenceCollector }
Code	{ this . str = str ; CrossModuleReferenceCollector }
Distance : 9

140
Tree	{ this . str = str ; MockSettingsInfo }
Code	{ this . str = str ; MockSettingsInfo }
Distance : 9

141
Tree	{ this . str = str ; Compiler }
Code	{ this . str = str ; Compiler }
Distance : 9

142
Tree	{ this . str = str ; ^ }
Code	{ this . str = str ; ^ }
Distance : 9

143
Tree	{ this . str = str ; ignoreWarnings }
Code	{ this . str = str ; ignoreWarnings }
Distance : 9

144
Tree	{ this . str = str ; iSuffixes }
Code	{ this . str = str ; iSuffixes }
Distance : 9

145
Tree	{ return escapeJavaStyleString ( str , str , TimeUnit.DAYS ) ; }
Code	{ return escapeJavaStyleString ( str , str , TimeUnit.DAYS ) ; }
Distance : 2

146
Tree	{ this . str = str ; threadSafely }
Code	{ this . str = str ; threadSafely }
Distance : 9

147
Tree	{ this . str = str ; UnitSphereSampler }
Code	{ this . str = str ; UnitSphereSampler }
Distance : 9

148
Tree	{ this . str = str ; testDependentModules }
Code	{ this . str = str ; testDependentModules }
Distance : 9

149
Tree	{ this . str = str ; RectangleEdge }
Code	{ this . str = str ; RectangleEdge }
Distance : 9

150
Tree	{ this . str = str ; UnivariateOptimizer }
Code	{ this . str = str ; UnivariateOptimizer }
Distance : 9

151
Tree	{ this . str = str ; *= }
Code	{ this . str = str ; *= }
Distance : 9

152
Tree	{ this . str = str ; peg }
Code	{ this . str = str ; peg }
Distance : 9

153
Tree	{ this . str = str ; createIllegalArgumentException }
Code	{ this . str = str ; createIllegalArgumentException }
Distance : 9

154
Tree	{ this . str = str ; Object }
Code	{ this . str = str ; Object }
Distance : 9

155
Tree	{ this . str = str ; Set }
Code	{ this . str = str ; Set }
Distance : 9

156
Tree	{ this . str = str ; DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT }
Code	{ this . str = str ; DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT }
Distance : 9

157
Tree	{ this . str = str ; getField }
Code	{ this . str = str ; getField }
Distance : 9

158
Tree	{ this . str = str ; ? }
Code	{ this . str = str ; ? }
Distance : 9

159
Tree	{ this . str = str ; array }
Code	{ this . str = str ; array }
Distance : 9

160
Tree	{ this . str = str ; testTypes }
Code	{ this . str = str ; testTypes }
Distance : 9

161
Tree	{ this . str = str ; ReadablePartial }
Code	{ this . str = str ; ReadablePartial }
Distance : 9

162
Tree	{ this . str = str ; parseError }
Code	{ this . str = str ; parseError }
Distance : 9

163
Tree	{ this . str = str ; AllowedSolution.ANY_SIDE }
Code	{ this . str = str ; AllowedSolution.ANY_SIDE }
Distance : 9

164
Tree	{ this . str = str ; setValues }
Code	{ this . str = str ; setValues }
Distance : 9

165
Tree	{ this . str = str ; super(); }
Code	{ this . str = str ; super(); }
Distance : 9

166
Tree	{ this . str = str ; assertNoPureCalls }
Code	{ this . str = str ; assertNoPureCalls }
Distance : 9

167
Tree	{ this . str = str ; isEquals }
Code	{ this . str = str ; isEquals }
Distance : 9

168
Tree	{ this . str = str ; value }
Code	{ this . str = str ; value }
Distance : 9

169
Tree	{ this . str = str ; assertArrayEquals }
Code	{ this . str = str ; assertArrayEquals }
Distance : 9

170
Tree	{ this . str = str ; res }
Code	{ this . str = str ; res }
Distance : 9

171
Tree	{ this . str = str ; unsupported }
Code	{ this . str = str ; unsupported }
Distance : 9

172
Tree	{ this . str = str ; assertFalse }
Code	{ this . str = str ; assertFalse }
Distance : 9

173
Tree	{ this . str = str ; throws }
Code	{ this . str = str ; throws }
Distance : 9

174
Tree	{ this . str = str ; DelayedExecution }
Code	{ this . str = str ; DelayedExecution }
Distance : 9

175
Tree	{ this . str = str ; expectedFeatures }
Code	{ this . str = str ; expectedFeatures }
Distance : 9

176
Tree	{ this . str = str ; FeatureSet.BARE_MINIMUM }
Code	{ this . str = str ; FeatureSet.BARE_MINIMUM }
Distance : 9

177
Tree	{ this . str = str ; UnivariateRealFunction }
Code	{ this . str = str ; UnivariateRealFunction }
Distance : 9

178
Tree	{ this . str = str ; LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE }
Code	{ this . str = str ; LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE }
Distance : 9

179
Tree	{ this . str = str ; DateTimePrinter }
Code	{ this . str = str ; DateTimePrinter }
Distance : 9

180
Tree	{ return escapeJavaStyleString ( str , p2.vector ) ; }
Code	{ return escapeJavaStyleString ( str , p2.vector ) ; }
Distance : 3

181
Tree	{ this . str = str ; getName }
Code	{ this . str = str ; getName }
Distance : 9

182
Tree	{ this . str = str ; Path }
Code	{ this . str = str ; Path }
Distance : 9

183
Tree	{ this . str = str ; TypeInferenceMode.NEITHER }
Code	{ this . str = str ; TypeInferenceMode.NEITHER }
Distance : 9

184
Tree	{ this . str = str ; ObjectOutputStream }
Code	{ this . str = str ; ObjectOutputStream }
Distance : 9

185
Tree	{ this . str = str ; clear }
Code	{ this . str = str ; clear }
Distance : 9

186
Tree	{ this . str = str ; IllegalArgumentException }
Code	{ this . str = str ; IllegalArgumentException }
Distance : 9

187
Tree	{ this . str = str ; MockName }
Code	{ this . str = str ; MockName }
Distance : 9

188
Tree	{ this . str = str ; UnivariateIntegrator }
Code	{ this . str = str ; UnivariateIntegrator }
Distance : 9

189
Tree	{ this . str = str ; URI }
Code	{ this . str = str ; URI }
Distance : 9

190
Tree	{ this . str = str ; S }
Code	{ this . str = str ; S }
Distance : 9

191
Tree	{ this . str = str ; ReadablePeriod }
Code	{ this . str = str ; ReadablePeriod }
Distance : 9

192
Tree	{ this . str = str ; assertMessageContains }
Code	{ this . str = str ; assertMessageContains }
Distance : 9

193
Tree	{ this . str = str ; mask }
Code	{ this . str = str ; mask }
Distance : 9

194
Tree	{ this . str = str ; extends }
Code	{ this . str = str ; extends }
Distance : 9

195
Tree	{ this . str = str ; iChronology }
Code	{ this . str = str ; iChronology }
Distance : 9

196
Tree	{ return escapeJavaStyleString ( str , false ) ; }
Code	{ return escapeJavaStyleString ( str , false ) ; }
Distance : 2

197
Tree	{ this . str = str ; getEmptyObjectLiteral }
Code	{ this . str = str ; getEmptyObjectLiteral }
Distance : 9

198
Tree	{ return escapeJavaStyleString ( str , false ) ; } protected
Code	{ return escapeJavaStyleString ( str , false ) ; } protected
Distance : 3

199
Tree	{ return escapeJavaStyleString ( str , rhs.length ) ; }
Code	{ return escapeJavaStyleString ( str , rhs.length ) ; }
Distance : 3

========================================================================


========================================================================
Example Number: 43
Parent Code is: 
if ( element != null ) { type = element . getClass () ; } else { type = Object . class ; }
-------------------------------------------------------------------------------
Child code is: 
if ( element != null ) { type = element . getClass () ; } else { throw new IllegalArgumentException ( STRING_CONSTANT ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=element}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=element}) (235{val=.}) (802{val=getClass}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=element}) (242{val=!=}) (500{val=null})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=type}) (204{val==}) (32 (800{val=element}) (235{val=.}) (802{val=getClass}) (216{val=()}))) (227{val=;})) (219{val=}})) (322{val=else}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=IllegalArgumentException})) (214{val=(}) (45{val=STRING_CONSTANT}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/35/parent/src_main_java_org_apache_commons_lang3_ArrayUtils.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Distance : 9

1
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

2
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = ( type ) element . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = ( type ) element . getClass () ; }
Distance : 9

3
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

4
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = ( type ) Object . getClass () ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = ( type ) Object . getClass () ; }
Distance : 9

5
Tree	if ( type != null ) { type = type . getClass () ; } else { type = type . getClass () ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = type . getClass () ; }
Distance : 8

6
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = ( element ) element . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = ( element ) element . getClass () ; }
Distance : 8

7
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

8
Tree	if ( element != null ) { element = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

9
Tree	if ( type != null ) { element = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

10
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = Object . getClass () ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = Object . getClass () ; }
Distance : 7

11
Tree	if ( type != null ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

12
Tree	if ( type != null ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

13
Tree	if ( element != null ) { type = type . getClass () ; } else { element = ( Object ) type . getClass () ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = ( Object ) type . getClass () ; }
Distance : 9

14
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = ( element ) element . getClass () ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = ( element ) element . getClass () ; }
Distance : 9

15
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = ( element ) type . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = ( element ) type . getClass () ; }
Distance : 9

16
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

17
Tree	if ( element != null ) { element = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Distance : 9

18
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

19
Tree	if ( element != return; ) { type = element . getClass () ; } else { type = ( type ) type . getClass () ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { type = ( type ) type . getClass () ; }
Distance : 9

20
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = ( element ) element . getClass () ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = ( element ) element . getClass () ; }
Distance : 9

21
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

22
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

23
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Distance : 8

24
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

25
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = type . getClass () ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = type . getClass () ; }
Distance : 8

26
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

27
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

28
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

29
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

30
Tree	if ( element != null ) { element = type . getClass () ; } else { type = ( type ) Object . getClass () ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = ( type ) Object . getClass () ; }
Distance : 10

31
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

32
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = Object . getClass () ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = Object . getClass () ; }
Distance : 7

33
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = type . getClass () ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = type . getClass () ; }
Distance : 7

34
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

35
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

36
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

37
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

38
Tree	if ( element != null ) { type = type . getClass () ; } else { element = ( type ) Object . getClass () ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = ( type ) Object . getClass () ; }
Distance : 9

39
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

40
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = element . getClass () ; }
Distance : 8

41
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Distance : 9

42
Tree	if ( type != null ) { element = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

43
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

44
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Distance : 9

45
Tree	if ( type != null ) { type = element . getClass () ; } else { element = type . getClass () ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = type . getClass () ; }
Distance : 7

46
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = Object . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = Object . getClass () ; }
Distance : 7

47
Tree	if ( type != null ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

48
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

49
Tree	if ( type != null ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

50
Tree	if ( element != null ) { element = element . getClass () ; } else { element = ( Object ) type . getClass () ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = ( Object ) type . getClass () ; }
Distance : 9

51
Tree	if ( element != break; ) { type = element . getClass () ; } else { type = ( type ) type . getClass () ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { type = ( type ) type . getClass () ; }
Distance : 9

52
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

53
Tree	if ( type != null ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Distance : 9

54
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = ( type ) element . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = ( type ) element . getClass () ; }
Distance : 8

55
Tree	if ( element != null ) { element = type . getClass () ; } else { type = ( element ) element . getClass () ; }
Code	if ( element != null ) { element = type . getClass () ; } else { type = ( element ) element . getClass () ; }
Distance : 10

56
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

57
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

58
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

59
Tree	if ( element != null ) { type = type . getClass () ; } else { element = ( element ) element . getClass () ; }
Code	if ( element != null ) { type = type . getClass () ; } else { element = ( element ) element . getClass () ; }
Distance : 9

60
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

61
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = ( type ) element . getClass () ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = ( type ) element . getClass () ; }
Distance : 9

62
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = element . getClass () ; }
Distance : 8

63
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

64
Tree	if ( element != null ) { type = Object . getClass () ; } else { type = ( type ) type . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { type = ( type ) type . getClass () ; }
Distance : 9

65
Tree	if ( element != null ) { type = type . getClass () ; } else { Object = Object . getClass () ; }
Code	if ( element != null ) { type = type . getClass () ; } else { Object = Object . getClass () ; }
Distance : 7

66
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

67
Tree	if ( element != null ) { type = element . getClass () ; } else { Object = ( element ) type . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Object = ( element ) type . getClass () ; }
Distance : 8

68
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Distance : 9

69
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = type . getClass () ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = type . getClass () ; }
Distance : 7

70
Tree	if ( element != continue; ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != continue; ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

71
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = type . getClass () ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = type . getClass () ; }
Distance : 7

72
Tree	if ( Object != null ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( Object != null ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

73
Tree	if ( type != null ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( type != null ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

74
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

75
Tree	if ( type != return; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( type != return; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

76
Tree	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { else = element . getClass () ; }
Code	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { else = element . getClass () ; }
Distance : 10

77
Tree	if ( element != null ) { Object = type . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { Object = type . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

78
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Distance : 8

79
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

80
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

81
Tree	if ( element != null ) { declNode = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { declNode = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

82
Tree	if ( element != null ) { element = element . getClass () ; } else { element = ( type ) Object . getClass () ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = ( type ) Object . getClass () ; }
Distance : 9

83
Tree	if ( element != null ) { c1 = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { c1 = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

84
Tree	if ( element != continue; ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Code	if ( element != continue; ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Distance : 9

85
Tree	if ( element != null ) { type = element . getClass () ; } else { CheckLevel.OFF = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { CheckLevel.OFF = Object . getClass () ; }
Distance : 6

86
Tree	if ( element != null ) { replace = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { replace = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

87
Tree	if ( element != null ) { type = element . getClass () ; } else { LanguageMode.ECMASCRIPT8 = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { LanguageMode.ECMASCRIPT8 = Object . getClass () ; }
Distance : 6

88
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

89
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { FeatureSet.ES3 = StringUtils.EMPTY . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { FeatureSet.ES3 = StringUtils.EMPTY . getClass () ; }
Distance : 9

90
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = ( type ) element . getClass () ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = ( type ) element . getClass () ; }
Distance : 9

91
Tree	if ( element != null ) { Object = element . getClass () ; } else { type = ( element ) type . getClass () ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { type = ( element ) type . getClass () ; }
Distance : 9

92
Tree	if ( element != null ) { lhs.length = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { lhs.length = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

93
Tree	if ( element != null ) { case = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { case = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

94
Tree	if ( element != null ) { invalidate = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { invalidate = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

95
Tree	if ( Object != null ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Code	if ( Object != null ) { type = element . getClass () ; } else { element = ( Object ) element . getClass () ; }
Distance : 9

96
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Distance : 9

97
Tree	if ( element != null ) { processRequire = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { processRequire = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

98
Tree	if ( element != return; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != return; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

99
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

100
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

101
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = element . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = element . getClass () ; }
Distance : 9

102
Tree	if ( element != null ) { type = element . getClass () ; } else { defineSlot = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { defineSlot = Object . getClass () ; }
Distance : 6

103
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { TypeInferenceMode.DISABLED = Object . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { TypeInferenceMode.DISABLED = Object . getClass () ; }
Distance : 9

104
Tree	if ( element != null ) { mocks.length = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { mocks.length = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

105
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

106
Tree	if ( element != null ) { Coordinates2D.POSITIVE_INFINITY = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { Coordinates2D.POSITIVE_INFINITY = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

107
Tree	if ( element != null ) { type = element . getClass () ; } else { finally = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { finally = Object . getClass () ; }
Distance : 6

108
Tree	if ( element != default: ) { type = type . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != default: ) { type = type . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

109
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { synchronized = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { synchronized = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Distance : 9

110
Tree	if ( type != null ) { element = element . getClass () ; } else { type = ( element ) Object . getClass () ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = ( element ) Object . getClass () ; }
Distance : 10

111
Tree	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { CheckLevel.ERROR = Object . getClass () ; }
Code	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { CheckLevel.ERROR = Object . getClass () ; }
Distance : 10

112
Tree	if ( element != null ) { pair.env = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { pair.env = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

113
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { Name = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { Name = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Distance : 9

114
Tree	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { InjectMocks = Object . getClass () ; }
Code	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { InjectMocks = Object . getClass () ; }
Distance : 10

115
Tree	if ( element != null ) { type = element . getClass () ; } else { LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { LocalizedFormats.NOT_POSITIVE_WINDOW_SIZE = Object . getClass () ; }
Distance : 6

116
Tree	if ( element != null ) { type = element . getClass () ; } else { enableGatherExternProperties = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { enableGatherExternProperties = Object . getClass () ; }
Distance : 6

117
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = ( Object ) Object . getClass () ; }
Distance : 9

118
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { else = DecompositionType.UNDECOMPOSABLE . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { else = DecompositionType.UNDECOMPOSABLE . getClass () ; }
Distance : 9

119
Tree	if ( element != null ) { type = element . getClass () ; } else { defineSlot = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { defineSlot = Object . getClass () ; }
Distance : 6

120
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { AllowedSolutions.ANY_SIDE = Object . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { AllowedSolutions.ANY_SIDE = Object . getClass () ; }
Distance : 9

121
Tree	if ( element != null ) { type = element . getClass () ; } else { minPos = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { minPos = Object . getClass () ; }
Distance : 6

122
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

123
Tree	if ( element != default: ) { type = element . getClass () ; } else { type = ( element ) type . getClass () ; }
Code	if ( element != default: ) { type = element . getClass () ; } else { type = ( element ) type . getClass () ; }
Distance : 9

124
Tree	if ( type != null ) { type = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Code	if ( type != null ) { type = element . getClass () ; } else { element = ( element ) Object . getClass () ; }
Distance : 9

125
Tree	if ( element != null ) { type = element . getClass () ; } else { replaceWithEmpty = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { replaceWithEmpty = Object . getClass () ; }
Distance : 6

126
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = values.length . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = values.length . getClass () ; }
Distance : 9

127
Tree	if ( element != null ) { type = element . getClass () ; } else { dest.nDev = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { dest.nDev = Object . getClass () ; }
Distance : 6

128
Tree	if ( element != super(); ) { type = type . getClass () ; } else { type = ( type ) Object . getClass () ; }
Code	if ( element != super(); ) { type = type . getClass () ; } else { type = ( type ) Object . getClass () ; }
Distance : 10

129
Tree	if ( element != null ) { type = element . getClass () ; } else { assertContainsType = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { assertContainsType = Object . getClass () ; }
Distance : 6

130
Tree	if ( element != continue; ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( element != continue; ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

131
Tree	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { TracerMode.ALL = Object . getClass () ; }
Code	if ( element != null ) { type = ( int [] ) element . getClass () ; } else { TracerMode.ALL = Object . getClass () ; }
Distance : 10

132
Tree	if ( element != null ) { Double.MIN_VALUE = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { Double.MIN_VALUE = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

133
Tree	if ( Object != return; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( Object != return; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

134
Tree	if ( type != continue; ) { type = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( type != continue; ) { type = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

135
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { private = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { private = LanguageMode.ECMASCRIPT_2015 . getClass () ; }
Distance : 9

136
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

137
Tree	if ( element != super(); ) { element = element . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( element != super(); ) { element = element . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

138
Tree	if ( element != null ) { CheckLevel.OFF = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { CheckLevel.OFF = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

139
Tree	if ( element != null ) { Calendar.DECEMBER = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { Calendar.DECEMBER = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

140
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { TranspilationPasses = Object . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { TranspilationPasses = Object . getClass () ; }
Distance : 9

141
Tree	if ( type != break; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( type != break; ) { type = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

142
Tree	if ( element != null ) { originalTypeofNode = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { originalTypeofNode = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

143
Tree	if ( element != null ) { type = element . getClass () ; } else { clone.data = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { clone.data = Object . getClass () ; }
Distance : 6

144
Tree	if ( element != null ) { DecompositionType.DECOMPOSABLE = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { DecompositionType.DECOMPOSABLE = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

145
Tree	if ( element != null ) { firstNonNull = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { firstNonNull = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

146
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = FeatureSet.BARE_MINIMUM . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = FeatureSet.BARE_MINIMUM . getClass () ; }
Distance : 9

147
Tree	if ( element != super(); ) { type = Object . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != super(); ) { type = Object . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

148
Tree	if ( element != null ) { Double.NEGATIVE_INFINITY = element . getClass () ; } else { if = Object . getClass () ; }
Code	if ( element != null ) { Double.NEGATIVE_INFINITY = element . getClass () ; } else { if = Object . getClass () ; }
Distance : 7

149
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { DecompositionType.UNDECOMPOSABLE = FeatureSet.ES3 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { DecompositionType.UNDECOMPOSABLE = FeatureSet.ES3 . getClass () ; }
Distance : 9

150
Tree	if ( element != null ) { type = element . getClass () ; } else { CompareToBuilder = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { CompareToBuilder = Object . getClass () ; }
Distance : 6

151
Tree	if ( element != null ) { type = element . getClass () ; } else { LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND = Object . getClass () ; }
Distance : 6

152
Tree	if ( element != null ) { options.removeUnusedVars = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != null ) { options.removeUnusedVars = element . getClass () ; } else { type = element . getClass () ; }
Distance : 7

153
Tree	if ( Object != null ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( Object != null ) { type = type . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

154
Tree	if ( element != null ) { type = type . getClass () ; } else { Object = ( Object ) Object . getClass () ; }
Code	if ( element != null ) { type = type . getClass () ; } else { Object = ( Object ) Object . getClass () ; }
Distance : 9

155
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = AllowedSolutions.ANY_SIDE . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = AllowedSolutions.ANY_SIDE . getClass () ; }
Distance : 9

156
Tree	if ( element != null ) { element = element . getClass () ; } else { element = ( element ) element . getClass () ; }
Code	if ( element != null ) { element = element . getClass () ; } else { element = ( element ) element . getClass () ; }
Distance : 9

157
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = type . getClass () ; }
Distance : 8

158
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = TracerMode.ALL . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { if = TracerMode.ALL . getClass () ; }
Distance : 9

159
Tree	if ( element != break; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != break; ) { element = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

160
Tree	if ( element != null ) { qNameRoot = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { qNameRoot = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

161
Tree	if ( element != null ) { email = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { email = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

162
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { else = CheckLevel.WARNING . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { else = CheckLevel.WARNING . getClass () ; }
Distance : 9

163
Tree	if ( type != super(); ) { type = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( type != super(); ) { type = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

164
Tree	if ( element != null ) { RemovalType.REMOVE_ALL = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { RemovalType.REMOVE_ALL = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

165
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { assert = FeatureSet.ES3 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { assert = FeatureSet.ES3 . getClass () ; }
Distance : 9

166
Tree	if ( element != null ) { element = element . getClass () ; } else { Object = Object . getClass () ; }
Code	if ( element != null ) { element = element . getClass () ; } else { Object = Object . getClass () ; }
Distance : 7

167
Tree	if ( element != super(); ) { type = element . getClass () ; } else { element = ( Object ) type . getClass () ; }
Code	if ( element != super(); ) { type = element . getClass () ; } else { element = ( Object ) type . getClass () ; }
Distance : 9

168
Tree	if ( type != return; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( type != return; ) { type = element . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

169
Tree	if ( element != null ) { type = element . getClass () ; } else { Feature.KEYWORDS_AS_PROPERTIES = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { Feature.KEYWORDS_AS_PROPERTIES = Object . getClass () ; }
Distance : 6

170
Tree	if ( element != null ) { type = element . getClass () ; } else { DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT = Object . getClass () ; }
Distance : 6

171
Tree	if ( element != break; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != break; ) { type = type . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

172
Tree	if ( element != break; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Code	if ( element != break; ) { type = element . getClass () ; } else { element = element . getClass () ; }
Distance : 7

173
Tree	if ( element != null ) { Object = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Code	if ( element != null ) { Object = type . getClass () ; } else { type = ( Object ) Object . getClass () ; }
Distance : 10

174
Tree	if ( type != null ) { type = Object . getClass () ; } else { type = Object . getClass () ; }
Code	if ( type != null ) { type = Object . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

175
Tree	if ( type != null ) { element = element . getClass () ; } else { type = ( Object ) type . getClass () ; }
Code	if ( type != null ) { element = element . getClass () ; } else { type = ( Object ) type . getClass () ; }
Distance : 10

176
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

177
Tree	if ( element != null ) { type = element . getClass () ; } else { pushAnnotations = element . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { pushAnnotations = element . getClass () ; }
Distance : 6

178
Tree	if ( element != null ) { Object = element . getClass () ; } else { element = Object . getClass () ; }
Code	if ( element != null ) { Object = element . getClass () ; } else { element = Object . getClass () ; }
Distance : 7

179
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { pop = FeatureSet.ES3 . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { pop = FeatureSet.ES3 . getClass () ; }
Distance : 9

180
Tree	if ( element != null ) { type = element . getClass () ; } else { org.mockito.internal.reporting.Discrepancy = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { org.mockito.internal.reporting.Discrepancy = Object . getClass () ; }
Distance : 6

181
Tree	if ( element != null ) { tokenList = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { tokenList = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

182
Tree	if ( element != null ) { type = element . getClass () ; } else { CheckLevel.OFF = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { CheckLevel.OFF = Object . getClass () ; }
Distance : 6

183
Tree	if ( element != null ) { element = Object . getClass () ; } else { type = element . getClass () ; }
Code	if ( element != null ) { element = Object . getClass () ; } else { type = element . getClass () ; }
Distance : 8

184
Tree	if ( element != null ) { type = element . getClass () ; } else { MonotoneChain = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { MonotoneChain = Object . getClass () ; }
Distance : 6

185
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { setFeatureSet = Object . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { setFeatureSet = Object . getClass () ; }
Distance : 9

186
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { synchronized = StringUtils.EMPTY . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { synchronized = StringUtils.EMPTY . getClass () ; }
Distance : 9

187
Tree	if ( element != return; ) { type = element . getClass () ; } else { element = type . getClass () ; }
Code	if ( element != return; ) { type = element . getClass () ; } else { element = type . getClass () ; }
Distance : 7

188
Tree	if ( element != null ) { type = element . getClass () ; } else { EnvTypePair = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { EnvTypePair = Object . getClass () ; }
Distance : 6

189
Tree	if ( element != return; ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Code	if ( element != return; ) { element = element . getClass () ; } else { type = ( Object ) element . getClass () ; }
Distance : 10

190
Tree	if ( element != null ) { type = Object . getClass () ; } else { element = element . getClass () ; }
Code	if ( element != null ) { type = Object . getClass () ; } else { element = element . getClass () ; }
Distance : 7

191
Tree	if ( element != null ) { toString = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { toString = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

192
Tree	if ( Object != continue; ) { type = element . getClass () ; } else { type = element . getClass () ; }
Code	if ( Object != continue; ) { type = element . getClass () ; } else { type = element . getClass () ; }
Distance : 8

193
Tree	if ( element != null ) { type = ( element ) element . getClass () ; } else { options.inlineFunctions = Object . getClass () ; }
Code	if ( element != null ) { type = ( element ) element . getClass () ; } else { options.inlineFunctions = Object . getClass () ; }
Distance : 9

194
Tree	if ( Object != super(); ) { type = element . getClass () ; } else { type = type . getClass () ; }
Code	if ( Object != super(); ) { type = element . getClass () ; } else { type = type . getClass () ; }
Distance : 8

195
Tree	if ( element != null ) { type = element . getClass () ; } else { notAnException = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { notAnException = Object . getClass () ; }
Distance : 6

196
Tree	if ( element != null ) { mocks = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { mocks = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

197
Tree	if ( element != null ) { type = element . getClass () ; } else { source.m1 = Object . getClass () ; }
Code	if ( element != null ) { type = element . getClass () ; } else { source.m1 = Object . getClass () ; }
Distance : 6

198
Tree	if ( element != default: ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != default: ) { element = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 8

199
Tree	if ( element != null ) { overrides = element . getClass () ; } else { type = Object . getClass () ; }
Code	if ( element != null ) { overrides = element . getClass () ; } else { type = Object . getClass () ; }
Distance : 7

========================================================================


========================================================================
Example Number: 44
Parent Code is: 
return m . containsKey ( value ) ;
-------------------------------------------------------------------------------
Child code is: 
return m != null && m . containsKey ( value ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=m}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=value}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (27 (27 (800{val=m}) (242{val=!=}) (500{val=null})) (249{val=&&}) (32 (800{val=m}) (235{val=.}) (802{val=containsKey}) (214{val=(}) (800{val=value}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/34/parent/src_main_java_org_apache_commons_lang3_builder_ToStringStyle.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return m . containsKey ( value ) ;
Code	return m . containsKey ( value ) ;
Distance : 4

1
Tree	return new getJSType ( value , false ) ;
Code	return new getJSType ( value , false ) ;
Distance : 9

2
Tree	return new Pattern ( value , false ) ;
Code	return new Pattern ( value , false ) ;
Distance : 9

3
Tree	return new FuzzyKMeansClusterer ( value , false ) ;
Code	return new FuzzyKMeansClusterer ( value , false ) ;
Distance : 9

4
Tree	return new OpenIntToDoubleHashMap ( value , false ) ;
Code	return new OpenIntToDoubleHashMap ( value , false ) ;
Distance : 9

5
Tree	return new BaseTranspiler.CompileResult ( value , false ) ;
Code	return new BaseTranspiler.CompileResult ( value , false ) ;
Distance : 9

6
Tree	return new Node ( value , false ) ;
Code	return new Node ( value , false ) ;
Distance : 9

7
Tree	return new tokens.length ( value , false ) ;
Code	return new tokens.length ( value , false ) ;
Distance : 9

8
Tree	return new findDeclaredNames ( value , false ) ;
Code	return new findDeclaredNames ( value , false ) ;
Distance : 9

9
Tree	return new ExceptionUtils ( value ) ;
Code	return new ExceptionUtils ( value ) ;
Distance : 7

10
Tree	return new emptyToStringStyleRegistry ( value , false ) ;
Code	return new emptyToStringStyleRegistry ( value , false ) ;
Distance : 9

11
Tree	return new Token.ROOT ( value , false ) ;
Code	return new Token.ROOT ( value , false ) ;
Distance : 9

12
Tree	return new CategoryLabelPositions ( value , false ) ;
Code	return new CategoryLabelPositions ( value , false ) ;
Distance : 9

13
Tree	return new Location ( value , false ) ;
Code	return new Location ( value , false ) ;
Distance : 9

14
Tree	return new MathInternalError ( value , false ) ;
Code	return new MathInternalError ( value , false ) ;
Distance : 9

15
Tree	return new Type ( value , false ) ;
Code	return new Type ( value , false ) ;
Distance : 9

16
Tree	return new RemoveCode ( value , false ) ;
Code	return new RemoveCode ( value , false ) ;
Distance : 9

17
Tree	return new NullArgumentException ( value , false ) ;
Code	return new NullArgumentException ( value , false ) ;
Distance : 9

18
Tree	return new functionType ( value , false ) ;
Code	return new functionType ( value , false ) ;
Distance : 9

19
Tree	return new MatchersPrinter ( value , false ) ;
Code	return new MatchersPrinter ( value , false ) ;
Distance : 9

20
Tree	return new result ( value , false ) ;
Code	return new result ( value , false ) ;
Distance : 9

21
Tree	return new Token.CALL ( value , false ) ;
Code	return new Token.CALL ( value , false ) ;
Distance : 9

22
Tree	return new Token.DEFAULT_CASE ( value , false ) ;
Code	return new Token.DEFAULT_CASE ( value , false ) ;
Distance : 9

23
Tree	return new TestSuite ( value , false ) ;
Code	return new TestSuite ( value , false ) ;
Distance : 9

24
Tree	return new NonPositiveDefiniteMatrixException ( value , false ) ;
Code	return new NonPositiveDefiniteMatrixException ( value , false ) ;
Distance : 9

25
Tree	return new ns ( value , false ) ;
Code	return new ns ( value , false ) ;
Distance : 9

26
Tree	return new ClassNotFoundException ( value , false ) ;
Code	return new ClassNotFoundException ( value , false ) ;
Distance : 9

27
Tree	return new passName ( value , false ) ;
Code	return new passName ( value , false ) ;
Distance : 9

28
Tree	return new assertContains ( value , false ) ;
Code	return new assertContains ( value , false ) ;
Distance : 9

29
Tree	return new contains ( value , false ) ;
Code	return new contains ( value , false ) ;
Distance : 9

30
Tree	return new currentScript.defaultExportRhs ( value , false ) ;
Code	return new currentScript.defaultExportRhs ( value , false ) ;
Distance : 9

31
Tree	return new ArithmeticException ( value , false ) ;
Code	return new ArithmeticException ( value , false ) ;
Distance : 9

32
Tree	return new ConvergenceException ( value , false ) ;
Code	return new ConvergenceException ( value , false ) ;
Distance : 9

33
Tree	return new ConcurrentException ( value , false ) ;
Code	return new ConcurrentException ( value , false ) ;
Distance : 9

34
Tree	return new SimplexTableau ( value , false ) ;
Code	return new SimplexTableau ( value , false ) ;
Distance : 9

35
Tree	return new After ( value , false ) ;
Code	return new After ( value , false ) ;
Distance : 9

36
Tree	return new ExceptionContext ( value , false ) ;
Code	return new ExceptionContext ( value , false ) ;
Distance : 9

37
Tree	return new params ( value , false ) ;
Code	return new params ( value , false ) ;
Distance : 9

38
Tree	return new inputs ( value , false ) ;
Code	return new inputs ( value , false ) ;
Distance : 9

39
Tree	return new Sources ( value , false ) ;
Code	return new Sources ( value , false ) ;
Distance : 9

40
Tree	return new JsDocToken.PIPE ( value , false ) ;
Code	return new JsDocToken.PIPE ( value , false ) ;
Distance : 9

41
Tree	return new JUnitResultAssert ( value , false ) ;
Code	return new JUnitResultAssert ( value , false ) ;
Distance : 9

42
Tree	return new ExponentialDistribution ( value , false ) ;
Code	return new ExponentialDistribution ( value , false ) ;
Distance : 9

43
Tree	return new ImmutablePair ( value , false ) ;
Code	return new ImmutablePair ( value , false ) ;
Distance : 9

44
Tree	return new Add ( value , false ) ;
Code	return new Add ( value , false ) ;
Distance : 9

45
Tree	return new languageIn ( value , false ) ;
Code	return new languageIn ( value , false ) ;
Distance : 9

46
Tree	return new NoResolvedType ( value , false ) ;
Code	return new NoResolvedType ( value , false ) ;
Distance : 9

47
Tree	return new ExceptionWithCause ( value , false ) ;
Code	return new ExceptionWithCause ( value , false ) ;
Distance : 9

48
Tree	return new labelOutlineStroke ( value , false ) ;
Code	return new labelOutlineStroke ( value , false ) ;
Distance : 9

49
Tree	return new restricted ( value , false ) ;
Code	return new restricted ( value , false ) ;
Distance : 9

50
Tree	return new ctorType ( value , false ) ;
Code	return new ctorType ( value , false ) ;
Distance : 9

51
Tree	return new behaviorObjLit ( value , false ) ;
Code	return new behaviorObjLit ( value , false ) ;
Distance : 9

52
Tree	return new ParseBucket ( value , false ) ;
Code	return new ParseBucket ( value , false ) ;
Distance : 9

53
Tree	return new ReflectionStaticFieldsFixture ( value , false ) ;
Code	return new ReflectionStaticFieldsFixture ( value , false ) ;
Distance : 9

54
Tree	return new EliminationPass ( value , false ) ;
Code	return new EliminationPass ( value , false ) ;
Distance : 9

55
Tree	return new mockName ( value , false ) ;
Code	return new mockName ( value , false ) ;
Distance : 9

56
Tree	return new OptimizationException ( value , false ) ;
Code	return new OptimizationException ( value , false ) ;
Distance : 9

57
Tree	return new prevUsedRenameMap ( value , false ) ;
Code	return new prevUsedRenameMap ( value , false ) ;
Distance : 9

58
Tree	return new GatherCandidates ( value , false ) ;
Code	return new GatherCandidates ( value , false ) ;
Distance : 9

59
Tree	return new IllegalArgumentException ( value ) ;
Code	return new IllegalArgumentException ( value ) ;
Distance : 7

60
Tree	return new ArgumentsAreDifferentException ( value , false ) ;
Code	return new ArgumentsAreDifferentException ( value , false ) ;
Distance : 9

61
Tree	return new diag ( value , false ) ;
Code	return new diag ( value , false ) ;
Distance : 9

62
Tree	return new isNot ( value , false ) ;
Code	return new isNot ( value , false ) ;
Distance : 9

63
Tree	return new isSuccessful ( value , false ) ;
Code	return new isSuccessful ( value , false ) ;
Distance : 9

64
Tree	return new getOutputFeatureSet ( value , false ) ;
Code	return new getOutputFeatureSet ( value , false ) ;
Distance : 9

65
Tree	return new LocalizedFormats.POWER_NEGATIVE_PARAMETERS ( value , false ) ;
Code	return new LocalizedFormats.POWER_NEGATIVE_PARAMETERS ( value , false ) ;
Distance : 9

66
Tree	return new isStringKey ( value , false ) ;
Code	return new isStringKey ( value , false ) ;
Distance : 9

67
Tree	return new ArgumentsAreDifferent ( value ) ;
Code	return new ArgumentsAreDifferent ( value ) ;
Distance : 7

68
Tree	return new type ( value ) ;
Code	return new type ( value ) ;
Distance : 7

69
Tree	return new Double.MIN_VALUE ( value , false ) ;
Code	return new Double.MIN_VALUE ( value , false ) ;
Distance : 9

70
Tree	return new Interval ( value , false ) ;
Code	return new Interval ( value , false ) ;
Distance : 9

71
Tree	return new paramList ( value , false ) ;
Code	return new paramList ( value , false ) ;
Distance : 9

72
Tree	return new TestGJDayOfYearField ( value , false ) ;
Code	return new TestGJDayOfYearField ( value , false ) ;
Distance : 9

73
Tree	return new containsKey ( value ) ;
Code	return new containsKey ( value ) ;
Distance : 6

74
Tree	return new anyObjectType ( value , false ) ;
Code	return new anyObjectType ( value , false ) ;
Distance : 9

75
Tree	return new getDayHourType ( value , false ) ;
Code	return new getDayHourType ( value , false ) ;
Distance : 9

76
Tree	return new getNext ( value , false ) ;
Code	return new getNext ( value , false ) ;
Distance : 9

77
Tree	return new nullOrUndefined ( value , false ) ;
Code	return new nullOrUndefined ( value , false ) ;
Distance : 9

78
Tree	return new isOut ( value , false ) ;
Code	return new isOut ( value , false ) ;
Distance : 9

79
Tree	return new MaxIterationsExceededException ( value , false ) ;
Code	return new MaxIterationsExceededException ( value , false ) ;
Distance : 9

80
Tree	return new getEnumeratedType ( value , false ) ;
Code	return new getEnumeratedType ( value , false ) ;
Distance : 9

81
Tree	return new ExponentialDistributionImpl ( value , false ) ;
Code	return new ExponentialDistributionImpl ( value , false ) ;
Distance : 9

82
Tree	return new RuntimeException ( value , false ) ;
Code	return new RuntimeException ( value , false ) ;
Distance : 9

83
Tree	return new sourceFile ( value , false ) ;
Code	return new sourceFile ( value , false ) ;
Distance : 9

84
Tree	return new norm ( value , false ) ;
Code	return new norm ( value , false ) ;
Distance : 9

85
Tree	return new getToken ( value , false ) ;
Code	return new getToken ( value , false ) ;
Distance : 9

86
Tree	return new ZeroException ( value , false ) ;
Code	return new ZeroException ( value , false ) ;
Distance : 9

87
Tree	return new MathArithmeticException ( value ) ;
Code	return new MathArithmeticException ( value ) ;
Distance : 7

88
Tree	return new caseBody ( value , false ) ;
Code	return new caseBody ( value , false ) ;
Distance : 9

89
Tree	return new newName ( value ) ;
Code	return new newName ( value ) ;
Distance : 7

90
Tree	return new toReturn ( value , false ) ;
Code	return new toReturn ( value , false ) ;
Distance : 9

91
Tree	return new MathIllegalArgumentException ( value ) ;
Code	return new MathIllegalArgumentException ( value ) ;
Distance : 7

92
Tree	return new ThreadSafeDelegatingErrorManager ( value , false ) ;
Code	return new ThreadSafeDelegatingErrorManager ( value , false ) ;
Distance : 9

93
Tree	return new PropertyRenamingPolicy.ALL_UNQUOTED ( value , false ) ;
Code	return new PropertyRenamingPolicy.ALL_UNQUOTED ( value , false ) ;
Distance : 9

94
Tree	return new @ ( value , false ) ;
Code	return new @ ( value , false ) ;
Distance : 9

95
Tree	return new ObjectLiteralPropertyDefinition ( value , false ) ;
Code	return new ObjectLiteralPropertyDefinition ( value , false ) ;
Distance : 9

96
Tree	return new VerificationStartedNotifier.Event ( value , false ) ;
Code	return new VerificationStartedNotifier.Event ( value , false ) ;
Distance : 9

97
Tree	return new language ( value , false ) ;
Code	return new language ( value , false ) ;
Distance : 9

98
Tree	return new NoSuchElementException ( value , false ) ;
Code	return new NoSuchElementException ( value , false ) ;
Distance : 9

99
Tree	return new switchType ( value , false ) ;
Code	return new switchType ( value , false ) ;
Distance : 9

100
Tree	return new Median ( value , false ) ;
Code	return new Median ( value , false ) ;
Distance : 9

101
Tree	return new n ( value , false ) ;
Code	return new n ( value , false ) ;
Distance : 9

102
Tree	return new OnDoAnswer ( value , false ) ;
Code	return new OnDoAnswer ( value , false ) ;
Distance : 9

103
Tree	return new hasChildren ( value , false ) ;
Code	return new hasChildren ( value , false ) ;
Distance : 9

104
Tree	return new TooManyActualInvocations ( value , false ) ;
Code	return new TooManyActualInvocations ( value , false ) ;
Distance : 9

105
Tree	return new FunctionType ( value , false ) ;
Code	return new FunctionType ( value , false ) ;
Distance : 9

106
Tree	return new UnsupportedOperationException ( value , false ) ;
Code	return new UnsupportedOperationException ( value , false ) ;
Distance : 9

107
Tree	return new IllegalStateException ( value ) ;
Code	return new IllegalStateException ( value ) ;
Distance : 7

108
Tree	return new MaxCountExceededException ( value ) ;
Code	return new MaxCountExceededException ( value ) ;
Distance : 7

109
Tree	return new NoDataException ( value , false ) ;
Code	return new NoDataException ( value , false ) ;
Distance : 9

110
Tree	return new ConcurrentRuntimeException ( value , false ) ;
Code	return new ConcurrentRuntimeException ( value , false ) ;
Distance : 9

111
Tree	return new Throwable ( value ) ;
Code	return new Throwable ( value ) ;
Distance : 7

112
Tree	return new setIsAddedBlock ( value , false ) ;
Code	return new setIsAddedBlock ( value , false ) ;
Distance : 9

113
Tree	return new leftType ( value , false ) ;
Code	return new leftType ( value , false ) ;
Distance : 9

114
Tree	return new QualifiedName ( value , false ) ;
Code	return new QualifiedName ( value , false ) ;
Distance : 9

115
Tree	return new Percentile ( value , false ) ;
Code	return new Percentile ( value , false ) ;
Distance : 9

116
Tree	return new Scope ( value , false ) ;
Code	return new Scope ( value , false ) ;
Distance : 9

117
Tree	return new rawType ( value , false ) ;
Code	return new rawType ( value , false ) ;
Distance : 9

118
Tree	return new DateTime ( value , false ) ;
Code	return new DateTime ( value , false ) ;
Distance : 9

119
Tree	return new currentStatement ( value , false ) ;
Code	return new currentStatement ( value , false ) ;
Distance : 9

120
Tree	return new assertThat ( value , false ) ;
Code	return new assertThat ( value , false ) ;
Distance : 9

121
Tree	return new stub ( value , false ) ;
Code	return new stub ( value , false ) ;
Distance : 9

122
Tree	return new MockitoException ( value , false ) ;
Code	return new MockitoException ( value , false ) ;
Distance : 9

123
Tree	return new LocationImpl ( value , false ) ;
Code	return new LocationImpl ( value , false ) ;
Distance : 9

124
Tree	return this . m . containsKey ( value ) ;
Code	return this . m . containsKey ( value ) ;
Distance : 4

125
Tree	return new validateNodeType ( value , false ) ;
Code	return new validateNodeType ( value , false ) ;
Distance : 9

126
Tree	return new MathIllegalStateException ( value , false ) ;
Code	return new MathIllegalStateException ( value , false ) ;
Distance : 9

127
Tree	return new IllegalStateException ( value , false ) ;
Code	return new IllegalStateException ( value , false ) ;
Distance : 9

128
Tree	return new MaxCountExceededException ( value , false ) ;
Code	return new MaxCountExceededException ( value , false ) ;
Distance : 9

129
Tree	return new Throwable ( value , false ) ;
Code	return new Throwable ( value , false ) ;
Distance : 9

130
Tree	return new expr ( value , false ) ;
Code	return new expr ( value , false ) ;
Distance : 9

131
Tree	return containsKey ( value ) ;
Code	return containsKey ( value ) ;
Distance : 6

132
Tree	return m + NUMBER_CONSTANT ;
Code	return m + NUMBER_CONSTANT ;
Distance : 9

133
Tree	return new LUDecompositionImpl ( value , false ) ;
Code	return new LUDecompositionImpl ( value , false ) ;
Distance : 9

134
Tree	return new ArrayIndexOutOfBoundsException ( value , false ) ;
Code	return new ArrayIndexOutOfBoundsException ( value , false ) ;
Distance : 9

135
Tree	return new Interval ( value ) ;
Code	return new Interval ( value ) ;
Distance : 7

136
Tree	return new ExceptionUtils ( value , false ) ;
Code	return new ExceptionUtils ( value , false ) ;
Distance : 9

137
Tree	return m . containsKey () . containsKey ( value ) ;
Code	return m . containsKey () . containsKey ( value ) ;
Distance : 4

138
Tree	return new MathArithmeticException ( value , false ) ;
Code	return new MathArithmeticException ( value , false ) ;
Distance : 9

139
Tree	return new newName ( value , false ) ;
Code	return new newName ( value , false ) ;
Distance : 9

140
Tree	return new MathIllegalArgumentException ( value , false ) ;
Code	return new MathIllegalArgumentException ( value , false ) ;
Distance : 9

141
Tree	return new containsKey ( value , false ) ;
Code	return new containsKey ( value , false ) ;
Distance : 8

142
Tree	return new IllegalArgumentException ( value , false ) ;
Code	return new IllegalArgumentException ( value , false ) ;
Distance : 9

143
Tree	return new ArgumentsAreDifferent ( value , false ) ;
Code	return new ArgumentsAreDifferent ( value , false ) ;
Distance : 9

144
Tree	return new type ( value , false ) ;
Code	return new type ( value , false ) ;
Distance : 9

145
Tree	return new MathRuntimeException ( value , false ) ;
Code	return new MathRuntimeException ( value , false ) ;
Distance : 9

146
Tree	return new MathConfigurationException ( value , false ) ;
Code	return new MathConfigurationException ( value , false ) ;
Distance : 9

147
Tree	return new MathIllegalStateException ( value ) ;
Code	return new MathIllegalStateException ( value ) ;
Distance : 7

148
Tree	return new EulerFieldIntegrator ( value , false ) ;
Code	return new EulerFieldIntegrator ( value , false ) ;
Distance : 9

149
Tree	return new callee ( value , false ) ;
Code	return new callee ( value , false ) ;
Distance : 9

150
Tree	return new BlockRealMatrix ( value , false ) ;
Code	return new BlockRealMatrix ( value , false ) ;
Distance : 9

151
Tree	return new Es6SyntacticScopeCreator ( value , false ) ;
Code	return new Es6SyntacticScopeCreator ( value , false ) ;
Distance : 9

152
Tree	return new NullPointerException ( value , false ) ;
Code	return new NullPointerException ( value , false ) ;
Distance : 9

153
Tree	return new RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR ( value , false ) ;
Code	return new RhinoErrorReporter.UNRECOGNIZED_TYPE_ERROR ( value , false ) ;
Distance : 9

154
Tree	return new Exception ( value , false ) ;
Code	return new Exception ( value , false ) ;
Distance : 9

155
Tree	return new token ( value , false ) ;
Code	return new token ( value , false ) ;
Distance : 9

156
Tree	return new isSubtypeOf ( value , false ) ;
Code	return new isSubtypeOf ( value , false ) ;
Distance : 9

157
Tree	return new entryPoints ( value , false ) ;
Code	return new entryPoints ( value , false ) ;
Distance : 9

158
Tree	return new WantedButNotInvoked ( value , false ) ;
Code	return new WantedButNotInvoked ( value , false ) ;
Distance : 9

159
Tree	return new InvocationDiffersFromActual ( value , false ) ;
Code	return new InvocationDiffersFromActual ( value , false ) ;
Distance : 9

160
Tree	return new BigDecimal ( value , false ) ;
Code	return new BigDecimal ( value , false ) ;
Distance : 9

161
Tree	return new getCtorPropDeclaredType ( value , false ) ;
Code	return new getCtorPropDeclaredType ( value , false ) ;
Distance : 9

162
Tree	return new isAfter ( value , false ) ;
Code	return new isAfter ( value , false ) ;
Distance : 9

163
Tree	return new functionBody ( value , false ) ;
Code	return new functionBody ( value , false ) ;
Distance : 9

164
Tree	return new MISSING_PROVIDE_WARNING ( value , false ) ;
Code	return new MISSING_PROVIDE_WARNING ( value , false ) ;
Distance : 9

165
Tree	return new LUDecompositionImpl ( value ) ;
Code	return new LUDecompositionImpl ( value ) ;
Distance : 7

166
Tree	return new PoissonDistribution ( value , false ) ;
Code	return new PoissonDistribution ( value , false ) ;
Distance : 9

167
Tree	return new IllegalFieldValueException ( value , false ) ;
Code	return new IllegalFieldValueException ( value , false ) ;
Distance : 9

168
Tree	return new AbstractCompiler.READ_ERROR ( value , false ) ;
Code	return new AbstractCompiler.READ_ERROR ( value , false ) ;
Distance : 9

169
Tree	return new ArrayIndexOutOfBoundsException ( value ) ;
Code	return new ArrayIndexOutOfBoundsException ( value ) ;
Distance : 7

170
Tree	return new objectType ( value , false ) ;
Code	return new objectType ( value , false ) ;
Distance : 9

171
Tree	return new getEnumeratedTypeOfEnumObject ( value , false ) ;
Code	return new getEnumeratedTypeOfEnumObject ( value , false ) ;
Distance : 9

172
Tree	return new ChiSquaredDistributionImpl ( value , false ) ;
Code	return new ChiSquaredDistributionImpl ( value , false ) ;
Distance : 9

173
Tree	return new NominalType ( value , false ) ;
Code	return new NominalType ( value , false ) ;
Distance : 9

174
Tree	return new WeibullDistribution ( value , false ) ;
Code	return new WeibullDistribution ( value , false ) ;
Distance : 9

175
Tree	return new JSType ( value , false ) ;
Code	return new JSType ( value , false ) ;
Distance : 9

176
Tree	return new Precision.EPSILON ( value , false ) ;
Code	return new Precision.EPSILON ( value , false ) ;
Distance : 9

177
Tree	return new VanishingToLeaf ( value , false ) ;
Code	return new VanishingToLeaf ( value , false ) ;
Distance : 9

178
Tree	return new report ( value , false ) ;
Code	return new report ( value , false ) ;
Distance : 9

179
Tree	return new isFrozen ( value , false ) ;
Code	return new isFrozen ( value , false ) ;
Distance : 9

180
Tree	return new singularValues ( value , false ) ;
Code	return new singularValues ( value , false ) ;
Distance : 9

181
Tree	return new IllegalInstantException ( value , false ) ;
Code	return new IllegalInstantException ( value , false ) ;
Distance : 9

182
Tree	return new externsRoot ( value , false ) ;
Code	return new externsRoot ( value , false ) ;
Distance : 9

183
Tree	return new MockName ( value , false ) ;
Code	return new MockName ( value , false ) ;
Distance : 9

184
Tree	return new body ( value , false ) ;
Code	return new body ( value , false ) ;
Distance : 9

185
Tree	return new UnhandledException ( value , false ) ;
Code	return new UnhandledException ( value , false ) ;
Distance : 9

186
Tree	return new TypeCheckResult ( value , false ) ;
Code	return new TypeCheckResult ( value , false ) ;
Distance : 9

187
Tree	return new NumberIsTooLargeException ( value , false ) ;
Code	return new NumberIsTooLargeException ( value , false ) ;
Distance : 9

188
Tree	return new arrayType ( value , false ) ;
Code	return new arrayType ( value , false ) ;
Distance : 9

189
Tree	return new assertTypeEquals ( value , false ) ;
Code	return new assertTypeEquals ( value , false ) ;
Distance : 9

190
Tree	return new InternalError ( value , false ) ;
Code	return new InternalError ( value , false ) ;
Distance : 9

191
Tree	return new Vector3DFormat ( value , false ) ;
Code	return new Vector3DFormat ( value , false ) ;
Distance : 9

192
Tree	return new DelayedExecution ( value , false ) ;
Code	return new DelayedExecution ( value , false ) ;
Distance : 9

193
Tree	return new expr ( value ) ;
Code	return new expr ( value ) ;
Distance : 7

194
Tree	return new setKey ( value , false ) ;
Code	return new setKey ( value , false ) ;
Distance : 9

195
Tree	return new Date ( value , false ) ;
Code	return new Date ( value , false ) ;
Distance : 9

196
Tree	return m . containsKey ( value ) ; Fraction
Code	return m . containsKey ( value ) ; Fraction
Distance : 5

197
Tree	return m . containsKey ( value ) ; super
Code	return m . containsKey ( value ) ; super
Distance : 5

198
Tree	return m . containsKey ( value ) ; compiler
Code	return m . containsKey ( value ) ; compiler
Distance : 5

199
Tree	return m . containsKey ( value ) ; e
Code	return m . containsKey ( value ) ; e
Distance : 5

========================================================================


========================================================================
Example Number: 45
Parent Code is: 
CharSequence cs
-------------------------------------------------------------------------------
Child code is: 
String cs
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (44 (43 (801{val=CharSequence})) (800{val=cs})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (44 (43 (801{val=String})) (800{val=cs})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/30/parent/src_main_java_org_apache_commons_lang3_StringUtils.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	final CharSequence cs
Code	final CharSequence cs
Distance : 2

1
Tree	array.length cs
Code	array.length cs
Distance : 1

2
Tree	firstNonNull cs
Code	firstNonNull cs
Distance : 1

3
Tree	isBottom cs
Code	isBottom cs
Distance : 1

4
Tree	eliminateZeroMassPoints cs
Code	eliminateZeroMassPoints cs
Distance : 1

5
Tree	Vector1D.ZERO cs
Code	Vector1D.ZERO cs
Distance : 1

6
Tree	reporterStub.wanted cs
Code	reporterStub.wanted cs
Distance : 1

7
Tree	incrementAndGet cs
Code	incrementAndGet cs
Distance : 1

8
Tree	asList cs
Code	asList cs
Distance : 1

9
Tree	shift cs
Code	shift cs
Distance : 1

10
Tree	+ cs
Code	+ cs
Distance : 1

11
Tree	Cartesian3D.NEGATIVE_INFINITY cs
Code	Cartesian3D.NEGATIVE_INFINITY cs
Distance : 1

12
Tree	getReferencedTypeInternal cs
Code	getReferencedTypeInternal cs
Distance : 1

13
Tree	LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED cs
Code	LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED cs
Distance : 1

14
Tree	isNoResolvedType cs
Code	isNoResolvedType cs
Distance : 1

15
Tree	parseWithIOException cs
Code	parseWithIOException cs
Distance : 1

16
Tree	getIndex cs
Code	getIndex cs
Distance : 1

17
Tree	set.length cs
Code	set.length cs
Distance : 1

18
Tree	finderStub.actualToReturn cs
Code	finderStub.actualToReturn cs
Distance : 1

19
Tree	mocksHaveToBePassedWhenCreatingStrictly cs
Code	mocksHaveToBePassedWhenCreatingStrictly cs
Distance : 1

20
Tree	voidMethodStubbable cs
Code	voidMethodStubbable cs
Distance : 1

21
Tree	primitiveType cs
Code	primitiveType cs
Distance : 1

22
Tree	Locale.UK cs
Code	Locale.UK cs
Distance : 1

23
Tree	FastDateFormat cs
Code	FastDateFormat cs
Distance : 1

24
Tree	isSomeUnknownType cs
Code	isSomeUnknownType cs
Distance : 1

25
Tree	Thread cs
Code	Thread cs
Distance : 1

26
Tree	ModifyType.TRUNCATE cs
Code	ModifyType.TRUNCATE cs
Distance : 1

27
Tree	len cs
Code	len cs
Distance : 1

28
Tree	Long.MAX_VALUE cs
Code	Long.MAX_VALUE cs
Distance : 1

29
Tree	coefficients.length cs
Code	coefficients.length cs
Distance : 1

30
Tree	v.length cs
Code	v.length cs
Distance : 1

31
Tree	pluralize cs
Code	pluralize cs
Distance : 1

32
Tree	printStackTrace cs
Code	printStackTrace cs
Distance : 1

33
Tree	specifier cs
Code	specifier cs
Distance : 1

34
Tree	ClassFileVersion.JAVA_V7 cs
Code	ClassFileVersion.JAVA_V7 cs
Distance : 1

35
Tree	getenv cs
Code	getenv cs
Distance : 1

36
Tree	assertContains cs
Code	assertContains cs
Distance : 1

37
Tree	printOffset cs
Code	printOffset cs
Distance : 1

38
Tree	LocalizedFormats.AT_LEAST_ONE_COLUMN cs
Code	LocalizedFormats.AT_LEAST_ONE_COLUMN cs
Distance : 1

39
Tree	dRow.length cs
Code	dRow.length cs
Distance : 1

40
Tree	reporterStub.undesired cs
Code	reporterStub.undesired cs
Distance : 1

41
Tree	isOSNameMatch cs
Code	isOSNameMatch cs
Distance : 1

42
Tree	LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT cs
Code	LocalizedFormats.VECTOR_MUST_HAVE_AT_LEAST_ONE_ELEMENT cs
Distance : 1

43
Tree	LocalizedFormats.DIMENSIONS_MISMATCH_2x2 cs
Code	LocalizedFormats.DIMENSIONS_MISMATCH_2x2 cs
Distance : 1

44
Tree	toTitleCase cs
Code	toTitleCase cs
Distance : 1

45
Tree	Date cs
Code	Date cs
Distance : 1

46
Tree	QuinticFunction cs
Code	QuinticFunction cs
Distance : 1

47
Tree	SimpleReflectionTestFixture cs
Code	SimpleReflectionTestFixture cs
Distance : 1

48
Tree	Coordinates3D cs
Code	Coordinates3D cs
Distance : 1

49
Tree	LocalizedFormats.POWER_NEGATIVE_PARAMETERS cs
Code	LocalizedFormats.POWER_NEGATIVE_PARAMETERS cs
Distance : 1

50
Tree	Calendar.YEAR cs
Code	Calendar.YEAR cs
Distance : 1

51
Tree	isBlank cs
Code	isBlank cs
Distance : 1

52
Tree	MillisDurationField.INSTANCE cs
Code	MillisDurationField.INSTANCE cs
Distance : 1

53
Tree	n_offset cs
Code	n_offset cs
Distance : 1

54
Tree	TypeTestClass cs
Code	TypeTestClass cs
Distance : 1

55
Tree	VerificationInOrderFailure cs
Code	VerificationInOrderFailure cs
Distance : 1

56
Tree	MultiBackgroundInitializer.MultiBackgroundInitializerResults cs
Code	MultiBackgroundInitializer.MultiBackgroundInitializerResults cs
Distance : 1

57
Tree	toString cs
Code	toString cs
Distance : 1

58
Tree	options.removeUnusedPrototypeProperties cs
Code	options.removeUnusedPrototypeProperties cs
Distance : 1

59
Tree	log cs
Code	log cs
Distance : 1

60
Tree	ExecutorService cs
Code	ExecutorService cs
Distance : 1

61
Tree	getFragmentInHours cs
Code	getFragmentInHours cs
Distance : 1

62
Tree	TimeSeriesCollection cs
Code	TimeSeriesCollection cs
Distance : 1

63
Tree	newSingleThreadExecutor cs
Code	newSingleThreadExecutor cs
Distance : 1

64
Tree	ToStringStyleImpl cs
Code	ToStringStyleImpl cs
Distance : 1

65
Tree	ParsePosition cs
Code	ParsePosition cs
Distance : 1

66
Tree	final float cs
Code	final float cs
Distance : 2

67
Tree	textLen cs
Code	textLen cs
Distance : 1

68
Tree	SystemUtils.JAVA_VERSION cs
Code	SystemUtils.JAVA_VERSION cs
Distance : 1

69
Tree	contains cs
Code	contains cs
Distance : 1

70
Tree	getNormal cs
Code	getNormal cs
Distance : 1

71
Tree	CharSequence cs
Code	CharSequence cs
Distance : 1

72
Tree	%= cs
Code	%= cs
Distance : 1

73
Tree	toSpace cs
Code	toSpace cs
Distance : 1

74
Tree	xL cs
Code	xL cs
Distance : 1

75
Tree	negate cs
Code	negate cs
Distance : 1

76
Tree	columns cs
Code	columns cs
Distance : 1

77
Tree	isNaN cs
Code	isNaN cs
Distance : 1

78
Tree	isEmptyOrNull cs
Code	isEmptyOrNull cs
Distance : 1

79
Tree	capacity cs
Code	capacity cs
Distance : 1

80
Tree	isNonSingular cs
Code	isNonSingular cs
Distance : 1

81
Tree	length cs
Code	length cs
Distance : 1

82
Tree	Percentile cs
Code	Percentile cs
Distance : 1

83
Tree	StandardBasicTypes.DATE cs
Code	StandardBasicTypes.DATE cs
Distance : 1

84
Tree	MessageFormat cs
Code	MessageFormat cs
Distance : 1

85
Tree	Throwable cs
Code	Throwable cs
Distance : 1

86
Tree	printTimeZone cs
Code	printTimeZone cs
Distance : 1

87
Tree	pEnd cs
Code	pEnd cs
Distance : 1

88
Tree	LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM cs
Code	LocalizedFormats.UNABLE_TO_SOLVE_SINGULAR_PROBLEM cs
Distance : 1

89
Tree	ToStringContext.TO_STRING cs
Code	ToStringContext.TO_STRING cs
Distance : 1

90
Tree	java.lang.Class cs
Code	java.lang.Class cs
Distance : 1

91
Tree	parameters cs
Code	parameters cs
Distance : 1

92
Tree	lhs.length cs
Code	lhs.length cs
Distance : 1

93
Tree	codepoint cs
Code	codepoint cs
Distance : 1

94
Tree	delimiters.length cs
Code	delimiters.length cs
Distance : 1

95
Tree	result.transformed cs
Code	result.transformed cs
Distance : 1

96
Tree	Double.NaN cs
Code	Double.NaN cs
Distance : 1

97
Tree	isNullable cs
Code	isNullable cs
Distance : 1

98
Tree	valueAsString cs
Code	valueAsString cs
Distance : 1

99
Tree	searchCharSequence cs
Code	searchCharSequence cs
Distance : 1

100
Tree	isVoidable cs
Code	isVoidable cs
Distance : 1

101
Tree	Locale.ROOT cs
Code	Locale.ROOT cs
Distance : 1

102
Tree	call.returnType cs
Code	call.returnType cs
Distance : 1

103
Tree	notifier.addedListeners cs
Code	notifier.addedListeners cs
Distance : 1

104
Tree	endsWith cs
Code	endsWith cs
Distance : 1

105
Tree	isEmptyType cs
Code	isEmptyType cs
Distance : 1

106
Tree	append cs
Code	append cs
Distance : 1

107
Tree	val.length cs
Code	val.length cs
Distance : 1

108
Tree	options.removeUnusedVars cs
Code	options.removeUnusedVars cs
Distance : 1

109
Tree	Float.MAX_VALUE cs
Code	Float.MAX_VALUE cs
Distance : 1

110
Tree	appendAll cs
Code	appendAll cs
Distance : 1

111
Tree	print cs
Code	print cs
Distance : 1

112
Tree	c.length cs
Code	c.length cs
Distance : 1

113
Tree	StrBuilder cs
Code	StrBuilder cs
Distance : 1

114
Tree	RandomNameGenerator.NONFIRST_CHAR cs
Code	RandomNameGenerator.NONFIRST_CHAR cs
Distance : 1

115
Tree	data.length cs
Code	data.length cs
Distance : 1

116
Tree	result.success cs
Code	result.success cs
Distance : 1

117
Tree	getOffset cs
Code	getOffset cs
Distance : 1

118
Tree	gcd cs
Code	gcd cs
Distance : 1

119
Tree	LocalizedFormats.URL_CONTAINS_NO_DATA cs
Code	LocalizedFormats.URL_CONTAINS_NO_DATA cs
Distance : 1

120
Tree	Locale.US cs
Code	Locale.US cs
Distance : 1

121
Tree	arraycopy cs
Code	arraycopy cs
Distance : 1

122
Tree	indexOf cs
Code	indexOf cs
Distance : 1

123
Tree	lineSeparator cs
Code	lineSeparator cs
Distance : 1

124
Tree	computeMillis cs
Code	computeMillis cs
Distance : 1

125
Tree	sb cs
Code	sb cs
Distance : 1

126
Tree	char cs
Code	char cs
Distance : 1

127
Tree	Cartesian3D.POSITIVE_INFINITY cs
Code	Cartesian3D.POSITIVE_INFINITY cs
Distance : 1

128
Tree	final char cs
Code	final char cs
Distance : 2

129
Tree	int cs
Code	int cs
Distance : 1

130
Tree	final cs
Code	final cs
Distance : 1

131
Tree	cs < cs > cs
Code	cs < cs > cs
Distance : 4

132
Tree	byte cs
Code	byte cs
Distance : 1

133
Tree	final int cs
Code	final int cs
Distance : 2

134
Tree	long cs
Code	long cs
Distance : 1

135
Tree	boolean cs
Code	boolean cs
Distance : 1

136
Tree	final long cs
Code	final long cs
Distance : 2

137
Tree	final byte cs
Code	final byte cs
Distance : 2

138
Tree	final boolean cs
Code	final boolean cs
Distance : 2

139
Tree	final String cs
Code	final String cs
Distance : 1

140
Tree	. cs
Code	. cs
Distance : 1

141
Tree	Locale.ENGLISH cs
Code	Locale.ENGLISH cs
Distance : 1

142
Tree	String cs
Code	String cs
Distance : 0

143
Tree	Precision.SAFE_MIN cs
Code	Precision.SAFE_MIN cs
Distance : 1

144
Tree	Localizable cs
Code	Localizable cs
Distance : 1

145
Tree	cs cs
Code	cs cs
Distance : 1

146
Tree	MutableLong cs
Code	MutableLong cs
Distance : 1

147
Tree	SystemUtils.LINE_SEPARATOR cs
Code	SystemUtils.LINE_SEPARATOR cs
Distance : 1

148
Tree	BigInteger.ZERO cs
Code	BigInteger.ZERO cs
Distance : 1

149
Tree	codePointCount cs
Code	codePointCount cs
Distance : 1

150
Tree	lastIndexOf cs
Code	lastIndexOf cs
Distance : 1

151
Tree	containsNow cs
Code	containsNow cs
Distance : 1

152
Tree	float cs
Code	float cs
Distance : 1

153
Tree	shouldPrintExterns cs
Code	shouldPrintExterns cs
Distance : 1

154
Tree	LocalizedFormats.DIFFERENT_ROWS_LENGTHS cs
Code	LocalizedFormats.DIFFERENT_ROWS_LENGTHS cs
Distance : 1

155
Tree	LocalizedFormats.OVERFLOW_IN_ADDITION cs
Code	LocalizedFormats.OVERFLOW_IN_ADDITION cs
Distance : 1

156
Tree	tmp cs
Code	tmp cs
Distance : 1

157
Tree	LocalizedFormats.ZERO_NORM cs
Code	LocalizedFormats.ZERO_NORM cs
Distance : 1

158
Tree	offsetFormatter cs
Code	offsetFormatter cs
Distance : 1

159
Tree	currentState.length cs
Code	currentState.length cs
Distance : 1

160
Tree	LocalizedFormats.NOT_POSITIVE_LENGTH cs
Code	LocalizedFormats.NOT_POSITIVE_LENGTH cs
Distance : 1

161
Tree	Thread.UncaughtExceptionHandler cs
Code	Thread.UncaughtExceptionHandler cs
Distance : 1

162
Tree	delimiters cs
Code	delimiters cs
Distance : 1

163
Tree	systemNewLine cs
Code	systemNewLine cs
Distance : 1

164
Tree	FitnessFunction cs
Code	FitnessFunction cs
Distance : 1

165
Tree	canBeCalled cs
Code	canBeCalled cs
Distance : 1

166
Tree	LocalizedFormats.LCM_OVERFLOW_64_BITS cs
Code	LocalizedFormats.LCM_OVERFLOW_64_BITS cs
Distance : 1

167
Tree	Calendar.MONTH cs
Code	Calendar.MONTH cs
Distance : 1

168
Tree	RotationConvention.FRAME_TRANSFORM cs
Code	RotationConvention.FRAME_TRANSFORM cs
Distance : 1

169
Tree	CharSequence cs
Code	CharSequence cs
Distance : 1

170
Tree	nullSafeGet cs
Code	nullSafeGet cs
Distance : 1

171
Tree	rows cs
Code	rows cs
Distance : 1

172
Tree	LocalizedFormats.AT_LEAST_ONE_ROW cs
Code	LocalizedFormats.AT_LEAST_ONE_ROW cs
Distance : 1

173
Tree	toUpperCase cs
Code	toUpperCase cs
Distance : 1

174
Tree	sz cs
Code	sz cs
Distance : 1

175
Tree	toStringIsEqualTo cs
Code	toStringIsEqualTo cs
Distance : 1

176
Tree	ToStringStyle cs
Code	ToStringStyle cs
Distance : 1

177
Tree	estimateParsedLength cs
Code	estimateParsedLength cs
Distance : 1

178
Tree	PropertyCollapseLevel.ALL cs
Code	PropertyCollapseLevel.ALL cs
Distance : 1

179
Tree	randomResult cs
Code	randomResult cs
Distance : 1

180
Tree	StringUtils.EMPTY cs
Code	StringUtils.EMPTY cs
Distance : 1

181
Tree	c1 cs
Code	c1 cs
Distance : 1

182
Tree	idx cs
Code	idx cs
Distance : 1

183
Tree	MutableInt cs
Code	MutableInt cs
Distance : 1

184
Tree	chars.length cs
Code	chars.length cs
Distance : 1

185
Tree	Calendar.DECEMBER cs
Code	Calendar.DECEMBER cs
Distance : 1

186
Tree	getMethod cs
Code	getMethod cs
Distance : 1

187
Tree	isSquare cs
Code	isSquare cs
Distance : 1

188
Tree	greatestCommonDivisor cs
Code	greatestCommonDivisor cs
Distance : 1

189
Tree	StandardBasicTypes.STRING cs
Code	StandardBasicTypes.STRING cs
Distance : 1

190
Tree	clear cs
Code	clear cs
Distance : 1

191
Tree	minDigits cs
Code	minDigits cs
Distance : 1

192
Tree	getRequiredSymbols cs
Code	getRequiredSymbols cs
Distance : 1

193
Tree	startsWith cs
Code	startsWith cs
Distance : 1

194
Tree	StrTokenizer cs
Code	StrTokenizer cs
Distance : 1

195
Tree	srcArgs.length cs
Code	srcArgs.length cs
Distance : 1

196
Tree	ceil cs
Code	ceil cs
Distance : 1

197
Tree	IncrementalCheckMode.GENERATE_IJS cs
Code	IncrementalCheckMode.GENERATE_IJS cs
Distance : 1

198
Tree	CharSequence cs values
Code	CharSequence cs values
Distance : 2

199
Tree	CharSequence cs ?
Code	CharSequence cs ?
Distance : 2

========================================================================


========================================================================
Example Number: 46
Parent Code is: 
Calendar c = new GregorianCalendar ( mTimeZone ) ;
-------------------------------------------------------------------------------
Child code is: 
Calendar c = new GregorianCalendar ( mTimeZone , mLocale ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Calendar})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=GregorianCalendar})) (214{val=(}) (800{val=mTimeZone}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Calendar})) (59 (800{val=c}) (204{val==}) (14 (304{val=new}) (43 (801{val=GregorianCalendar})) (214{val=(}) (800{val=mTimeZone}) (234{val=,}) (800{val=mLocale}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/26/parent/src_main_java_org_apache_commons_lang3_time_FastDateFormat.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	GregorianCalendar mLocale = new Calendar ( mTimeZone , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mLocale = new Calendar ( mTimeZone , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

1
Tree	protected Calendar mTimeZone = new Calendar ( mLocale ) ;
Code	protected Calendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 5

2
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , true ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , true ) ;
Distance : 3

3
Tree	synchronized GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	synchronized GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

4
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , mTimeZone ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , mTimeZone ) ;
Distance : 5

5
Tree	static Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	static Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 5

6
Tree	abstract Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	abstract Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 5

7
Tree	public GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	public GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 5

8
Tree	public Calendar mLocale = new Calendar ( mLocale ) ;
Code	public Calendar mLocale = new Calendar ( mLocale ) ;
Distance : 5

9
Tree	final GregorianCalendar mTimeZone = new Calendar ( c ) ;
Code	final GregorianCalendar mTimeZone = new Calendar ( c ) ;
Distance : 7

10
Tree	private GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	private GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 5

11
Tree	GregorianCalendar mLocale = new Calendar ( c , mLocale ) ;
Code	GregorianCalendar mLocale = new Calendar ( c , mLocale ) ;
Distance : 4

12
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( c , false ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( c , false ) ;
Distance : 4

13
Tree	Calendar mTimeZone = new GregorianCalendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

14
Tree	public Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	public Calendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 5

15
Tree	private GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	private GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

16
Tree	private Calendar mLocale = new Calendar ( mTimeZone ) ;
Code	private Calendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 5

17
Tree	Calendar mLocale = new Calendar ( mLocale , true ) ;
Code	Calendar mLocale = new Calendar ( mLocale , true ) ;
Distance : 4

18
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

19
Tree	GregorianCalendar c = new Calendar ( c , true ) ;
Code	GregorianCalendar c = new Calendar ( c , true ) ;
Distance : 4

20
Tree	Calendar mLocale = new GregorianCalendar ( c , mLocale ) ;
Code	Calendar mLocale = new GregorianCalendar ( c , mLocale ) ;
Distance : 2

21
Tree	Calendar mLocale = new Calendar ( mLocale , c ) ;
Code	Calendar mLocale = new Calendar ( mLocale , c ) ;
Distance : 4

22
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 9

23
Tree	final Calendar mLocale = new GregorianCalendar ( c ) ;
Code	final Calendar mLocale = new GregorianCalendar ( c ) ;
Distance : 5

24
Tree	protected GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Code	protected GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Distance : 6

25
Tree	static GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Code	static GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 6

26
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mLocale , mTimeZone ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mLocale , mTimeZone ) ;
Distance : 4

27
Tree	Calendar mLocale = new Calendar ( mTimeZone , true ) ;
Code	Calendar mLocale = new Calendar ( mTimeZone , true ) ;
Distance : 3

28
Tree	Calendar mTimeZone = new Calendar ( c ) ;
Code	Calendar mTimeZone = new Calendar ( c ) ;
Distance : 5

29
Tree	private GregorianCalendar c = new Calendar ( c ) ;
Code	private GregorianCalendar c = new Calendar ( c ) ;
Distance : 6

30
Tree	GregorianCalendar mLocale = new Calendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mLocale = new Calendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 9

31
Tree	abstract Calendar mLocale = new Calendar ( mLocale ) ;
Code	abstract Calendar mLocale = new Calendar ( mLocale ) ;
Distance : 5

32
Tree	synchronized Calendar mLocale = new Calendar ( mTimeZone ) ;
Code	synchronized Calendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 5

33
Tree	static Calendar mLocale = new Calendar ( mLocale ) ;
Code	static Calendar mLocale = new Calendar ( mLocale ) ;
Distance : 5

34
Tree	Calendar mLocale = new GregorianCalendar ( c , c ) ;
Code	Calendar mLocale = new GregorianCalendar ( c , c ) ;
Distance : 3

35
Tree	GregorianCalendar mLocale = new Calendar ( mLocale , true ) ;
Code	GregorianCalendar mLocale = new Calendar ( mLocale , true ) ;
Distance : 5

36
Tree	public GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Code	public GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 6

37
Tree	private GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Code	private GregorianCalendar mLocale = new Calendar ( mLocale ) ;
Distance : 6

38
Tree	Calendar mLocale = new Calendar ( c , mTimeZone ) ;
Code	Calendar mLocale = new Calendar ( c , mTimeZone ) ;
Distance : 4

39
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( c , mLocale ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( c , mLocale ) ;
Distance : 3

40
Tree	synchronized Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	synchronized Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 4

41
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , c ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , c ) ;
Distance : 5

42
Tree	static Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	static Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 4

43
Tree	private GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	private GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 6

44
Tree	abstract Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	abstract Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 4

45
Tree	synchronized Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	synchronized Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

46
Tree	Calendar mTimeZone = new GregorianCalendar ( mLocale , true ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mLocale , true ) ;
Distance : 3

47
Tree	GregorianCalendar mTimeZone = new Calendar ( mTimeZone , true ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mTimeZone , true ) ;
Distance : 4

48
Tree	abstract GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Code	abstract GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 6

49
Tree	public Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	public Calendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 4

50
Tree	private Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	private Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 4

51
Tree	Calendar mLocale = new GregorianCalendar ( c , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mLocale = new GregorianCalendar ( c , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

52
Tree	GregorianCalendar mTimeZone = new Calendar ( c , false ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( c , false ) ;
Distance : 5

53
Tree	Calendar mTimeZone = new Calendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new Calendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

54
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mLocale , true ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mLocale , true ) ;
Distance : 4

55
Tree	private Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	private Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

56
Tree	final Calendar mTimeZone = new Calendar ( c ) ;
Code	final Calendar mTimeZone = new Calendar ( c ) ;
Distance : 6

57
Tree	Calendar mLocale = new GregorianCalendar ( c , mTimeZone ) ;
Code	Calendar mLocale = new GregorianCalendar ( c , mTimeZone ) ;
Distance : 3

58
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 9

59
Tree	static GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	static GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 5

60
Tree	synchronized GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	synchronized GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 5

61
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , c ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , c ) ;
Distance : 4

62
Tree	Calendar mTimeZone = new Calendar ( c , mLocale ) ;
Code	Calendar mTimeZone = new Calendar ( c , mLocale ) ;
Distance : 3

63
Tree	abstract GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Code	abstract GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale ) ;
Distance : 5

64
Tree	protected GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Code	protected GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Distance : 6

65
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( c , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

66
Tree	synchronized Calendar c = new GregorianCalendar ( c ) ;
Code	synchronized Calendar c = new GregorianCalendar ( c ) ;
Distance : 4

67
Tree	protected GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	protected GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 6

68
Tree	private GregorianCalendar c = new GregorianCalendar ( c ) ;
Code	private GregorianCalendar c = new GregorianCalendar ( c ) ;
Distance : 5

69
Tree	Calendar mLocale = new GregorianCalendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mLocale = new GregorianCalendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

70
Tree	Calendar c = new Calendar ( c , true ) ;
Code	Calendar c = new Calendar ( c , true ) ;
Distance : 3

71
Tree	abstract GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	abstract GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

72
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone , c ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone , c ) ;
Distance : 3

73
Tree	final Calendar mTimeZone = new Calendar ( mLocale ) ;
Code	final Calendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 5

74
Tree	protected GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	protected GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

75
Tree	protected Calendar mLocale = new Calendar ( mTimeZone ) ;
Code	protected Calendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 5

76
Tree	Calendar mTimeZone = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

77
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , false ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , false ) ;
Distance : 5

78
Tree	public GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	public GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

79
Tree	GregorianCalendar mLocale = new Calendar ( mTimeZone , mTimeZone ) ;
Code	GregorianCalendar mLocale = new Calendar ( mTimeZone , mTimeZone ) ;
Distance : 4

80
Tree	Calendar mLocale = new GregorianCalendar ( mLocale , mTimeZone ) ;
Code	Calendar mLocale = new GregorianCalendar ( mLocale , mTimeZone ) ;
Distance : 3

81
Tree	static GregorianCalendar c = new Calendar ( c ) ;
Code	static GregorianCalendar c = new Calendar ( c ) ;
Distance : 6

82
Tree	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 6

83
Tree	Calendar mTimeZone = new Calendar ( mLocale , mLocale ) ;
Code	Calendar mTimeZone = new Calendar ( mLocale , mLocale ) ;
Distance : 3

84
Tree	abstract GregorianCalendar c = new Calendar ( c ) ;
Code	abstract GregorianCalendar c = new Calendar ( c ) ;
Distance : 6

85
Tree	GregorianCalendar mLocale = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mLocale = new Calendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 9

86
Tree	final GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Code	final GregorianCalendar mTimeZone = new Calendar ( mLocale ) ;
Distance : 6

87
Tree	GregorianCalendar c = new Calendar ( c , c ) ;
Code	GregorianCalendar c = new Calendar ( c , c ) ;
Distance : 4

88
Tree	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , mTimeZone ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , mTimeZone ) ;
Distance : 2

89
Tree	Calendar mLocale = new Calendar ( c ) ;
Code	Calendar mLocale = new Calendar ( c ) ;
Distance : 5

90
Tree	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

91
Tree	GregorianCalendar mLocale = new Calendar ( mLocale , mLocale ) ;
Code	GregorianCalendar mLocale = new Calendar ( mLocale , mLocale ) ;
Distance : 4

92
Tree	public GregorianCalendar c = new Calendar ( c ) ;
Code	public GregorianCalendar c = new Calendar ( c ) ;
Distance : 6

93
Tree	Calendar c = new GregorianCalendar ( c , true ) ;
Code	Calendar c = new GregorianCalendar ( c , true ) ;
Distance : 2

94
Tree	protected GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Code	protected GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 6

95
Tree	GregorianCalendar mTimeZone = new Calendar ( mTimeZone , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mTimeZone , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

96
Tree	Calendar mLocale = new Calendar ( mTimeZone , c ) ;
Code	Calendar mLocale = new Calendar ( mTimeZone , c ) ;
Distance : 3

97
Tree	public Calendar c = new Calendar ( c ) ;
Code	public Calendar c = new Calendar ( c ) ;
Distance : 5

98
Tree	GregorianCalendar mLocale = new Calendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mLocale = new Calendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

99
Tree	static GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	static GregorianCalendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 5

100
Tree	protected GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	protected GregorianCalendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 5

101
Tree	GregorianCalendar mTimeZone = new Calendar ( mLocale , mLocale ) ;
Code	GregorianCalendar mTimeZone = new Calendar ( mLocale , mLocale ) ;
Distance : 4

102
Tree	Calendar mTimeZone = new Calendar ( mTimeZone , c ) ;
Code	Calendar mTimeZone = new Calendar ( mTimeZone , c ) ;
Distance : 3

103
Tree	public GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Code	public GregorianCalendar mLocale = new Calendar ( mTimeZone ) ;
Distance : 6

104
Tree	Calendar mLocale = new Calendar ( c , false ) ;
Code	Calendar mLocale = new Calendar ( c , false ) ;
Distance : 4

105
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , mTimeZone ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , mTimeZone ) ;
Distance : 3

106
Tree	final GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Code	final GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Distance : 6

107
Tree	GregorianCalendar mLocale = new Calendar ( c ) ;
Code	GregorianCalendar mLocale = new Calendar ( c ) ;
Distance : 6

108
Tree	protected Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Code	protected Calendar mLocale = new GregorianCalendar ( mLocale ) ;
Distance : 4

109
Tree	GregorianCalendar c = new GregorianCalendar ( c , true ) ;
Code	GregorianCalendar c = new GregorianCalendar ( c , true ) ;
Distance : 3

110
Tree	private Calendar c = new GregorianCalendar ( c ) ;
Code	private Calendar c = new GregorianCalendar ( c ) ;
Distance : 4

111
Tree	Calendar mLocale = new Calendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mLocale = new Calendar ( mLocale , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

112
Tree	static Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	static Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

113
Tree	GregorianCalendar mLocale = new Calendar ( mTimeZone , c ) ;
Code	GregorianCalendar mLocale = new Calendar ( mTimeZone , c ) ;
Distance : 4

114
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

115
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

116
Tree	Calendar mLocale = new GregorianCalendar ( mLocale , c ) ;
Code	Calendar mLocale = new GregorianCalendar ( mLocale , c ) ;
Distance : 3

117
Tree	protected Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Code	protected Calendar mTimeZone = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

118
Tree	public Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	public Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

119
Tree	Calendar mLocale = new GregorianCalendar ( mTimeZone , true ) ;
Code	Calendar mLocale = new GregorianCalendar ( mTimeZone , true ) ;
Distance : 2

120
Tree	Calendar mLocale = new Calendar ( mLocale , mTimeZone ) ;
Code	Calendar mLocale = new Calendar ( mLocale , mTimeZone ) ;
Distance : 4

121
Tree	Calendar mTimeZone = new GregorianCalendar ( c ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( c ) ;
Distance : 4

122
Tree	synchronized GregorianCalendar c = new GregorianCalendar ( c ) ;
Code	synchronized GregorianCalendar c = new GregorianCalendar ( c ) ;
Distance : 5

123
Tree	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , mLocale ) ;
Code	GregorianCalendar mTimeZone = new GregorianCalendar ( mLocale , mLocale ) ;
Distance : 3

124
Tree	Calendar mTimeZone = new Calendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new Calendar ( mTimeZone , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

125
Tree	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , c ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mTimeZone , c ) ;
Distance : 2

126
Tree	static Calendar c = new Calendar ( c ) ;
Code	static Calendar c = new Calendar ( c ) ;
Distance : 5

127
Tree	abstract Calendar c = new Calendar ( c ) ;
Code	abstract Calendar c = new Calendar ( c ) ;
Distance : 5

128
Tree	Calendar mLocale = new GregorianCalendar ( c , false ) ;
Code	Calendar mLocale = new GregorianCalendar ( c , false ) ;
Distance : 3

129
Tree	Calendar mTimeZone = new Calendar ( mTimeZone , mTimeZone ) ;
Code	Calendar mTimeZone = new Calendar ( mTimeZone , mTimeZone ) ;
Distance : 3

130
Tree	GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Code	GregorianCalendar mLocale = new GregorianCalendar ( c ) ;
Distance : 5

131
Tree	abstract Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Code	abstract Calendar mLocale = new GregorianCalendar ( mTimeZone ) ;
Distance : 4

132
Tree	Calendar mTimeZone = new GregorianCalendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mTimeZone = new GregorianCalendar ( mLocale , new GregorianCalendar [ NUMBER_CONSTANT ] ) ;
Distance : 7

133
Tree	Calendar mLocale = new Calendar ( c , new Calendar [ NUMBER_CONSTANT ] ) ;
Code	Calendar mLocale = new Calendar ( c , new Calendar [ NUMBER_CONSTANT ] ) ;
Distance : 8

134
Tree	protected Calendar mLocale = new GregorianCalendar ( c ) ;
Code	protected Calendar mLocale = new GregorianCalendar ( c ) ;
Distance : 5

135
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; JSType
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; JSType
Distance : 3

136
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; get
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; get
Distance : 3

137
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; isEmpty
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; isEmpty
Distance : 3

138
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; checkState
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; checkState
Distance : 3

139
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; double
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; double
Distance : 3

140
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; super
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; super
Distance : 3

141
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; !=
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; !=
Distance : 3

142
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; type
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; type
Distance : 3

143
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; *
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; *
Distance : 3

144
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; reportMatcher
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; reportMatcher
Distance : 3

145
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; setAcceptedLanguage
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; setAcceptedLanguage
Distance : 3

146
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; static
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; static
Distance : 3

147
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; d
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; d
Distance : 3

148
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; parent
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; parent
Distance : 3

149
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; MathRuntimeException
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; MathRuntimeException
Distance : 3

150
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; matcher
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; matcher
Distance : 3

151
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; instant
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; instant
Distance : 3

152
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; getMessage
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; getMessage
Distance : 3

153
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; else
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; else
Distance : 3

154
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; js
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; js
Distance : 3

155
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; paint
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; paint
Distance : 3

156
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; TestUtilities
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; TestUtilities
Distance : 3

157
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; setUp
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; setUp
Distance : 3

158
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; externs
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; externs
Distance : 3

159
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; ?
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; ?
Distance : 3

160
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; /
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; /
Distance : 3

161
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; Invocation
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; Invocation
Distance : 3

162
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; for
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; for
Distance : 3

163
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; equals
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; equals
Distance : 3

164
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; char
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; char
Distance : 3

165
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; stream
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; stream
Distance : 3

166
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; out
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; out
Distance : 3

167
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; protected
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; protected
Distance : 3

168
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; ;
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; ;
Distance : 3

169
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; source
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; source
Distance : 3

170
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; toString
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; toString
Distance : 3

171
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; invocations
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; invocations
Distance : 3

172
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; index
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; index
Distance : 3

173
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; getParent
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; getParent
Distance : 3

174
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; node
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; node
Distance : 3

175
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; compiler
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; compiler
Distance : 3

176
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; String
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; String
Distance : 3

177
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; e
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; e
Distance : 3

178
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; n
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; n
Distance : 3

179
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; return
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; return
Distance : 3

180
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; NUMBER_CONSTANT
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; NUMBER_CONSTANT
Distance : 3

181
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; STRING_CONSTANT
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; STRING_CONSTANT
Distance : 3

182
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; StrBuilder
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; StrBuilder
Distance : 3

183
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; new
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; new
Distance : 3

184
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; >
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; >
Distance : 3

185
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; +
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; +
Distance : 3

186
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; ,
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; ,
Distance : 3

187
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; .
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; .
Distance : 3

188
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; )
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; )
Distance : 3

189
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; ;
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; ;
Distance : 3

190
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; (
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; (
Distance : 3

191
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; <s>
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; <s>
Distance : 3

192
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; <>
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; <>
Distance : 3

193
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; createIllegalArgumentException
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; createIllegalArgumentException
Distance : 3

194
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; @
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; @
Distance : 3

195
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; testSame
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; testSame
Distance : 3

196
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; abs
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; abs
Distance : 3

197
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; values
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; values
Distance : 3

198
Tree	Calendar c = new GregorianCalendar ( mTimeZone ) ; public
Code	Calendar c = new GregorianCalendar ( mTimeZone ) ; public
Distance : 3

199
Tree	synchronized GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Code	synchronized GregorianCalendar mTimeZone = new Calendar ( mTimeZone ) ;
Distance : 6

========================================================================


========================================================================
Example Number: 47
Parent Code is: 
if ( chars [ i ] == CHAR_CONS  chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
-------------------------------------------------------------------------------
Child code is: 
if ( chars [ i ] == CHAR_CONS  chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp && ! hasDecPoint ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS})) (250{val=||}) (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=foundDigit}) (249{val=&&}) (38 (207{val=!}) (800{val=hasExp}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS})) (250{val=||}) (27 (2 (801{val=chars}) (221{val=[}) (800{val=i}) (222{val=]})) (236{val===}) (13{val=CHAR_CONS}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (27 (800{val=foundDigit}) (249{val=&&}) (38 (207{val=!}) (800{val=hasExp})) (249{val=&&}) (38 (207{val=!}) (800{val=hasDecPoint}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/24/parent/src_main_java_org_apache_commons_lang3_math_NumberUtils.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } externs
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } externs
Distance : 5

1
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } FastMath
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } FastMath
Distance : 5

2
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } expected
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } expected
Distance : 5

3
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportCodeChange
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportCodeChange
Distance : 5

4
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !=
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !=
Distance : 5

5
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } x
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } x
Distance : 5

6
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } parent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } parent
Distance : 5

7
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } createIllegalArgumentException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } createIllegalArgumentException
Distance : 5

8
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } str
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } str
Distance : 5

9
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LINE_JOINER
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LINE_JOINER
Distance : 5

10
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertThat
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertThat
Distance : 5

11
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocation
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocation
Distance : 5

12
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ,
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ,
Distance : 5

13
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } .
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } .
Distance : 5

14
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } testSame
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } testSame
Distance : 5

15
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertEquals
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertEquals
Distance : 5

16
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } T
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } T
Distance : 5

17
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } []
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } []
Distance : 5

18
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } scope
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } scope
Distance : 5

19
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getFirstChild
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getFirstChild
Distance : 5

20
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throws
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throws
Distance : 5

21
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } append
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } append
Distance : 5

22
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } IllegalArgumentException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } IllegalArgumentException
Distance : 5

23
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } UnivariateFunction
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } UnivariateFunction
Distance : 5

24
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } field
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } field
Distance : 5

25
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } name
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } name
Distance : 5

26
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } (
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } (
Distance : 5

27
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } =
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } =
Distance : 5

28
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } }
Distance : 5

29
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ()
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ()
Distance : 5

30
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {
Distance : 5

31
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } new
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } new
Distance : 5

32
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } STRING_CONSTANT
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } STRING_CONSTANT
Distance : 5

33
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NUMBER_CONSTANT
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NUMBER_CONSTANT
Distance : 5

34
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return
Distance : 5

35
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } &&
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } &&
Distance : 5

36
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertTrue
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } assertTrue
Distance : 5

37
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } i
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } i
Distance : 5

38
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } value
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } value
Distance : 5

39
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkState
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkState
Distance : 5

40
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } double
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } double
Distance : 5

41
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } super
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } super
Distance : 5

42
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Distance : 5

43
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <blank>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <blank>
Distance : 5

44
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ;
Distance : 5

45
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } )
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } )
Distance : 5

46
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } add
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } add
Distance : 5

47
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } t
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } t
Distance : 5

48
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <s>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <s>
Distance : 5

49
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } !
Distance : 5

50
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } d
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } d
Distance : 5

51
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocations
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } invocations
Distance : 5

52
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } try
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } try
Distance : 5

53
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fail
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fail
Distance : 5

54
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Args
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Args
Distance : 5

55
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } List
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } List
Distance : 5

56
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } result
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } result
Distance : 5

57
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } node
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } node
Distance : 5

58
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

59
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

60
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

61
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

62
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

63
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ hasExp ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ hasExp ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 6

64
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

65
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

66
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

67
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 5

68
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

69
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! hasExp ; }
Distance : 5

70
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ hasExp ] == CHAR_CONS ) { return foundDigit && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ hasExp ] == CHAR_CONS ) { return foundDigit && ! i ; }
Distance : 6

71
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

72
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } index
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } index
Distance : 5

73
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isBlock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isBlock
Distance : 5

74
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getParent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getParent
Distance : 5

75
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } values
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } values
Distance : 5

76
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } equals
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } equals
Distance : 5

77
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } for
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } for
Distance : 5

78
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Invocation
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Invocation
Distance : 5

79
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } js
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } js
Distance : 5

80
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtilities
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtilities
Distance : 5

81
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StrBuilder
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StrBuilder
Distance : 5

82
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setUp
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setUp
Distance : 5

83
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StringBuilder
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } StringBuilder
Distance : 5

84
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mockingProgress
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mockingProgress
Distance : 5

85
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sb
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sb
Distance : 5

86
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } m
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } m
Distance : 5

87
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } returnZero
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } returnZero
Distance : 5

88
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } :
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } :
Distance : 5

89
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } nullNotPermitted
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } nullNotPermitted
Distance : 5

90
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } boolean
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } boolean
Distance : 5

91
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } @
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } @
Distance : 5

92
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } int
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } int
Distance : 5

93
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } false
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } false
Distance : 5

94
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stream
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stream
Distance : 5

95
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } out
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } out
Distance : 5

96
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } protected
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } protected
Distance : 5

97
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } test
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } test
Distance : 5

98
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return;
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } return;
Distance : 5

99
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; }
Distance : 4

100
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } char
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } char
Distance : 5

101
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } >
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } >
Distance : 5

102
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } public
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } public
Distance : 5

103
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } final
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } final
Distance : 5

104
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } this
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } this
Distance : 5

105
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <
Distance : 5

106
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } if
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } if
Distance : 5

107
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ArrayList
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ArrayList
Distance : 5

108
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fireChangeEvent
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } fireChangeEvent
Distance : 5

109
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getInstance
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getInstance
Distance : 5

110
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } join
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } join
Distance : 5

111
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } JSType
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } JSType
Distance : 5

112
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return i && ! i ; }
Distance : 6

113
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ]
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ]
Distance : 5

114
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } length
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } length
Distance : 5

115
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } v
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } v
Distance : 5

116
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Integer
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Integer
Distance : 5

117
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } verify
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } verify
Distance : 5

118
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } null
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } null
Distance : 5

119
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } +
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } +
Distance : 5

120
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } static
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } static
Distance : 5

121
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setAcceptedLanguage
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } setAcceptedLanguage
Distance : 5

122
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } notifyListeners
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } notifyListeners
Distance : 5

123
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } c
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } c
Distance : 5

124
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MathRuntimeException
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MathRuntimeException
Distance : 5

125
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {}
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } {}
Distance : 5

126
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } true
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } true
Distance : 5

127
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mode
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mode
Distance : 5

128
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } *
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } *
Distance : 5

129
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } -
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } -
Distance : 5

130
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } lines
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } lines
Distance : 5

131
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } paint
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } paint
Distance : 5

132
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } get
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } get
Distance : 5

133
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isEmpty
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isEmpty
Distance : 5

134
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } matcher
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } matcher
Distance : 5

135
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } instant
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } instant
Distance : 5

136
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getMessage
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } getMessage
Distance : 5

137
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } else
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } else
Distance : 5

138
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } abs
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } abs
Distance : 5

139
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportMatcher
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } reportMatcher
Distance : 5

140
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } serialised
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } serialised
Distance : 5

141
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Exception
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Exception
Distance : 5

142
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Preconditions
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Preconditions
Distance : 5

143
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } compiler
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } compiler
Distance : 5

144
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ParamChecks
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ParamChecks
Distance : 5

145
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } array
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } array
Distance : 5

146
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <>
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <>
Distance : 5

147
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } a
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } a
Distance : 5

148
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } s
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } s
Distance : 5

149
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Node
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Node
Distance : 5

150
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } obj
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } obj
Distance : 5

151
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } size
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } size
Distance : 5

152
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LanguageMode.ECMASCRIPT_2015
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

153
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MutableTimePeriod
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } MutableTimePeriod
Distance : 5

154
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stroke
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } stroke
Distance : 5

155
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } PeriodType
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } PeriodType
Distance : 5

156
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } b
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } b
Distance : 5

157
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } contains
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } contains
Distance : 5

158
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isNormalBlock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } isNormalBlock
Distance : 5

159
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Double
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Double
Distance : 5

160
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } clone
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } clone
Distance : 5

161
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } f
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } f
Distance : 5

162
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Override
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Override
Distance : 5

163
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } traverseEs6
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } traverseEs6
Distance : 5

164
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Object
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Object
Distance : 5

165
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } String
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } String
Distance : 5

166
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mock
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } mock
Distance : 5

167
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } n
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } n
Distance : 5

168
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throw
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } throw
Distance : 5

169
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } catch
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } catch
Distance : 5

170
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } void
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } void
Distance : 5

171
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ==
Distance : 5

172
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Assert
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Assert
Distance : 5

173
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Fraction
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Fraction
Distance : 5

174
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } e
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } e
Distance : 5

175
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkNotNull
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkNotNull
Distance : 5

176
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } /
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } /
Distance : 5

177
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ?
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ?
Distance : 5

178
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } long
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } long
Distance : 5

179
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } [
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } [
Distance : 5

180
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sqrt
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } sqrt
Distance : 5

181
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <=
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } <=
Distance : 5

182
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } class
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } class
Distance : 5

183
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtils
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } TestUtils
Distance : 5

184
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } type
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } type
Distance : 5

185
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Math
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Math
Distance : 5

186
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } wanted
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } wanted
Distance : 5

187
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } root
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } root
Distance : 5

188
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeUtil
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeUtil
Distance : 5

189
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } data
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } data
Distance : 5

190
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkArgument
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } checkArgument
Distance : 5

191
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } source
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } source
Distance : 5

192
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ex
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } ex
Distance : 5

193
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } toString
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } toString
Distance : 5

194
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } options
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } options
Distance : 5

195
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } p
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } p
Distance : 5

196
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Test
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Test
Distance : 5

197
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Class
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } Class
Distance : 5

198
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeTraversal
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } NodeTraversal
Distance : 5

199
Tree	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } chrono
Code	if ( chars [ i ] == CHAR_CONS chars chars [ i ] == CHAR_CONS ) { return foundDigit && ! hasExp ; } chrono
Distance : 5

========================================================================


========================================================================
Example Number: 48
Parent Code is: 
cal1 . get ( Calendar.HOUR ) == cal2 . get ( Calendar.HOUR )
-------------------------------------------------------------------------------
Child code is: 
cal1 . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=cal1}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR}) (215{val=)})) (236{val===}) (32 (800{val=cal2}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR}) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=cal1}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR_OF_DAY}) (215{val=)})) (236{val===}) (32 (800{val=cal2}) (235{val=.}) (802{val=get}) (214{val=(}) (40{val=Calendar.HOUR_OF_DAY}) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/21/parent/src_main_java_org_apache_commons_lang3_time_DateUtils.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CHAR_CONS
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CHAR_CONS
Distance : 7

1
Tree	cal1 . get ( Calendar.HOUR ) < StringUtils.EMPTY
Code	cal1 . get ( Calendar.HOUR ) < StringUtils.EMPTY
Distance : 8

2
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < --
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < --
Distance : 7

3
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalQName
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalQName
Distance : 7

4
Tree	cal1 . get ( Calendar.HOUR ) < mant.length
Code	cal1 . get ( Calendar.HOUR ) < mant.length
Distance : 8

5
Tree	cal1 . get ( Calendar.HOUR ) < Exception
Code	cal1 . get ( Calendar.HOUR ) < Exception
Distance : 8

6
Tree	get . get ( Calendar.HOUR ) < TypeInferenceMode.BOTH
Code	get . get ( Calendar.HOUR ) < TypeInferenceMode.BOTH
Distance : 9

7
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < IncrementalCheckMode.GENERATE_IJS
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < IncrementalCheckMode.GENERATE_IJS
Distance : 7

8
Tree	get . get ( Calendar.HOUR_OF_DAY ) < FunctionFlavor.NORMAL
Code	get . get ( Calendar.HOUR_OF_DAY ) < FunctionFlavor.NORMAL
Distance : 8

9
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < -=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < -=
Distance : 7

10
Tree	cal1 . get ( Calendar.HOUR ) < Rule
Code	cal1 . get ( Calendar.HOUR ) < Rule
Distance : 8

11
Tree	cal1 . get ( Calendar.HOUR ) < PropertyCollapseLevel.NONE
Code	cal1 . get ( Calendar.HOUR ) < PropertyCollapseLevel.NONE
Distance : 8

12
Tree	cal1 . get ( Calendar.HOUR ) < *=
Code	cal1 . get ( Calendar.HOUR ) < *=
Distance : 8

13
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < PropertyRenamingPolicy.ALL_UNQUOTED
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < PropertyRenamingPolicy.ALL_UNQUOTED
Distance : 7

14
Tree	cal1 . get ( Calendar.HOUR ) < rhs.b
Code	cal1 . get ( Calendar.HOUR ) < rhs.b
Distance : 8

15
Tree	cal1 . get ( Calendar.HOUR ) < delimiters.length
Code	cal1 . get ( Calendar.HOUR ) < delimiters.length
Distance : 8

16
Tree	cal1 . get ( Calendar.HOUR ) < Config.StrictMode.SLOPPY
Code	cal1 . get ( Calendar.HOUR ) < Config.StrictMode.SLOPPY
Distance : 8

17
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < instanceof
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < instanceof
Distance : 7

18
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < StringUtils.EMPTY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < StringUtils.EMPTY
Distance : 7

19
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Rule
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Rule
Distance : 7

20
Tree	get . get ( Calendar.HOUR ) < currentState.length
Code	get . get ( Calendar.HOUR ) < currentState.length
Distance : 9

21
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.CARDAN_ANGLES_SINGULARITY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.CARDAN_ANGLES_SINGULARITY
Distance : 7

22
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < minPrecedence
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < minPrecedence
Distance : 7

23
Tree	cal1 . get ( Calendar.HOUR ) < instanceof
Code	cal1 . get ( Calendar.HOUR ) < instanceof
Distance : 8

24
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Mode.ES8_OR_GREATER
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Mode.ES8_OR_GREATER
Distance : 7

25
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < throws
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < throws
Distance : 7

26
Tree	get . get ( Calendar.HOUR_OF_DAY ) < TracerMode.OFF
Code	get . get ( Calendar.HOUR_OF_DAY ) < TracerMode.OFF
Distance : 8

27
Tree	cal1 . get ( Calendar.HOUR ) < minPrecedence
Code	cal1 . get ( Calendar.HOUR ) < minPrecedence
Distance : 8

28
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < else
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < else
Distance : 7

29
Tree	cal1 . get ( Calendar.HOUR ) < LocalQName
Code	cal1 . get ( Calendar.HOUR ) < LocalQName
Distance : 8

30
Tree	cal1 . get ( Calendar.HOUR ) < --
Code	cal1 . get ( Calendar.HOUR ) < --
Distance : 8

31
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < String
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < String
Distance : 7

32
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < values.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < values.length
Distance : 7

33
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_HOUR
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_HOUR
Distance : 7

34
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < FakeList
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < FakeList
Distance : 7

35
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < MockitoLoggerImpl
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < MockitoLoggerImpl
Distance : 7

36
Tree	cal1 . get ( Calendar.HOUR ) < FunctionFlavor.NORMAL
Code	cal1 . get ( Calendar.HOUR ) < FunctionFlavor.NORMAL
Distance : 8

37
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < -
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < -
Distance : 7

38
Tree	get . get ( Calendar.HOUR ) < -=
Code	get . get ( Calendar.HOUR ) < -=
Distance : 9

39
Tree	cal1 . get ( Calendar.HOUR ) < IncrementalCheckMode.GENERATE_IJS
Code	cal1 . get ( Calendar.HOUR ) < IncrementalCheckMode.GENERATE_IJS
Distance : 8

40
Tree	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.CARDAN_ANGLES_SINGULARITY
Code	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.CARDAN_ANGLES_SINGULARITY
Distance : 8

41
Tree	get . get ( Calendar.HOUR_OF_DAY ) < Year.MINIMUM_YEAR
Code	get . get ( Calendar.HOUR_OF_DAY ) < Year.MINIMUM_YEAR
Distance : 8

42
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < %=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < %=
Distance : 7

43
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Mockito.CALLS_REAL_METHODS
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Mockito.CALLS_REAL_METHODS
Distance : 7

44
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Calendar.SUNDAY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Calendar.SUNDAY
Distance : 7

45
Tree	cal1 . get ( Calendar.HOUR ) < PropertyRenamingPolicy.ALL_UNQUOTED
Code	cal1 . get ( Calendar.HOUR ) < PropertyRenamingPolicy.ALL_UNQUOTED
Distance : 8

46
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < mant.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < mant.length
Distance : 7

47
Tree	cal1 . get ( Calendar.HOUR ) < Mode.ES8_OR_GREATER
Code	cal1 . get ( Calendar.HOUR ) < Mode.ES8_OR_GREATER
Distance : 8

48
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Exception
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Exception
Distance : 7

49
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < TypeInferenceMode.BOTH
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < TypeInferenceMode.BOTH
Distance : 7

50
Tree	get . get ( Calendar.HOUR ) < Year.MAXIMUM_YEAR
Code	get . get ( Calendar.HOUR ) < Year.MAXIMUM_YEAR
Distance : 9

51
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < &=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < &=
Distance : 7

52
Tree	cal1 . get ( Calendar.HOUR ) < %
Code	cal1 . get ( Calendar.HOUR ) < %
Distance : 8

53
Tree	get . get ( Calendar.HOUR ) < /=
Code	get . get ( Calendar.HOUR ) < /=
Distance : 9

54
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < >=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < >=
Distance : 7

55
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Year.MAXIMUM_YEAR
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Year.MAXIMUM_YEAR
Distance : 7

56
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < %
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < %
Distance : 7

57
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < /=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < /=
Distance : 7

58
Tree	cal1 . get ( Calendar.HOUR ) < ++
Code	cal1 . get ( Calendar.HOUR ) < ++
Distance : 8

59
Tree	cal1 . get ( Calendar.HOUR ) < >=
Code	cal1 . get ( Calendar.HOUR ) < >=
Distance : 8

60
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < ++
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < ++
Distance : 7

61
Tree	get . get ( Calendar.HOUR ) < /
Code	get . get ( Calendar.HOUR ) < /
Distance : 9

62
Tree	cal1 . get ( Calendar.HOUR ) < extends
Code	cal1 . get ( Calendar.HOUR ) < extends
Distance : 8

63
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < /
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < /
Distance : 7

64
Tree	cal1 . get ( Calendar.HOUR ) < &
Code	cal1 . get ( Calendar.HOUR ) < &
Distance : 8

65
Tree	cal1 . get ( Calendar.HOUR ) < ^
Code	cal1 . get ( Calendar.HOUR ) < ^
Distance : 8

66
Tree	NUMBER_CONSTANT / cal2 . get ( Calendar.HOUR_OF_DAY )
Code	NUMBER_CONSTANT / cal2 . get ( Calendar.HOUR_OF_DAY )
Distance : 7

67
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < extends
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < extends
Distance : 7

68
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < &
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < &
Distance : 7

69
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < ^
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < ^
Distance : 7

70
Tree	NUMBER_CONSTANT / cal2 . get ( Calendar.HOUR )
Code	NUMBER_CONSTANT / cal2 . get ( Calendar.HOUR )
Distance : 8

71
Tree	cal1 . get ( Calendar.HOUR ) < &=
Code	cal1 . get ( Calendar.HOUR ) < &=
Distance : 8

72
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < SourceMap.LocationMapping
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < SourceMap.LocationMapping
Distance : 7

73
Tree	get . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_DAY
Code	get . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_DAY
Distance : 8

74
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < PropertyCollapseLevel.NONE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < PropertyCollapseLevel.NONE
Distance : 7

75
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < *=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < *=
Distance : 7

76
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < delimiters.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < delimiters.length
Distance : 7

77
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < rhs.b
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < rhs.b
Distance : 7

78
Tree	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.EULER_ANGLES_SINGULARITY
Code	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.EULER_ANGLES_SINGULARITY
Distance : 8

79
Tree	get . get ( Calendar.HOUR_OF_DAY ) < Config.StrictMode.SLOPPY
Code	get . get ( Calendar.HOUR_OF_DAY ) < Config.StrictMode.SLOPPY
Distance : 8

80
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < currentState.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < currentState.length
Distance : 7

81
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Long.MAX_VALUE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Long.MAX_VALUE
Distance : 7

82
Tree	cal1 . get ( Calendar.HOUR ) < ?
Code	cal1 . get ( Calendar.HOUR ) < ?
Distance : 8

83
Tree	cal1 . get ( Calendar.HOUR ) < JUnit44RunnerImpl
Code	cal1 . get ( Calendar.HOUR ) < JUnit44RunnerImpl
Distance : 8

84
Tree	get . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.EULER_ANGLES_SINGULARITY
Code	get . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.EULER_ANGLES_SINGULARITY
Distance : 8

85
Tree	cal1 . get ( Calendar.HOUR ) < Sin
Code	cal1 . get ( Calendar.HOUR ) < Sin
Distance : 8

86
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < ?
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < ?
Distance : 7

87
Tree	get . get ( Calendar.HOUR_OF_DAY ) < JUnit44RunnerImpl
Code	get . get ( Calendar.HOUR_OF_DAY ) < JUnit44RunnerImpl
Distance : 8

88
Tree	cal1 . get ( Calendar.HOUR ) < CharUtils.NUL
Code	cal1 . get ( Calendar.HOUR ) < CharUtils.NUL
Distance : 8

89
Tree	cal1 . get ( Calendar.HOUR ) < FunctionFlavor.GENERATOR
Code	cal1 . get ( Calendar.HOUR ) < FunctionFlavor.GENERATOR
Distance : 8

90
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Sin
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Sin
Distance : 7

91
Tree	cal1 . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_DAY
Code	cal1 . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_DAY
Distance : 8

92
Tree	cal1 . get ( Calendar.HOUR ) < SourceMap.LocationMapping
Code	cal1 . get ( Calendar.HOUR ) < SourceMap.LocationMapping
Distance : 8

93
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CharUtils.NUL
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CharUtils.NUL
Distance : 7

94
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < FunctionFlavor.GENERATOR
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < FunctionFlavor.GENERATOR
Distance : 7

95
Tree	cal1 . get ( Calendar.HOUR ) < Long.MAX_VALUE
Code	cal1 . get ( Calendar.HOUR ) < Long.MAX_VALUE
Distance : 8

96
Tree	cal1 . get ( Calendar.HOUR ) < <=
Code	cal1 . get ( Calendar.HOUR ) < <=
Distance : 8

97
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < InitializationError
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < InitializationError
Distance : 7

98
Tree	cal1 . get ( Calendar.HOUR ) < Calendar.SUNDAY
Code	cal1 . get ( Calendar.HOUR ) < Calendar.SUNDAY
Distance : 8

99
Tree	cal1 . get ( Calendar.HOUR ) < pass2Index
Code	cal1 . get ( Calendar.HOUR ) < pass2Index
Distance : 8

100
Tree	cal1 . get ( Calendar.HOUR ) < TernaryValue.TRUE
Code	cal1 . get ( Calendar.HOUR ) < TernaryValue.TRUE
Distance : 8

101
Tree	get . get ( Calendar.HOUR ) < LanguageMode.TYPESCRIPT
Code	get . get ( Calendar.HOUR ) < LanguageMode.TYPESCRIPT
Distance : 9

102
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < rhs.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < rhs.length
Distance : 7

103
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < IncrementalCheckMode.OFF
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < IncrementalCheckMode.OFF
Distance : 7

104
Tree	get . get ( Calendar.HOUR_OF_DAY ) < matchLabel
Code	get . get ( Calendar.HOUR_OF_DAY ) < matchLabel
Distance : 8

105
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateTimeConstants.MILLIS_PER_DAY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateTimeConstants.MILLIS_PER_DAY
Distance : 7

106
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < iChronology.MILLIS_PER_DAY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < iChronology.MILLIS_PER_DAY
Distance : 7

107
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < ThreadSafeDelegatingErrorManager
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < ThreadSafeDelegatingErrorManager
Distance : 7

108
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Config.RunMode.KEEP_GOING
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Config.RunMode.KEEP_GOING
Distance : 7

109
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < PreprocessorSymbolTable.CachedInstanceFactory
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < PreprocessorSymbolTable.CachedInstanceFactory
Distance : 7

110
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < JsDocToken.PIPE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < JsDocToken.PIPE
Distance : 7

111
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Reach.LOCAL_ONLY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Reach.LOCAL_ONLY
Distance : 7

112
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < V
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < V
Distance : 7

113
Tree	cal1 . get ( Calendar.HOUR ) < definitionsGatherer.definitions
Code	cal1 . get ( Calendar.HOUR ) < definitionsGatherer.definitions
Distance : 8

114
Tree	cal1 . get ( Calendar.HOUR ) < startPoint.length
Code	cal1 . get ( Calendar.HOUR ) < startPoint.length
Distance : 8

115
Tree	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED
Code	cal1 . get ( Calendar.HOUR ) < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED
Distance : 8

116
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CompilerOptions.LanguageMode.NO_TRANSPILE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CompilerOptions.LanguageMode.NO_TRANSPILE
Distance : 7

117
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Improvement
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Improvement
Distance : 7

118
Tree	cal1 . get ( Calendar.HOUR ) < DummyLocalizable
Code	cal1 . get ( Calendar.HOUR ) < DummyLocalizable
Distance : 8

119
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < cloned.chars
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < cloned.chars
Distance : 7

120
Tree	cal1 . get ( Calendar.HOUR ) < SHORTCUT
Code	cal1 . get ( Calendar.HOUR ) < SHORTCUT
Distance : 8

121
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < PAIR
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < PAIR
Distance : 7

122
Tree	cal1 . get ( Calendar.HOUR ) < TypeInferenceMode.NEITHER
Code	cal1 . get ( Calendar.HOUR ) < TypeInferenceMode.NEITHER
Distance : 8

123
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < <=
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < <=
Distance : 7

124
Tree	cal1 . get ( Calendar.HOUR ) < State.DURING_RESOLUTION
Code	cal1 . get ( Calendar.HOUR ) < State.DURING_RESOLUTION
Distance : 8

125
Tree	cal1 . get ( Calendar.HOUR ) < MatchResult.NO_MATCH
Code	cal1 . get ( Calendar.HOUR ) < MatchResult.NO_MATCH
Distance : 8

126
Tree	get . get ( Calendar.HOUR ) < Double
Code	get . get ( Calendar.HOUR ) < Double
Distance : 9

127
Tree	cal1 . get ( Calendar.HOUR ) < SerializableBoundedType
Code	cal1 . get ( Calendar.HOUR ) < SerializableBoundedType
Distance : 8

128
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < synchronized
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < synchronized
Distance : 7

129
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < sample1.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < sample1.length
Distance : 7

130
Tree	cal1 . get ( Calendar.HOUR ) < CheckLevel.OFF
Code	cal1 . get ( Calendar.HOUR ) < CheckLevel.OFF
Distance : 8

131
Tree	get . get ( Calendar.HOUR_OF_DAY ) < Context.OTHER
Code	get . get ( Calendar.HOUR_OF_DAY ) < Context.OTHER
Distance : 8

132
Tree	cal1 . get ( Calendar.HOUR ) < RemoveCode
Code	cal1 . get ( Calendar.HOUR ) < RemoveCode
Distance : 8

133
Tree	cal1 . get ( Calendar.HOUR ) < IllegalArgumentException
Code	cal1 . get ( Calendar.HOUR ) < IllegalArgumentException
Distance : 8

134
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < isPointInRect
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < isPointInRect
Distance : 7

135
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Random
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Random
Distance : 7

136
Tree	get . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_MINUTE
Code	get . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_MINUTE
Distance : 9

137
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CallSiteType.UNSUPPORTED
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CallSiteType.UNSUPPORTED
Distance : 7

138
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < moment.m2
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < moment.m2
Distance : 7

139
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_SECOND
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_SECOND
Distance : 7

140
Tree	cal1 . get ( Calendar.HOUR ) < getBooleanProp
Code	cal1 . get ( Calendar.HOUR ) < getBooleanProp
Distance : 8

141
Tree	cal1 . get ( Calendar.HOUR ) < DisposalCheckingPolicy.OFF
Code	cal1 . get ( Calendar.HOUR ) < DisposalCheckingPolicy.OFF
Distance : 8

142
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < Token.NEW
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < Token.NEW
Distance : 7

143
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < TimeUnit.SECONDS
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < TimeUnit.SECONDS
Distance : 7

144
Tree	cal1 . get ( Calendar.HOUR ) < BooleanLiteralSet.EMPTY
Code	cal1 . get ( Calendar.HOUR ) < BooleanLiteralSet.EMPTY
Distance : 8

145
Tree	get . get ( Calendar.HOUR_OF_DAY ) < options.skipTranspilationAndCrash
Code	get . get ( Calendar.HOUR_OF_DAY ) < options.skipTranspilationAndCrash
Distance : 8

146
Tree	cal1 . get ( Calendar.HOUR ) < current.parent.scopes
Code	cal1 . get ( Calendar.HOUR ) < current.parent.scopes
Distance : 8

147
Tree	get . get ( Calendar.HOUR_OF_DAY ) < BooleanLiteralSet.BOTH
Code	get . get ( Calendar.HOUR_OF_DAY ) < BooleanLiteralSet.BOTH
Distance : 8

148
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < TernaryValue.TRUE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < TernaryValue.TRUE
Distance : 7

149
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < LanguageMode.TYPESCRIPT
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < LanguageMode.TYPESCRIPT
Distance : 7

150
Tree	cal1 . get ( Calendar.HOUR ) < shouldPreserve
Code	cal1 . get ( Calendar.HOUR ) < shouldPreserve
Distance : 8

151
Tree	. . get ( Calendar.HOUR ) < values.length
Code	. . get ( Calendar.HOUR ) < values.length
Distance : 9

152
Tree	cal1 . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_HOUR
Code	cal1 . get ( Calendar.HOUR ) < DateUtils.MILLIS_PER_HOUR
Distance : 8

153
Tree	cal1 . get ( Calendar.HOUR ) < FakeList
Code	cal1 . get ( Calendar.HOUR ) < FakeList
Distance : 8

154
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < startPoint.length
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < startPoint.length
Distance : 7

155
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < definitionsGatherer.definitions
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < definitionsGatherer.definitions
Distance : 7

156
Tree	. . get ( Calendar.HOUR ) < -
Code	. . get ( Calendar.HOUR ) < -
Distance : 9

157
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < pass2Index
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < pass2Index
Distance : 7

158
Tree	get . get ( Calendar.HOUR ) < MockitoLoggerImpl
Code	get . get ( Calendar.HOUR ) < MockitoLoggerImpl
Distance : 9

159
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DummyLocalizable
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DummyLocalizable
Distance : 7

160
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < BooleanLiteralSet.EMPTY
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < BooleanLiteralSet.EMPTY
Distance : 7

161
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < current.parent.scopes
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < current.parent.scopes
Distance : 7

162
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < case
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < case
Distance : 7

163
Tree	cal1 . get ( Calendar.HOUR ) < Year.MINIMUM_YEAR
Code	cal1 . get ( Calendar.HOUR ) < Year.MINIMUM_YEAR
Distance : 8

164
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < line.originOffset
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < line.originOffset
Distance : 7

165
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < *
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < *
Distance : 7

166
Tree	cal1 . get ( Calendar.HOUR ) < %=
Code	cal1 . get ( Calendar.HOUR ) < %=
Distance : 8

167
Tree	cal1 . get ( Calendar.HOUR ) < Mockito.CALLS_REAL_METHODS
Code	cal1 . get ( Calendar.HOUR ) < Mockito.CALLS_REAL_METHODS
Distance : 8

168
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED
Distance : 7

169
Tree	cal1 . get ( Calendar.HOUR ) < String
Code	cal1 . get ( Calendar.HOUR ) < String
Distance : 8

170
Tree	cal1 . get ( Calendar.HOUR ) < else
Code	cal1 . get ( Calendar.HOUR ) < else
Distance : 8

171
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < SHORTCUT
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < SHORTCUT
Distance : 7

172
Tree	cal1 . get ( Calendar.HOUR ) < case
Code	cal1 . get ( Calendar.HOUR ) < case
Distance : 8

173
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < other.liveSet
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < other.liveSet
Distance : 7

174
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < isLastMatcherVarargMatcher
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < isLastMatcherVarargMatcher
Distance : 7

175
Tree	cal1 . get ( Calendar.HOUR ) < *
Code	cal1 . get ( Calendar.HOUR ) < *
Distance : 8

176
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CharacterCodingException
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CharacterCodingException
Distance : 7

177
Tree	cal1 . get ( Calendar.HOUR ) < options.skipTranspilationAndCrash
Code	cal1 . get ( Calendar.HOUR ) < options.skipTranspilationAndCrash
Distance : 8

178
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < IllegalArgumentException
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < IllegalArgumentException
Distance : 7

179
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < MatchResult.NO_MATCH
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < MatchResult.NO_MATCH
Distance : 7

180
Tree	get . get ( Calendar.HOUR_OF_DAY ) < Double
Code	get . get ( Calendar.HOUR_OF_DAY ) < Double
Distance : 8

181
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < anyList
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < anyList
Distance : 7

182
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < CheckLevel.OFF
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < CheckLevel.OFF
Distance : 7

183
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < SerializableBoundedType
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < SerializableBoundedType
Distance : 7

184
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < State.DURING_RESOLUTION
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < State.DURING_RESOLUTION
Distance : 7

185
Tree	cal1 . get ( Calendar.HOUR ) < InitializationError
Code	cal1 . get ( Calendar.HOUR ) < InitializationError
Distance : 8

186
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < RemoveCode
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < RemoveCode
Distance : 7

187
Tree	cal1 . get ( Calendar.HOUR ) < TracerMode.OFF
Code	cal1 . get ( Calendar.HOUR ) < TracerMode.OFF
Distance : 8

188
Tree	cal1 . get ( Calendar.HOUR ) < throws
Code	cal1 . get ( Calendar.HOUR ) < throws
Distance : 8

189
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_MINUTE
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DateUtils.MILLIS_PER_MINUTE
Distance : 7

190
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < getBooleanProp
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < getBooleanProp
Distance : 7

191
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < DisposalCheckingPolicy.OFF
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < DisposalCheckingPolicy.OFF
Distance : 7

192
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < TypeInferenceMode.NEITHER
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < TypeInferenceMode.NEITHER
Distance : 7

193
Tree	get . get ( Calendar.HOUR ) < line.originOffset
Code	get . get ( Calendar.HOUR ) < line.originOffset
Distance : 9

194
Tree	cal1 . get ( Calendar.HOUR ) < CHAR_CONS
Code	cal1 . get ( Calendar.HOUR ) < CHAR_CONS
Distance : 8

195
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < shouldPreserve
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < shouldPreserve
Distance : 7

196
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) . get ( Calendar.HOUR_OF_DAY ) cal2 Calendar.HOUR_OF_DAY get Calendar.HOUR_OF_DAY /
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) . get ( Calendar.HOUR_OF_DAY ) cal2 Calendar.HOUR_OF_DAY get Calendar.HOUR_OF_DAY /
Distance : 7

197
Tree	. . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) chrono
Code	. . get ( Calendar.HOUR_OF_DAY ) == cal2 . get ( Calendar.HOUR_OF_DAY ) chrono
Distance : 2

198
Tree	cal1 . get ( Calendar.HOUR ) < CharacterCodingException
Code	cal1 . get ( Calendar.HOUR ) < CharacterCodingException
Distance : 8

199
Tree	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.NUMBER_TOO_SMALL
Code	cal1 . get ( Calendar.HOUR_OF_DAY ) < LocalizedFormats.NUMBER_TOO_SMALL
Distance : 7

========================================================================


========================================================================
Example Number: 49
Parent Code is: 
{ pos += Character . charCount ( Character . codePointAt ( input , pos ) ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ pos += Character . charCount ( Character . codePointAt ( input , pt ) ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=pos}) (237{val=+=}) (32 (800{val=Character}) (235{val=.}) (802{val=charCount}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=codePointAt}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=pos}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (21 (7 (800{val=pos}) (237{val=+=}) (32 (800{val=Character}) (235{val=.}) (802{val=charCount}) (214{val=(}) (32 (800{val=Character}) (235{val=.}) (802{val=codePointAt}) (214{val=(}) (800{val=input}) (234{val=,}) (800{val=pt}) (215{val=)})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/6/parent/src_main_java_org_apache_commons_lang3_text_translate_CharSequenceTranslator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	{ pos += Character . charCount ( Character . codePointAt ( input , pos ) ) ; }
Code	{ pos += Character . charCount ( Character . codePointAt ( input , pos ) ) ; }
Distance : 1

1
Tree	{ throw pos ; } >
Code	{ throw pos ; } >
Distance : 16

2
Tree	{ throw pos ; } <blank>
Code	{ throw pos ; } <blank>
Distance : 16

3
Tree	{ throw pos ; } -
Code	{ throw pos ; } -
Distance : 16

4
Tree	{ throw pos ; } {
Code	{ throw pos ; } {
Distance : 16

5
Tree	{ throw pos ; } expected
Code	{ throw pos ; } expected
Distance : 16

6
Tree	{ throw pos ; } reportCodeChange
Code	{ throw pos ; } reportCodeChange
Distance : 16

7
Tree	{ throw pos ; } <s>
Code	{ throw pos ; } <s>
Distance : 16

8
Tree	{ throw pos ; } FastMath
Code	{ throw pos ; } FastMath
Distance : 16

9
Tree	{ throw pos ; } STRING_CONSTANT
Code	{ throw pos ; } STRING_CONSTANT
Distance : 16

10
Tree	{ throw pos ; } ()
Code	{ throw pos ; } ()
Distance : 16

11
Tree	{ throw pos ; } {
Code	{ throw pos ; } {
Distance : 16

12
Tree	{ throw pos ; } return
Code	{ throw pos ; } return
Distance : 16

13
Tree	{ throw pos ; } IllegalArgumentException
Code	{ throw pos ; } IllegalArgumentException
Distance : 16

14
Tree	{ Character . charCount ( pos . codePointAt ( input , pos ) ) ; }
Code	{ Character . charCount ( pos . codePointAt ( input , pos ) ) ; }
Distance : 4

15
Tree	{ throw pos ; } NUMBER_CONSTANT
Code	{ throw pos ; } NUMBER_CONSTANT
Distance : 16

16
Tree	{ input . charCount ( Character . codePointAt ( Character , pt ) ) ; }
Code	{ input . charCount ( Character . codePointAt ( Character , pt ) ) ; }
Distance : 4

17
Tree	{ throw pos ; } (
Code	{ throw pos ; } (
Distance : 16

18
Tree	{ throw pos ; } )
Code	{ throw pos ; } )
Distance : 16

19
Tree	{ throw pos ; } for
Code	{ throw pos ; } for
Distance : 16

20
Tree	{ throw pos ; } Invocation
Code	{ throw pos ; } Invocation
Distance : 16

21
Tree	{ throw pos ; } /
Code	{ throw pos ; } /
Distance : 16

22
Tree	{ throw pos ; } isEmpty
Code	{ throw pos ; } isEmpty
Distance : 16

23
Tree	{ throw pos ; } ]
Code	{ throw pos ; } ]
Distance : 16

24
Tree	{ throw pos ; } assertTrue
Code	{ throw pos ; } assertTrue
Distance : 16

25
Tree	{ throw pos ; } ;
Code	{ throw pos ; } ;
Distance : 16

26
Tree	{ throw pos ; } Preconditions
Code	{ throw pos ; } Preconditions
Distance : 16

27
Tree	{ throw pos ; } public
Code	{ throw pos ; } public
Distance : 16

28
Tree	{ throw pos ; } new
Code	{ throw pos ; } new
Distance : 16

29
Tree	{ throw pos ; } null
Code	{ throw pos ; } null
Distance : 16

30
Tree	{ throw pos ; } +
Code	{ throw pos ; } +
Distance : 16

31
Tree	{ throw pos ; } ,
Code	{ throw pos ; } ,
Distance : 16

32
Tree	{ throw pos ; } .
Code	{ throw pos ; } .
Distance : 16

33
Tree	{ throw pos ; } [
Code	{ throw pos ; } [
Distance : 16

34
Tree	{ throw pos ; } equals
Code	{ throw pos ; } equals
Distance : 16

35
Tree	{ pos . charCount ( pt . charCount ( input , pt ) ) ; }
Code	{ pos . charCount ( pt . charCount ( input , pt ) ) ; }
Distance : 4

36
Tree	{ throw new result ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new result ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

37
Tree	{ throw new searchStr ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new searchStr ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

38
Tree	{ pos += input . charCount ( Character . codePointAt ( input , pos ) ) ; }
Code	{ pos += input . charCount ( Character . codePointAt ( input , pos ) ) ; }
Distance : 2

39
Tree	{ pos += Character . charCount ( Character . codePointAt ( input , input ) ) ; }
Code	{ pos += Character . charCount ( Character . codePointAt ( input , input ) ) ; }
Distance : 1

40
Tree	{ throw new exec ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new exec ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

41
Tree	{ throw new Class ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new Class ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

42
Tree	{ throw new replaceParent ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new replaceParent ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

43
Tree	{ throw new options.removeUnusedVars ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new options.removeUnusedVars ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

44
Tree	{ throw new maybeAssign ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new maybeAssign ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

45
Tree	{ throw new reporterStub ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new reporterStub ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

46
Tree	{ throw new shift ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new shift ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

47
Tree	{ throw new Cartesian2D ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new Cartesian2D ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

48
Tree	{ pos += Character . charCount ( pt . codePointAt ( input , pos ) ) ; }
Code	{ pos += Character . charCount ( pt . codePointAt ( input , pos ) ) ; }
Distance : 2

49
Tree	{ throw new computeMillis ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new computeMillis ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

50
Tree	{ throw new >= ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new >= ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

51
Tree	{ throw new bits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new bits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

52
Tree	{ pt . codePointAt ( Character . codePointAt ( Character , Character ) ) ; }
Code	{ pt . codePointAt ( Character . codePointAt ( Character , Character ) ) ; }
Distance : 6

53
Tree	{ throw new UniformContinuousDistribution ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new UniformContinuousDistribution ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

54
Tree	{ throw new blockScope ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new blockScope ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

55
Tree	{ pos += Character . codePointAt ( Character . codePointAt ( Character , pos ) ) ; }
Code	{ pos += Character . codePointAt ( Character . codePointAt ( Character , pos ) ) ; }
Distance : 3

56
Tree	{ throw new MutableLong ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new MutableLong ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

57
Tree	{ throw new pos ( Character . charCount ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new pos ( Character . charCount ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 8

58
Tree	{ pos . codePointAt ( Character . codePointAt ( input , pos ) ) ; }
Code	{ pos . codePointAt ( Character . codePointAt ( input , pos ) ) ; }
Distance : 4

59
Tree	{ throw pt ; }
Code	{ throw pt ; }
Distance : 14

60
Tree	{ pos += Character . charCount ( Character . codePointAt ( input , pt ) ) ; }
Code	{ pos += Character . charCount ( Character . codePointAt ( input , pt ) ) ; }
Distance : 0

61
Tree	{ throw new StandardXYToolTipGenerator ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new StandardXYToolTipGenerator ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

62
Tree	{ throw new bucket ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new bucket ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

63
Tree	{ throw new NotStrictlyPositiveException ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new NotStrictlyPositiveException ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

64
Tree	{ throw new File ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new File ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

65
Tree	{ throw new toAppendTo ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new toAppendTo ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

66
Tree	{ throw new CharSequence ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new CharSequence ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

67
Tree	{ throw new empty ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new empty ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

68
Tree	{ throw new numerator ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new numerator ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

69
Tree	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , ! ) ; }
Code	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , ! ) ; }
Distance : 9

70
Tree	{ throw pos ; } d
Code	{ throw pos ; } d
Distance : 16

71
Tree	{ throw pos ; } Collection
Code	{ throw pos ; } Collection
Distance : 16

72
Tree	{ throw pos ; } solver
Code	{ throw pos ; } solver
Distance : 16

73
Tree	{ throw pos ; } {}
Code	{ throw pos ; } {}
Distance : 16

74
Tree	{ throw pos ; } MathRuntimeException
Code	{ throw pos ; } MathRuntimeException
Distance : 16

75
Tree	{ throw pos ; } if
Code	{ throw pos ; } if
Distance : 16

76
Tree	{ throw pos ; } <
Code	{ throw pos ; } <
Distance : 16

77
Tree	{ throw pos ; } ==
Code	{ throw pos ; } ==
Distance : 16

78
Tree	{ throw pos ; } i
Code	{ throw pos ; } i
Distance : 16

79
Tree	{ throw pos ; } true
Code	{ throw pos ; } true
Distance : 16

80
Tree	{ throw pos ; } T
Code	{ throw pos ; } T
Distance : 16

81
Tree	{ pos += pt . codePointAt ( input . codePointAt ( input , pos ) ) ; }
Code	{ pos += pt . codePointAt ( input . codePointAt ( input , pos ) ) ; }
Distance : 4

82
Tree	{ input += Character . charCount ( pt . codePointAt ( input , pos ) ) ; }
Code	{ input += Character . charCount ( pt . codePointAt ( input , pos ) ) ; }
Distance : 3

83
Tree	{ input += input . charCount ( Character . codePointAt ( input , pos ) ) ; }
Code	{ input += input . charCount ( Character . codePointAt ( input , pos ) ) ; }
Distance : 3

84
Tree	{ pos += pos . charCount ( Character . charCount ( Character , pos ) ) ; }
Code	{ pos += pos . charCount ( Character . charCount ( Character , pos ) ) ; }
Distance : 4

85
Tree	{ pos += Character . codePointAt ( Character . codePointAt ( pos , input ) ) ; }
Code	{ pos += Character . codePointAt ( Character . codePointAt ( pos , input ) ) ; }
Distance : 3

86
Tree	{ Character += Character . codePointAt ( Character . charCount ( input , pos ) ) ; }
Code	{ Character += Character . codePointAt ( Character . charCount ( input , pos ) ) ; }
Distance : 4

87
Tree	{ throw pos ; } &&
Code	{ throw pos ; } &&
Distance : 16

88
Tree	{ pos += input . codePointAt ( Character . codePointAt ( pos , pos ) ) ; }
Code	{ pos += input . codePointAt ( Character . codePointAt ( pos , pos ) ) ; }
Distance : 4

89
Tree	{ throw pos ; } mode
Code	{ throw pos ; } mode
Distance : 16

90
Tree	{ throw pos ; } @
Code	{ throw pos ; } @
Distance : 16

91
Tree	{ throw pos ; } class
Code	{ throw pos ; } class
Distance : 16

92
Tree	{ throw pos ; } Object
Code	{ throw pos ; } Object
Distance : 16

93
Tree	{ throw pos ; } mock
Code	{ throw pos ; } mock
Distance : 16

94
Tree	{ throw pos ; } Override
Code	{ throw pos ; } Override
Distance : 16

95
Tree	{ throw pos ; } assertEquals
Code	{ throw pos ; } assertEquals
Distance : 16

96
Tree	{ throw pos ; } !
Code	{ throw pos ; } !
Distance : 16

97
Tree	{ throw pos ; } test
Code	{ throw pos ; } test
Distance : 16

98
Tree	{ throw pos ; } []
Code	{ throw pos ; } []
Distance : 16

99
Tree	{ throw pos ; } throw
Code	{ throw pos ; } throw
Distance : 16

100
Tree	{ throw pos ; } catch
Code	{ throw pos ; } catch
Distance : 16

101
Tree	{ throw pos ; } value
Code	{ throw pos ; } value
Distance : 16

102
Tree	{ throw pos ; } void
Code	{ throw pos ; } void
Distance : 16

103
Tree	{ throw pos ; } false
Code	{ throw pos ; } false
Distance : 16

104
Tree	{ throw pos ; } int
Code	{ throw pos ; } int
Distance : 16

105
Tree	{ throw pos ; } nullNotPermitted
Code	{ throw pos ; } nullNotPermitted
Distance : 16

106
Tree	{ pt += Character . charCount ( pos . codePointAt ( Character , pos ) ) ; }
Code	{ pt += Character . charCount ( pos . codePointAt ( Character , pos ) ) ; }
Distance : 4

107
Tree	{ input += Character . charCount ( Character . codePointAt ( input , input ) ) ; }
Code	{ input += Character . charCount ( Character . codePointAt ( input , input ) ) ; }
Distance : 2

108
Tree	{ pos += pt . charCount ( pos . codePointAt ( input , pos ) ) ; }
Code	{ pos += pt . charCount ( pos . codePointAt ( input , pos ) ) ; }
Distance : 3

109
Tree	{ throw pos ; } char
Code	{ throw pos ; } char
Distance : 16

110
Tree	{ throw pos ; } abs
Code	{ throw pos ; } abs
Distance : 16

111
Tree	{ throw pos ; } =
Code	{ throw pos ; } =
Distance : 16

112
Tree	{ throw pos ; } externs
Code	{ throw pos ; } externs
Distance : 16

113
Tree	{ throw pos ; } reportMatcher
Code	{ throw pos ; } reportMatcher
Distance : 16

114
Tree	{ throw pos ; } setAcceptedLanguage
Code	{ throw pos ; } setAcceptedLanguage
Distance : 16

115
Tree	{ throw pos ; } JSType
Code	{ throw pos ; } JSType
Distance : 16

116
Tree	{ throw pos ; } ?
Code	{ throw pos ; } ?
Distance : 16

117
Tree	{ throw pos ; } stream
Code	{ throw pos ; } stream
Distance : 16

118
Tree	{ throw pos ; } out
Code	{ throw pos ; } out
Distance : 16

119
Tree	{ throw pos ; } protected
Code	{ throw pos ; } protected
Distance : 16

120
Tree	{ throw pos ; } values
Code	{ throw pos ; } values
Distance : 16

121
Tree	{ throw pos ; } PlotChangeEvent
Code	{ throw pos ; } PlotChangeEvent
Distance : 16

122
Tree	{ throw pos ; } getField
Code	{ throw pos ; } getField
Distance : 16

123
Tree	{ throw pos ; } static
Code	{ throw pos ; } static
Distance : 16

124
Tree	{ throw pos ; } get
Code	{ throw pos ; } get
Distance : 16

125
Tree	{ throw pos ; } }
Code	{ throw pos ; } }
Distance : 16

126
Tree	{ pos += Character . charCount ( input . codePointAt ( input , input ) ) ; }
Code	{ pos += Character . charCount ( input . codePointAt ( input , input ) ) ; }
Distance : 2

127
Tree	{ pos += Character . codePointAt ( input . codePointAt ( input , input ) ) ; }
Code	{ pos += Character . codePointAt ( input . codePointAt ( input , input ) ) ; }
Distance : 3

128
Tree	{ pos += input . codePointAt ( input . codePointAt ( input , pos ) ) ; }
Code	{ pos += input . codePointAt ( input . codePointAt ( input , pos ) ) ; }
Distance : 4

129
Tree	{ pos += Character . codePointAt ( Character . charCount ( pt , pos ) ) ; }
Code	{ pos += Character . codePointAt ( Character . charCount ( pt , pos ) ) ; }
Distance : 4

130
Tree	{ pos += pt . charCount ( input . codePointAt ( Character , pos ) ) ; }
Code	{ pos += pt . charCount ( input . codePointAt ( Character , pos ) ) ; }
Distance : 4

131
Tree	{ pt += pos . charCount ( Character . codePointAt ( Character , pos ) ) ; }
Code	{ pt += pos . charCount ( Character . codePointAt ( Character , pos ) ) ; }
Distance : 4

132
Tree	{ pos += Character . charCount ( pos . codePointAt ( input , input ) ) ; }
Code	{ pos += Character . charCount ( pos . codePointAt ( input , input ) ) ; }
Distance : 2

133
Tree	{ throw pos ; } StrBuilder
Code	{ throw pos ; } StrBuilder
Distance : 16

134
Tree	{ pos += Character . charCount ( input . charCount ( pos , pos ) ) ; }
Code	{ pos += Character . charCount ( input . charCount ( pos , pos ) ) ; }
Distance : 4

135
Tree	{ pos += input . charCount ( pos . codePointAt ( input , pos ) ) ; }
Code	{ pos += input . charCount ( pos . codePointAt ( input , pos ) ) ; }
Distance : 3

136
Tree	{ throw pos ; } toString
Code	{ throw pos ; } toString
Distance : 16

137
Tree	{ throw pos ; } source
Code	{ throw pos ; } source
Distance : 16

138
Tree	{ throw pos ; } options
Code	{ throw pos ; } options
Distance : 16

139
Tree	{ throw pos ; } p
Code	{ throw pos ; } p
Distance : 16

140
Tree	{ throw pos ; } this
Code	{ throw pos ; } this
Distance : 16

141
Tree	{ throw pos ; } final
Code	{ throw pos ; } final
Distance : 16

142
Tree	{ throw new sizeStartText ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new sizeStartText ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

143
Tree	{ throw new NoInteractionsWanted ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new NoInteractionsWanted ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

144
Tree	{ throw new includeInterval ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new includeInterval ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

145
Tree	{ pos += pt . charCount ( Character . codePointAt ( input , pos ) ) ; }
Code	{ pos += pt . charCount ( Character . codePointAt ( input , pos ) ) ; }
Distance : 2

146
Tree	{ throw new MutableShort ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new MutableShort ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

147
Tree	{ throw new -= ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new -= ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

148
Tree	{ throw new mocks.length ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new mocks.length ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

149
Tree	{ throw new Long.MAX_VALUE ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new Long.MAX_VALUE ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

150
Tree	{ throw new countSum1 ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new countSum1 ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

151
Tree	{ throw new MutableLong ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , CHAR_CONS ) ; }
Code	{ throw new MutableLong ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , CHAR_CONS ) ; }
Distance : 10

152
Tree	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , <> ) ; }
Code	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , <> ) ; }
Distance : 9

153
Tree	{ throw new finderStub.actualToReturn ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new finderStub.actualToReturn ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

154
Tree	{ throw new periodStr ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new periodStr ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

155
Tree	{ throw new emptiedClinitMethods ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new emptiedClinitMethods ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

156
Tree	{ throw new bi ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new bi ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

157
Tree	{ throw new i ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new i ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

158
Tree	{ throw new MathArithmeticException ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Code	{ throw new MathArithmeticException ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Distance : 10

159
Tree	{ throw new values.length ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new values.length ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

160
Tree	{ throw new panel ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new panel ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

161
Tree	{ throw new compilationLevelParsed ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new compilationLevelParsed ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

162
Tree	{ pos += Character . charCount ( Character . codePointAt ( input , Character ) ) ; }
Code	{ pos += Character . charCount ( Character . codePointAt ( input , Character ) ) ; }
Distance : 1

163
Tree	{ throw new rows ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new rows ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

164
Tree	{ throw new options.removeUnusedLocalVars ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new options.removeUnusedLocalVars ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

165
Tree	{ throw new aux ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new aux ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

166
Tree	{ throw new TestObject ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Code	{ throw new TestObject ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Distance : 10

167
Tree	{ throw new DialPlot ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new DialPlot ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

168
Tree	{ throw new pop ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new pop ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

169
Tree	{ throw new TestPeriodType ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new TestPeriodType ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

170
Tree	{ throw new doubleToRawLongBits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new doubleToRawLongBits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

171
Tree	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , extends ) ; }
Code	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , extends ) ; }
Distance : 9

172
Tree	{ throw new createThrowingAnswer ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new createThrowingAnswer ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

173
Tree	{ throw new assertUnused ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new assertUnused ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

174
Tree	{ throw new pos ( Character . charCount ( input . codePointAt ( input , pos ) ) , CHAR_CONS ) ; }
Code	{ throw new pos ( Character . charCount ( input . codePointAt ( input , pos ) ) , CHAR_CONS ) ; }
Distance : 8

175
Tree	{ throw new testNoGlobalScopeChanges ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new testNoGlobalScopeChanges ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

176
Tree	{ throw new LocalizedFormats.NO_DEGREES_OF_FREEDOM ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new LocalizedFormats.NO_DEGREES_OF_FREEDOM ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

177
Tree	{ throw new CheckProvidesCallback ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new CheckProvidesCallback ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

178
Tree	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , [ ) ; }
Code	{ throw new pos ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , [ ) ; }
Distance : 9

179
Tree	{ throw new assertNotSame ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new assertNotSame ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

180
Tree	{ throw new tooltips ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new tooltips ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

181
Tree	{ throw new ISAACRandom ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new ISAACRandom ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

182
Tree	{ throw new StatisticalBarRenderer ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new StatisticalBarRenderer ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

183
Tree	{ throw new ExceptionWithCause ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new ExceptionWithCause ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

184
Tree	{ throw new resultComputed ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new resultComputed ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

185
Tree	{ throw new izV ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new izV ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

186
Tree	{ throw new in ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new in ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

187
Tree	{ throw new trace ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new trace ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

188
Tree	{ throw new doubleToLongBits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new doubleToLongBits ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

189
Tree	{ throw new BigInteger.ZERO ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new BigInteger.ZERO ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

190
Tree	{ throw new isPointInRect ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new isPointInRect ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

191
Tree	{ throw new pt ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new pt ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

192
Tree	{ throw new lu ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new lu ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

193
Tree	{ throw new RectangularCholeskyDecomposition ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new RectangularCholeskyDecomposition ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

194
Tree	{ throw new BackgroundInitializerTestImpl ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Code	{ throw new BackgroundInitializerTestImpl ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , super ) ; }
Distance : 10

195
Tree	{ throw new hasData ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new hasData ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

196
Tree	{ throw new at ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new at ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

197
Tree	{ throw new ExperimentalMockitoJUnitRunner ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new ExperimentalMockitoJUnitRunner ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

198
Tree	{ throw new distribution ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new distribution ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

199
Tree	{ throw new testResult ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Code	{ throw new testResult ( Character . codePointAt ( input . codePointAt ( input , pos ) ) , false ) ; }
Distance : 10

========================================================================


========================================================================
Example Number: 50
Parent Code is: 
final CharSequence result = lookupMap . get ( subSeq ) ;
-------------------------------------------------------------------------------
Child code is: 
final CharSequence result = lookupMap . get ( subSeq . toString () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CharSequence})) (59 (800{val=result}) (204{val==}) (32 (800{val=lookupMap}) (235{val=.}) (802{val=get}) (214{val=(}) (800{val=subSeq}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (43 (801{val=CharSequence})) (59 (800{val=result}) (204{val==}) (32 (800{val=lookupMap}) (235{val=.}) (802{val=get}) (214{val=(}) (32 (800{val=subSeq}) (235{val=.}) (802{val=toString}) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Lang/4/parent/src_main_java_org_apache_commons_lang3_text_translate_LookupTranslator.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	final CharSequence result = result . get ( toString ( subSeq ) ) ;
Code	final CharSequence result = result . get ( toString ( subSeq ) ) ;
Distance : 5

1
Tree	final CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Code	final CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Distance : 4

2
Tree	abstract CharSequence result = lookupMap . toString ( subSeq . get ( result ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq . get ( result ) ) ;
Distance : 6

3
Tree	static CharSequence result = result . get ( result . toString ( result ) ) ;
Code	static CharSequence result = result . get ( result . toString ( result ) ) ;
Distance : 6

4
Tree	protected CharSequence result = result . toString ( result . toString () ) ;
Code	protected CharSequence result = result . toString ( result . toString () ) ;
Distance : 4

5
Tree	protected CharSequence result = lookupMap . get ( subSeq . toString ( result ) ) ;
Code	protected CharSequence result = lookupMap . get ( subSeq . toString ( result ) ) ;
Distance : 4

6
Tree	static CharSequence result = result . toString ( get ( result ) ) ;
Code	static CharSequence result = result . toString ( get ( result ) ) ;
Distance : 7

7
Tree	protected CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Code	protected CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Distance : 6

8
Tree	protected CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Code	protected CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Distance : 5

9
Tree	abstract CharSequence result = result . toString ( null ) ;
Code	abstract CharSequence result = result . toString ( null ) ;
Distance : 7

10
Tree	public CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Code	public CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Distance : 8

11
Tree	private CharSequence result = lookupMap . get ( result . toString ( result ) ) ;
Code	private CharSequence result = lookupMap . get ( result . toString ( result ) ) ;
Distance : 5

12
Tree	private CharSequence result = lookupMap . toString ( get ( result ) ) ;
Code	private CharSequence result = lookupMap . toString ( get ( result ) ) ;
Distance : 6

13
Tree	protected CharSequence result = lookupMap . get ( result , result . toString () ) ;
Code	protected CharSequence result = lookupMap . get ( result , result . toString () ) ;
Distance : 4

14
Tree	synchronized CharSequence result = result . get ( subSeq ) ;
Code	synchronized CharSequence result = result . get ( subSeq ) ;
Distance : 5

15
Tree	final CharSequence result = lookupMap . get ( result . get ( result ) ) ;
Code	final CharSequence result = lookupMap . get ( result . get ( result ) ) ;
Distance : 5

16
Tree	static CharSequence result = result . get ( ( subSeq < result > ) lookupMap ) ;
Code	static CharSequence result = result . get ( ( subSeq < result > ) lookupMap ) ;
Distance : 8

17
Tree	final CharSequence result = lookupMap . toString ( result . toString () ) ;
Code	final CharSequence result = lookupMap . toString ( result . toString () ) ;
Distance : 2

18
Tree	final CharSequence result = lookupMap . get ( subSeq , result . toString () ) ;
Code	final CharSequence result = lookupMap . get ( subSeq , result . toString () ) ;
Distance : 2

19
Tree	public CharSequence result = result . get ( result , result . toString () ) ;
Code	public CharSequence result = result . get ( result , result . toString () ) ;
Distance : 5

20
Tree	final CharSequence result = lookupMap . toString ( return; ) ;
Code	final CharSequence result = lookupMap . toString ( return; ) ;
Distance : 5

21
Tree	public CharSequence result = result . get ( subSeq . get () ) ;
Code	public CharSequence result = result . get ( subSeq . get () ) ;
Distance : 3

22
Tree	private CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Distance : 5

23
Tree	synchronized CharSequence result = lookupMap . get ( result , result . toString () ) ;
Code	synchronized CharSequence result = lookupMap . get ( result , result . toString () ) ;
Distance : 4

24
Tree	synchronized CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Code	synchronized CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Distance : 8

25
Tree	public CharSequence result = result . toString ( get ( subSeq ) ) ;
Code	public CharSequence result = result . toString ( get ( subSeq ) ) ;
Distance : 7

26
Tree	public CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Distance : 5

27
Tree	synchronized CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Code	synchronized CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Distance : 5

28
Tree	synchronized CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Code	synchronized CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Distance : 6

29
Tree	protected CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Code	protected CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Distance : 7

30
Tree	private CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Code	private CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Distance : 8

31
Tree	synchronized CharSequence result = lookupMap . get ( subSeq . get () ) ;
Code	synchronized CharSequence result = lookupMap . get ( subSeq . get () ) ;
Distance : 2

32
Tree	static CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Code	static CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Distance : 9

33
Tree	synchronized CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Code	synchronized CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Distance : 7

34
Tree	protected CharSequence result = result . get ( subSeq , lookupMap . toString () ) ;
Code	protected CharSequence result = result . get ( subSeq , lookupMap . toString () ) ;
Distance : 4

35
Tree	static CharSequence result = result . toString ( subSeq , lookupMap . get () ) ;
Code	static CharSequence result = result . toString ( subSeq , lookupMap . get () ) ;
Distance : 6

36
Tree	private CharSequence result = lookupMap . get ( ( result < result > ) lookupMap ) ;
Code	private CharSequence result = lookupMap . get ( ( result < result > ) lookupMap ) ;
Distance : 8

37
Tree	public CharSequence result = lookupMap . get ( subSeq . toString () ) ;
Code	public CharSequence result = lookupMap . get ( subSeq . toString () ) ;
Distance : 1

38
Tree	protected CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Code	protected CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Distance : 8

39
Tree	public CharSequence result = result . get ( result . get () ) ;
Code	public CharSequence result = result . get ( result . get () ) ;
Distance : 4

40
Tree	private CharSequence result = lookupMap . toString ( result , result . get () ) ;
Code	private CharSequence result = lookupMap . toString ( result , result . get () ) ;
Distance : 6

41
Tree	synchronized CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Code	synchronized CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Distance : 7

42
Tree	final CharSequence result = lookupMap . get ( result , result . toString () ) ;
Code	final CharSequence result = lookupMap . get ( result , result . toString () ) ;
Distance : 3

43
Tree	private CharSequence result = result . get ( result . get () ) ;
Code	private CharSequence result = result . get ( result . get () ) ;
Distance : 4

44
Tree	final CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Code	final CharSequence result = lookupMap . toString ( get ( subSeq ) ) ;
Distance : 5

45
Tree	final CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Code	final CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Distance : 6

46
Tree	abstract CharSequence result = result . toString ( subSeq , lookupMap . get () ) ;
Code	abstract CharSequence result = result . toString ( subSeq , lookupMap . get () ) ;
Distance : 6

47
Tree	public CharSequence result = result . get ( ( subSeq < result > ) = ) ;
Code	public CharSequence result = result . get ( ( subSeq < result > ) = ) ;
Distance : 8

48
Tree	static CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Code	static CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Distance : 8

49
Tree	protected CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Code	protected CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Distance : 6

50
Tree	abstract CharSequence result = lookupMap . toString ( toString ( subSeq ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( toString ( subSeq ) ) ;
Distance : 6

51
Tree	final CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Code	final CharSequence result = result . get ( subSeq . toString ( subSeq ) ) ;
Distance : 4

52
Tree	synchronized CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Code	synchronized CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Distance : 8

53
Tree	private CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Code	private CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Distance : 7

54
Tree	abstract CharSequence result = result . toString ( subSeq , result . get () ) ;
Code	abstract CharSequence result = result . toString ( subSeq , result . get () ) ;
Distance : 6

55
Tree	abstract CharSequence result = lookupMap . toString ( result , lookupMap . get () ) ;
Code	abstract CharSequence result = lookupMap . toString ( result , lookupMap . get () ) ;
Distance : 6

56
Tree	public CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Code	public CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Distance : 7

57
Tree	protected CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Code	protected CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Distance : 8

58
Tree	final CharSequence result = lookupMap . get ( toString ( result ) ) ;
Code	final CharSequence result = lookupMap . get ( toString ( result ) ) ;
Distance : 4

59
Tree	static CharSequence result = lookupMap . toString ( toString ( subSeq ) ) ;
Code	static CharSequence result = lookupMap . toString ( toString ( subSeq ) ) ;
Distance : 6

60
Tree	private CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Code	private CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Distance : 9

61
Tree	static CharSequence result = result . get ( ( result < lookupMap > ) lookupMap ) ;
Code	static CharSequence result = result . get ( ( result < lookupMap > ) lookupMap ) ;
Distance : 9

62
Tree	synchronized CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Code	synchronized CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Distance : 6

63
Tree	abstract CharSequence result = result . toString ( get ( result ) ) ;
Code	abstract CharSequence result = result . toString ( get ( result ) ) ;
Distance : 7

64
Tree	abstract CharSequence result = result . get ( result . toString ( result ) ) ;
Code	abstract CharSequence result = result . get ( result . toString ( result ) ) ;
Distance : 6

65
Tree	private CharSequence result = result . get ( ( subSeq < result > ) subSeq ) ;
Code	private CharSequence result = result . get ( ( subSeq < result > ) subSeq ) ;
Distance : 8

66
Tree	public CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Code	public CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Distance : 9

67
Tree	abstract CharSequence result = result . get ( ( result < result > ) result ) ;
Code	abstract CharSequence result = result . get ( ( result < result > ) result ) ;
Distance : 9

68
Tree	synchronized CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Code	synchronized CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Distance : 6

69
Tree	protected CharSequence result = lookupMap . get ( result ) ;
Code	protected CharSequence result = lookupMap . get ( result ) ;
Distance : 5

70
Tree	abstract CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Distance : 7

71
Tree	final CharSequence result = result . get ( result . get ( subSeq ) ) ;
Code	final CharSequence result = result . get ( result . get ( subSeq ) ) ;
Distance : 6

72
Tree	synchronized CharSequence result = result . get ( toString ( subSeq ) ) ;
Code	synchronized CharSequence result = result . get ( toString ( subSeq ) ) ;
Distance : 6

73
Tree	protected CharSequence result = lookupMap . toString ( break; ) ;
Code	protected CharSequence result = lookupMap . toString ( break; ) ;
Distance : 6

74
Tree	protected CharSequence result = toString ( subSeq ) ;
Code	protected CharSequence result = toString ( subSeq ) ;
Distance : 7

75
Tree	private CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Code	private CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Distance : 7

76
Tree	static CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Code	static CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Distance : 5

77
Tree	protected CharSequence result = result . toString ( subSeq . toString () ) ;
Code	protected CharSequence result = result . toString ( subSeq . toString () ) ;
Distance : 3

78
Tree	abstract CharSequence result = lookupMap . get ( result . toString ( result ) ) ;
Code	abstract CharSequence result = lookupMap . get ( result . toString ( result ) ) ;
Distance : 5

79
Tree	abstract CharSequence result = lookupMap . toString ( get ( result ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( get ( result ) ) ;
Distance : 6

80
Tree	public CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Code	public CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Distance : 8

81
Tree	static CharSequence result = lookupMap . get ( ( result < lookupMap > ) lookupMap ) ;
Code	static CharSequence result = lookupMap . get ( ( result < lookupMap > ) lookupMap ) ;
Distance : 8

82
Tree	final CharSequence result = result . toString ( ( result < result > ) result ) ;
Code	final CharSequence result = result . toString ( ( result < result > ) result ) ;
Distance : 9

83
Tree	abstract CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Code	abstract CharSequence result = lookupMap . get ( ( result < result > ) result ) ;
Distance : 8

84
Tree	protected CharSequence result = result . get ( result , lookupMap . get () ) ;
Code	protected CharSequence result = result . get ( result , lookupMap . get () ) ;
Distance : 6

85
Tree	private CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Code	private CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Distance : 8

86
Tree	synchronized CharSequence result = toString ( subSeq ) ;
Code	synchronized CharSequence result = toString ( subSeq ) ;
Distance : 7

87
Tree	synchronized CharSequence result = lookupMap . toString ( break; ) ;
Code	synchronized CharSequence result = lookupMap . toString ( break; ) ;
Distance : 6

88
Tree	public CharSequence result = lookupMap . toString ( null ) ;
Code	public CharSequence result = lookupMap . toString ( null ) ;
Distance : 6

89
Tree	CharSequence result = result . toString ( subSeq ) ;
Code	CharSequence result = result . toString ( subSeq ) ;
Distance : 6

90
Tree	static CharSequence result = result . toString ( default: ) ;
Code	static CharSequence result = result . toString ( default: ) ;
Distance : 7

91
Tree	private CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Distance : 6

92
Tree	static CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Code	static CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Distance : 5

93
Tree	public CharSequence result = result . toString ( break; ) ;
Code	public CharSequence result = result . toString ( break; ) ;
Distance : 7

94
Tree	final CharSequence result = lookupMap . get ( subSeq . toString ( subSeq ) ) ;
Code	final CharSequence result = lookupMap . get ( subSeq . toString ( subSeq ) ) ;
Distance : 3

95
Tree	abstract CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Distance : 5

96
Tree	final CharSequence result = result . toString ( result . toString ( result ) ) ;
Code	final CharSequence result = result . toString ( result . toString ( result ) ) ;
Distance : 6

97
Tree	public CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Distance : 6

98
Tree	protected CharSequence result = lookupMap . get ( ( subSeq < lookupMap > ) result ) ;
Code	protected CharSequence result = lookupMap . get ( ( subSeq < lookupMap > ) result ) ;
Distance : 7

99
Tree	synchronized CharSequence result = result . toString ( subSeq . toString () ) ;
Code	synchronized CharSequence result = result . toString ( subSeq . toString () ) ;
Distance : 3

100
Tree	static CharSequence result = result . toString () ;
Code	static CharSequence result = result . toString () ;
Distance : 7

101
Tree	protected CharSequence result = result . toString ( continue; ) ;
Code	protected CharSequence result = result . toString ( continue; ) ;
Distance : 7

102
Tree	protected CharSequence result = result . get ( subSeq . get ( result ) ) ;
Code	protected CharSequence result = result . get ( subSeq . get ( result ) ) ;
Distance : 6

103
Tree	private CharSequence result = result . get ( subSeq . get () ) ;
Code	private CharSequence result = result . get ( subSeq . get () ) ;
Distance : 3

104
Tree	abstract CharSequence result = result . get ( ( subSeq < lookupMap > ) subSeq ) ;
Code	abstract CharSequence result = result . get ( ( subSeq < lookupMap > ) subSeq ) ;
Distance : 8

105
Tree	private CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Code	private CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Distance : 6

106
Tree	private CharSequence result = result . toString ( get ( subSeq ) ) ;
Code	private CharSequence result = result . toString ( get ( subSeq ) ) ;
Distance : 7

107
Tree	static CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Code	static CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Distance : 7

108
Tree	protected CharSequence result = lookupMap . get ( toString ( result ) ) ;
Code	protected CharSequence result = lookupMap . get ( toString ( result ) ) ;
Distance : 5

109
Tree	public CharSequence result = result . get ( ( subSeq < result > ) result ) ;
Code	public CharSequence result = result . get ( ( subSeq < result > ) result ) ;
Distance : 8

110
Tree	private CharSequence result = result . get ( result , result . toString () ) ;
Code	private CharSequence result = result . get ( result , result . toString () ) ;
Distance : 5

111
Tree	static CharSequence result = result . toString ( null ) ;
Code	static CharSequence result = result . toString ( null ) ;
Distance : 7

112
Tree	protected CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Code	protected CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Distance : 5

113
Tree	abstract CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Code	abstract CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Distance : 5

114
Tree	synchronized CharSequence result = lookupMap . get ( result ) ;
Code	synchronized CharSequence result = lookupMap . get ( result ) ;
Distance : 5

115
Tree	private CharSequence result = result . get ( ( subSeq < result > ) result ) ;
Code	private CharSequence result = result . get ( ( subSeq < result > ) result ) ;
Distance : 8

116
Tree	abstract CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Code	abstract CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Distance : 8

117
Tree	synchronized CharSequence result = lookupMap . get ( toString ( result ) ) ;
Code	synchronized CharSequence result = lookupMap . get ( toString ( result ) ) ;
Distance : 5

118
Tree	synchronized CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Code	synchronized CharSequence result = lookupMap . get ( result . toString ( subSeq ) ) ;
Distance : 5

119
Tree	public CharSequence result = result . get ( result ) ;
Code	public CharSequence result = result . get ( result ) ;
Distance : 6

120
Tree	public CharSequence result = result . get ( toString ( result ) ) ;
Code	public CharSequence result = result . get ( toString ( result ) ) ;
Distance : 6

121
Tree	abstract CharSequence result = result . toString () ;
Code	abstract CharSequence result = result . toString () ;
Distance : 7

122
Tree	protected CharSequence result = result . get ( toString ( subSeq ) ) ;
Code	protected CharSequence result = result . get ( toString ( subSeq ) ) ;
Distance : 6

123
Tree	abstract CharSequence result = result . get ( result , lookupMap . toString () ) ;
Code	abstract CharSequence result = result . get ( result , lookupMap . toString () ) ;
Distance : 5

124
Tree	private CharSequence result = toString ( result ) ;
Code	private CharSequence result = toString ( result ) ;
Distance : 8

125
Tree	private CharSequence result = lookupMap . get ( super(); ) ;
Code	private CharSequence result = lookupMap . get ( super(); ) ;
Distance : 5

126
Tree	public CharSequence result = lookupMap . get ( super(); ) ;
Code	public CharSequence result = lookupMap . get ( super(); ) ;
Distance : 5

127
Tree	static CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Code	static CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Distance : 7

128
Tree	private CharSequence result = result . get ( toString ( result ) ) ;
Code	private CharSequence result = result . get ( toString ( result ) ) ;
Distance : 6

129
Tree	public CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Code	public CharSequence result = lookupMap . get ( ( subSeq < result > ) lookupMap ) ;
Distance : 7

130
Tree	abstract CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Distance : 5

131
Tree	public CharSequence result = toString ( result ) ;
Code	public CharSequence result = toString ( result ) ;
Distance : 8

132
Tree	private CharSequence result = lookupMap . get ( result . get () ) ;
Code	private CharSequence result = lookupMap . get ( result . get () ) ;
Distance : 3

133
Tree	public CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Code	public CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Distance : 6

134
Tree	private CharSequence result = result . get ( result ) ;
Code	private CharSequence result = result . get ( result ) ;
Distance : 6

135
Tree	public CharSequence result = lookupMap . get ( result . get () ) ;
Code	public CharSequence result = lookupMap . get ( result . get () ) ;
Distance : 3

136
Tree	final CharSequence result = result . toString ( ( result < lookupMap > ) = ) ;
Code	final CharSequence result = result . toString ( ( result < lookupMap > ) = ) ;
Distance : 9

137
Tree	abstract CharSequence result = result . toString ( default: ) ;
Code	abstract CharSequence result = result . toString ( default: ) ;
Distance : 7

138
Tree	abstract CharSequence result = result . get ( subSeq . get () ) ;
Code	abstract CharSequence result = result . get ( subSeq . get () ) ;
Distance : 3

139
Tree	synchronized CharSequence result = toString ( result ) ;
Code	synchronized CharSequence result = toString ( result ) ;
Distance : 8

140
Tree	private CharSequence result = lookupMap . get ( subSeq . toString () ) ;
Code	private CharSequence result = lookupMap . get ( subSeq . toString () ) ;
Distance : 1

141
Tree	protected CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Code	protected CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Distance : 7

142
Tree	final CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Code	final CharSequence result = lookupMap . get ( ( subSeq < result > ) result ) ;
Distance : 6

143
Tree	final CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Code	final CharSequence result = result . get ( result . toString ( subSeq ) ) ;
Distance : 5

144
Tree	static CharSequence result = result . toString ( toString ( subSeq ) ) ;
Code	static CharSequence result = result . toString ( toString ( subSeq ) ) ;
Distance : 7

145
Tree	final CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Code	final CharSequence result = lookupMap . get ( ( result < lookupMap > ) result ) ;
Distance : 7

146
Tree	public CharSequence result = lookupMap . toString ( subSeq ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

147
Tree	private CharSequence result = lookupMap . toString ( subSeq ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq ) ;
Distance : 5

148
Tree	abstract CharSequence result = result . toString ( subSeq . get ( result ) ) ;
Code	abstract CharSequence result = result . toString ( subSeq . get ( result ) ) ;
Distance : 7

149
Tree	protected CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Code	protected CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Distance : 5

150
Tree	abstract CharSequence result = lookupMap . toString ( subSeq , lookupMap . toString () ) ;
Code	abstract CharSequence result = lookupMap . toString ( subSeq , lookupMap . toString () ) ;
Distance : 4

151
Tree	public CharSequence result = lookupMap . toString ( subSeq . toString ( subSeq ) ) ;
Code	public CharSequence result = lookupMap . toString ( subSeq . toString ( subSeq ) ) ;
Distance : 5

152
Tree	synchronized CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Code	synchronized CharSequence result = lookupMap . toString ( result . get ( subSeq ) ) ;
Distance : 7

153
Tree	private CharSequence result = lookupMap . toString ( subSeq . toString ( subSeq ) ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq . toString ( subSeq ) ) ;
Distance : 5

154
Tree	protected CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Code	protected CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Distance : 8

155
Tree	public CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Code	public CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Distance : 8

156
Tree	abstract CharSequence result = result . get ( subSeq . toString () ) ;
Code	abstract CharSequence result = result . get ( subSeq . toString () ) ;
Distance : 2

157
Tree	abstract CharSequence result = result . get ( ( result < result > ) subSeq ) ;
Code	abstract CharSequence result = result . get ( ( result < result > ) subSeq ) ;
Distance : 9

158
Tree	abstract CharSequence result = lookupMap . toString ( result . get ( result ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( result . get ( result ) ) ;
Distance : 7

159
Tree	final CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Code	final CharSequence result = result . get ( ( subSeq < lookupMap > ) result ) ;
Distance : 7

160
Tree	synchronized CharSequence result = result . toString () ;
Code	synchronized CharSequence result = result . toString () ;
Distance : 7

161
Tree	public CharSequence result = result . get ( ( result < lookupMap > ) = ) ;
Code	public CharSequence result = result . get ( ( result < lookupMap > ) = ) ;
Distance : 9

162
Tree	protected CharSequence result = result . get ( result , lookupMap . toString () ) ;
Code	protected CharSequence result = result . get ( result , lookupMap . toString () ) ;
Distance : 5

163
Tree	static CharSequence result = lookupMap . toString ( ( subSeq < lookupMap > ) result ) ;
Code	static CharSequence result = lookupMap . toString ( ( subSeq < lookupMap > ) result ) ;
Distance : 8

164
Tree	abstract CharSequence result = lookupMap . toString ( ( subSeq < lookupMap > ) result ) ;
Code	abstract CharSequence result = lookupMap . toString ( ( subSeq < lookupMap > ) result ) ;
Distance : 8

165
Tree	protected CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Code	protected CharSequence result = lookupMap . toString ( subSeq , lookupMap . get () ) ;
Distance : 5

166
Tree	private CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Code	private CharSequence result = result . toString ( result . get ( subSeq ) ) ;
Distance : 8

167
Tree	abstract CharSequence result = result . toString ( result , result . get () ) ;
Code	abstract CharSequence result = result . toString ( result , result . get () ) ;
Distance : 7

168
Tree	static CharSequence result = result . toString ( result , lookupMap . get () ) ;
Code	static CharSequence result = result . toString ( result , lookupMap . get () ) ;
Distance : 7

169
Tree	final CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Code	final CharSequence result = lookupMap . toString ( subSeq . get ( subSeq ) ) ;
Distance : 5

170
Tree	protected CharSequence result = result . toString () ;
Code	protected CharSequence result = result . toString () ;
Distance : 7

171
Tree	synchronized CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Code	synchronized CharSequence result = result . get ( subSeq . toString ( result ) ) ;
Distance : 5

172
Tree	synchronized CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Code	synchronized CharSequence result = lookupMap . get ( ( result < lookupMap > ) subSeq ) ;
Distance : 8

173
Tree	protected CharSequence result = result . get ( ( subSeq < lookupMap > ) subSeq ) ;
Code	protected CharSequence result = result . get ( ( subSeq < lookupMap > ) subSeq ) ;
Distance : 8

174
Tree	abstract CharSequence result = result . toString ( result , lookupMap . get () ) ;
Code	abstract CharSequence result = result . toString ( result , lookupMap . get () ) ;
Distance : 7

175
Tree	public CharSequence result = lookupMap . get ( result . toString () ) ;
Code	public CharSequence result = lookupMap . get ( result . toString () ) ;
Distance : 2

176
Tree	protected CharSequence result = result . get ( ( subSeq < result > ) lookupMap ) ;
Code	protected CharSequence result = result . get ( ( subSeq < result > ) lookupMap ) ;
Distance : 8

177
Tree	static CharSequence result = lookupMap . toString ( subSeq . get () ) ;
Code	static CharSequence result = lookupMap . toString ( subSeq . get () ) ;
Distance : 3

178
Tree	synchronized CharSequence result = result . get ( result . get () ) ;
Code	synchronized CharSequence result = result . get ( result . get () ) ;
Distance : 4

179
Tree	public CharSequence result = result . toString ( result , result . get () ) ;
Code	public CharSequence result = result . toString ( result , result . get () ) ;
Distance : 7

180
Tree	static CharSequence result = lookupMap . toString ( result , result . toString () ) ;
Code	static CharSequence result = lookupMap . toString ( result , result . toString () ) ;
Distance : 5

181
Tree	public CharSequence result = result . get ( subSeq . toString () ) ;
Code	public CharSequence result = result . get ( subSeq . toString () ) ;
Distance : 2

182
Tree	private CharSequence result = result . get ( subSeq . toString () ) ;
Code	private CharSequence result = result . get ( subSeq . toString () ) ;
Distance : 2

183
Tree	private CharSequence result = result . get ( ( result < result > ) lookupMap ) ;
Code	private CharSequence result = result . get ( ( result < result > ) lookupMap ) ;
Distance : 9

184
Tree	abstract CharSequence result = lookupMap . toString ( result . toString ( subSeq ) ) ;
Code	abstract CharSequence result = lookupMap . toString ( result . toString ( subSeq ) ) ;
Distance : 6

185
Tree	static CharSequence result = result . toString ( subSeq . toString ( subSeq ) ) ;
Code	static CharSequence result = result . toString ( subSeq . toString ( subSeq ) ) ;
Distance : 6

186
Tree	final CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Code	final CharSequence result = lookupMap . toString ( subSeq , result . get () ) ;
Distance : 4

187
Tree	protected CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Code	protected CharSequence result = result . get ( ( result < lookupMap > ) result ) ;
Distance : 9

188
Tree	public CharSequence result = lookupMap . toString ( result . get ( result ) ) ;
Code	public CharSequence result = lookupMap . toString ( result . get ( result ) ) ;
Distance : 7

189
Tree	final CharSequence result = result . get ( result , result . toString () ) ;
Code	final CharSequence result = result . get ( result , result . toString () ) ;
Distance : 4

190
Tree	synchronized CharSequence result = result . get ( ( subSeq < result > ) subSeq ) ;
Code	synchronized CharSequence result = result . get ( ( subSeq < result > ) subSeq ) ;
Distance : 8

191
Tree	private CharSequence result = result . toString ( result , result . get () ) ;
Code	private CharSequence result = result . toString ( result , result . get () ) ;
Distance : 7

192
Tree	static CharSequence result = lookupMap . toString ( ( subSeq < result > ) result ) ;
Code	static CharSequence result = lookupMap . toString ( ( subSeq < result > ) result ) ;
Distance : 8

193
Tree	private CharSequence result = lookupMap . get ( result . toString () ) ;
Code	private CharSequence result = lookupMap . get ( result . toString () ) ;
Distance : 2

194
Tree	static CharSequence result = lookupMap . toString ( result . toString ( subSeq ) ) ;
Code	static CharSequence result = lookupMap . toString ( result . toString ( subSeq ) ) ;
Distance : 6

195
Tree	synchronized CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Code	synchronized CharSequence result = result . toString ( subSeq . get ( subSeq ) ) ;
Distance : 7

196
Tree	private CharSequence result = lookupMap . toString ( subSeq , result . toString () ) ;
Code	private CharSequence result = lookupMap . toString ( subSeq , result . toString () ) ;
Distance : 4

197
Tree	static CharSequence result = lookupMap . get ( get ( subSeq ) ) ;
Code	static CharSequence result = lookupMap . get ( get ( subSeq ) ) ;
Distance : 5

198
Tree	static CharSequence result = lookupMap . toString ( toString ( result ) ) ;
Code	static CharSequence result = lookupMap . toString ( toString ( result ) ) ;
Distance : 6

199
Tree	final CharSequence result = result . get ( toString ( result ) ) ;
Code	final CharSequence result = result . get ( toString ( result ) ) ;
Distance : 5

========================================================================


========================================================================
Example Number: 51
Parent Code is: 
final int cols = problem . getAllParameters () . length ;
-------------------------------------------------------------------------------
Child code is: 
final int cols = problem . getUnboundParameters () . length ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=cols}) (204{val==}) (22 (32 (800{val=problem}) (235{val=.}) (802{val=getAllParameters}) (216{val=()})) (235{val=.}) (800{val=length}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=cols}) (204{val==}) (22 (32 (800{val=problem}) (235{val=.}) (802{val=getUnboundParameters}) (216{val=()})) (235{val=.}) (800{val=length}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/100/parent/src_java_org_apache_commons_math_estimation_AbstractEstimator.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	final int cols = ( problem ) length ;
Code	final int cols = ( problem ) length ;
Distance : 5

1
Tree	private double [] problem = cols . getAllParameters () ;
Code	private double [] problem = cols . getAllParameters () ;
Distance : 8

2
Tree	private byte [] [] problem = cols . getAllParameters () ;
Code	private byte [] [] problem = cols . getAllParameters () ;
Distance : 9

3
Tree	abstract double [] cols = cols . getAllParameters () ;
Code	abstract double [] cols = cols . getAllParameters () ;
Distance : 7

4
Tree	private int [] [] length = problem . getAllParameters () ;
Code	private int [] [] length = problem . getAllParameters () ;
Distance : 7

5
Tree	abstract char [] problem = cols . getAllParameters () ;
Code	abstract char [] problem = cols . getAllParameters () ;
Distance : 8

6
Tree	protected short [] cols = problem . getAllParameters () ;
Code	protected short [] cols = problem . getAllParameters () ;
Distance : 6

7
Tree	protected double [] [] cols = problem . getAllParameters () ;
Code	protected double [] [] cols = problem . getAllParameters () ;
Distance : 7

8
Tree	static double [] [] problem = length . getAllParameters () ;
Code	static double [] [] problem = length . getAllParameters () ;
Distance : 9

9
Tree	float problem = length . getAllParameters () ;
Code	float problem = length . getAllParameters () ;
Distance : 7

10
Tree	static void [] cols = problem . getAllParameters () ;
Code	static void [] cols = problem . getAllParameters () ;
Distance : 6

11
Tree	static char [] problem = cols . getAllParameters () ;
Code	static char [] problem = cols . getAllParameters () ;
Distance : 8

12
Tree	final float [] problem = cols . getAllParameters () ;
Code	final float [] problem = cols . getAllParameters () ;
Distance : 7

13
Tree	synchronized double [] cols = problem . getAllParameters () ;
Code	synchronized double [] cols = problem . getAllParameters () ;
Distance : 6

14
Tree	public boolean [] [] problem = problem . getAllParameters () ;
Code	public boolean [] [] problem = problem . getAllParameters () ;
Distance : 8

15
Tree	final short [] [] cols = length . getAllParameters () ;
Code	final short [] [] cols = length . getAllParameters () ;
Distance : 7

16
Tree	double length = length . getAllParameters () ;
Code	double length = length . getAllParameters () ;
Distance : 7

17
Tree	final short [] [] problem = cols . getAllParameters () ;
Code	final short [] [] problem = cols . getAllParameters () ;
Distance : 8

18
Tree	synchronized void [] problem = problem . getAllParameters () ;
Code	synchronized void [] problem = problem . getAllParameters () ;
Distance : 7

19
Tree	public char [] problem = problem . getAllParameters () ;
Code	public char [] problem = problem . getAllParameters () ;
Distance : 7

20
Tree	synchronized byte [] cols = problem . getAllParameters () ;
Code	synchronized byte [] cols = problem . getAllParameters () ;
Distance : 6

21
Tree	abstract double [] length = problem . getAllParameters () ;
Code	abstract double [] length = problem . getAllParameters () ;
Distance : 7

22
Tree	long length = length . getAllParameters () ;
Code	long length = length . getAllParameters () ;
Distance : 7

23
Tree	static float [] [] cols = problem . getAllParameters () ;
Code	static float [] [] cols = problem . getAllParameters () ;
Distance : 7

24
Tree	static short [] [] cols = problem . getAllParameters () ;
Code	static short [] [] cols = problem . getAllParameters () ;
Distance : 7

25
Tree	private short [] cols = problem . getAllParameters () ;
Code	private short [] cols = problem . getAllParameters () ;
Distance : 6

26
Tree	static double [] length = problem . getAllParameters () ;
Code	static double [] length = problem . getAllParameters () ;
Distance : 7

27
Tree	final void [] [] problem = cols . getAllParameters () ;
Code	final void [] [] problem = cols . getAllParameters () ;
Distance : 8

28
Tree	final short [] cols = length . getAllParameters () ;
Code	final short [] cols = length . getAllParameters () ;
Distance : 6

29
Tree	final short [] problem = cols . getAllParameters () ;
Code	final short [] problem = cols . getAllParameters () ;
Distance : 7

30
Tree	static float [] [] problem = cols . getAllParameters () ;
Code	static float [] [] problem = cols . getAllParameters () ;
Distance : 9

31
Tree	static short [] [] problem = cols . getAllParameters () ;
Code	static short [] [] problem = cols . getAllParameters () ;
Distance : 9

32
Tree	private byte [] [] cols = problem . getAllParameters () ;
Code	private byte [] [] cols = problem . getAllParameters () ;
Distance : 7

33
Tree	abstract int [] cols = length . getAllParameters () ;
Code	abstract int [] cols = length . getAllParameters () ;
Distance : 6

34
Tree	abstract void [] cols = problem . getAllParameters () ;
Code	abstract void [] cols = problem . getAllParameters () ;
Distance : 6

35
Tree	public boolean [] problem = problem . getAllParameters () ;
Code	public boolean [] problem = problem . getAllParameters () ;
Distance : 7

36
Tree	final void [] [] cols = length . getAllParameters () ;
Code	final void [] [] cols = length . getAllParameters () ;
Distance : 7

37
Tree	static byte [] cols = cols . getAllParameters () ;
Code	static byte [] cols = cols . getAllParameters () ;
Distance : 7

38
Tree	abstract short [] [] problem = cols . getAllParameters () ;
Code	abstract short [] [] problem = cols . getAllParameters () ;
Distance : 9

39
Tree	final int cols = problem . getAllParameters () ;
Code	final int cols = problem . getAllParameters () ;
Distance : 3

40
Tree	final int cols = problem . getAllParameters ( isExprConditional ) ;
Code	final int cols = problem . getAllParameters ( isExprConditional ) ;
Distance : 4

41
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.IDENTICAL_ABSCISSAS_DIVISION_BY_ZERO ) ;
Distance : 4

42
Tree	final int cols = problem . getAllParameters ( Feature.ACCESSIBILITY_MODIFIER ) ;
Code	final int cols = problem . getAllParameters ( Feature.ACCESSIBILITY_MODIFIER ) ;
Distance : 4

43
Tree	final int cols = problem . getAllParameters ( readLine ) ;
Code	final int cols = problem . getAllParameters ( readLine ) ;
Distance : 4

44
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.INVALID_REGRESSION_ARRAY ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.INVALID_REGRESSION_ARRAY ) ;
Distance : 4

45
Tree	final int cols = problem . getAllParameters ( iterateZBounds ) ;
Code	final int cols = problem . getAllParameters ( iterateZBounds ) ;
Distance : 4

46
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.AT_LEAST_ONE_ROW ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.AT_LEAST_ONE_ROW ) ;
Distance : 4

47
Tree	final int cols = problem . getAllParameters ( estimateRegressandVariance ) ;
Code	final int cols = problem . getAllParameters ( estimateRegressandVariance ) ;
Distance : 4

48
Tree	final int cols = problem . getAllParameters ( isNotEmpty ) ;
Code	final int cols = problem . getAllParameters ( isNotEmpty ) ;
Distance : 4

49
Tree	final int cols = problem . getAllParameters ( numberOfPoints ) ;
Code	final int cols = problem . getAllParameters ( numberOfPoints ) ;
Distance : 4

50
Tree	final byte [] [] length = cols . getAllParameters () ;
Code	final byte [] [] length = cols . getAllParameters () ;
Distance : 8

51
Tree	final int cols = problem . getAllParameters ( Locale.KOREAN ) ;
Code	final int cols = problem . getAllParameters ( Locale.KOREAN ) ;
Distance : 4

52
Tree	final int cols = problem . getAllParameters ( bounds.length ) ;
Code	final int cols = problem . getAllParameters ( bounds.length ) ;
Distance : 4

53
Tree	final void cols = ( problem ) length ;
Code	final void cols = ( problem ) length ;
Distance : 6

54
Tree	final int cols = problem . getAllParameters ( Sigmoid ) ;
Code	final int cols = problem . getAllParameters ( Sigmoid ) ;
Distance : 4

55
Tree	final int cols = problem . getAllParameters ( parseTestCode ) ;
Code	final int cols = problem . getAllParameters ( parseTestCode ) ;
Distance : 4

56
Tree	final int cols = problem . getAllParameters ( getEvaluations ) ;
Code	final int cols = problem . getAllParameters ( getEvaluations ) ;
Distance : 4

57
Tree	final int cols = problem . getAllParameters ( rest ) ;
Code	final int cols = problem . getAllParameters ( rest ) ;
Distance : 4

58
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.AT_LEAST_ONE_COLUMN ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.AT_LEAST_ONE_COLUMN ) ;
Distance : 4

59
Tree	final int cols = problem . getAllParameters ( other.contractionCriterion ) ;
Code	final int cols = problem . getAllParameters ( other.contractionCriterion ) ;
Distance : 4

60
Tree	final int cols = problem . getAllParameters ( seed.length ) ;
Code	final int cols = problem . getAllParameters ( seed.length ) ;
Distance : 4

61
Tree	final int cols = problem . getAllParameters ( asBigDecimal ) ;
Code	final int cols = problem . getAllParameters ( asBigDecimal ) ;
Distance : 4

62
Tree	final int cols = problem . getAllParameters ( isBoxableScalar ) ;
Code	final int cols = problem . getAllParameters ( isBoxableScalar ) ;
Distance : 4

63
Tree	final int cols = problem . getAllParameters ( Level.FINE ) ;
Code	final int cols = problem . getAllParameters ( Level.FINE ) ;
Distance : 4

64
Tree	final int cols = problem . getAllParameters ( instantiate ) ;
Code	final int cols = problem . getAllParameters ( instantiate ) ;
Distance : 4

65
Tree	final int cols = problem . getAllParameters ( Entities.ISO8859_1_ARRAY_LENGTH ) ;
Code	final int cols = problem . getAllParameters ( Entities.ISO8859_1_ARRAY_LENGTH ) ;
Distance : 4

66
Tree	final int cols = problem . getAllParameters ( Calendar.MINUTE ) ;
Code	final int cols = problem . getAllParameters ( Calendar.MINUTE ) ;
Distance : 4

67
Tree	final int cols = problem . getAllParameters ( DfpField.FLAG_INVALID ) ;
Code	final int cols = problem . getAllParameters ( DfpField.FLAG_INVALID ) ;
Distance : 4

68
Tree	final int cols = problem . getAllParameters ( ComposableFunction.ABS ) ;
Code	final int cols = problem . getAllParameters ( ComposableFunction.ABS ) ;
Distance : 4

69
Tree	final int cols = problem . getAllParameters ( fieldWasInitializedUsingContructorArgs ) ;
Code	final int cols = problem . getAllParameters ( fieldWasInitializedUsingContructorArgs ) ;
Distance : 4

70
Tree	final int cols = problem . getAllParameters ( calculateStackTotal ) ;
Code	final int cols = problem . getAllParameters ( calculateStackTotal ) ;
Distance : 4

71
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.FIRST_ELEMENT_NOT_ZERO ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.FIRST_ELEMENT_NOT_ZERO ) ;
Distance : 4

72
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.NOT_POSITIVE_ELEMENT_AT_INDEX ) ;
Distance : 4

73
Tree	final int cols = problem . getAllParameters ( applyTo ) ;
Code	final int cols = problem . getAllParameters ( applyTo ) ;
Distance : 4

74
Tree	final byte problem = ( problem ) length ;
Code	final byte problem = ( problem ) length ;
Distance : 7

75
Tree	final int cols = problem . getAllParameters ( emptyMap ) ;
Code	final int cols = problem . getAllParameters ( emptyMap ) ;
Distance : 4

76
Tree	final int cols = problem . getAllParameters ( getArrayStart ) ;
Code	final int cols = problem . getAllParameters ( getArrayStart ) ;
Distance : 4

77
Tree	final int cols = problem . getAllParameters ( toMaybeTemplatizedType ) ;
Code	final int cols = problem . getAllParameters ( toMaybeTemplatizedType ) ;
Distance : 4

78
Tree	final int cols = problem . getAllParameters ( Token.NULL ) ;
Code	final int cols = problem . getAllParameters ( Token.NULL ) ;
Distance : 4

79
Tree	protected int [] [] length = problem . getAllParameters () ;
Code	protected int [] [] length = problem . getAllParameters () ;
Distance : 7

80
Tree	final byte [] [] problem = length . getAllParameters () ;
Code	final byte [] [] problem = length . getAllParameters () ;
Distance : 8

81
Tree	private char cols = problem . getAllParameters () . length ;
Code	private char cols = problem . getAllParameters () . length ;
Distance : 3

82
Tree	synchronized int problem = problem . getAllParameters () . length ;
Code	synchronized int problem = problem . getAllParameters () . length ;
Distance : 3

83
Tree	public int length = problem . getAllParameters () . length ;
Code	public int length = problem . getAllParameters () . length ;
Distance : 3

84
Tree	final void cols = cols . getAllParameters () . length ;
Code	final void cols = cols . getAllParameters () . length ;
Distance : 3

85
Tree	public long cols = problem . getAllParameters () . length ;
Code	public long cols = problem . getAllParameters () . length ;
Distance : 3

86
Tree	synchronized byte cols = problem . getAllParameters () . length ;
Code	synchronized byte cols = problem . getAllParameters () . length ;
Distance : 3

87
Tree	private short cols = problem . getAllParameters () . length ;
Code	private short cols = problem . getAllParameters () . length ;
Distance : 3

88
Tree	abstract int length = problem . getAllParameters () . length ;
Code	abstract int length = problem . getAllParameters () . length ;
Distance : 3

89
Tree	final short cols = cols . getAllParameters () . length ;
Code	final short cols = cols . getAllParameters () . length ;
Distance : 3

90
Tree	final long cols = problem . getAllParameters () . cols ;
Code	final long cols = problem . getAllParameters () . cols ;
Distance : 3

91
Tree	final float length = problem . getAllParameters () . length ;
Code	final float length = problem . getAllParameters () . length ;
Distance : 3

92
Tree	abstract byte problem = problem . getAllParameters () . length ;
Code	abstract byte problem = problem . getAllParameters () . length ;
Distance : 4

93
Tree	final int cols = cols . getAllParameters () . cols ;
Code	final int cols = cols . getAllParameters () . cols ;
Distance : 3

94
Tree	protected int cols = cols . getAllParameters () . length ;
Code	protected int cols = cols . getAllParameters () . length ;
Distance : 3

95
Tree	synchronized boolean cols = problem . getAllParameters () . length ;
Code	synchronized boolean cols = problem . getAllParameters () . length ;
Distance : 3

96
Tree	public boolean cols = problem . getAllParameters () . length ;
Code	public boolean cols = problem . getAllParameters () . length ;
Distance : 3

97
Tree	static long problem = problem . getAllParameters () . length ;
Code	static long problem = problem . getAllParameters () . length ;
Distance : 4

98
Tree	synchronized long cols = problem . getAllParameters () . length ;
Code	synchronized long cols = problem . getAllParameters () . length ;
Distance : 3

99
Tree	public int cols = cols . getAllParameters () . length ;
Code	public int cols = cols . getAllParameters () . length ;
Distance : 3

100
Tree	private float cols = problem . getAllParameters () . length ;
Code	private float cols = problem . getAllParameters () . length ;
Distance : 3

101
Tree	synchronized double [] [] cols = problem . getAllParameters () ;
Code	synchronized double [] [] cols = problem . getAllParameters () ;
Distance : 7

102
Tree	protected long [] [] problem = cols . getAllParameters () ;
Code	protected long [] [] problem = cols . getAllParameters () ;
Distance : 9

103
Tree	char length = length . getAllParameters () ;
Code	char length = length . getAllParameters () ;
Distance : 7

104
Tree	public short [] [] problem = problem . getAllParameters () ;
Code	public short [] [] problem = problem . getAllParameters () ;
Distance : 8

105
Tree	void problem = length . getAllParameters () ;
Code	void problem = length . getAllParameters () ;
Distance : 7

106
Tree	static double [] [] length = problem . getAllParameters () ;
Code	static double [] [] length = problem . getAllParameters () ;
Distance : 8

107
Tree	protected boolean [] [] problem = cols . getAllParameters () ;
Code	protected boolean [] [] problem = cols . getAllParameters () ;
Distance : 9

108
Tree	protected boolean cols = problem . getAllParameters () . length ;
Code	protected boolean cols = problem . getAllParameters () . length ;
Distance : 3

109
Tree	static byte [] [] problem = length . getAllParameters () ;
Code	static byte [] [] problem = length . getAllParameters () ;
Distance : 9

110
Tree	boolean length = length . getAllParameters () ;
Code	boolean length = length . getAllParameters () ;
Distance : 7

111
Tree	byte length = length . getAllParameters () ;
Code	byte length = length . getAllParameters () ;
Distance : 7

112
Tree	short length = length . getAllParameters () ;
Code	short length = length . getAllParameters () ;
Distance : 7

113
Tree	float length = length . getAllParameters () ;
Code	float length = length . getAllParameters () ;
Distance : 7

114
Tree	void length = length . getAllParameters () ;
Code	void length = length . getAllParameters () ;
Distance : 7

115
Tree	static boolean problem = problem . getAllParameters () . length ;
Code	static boolean problem = problem . getAllParameters () . length ;
Distance : 4

116
Tree	abstract double problem = problem . getAllParameters () . length ;
Code	abstract double problem = problem . getAllParameters () . length ;
Distance : 4

117
Tree	final long [] [] length = cols . getAllParameters () ;
Code	final long [] [] length = cols . getAllParameters () ;
Distance : 8

118
Tree	static double [] problem = length . getAllParameters () ;
Code	static double [] problem = length . getAllParameters () ;
Distance : 8

119
Tree	final float cols = cols . getAllParameters () . length ;
Code	final float cols = cols . getAllParameters () . length ;
Distance : 3

120
Tree	final byte cols = problem . getAllParameters () . cols ;
Code	final byte cols = problem . getAllParameters () . cols ;
Distance : 3

121
Tree	protected byte [] [] cols = problem . getAllParameters () ;
Code	protected byte [] [] cols = problem . getAllParameters () ;
Distance : 7

122
Tree	synchronized double [] [] problem = cols . getAllParameters () ;
Code	synchronized double [] [] problem = cols . getAllParameters () ;
Distance : 9

123
Tree	private long [] [] cols = problem . getAllParameters () ;
Code	private long [] [] cols = problem . getAllParameters () ;
Distance : 7

124
Tree	public double [] [] length = problem . getAllParameters () ;
Code	public double [] [] length = problem . getAllParameters () ;
Distance : 8

125
Tree	void length = cols . getAllParameters () ;
Code	void length = cols . getAllParameters () ;
Distance : 7

126
Tree	public double [] length = problem . getAllParameters () ;
Code	public double [] length = problem . getAllParameters () ;
Distance : 7

127
Tree	private boolean [] [] problem = cols . getAllParameters () ;
Code	private boolean [] [] problem = cols . getAllParameters () ;
Distance : 9

128
Tree	final long [] [] problem = length . getAllParameters () ;
Code	final long [] [] problem = length . getAllParameters () ;
Distance : 8

129
Tree	private byte [] problem = cols . getAllParameters () ;
Code	private byte [] problem = cols . getAllParameters () ;
Distance : 8

130
Tree	protected int [] problem = length . getAllParameters () ;
Code	protected int [] problem = length . getAllParameters () ;
Distance : 7

131
Tree	abstract short [] [] cols = problem . getAllParameters () ;
Code	abstract short [] [] cols = problem . getAllParameters () ;
Distance : 7

132
Tree	final void [] cols = length . getAllParameters () ;
Code	final void [] cols = length . getAllParameters () ;
Distance : 6

133
Tree	protected byte [] [] problem = cols . getAllParameters () ;
Code	protected byte [] [] problem = cols . getAllParameters () ;
Distance : 9

134
Tree	synchronized int [] [] problem = length . getAllParameters () ;
Code	synchronized int [] [] problem = length . getAllParameters () ;
Distance : 8

135
Tree	static double [] cols = cols . getAllParameters () ;
Code	static double [] cols = cols . getAllParameters () ;
Distance : 7

136
Tree	private long [] [] problem = cols . getAllParameters () ;
Code	private long [] [] problem = cols . getAllParameters () ;
Distance : 9

137
Tree	abstract float [] [] problem = cols . getAllParameters () ;
Code	abstract float [] [] problem = cols . getAllParameters () ;
Distance : 9

138
Tree	static int cols = problem . getAllParameters () . cols ;
Code	static int cols = problem . getAllParameters () . cols ;
Distance : 3

139
Tree	abstract double [] [] problem = length . getAllParameters () ;
Code	abstract double [] [] problem = length . getAllParameters () ;
Distance : 9

140
Tree	static byte [] length = problem . getAllParameters () ;
Code	static byte [] length = problem . getAllParameters () ;
Distance : 7

141
Tree	abstract void cols = problem . getAllParameters () . length ;
Code	abstract void cols = problem . getAllParameters () . length ;
Distance : 3

142
Tree	public char cols = problem . getAllParameters () . length ;
Code	public char cols = problem . getAllParameters () . length ;
Distance : 3

143
Tree	protected char cols = problem . getAllParameters () . length ;
Code	protected char cols = problem . getAllParameters () . length ;
Distance : 3

144
Tree	static byte problem = problem . getAllParameters () . length ;
Code	static byte problem = problem . getAllParameters () . length ;
Distance : 4

145
Tree	public double problem = problem . getAllParameters () . length ;
Code	public double problem = problem . getAllParameters () . length ;
Distance : 4

146
Tree	static void cols = problem . getAllParameters () . length ;
Code	static void cols = problem . getAllParameters () . length ;
Distance : 3

147
Tree	private int cols = cols . getAllParameters () . length ;
Code	private int cols = cols . getAllParameters () . length ;
Distance : 3

148
Tree	final void [] problem = cols . getAllParameters () ;
Code	final void [] problem = cols . getAllParameters () ;
Distance : 7

149
Tree	int cols = problem . getAllParameters () ; join
Code	int cols = problem . getAllParameters () ; join
Distance : 5

150
Tree	final int length = cols . getAllParameters () . length ;
Code	final int length = cols . getAllParameters () . length ;
Distance : 3

151
Tree	final double problem = cols . getAllParameters () . length ;
Code	final double problem = cols . getAllParameters () . length ;
Distance : 4

152
Tree	protected int problem = problem . getAllParameters () . length ;
Code	protected int problem = problem . getAllParameters () . length ;
Distance : 3

153
Tree	abstract short [] problem = cols . getAllParameters () ;
Code	abstract short [] problem = cols . getAllParameters () ;
Distance : 8

154
Tree	private boolean [] [] cols = problem . getAllParameters () ;
Code	private boolean [] [] cols = problem . getAllParameters () ;
Distance : 7

155
Tree	static float [] problem = cols . getAllParameters () ;
Code	static float [] problem = cols . getAllParameters () ;
Distance : 8

156
Tree	abstract float [] [] cols = problem . getAllParameters () ;
Code	abstract float [] [] cols = problem . getAllParameters () ;
Distance : 7

157
Tree	static int cols = length . getAllParameters () . length ;
Code	static int cols = length . getAllParameters () . length ;
Distance : 3

158
Tree	final int cols = problem . getAllParameters ( line.zero ) ;
Code	final int cols = problem . getAllParameters ( line.zero ) ;
Distance : 4

159
Tree	final int cols = problem . getAllParameters ( objectlit ) ;
Code	final int cols = problem . getAllParameters ( objectlit ) ;
Distance : 4

160
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.CANNOT_SET_AT_NEGATIVE_INDEX ) ;
Distance : 4

161
Tree	final double cols = ( problem ) cols ;
Code	final double cols = ( problem ) cols ;
Distance : 7

162
Tree	final int cols = problem . getAllParameters ( newBrentSolver ) ;
Code	final int cols = problem . getAllParameters ( newBrentSolver ) ;
Distance : 4

163
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.NOT_POSITIVE_STANDARD_DEVIATION ) ;
Distance : 4

164
Tree	final byte cols = problem . getAllParameters () ;
Code	final byte cols = problem . getAllParameters () ;
Distance : 4

165
Tree	final int cols = problem . getAllParameters ( BinaryFunction.MULTIPLY ) ;
Code	final int cols = problem . getAllParameters ( BinaryFunction.MULTIPLY ) ;
Distance : 4

166
Tree	final int cols = problem . getAllParameters ( Fraction.ONE ) ;
Code	final int cols = problem . getAllParameters ( Fraction.ONE ) ;
Distance : 4

167
Tree	static int cols = problem . getAllParameters () ;
Code	static int cols = problem . getAllParameters () ;
Distance : 4

168
Tree	final int cols = problem . getAllParameters ( a.d ) ;
Code	final int cols = problem . getAllParameters ( a.d ) ;
Distance : 4

169
Tree	final double [] [] cols = problem . getAllParameters () ;
Code	final double [] [] cols = problem . getAllParameters () ;
Distance : 6

170
Tree	final int cols = problem . getAllParameters ( di ) ;
Code	final int cols = problem . getAllParameters ( di ) ;
Distance : 4

171
Tree	final int problem = ( problem ) cols ;
Code	final int problem = ( problem ) cols ;
Distance : 7

172
Tree	final int cols = problem . getAllParameters ( mapper.start ) ;
Code	final int cols = problem . getAllParameters ( mapper.start ) ;
Distance : 4

173
Tree	final int cols = problem . getAllParameters ( DstNormalization.STANDARD_DST_I ) ;
Code	final int cols = problem . getAllParameters ( DstNormalization.STANDARD_DST_I ) ;
Distance : 4

174
Tree	final int cols = problem . getAllParameters ( getFailures ) ;
Code	final int cols = problem . getAllParameters ( getFailures ) ;
Distance : 4

175
Tree	final int cols = problem . getAllParameters ( UnicodeUnescaper.PARAM.escapePlus ) ;
Code	final int cols = problem . getAllParameters ( UnicodeUnescaper.PARAM.escapePlus ) ;
Distance : 4

176
Tree	final int cols = problem . getAllParameters ( Node.GOOG_MODULE ) ;
Code	final int cols = problem . getAllParameters ( Node.GOOG_MODULE ) ;
Distance : 4

177
Tree	final int cols = problem . getAllParameters ( newNewtonSolver ) ;
Code	final int cols = problem . getAllParameters ( newNewtonSolver ) ;
Distance : 4

178
Tree	final int cols = problem . getAllParameters ( Vector3D.PLUS_I ) ;
Code	final int cols = problem . getAllParameters ( Vector3D.PLUS_I ) ;
Distance : 4

179
Tree	final int cols = problem . getAllParameters ( Coordinates1D.ZERO ) ;
Code	final int cols = problem . getAllParameters ( Coordinates1D.ZERO ) ;
Distance : 4

180
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.ARRAY_SUMS_TO_ZERO ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.ARRAY_SUMS_TO_ZERO ) ;
Distance : 4

181
Tree	final int cols = problem . getAllParameters ( DateTickUnitType.DAY ) ;
Code	final int cols = problem . getAllParameters ( DateTickUnitType.DAY ) ;
Distance : 4

182
Tree	protected int cols = ( problem ) length ;
Code	protected int cols = ( problem ) length ;
Distance : 6

183
Tree	final int cols = problem . getAllParameters ( reducePoints ) ;
Code	final int cols = problem . getAllParameters ( reducePoints ) ;
Distance : 4

184
Tree	int problem = problem . getAllParameters () ;
Code	int problem = problem . getAllParameters () ;
Distance : 5

185
Tree	final int cols = problem . getAllParameters ( source.n ) ;
Code	final int cols = problem . getAllParameters ( source.n ) ;
Distance : 4

186
Tree	final int cols = cols . getAllParameters () ;
Code	final int cols = cols . getAllParameters () ;
Distance : 4

187
Tree	final int cols = problem . getAllParameters ( Nullability.IMPLICIT ) ;
Code	final int cols = problem . getAllParameters ( Nullability.IMPLICIT ) ;
Distance : 4

188
Tree	char cols = problem . getAllParameters () ;
Code	char cols = problem . getAllParameters () ;
Distance : 5

189
Tree	final short cols = ( problem ) length ;
Code	final short cols = ( problem ) length ;
Distance : 6

190
Tree	final int cols = problem . getAllParameters ( getItemShape ) ;
Code	final int cols = problem . getAllParameters ( getItemShape ) ;
Distance : 4

191
Tree	final int cols = problem . getAllParameters ( getAllScopesInFunction ) ;
Code	final int cols = problem . getAllParameters ( getAllScopesInFunction ) ;
Distance : 4

192
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.CANNOT_INCREMENT_STATISTIC_CONSTRUCTED_FROM_EXTERNAL_MOMENTS ) ;
Distance : 4

193
Tree	final int cols = problem . getAllParameters ( LocalizedFormats.NO_REGRESSORS ) ;
Code	final int cols = problem . getAllParameters ( LocalizedFormats.NO_REGRESSORS ) ;
Distance : 4

194
Tree	final int cols = problem . getAllParameters ( getRSquare ) ;
Code	final int cols = problem . getAllParameters ( getRSquare ) ;
Distance : 4

195
Tree	final int cols = problem . getAllParameters ( toSolve ) ;
Code	final int cols = problem . getAllParameters ( toSolve ) ;
Distance : 4

196
Tree	final int cols = problem . getAllParameters ( Calendar.DAY_OF_WEEK ) ;
Code	final int cols = problem . getAllParameters ( Calendar.DAY_OF_WEEK ) ;
Distance : 4

197
Tree	final int cols = problem . getAllParameters ( NaNStrategy.MAXIMAL ) ;
Code	final int cols = problem . getAllParameters ( NaNStrategy.MAXIMAL ) ;
Distance : 4

198
Tree	final int cols = problem . getAllParameters ( Exec.INSTANCE ) ;
Code	final int cols = problem . getAllParameters ( Exec.INSTANCE ) ;
Distance : 4

199
Tree	final int cols = problem . getAllParameters ( TypeValidation.DISABLED ) ;
Code	final int cols = problem . getAllParameters ( TypeValidation.DISABLED ) ;
Distance : 4

========================================================================


========================================================================
Example Number: 52
Parent Code is: 
final BigDecimal [] out = new BigDecimal [ v.length ] ;
-------------------------------------------------------------------------------
Child code is: 
final BigDecimal [] out = new BigDecimal [ nRows ] ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=BigDecimal})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=BigDecimal})) (221{val=[})) (40{val=v.length}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (43 (801{val=BigDecimal})) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (43 (801{val=BigDecimal})) (221{val=[})) (800{val=nRows}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/98/parent/src_java_org_apache_commons_math_linear_BigMatrixImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	final BigDecimal [] out = nRows . getInstance ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInstance ( nRows , null ) ;
Distance : 7

1
Tree	final BigDecimal [] out = nRows . instantiate ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . instantiate ( nRows , null ) ;
Distance : 7

2
Tree	final BigDecimal [] out = nRows . getColumnDimension ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getColumnDimension ( nRows , null ) ;
Distance : 7

3
Tree	final BigDecimal [] out = nRows . JAVA_1_5 ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . JAVA_1_5 ( nRows , null ) ;
Distance : 7

4
Tree	final BigDecimal [] out = nRows . getMapper ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getMapper ( nRows , null ) ;
Distance : 7

5
Tree	final BigDecimal [] out = out . with ( nRows , null ) ;
Code	final BigDecimal [] out = out . with ( nRows , null ) ;
Distance : 7

6
Tree	final BigDecimal [] out = nRows . forDigit ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . forDigit ( nRows , null ) ;
Distance : 7

7
Tree	final BigDecimal [] out = nRows . getGeneratorUpperBounds ( out , null ) ;
Code	final BigDecimal [] out = nRows . getGeneratorUpperBounds ( out , null ) ;
Distance : 8

8
Tree	final BigDecimal [] out = nRows . log1p ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . log1p ( nRows , null ) ;
Distance : 7

9
Tree	final BigDecimal [] out = nRows . values.length ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . values.length ( nRows , null ) ;
Distance : 7

10
Tree	final BigDecimal [] out = nRows . spaceMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . spaceMatcher ( nRows , null ) ;
Distance : 7

11
Tree	final BigDecimal [] out = nRows . accept ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . accept ( nRows , null ) ;
Distance : 7

12
Tree	final BigDecimal [] out = nRows . getRandomGenerator ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getRandomGenerator ( nRows , null ) ;
Distance : 7

13
Tree	final BigDecimal [] out = nRows . getTickLength ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getTickLength ( nRows , null ) ;
Distance : 7

14
Tree	final BigDecimal [] out = nRows . getGmtTimeZone ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getGmtTimeZone ( nRows , null ) ;
Distance : 7

15
Tree	final BigDecimal [] out = nRows . getBestJSDocInfo ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getBestJSDocInfo ( nRows , null ) ;
Distance : 7

16
Tree	final BigDecimal [] out = nRows . getInterpolatedState ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInterpolatedState ( nRows , null ) ;
Distance : 7

17
Tree	final BigDecimal [] out = nRows . chronoLocal ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . chronoLocal ( nRows , null ) ;
Distance : 7

18
Tree	final BigDecimal [] out = nRows . getVertices ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getVertices ( nRows , null ) ;
Distance : 7

19
Tree	final BigDecimal [] out = nRows . hourMinuteSecondFraction ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . hourMinuteSecondFraction ( nRows , null ) ;
Distance : 7

20
Tree	final BigDecimal [] out = nRows . getEntry ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getEntry ( nRows , null ) ;
Distance : 7

21
Tree	final BigDecimal [] out = out . getAndIncrement ( nRows , null ) ;
Code	final BigDecimal [] out = out . getAndIncrement ( nRows , null ) ;
Distance : 7

22
Tree	final BigDecimal [] out = nRows . currentTimeMillis ( out , null ) ;
Code	final BigDecimal [] out = nRows . currentTimeMillis ( out , null ) ;
Distance : 8

23
Tree	final BigDecimal [] out = nRows . defaultIfNull ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . defaultIfNull ( nRows , null ) ;
Distance : 7

24
Tree	final BigDecimal [] out = out . instantiateGenericsWithUnknown ( nRows , null ) ;
Code	final BigDecimal [] out = out . instantiateGenericsWithUnknown ( nRows , null ) ;
Distance : 7

25
Tree	final BigDecimal [] out = out . binomialCoefficient ( nRows , null ) ;
Code	final BigDecimal [] out = out . binomialCoefficient ( nRows , null ) ;
Distance : 7

26
Tree	final BigDecimal [] out = nRows . length ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . length ( nRows , null ) ;
Distance : 7

27
Tree	final BigDecimal [] out = nRows . getTokenList ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getTokenList ( nRows , null ) ;
Distance : 7

28
Tree	final BigDecimal [] out = nRows . getTextBounds ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getTextBounds ( nRows , null ) ;
Distance : 7

29
Tree	final BigDecimal [] out = nRows . min ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . min ( nRows , null ) ;
Distance : 7

30
Tree	final BigDecimal [] out = nRows . getEmptyObjectLiteral ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getEmptyObjectLiteral ( nRows , null ) ;
Distance : 7

31
Tree	final BigDecimal [] out = nRows . FACT.length ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . FACT.length ( nRows , null ) ;
Distance : 7

32
Tree	final BigDecimal [] out = nRows . bitLength ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . bitLength ( nRows , null ) ;
Distance : 7

33
Tree	final BigDecimal [] out = nRows . newBrentSolver ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . newBrentSolver ( nRows , null ) ;
Distance : 7

34
Tree	final BigDecimal [] out = out . getGenericDeclaration ( nRows , null ) ;
Code	final BigDecimal [] out = out . getGenericDeclaration ( nRows , null ) ;
Distance : 7

35
Tree	final BigDecimal [] out = nRows . getCharno ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getCharno ( nRows , null ) ;
Distance : 7

36
Tree	final BigDecimal [] out = nRows . getUnivariateStatistic ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getUnivariateStatistic ( nRows , null ) ;
Distance : 7

37
Tree	final BigDecimal [] out = nRows . getLastInvocation ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getLastInvocation ( nRows , null ) ;
Distance : 7

38
Tree	final BigDecimal [] out = nRows . getInf ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInf ( nRows , null ) ;
Distance : 7

39
Tree	final BigDecimal [] out = out . doubleValue ( nRows , null ) ;
Code	final BigDecimal [] out = out . doubleValue ( nRows , null ) ;
Distance : 7

40
Tree	final BigDecimal [] out = out . natural ( nRows , null ) ;
Code	final BigDecimal [] out = out . natural ( nRows , null ) ;
Distance : 7

41
Tree	final BigDecimal [] out = nRows . getStart ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getStart ( nRows , null ) ;
Distance : 7

42
Tree	final BigDecimal [] out = nRows . valueOf ( out , null ) ;
Code	final BigDecimal [] out = nRows . valueOf ( out , null ) ;
Distance : 8

43
Tree	final BigDecimal [] out = nRows . fromMillisOfDay ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . fromMillisOfDay ( nRows , null ) ;
Distance : 7

44
Tree	final BigDecimal [] out = out . getUserDir ( nRows , null ) ;
Code	final BigDecimal [] out = out . getUserDir ( nRows , null ) ;
Distance : 7

45
Tree	final BigDecimal [] out = nRows . getInvocationsForEvaluation ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInvocationsForEvaluation ( nRows , null ) ;
Distance : 7

46
Tree	final BigDecimal [] out = nRows . fitness ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . fitness ( nRows , null ) ;
Distance : 7

47
Tree	final BigDecimal [] out = nRows . linearCombination ( out , null ) ;
Code	final BigDecimal [] out = nRows . linearCombination ( out , null ) ;
Distance : 8

48
Tree	final BigDecimal [] out = out . log ( nRows , null ) ;
Code	final BigDecimal [] out = out . log ( nRows , null ) ;
Distance : 7

49
Tree	final BigDecimal [] out = nRows . computeCovariances ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . computeCovariances ( nRows , null ) ;
Distance : 7

50
Tree	final BigDecimal [] out = nRows . binomialCoefficient ( out , null ) ;
Code	final BigDecimal [] out = nRows . binomialCoefficient ( out , null ) ;
Distance : 8

51
Tree	final BigDecimal [] out = nRows . getInstantiatorProvider ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInstantiatorProvider ( nRows , null ) ;
Distance : 7

52
Tree	final BigDecimal [] out = out . hashCode ( out , null ) ;
Code	final BigDecimal [] out = out . hashCode ( out , null ) ;
Distance : 8

53
Tree	final BigDecimal [] out = nRows . toBaseString ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toBaseString ( nRows , null ) ;
Distance : 7

54
Tree	final BigDecimal [] out = nRows . other.value ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . other.value ( nRows , null ) ;
Distance : 7

55
Tree	final BigDecimal [] out = nRows . readLine ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . readLine ( nRows , null ) ;
Distance : 7

56
Tree	final BigDecimal [] out = nRows . getGenericDeclaration ( out , null ) ;
Code	final BigDecimal [] out = nRows . getGenericDeclaration ( out , null ) ;
Distance : 8

57
Tree	final BigDecimal [] out = nRows . append ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . append ( nRows , null ) ;
Distance : 7

58
Tree	final BigDecimal [] out = nRows . deepClone ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . deepClone ( nRows , null ) ;
Distance : 7

59
Tree	final BigDecimal [] out = nRows . LocalizedFormats.DIMENSIONS_MISMATCH_2x2 ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . LocalizedFormats.DIMENSIONS_MISMATCH_2x2 ( nRows , null ) ;
Distance : 7

60
Tree	final BigDecimal [] out = nRows . Coordinates2D.ZERO ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . Coordinates2D.ZERO ( nRows , null ) ;
Distance : 7

61
Tree	final BigDecimal [] out = nRows . getHTML40 ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getHTML40 ( nRows , null ) ;
Distance : 7

62
Tree	final BigDecimal [] out = nRows . CustomCharSequence ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . CustomCharSequence ( nRows , null ) ;
Distance : 7

63
Tree	final BigDecimal [] out = nRows . a.dfbg ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . a.dfbg ( nRows , null ) ;
Distance : 7

64
Tree	final BigDecimal [] out = nRows . newSetOf ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . newSetOf ( nRows , null ) ;
Distance : 7

65
Tree	final BigDecimal [] out = nRows . asList ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . asList ( nRows , null ) ;
Distance : 7

66
Tree	final BigDecimal [] out = nRows . instantiateGenericsWithUnknown ( out , null ) ;
Code	final BigDecimal [] out = nRows . instantiateGenericsWithUnknown ( out , null ) ;
Distance : 8

67
Tree	final BigDecimal [] out = out . clone ( nRows , null ) ;
Code	final BigDecimal [] out = out . clone ( nRows , null ) ;
Distance : 7

68
Tree	final BigDecimal [] out = nRows . cos ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . cos ( nRows , null ) ;
Distance : 7

69
Tree	final BigDecimal [] out = nRows . compose ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . compose ( nRows , null ) ;
Distance : 7

70
Tree	final BigDecimal [] out = nRows . CosAngle ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . CosAngle ( nRows , null ) ;
Distance : 7

71
Tree	final BigDecimal [] out = out . getPartialValues ( nRows , null ) ;
Code	final BigDecimal [] out = out . getPartialValues ( nRows , null ) ;
Distance : 7

72
Tree	final BigDecimal [] out = out . emptyList ( nRows , null ) ;
Code	final BigDecimal [] out = out . emptyList ( nRows , null ) ;
Distance : 7

73
Tree	final BigDecimal [] out = nRows . getUserHome ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getUserHome ( nRows , null ) ;
Distance : 7

74
Tree	final BigDecimal [] out = out . getDimension ( out , null ) ;
Code	final BigDecimal [] out = out . getDimension ( out , null ) ;
Distance : 8

75
Tree	final BigDecimal [] out = out . copyOf ( nRows , null ) ;
Code	final BigDecimal [] out = out . copyOf ( nRows , null ) ;
Distance : 7

76
Tree	final BigDecimal [] out = nRows . doubleQuoteMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . doubleQuoteMatcher ( nRows , null ) ;
Distance : 7

77
Tree	final BigDecimal [] out = nRows . toString ( out , null ) ;
Code	final BigDecimal [] out = nRows . toString ( out , null ) ;
Distance : 8

78
Tree	final BigDecimal [] out = out . ceil ( nRows , null ) ;
Code	final BigDecimal [] out = out . ceil ( nRows , null ) ;
Distance : 7

79
Tree	final BigDecimal [] out = out . linearCombination ( nRows , null ) ;
Code	final BigDecimal [] out = out . linearCombination ( nRows , null ) ;
Distance : 7

80
Tree	final BigDecimal [] out = nRows . getConstructor ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getConstructor ( nRows , null ) ;
Distance : 7

81
Tree	final BigDecimal [] out = out . intern ( nRows , null ) ;
Code	final BigDecimal [] out = out . intern ( nRows , null ) ;
Distance : 7

82
Tree	final BigDecimal [] out = nRows . minor ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . minor ( nRows , null ) ;
Distance : 7

83
Tree	final BigDecimal [] out = nRows . copySelf ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . copySelf ( nRows , null ) ;
Distance : 7

84
Tree	final BigDecimal [] out = nRows . FastMath.PI ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . FastMath.PI ( nRows , null ) ;
Distance : 7

85
Tree	final BigDecimal [] out = nRows . nextInt ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . nextInt ( nRows , null ) ;
Distance : 7

86
Tree	final BigDecimal [] out = nRows . millisOfSecond ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . millisOfSecond ( nRows , null ) ;
Distance : 7

87
Tree	final BigDecimal [] out = nRows . toSpace ( out , null ) ;
Code	final BigDecimal [] out = nRows . toSpace ( out , null ) ;
Distance : 8

88
Tree	final BigDecimal [] out = nRows . decrementAndGet ( out , null ) ;
Code	final BigDecimal [] out = nRows . decrementAndGet ( out , null ) ;
Distance : 8

89
Tree	final BigDecimal [] out = nRows . abs ( out , null ) ;
Code	final BigDecimal [] out = nRows . abs ( out , null ) ;
Distance : 8

90
Tree	final BigDecimal [] out = out . isNaN ( out , null ) ;
Code	final BigDecimal [] out = out . isNaN ( out , null ) ;
Distance : 8

91
Tree	final BigDecimal [] out = nRows . factorial ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . factorial ( nRows , null ) ;
Distance : 7

92
Tree	final BigDecimal [] out = nRows . MILLIS_TEST ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . MILLIS_TEST ( nRows , null ) ;
Distance : 7

93
Tree	final BigDecimal [] out = out . toSpace ( nRows , null ) ;
Code	final BigDecimal [] out = out . toSpace ( nRows , null ) ;
Distance : 7

94
Tree	final BigDecimal [] out = nRows . doubleValue ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . doubleValue ( nRows , null ) ;
Distance : 7

95
Tree	final BigDecimal [] out = nRows . with ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . with ( nRows , null ) ;
Distance : 7

96
Tree	final BigDecimal [] out = out . is ( nRows , null ) ;
Code	final BigDecimal [] out = out . is ( nRows , null ) ;
Distance : 7

97
Tree	final BigDecimal [] out = nRows . getUserDir ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getUserDir ( nRows , null ) ;
Distance : 7

98
Tree	final BigDecimal [] out = nRows . getAndIncrement ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getAndIncrement ( nRows , null ) ;
Distance : 7

99
Tree	final BigDecimal [] out = nRows . getPartialValues ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getPartialValues ( nRows , null ) ;
Distance : 7

100
Tree	final BigDecimal [] out = nRows . emptyList ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . emptyList ( nRows , null ) ;
Distance : 7

101
Tree	final BigDecimal [] out = nRows . getDimension ( out , null ) ;
Code	final BigDecimal [] out = nRows . getDimension ( out , null ) ;
Distance : 8

102
Tree	final BigDecimal [] out = nRows . ceil ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . ceil ( nRows , null ) ;
Distance : 7

103
Tree	final BigDecimal [] out = nRows . copyOf ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . copyOf ( nRows , null ) ;
Distance : 7

104
Tree	final BigDecimal [] out = nRows . intern ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . intern ( nRows , null ) ;
Distance : 7

105
Tree	final BigDecimal [] out = nRows . isNaN ( out , null ) ;
Code	final BigDecimal [] out = nRows . isNaN ( out , null ) ;
Distance : 8

106
Tree	final BigDecimal [] out = out . doubleToRawLongBits ( nRows , null ) ;
Code	final BigDecimal [] out = out . doubleToRawLongBits ( nRows , null ) ;
Distance : 7

107
Tree	final BigDecimal [] out = nRows . clone ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . clone ( nRows , null ) ;
Distance : 7

108
Tree	final BigDecimal [] out = nRows . lineSeparator ( out , null ) ;
Code	final BigDecimal [] out = nRows . lineSeparator ( out , null ) ;
Distance : 8

109
Tree	final BigDecimal [] out = nRows . hashCode ( out , null ) ;
Code	final BigDecimal [] out = nRows . hashCode ( out , null ) ;
Distance : 8

110
Tree	final BigDecimal [] out = nRows . compare ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . compare ( nRows , null ) ;
Distance : 7

111
Tree	final BigDecimal [] out = nRows . val.length ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . val.length ( nRows , null ) ;
Distance : 7

112
Tree	final BigDecimal [] out = out . getRowDimension ( nRows , null ) ;
Code	final BigDecimal [] out = out . getRowDimension ( nRows , null ) ;
Distance : 7

113
Tree	final BigDecimal [] out = nRows . natural ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . natural ( nRows , null ) ;
Distance : 7

114
Tree	final BigDecimal [] out = out . hashCode ( nRows , null ) ;
Code	final BigDecimal [] out = out . hashCode ( nRows , null ) ;
Distance : 7

115
Tree	final BigDecimal [] out = nRows . getGenericDeclaration ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getGenericDeclaration ( nRows , null ) ;
Distance : 7

116
Tree	final BigDecimal [] out = nRows . binomialCoefficient ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . binomialCoefficient ( nRows , null ) ;
Distance : 7

117
Tree	final BigDecimal [] out = nRows . isNaN ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . isNaN ( nRows , null ) ;
Distance : 7

118
Tree	final BigDecimal [] out = nRows . hashCode ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . hashCode ( nRows , null ) ;
Distance : 7

119
Tree	final BigDecimal [] out = nRows . is ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . is ( nRows , null ) ;
Distance : 7

120
Tree	final BigDecimal [] out = nRows . doubleToRawLongBits ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . doubleToRawLongBits ( nRows , null ) ;
Distance : 7

121
Tree	final BigDecimal [] out = out . getInstance ( nRows , null ) ;
Code	final BigDecimal [] out = out . getInstance ( nRows , null ) ;
Distance : 7

122
Tree	final BigDecimal [] out = nRows . getRowDimension ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getRowDimension ( nRows , null ) ;
Distance : 7

123
Tree	final BigDecimal [] out = nRows . IEEEremainder ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . IEEEremainder ( nRows , null ) ;
Distance : 7

124
Tree	final BigDecimal [] out = nRows . lineSeparator ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . lineSeparator ( nRows , null ) ;
Distance : 7

125
Tree	final BigDecimal [] out = nRows . currentTimeMillis ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . currentTimeMillis ( nRows , null ) ;
Distance : 7

126
Tree	final BigDecimal [] out = nRows . buildArray ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . buildArray ( nRows , null ) ;
Distance : 7

127
Tree	final BigDecimal [] out = nRows . valueOf ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . valueOf ( nRows , null ) ;
Distance : 7

128
Tree	final BigDecimal [] out = nRows . getInstance ( out , null ) ;
Code	final BigDecimal [] out = nRows . getInstance ( out , null ) ;
Distance : 8

129
Tree	final BigDecimal [] out = nRows . toString ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toString ( nRows , null ) ;
Distance : 7

130
Tree	final BigDecimal [] out = out . getDimension ( nRows , null ) ;
Code	final BigDecimal [] out = out . getDimension ( nRows , null ) ;
Distance : 7

131
Tree	final BigDecimal [] out = out . isNaN ( nRows , null ) ;
Code	final BigDecimal [] out = out . isNaN ( nRows , null ) ;
Distance : 7

132
Tree	final BigDecimal [] out = nRows . toSpace ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toSpace ( nRows , null ) ;
Distance : 7

133
Tree	final BigDecimal [] out = nRows . abs ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . abs ( nRows , null ) ;
Distance : 7

134
Tree	final BigDecimal [] out = nRows . decrementAndGet ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . decrementAndGet ( nRows , null ) ;
Distance : 7

135
Tree	final BigDecimal [] out = nRows . linearCombination ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . linearCombination ( nRows , null ) ;
Distance : 7

136
Tree	final BigDecimal [] out = nRows . instantiateGenericsWithUnknown ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . instantiateGenericsWithUnknown ( nRows , null ) ;
Distance : 7

137
Tree	final BigDecimal [] out = nRows . getGeneratorUpperBounds ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getGeneratorUpperBounds ( nRows , null ) ;
Distance : 7

138
Tree	final BigDecimal [] out = nRows . combine ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . combine ( nRows , null ) ;
Distance : 7

139
Tree	final BigDecimal [] out = nRows . log ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . log ( nRows , null ) ;
Distance : 7

140
Tree	final BigDecimal [] out = nRows . forID ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . forID ( nRows , null ) ;
Distance : 7

141
Tree	final BigDecimal [] out = nRows . getDefault ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getDefault ( nRows , null ) ;
Distance : 7

142
Tree	final BigDecimal [] out = nRows . nextAfter ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . nextAfter ( nRows , null ) ;
Distance : 7

143
Tree	final BigDecimal [] out = nRows . firstNonNull ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . firstNonNull ( nRows , null ) ;
Distance : 7

144
Tree	final BigDecimal [] out = nRows . getInstanceUTC ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInstanceUTC ( nRows , null ) ;
Distance : 7

145
Tree	final BigDecimal [] out = nRows . getAndDecrement ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getAndDecrement ( nRows , null ) ;
Distance : 7

146
Tree	final BigDecimal [] out = nRows . getNamespaceType ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getNamespaceType ( nRows , null ) ;
Distance : 7

147
Tree	final BigDecimal [] out = nRows . isPrettyPrint ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . isPrettyPrint ( nRows , null ) ;
Distance : 7

148
Tree	final BigDecimal [] out = nRows . intValue ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . intValue ( nRows , null ) ;
Distance : 7

149
Tree	final BigDecimal [] out = nRows . singleQuoteMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . singleQuoteMatcher ( nRows , null ) ;
Distance : 7

150
Tree	final BigDecimal [] out = nRows . getMethod ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getMethod ( nRows , null ) ;
Distance : 7

151
Tree	final BigDecimal [] out = nRows . nextDouble ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . nextDouble ( nRows , null ) ;
Distance : 7

152
Tree	final BigDecimal [] out = nRows . getRunCount ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getRunCount ( nRows , null ) ;
Distance : 7

153
Tree	final BigDecimal [] out = nRows . IEEEremainder ( out , null ) ;
Code	final BigDecimal [] out = nRows . IEEEremainder ( out , null ) ;
Distance : 8

154
Tree	final BigDecimal [] out = nRows . toDateTimeToday ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toDateTimeToday ( nRows , null ) ;
Distance : 7

155
Tree	final BigDecimal [] out = out . toString ( nRows , null ) ;
Code	final BigDecimal [] out = out . toString ( nRows , null ) ;
Distance : 7

156
Tree	final BigDecimal [] out = out . abs ( nRows , null ) ;
Code	final BigDecimal [] out = out . abs ( nRows , null ) ;
Distance : 7

157
Tree	final BigDecimal [] out = nRows . getFrobeniusNorm ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getFrobeniusNorm ( nRows , null ) ;
Distance : 7

158
Tree	final BigDecimal [] out = nRows . intersection ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . intersection ( nRows , null ) ;
Distance : 7

159
Tree	final BigDecimal [] out = out . decrementAndGet ( nRows , null ) ;
Code	final BigDecimal [] out = out . decrementAndGet ( nRows , null ) ;
Distance : 7

160
Tree	final BigDecimal [] out = nRows . getN ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getN ( nRows , null ) ;
Distance : 7

161
Tree	final BigDecimal [] out = nRows . getRowDimension ( out , null ) ;
Code	final BigDecimal [] out = nRows . getRowDimension ( out , null ) ;
Distance : 8

162
Tree	final BigDecimal [] out = nRows . diff ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . diff ( nRows , null ) ;
Distance : 7

163
Tree	final BigDecimal [] out = nRows . isInfinite ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . isInfinite ( nRows , null ) ;
Distance : 7

164
Tree	final BigDecimal [] out = nRows . is ( out , null ) ;
Code	final BigDecimal [] out = nRows . is ( out , null ) ;
Distance : 8

165
Tree	final BigDecimal [] out = out . IEEEremainder ( nRows , null ) ;
Code	final BigDecimal [] out = out . IEEEremainder ( nRows , null ) ;
Distance : 7

166
Tree	final BigDecimal [] out = nRows . eliminateZeroMassPoints ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . eliminateZeroMassPoints ( nRows , null ) ;
Distance : 7

167
Tree	final BigDecimal [] out = nRows . getDaysInYearMax ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getDaysInYearMax ( nRows , null ) ;
Distance : 7

168
Tree	final BigDecimal [] out = nRows . isJavaVersionAtLeast ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . isJavaVersionAtLeast ( nRows , null ) ;
Distance : 7

169
Tree	final BigDecimal [] out = nRows . toLocale ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toLocale ( nRows , null ) ;
Distance : 7

170
Tree	final BigDecimal [] out = nRows . size ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . size ( nRows , null ) ;
Distance : 7

171
Tree	final BigDecimal [] out = nRows . normalize ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . normalize ( nRows , null ) ;
Distance : 7

172
Tree	final BigDecimal [] out = nRows . getJavaIoTmpDir ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getJavaIoTmpDir ( nRows , null ) ;
Distance : 7

173
Tree	final BigDecimal [] out = nRows . doubleToRawLongBits ( out , null ) ;
Code	final BigDecimal [] out = nRows . doubleToRawLongBits ( out , null ) ;
Distance : 8

174
Tree	final BigDecimal [] out = out . lineSeparator ( nRows , null ) ;
Code	final BigDecimal [] out = out . lineSeparator ( nRows , null ) ;
Distance : 7

175
Tree	final BigDecimal [] out = nRows . longBitsToDouble ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . longBitsToDouble ( nRows , null ) ;
Distance : 7

176
Tree	final BigDecimal [] out = nRows . gcd ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . gcd ( nRows , null ) ;
Distance : 7

177
Tree	final BigDecimal [] out = out . getInstance ( out , null ) ;
Code	final BigDecimal [] out = out . getInstance ( out , null ) ;
Distance : 8

178
Tree	final BigDecimal [] out = nRows . floatValue ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . floatValue ( nRows , null ) ;
Distance : 7

179
Tree	final BigDecimal [] out = nRows . toBooleanObject ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toBooleanObject ( nRows , null ) ;
Distance : 7

180
Tree	final BigDecimal [] out = out . getGeneratorUpperBounds ( nRows , null ) ;
Code	final BigDecimal [] out = out . getGeneratorUpperBounds ( nRows , null ) ;
Distance : 7

181
Tree	final BigDecimal [] out = nRows . getDimension ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getDimension ( nRows , null ) ;
Distance : 7

182
Tree	final BigDecimal [] out = out . valueOf ( nRows , null ) ;
Code	final BigDecimal [] out = out . valueOf ( nRows , null ) ;
Distance : 7

183
Tree	final BigDecimal [] out = out . currentTimeMillis ( nRows , null ) ;
Code	final BigDecimal [] out = out . currentTimeMillis ( nRows , null ) ;
Distance : 7

184
Tree	final BigDecimal [] out = nRows . unmodifiableSet ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . unmodifiableSet ( nRows , null ) ;
Distance : 7

185
Tree	final BigDecimal [] out = nRows . quoteMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . quoteMatcher ( nRows , null ) ;
Distance : 7

186
Tree	final BigDecimal [] out = nRows . toHashCode ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . toHashCode ( nRows , null ) ;
Distance : 7

187
Tree	final BigDecimal [] out = nRows . splitMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . splitMatcher ( nRows , null ) ;
Distance : 7

188
Tree	final BigDecimal [] out = nRows . charMatcher ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . charMatcher ( nRows , null ) ;
Distance : 7

189
Tree	final BigDecimal [] out = nRows . getScopeRoot ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getScopeRoot ( nRows , null ) ;
Distance : 7

190
Tree	final BigDecimal [] out = nRows . natural ( out , null ) ;
Code	final BigDecimal [] out = nRows . natural ( out , null ) ;
Distance : 8

191
Tree	final BigDecimal [] out = nRows . getJavaHome ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getJavaHome ( nRows , null ) ;
Distance : 7

192
Tree	final BigDecimal [] out = nRows . doubleValue ( out , null ) ;
Code	final BigDecimal [] out = nRows . doubleValue ( out , null ) ;
Distance : 8

193
Tree	final BigDecimal [] out = nRows . LocalizedFormats.VECTOR_LENGTH_MISMATCH ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . LocalizedFormats.VECTOR_LENGTH_MISMATCH ( nRows , null ) ;
Distance : 7

194
Tree	final BigDecimal [] out = out . val.length ( nRows , null ) ;
Code	final BigDecimal [] out = out . val.length ( nRows , null ) ;
Distance : 7

195
Tree	final BigDecimal [] out = out . compare ( nRows , null ) ;
Code	final BigDecimal [] out = out . compare ( nRows , null ) ;
Distance : 7

196
Tree	final BigDecimal [] out = nRows . mulAndCheck ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . mulAndCheck ( nRows , null ) ;
Distance : 7

197
Tree	final BigDecimal [] out = nRows . newSingleThreadExecutor ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . newSingleThreadExecutor ( nRows , null ) ;
Distance : 7

198
Tree	final BigDecimal [] out = nRows . getInstanceType ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . getInstanceType ( nRows , null ) ;
Distance : 7

199
Tree	final BigDecimal [] out = nRows . argumentsToMatchers ( nRows , null ) ;
Code	final BigDecimal [] out = nRows . argumentsToMatchers ( nRows , null ) ;
Distance : 7

========================================================================


========================================================================
Example Number: 53
Parent Code is: 
final double [] out = new double [ v.length ] ;
-------------------------------------------------------------------------------
Child code is: 
final double [] out = new double [ nRows ] ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (40{val=v.length}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (5 (39{val=double}) (85{val=[]})) (59 (800{val=out}) (204{val==}) (3 (304{val=new}) (5 (39{val=double}) (221{val=[})) (800{val=nRows}) (222{val=]}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/98/parent/src_java_org_apache_commons_math_linear_RealMatrixImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	final double [] out = new double [ v.length ] ;
Code	final double [] out = new double [ v.length ] ;
Distance : 1

1
Tree	final double [] out = new double [ cumulativeProbability () ] ;
Code	final double [] out = new double [ cumulativeProbability () ] ;
Distance : 2

2
Tree	final double [] out = new double [ MutableInt () ] ;
Code	final double [] out = new double [ MutableInt () ] ;
Distance : 2

3
Tree	final double [] out = new double [ vector () ] ;
Code	final double [] out = new double [ vector () ] ;
Distance : 2

4
Tree	final double [] out = nRows . clone () ;
Code	final double [] out = nRows . clone () ;
Distance : 5

5
Tree	final double [] out = nRows . natural () ;
Code	final double [] out = nRows . natural () ;
Distance : 5

6
Tree	final double [] out = new double [ isPrettyPrint () ] ;
Code	final double [] out = new double [ isPrettyPrint () ] ;
Distance : 2

7
Tree	final double [] out = new double [ erf () ] ;
Code	final double [] out = new double [ erf () ] ;
Distance : 2

8
Tree	final double [] out = out . buildArray () ;
Code	final double [] out = out . buildArray () ;
Distance : 5

9
Tree	final double [] out = out . valueOf ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . valueOf ( NUMBER_CONSTANT ) ;
Distance : 6

10
Tree	final double [] out = new double [ isFunctionScope () ] ;
Code	final double [] out = new double [ isFunctionScope () ] ;
Distance : 2

11
Tree	final double [] out = new double [ sign () ] ;
Code	final double [] out = new double [ sign () ] ;
Distance : 2

12
Tree	final double [] out = new double [ isSubtypeWithoutStructuralTyping () ] ;
Code	final double [] out = new double [ isSubtypeWithoutStructuralTyping () ] ;
Distance : 2

13
Tree	final double [] out = new double [ Vector () ] ;
Code	final double [] out = new double [ Vector () ] ;
Distance : 2

14
Tree	final double [] out = new double [ log1p () ] ;
Code	final double [] out = new double [ log1p () ] ;
Distance : 2

15
Tree	final double [] out = new double [ getCharno () ] ;
Code	final double [] out = new double [ getCharno () ] ;
Distance : 2

16
Tree	final double [] out = nRows . abs ( NUMBER_CONSTANT ) ;
Code	final double [] out = nRows . abs ( NUMBER_CONSTANT ) ;
Distance : 6

17
Tree	final double [] out = new double [ CharRange () ] ;
Code	final double [] out = new double [ CharRange () ] ;
Distance : 2

18
Tree	final double [] out = new double [ ObjectUtils () ] ;
Code	final double [] out = new double [ ObjectUtils () ] ;
Distance : 2

19
Tree	final double [] out = nRows . toBooleanObject () ;
Code	final double [] out = nRows . toBooleanObject () ;
Distance : 5

20
Tree	final double [] out = new double [ crossing () ] ;
Code	final double [] out = new double [ crossing () ] ;
Distance : 2

21
Tree	final double [] out = out . probability () ;
Code	final double [] out = out . probability () ;
Distance : 5

22
Tree	final double [] out = new double [ testSmallStep () ] ;
Code	final double [] out = new double [ testSmallStep () ] ;
Distance : 2

23
Tree	final double [] out = new double [ charAt () ] ;
Code	final double [] out = new double [ charAt () ] ;
Distance : 2

24
Tree	final double [] out = new double [ tol () ] ;
Code	final double [] out = new double [ tol () ] ;
Distance : 2

25
Tree	final double [] out = new double [ TWO_POWER_52 () ] ;
Code	final double [] out = new double [ TWO_POWER_52 () ] ;
Distance : 2

26
Tree	final double [] out = new double [ getGeneratorUpperBounds () ] ;
Code	final double [] out = new double [ getGeneratorUpperBounds () ] ;
Distance : 2

27
Tree	final double [] out = new double [ SparseFieldVector () ] ;
Code	final double [] out = new double [ SparseFieldVector () ] ;
Distance : 2

28
Tree	final double [] out = out . y0 () ;
Code	final double [] out = out . y0 () ;
Distance : 5

29
Tree	final double [] out = new double [ val.length () ] ;
Code	final double [] out = new double [ val.length () ] ;
Distance : 2

30
Tree	final double [] out = new double [ getNorm () ] ;
Code	final double [] out = new double [ getNorm () ] ;
Distance : 2

31
Tree	final double [] out = new double [ columns () ] ;
Code	final double [] out = new double [ columns () ] ;
Distance : 2

32
Tree	final double [] out = new double [ isUnresolved () ] ;
Code	final double [] out = new double [ isUnresolved () ] ;
Distance : 2

33
Tree	final double [] out = nRows . getDimension () ;
Code	final double [] out = nRows . getDimension () ;
Distance : 5

34
Tree	final double [] out = out . is () ;
Code	final double [] out = out . is () ;
Distance : 5

35
Tree	final double [] out = new double [ makeDistribution () ] ;
Code	final double [] out = new double [ makeDistribution () ] ;
Distance : 2

36
Tree	final double [] out = new double [ propType () ] ;
Code	final double [] out = new double [ propType () ] ;
Distance : 2

37
Tree	final double [] out = new double [ getPrototypeObject () ] ;
Code	final double [] out = new double [ getPrototypeObject () ] ;
Distance : 2

38
Tree	final double [] out = new double [ isHoistScope () ] ;
Code	final double [] out = new double [ isHoistScope () ] ;
Distance : 2

39
Tree	final double [] out = new double [ nRows . min ( NUMBER_CONSTANT ) ] ;
Code	final double [] out = new double [ nRows . min ( NUMBER_CONSTANT ) ] ;
Distance : 5

40
Tree	final double [] out = nRows . size () ;
Code	final double [] out = nRows . size () ;
Distance : 5

41
Tree	final double [] out = out . currentTimeMillis () ;
Code	final double [] out = out . currentTimeMillis () ;
Distance : 5

42
Tree	final double [] out = new double [ normalize () ] ;
Code	final double [] out = new double [ normalize () ] ;
Distance : 2

43
Tree	final double [] out = new double [ RealVector () ] ;
Code	final double [] out = new double [ RealVector () ] ;
Distance : 2

44
Tree	final double [] out = new double [ getField () ] ;
Code	final double [] out = new double [ getField () ] ;
Distance : 2

45
Tree	final double [] out = out . getGeneratorUpperBounds ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . getGeneratorUpperBounds ( NUMBER_CONSTANT ) ;
Distance : 6

46
Tree	final double [] out = nRows . getRowDimension () ;
Code	final double [] out = nRows . getRowDimension () ;
Distance : 5

47
Tree	final double [] out = new double [ getBounds2D () ] ;
Code	final double [] out = new double [ getBounds2D () ] ;
Distance : 2

48
Tree	final double [] out = new double [ Double.NaN () ] ;
Code	final double [] out = new double [ Double.NaN () ] ;
Distance : 2

49
Tree	final double [] out = new double [ LocalizedFormats.DIMENSIONS_MISMATCH_2x2 () ] ;
Code	final double [] out = new double [ LocalizedFormats.DIMENSIONS_MISMATCH_2x2 () ] ;
Distance : 2

50
Tree	final double [] out = new double [ firstNonBottom () ] ;
Code	final double [] out = new double [ firstNonBottom () ] ;
Distance : 2

51
Tree	final double [] out = new double [ normal () ] ;
Code	final double [] out = new double [ normal () ] ;
Distance : 2

52
Tree	final double [] out = new double [ getRuntimeClass () ] ;
Code	final double [] out = new double [ getRuntimeClass () ] ;
Distance : 2

53
Tree	final double [] out = new double [ isModuleScope () ] ;
Code	final double [] out = new double [ isModuleScope () ] ;
Distance : 2

54
Tree	final double [] out = out . min () ;
Code	final double [] out = out . min () ;
Distance : 5

55
Tree	final double [] out = new double [ penalty () ] ;
Code	final double [] out = new double [ penalty () ] ;
Distance : 2

56
Tree	final double [] out = new double [ getReferencedTypeInternal () ] ;
Code	final double [] out = new double [ getReferencedTypeInternal () ] ;
Distance : 2

57
Tree	final double [] out = out . getRowDimension ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . getRowDimension ( NUMBER_CONSTANT ) ;
Distance : 6

58
Tree	final double [] out = new double [ VECTOR_LENGTHS_MISMATCH () ] ;
Code	final double [] out = new double [ VECTOR_LENGTHS_MISMATCH () ] ;
Distance : 2

59
Tree	final double [] out = new double [ bitLength () ] ;
Code	final double [] out = new double [ bitLength () ] ;
Distance : 2

60
Tree	final double [] out = new double [ getPoint () ] ;
Code	final double [] out = new double [ getPoint () ] ;
Distance : 2

61
Tree	final double [] out = new double [ isSubtypeOf () ] ;
Code	final double [] out = new double [ isSubtypeOf () ] ;
Distance : 2

62
Tree	final double [] out = new double [ pow () ] ;
Code	final double [] out = new double [ pow () ] ;
Distance : 2

63
Tree	final double [] out = out . log () ;
Code	final double [] out = out . log () ;
Distance : 5

64
Tree	final double [] out = out . clone ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . clone ( NUMBER_CONSTANT ) ;
Distance : 6

65
Tree	final double [] out = out . append () ;
Code	final double [] out = out . append () ;
Distance : 5

66
Tree	final double [] out = nRows . hashCode ( NUMBER_CONSTANT ) ;
Code	final double [] out = nRows . hashCode ( NUMBER_CONSTANT ) ;
Distance : 6

67
Tree	final double [] out = new double [ canCollapse () ] ;
Code	final double [] out = new double [ canCollapse () ] ;
Distance : 2

68
Tree	final double [] out = out . natural ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . natural ( NUMBER_CONSTANT ) ;
Distance : 6

69
Tree	final double [] out = new double [ getResult () ] ;
Code	final double [] out = new double [ getResult () ] ;
Distance : 2

70
Tree	final double [] out = new double [ xa () ] ;
Code	final double [] out = new double [ xa () ] ;
Distance : 2

71
Tree	final double [] out = new double [ v.length () ] ;
Code	final double [] out = new double [ v.length () ] ;
Distance : 2

72
Tree	final double [] out = nRows . getInstance () ;
Code	final double [] out = nRows . getInstance () ;
Distance : 5

73
Tree	final double [] out = new double [ ToStringStyle () ] ;
Code	final double [] out = new double [ ToStringStyle () ] ;
Distance : 2

74
Tree	final double [] out = new double [ indexRm2 () ] ;
Code	final double [] out = new double [ indexRm2 () ] ;
Distance : 2

75
Tree	final double [] out = new double [ Precision () ] ;
Code	final double [] out = new double [ Precision () ] ;
Distance : 2

76
Tree	final double [] out = nRows . getColumnDimension () ;
Code	final double [] out = nRows . getColumnDimension () ;
Distance : 5

77
Tree	final double [] out = new double [ ArithmeticsUtils () ] ;
Code	final double [] out = new double [ ArithmeticsUtils () ] ;
Distance : 2

78
Tree	final double [] out = new double [ getMean () ] ;
Code	final double [] out = new double [ getMean () ] ;
Distance : 2

79
Tree	final double [] out = new double [ isSubtype () ] ;
Code	final double [] out = new double [ isSubtype () ] ;
Distance : 2

80
Tree	final double [] out = out . getDimension ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . getDimension ( NUMBER_CONSTANT ) ;
Distance : 6

81
Tree	final double [] out = new double [ quote () ] ;
Code	final double [] out = new double [ quote () ] ;
Distance : 2

82
Tree	final double [] out = out . ceil () ;
Code	final double [] out = out . ceil () ;
Distance : 5

83
Tree	final double [] out = new double [ getTextBounds () ] ;
Code	final double [] out = new double [ getTextBounds () ] ;
Distance : 2

84
Tree	final double [] out = new double [ mask () ] ;
Code	final double [] out = new double [ mask () ] ;
Distance : 2

85
Tree	final double [] out = new double [ center () ] ;
Code	final double [] out = new double [ center () ] ;
Distance : 2

86
Tree	final double [] out = new double [ phi () ] ;
Code	final double [] out = new double [ phi () ] ;
Distance : 2

87
Tree	final double [] out = new double [ stringMatcher () ] ;
Code	final double [] out = new double [ stringMatcher () ] ;
Distance : 2

88
Tree	final double [] out = new double [ getDataset () ] ;
Code	final double [] out = new double [ getDataset () ] ;
Distance : 2

89
Tree	final double [] out = new double [ *= () ] ;
Code	final double [] out = new double [ *= () ] ;
Distance : 2

90
Tree	final double [] out = new double [ Evaluation () ] ;
Code	final double [] out = new double [ Evaluation () ] ;
Distance : 2

91
Tree	final double [] out = out . size ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . size ( NUMBER_CONSTANT ) ;
Distance : 6

92
Tree	final double [] out = new double [ isEmptyType () ] ;
Code	final double [] out = new double [ isEmptyType () ] ;
Distance : 2

93
Tree	final double [] out = new double [ transform () ] ;
Code	final double [] out = new double [ transform () ] ;
Distance : 2

94
Tree	final double [] out = nRows . linearCombination () ;
Code	final double [] out = nRows . linearCombination () ;
Distance : 5

95
Tree	final double [] out = new double [ zero () ] ;
Code	final double [] out = new double [ zero () ] ;
Distance : 2

96
Tree	final double [] out = new double [ Origin () ] ;
Code	final double [] out = new double [ Origin () ] ;
Distance : 2

97
Tree	final double [] out = new double [ LocalizedFormats.FUNCTION () ] ;
Code	final double [] out = new double [ LocalizedFormats.FUNCTION () ] ;
Distance : 2

98
Tree	final double [] out = new double [ getType () ] ;
Code	final double [] out = new double [ getType () ] ;
Distance : 2

99
Tree	final double [] out = new double [ isJavaVersionAtLeast () ] ;
Code	final double [] out = new double [ isJavaVersionAtLeast () ] ;
Distance : 2

100
Tree	final double [] out = new double [ getDataRef () ] ;
Code	final double [] out = new double [ getDataRef () ] ;
Distance : 2

101
Tree	final double [] out = new double [ LocalizedFormats.VECTOR_LENGTH_MISMATCH () ] ;
Code	final double [] out = new double [ LocalizedFormats.VECTOR_LENGTH_MISMATCH () ] ;
Distance : 2

102
Tree	final double [] out = new double [ nCols () ] ;
Code	final double [] out = new double [ nCols () ] ;
Distance : 2

103
Tree	final double [] out = new double [ longBitsToDouble () ] ;
Code	final double [] out = new double [ longBitsToDouble () ] ;
Distance : 2

104
Tree	final double [] out = new double [ F_1_2 () ] ;
Code	final double [] out = new double [ F_1_2 () ] ;
Distance : 2

105
Tree	final double [] out = out . hashCode () ;
Code	final double [] out = out . hashCode () ;
Distance : 5

106
Tree	final double [] out = new double [ INDEX_OFFSET () ] ;
Code	final double [] out = new double [ INDEX_OFFSET () ] ;
Distance : 2

107
Tree	final double [] out = new double [ copySign () ] ;
Code	final double [] out = new double [ copySign () ] ;
Distance : 2

108
Tree	final double [] out = new double [ toSpace () ] ;
Code	final double [] out = new double [ toSpace () ] ;
Distance : 2

109
Tree	final double [] out = new double [ getDaysInYearMax () ] ;
Code	final double [] out = new double [ getDaysInYearMax () ] ;
Distance : 2

110
Tree	final double [] out = new double [ cos () ] ;
Code	final double [] out = new double [ cos () ] ;
Distance : 2

111
Tree	final double [] out = new double [ getThisType () ] ;
Code	final double [] out = new double [ getThisType () ] ;
Distance : 2

112
Tree	final double [] out = nRows . valueOf () ;
Code	final double [] out = nRows . valueOf () ;
Distance : 5

113
Tree	final double [] out = new double [ expm1 () ] ;
Code	final double [] out = new double [ expm1 () ] ;
Distance : 2

114
Tree	final double [] out = new double [ linearCombination () ] ;
Code	final double [] out = new double [ linearCombination () ] ;
Distance : 2

115
Tree	final double [] out = new double [ getX () ] ;
Code	final double [] out = new double [ getX () ] ;
Distance : 2

116
Tree	final double [] out = new double [ computeObjectiveValue () ] ;
Code	final double [] out = new double [ computeObjectiveValue () ] ;
Distance : 2

117
Tree	final double [] out = out . getGeneratorUpperBounds () ;
Code	final double [] out = out . getGeneratorUpperBounds () ;
Distance : 5

118
Tree	final double [] out = new double [ FastMath.PI () ] ;
Code	final double [] out = new double [ FastMath.PI () ] ;
Distance : 2

119
Tree	final double [] out = new double [ createAlien () ] ;
Code	final double [] out = new double [ createAlien () ] ;
Distance : 2

120
Tree	final double [] out = new double [ divide () ] ;
Code	final double [] out = new double [ divide () ] ;
Distance : 2

121
Tree	final double [] out = out . valueOf () ;
Code	final double [] out = out . valueOf () ;
Distance : 5

122
Tree	final double [] out = new double [ resolveInternal () ] ;
Code	final double [] out = new double [ resolveInternal () ] ;
Distance : 2

123
Tree	final double [] out = new double [ capacity () ] ;
Code	final double [] out = new double [ capacity () ] ;
Distance : 2

124
Tree	final double [] out = new double [ floor () ] ;
Code	final double [] out = new double [ floor () ] ;
Distance : 2

125
Tree	final double [] out = new double [ F_1_3 () ] ;
Code	final double [] out = new double [ F_1_3 () ] ;
Distance : 2

126
Tree	final double [] out = out . abs () ;
Code	final double [] out = out . abs () ;
Distance : 5

127
Tree	final double [] out = new double [ getDimension () ] ;
Code	final double [] out = new double [ getDimension () ] ;
Distance : 2

128
Tree	final double [] out = new double [ / () ] ;
Code	final double [] out = new double [ / () ] ;
Distance : 2

129
Tree	final double [] out = new double [ nRows ] ;
Code	final double [] out = new double [ nRows ] ;
Distance : 0

130
Tree	final double [] out = new double [ getRowDimension () ] ;
Code	final double [] out = new double [ getRowDimension () ] ;
Distance : 2

131
Tree	final double [] out = new double [ types () ] ;
Code	final double [] out = new double [ types () ] ;
Distance : 2

132
Tree	final double [] out = new double [ ceil () ] ;
Code	final double [] out = new double [ ceil () ] ;
Distance : 2

133
Tree	final double [] out = new double [ f.length () ] ;
Code	final double [] out = new double [ f.length () ] ;
Distance : 2

134
Tree	final double [] out = new double [ fitness () ] ;
Code	final double [] out = new double [ fitness () ] ;
Distance : 2

135
Tree	final double [] out = new double [ data.length () ] ;
Code	final double [] out = new double [ data.length () ] ;
Distance : 2

136
Tree	final double [] out = new double [ min () ] ;
Code	final double [] out = new double [ min () ] ;
Distance : 2

137
Tree	final double [] out = new double [ gcd () ] ;
Code	final double [] out = new double [ gcd () ] ;
Distance : 2

138
Tree	final double [] out = new double [ isSquare () ] ;
Code	final double [] out = new double [ isSquare () ] ;
Distance : 2

139
Tree	final double [] out = new double [ EIGHTHS () ] ;
Code	final double [] out = new double [ EIGHTHS () ] ;
Distance : 2

140
Tree	final double [] out = new double [ getScope () ] ;
Code	final double [] out = new double [ getScope () ] ;
Distance : 2

141
Tree	final double [] out = new double [ getExponent () ] ;
Code	final double [] out = new double [ getExponent () ] ;
Distance : 2

142
Tree	final double [] out = new double [ diff () ] ;
Code	final double [] out = new double [ diff () ] ;
Distance : 2

143
Tree	final double [] out = new double [ IEEEremainder () ] ;
Code	final double [] out = new double [ IEEEremainder () ] ;
Distance : 2

144
Tree	final double [] out = new double [ getMaximumItemWidth () ] ;
Code	final double [] out = new double [ getMaximumItemWidth () ] ;
Distance : 2

145
Tree	final double [] out = new double [ isNaN () ] ;
Code	final double [] out = new double [ isNaN () ] ;
Distance : 2

146
Tree	final double [] out = new double [ exp () ] ;
Code	final double [] out = new double [ exp () ] ;
Distance : 2

147
Tree	final double [] out = new double [ isLocal () ] ;
Code	final double [] out = new double [ isLocal () ] ;
Distance : 2

148
Tree	final double [] out = new double [ mu () ] ;
Code	final double [] out = new double [ mu () ] ;
Distance : 2

149
Tree	final double [] out = new double [ omega () ] ;
Code	final double [] out = new double [ omega () ] ;
Distance : 2

150
Tree	final double [] out = new double [ equal () ] ;
Code	final double [] out = new double [ equal () ] ;
Distance : 2

151
Tree	final double [] out = new double [ HEX_40000000 () ] ;
Code	final double [] out = new double [ HEX_40000000 () ] ;
Distance : 2

152
Tree	final double [] out = out . getColumnDimension () ;
Code	final double [] out = out . getColumnDimension () ;
Distance : 5

153
Tree	final double [] out = new double [ dim () ] ;
Code	final double [] out = new double [ dim () ] ;
Distance : 2

154
Tree	final double [] out = new double [ getStateEstimation () ] ;
Code	final double [] out = new double [ getStateEstimation () ] ;
Distance : 2

155
Tree	final double [] out = new double [ instantiateGenericsWithUnknown () ] ;
Code	final double [] out = new double [ instantiateGenericsWithUnknown () ] ;
Distance : 2

156
Tree	final double [] out = new double [ isShadowingAllowed () ] ;
Code	final double [] out = new double [ isShadowingAllowed () ] ;
Distance : 2

157
Tree	final double [] out = new double [ abs () ] ;
Code	final double [] out = new double [ abs () ] ;
Distance : 2

158
Tree	final double [] out = new double [ getLInfNorm () ] ;
Code	final double [] out = new double [ getLInfNorm () ] ;
Distance : 2

159
Tree	final double [] out = new double [ createSampler () ] ;
Code	final double [] out = new double [ createSampler () ] ;
Distance : 2

160
Tree	final double [] out = new double [ nthHarmonic () ] ;
Code	final double [] out = new double [ nthHarmonic () ] ;
Distance : 2

161
Tree	final double [] out = out . linearCombination () ;
Code	final double [] out = out . linearCombination () ;
Distance : 5

162
Tree	final double [] out = new double [ cov.length () ] ;
Code	final double [] out = new double [ cov.length () ] ;
Distance : 2

163
Tree	final double [] out = out . getInstance () ;
Code	final double [] out = out . getInstance () ;
Distance : 5

164
Tree	final double [] out = out . hashCode ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . hashCode ( NUMBER_CONSTANT ) ;
Distance : 6

165
Tree	final double [] out = new double [ getMaxArity () ] ;
Code	final double [] out = new double [ getMaxArity () ] ;
Distance : 2

166
Tree	final double [] out = new double [ nRows () ] ;
Code	final double [] out = new double [ nRows () ] ;
Distance : 1

167
Tree	final double [] out = nRows . getGeneratorUpperBounds () ;
Code	final double [] out = nRows . getGeneratorUpperBounds () ;
Distance : 5

168
Tree	final double [] out = new double [ deepClone () ] ;
Code	final double [] out = new double [ deepClone () ] ;
Distance : 2

169
Tree	final double [] out = out . copyOf () ;
Code	final double [] out = out . copyOf () ;
Distance : 5

170
Tree	final double [] out = out . lineSeparator () ;
Code	final double [] out = out . lineSeparator () ;
Distance : 5

171
Tree	final double [] out = out . IEEEremainder () ;
Code	final double [] out = out . IEEEremainder () ;
Distance : 5

172
Tree	final double [] out = new double [ probability () ] ;
Code	final double [] out = new double [ probability () ] ;
Distance : 2

173
Tree	final double [] out = new double [ log () ] ;
Code	final double [] out = new double [ log () ] ;
Distance : 2

174
Tree	final double [] out = nRows . abs () ;
Code	final double [] out = nRows . abs () ;
Distance : 5

175
Tree	final double [] out = new double [ distance () ] ;
Code	final double [] out = new double [ distance () ] ;
Distance : 2

176
Tree	final double [] out = out . abs ( NUMBER_CONSTANT ) ;
Code	final double [] out = out . abs ( NUMBER_CONSTANT ) ;
Distance : 6

177
Tree	final double [] out = new double [ w () ] ;
Code	final double [] out = new double [ w () ] ;
Distance : 2

178
Tree	final double [] out = out . getDimension () ;
Code	final double [] out = out . getDimension () ;
Distance : 5

179
Tree	final double [] out = new double [ factorial () ] ;
Code	final double [] out = new double [ factorial () ] ;
Distance : 2

180
Tree	final double [] out = new double [ getCommonTypes () ] ;
Code	final double [] out = new double [ getCommonTypes () ] ;
Distance : 2

181
Tree	final double [] out = new double [ getGoalType () ] ;
Code	final double [] out = new double [ getGoalType () ] ;
Distance : 2

182
Tree	final double [] out = out . size () ;
Code	final double [] out = out . size () ;
Distance : 5

183
Tree	final double [] out = new double [ getInstanceType () ] ;
Code	final double [] out = new double [ getInstanceType () ] ;
Distance : 2

184
Tree	final double [] out = new double [ y0 () ] ;
Code	final double [] out = new double [ y0 () ] ;
Distance : 2

185
Tree	final double [] out = new double [ generalizedHarmonic () ] ;
Code	final double [] out = new double [ generalizedHarmonic () ] ;
Distance : 2

186
Tree	final double [] out = new double [ isInfinite () ] ;
Code	final double [] out = new double [ isInfinite () ] ;
Distance : 2

187
Tree	final double [] out = new double [ d () ] ;
Code	final double [] out = new double [ d () ] ;
Distance : 2

188
Tree	final double [] out = out . getRowDimension () ;
Code	final double [] out = out . getRowDimension () ;
Distance : 5

189
Tree	final double [] out = new double [ derivative () ] ;
Code	final double [] out = new double [ derivative () ] ;
Distance : 2

190
Tree	final double [] out = out . clone () ;
Code	final double [] out = out . clone () ;
Distance : 5

191
Tree	final double [] out = nRows . hashCode () ;
Code	final double [] out = nRows . hashCode () ;
Distance : 5

192
Tree	final double [] out = new double [ isClassOrPrototypeNamedProperty () ] ;
Code	final double [] out = new double [ isClassOrPrototypeNamedProperty () ] ;
Distance : 2

193
Tree	final double [] out = new double [ withEstimationType () ] ;
Code	final double [] out = new double [ withEstimationType () ] ;
Distance : 2

194
Tree	final double [] out = out . natural () ;
Code	final double [] out = out . natural () ;
Distance : 5

195
Tree	final double [] out = new double [ append () ] ;
Code	final double [] out = new double [ append () ] ;
Distance : 2

196
Tree	final double [] out = new double [ that () ] ;
Code	final double [] out = new double [ that () ] ;
Distance : 2

197
Tree	final double [] out = new double [ sample () ] ;
Code	final double [] out = new double [ sample () ] ;
Distance : 2

198
Tree	final double [] out = out . toBooleanObject () ;
Code	final double [] out = out . toBooleanObject () ;
Distance : 5

199
Tree	final double [] out = new double [ getColumnDimension () ] ;
Code	final double [] out = new double [ getColumnDimension () ] ;
Distance : 2

========================================================================


========================================================================
Example Number: 54
Parent Code is: 
int start = getNumObjectiveFunctions () ;
-------------------------------------------------------------------------------
Child code is: 
int start = ignoreObjectiveRows ? getNumObjectiveFunctions () : NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=start}) (204{val==}) (32 (802{val=getNumObjectiveFunctions}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=start}) (204{val==}) (16 (800{val=ignoreObjectiveRows}) (233{val=?}) (32 (802{val=getNumObjectiveFunctions}) (216{val=()})) (226{val=:}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/83/parent/src_main_java_org_apache_commons_math_optimization_linear_SimplexTableau.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int start ;
Code	int start ;
Distance : 7

1
Tree	long &= ;
Code	long &= ;
Distance : 9

2
Tree	char &= ;
Code	char &= ;
Distance : 9

3
Tree	boolean instanceof ;
Code	boolean instanceof ;
Distance : 9

4
Tree	double throws ;
Code	double throws ;
Distance : 9

5
Tree	int createIllegalStateException ;
Code	int createIllegalStateException ;
Distance : 8

6
Tree	void += ;
Code	void += ;
Distance : 9

7
Tree	int && ;
Code	int && ;
Distance : 8

8
Tree	boolean <> ;
Code	boolean <> ;
Distance : 9

9
Tree	float % ;
Code	float % ;
Distance : 9

10
Tree	byte instanceof ;
Code	byte instanceof ;
Distance : 9

11
Tree	long start = getNumObjectiveFunctions ;
Code	long start = getNumObjectiveFunctions ;
Distance : 6

12
Tree	double ^ ;
Code	double ^ ;
Distance : 9

13
Tree	boolean start = getNumObjectiveFunctions ;
Code	boolean start = getNumObjectiveFunctions ;
Distance : 6

14
Tree	double : ;
Code	double : ;
Distance : 8

15
Tree	boolean &= ;
Code	boolean &= ;
Distance : 9

16
Tree	char start = getNumObjectiveFunctions ;
Code	char start = getNumObjectiveFunctions ;
Distance : 6

17
Tree	double createIllegalArgumentException ;
Code	double createIllegalArgumentException ;
Distance : 9

18
Tree	short *= ;
Code	short *= ;
Distance : 9

19
Tree	double / ;
Code	double / ;
Distance : 9

20
Tree	byte >= ;
Code	byte >= ;
Distance : 9

21
Tree	double Nullable ;
Code	double Nullable ;
Distance : 9

22
Tree	double start = start ;
Code	double start = start ;
Distance : 7

23
Tree	byte <> ;
Code	byte <> ;
Distance : 9

24
Tree	double &= ;
Code	double &= ;
Distance : 9

25
Tree	long ++ ;
Code	long ++ ;
Distance : 9

26
Tree	byte -= ;
Code	byte -= ;
Distance : 9

27
Tree	double + ;
Code	double + ;
Distance : 9

28
Tree	boolean ++ ;
Code	boolean ++ ;
Distance : 9

29
Tree	char <> ;
Code	char <> ;
Distance : 9

30
Tree	char >= ;
Code	char >= ;
Distance : 9

31
Tree	byte ++ ;
Code	byte ++ ;
Distance : 9

32
Tree	long >= ;
Code	long >= ;
Distance : 9

33
Tree	long <> ;
Code	long <> ;
Distance : 9

34
Tree	int Before ;
Code	int Before ;
Distance : 8

35
Tree	double & ;
Code	double & ;
Distance : 9

36
Tree	int start = getNumObjectiveFunctions () ;
Code	int start = getNumObjectiveFunctions () ;
Distance : 4

37
Tree	short /= ;
Code	short /= ;
Distance : 9

38
Tree	char instanceof ;
Code	char instanceof ;
Distance : 9

39
Tree	long instanceof ;
Code	long instanceof ;
Distance : 9

40
Tree	double -- ;
Code	double -- ;
Distance : 9

41
Tree	void [] ;
Code	void [] ;
Distance : 9

42
Tree	int [ ;
Code	int [ ;
Distance : 8

43
Tree	boolean >= ;
Code	boolean >= ;
Distance : 9

44
Tree	double <> ;
Code	double <> ;
Distance : 9

45
Tree	float -= ;
Code	float -= ;
Distance : 9

46
Tree	byte &= ;
Code	byte &= ;
Distance : 9

47
Tree	char != ;
Code	char != ;
Distance : 9

48
Tree	int long ;
Code	int long ;
Distance : 8

49
Tree	int char ;
Code	int char ;
Distance : 8

50
Tree	char throws ;
Code	char throws ;
Distance : 9

51
Tree	long throws ;
Code	long throws ;
Distance : 9

52
Tree	int increment ;
Code	int increment ;
Distance : 8

53
Tree	int Origin ;
Code	int Origin ;
Distance : 8

54
Tree	float >= ;
Code	float >= ;
Distance : 9

55
Tree	long ^ ;
Code	long ^ ;
Distance : 9

56
Tree	byte -- ;
Code	byte -- ;
Distance : 9

57
Tree	int start = getNumObjectiveFunctions () - NUMBER_CONSTANT ;
Code	int start = getNumObjectiveFunctions () - NUMBER_CONSTANT ;
Distance : 3

58
Tree	byte + ;
Code	byte + ;
Distance : 9

59
Tree	char ^ ;
Code	char ^ ;
Distance : 9

60
Tree	float <> ;
Code	float <> ;
Distance : 9

61
Tree	byte & ;
Code	byte & ;
Distance : 9

62
Tree	void *= ;
Code	void *= ;
Distance : 9

63
Tree	double %= ;
Code	double %= ;
Distance : 9

64
Tree	int reportChangeToEnclosingScope ;
Code	int reportChangeToEnclosingScope ;
Distance : 8

65
Tree	int start = NUMBER_CONSTANT ;
Code	int start = NUMBER_CONSTANT ;
Distance : 5

66
Tree	int setUp ;
Code	int setUp ;
Distance : 8

67
Tree	float extends ;
Code	float extends ;
Distance : 9

68
Tree	boolean -- ;
Code	boolean -- ;
Distance : 9

69
Tree	boolean & ;
Code	boolean & ;
Distance : 9

70
Tree	long + ;
Code	long + ;
Distance : 9

71
Tree	int mask ;
Code	int mask ;
Distance : 8

72
Tree	char + ;
Code	char + ;
Distance : 9

73
Tree	float ++ ;
Code	float ++ ;
Distance : 9

74
Tree	char -- ;
Code	char -- ;
Distance : 9

75
Tree	long != ;
Code	long != ;
Distance : 9

76
Tree	boolean != ;
Code	boolean != ;
Distance : 9

77
Tree	final [] start = getNumObjectiveFunctions () ;
Code	final [] start = getNumObjectiveFunctions () ;
Distance : 6

78
Tree	long -- ;
Code	long -- ;
Distance : 9

79
Tree	boolean + ;
Code	boolean + ;
Distance : 9

80
Tree	long & ;
Code	long & ;
Distance : 9

81
Tree	double * ;
Code	double * ;
Distance : 9

82
Tree	double {} ;
Code	double {} ;
Distance : 9

83
Tree	byte start = getNumObjectiveFunctions ;
Code	byte start = getNumObjectiveFunctions ;
Distance : 6

84
Tree	char / ;
Code	char / ;
Distance : 9

85
Tree	int hashCode ;
Code	int hashCode ;
Distance : 8

86
Tree	long / ;
Code	long / ;
Distance : 9

87
Tree	void /= ;
Code	void /= ;
Distance : 9

88
Tree	int super ;
Code	int super ;
Distance : 8

89
Tree	int ^= ;
Code	int ^= ;
Distance : 8

90
Tree	boolean -= ;
Code	boolean -= ;
Distance : 9

91
Tree	char & ;
Code	char & ;
Distance : 9

92
Tree	int <= ;
Code	int <= ;
Distance : 8

93
Tree	long += ;
Code	long += ;
Distance : 9

94
Tree	char += ;
Code	char += ;
Distance : 9

95
Tree	double /= ;
Code	double /= ;
Distance : 9

96
Tree	boolean += ;
Code	boolean += ;
Distance : 9

97
Tree	int -= ;
Code	int -= ;
Distance : 8

98
Tree	byte += ;
Code	byte += ;
Distance : 9

99
Tree	int != ;
Code	int != ;
Distance : 8

100
Tree	int start = getNumObjectiveFunctions ;
Code	int start = getNumObjectiveFunctions ;
Distance : 5

101
Tree	float start = NUMBER_CONSTANT ;
Code	float start = NUMBER_CONSTANT ;
Distance : 6

102
Tree	int instanceof ;
Code	int instanceof ;
Distance : 8

103
Tree	short start ;
Code	short start ;
Distance : 8

104
Tree	int ++ ;
Code	int ++ ;
Distance : 8

105
Tree	long /= ;
Code	long /= ;
Distance : 9

106
Tree	char /= ;
Code	char /= ;
Distance : 9

107
Tree	double *= ;
Code	double *= ;
Distance : 9

108
Tree	int >= ;
Code	int >= ;
Distance : 8

109
Tree	int + ;
Code	int + ;
Distance : 8

110
Tree	boolean /= ;
Code	boolean /= ;
Distance : 9

111
Tree	int &= ;
Code	int &= ;
Distance : 8

112
Tree	byte [] ;
Code	byte [] ;
Distance : 9

113
Tree	byte /= ;
Code	byte /= ;
Distance : 9

114
Tree	float start ;
Code	float start ;
Distance : 8

115
Tree	int % ;
Code	int % ;
Distance : 8

116
Tree	int [] ;
Code	int [] ;
Distance : 8

117
Tree	byte extends ;
Code	byte extends ;
Distance : 9

118
Tree	double start ;
Code	double start ;
Distance : 8

119
Tree	double start = NUMBER_CONSTANT ;
Code	double start = NUMBER_CONSTANT ;
Distance : 6

120
Tree	int += ;
Code	int += ;
Distance : 8

121
Tree	double [] ;
Code	double [] ;
Distance : 9

122
Tree	long start ;
Code	long start ;
Distance : 8

123
Tree	boolean start ;
Code	boolean start ;
Distance : 8

124
Tree	char start ;
Code	char start ;
Distance : 8

125
Tree	int /= ;
Code	int /= ;
Distance : 8

126
Tree	byte start ;
Code	byte start ;
Distance : 8

127
Tree	double += ;
Code	double += ;
Distance : 9

128
Tree	long start = NUMBER_CONSTANT ;
Code	long start = NUMBER_CONSTANT ;
Distance : 6

129
Tree	boolean start = NUMBER_CONSTANT ;
Code	boolean start = NUMBER_CONSTANT ;
Distance : 6

130
Tree	char start = NUMBER_CONSTANT ;
Code	char start = NUMBER_CONSTANT ;
Distance : 6

131
Tree	int *= ;
Code	int *= ;
Distance : 8

132
Tree	long [] ;
Code	long [] ;
Distance : 9

133
Tree	boolean [] ;
Code	boolean [] ;
Distance : 9

134
Tree	char [] ;
Code	char [] ;
Distance : 9

135
Tree	int extends ;
Code	int extends ;
Distance : 8

136
Tree	float [] ;
Code	float [] ;
Distance : 9

137
Tree	byte start = NUMBER_CONSTANT ;
Code	byte start = NUMBER_CONSTANT ;
Distance : 6

138
Tree	final int start = getNumObjectiveFunctions () ;
Code	final int start = getNumObjectiveFunctions () ;
Distance : 5

139
Tree	long % ;
Code	long % ;
Distance : 9

140
Tree	char % ;
Code	char % ;
Distance : 9

141
Tree	int {} ;
Code	int {} ;
Distance : 8

142
Tree	long extends ;
Code	long extends ;
Distance : 9

143
Tree	double ++ ;
Code	double ++ ;
Distance : 9

144
Tree	double instanceof ;
Code	double instanceof ;
Distance : 9

145
Tree	short += ;
Code	short += ;
Distance : 9

146
Tree	boolean % ;
Code	boolean % ;
Distance : 9

147
Tree	char extends ;
Code	char extends ;
Distance : 9

148
Tree	long -= ;
Code	long -= ;
Distance : 9

149
Tree	int * ;
Code	int * ;
Distance : 8

150
Tree	double >= ;
Code	double >= ;
Distance : 9

151
Tree	boolean extends ;
Code	boolean extends ;
Distance : 9

152
Tree	float *= ;
Code	float *= ;
Distance : 9

153
Tree	void start = NUMBER_CONSTANT ;
Code	void start = NUMBER_CONSTANT ;
Distance : 6

154
Tree	byte % ;
Code	byte % ;
Distance : 9

155
Tree	int <> ;
Code	int <> ;
Distance : 8

156
Tree	int %= ;
Code	int %= ;
Distance : 8

157
Tree	char ++ ;
Code	char ++ ;
Distance : 9

158
Tree	int : ;
Code	int : ;
Distance : 7

159
Tree	double != ;
Code	double != ;
Distance : 9

160
Tree	char -= ;
Code	char -= ;
Distance : 9

161
Tree	double start = getNumObjectiveFunctions ;
Code	double start = getNumObjectiveFunctions ;
Distance : 6

162
Tree	char *= ;
Code	char *= ;
Distance : 9

163
Tree	long *= ;
Code	long *= ;
Distance : 9

164
Tree	float /= ;
Code	float /= ;
Distance : 9

165
Tree	short start = NUMBER_CONSTANT ;
Code	short start = NUMBER_CONSTANT ;
Distance : 6

166
Tree	double extends ;
Code	double extends ;
Distance : 9

167
Tree	int & ;
Code	int & ;
Distance : 8

168
Tree	double % ;
Code	double % ;
Distance : 9

169
Tree	int -- ;
Code	int -- ;
Distance : 8

170
Tree	boolean *= ;
Code	boolean *= ;
Distance : 9

171
Tree	byte *= ;
Code	byte *= ;
Distance : 9

172
Tree	float += ;
Code	float += ;
Distance : 9

173
Tree	int / ;
Code	int / ;
Distance : 8

174
Tree	void start ;
Code	void start ;
Distance : 8

175
Tree	int throws ;
Code	int throws ;
Distance : 8

176
Tree	double -= ;
Code	double -= ;
Distance : 9

177
Tree	int Nullable ;
Code	int Nullable ;
Distance : 8

178
Tree	int ^ ;
Code	int ^ ;
Distance : 8

179
Tree	int createIllegalArgumentException ;
Code	int createIllegalArgumentException ;
Distance : 8

180
Tree	int start = start ;
Code	int start = start ;
Distance : 6

181
Tree	short [] ;
Code	short [] ;
Distance : 9

182
Tree	int start = getNumObjectiveFunctions ; StringBuilder
Code	int start = getNumObjectiveFunctions ; StringBuilder
Distance : 6

183
Tree	int start = getNumObjectiveFunctions ; checkState
Code	int start = getNumObjectiveFunctions ; checkState
Distance : 6

184
Tree	int start = getNumObjectiveFunctions ; double
Code	int start = getNumObjectiveFunctions ; double
Distance : 6

185
Tree	int start = getNumObjectiveFunctions ; super
Code	int start = getNumObjectiveFunctions ; super
Distance : 6

186
Tree	int start = getNumObjectiveFunctions ; *
Code	int start = getNumObjectiveFunctions ; *
Distance : 6

187
Tree	int start = getNumObjectiveFunctions ; type
Code	int start = getNumObjectiveFunctions ; type
Distance : 6

188
Tree	int start = getNumObjectiveFunctions ; paint
Code	int start = getNumObjectiveFunctions ; paint
Distance : 6

189
Tree	int start = getNumObjectiveFunctions ; join
Code	int start = getNumObjectiveFunctions ; join
Distance : 6

190
Tree	int start = getNumObjectiveFunctions ; return;
Code	int start = getNumObjectiveFunctions ; return;
Distance : 6

191
Tree	int start = getNumObjectiveFunctions ; mockingProgress
Code	int start = getNumObjectiveFunctions ; mockingProgress
Distance : 6

192
Tree	int start = getNumObjectiveFunctions ; !=
Code	int start = getNumObjectiveFunctions ; !=
Distance : 6

193
Tree	int start = getNumObjectiveFunctions ; isEmpty
Code	int start = getNumObjectiveFunctions ; isEmpty
Distance : 6

194
Tree	int start = getNumObjectiveFunctions ; []
Code	int start = getNumObjectiveFunctions ; []
Distance : 6

195
Tree	int start = getNumObjectiveFunctions ; JSType
Code	int start = getNumObjectiveFunctions ; JSType
Distance : 6

196
Tree	int start = getNumObjectiveFunctions ; class
Code	int start = getNumObjectiveFunctions ; class
Distance : 6

197
Tree	int start = getNumObjectiveFunctions ; <blank>
Code	int start = getNumObjectiveFunctions ; <blank>
Distance : 6

198
Tree	int start = getNumObjectiveFunctions ; start
Code	int start = getNumObjectiveFunctions ; start
Distance : 6

199
Tree	int start = getNumObjectiveFunctions ; <s>
Code	int start = getNumObjectiveFunctions ; <s>
Distance : 6

========================================================================


========================================================================
Example Number: 55
Parent Code is: 
int j = NUMBER_CONSTANT * n - NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Child code is: 
int j = NUMBER_CONSTANT * ( n - NUMBER_CONSTANT ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=j}) (204{val==}) (27 (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (800{val=n})) (201{val=-}) (34{val=NUMBER_CONSTANT}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=j}) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (800{val=n}) (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/80/parent/src_main_java_org_apache_commons_math_linear_EigenDecompositionImpl.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int j = NUMBER_CONSTANT * n - j ;
Code	int j = NUMBER_CONSTANT * n - j ;
Distance : 3

1
Tree	short j = n / j - n ;
Code	short j = n / j - n ;
Distance : 7

2
Tree	boolean j = NUMBER_CONSTANT * j - n ;
Code	boolean j = NUMBER_CONSTANT * j - n ;
Distance : 5

3
Tree	void j = n / j - n ;
Code	void j = n / j - n ;
Distance : 7

4
Tree	short j = n / n - n ;
Code	short j = n / n - n ;
Distance : 6

5
Tree	double j = j / j - j ;
Code	double j = j / j - j ;
Distance : 7

6
Tree	int n = NUMBER_CONSTANT * n - j ;
Code	int n = NUMBER_CONSTANT * n - j ;
Distance : 4

7
Tree	void j = n / n - n ;
Code	void j = n / n - n ;
Distance : 6

8
Tree	void j = n * n - j ;
Code	void j = n * n - j ;
Distance : 5

9
Tree	char j = NUMBER_CONSTANT * j - j ;
Code	char j = NUMBER_CONSTANT * j - j ;
Distance : 5

10
Tree	short j = n * j - n ;
Code	short j = n * j - n ;
Distance : 6

11
Tree	double j = j / n - j ;
Code	double j = j / n - j ;
Distance : 6

12
Tree	float j = NUMBER_CONSTANT * j - j ;
Code	float j = NUMBER_CONSTANT * j - j ;
Distance : 5

13
Tree	short j = n * n - n ;
Code	short j = n * n - n ;
Distance : 5

14
Tree	void j = n * j - n ;
Code	void j = n * j - n ;
Distance : 6

15
Tree	int n = n / j - j ;
Code	int n = n / j - j ;
Distance : 7

16
Tree	byte j = NUMBER_CONSTANT * j - n ;
Code	byte j = NUMBER_CONSTANT * j - n ;
Distance : 5

17
Tree	long j = j / j - j ;
Code	long j = j / j - j ;
Distance : 7

18
Tree	int j = j & NUMBER_CONSTANT ;
Code	int j = j & NUMBER_CONSTANT ;
Distance : 6

19
Tree	void j = n * j - j ;
Code	void j = n * j - j ;
Distance : 6

20
Tree	float j = n & NUMBER_CONSTANT ;
Code	float j = n & NUMBER_CONSTANT ;
Distance : 6

21
Tree	void j = n / j - j ;
Code	void j = n / j - j ;
Distance : 7

22
Tree	float j = n / n - n ;
Code	float j = n / n - n ;
Distance : 6

23
Tree	short j = n / n - j ;
Code	short j = n / n - j ;
Distance : 6

24
Tree	int j = j / n - n ;
Code	int j = j / n - n ;
Distance : 5

25
Tree	char j = n * j - n ;
Code	char j = n * j - n ;
Distance : 6

26
Tree	char j = n * n - n ;
Code	char j = n * n - n ;
Distance : 5

27
Tree	void j = n / n - j ;
Code	void j = n / n - j ;
Distance : 6

28
Tree	short j = NUMBER_CONSTANT * n - n ;
Code	short j = NUMBER_CONSTANT * n - n ;
Distance : 4

29
Tree	float j = n * j - n ;
Code	float j = n * j - n ;
Distance : 6

30
Tree	float j = n * n - n ;
Code	float j = n * n - n ;
Distance : 5

31
Tree	short j = n * j - j ;
Code	short j = n * j - j ;
Distance : 6

32
Tree	byte j = NUMBER_CONSTANT * j - j ;
Code	byte j = NUMBER_CONSTANT * j - j ;
Distance : 5

33
Tree	char j = n & NUMBER_CONSTANT ;
Code	char j = n & NUMBER_CONSTANT ;
Distance : 6

34
Tree	short j = n * n - j ;
Code	short j = n * n - j ;
Distance : 5

35
Tree	int j = j * j - n ;
Code	int j = j * j - n ;
Distance : 5

36
Tree	void j = NUMBER_CONSTANT * n - n ;
Code	void j = NUMBER_CONSTANT * n - n ;
Distance : 4

37
Tree	int j = j * n - n ;
Code	int j = j * n - n ;
Distance : 4

38
Tree	short j = n & NUMBER_CONSTANT ;
Code	short j = n & NUMBER_CONSTANT ;
Distance : 6

39
Tree	void j = n * n - n ;
Code	void j = n * n - n ;
Distance : 5

40
Tree	double j = j * j - j ;
Code	double j = j * j - j ;
Distance : 6

41
Tree	long j = j / n - j ;
Code	long j = j / n - j ;
Distance : 6

42
Tree	double j = j & NUMBER_CONSTANT ;
Code	double j = j & NUMBER_CONSTANT ;
Distance : 7

43
Tree	int j = RandomNameGenerator.FIRST_CHAR n j - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n j - j ;
Distance : 6

44
Tree	int j = MathUtils.TWO_PI n j - n ;
Code	int j = MathUtils.TWO_PI n j - n ;
Distance : 6

45
Tree	boolean j = j / n - j ;
Code	boolean j = j / n - j ;
Distance : 6

46
Tree	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.ZERO_NORM - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.ZERO_NORM - n ;
Distance : 6

47
Tree	int j = RandomNameGenerator.FIRST_CHAR * LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR * LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Distance : 5

48
Tree	double n = NUMBER_CONSTANT * n - j ;
Code	double n = NUMBER_CONSTANT * n - j ;
Distance : 5

49
Tree	long j = j * j - n ;
Code	long j = j * j - n ;
Distance : 6

50
Tree	int n = n * j - n ;
Code	int n = n * j - n ;
Distance : 6

51
Tree	long j = j * n - n ;
Code	long j = j * n - n ;
Distance : 5

52
Tree	int j = MathUtils.TWO_PI n j - j ;
Code	int j = MathUtils.TWO_PI n j - j ;
Distance : 6

53
Tree	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.ZERO_NORM - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.ZERO_NORM - j ;
Distance : 6

54
Tree	int j = data.length n j - n ;
Code	int j = data.length n j - n ;
Distance : 6

55
Tree	int n = n * n - n ;
Code	int n = n * n - n ;
Distance : 5

56
Tree	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Distance : 6

57
Tree	long j = j & NUMBER_CONSTANT ;
Code	long j = j & NUMBER_CONSTANT ;
Distance : 7

58
Tree	int j = n / j - j ;
Code	int j = n / j - j ;
Distance : 6

59
Tree	int n = n / n - n ;
Code	int n = n / n - n ;
Distance : 6

60
Tree	int j = j / j - n ;
Code	int j = j / j - n ;
Distance : 6

61
Tree	double j = j * n - n ;
Code	double j = j * n - n ;
Distance : 5

62
Tree	int j = RandomNameGenerator.FIRST_CHAR n j - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n j - n ;
Distance : 6

63
Tree	double j = j * n - j ;
Code	double j = j * n - j ;
Distance : 5

64
Tree	void j = n & NUMBER_CONSTANT ;
Code	void j = n & NUMBER_CONSTANT ;
Distance : 6

65
Tree	int n = n / n - j ;
Code	int n = n / n - j ;
Distance : 6

66
Tree	long j = j * j - j ;
Code	long j = j * j - j ;
Distance : 6

67
Tree	double j = j / j - n ;
Code	double j = j / j - n ;
Distance : 7

68
Tree	long j = j * n - j ;
Code	long j = j * n - j ;
Distance : 5

69
Tree	int n = NUMBER_CONSTANT * n - n ;
Code	int n = NUMBER_CONSTANT * n - n ;
Distance : 4

70
Tree	int n = n * j - j ;
Code	int n = n * j - j ;
Distance : 6

71
Tree	int n = n * n - j ;
Code	int n = n * n - j ;
Distance : 5

72
Tree	double j = j / n - n ;
Code	double j = j / n - n ;
Distance : 6

73
Tree	long j = j / j - n ;
Code	long j = j / j - n ;
Distance : 7

74
Tree	char j = NUMBER_CONSTANT * j - n ;
Code	char j = NUMBER_CONSTANT * j - n ;
Distance : 5

75
Tree	short j = NUMBER_CONSTANT * j - j ;
Code	short j = NUMBER_CONSTANT * j - j ;
Distance : 5

76
Tree	float j = NUMBER_CONSTANT * j - n ;
Code	float j = NUMBER_CONSTANT * j - n ;
Distance : 5

77
Tree	int n = n / j - n ;
Code	int n = n / j - n ;
Distance : 7

78
Tree	void j = NUMBER_CONSTANT * j - j ;
Code	void j = NUMBER_CONSTANT * j - j ;
Distance : 5

79
Tree	boolean j = j / j - j ;
Code	boolean j = j / j - j ;
Distance : 7

80
Tree	long j = j / n - n ;
Code	long j = j / n - n ;
Distance : 6

81
Tree	char j = n / n - n ;
Code	char j = n / n - n ;
Distance : 6

82
Tree	double j = j * j - n ;
Code	double j = j * j - n ;
Distance : 6

83
Tree	byte j = n & NUMBER_CONSTANT ;
Code	byte j = n & NUMBER_CONSTANT ;
Distance : 6

84
Tree	double j = n / j - n ;
Code	double j = n / j - n ;
Distance : 7

85
Tree	boolean j = NUMBER_CONSTANT * n - j ;
Code	boolean j = NUMBER_CONSTANT * n - j ;
Distance : 4

86
Tree	long j = n * n - j ;
Code	long j = n * n - j ;
Distance : 5

87
Tree	double j = n / n - n ;
Code	double j = n / n - n ;
Distance : 6

88
Tree	long j = n / j - n ;
Code	long j = n / j - n ;
Distance : 7

89
Tree	boolean j = n / j - j ;
Code	boolean j = n / j - j ;
Distance : 7

90
Tree	long j = n / n - n ;
Code	long j = n / n - n ;
Distance : 6

91
Tree	long j = n * j - j ;
Code	long j = n * j - j ;
Distance : 6

92
Tree	double j = n * j - n ;
Code	double j = n * j - n ;
Distance : 6

93
Tree	int j = NUMBER_CONSTANT * j - n ;
Code	int j = NUMBER_CONSTANT * j - n ;
Distance : 4

94
Tree	boolean j = n / n - j ;
Code	boolean j = n / n - j ;
Distance : 6

95
Tree	byte j = NUMBER_CONSTANT * n - j ;
Code	byte j = NUMBER_CONSTANT * n - j ;
Distance : 4

96
Tree	double j = n & NUMBER_CONSTANT ;
Code	double j = n & NUMBER_CONSTANT ;
Distance : 6

97
Tree	long j = n * j - n ;
Code	long j = n * j - n ;
Distance : 6

98
Tree	long j = n * n - n ;
Code	long j = n * n - n ;
Distance : 5

99
Tree	boolean j = NUMBER_CONSTANT * n - n ;
Code	boolean j = NUMBER_CONSTANT * n - n ;
Distance : 4

100
Tree	double j = n * n - n ;
Code	double j = n * n - n ;
Distance : 5

101
Tree	long j = NUMBER_CONSTANT * n - n ;
Code	long j = NUMBER_CONSTANT * n - n ;
Distance : 4

102
Tree	double j = n * n - j ;
Code	double j = n * n - j ;
Distance : 5

103
Tree	double j = n * j - j ;
Code	double j = n * j - j ;
Distance : 6

104
Tree	int j = n / n - j ;
Code	int j = n / n - j ;
Distance : 5

105
Tree	float j = n / j - n ;
Code	float j = n / j - n ;
Distance : 7

106
Tree	int j = NUMBER_CONSTANT * n - n ;
Code	int j = NUMBER_CONSTANT * n - n ;
Distance : 3

107
Tree	int j = n * j - j ;
Code	int j = n * j - j ;
Distance : 5

108
Tree	int j = n * n - j ;
Code	int j = n * n - j ;
Distance : 4

109
Tree	int j = n / j - n ;
Code	int j = n / j - n ;
Distance : 6

110
Tree	int j = n / n - n ;
Code	int j = n / n - n ;
Distance : 5

111
Tree	double j = NUMBER_CONSTANT * n - j ;
Code	double j = NUMBER_CONSTANT * n - j ;
Distance : 4

112
Tree	int j = n * j - n ;
Code	int j = n * j - n ;
Distance : 5

113
Tree	int j = n * n - n ;
Code	int j = n * n - n ;
Distance : 4

114
Tree	int j = n & NUMBER_CONSTANT ;
Code	int j = n & NUMBER_CONSTANT ;
Distance : 5

115
Tree	double j = n / j - j ;
Code	double j = n / j - j ;
Distance : 7

116
Tree	double j = n / n - j ;
Code	double j = n / n - j ;
Distance : 6

117
Tree	long j = n / j - j ;
Code	long j = n / j - j ;
Distance : 7

118
Tree	long j = n / n - j ;
Code	long j = n / n - j ;
Distance : 6

119
Tree	double j = NUMBER_CONSTANT * n - n ;
Code	double j = NUMBER_CONSTANT * n - n ;
Distance : 4

120
Tree	int j = NUMBER_CONSTANT * j - j ;
Code	int j = NUMBER_CONSTANT * j - j ;
Distance : 4

121
Tree	long j = n & NUMBER_CONSTANT ;
Code	long j = n & NUMBER_CONSTANT ;
Distance : 6

122
Tree	boolean j = n * j - j ;
Code	boolean j = n * j - j ;
Distance : 6

123
Tree	long j = NUMBER_CONSTANT * n - j ;
Code	long j = NUMBER_CONSTANT * n - j ;
Distance : 4

124
Tree	byte j = n / j - j ;
Code	byte j = n / j - j ;
Distance : 7

125
Tree	int j = j / n - j ;
Code	int j = j / n - j ;
Distance : 5

126
Tree	short j = NUMBER_CONSTANT * n - j ;
Code	short j = NUMBER_CONSTANT * n - j ;
Distance : 4

127
Tree	char j = n * j - j ;
Code	char j = n * j - j ;
Distance : 6

128
Tree	double j = NUMBER_CONSTANT * j - n ;
Code	double j = NUMBER_CONSTANT * j - n ;
Distance : 5

129
Tree	char j = n * n - j ;
Code	char j = n * n - j ;
Distance : 5

130
Tree	float j = NUMBER_CONSTANT * n - n ;
Code	float j = NUMBER_CONSTANT * n - n ;
Distance : 4

131
Tree	float j = n * j - j ;
Code	float j = n * j - j ;
Distance : 6

132
Tree	void j = NUMBER_CONSTANT * n - j ;
Code	void j = NUMBER_CONSTANT * n - j ;
Distance : 4

133
Tree	byte j = n * j - n ;
Code	byte j = n * j - n ;
Distance : 6

134
Tree	int j = j * j - j ;
Code	int j = j * j - j ;
Distance : 5

135
Tree	byte j = n * n - n ;
Code	byte j = n * n - n ;
Distance : 5

136
Tree	long j = NUMBER_CONSTANT * j - n ;
Code	long j = NUMBER_CONSTANT * j - n ;
Distance : 5

137
Tree	char j = n / j - n ;
Code	char j = n / j - n ;
Distance : 7

138
Tree	int j = j * n - j ;
Code	int j = j * n - j ;
Distance : 4

139
Tree	short j = n / j - j ;
Code	short j = n / j - j ;
Distance : 7

140
Tree	boolean j = n * n - j ;
Code	boolean j = n * n - j ;
Distance : 5

141
Tree	boolean j = NUMBER_CONSTANT * j - j ;
Code	boolean j = NUMBER_CONSTANT * j - j ;
Distance : 5

142
Tree	char j = NUMBER_CONSTANT * n - n ;
Code	char j = NUMBER_CONSTANT * n - n ;
Distance : 4

143
Tree	byte j = n / n - n ;
Code	byte j = n / n - n ;
Distance : 6

144
Tree	float j = n * n - j ;
Code	float j = n * n - j ;
Distance : 5

145
Tree	float j = n / n - j ;
Code	float j = n / n - j ;
Distance : 6

146
Tree	boolean j = n / j - n ;
Code	boolean j = n / j - n ;
Distance : 7

147
Tree	char j = NUMBER_CONSTANT * n - j ;
Code	char j = NUMBER_CONSTANT * n - j ;
Distance : 4

148
Tree	double j = NUMBER_CONSTANT * j - j ;
Code	double j = NUMBER_CONSTANT * j - j ;
Distance : 5

149
Tree	float j = NUMBER_CONSTANT * n - j ;
Code	float j = NUMBER_CONSTANT * n - j ;
Distance : 4

150
Tree	boolean j = n / n - n ;
Code	boolean j = n / n - n ;
Distance : 6

151
Tree	long j = NUMBER_CONSTANT * j - j ;
Code	long j = NUMBER_CONSTANT * j - j ;
Distance : 5

152
Tree	byte j = NUMBER_CONSTANT * n - n ;
Code	byte j = NUMBER_CONSTANT * n - n ;
Distance : 4

153
Tree	byte j = n * j - j ;
Code	byte j = n * j - j ;
Distance : 6

154
Tree	byte j = n * n - j ;
Code	byte j = n * n - j ;
Distance : 5

155
Tree	byte j = n / n - j ;
Code	byte j = n / n - j ;
Distance : 6

156
Tree	char j = n / j - j ;
Code	char j = n / j - j ;
Distance : 7

157
Tree	boolean j = n & NUMBER_CONSTANT ;
Code	boolean j = n & NUMBER_CONSTANT ;
Distance : 6

158
Tree	int j = j / j - j ;
Code	int j = j / j - j ;
Distance : 6

159
Tree	byte j = n / j - n ;
Code	byte j = n / j - n ;
Distance : 7

160
Tree	char j = n / n - j ;
Code	char j = n / n - j ;
Distance : 6

161
Tree	boolean j = n * n - n ;
Code	boolean j = n * n - n ;
Distance : 5

162
Tree	boolean j = n * j - n ;
Code	boolean j = n * j - n ;
Distance : 6

163
Tree	float j = n / j - j ;
Code	float j = n / j - j ;
Distance : 7

164
Tree	int j = org.joda.time.gwt.util.Arrays n LocalizedFormats.ZERO_NORM - j ;
Code	int j = org.joda.time.gwt.util.Arrays n LocalizedFormats.ZERO_NORM - j ;
Distance : 6

165
Tree	long n = n / n - j ;
Code	long n = n / n - j ;
Distance : 7

166
Tree	int j = org.mockito.creation.instance.InstantiationException n j - j ;
Code	int j = org.mockito.creation.instance.InstantiationException n j - j ;
Distance : 6

167
Tree	int j = RandomNameGenerator.FIRST_CHAR n CharRange - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n CharRange - n ;
Distance : 6

168
Tree	int j = SystemUtils.JAVA_VERSION n j - j ;
Code	int j = SystemUtils.JAVA_VERSION n j - j ;
Distance : 6

169
Tree	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.NO_REGRESSORS - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n LocalizedFormats.NO_REGRESSORS - j ;
Distance : 6

170
Tree	int j = coefficients.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Code	int j = coefficients.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Distance : 6

171
Tree	int j = LazyHolder.FACTORY n j - j ;
Code	int j = LazyHolder.FACTORY n j - j ;
Distance : 6

172
Tree	int j = source.moment n LocalizedFormats.ZERO_NORM - n ;
Code	int j = source.moment n LocalizedFormats.ZERO_NORM - n ;
Distance : 6

173
Tree	int j = RandomNameGenerator.FIRST_CHAR n unexpectedException - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n unexpectedException - j ;
Distance : 6

174
Tree	int j = Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES n j - n ;
Code	int j = Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES n j - n ;
Distance : 6

175
Tree	int j = buildUndesiredInvocationCause n j - n ;
Code	int j = buildUndesiredInvocationCause n j - n ;
Distance : 6

176
Tree	int j = Coordinates3D.POSITIVE_INFINITY n j - j ;
Code	int j = Coordinates3D.POSITIVE_INFINITY n j - j ;
Distance : 6

177
Tree	int j = Cartesian2D.NEGATIVE_INFINITY n LocalizedFormats.ZERO_NORM - n ;
Code	int j = Cartesian2D.NEGATIVE_INFINITY n LocalizedFormats.ZERO_NORM - n ;
Distance : 6

178
Tree	int j = RandomNameGenerator.FIRST_CHAR int den - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR int den - n ;
Distance : 6

179
Tree	int j = FACT.length n LocalizedFormats.ZERO_NORM - j ;
Code	int j = FACT.length n LocalizedFormats.ZERO_NORM - j ;
Distance : 6

180
Tree	int j = Long.MAX_VALUE n j - n ;
Code	int j = Long.MAX_VALUE n j - n ;
Distance : 6

181
Tree	int j = source.incMoment n LocalizedFormats.ZERO_NORM - j ;
Code	int j = source.incMoment n LocalizedFormats.ZERO_NORM - j ;
Distance : 6

182
Tree	double n = NUMBER_CONSTANT * n - n ;
Code	double n = NUMBER_CONSTANT * n - n ;
Distance : 5

183
Tree	int j = RandomNameGenerator.FIRST_CHAR n mask - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n mask - n ;
Distance : 6

184
Tree	int j = RandomNameGenerator.FIRST_CHAR n currentState.length - j ;
Code	int j = RandomNameGenerator.FIRST_CHAR n currentState.length - j ;
Distance : 6

185
Tree	int j = lhs.length n j - n ;
Code	int j = lhs.length n j - n ;
Distance : 6

186
Tree	int j = aliasRefs.references n j - n ;
Code	int j = aliasRefs.references n j - n ;
Distance : 6

187
Tree	int j = StandardBasicTypes.DATE int j - n ;
Code	int j = StandardBasicTypes.DATE int j - n ;
Distance : 6

188
Tree	int j = set.length n j - n ;
Code	int j = set.length n j - n ;
Distance : 6

189
Tree	int j = org.joda.time.gwt.util.Arrays n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Code	int j = org.joda.time.gwt.util.Arrays n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - j ;
Distance : 6

190
Tree	int j = RandomNameGenerator.FIRST_CHAR n minor - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n minor - n ;
Distance : 6

191
Tree	int j = source.isBiasCorrected n j - n ;
Code	int j = source.isBiasCorrected n j - n ;
Distance : 6

192
Tree	int j = Calendar.ZONE_OFFSET int j - n ;
Code	int j = Calendar.ZONE_OFFSET int j - n ;
Distance : 6

193
Tree	int j = RandomNameGenerator.FIRST_CHAR n CAUSE_METHOD_NAMES_LOCK - n ;
Code	int j = RandomNameGenerator.FIRST_CHAR n CAUSE_METHOD_NAMES_LOCK - n ;
Distance : 6

194
Tree	int j = v.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Code	int j = v.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Distance : 6

195
Tree	int j = source.variance n LocalizedFormats.ZERO_NORM - n ;
Code	int j = source.variance n LocalizedFormats.ZERO_NORM - n ;
Distance : 6

196
Tree	int j = Cartesian2D.NEGATIVE_INFINITY n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Code	int j = Cartesian2D.NEGATIVE_INFINITY n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Distance : 6

197
Tree	int j = problem.y n LocalizedFormats.ZERO_NORM - n ;
Code	int j = problem.y n LocalizedFormats.ZERO_NORM - n ;
Distance : 6

198
Tree	int j = chars.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Code	int j = chars.length n LocalizedFormats.UNABLE_TO_PERFORM_QR_DECOMPOSITION_ON_JACOBIAN - n ;
Distance : 6

199
Tree	int j = Precision.EPSILON n j - n ;
Code	int j = Precision.EPSILON n j - n ;
Distance : 6

========================================================================


========================================================================
Example Number: 56
Parent Code is: 
{ return getCumPct ( ( Comparable < > ) v ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return getPct ( ( Comparable < > ) v ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getCumPct}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (215{val=)}) (800{val=v})) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=getPct}) (214{val=(}) (11 (214{val=(}) (74 (43 (800{val=Comparable})) (230{val=<}) (76{val=?}) (231{val=>})) (215{val=)}) (800{val=v})) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/75/parent/src_main_java_org_apache_commons_math_stat_Frequency.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return getCumPct ( ( ( Comparable ) v ) . v ) ; }
Code	{ return getCumPct ( ( ( Comparable ) v ) . v ) ; }
Distance : 5

1
Tree	{ return getCumPct ( ( Comparable < Comparable > ) value ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) value ) ; }
Distance : 3

2
Tree	{ return getCumPct ( ( Comparable < Comparable > ) isAssign ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) isAssign ) ; }
Distance : 3

3
Tree	{ return getCumPct ( ( Comparable < Comparable > ) g1 ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) g1 ) ; }
Distance : 3

4
Tree	{ return getCumPct ( ( Comparable < Comparable > ) - ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) - ) ; }
Distance : 3

5
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Date ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Date ) ; }
Distance : 3

6
Tree	{ return getCumPct ( ( Comparable < Comparable > ) inOrderMode ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) inOrderMode ) ; }
Distance : 3

7
Tree	{ return getCumPct ( ( Comparable < Comparable > ) inIncrementalCheckMode ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) inIncrementalCheckMode ) ; }
Distance : 3

8
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getTypeI ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getTypeI ) ; }
Distance : 3

9
Tree	{ return getCumPct ( ( Comparable < Comparable > ) parseMillis ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) parseMillis ) ; }
Distance : 3

10
Tree	{ return getCumPct ( ( v < Comparable > ) * ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) * ) ; }
Distance : 4

11
Tree	{ return getCumPct ( ( Comparable < Comparable > ) removeAll ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) removeAll ) ; }
Distance : 3

12
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Color.BLUE ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Color.BLUE ) ; }
Distance : 3

13
Tree	{ return getCumPct ( ( Comparable < Comparable > ) removeLocalVars ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) removeLocalVars ) ; }
Distance : 3

14
Tree	{ return getCumPct ( ( Comparable < Comparable > ) short ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) short ) ; }
Distance : 3

15
Tree	{ return getPct ( ( ( Comparable ) Comparable ) . v ) ; }
Code	{ return getPct ( ( ( Comparable ) Comparable ) . v ) ; }
Distance : 4

16
Tree	{ return getCumPct ( ( Comparable < Comparable > ) InternalParser ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) InternalParser ) ; }
Distance : 3

17
Tree	{ return getCumPct ( ( Comparable < Comparable > ) emptyList ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) emptyList ) ; }
Distance : 3

18
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Cartesian1D ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Cartesian1D ) ; }
Distance : 3

19
Tree	{ return getCumPct ( ( Comparable < Comparable > ) element ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) element ) ; }
Distance : 3

20
Tree	{ return getCumPct ( ( Comparable < Comparable > ) AbstractCompiler ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) AbstractCompiler ) ; }
Distance : 3

21
Tree	{ return getCumPct ( ( Comparable < Comparable > ) blind ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) blind ) ; }
Distance : 3

22
Tree	{ return getCumPct ( ( Comparable < Comparable > ) StringBuffer ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) StringBuffer ) ; }
Distance : 3

23
Tree	{ return getCumPct ( ( Comparable < Comparable > ) b ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) b ) ; }
Distance : 3

24
Tree	{ return getCumPct ( ( Comparable < Comparable > ) real ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) real ) ; }
Distance : 3

25
Tree	{ return getCumPct ( ( Comparable < Comparable > ) MockitoMatcher ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) MockitoMatcher ) ; }
Distance : 3

26
Tree	{ return getCumPct ( ( v < Comparable > ) % ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) % ) ; }
Distance : 4

27
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Fraction ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Fraction ) ; }
Distance : 3

28
Tree	{ return getCumPct ( ( Comparable < Comparable > ) expected ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) expected ) ; }
Distance : 3

29
Tree	{ return getCumPct ( ( Comparable < Comparable > ) stroke ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) stroke ) ; }
Distance : 3

30
Tree	{ return getCumPct ( ( v < Comparable > ) throws ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) throws ) ; }
Distance : 4

31
Tree	{ return getCumPct ( ( Comparable < Comparable > ) ReadablePeriod ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) ReadablePeriod ) ; }
Distance : 3

32
Tree	{ return getCumPct ( ( ( Comparable ) v . getPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( Comparable ) v . getPct () ) . v ) ; }
Distance : 8

33
Tree	{ return getPct ( ( ( v ) v ) . Comparable ) ; }
Code	{ return getPct ( ( ( v ) v ) . Comparable ) ; }
Distance : 6

34
Tree	{ return getCumPct ( ( ( Comparable ) v . getCumPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( Comparable ) v . getCumPct () ) . v ) ; }
Distance : 8

35
Tree	{ return Comparable . getCumPct ( Comparable ) . < extends > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < extends > getCumPct () ; }
Distance : 9

36
Tree	{ return Comparable . getCumPct ( Comparable ) . < & > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < & > getCumPct () ; }
Distance : 9

37
Tree	{ return getCumPct ( ( ( Comparable ) Comparable . getCumPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( Comparable ) Comparable . getCumPct () ) . Comparable ) ; }
Distance : 9

38
Tree	{ return getPct ( ( ( v ) Comparable . getCumPct () ) . v ) ; }
Code	{ return getPct ( ( ( v ) Comparable . getCumPct () ) . v ) ; }
Distance : 7

39
Tree	{ return getCumPct ( ( ( Comparable ) Comparable . getPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( Comparable ) Comparable . getPct () ) . Comparable ) ; }
Distance : 9

40
Tree	{ return getPct ( ( ( v ) Comparable . getPct () ) . v ) ; }
Code	{ return getPct ( ( ( v ) Comparable . getPct () ) . v ) ; }
Distance : 7

41
Tree	{ return getPct ( ( ( v ) v . getCumPct () ) . Comparable ) ; }
Code	{ return getPct ( ( ( v ) v . getCumPct () ) . Comparable ) ; }
Distance : 9

42
Tree	{ return getPct ( ( ( Comparable ) Comparable . getCumPct () ) . v ) ; }
Code	{ return getPct ( ( ( Comparable ) Comparable . getCumPct () ) . v ) ; }
Distance : 7

43
Tree	{ return getPct ( ( ( v ) v . getPct () ) . Comparable ) ; }
Code	{ return getPct ( ( ( v ) v . getPct () ) . Comparable ) ; }
Distance : 9

44
Tree	{ return getPct ( ( ( Comparable ) Comparable . getPct () ) . v ) ; }
Code	{ return getPct ( ( ( Comparable ) Comparable . getPct () ) . v ) ; }
Distance : 7

45
Tree	{ return getPct ( ( ( Comparable ) v . getCumPct () ) . Comparable ) ; }
Code	{ return getPct ( ( ( Comparable ) v . getCumPct () ) . Comparable ) ; }
Distance : 8

46
Tree	{ return getCumPct ( ( ( v ) Comparable . getCumPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( v ) Comparable . getCumPct () ) . v ) ; }
Distance : 8

47
Tree	{ return getPct ( ( ( Comparable ) v . getPct () ) . Comparable ) ; }
Code	{ return getPct ( ( ( Comparable ) v . getPct () ) . Comparable ) ; }
Distance : 8

48
Tree	{ return getCumPct ( ( ( v ) Comparable . getPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( v ) Comparable . getPct () ) . v ) ; }
Distance : 8

49
Tree	{ return getCumPct ( ( ( v ) v . getCumPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( v ) v . getCumPct () ) . Comparable ) ; }
Distance : 10

50
Tree	{ return getCumPct ( ( ( Comparable ) Comparable . getCumPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( Comparable ) Comparable . getCumPct () ) . v ) ; }
Distance : 8

51
Tree	{ return getCumPct ( ( ( v ) v . getPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( v ) v . getPct () ) . Comparable ) ; }
Distance : 10

52
Tree	{ return getPct ( ( ( v ) Comparable ) . v ) ; }
Code	{ return getPct ( ( ( v ) Comparable ) . v ) ; }
Distance : 5

53
Tree	{ return getCumPct ( ( ( v ) v . getPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( v ) v . getPct () ) . v ) ; }
Distance : 9

54
Tree	{ return getCumPct ( ( ( Comparable ) Comparable ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( Comparable ) Comparable ) . Comparable ) ; }
Distance : 6

55
Tree	{ return getCumPct ( ( ( v ) v . getCumPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( v ) v . getCumPct () ) . v ) ; }
Distance : 9

56
Tree	{ return getPct ( ( ( Comparable ) v . getPct () ) . v ) ; }
Code	{ return getPct ( ( ( Comparable ) v . getPct () ) . v ) ; }
Distance : 7

57
Tree	{ return getCumPct ( ( ( v ) Comparable ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( v ) Comparable ) . Comparable ) ; }
Distance : 7

58
Tree	{ return getCumPct ( ( v < Comparable > ) &= ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) &= ) ; }
Distance : 4

59
Tree	{ return getPct ( ( ( Comparable ) v . getCumPct () ) . v ) ; }
Code	{ return getPct ( ( ( Comparable ) v . getCumPct () ) . v ) ; }
Distance : 7

60
Tree	{ return getPct ( ( ( Comparable ) Comparable ) . Comparable ) ; }
Code	{ return getPct ( ( ( Comparable ) Comparable ) . Comparable ) ; }
Distance : 5

61
Tree	{ return getCumPct ( ( ( Comparable ) v . getPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( Comparable ) v . getPct () ) . Comparable ) ; }
Distance : 9

62
Tree	{ return getPct ( ( ( v ) v . getCumPct () ) . v ) ; }
Code	{ return getPct ( ( ( v ) v . getCumPct () ) . v ) ; }
Distance : 8

63
Tree	{ return getCumPct ( ( ( Comparable ) v . getCumPct () ) . Comparable ) ; }
Code	{ return getCumPct ( ( ( Comparable ) v . getCumPct () ) . Comparable ) ; }
Distance : 9

64
Tree	{ return getCumPct ( ( ( Comparable ) Comparable . getPct () ) . v ) ; }
Code	{ return getCumPct ( ( ( Comparable ) Comparable . getPct () ) . v ) ; }
Distance : 8

65
Tree	{ return getPct ( ( ( v ) Comparable ) . Comparable ) ; }
Code	{ return getPct ( ( ( v ) Comparable ) . Comparable ) ; }
Distance : 6

66
Tree	{ return getPct ( ( ( v ) v . getPct () ) . v ) ; }
Code	{ return getPct ( ( ( v ) v . getPct () ) . v ) ; }
Distance : 8

67
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getDimension ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getDimension ) ; }
Distance : 3

68
Tree	{ return getCumPct ( ( Comparable < Comparable > ) f.length ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) f.length ) ; }
Distance : 3

69
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getLocale ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getLocale ) ; }
Distance : 3

70
Tree	{ return getCumPct ( ( Comparable < Comparable > ) InvocationOnMock ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) InvocationOnMock ) ; }
Distance : 3

71
Tree	{ return getCumPct ( ( Comparable < Comparable > ) exp ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) exp ) ; }
Distance : 3

72
Tree	{ return getCumPct ( ( Comparable < Comparable > ) anyList ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) anyList ) ; }
Distance : 3

73
Tree	{ return getCumPct ( ( Comparable < Comparable > ) of ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) of ) ; }
Distance : 3

74
Tree	{ return getCumPct ( ( Comparable < Comparable > ) point ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) point ) ; }
Distance : 3

75
Tree	{ return getCumPct ( ( Comparable < Comparable > ) ReadablePartial ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) ReadablePartial ) ; }
Distance : 3

76
Tree	{ return getCumPct ( ( Comparable < Comparable > ) wantedNumberOfInvocations ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) wantedNumberOfInvocations ) ; }
Distance : 3

77
Tree	{ return getCumPct ( ( Comparable < Comparable > ) synchronized ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) synchronized ) ; }
Distance : 3

78
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getReturnType ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getReturnType ) ; }
Distance : 3

79
Tree	{ return getCumPct ( ( Comparable < Comparable > ) d ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) d ) ; }
Distance : 3

80
Tree	{ return getCumPct ( ( Comparable < v > ) ? ) ; }
Code	{ return getCumPct ( ( Comparable < v > ) ? ) ; }
Distance : 3

81
Tree	{ return getPct ( ( Comparable < Comparable > ) ? ) ; }
Code	{ return getPct ( ( Comparable < Comparable > ) ? ) ; }
Distance : 2

82
Tree	{ return getCumPct ( ( v < v > ) / ) ; }
Code	{ return getCumPct ( ( v < v > ) / ) ; }
Distance : 4

83
Tree	{ return getCumPct ( ( Comparable < Comparable > ) tolerance ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) tolerance ) ; }
Distance : 3

84
Tree	{ return getPct ( ( v < Comparable > ) / ) ; }
Code	{ return getPct ( ( v < Comparable > ) / ) ; }
Distance : 3

85
Tree	{ return getCumPct ( ( Comparable < Comparable > ) random ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) random ) ; }
Distance : 3

86
Tree	{ return getCumPct ( ( Comparable < v > ) ++ ) ; }
Code	{ return getCumPct ( ( Comparable < v > ) ++ ) ; }
Distance : 3

87
Tree	{ return getCumPct ( ( Comparable < Comparable > ) c ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) c ) ; }
Distance : 3

88
Tree	{ return getCumPct ( ( Comparable < Comparable > ) isClassOrPrototypeNamedProperty ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) isClassOrPrototypeNamedProperty ) ; }
Distance : 3

89
Tree	{ return getCumPct ( ( Comparable < Comparable > ) mockHandler ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) mockHandler ) ; }
Distance : 3

90
Tree	{ return getCumPct ( ( Comparable < Comparable > ) mean ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) mean ) ; }
Distance : 3

91
Tree	{ return getCumPct ( ( Comparable < Comparable > ) InvocationImpl ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) InvocationImpl ) ; }
Distance : 3

92
Tree	{ return getPct ( ( Comparable < v > ) <= ) ; }
Code	{ return getPct ( ( Comparable < v > ) <= ) ; }
Distance : 2

93
Tree	{ return getCumPct ( ( v < Comparable > ) /= ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) /= ) ; }
Distance : 4

94
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Es6SyntacticScopeCreator ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Es6SyntacticScopeCreator ) ; }
Distance : 3

95
Tree	{ return getCumPct ( ( Comparable < Comparable > ) %= ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) %= ) ; }
Distance : 3

96
Tree	{ return getCumPct ( ( Comparable < Comparable > ) index ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) index ) ; }
Distance : 3

97
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Method ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Method ) ; }
Distance : 3

98
Tree	{ return getPct ( ( Comparable < Comparable > ) ++ ) ; }
Code	{ return getPct ( ( Comparable < Comparable > ) ++ ) ; }
Distance : 2

99
Tree	{ return getCumPct ( ( Comparable < Comparable > ) newScope ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) newScope ) ; }
Distance : 3

100
Tree	{ return getCumPct ( ( v < Comparable > ) & ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) & ) ; }
Distance : 4

101
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Double ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Double ) ; }
Distance : 3

102
Tree	{ return Comparable . getCumPct ( Comparable ) . < ? > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < ? > getCumPct () ; }
Distance : 9

103
Tree	{ return getCumPct ( ( Comparable < Comparable > ) rhs.isNaN ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) rhs.isNaN ) ; }
Distance : 3

104
Tree	{ return getCumPct ( ( Comparable < Comparable > ) R ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) R ) ; }
Distance : 3

105
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getBytes ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getBytes ) ; }
Distance : 3

106
Tree	{ return getCumPct ( ( Comparable < Comparable > ) ignored ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) ignored ) ; }
Distance : 3

107
Tree	{ return getCumPct ( ( Comparable < Comparable > ) p2 ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) p2 ) ; }
Distance : 3

108
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getX ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getX ) ; }
Distance : 3

109
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Math.PI ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Math.PI ) ; }
Distance : 3

110
Tree	{ return getCumPct ( ( Comparable < Comparable > ) StaticTypedScope ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) StaticTypedScope ) ; }
Distance : 3

111
Tree	{ return getCumPct ( ( Comparable < Comparable > ) in ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) in ) ; }
Distance : 3

112
Tree	{ return getCumPct ( ( Comparable < v > ) super ) ; }
Code	{ return getCumPct ( ( Comparable < v > ) super ) ; }
Distance : 3

113
Tree	{ return getCumPct ( ( Comparable < Comparable > ) forward ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) forward ) ; }
Distance : 3

114
Tree	{ return getPct ( ( Comparable < Comparable > ) super ) ; }
Code	{ return getPct ( ( Comparable < Comparable > ) super ) ; }
Distance : 2

115
Tree	{ return getCumPct ( ( Comparable < Comparable > ) Exception ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) Exception ) ; }
Distance : 3

116
Tree	{ return getCumPct ( ( Comparable < Comparable > ) RealVector ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) RealVector ) ; }
Distance : 3

117
Tree	{ return getCumPct ( ( Comparable < Comparable > ) other ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) other ) ; }
Distance : 3

118
Tree	{ return getCumPct ( ( Comparable < Comparable > ) returnNull ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) returnNull ) ; }
Distance : 3

119
Tree	{ return getCumPct ( ( Comparable < Comparable > ) isFunction ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) isFunction ) ; }
Distance : 3

120
Tree	{ return getCumPct ( ( Comparable < Comparable > ) intValue ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) intValue ) ; }
Distance : 3

121
Tree	{ return getCumPct ( ( Comparable < Comparable > ) vector ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) vector ) ; }
Distance : 3

122
Tree	{ return getCumPct ( ( Comparable < Comparable > ) @ ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) @ ) ; }
Distance : 3

123
Tree	{ return getCumPct ( ( Comparable < Comparable > ) final ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) final ) ; }
Distance : 3

124
Tree	{ return getCumPct ( ( Comparable < Comparable > ) points ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) points ) ; }
Distance : 3

125
Tree	{ return getCumPct ( ( Comparable < Comparable > ) featureSet ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) featureSet ) ; }
Distance : 3

126
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getValue ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getValue ) ; }
Distance : 3

127
Tree	{ return getCumPct ( ( v < Comparable > ) >= ) ; }
Code	{ return getCumPct ( ( v < Comparable > ) >= ) ; }
Distance : 4

128
Tree	{ return getCumPct ( ( Comparable < Comparable > ) v.length ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) v.length ) ; }
Distance : 3

129
Tree	{ return getCumPct ( ( Comparable < Comparable > ) doubleValue ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) doubleValue ) ; }
Distance : 3

130
Tree	{ return getCumPct ( ( Comparable < Comparable > ) integrator ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) integrator ) ; }
Distance : 3

131
Tree	{ return getPct ( ( Comparable < Comparable > ) -- ) ; }
Code	{ return getPct ( ( Comparable < Comparable > ) -- ) ; }
Distance : 2

132
Tree	{ return getCumPct ( ( Comparable < Comparable > ) ^= ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) ^= ) ; }
Distance : 3

133
Tree	{ return getCumPct ( ( Comparable < v > ) -- ) ; }
Code	{ return getCumPct ( ( Comparable < v > ) -- ) ; }
Distance : 3

134
Tree	{ return getCumPct ( ( Comparable < Comparable > ) case ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) case ) ; }
Distance : 3

135
Tree	{ return Comparable . getCumPct ( v ) . < ArrayRealVector > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < ArrayRealVector > getCumPct () ; }
Distance : 10

136
Tree	{ return getCumPct ( ( Comparable < Comparable > ) getParent ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) getParent ) ; }
Distance : 3

137
Tree	{ return getCumPct ( ( Comparable < Comparable > ) AbstractScope ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) AbstractScope ) ; }
Distance : 3

138
Tree	{ return Comparable . getCumPct ( Comparable ) . < / > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < / > getCumPct () ; }
Distance : 9

139
Tree	{ return v . getCumPct ( Comparable ) . < & > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < & > getCumPct () ; }
Distance : 9

140
Tree	{ return Comparable . getCumPct ( Comparable ) . < ++ > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < ++ > getPct () ; }
Distance : 9

141
Tree	{ return v . getCumPct ( v ) . < /= > getPct () ; }
Code	{ return v . getCumPct ( v ) . < /= > getPct () ; }
Distance : 10

142
Tree	{ return Comparable . getCumPct ( Comparable ) . < Printable > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Printable > getCumPct () ; }
Distance : 9

143
Tree	{ return v . getCumPct ( v ) . < ? > getPct () ; }
Code	{ return v . getCumPct ( v ) . < ? > getPct () ; }
Distance : 10

144
Tree	{ return Comparable . getCumPct ( Comparable ) . < ReadablePartial > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < ReadablePartial > getCumPct () ; }
Distance : 9

145
Tree	{ return v . getCumPct ( v ) . < ^ > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < ^ > getCumPct () ; }
Distance : 10

146
Tree	{ return Comparable . getCumPct ( v ) . < ++ > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < ++ > getCumPct () ; }
Distance : 10

147
Tree	{ return v . getCumPct ( v ) . < extends > getPct () ; }
Code	{ return v . getCumPct ( v ) . < extends > getPct () ; }
Distance : 10

148
Tree	{ return Comparable . getCumPct ( Comparable ) . < FunctionEvaluationException > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < FunctionEvaluationException > getCumPct () ; }
Distance : 9

149
Tree	{ return Comparable . getCumPct ( Comparable ) . < instanceof > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < instanceof > getCumPct () ; }
Distance : 9

150
Tree	{ return v . getCumPct ( Comparable ) . < -- > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < -- > getPct () ; }
Distance : 9

151
Tree	{ return v . getCumPct ( v ) . < Compiler > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < Compiler > getCumPct () ; }
Distance : 10

152
Tree	{ return getPct ( ( ( Comparable ) Comparable . getPct () ) . Comparable ) ; }
Code	{ return getPct ( ( ( Comparable ) Comparable . getPct () ) . Comparable ) ; }
Distance : 8

153
Tree	{ return v . getCumPct ( Comparable ) . < /= > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < /= > getPct () ; }
Distance : 9

154
Tree	{ return Comparable . getCumPct ( v ) . < Matcher > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < Matcher > getCumPct () ; }
Distance : 10

155
Tree	{ return Comparable . getCumPct ( v ) . < -- > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < -- > getPct () ; }
Distance : 10

156
Tree	{ return Comparable . getCumPct ( Comparable ) . < Matcher > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Matcher > getCumPct () ; }
Distance : 9

157
Tree	{ return v . getCumPct ( v ) . < Coordinates3D > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < Coordinates3D > getCumPct () ; }
Distance : 10

158
Tree	{ return getCumPct ( ( Comparable < Comparable > ) / ) ; }
Code	{ return getCumPct ( ( Comparable < Comparable > ) / ) ; }
Distance : 3

159
Tree	{ return Comparable . getCumPct ( Comparable ) . < ^ > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < ^ > getPct () ; }
Distance : 9

160
Tree	{ return Comparable . getCumPct ( v ) . < /= > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < /= > getPct () ; }
Distance : 10

161
Tree	{ return v . getCumPct ( v ) . < short > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < short > getCumPct () ; }
Distance : 10

162
Tree	{ return Comparable . getCumPct ( Comparable ) . < Compiler > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Compiler > getPct () ; }
Distance : 9

163
Tree	{ return v . getCumPct ( Comparable ) . < Object > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < Object > getCumPct () ; }
Distance : 9

164
Tree	{ return v . getCumPct ( Comparable ) . < <= > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < <= > getPct () ; }
Distance : 9

165
Tree	{ return v . getCumPct ( Comparable ) . < T > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < T > getCumPct () ; }
Distance : 9

166
Tree	{ return Comparable . getCumPct ( Comparable ) . < S > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < S > getPct () ; }
Distance : 9

167
Tree	{ return v . getCumPct ( Comparable ) . < *= > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < *= > getCumPct () ; }
Distance : 9

168
Tree	{ return Comparable . getCumPct ( v ) . < Object > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < Object > getCumPct () ; }
Distance : 10

169
Tree	{ return Comparable . getCumPct ( Comparable ) . < short > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < short > getPct () ; }
Distance : 9

170
Tree	{ return v . getCumPct ( v ) . < S > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < S > getCumPct () ; }
Distance : 10

171
Tree	{ return Comparable . getCumPct ( Comparable ) . < Method > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Method > getCumPct () ; }
Distance : 9

172
Tree	{ return v . getCumPct ( Comparable ) . < Compiler > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < Compiler > getPct () ; }
Distance : 9

173
Tree	{ return Comparable . getCumPct ( Comparable ) . < {} > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < {} > getCumPct () ; }
Distance : 9

174
Tree	{ return v . getCumPct ( Comparable ) . < ++ > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < ++ > getCumPct () ; }
Distance : 9

175
Tree	{ return Comparable . getCumPct ( Comparable ) . < T > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < T > getPct () ; }
Distance : 9

176
Tree	{ return v . getCumPct ( Comparable ) . < ArrayRealVector > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < ArrayRealVector > getCumPct () ; }
Distance : 9

177
Tree	{ return Comparable . getCumPct ( v ) . < Locale > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < Locale > getPct () ; }
Distance : 10

178
Tree	{ return Comparable . getCumPct ( Comparable ) . < returnZero > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < returnZero > getCumPct () ; }
Distance : 9

179
Tree	{ return Comparable . getCumPct ( Comparable ) . < Object > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Object > getPct () ; }
Distance : 9

180
Tree	{ return v . getCumPct ( v ) . < / > getPct () ; }
Code	{ return v . getCumPct ( v ) . < / > getPct () ; }
Distance : 10

181
Tree	{ return Comparable . getCumPct ( Comparable ) . < *= > getPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < *= > getPct () ; }
Distance : 9

182
Tree	{ return v . getCumPct ( Comparable ) . < Locale > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < Locale > getPct () ; }
Distance : 9

183
Tree	{ return Comparable . getCumPct ( Comparable ) . < CHAR_CONS > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < CHAR_CONS > getCumPct () ; }
Distance : 9

184
Tree	{ return Comparable . getCumPct ( v ) . < super > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < super > getCumPct () ; }
Distance : 10

185
Tree	{ return Comparable . getCumPct ( Comparable ) . < &= > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < &= > getCumPct () ; }
Distance : 9

186
Tree	{ return Comparable . getCumPct ( v ) . < Coordinates3D > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < Coordinates3D > getPct () ; }
Distance : 10

187
Tree	{ return v . getCumPct ( Comparable ) . < super > getCumPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < super > getCumPct () ; }
Distance : 9

188
Tree	{ return v . getCumPct ( Comparable ) . < Coordinates3D > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < Coordinates3D > getPct () ; }
Distance : 9

189
Tree	{ return Comparable . getCumPct ( v ) . < short > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < short > getPct () ; }
Distance : 10

190
Tree	{ return v . getCumPct ( v ) . < *= > getCumPct () ; }
Code	{ return v . getCumPct ( v ) . < *= > getCumPct () ; }
Distance : 10

191
Tree	{ return Comparable . getCumPct ( v ) . < ^ > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < ^ > getPct () ; }
Distance : 10

192
Tree	{ return Comparable . getCumPct ( Comparable ) . < Euclidean3D > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Euclidean3D > getCumPct () ; }
Distance : 9

193
Tree	{ return Comparable . getCumPct ( v ) . < Compiler > getPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < Compiler > getPct () ; }
Distance : 10

194
Tree	{ return v . getCumPct ( Comparable ) . < S > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < S > getPct () ; }
Distance : 9

195
Tree	{ return Comparable . getCumPct ( Comparable ) . < PropertyCollapseLevel.NONE > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < PropertyCollapseLevel.NONE > getCumPct () ; }
Distance : 9

196
Tree	{ return Comparable . getCumPct ( Comparable ) . < DateTimeParser > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < DateTimeParser > getCumPct () ; }
Distance : 9

197
Tree	{ return Comparable . getCumPct ( v ) . < T > getCumPct () ; }
Code	{ return Comparable . getCumPct ( v ) . < T > getCumPct () ; }
Distance : 10

198
Tree	{ return Comparable . getCumPct ( Comparable ) . < Sin > getCumPct () ; }
Code	{ return Comparable . getCumPct ( Comparable ) . < Sin > getCumPct () ; }
Distance : 9

199
Tree	{ return v . getCumPct ( Comparable ) . < short > getPct () ; }
Code	{ return v . getCumPct ( Comparable ) . < short > getPct () ; }
Distance : 9

========================================================================


========================================================================
Example Number: 57
Parent Code is: 
{ return solve ( min , max ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return solve ( f , min , max ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=solve}) (214{val=(}) (800{val=f}) (234{val=,}) (800{val=min}) (234{val=,}) (800{val=max}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/70/parent/src_main_java_org_apache_commons_math_analysis_solvers_BisectionSolver.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	{ return solve ( min , max ) ; }
Code	{ return solve ( min , max ) ; }
Distance : 2

1
Tree	{ return solve ( max . solve ( max ) , min ) ; }
Code	{ return solve ( max . solve ( max ) , min ) ; }
Distance : 7

2
Tree	{ return solve ( f . solve ( max ) , min ) ; }
Code	{ return solve ( f . solve ( max ) , min ) ; }
Distance : 6

3
Tree	{ return solve ( max , default: ) ; }
Code	{ return solve ( max , default: ) ; }
Distance : 4

4
Tree	{ return solve ( max . solve () , f ) ; }
Code	{ return solve ( max . solve () , f ) ; }
Distance : 5

5
Tree	{ return solve ( f , default: ) ; }
Code	{ return solve ( f , default: ) ; }
Distance : 3

6
Tree	{ return solve ( f . solve () , f ) ; }
Code	{ return solve ( f . solve () , f ) ; }
Distance : 4

7
Tree	{ return solve ( min . solve ( f ) , f ) ; }
Code	{ return solve ( min . solve ( f ) , f ) ; }
Distance : 7

8
Tree	{ return min . solve ( f , f ) ; }
Code	{ return min . solve ( f , f ) ; }
Distance : 5

9
Tree	{ return min . solve ( max , f ) ; }
Code	{ return min . solve ( max , f ) ; }
Distance : 6

10
Tree	{ return solve ( min . solve ( max ) , f ) ; }
Code	{ return solve ( min . solve ( max ) , f ) ; }
Distance : 7

11
Tree	{ return solve ( max . solve ( f ) , min ) ; }
Code	{ return solve ( max . solve ( f ) , min ) ; }
Distance : 7

12
Tree	{ return solve ( max . solve ( min ) , f ) ; }
Code	{ return solve ( max . solve ( min ) , f ) ; }
Distance : 6

13
Tree	{ return solve ( f . solve ( min ) , f ) ; }
Code	{ return solve ( f . solve ( min ) , f ) ; }
Distance : 5

14
Tree	{ return max . solve ( f , f ) ; }
Code	{ return max . solve ( f , f ) ; }
Distance : 5

15
Tree	{ return max . solve ( max , f ) ; }
Code	{ return max . solve ( max , f ) ; }
Distance : 6

16
Tree	{ return solve ( max , f , f ) ; }
Code	{ return solve ( max , f , f ) ; }
Distance : 3

17
Tree	{ return solve ( f , f , f ) ; }
Code	{ return solve ( f , f , f ) ; }
Distance : 2

18
Tree	{ return solve ( max . solve ( max ) , f ) ; }
Code	{ return solve ( max . solve ( max ) , f ) ; }
Distance : 7

19
Tree	{ return solve ( f . solve ( max ) , f ) ; }
Code	{ return solve ( f . solve ( max ) , f ) ; }
Distance : 6

20
Tree	{ return solve ( max . solve ( f ) , f ) ; }
Code	{ return solve ( max . solve ( f ) , f ) ; }
Distance : 7

21
Tree	{ return solve ( f . solve ( f ) , min ) ; }
Code	{ return solve ( f . solve ( f ) , min ) ; }
Distance : 6

22
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } true
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } true
Distance : 5

23
Tree	{ return solve ( min , f , f ) ; }
Code	{ return solve ( min , f , f ) ; }
Distance : 3

24
Tree	{ return solve ( max , min , f ) ; }
Code	{ return solve ( max , min , f ) ; }
Distance : 2

25
Tree	{ return min . solve ( f , min ) ; }
Code	{ return min . solve ( f , min ) ; }
Distance : 4

26
Tree	{ return solve ( f , break; ) ; }
Code	{ return solve ( f , break; ) ; }
Distance : 3

27
Tree	{ return min . solve ( max , min ) ; }
Code	{ return min . solve ( max , min ) ; }
Distance : 5

28
Tree	{ return solve ( f . solve () , min ) ; }
Code	{ return solve ( f . solve () , min ) ; }
Distance : 4

29
Tree	{ return min . solve ( min , f ) ; }
Code	{ return min . solve ( min , f ) ; }
Distance : 5

30
Tree	{ return solve ( min . solve ( f ) , min ) ; }
Code	{ return solve ( min . solve ( f ) , min ) ; }
Distance : 7

31
Tree	{ return solve ( max . solve ( f ) , max ) ; }
Code	{ return solve ( max . solve ( f ) , max ) ; }
Distance : 6

32
Tree	{ return f . solve ( f , f ) ; }
Code	{ return f . solve ( f , f ) ; }
Distance : 5

33
Tree	{ return solve ( max , f , min ) ; }
Code	{ return solve ( max , f , min ) ; }
Distance : 3

34
Tree	{ return solve ( f , min , f ) ; }
Code	{ return solve ( f , min , f ) ; }
Distance : 1

35
Tree	{ return solve ( max . solve ( f ) ) ; }
Code	{ return solve ( max . solve ( f ) ) ; }
Distance : 6

36
Tree	{ return solve ( f , f , min ) ; }
Code	{ return solve ( f , f , min ) ; }
Distance : 2

37
Tree	{ return solve ( f . solve ( f ) , max ) ; }
Code	{ return solve ( f . solve ( f ) , max ) ; }
Distance : 5

38
Tree	{ return solve ( f . solve ( f ) ) ; }
Code	{ return solve ( f . solve ( f ) ) ; }
Distance : 5

39
Tree	{ return solve ( min . solve ( min ) , f ) ; }
Code	{ return solve ( min . solve ( min ) , f ) ; }
Distance : 6

40
Tree	{ return max . solve ( f , min ) ; }
Code	{ return max . solve ( f , min ) ; }
Distance : 4

41
Tree	{ return max . solve ( max , min ) ; }
Code	{ return max . solve ( max , min ) ; }
Distance : 5

42
Tree	{ return max . solve ( min , f ) ; }
Code	{ return max . solve ( min , f ) ; }
Distance : 5

43
Tree	{ return solve ( max . solve ( min ) , min ) ; }
Code	{ return solve ( max . solve ( min ) , min ) ; }
Distance : 6

44
Tree	{ return solve ( f . solve ( min ) , min ) ; }
Code	{ return solve ( f . solve ( min ) , min ) ; }
Distance : 5

45
Tree	{ return f . solve ( max , f ) ; }
Code	{ return f . solve ( max , f ) ; }
Distance : 6

46
Tree	{ return solve ( max . solve () , min ) ; }
Code	{ return solve ( max . solve () , min ) ; }
Distance : 5

47
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } -
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } -
Distance : 5

48
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } Preconditions
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } Preconditions
Distance : 5

49
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } index
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } index
Distance : 5

50
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } LanguageMode.ECMASCRIPT6
Distance : 5

51
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } long
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } long
Distance : 5

52
Tree	{ return f . solve ( min , max ) ; } name
Code	{ return f . solve ( min , max ) ; } name
Distance : 5

53
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } TestUtils
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } TestUtils
Distance : 5

54
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ?
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ?
Distance : 5

55
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } STRING_CONSTANT
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } STRING_CONSTANT
Distance : 5

56
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } /
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } /
Distance : 5

57
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } assertTrue
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } assertTrue
Distance : 5

58
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } node
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } node
Distance : 5

59
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } getArgumentMatcherStorage
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } getArgumentMatcherStorage
Distance : 5

60
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } simpleMethod
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } simpleMethod
Distance : 5

61
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } (
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } (
Distance : 5

62
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ()
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ()
Distance : 5

63
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } )
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } )
Distance : 5

64
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } T
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } T
Distance : 5

65
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } value
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } value
Distance : 5

66
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } !=
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } !=
Distance : 5

67
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } i
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } i
Distance : 5

68
Tree	{ return solve ( min , null ) ; }
Code	{ return solve ( min , null ) ; }
Distance : 3

69
Tree	{ return f . solve ( min , max ) ; } root
Code	{ return f . solve ( min , max ) ; } root
Distance : 5

70
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } &&
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } &&
Distance : 5

71
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } expected
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } expected
Distance : 5

72
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } n
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } n
Distance : 5

73
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } NUMBER_CONSTANT
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } NUMBER_CONSTANT
Distance : 5

74
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } mode
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } mode
Distance : 5

75
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ]
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } ]
Distance : 5

76
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } checkState
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } checkState
Distance : 5

77
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } new
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } new
Distance : 5

78
Tree	{ return f . solve ( min , max ) ; } data
Code	{ return f . solve ( min , max ) ; } data
Distance : 5

79
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } =
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } =
Distance : 5

80
Tree	{ return f . solve ( min , max ) ; } NodeTraversal
Code	{ return f . solve ( min , max ) ; } NodeTraversal
Distance : 5

81
Tree	{ return f . solve ( min , max ) ; } Args
Code	{ return f . solve ( min , max ) ; } Args
Distance : 5

82
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } NodeTraversal
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } NodeTraversal
Distance : 5

83
Tree	{ return f . solve ( min , max ) ; } <>
Code	{ return f . solve ( min , max ) ; } <>
Distance : 5

84
Tree	{ return f . solve ( min , max ) ; } array
Code	{ return f . solve ( min , max ) ; } array
Distance : 5

85
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } instance
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } instance
Distance : 5

86
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } alpha
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } alpha
Distance : 5

87
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } valueOf
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } valueOf
Distance : 5

88
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } {}
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } {}
Distance : 5

89
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } Assert
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } Assert
Distance : 5

90
Tree	{ return f . solve ( min , max ) ; } ex
Code	{ return f . solve ( min , max ) ; } ex
Distance : 5

91
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } checkNotNull
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } checkNotNull
Distance : 5

92
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; } +
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; } +
Distance : 5

93
Tree	{ return f . solve ( min , max ) ; } f
Code	{ return f . solve ( min , max ) ; } f
Distance : 5

94
Tree	{ return solve ( f , continue; ) ; }
Code	{ return solve ( f , continue; ) ; }
Distance : 3

95
Tree	{ return solve ( f . solve ( f ) , f ) ; }
Code	{ return solve ( f . solve ( f ) , f ) ; }
Distance : 6

96
Tree	{ return solve ( max , continue; ) ; }
Code	{ return solve ( max , continue; ) ; }
Distance : 4

97
Tree	{ return solve ( f , min - NUMBER_CONSTANT ) ; }
Code	{ return solve ( f , min - NUMBER_CONSTANT ) ; }
Distance : 2

98
Tree	{ return solve ( min , super(); ) ; }
Code	{ return solve ( min , super(); ) ; }
Distance : 3

99
Tree	{ return f . solve ( f , max ) ; }
Code	{ return f . solve ( f , max ) ; }
Distance : 4

100
Tree	{ return solve ( min , f - NUMBER_CONSTANT ) ; }
Code	{ return solve ( min , f - NUMBER_CONSTANT ) ; }
Distance : 4

101
Tree	{ return solve ( max , max , min ) ; }
Code	{ return solve ( max , max , min ) ; }
Distance : 3

102
Tree	{ return f . solve ( max , max ) ; }
Code	{ return f . solve ( max , max ) ; }
Distance : 5

103
Tree	{ return f . solve ( f ) ; }
Code	{ return f . solve ( f ) ; }
Distance : 6

104
Tree	{ return solve ( f , max , min ) ; }
Code	{ return solve ( f , max , min ) ; }
Distance : 2

105
Tree	{ return f . solve ( max ) ; }
Code	{ return f . solve ( max ) ; }
Distance : 5

106
Tree	{ return min . solve ( min ) ; }
Code	{ return min . solve ( min ) ; }
Distance : 6

107
Tree	{ return solve ( max , min , max ) ; }
Code	{ return solve ( max , min , max ) ; }
Distance : 1

108
Tree	{ return solve ( f , min , max ) ; }
Code	{ return solve ( f , min , max ) ; }
Distance : 0

109
Tree	{ return solve ( min . solve ( min ) ) ; }
Code	{ return solve ( min . solve ( min ) ) ; }
Distance : 6

110
Tree	{ return solve ( min , f , max ) ; }
Code	{ return solve ( min , f , max ) ; }
Distance : 2

111
Tree	{ return max . solve ( min , max ) ; }
Code	{ return max . solve ( min , max ) ; }
Distance : 4

112
Tree	{ return solve ( min , return; ) ; }
Code	{ return solve ( min , return; ) ; }
Distance : 3

113
Tree	{ return max . solve ( min ) ; }
Code	{ return max . solve ( min ) ; }
Distance : 6

114
Tree	{ return solve ( min , max , f ) ; }
Code	{ return solve ( min , max , f ) ; }
Distance : 3

115
Tree	{ return solve ( min . solve ( max ) , max ) ; }
Code	{ return solve ( min . solve ( max ) , max ) ; }
Distance : 6

116
Tree	{ return solve ( min . solve ( max ) ) ; }
Code	{ return solve ( min . solve ( max ) ) ; }
Distance : 5

117
Tree	{ return solve ( min . solve ( min ) , max ) ; }
Code	{ return solve ( min . solve ( min ) , max ) ; }
Distance : 5

118
Tree	{ return min . solve ( min , max ) ; }
Code	{ return min . solve ( min , max ) ; }
Distance : 4

119
Tree	{ return solve ( min . solve () , max ) ; }
Code	{ return solve ( min . solve () , max ) ; }
Distance : 4

120
Tree	{ return solve ( min , min , min ) ; }
Code	{ return solve ( min , min , min ) ; }
Distance : 2

121
Tree	{ return solve ( min , max - NUMBER_CONSTANT ) ; }
Code	{ return solve ( min , max - NUMBER_CONSTANT ) ; }
Distance : 4

122
Tree	{ return solve ( max , break; ) ; }
Code	{ return solve ( max , break; ) ; }
Distance : 4

123
Tree	{ return solve ( min , max , max ) ; }
Code	{ return solve ( min , max , max ) ; }
Distance : 2

124
Tree	{ return solve ( min , min ) ; }
Code	{ return solve ( min , min ) ; }
Distance : 3

125
Tree	{ return solve ( max , max ) ; }
Code	{ return solve ( max , max ) ; }
Distance : 3

126
Tree	{ return solve ( f , max ) ; }
Code	{ return solve ( f , max ) ; }
Distance : 2

127
Tree	{ return solve ( min , min - NUMBER_CONSTANT ) ; }
Code	{ return solve ( min , min - NUMBER_CONSTANT ) ; }
Distance : 3

128
Tree	{ return f . solve ( min , max ) ; }
Code	{ return f . solve ( min , max ) ; }
Distance : 4

129
Tree	{ return f . solve ( min ) ; }
Code	{ return f . solve ( min ) ; }
Distance : 6

130
Tree	{ return solve ( max , null ) ; }
Code	{ return solve ( max , null ) ; }
Distance : 4

131
Tree	{ return solve ( f , null ) ; }
Code	{ return solve ( f , null ) ; }
Distance : 3

132
Tree	{ return solve ( min , max , min ) ; }
Code	{ return solve ( min , max , min ) ; }
Distance : 3

133
Tree	{ return solve ( min , min , max ) ; }
Code	{ return solve ( min , min , max ) ; }
Distance : 1

134
Tree	{ return solve ( max , max - NUMBER_CONSTANT ) ; }
Code	{ return solve ( max , max - NUMBER_CONSTANT ) ; }
Distance : 4

135
Tree	{ return solve ( f , max - NUMBER_CONSTANT ) ; }
Code	{ return solve ( f , max - NUMBER_CONSTANT ) ; }
Distance : 3

136
Tree	{ return solve ( max , max , max ) ; }
Code	{ return solve ( max , max , max ) ; }
Distance : 2

137
Tree	{ return solve ( f , max , max ) ; }
Code	{ return solve ( f , max , max ) ; }
Distance : 1

138
Tree	{ return solve ( max , min ) ; }
Code	{ return solve ( max , min ) ; }
Distance : 3

139
Tree	{ return solve ( f , min ) ; }
Code	{ return solve ( f , min ) ; }
Distance : 2

140
Tree	{ return solve ( min , f ) ; }
Code	{ return solve ( min , f ) ; }
Distance : 3

141
Tree	{ return f . solve ( min , min ) ; }
Code	{ return f . solve ( min , min ) ; }
Distance : 5

142
Tree	{ return min . solve ( min , min ) ; }
Code	{ return min . solve ( min , min ) ; }
Distance : 5

143
Tree	{ return solve ( min , continue; ) ; }
Code	{ return solve ( min , continue; ) ; }
Distance : 3

144
Tree	{ return solve ( max , min - NUMBER_CONSTANT ) ; }
Code	{ return solve ( max , min - NUMBER_CONSTANT ) ; }
Distance : 3

145
Tree	{ return solve ( min , default: ) ; }
Code	{ return solve ( min , default: ) ; }
Distance : 3

146
Tree	{ return solve ( max . solve ( min ) ) ; }
Code	{ return solve ( max . solve ( min ) ) ; }
Distance : 6

147
Tree	{ return solve ( f . solve ( min ) , max ) ; }
Code	{ return solve ( f . solve ( min ) , max ) ; }
Distance : 4

148
Tree	{ return solve ( f . solve ( min ) ) ; }
Code	{ return solve ( f . solve ( min ) ) ; }
Distance : 5

149
Tree	{ return solve ( max , f , max ) ; }
Code	{ return solve ( max , f , max ) ; }
Distance : 2

150
Tree	{ return solve ( f , f , max ) ; }
Code	{ return solve ( f , f , max ) ; }
Distance : 1

151
Tree	{ return solve ( min , min , f ) ; }
Code	{ return solve ( min , min , f ) ; }
Distance : 2

152
Tree	{ return solve ( max , return; ) ; }
Code	{ return solve ( max , return; ) ; }
Distance : 4

153
Tree	{ return max . solve ( f , max ) ; }
Code	{ return max . solve ( f , max ) ; }
Distance : 4

154
Tree	{ return max . solve ( max , max ) ; }
Code	{ return max . solve ( max , max ) ; }
Distance : 5

155
Tree	{ return solve ( max . solve ( min ) , max ) ; }
Code	{ return solve ( max . solve ( min ) , max ) ; }
Distance : 5

156
Tree	{ return max . solve ( f ) ; }
Code	{ return max . solve ( f ) ; }
Distance : 6

157
Tree	{ return solve ( max , max , f ) ; }
Code	{ return solve ( max , max , f ) ; }
Distance : 3

158
Tree	{ return solve ( f , max , f ) ; }
Code	{ return solve ( f , max , f ) ; }
Distance : 2

159
Tree	{ return solve ( min . solve ( max ) , min ) ; }
Code	{ return solve ( min . solve ( max ) , min ) ; }
Distance : 7

160
Tree	{ return solve ( max . solve ( max ) , max ) ; }
Code	{ return solve ( max . solve ( max ) , max ) ; }
Distance : 6

161
Tree	{ return solve ( f . solve ( max ) , max ) ; }
Code	{ return solve ( f . solve ( max ) , max ) ; }
Distance : 5

162
Tree	{ return solve ( max . solve ( max ) ) ; }
Code	{ return solve ( max . solve ( max ) ) ; }
Distance : 5

163
Tree	{ return solve ( f . solve ( max ) ) ; }
Code	{ return solve ( f . solve ( max ) ) ; }
Distance : 4

164
Tree	{ return solve ( max , f ) ; }
Code	{ return solve ( max , f ) ; }
Distance : 4

165
Tree	{ return solve ( min . solve () , f ) ; }
Code	{ return solve ( min . solve () , f ) ; }
Distance : 5

166
Tree	{ return max . solve ( max ) ; }
Code	{ return max . solve ( max ) ; }
Distance : 6

167
Tree	{ return solve ( min . solve ( min ) , min ) ; }
Code	{ return solve ( min . solve ( min ) , min ) ; }
Distance : 6

168
Tree	{ return solve ( f , return; ) ; }
Code	{ return solve ( f , return; ) ; }
Distance : 3

169
Tree	{ return solve ( f , f - NUMBER_CONSTANT ) ; }
Code	{ return solve ( f , f - NUMBER_CONSTANT ) ; }
Distance : 3

170
Tree	{ return solve ( min , break; ) ; }
Code	{ return solve ( min , break; ) ; }
Distance : 3

171
Tree	{ return solve ( f , super(); ) ; }
Code	{ return solve ( f , super(); ) ; }
Distance : 3

172
Tree	{ return solve ( min . solve () , min ) ; }
Code	{ return solve ( min . solve () , min ) ; }
Distance : 5

173
Tree	{ return f . solve ( f , min ) ; }
Code	{ return f . solve ( f , min ) ; }
Distance : 4

174
Tree	{ return f . solve ( max , min ) ; }
Code	{ return f . solve ( max , min ) ; }
Distance : 5

175
Tree	{ return solve ( max , min , min ) ; }
Code	{ return solve ( max , min , min ) ; }
Distance : 2

176
Tree	{ return solve ( max . solve () , max ) ; }
Code	{ return solve ( max . solve () , max ) ; }
Distance : 4

177
Tree	{ return f . solve ( min , f ) ; }
Code	{ return f . solve ( min , f ) ; }
Distance : 5

178
Tree	{ return solve ( f , min , min ) ; }
Code	{ return solve ( f , min , min ) ; }
Distance : 1

179
Tree	{ return solve ( f . solve () , max ) ; }
Code	{ return solve ( f . solve () , max ) ; }
Distance : 3

180
Tree	{ return solve ( min . solve ( f ) , max ) ; }
Code	{ return solve ( min . solve ( f ) , max ) ; }
Distance : 6

181
Tree	{ return solve ( f , f ) ; }
Code	{ return solve ( f , f ) ; }
Distance : 3

182
Tree	{ return solve ( min . solve ( f ) ) ; }
Code	{ return solve ( min . solve ( f ) ) ; }
Distance : 6

183
Tree	{ return solve ( min , f , min ) ; }
Code	{ return solve ( min , f , min ) ; }
Distance : 3

184
Tree	{ return solve ( max , f - NUMBER_CONSTANT ) ; }
Code	{ return solve ( max , f - NUMBER_CONSTANT ) ; }
Distance : 4

185
Tree	{ return solve ( max , super(); ) ; }
Code	{ return solve ( max , super(); ) ; }
Distance : 4

186
Tree	{ return min . solve ( f ) ; }
Code	{ return min . solve ( f ) ; }
Distance : 6

187
Tree	{ return min . solve ( max ) ; }
Code	{ return min . solve ( max ) ; }
Distance : 6

188
Tree	{ return max . solve ( min , min ) ; }
Code	{ return max . solve ( min , min ) ; }
Distance : 5

189
Tree	{ return min . solve ( f , max ) ; }
Code	{ return min . solve ( f , max ) ; }
Distance : 4

190
Tree	{ return min . solve ( max , max ) ; }
Code	{ return min . solve ( max , max ) ; }
Distance : 5

191
Tree	{ return solve ( min , max ) ; } a
Code	{ return solve ( min , max ) ; } a
Distance : 3

192
Tree	{ return solve ( min , max ) ; } mockingProgress
Code	{ return solve ( min , max ) ; } mockingProgress
Distance : 3

193
Tree	{ return solve ( min , max ) ; } clone
Code	{ return solve ( min , max ) ; } clone
Distance : 3

194
Tree	{ return solve ( min , max ) ; } Double
Code	{ return solve ( min , max ) ; } Double
Distance : 3

195
Tree	{ return solve ( min , max ) ; } PeriodType
Code	{ return solve ( min , max ) ; } PeriodType
Distance : 3

196
Tree	{ return solve ( min , max ) ; } <=
Code	{ return solve ( min , max ) ; } <=
Distance : 3

197
Tree	{ return solve ( min , max ) ; } chrono
Code	{ return solve ( min , max ) ; } chrono
Distance : 3

198
Tree	{ return solve ( min , max ) ; } contains
Code	{ return solve ( min , max ) ; } contains
Distance : 3

199
Tree	{ return solve ( min , max ) ; } notifyListeners
Code	{ return solve ( min , max ) ; } notifyListeners
Distance : 3

========================================================================


========================================================================
Example Number: 58
Parent Code is: 
out [ i ] [ j ] = NUMBER_CONSTANT * ( NUMBER_CONSTANT - tDistribution . cumulativeProbability ( t ) ) ;
-------------------------------------------------------------------------------
Child code is: 
out [ i ] [ j ] = NUMBER_CONSTANT * tDistribution . cumulativeProbability ( - t ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (2 (2 (801{val=out}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (36 (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (201{val=-}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (800{val=t}) (215{val=)}))) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (2 (2 (801{val=out}) (221{val=[}) (800{val=i}) (222{val=]})) (221{val=[}) (800{val=j}) (222{val=]})) (204{val==}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (32 (800{val=tDistribution}) (235{val=.}) (802{val=cumulativeProbability}) (214{val=(}) (38 (201{val=-}) (800{val=t})) (215{val=)})))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/69/parent/src_main_java_org_apache_commons_math_stat_correlation_PearsonsCorrelation.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	j = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

1
Tree	i = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

2
Tree	i = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

3
Tree	j = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

4
Tree	j = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

5
Tree	tDistribution = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

6
Tree	j = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

7
Tree	j = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

8
Tree	i = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

9
Tree	t = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

10
Tree	j = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

11
Tree	tDistribution = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

12
Tree	tDistribution = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

13
Tree	tDistribution = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

14
Tree	t = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

15
Tree	i = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

16
Tree	i = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

17
Tree	j = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

18
Tree	j = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

19
Tree	j = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

20
Tree	i = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

21
Tree	tDistribution = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

22
Tree	i = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

23
Tree	j = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

24
Tree	j = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

25
Tree	j = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

26
Tree	j = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

27
Tree	i = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

28
Tree	j = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

29
Tree	tDistribution = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

30
Tree	tDistribution = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

31
Tree	i = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

32
Tree	j = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

33
Tree	j = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

34
Tree	j = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

35
Tree	tDistribution = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

36
Tree	tDistribution = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

37
Tree	i = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

38
Tree	j = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

39
Tree	tDistribution = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

40
Tree	i = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

41
Tree	i = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

42
Tree	i = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

43
Tree	i = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

44
Tree	j = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

45
Tree	i = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

46
Tree	t = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

47
Tree	t = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

48
Tree	tDistribution = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

49
Tree	tDistribution = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

50
Tree	j = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

51
Tree	j = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

52
Tree	i = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

53
Tree	i = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

54
Tree	j = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

55
Tree	tDistribution = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

56
Tree	j = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

57
Tree	j = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

58
Tree	tDistribution = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

59
Tree	i = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

60
Tree	tDistribution = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

61
Tree	tDistribution = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

62
Tree	j = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

63
Tree	i = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

64
Tree	i = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

65
Tree	j = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

66
Tree	i = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

67
Tree	j = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

68
Tree	i = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

69
Tree	t = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

70
Tree	j = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

71
Tree	j = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

72
Tree	tDistribution = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

73
Tree	j = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

74
Tree	i = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

75
Tree	t = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( MathUtils.TWO_PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

76
Tree	t = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( obj1.props == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

77
Tree	i = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

78
Tree	j = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

79
Tree	i = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

80
Tree	i = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

81
Tree	i = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

82
Tree	tDistribution = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

83
Tree	j = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

84
Tree	i = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

85
Tree	tDistribution = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( RandomSource.MT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

86
Tree	j = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

87
Tree	i = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

88
Tree	j = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

89
Tree	t = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( config.parseTypeSyntax == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

90
Tree	t = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( verifierStub.invocations == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

91
Tree	j = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

92
Tree	tDistribution = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( Boolean.TRUE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

93
Tree	j = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

94
Tree	tDistribution = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( callSite.parent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

95
Tree	j = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

96
Tree	t = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.NON_SQUARE_MATRIX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

97
Tree	i = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

98
Tree	tDistribution = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

99
Tree	tDistribution = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

100
Tree	j = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

101
Tree	tDistribution = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

102
Tree	j = ( ( Percentile.EstimationType.LEGACY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( Percentile.EstimationType.LEGACY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

103
Tree	i = ( ( ComposableFunction.ABS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ComposableFunction.ABS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

104
Tree	j = ( ( MathUtils.TWO_PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( MathUtils.TWO_PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

105
Tree	i = ( ( ArrayUtils.INDEX_NOT_FOUND == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ArrayUtils.INDEX_NOT_FOUND == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

106
Tree	j = ( ( sb.buffer.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( sb.buffer.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

107
Tree	i = ( ( LocalizedFormats.INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

108
Tree	t = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( com.google.protobuf.InvalidProtocolBufferException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

109
Tree	j = ( ( BigReal.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( BigReal.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

110
Tree	j = ( ( RandomNameGenerator.FIRST_CHAR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( RandomNameGenerator.FIRST_CHAR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

111
Tree	tDistribution = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

112
Tree	i = ( ( LocalizedFormats.OUT_OF_RANGE_SIMPLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.OUT_OF_RANGE_SIMPLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

113
Tree	j = ( ( problem.y == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( problem.y == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

114
Tree	tDistribution = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

115
Tree	t = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.RANDOMKEY_MUTATION_WRONG_CLASS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

116
Tree	t = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( ComposableFunction.COSH == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

117
Tree	i = ( ( BinaryFunction.POW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( BinaryFunction.POW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

118
Tree	tDistribution = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

119
Tree	j = ( ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

120
Tree	i = ( ( StandardBasicTypes.TIME == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( StandardBasicTypes.TIME == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

121
Tree	i = ( ( mapper.start == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( mapper.start == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

122
Tree	j = ( ( LocalizedFormats.NON_SQUARE_MATRIX == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.NON_SQUARE_MATRIX == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

123
Tree	t = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( Any.ANY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

124
Tree	i = ( ( ref.node == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( ref.node == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

125
Tree	t = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

126
Tree	tDistribution = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

127
Tree	t = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

128
Tree	t = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

129
Tree	i = ( ( MathUtils.TWO_PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( MathUtils.TWO_PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

130
Tree	i = ( ( Percentile.EstimationType.LEGACY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( Percentile.EstimationType.LEGACY == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

131
Tree	i = ( ( sb.buffer.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( sb.buffer.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

132
Tree	t = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

133
Tree	j = ( ( ComposableFunction.SQRT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ComposableFunction.SQRT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

134
Tree	i = ( ( BigReal.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( BigReal.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

135
Tree	i = ( ( problem.y == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( problem.y == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

136
Tree	i = ( ( RandomNameGenerator.FIRST_CHAR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( RandomNameGenerator.FIRST_CHAR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

137
Tree	i = ( ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.MINIMAL_STEPSIZE_REACHED_DURING_INTEGRATION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

138
Tree	j = ( ( NewTypeInference.GLOBAL_THIS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( NewTypeInference.GLOBAL_THIS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

139
Tree	j = ( ( result.errors == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( result.errors == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

140
Tree	tDistribution = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

141
Tree	i = ( ( source.moment == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( source.moment == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

142
Tree	tDistribution = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

143
Tree	i = ( ( LocalizedFormats.DUPLICATED_ABSCISSA == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.DUPLICATED_ABSCISSA == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

144
Tree	t = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.CLASS_DOESNT_IMPLEMENT_COMPARABLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

145
Tree	tDistribution = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

146
Tree	t = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( FastMath.PI == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

147
Tree	tDistribution = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

148
Tree	i = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( FastMath.PI == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

149
Tree	i = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

150
Tree	j = ( ( source.moment == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( source.moment == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

151
Tree	i = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.COLUMN_INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

152
Tree	tDistribution = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( TimePeriodValue == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

153
Tree	t = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.N_POINTS_GAUSS_LEGENDRE_INTEGRATOR_NOT_SUPPORTED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

154
Tree	t = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LanguageMode.ECMASCRIPT_2016 == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

155
Tree	i = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

156
Tree	tDistribution = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( LocalizedFormats.FAILED_FRACTION_CONVERSION == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

157
Tree	i = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( FeatureSet.TYPESCRIPT == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

158
Tree	j = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

159
Tree	tDistribution = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

160
Tree	tDistribution = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( RandomSource.State == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

161
Tree	j = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

162
Tree	tDistribution = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

163
Tree	i = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

164
Tree	j = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

165
Tree	i = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

166
Tree	j = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

167
Tree	i = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

168
Tree	t = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

169
Tree	j = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

170
Tree	t = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( ArrayRealVectorTest.RealVectorTestImpl == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

171
Tree	i = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

172
Tree	tDistribution = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( ThrowsException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

173
Tree	i = ( ( Exec.INSTANCE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( Exec.INSTANCE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

174
Tree	t = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( CompilerOptions.J2clPassMode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

175
Tree	tDistribution = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( RandomSource.TWO_CMRES == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

176
Tree	j = ( ( LocalizedFormats.DUPLICATED_ABSCISSA == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.DUPLICATED_ABSCISSA == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

177
Tree	j = ( ( ref.node == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ref.node == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

178
Tree	tDistribution = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( DstNormalization.STANDARD_DST_I == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

179
Tree	tDistribution = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( to.finalField == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

180
Tree	tDistribution = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( values.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

181
Tree	j = ( ( ComposableFunction.ABS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ComposableFunction.ABS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

182
Tree	j = ( ( ArrayUtils.INDEX_NOT_FOUND == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( ArrayUtils.INDEX_NOT_FOUND == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

183
Tree	j = ( ( LocalizedFormats.INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.INDEX_OUT_OF_RANGE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

184
Tree	tDistribution = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( Cartesian3D.ZERO == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

185
Tree	j = ( ( LocalizedFormats.OUT_OF_RANGE_SIMPLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( LocalizedFormats.OUT_OF_RANGE_SIMPLE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

186
Tree	i = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( StandardPieURLGenerator == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

187
Tree	j = ( ( BinaryFunction.POW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( BinaryFunction.POW == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

188
Tree	tDistribution = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	tDistribution = ( ( v.data == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

189
Tree	i = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

190
Tree	i = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( OHLCDataItem == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

191
Tree	j = ( ( StandardBasicTypes.TIME == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( StandardBasicTypes.TIME == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

192
Tree	j = ( ( Exec.INSTANCE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( Exec.INSTANCE == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

193
Tree	j = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( org.mockito.creation.instance.InstantiationException == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

194
Tree	j = ( ( mapper.start == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	j = ( ( mapper.start == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

195
Tree	i = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( DfpField.FLAG_INVALID == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

196
Tree	t = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( expected.length == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

197
Tree	i = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( MathUtils.PI_SQUARED == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

198
Tree	t = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	t = ( ( metadata.superClassNameNode == tDistribution ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 18

199
Tree	i = ( ( LocalizedFormats.NON_SQUARE_MATRIX == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Code	i = ( ( LocalizedFormats.NON_SQUARE_MATRIX == j ) * ( t - NUMBER_CONSTANT ) * / * tDistribution ) ;
Distance : 17

========================================================================


========================================================================
Example Number: 59
Parent Code is: 
if ( p <= NUMBER_CONSTANT ) { throw MathRuntimeException . createIllegalArgumentException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.MEAN , p ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (32 (800{val=MathRuntimeException}) (235{val=.}) (802{val=createIllegalArgumentException}) (214{val=(}) (40{val=LocalizedFormats.NOT_POSITIVE_POISSON_MEAN}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=p}) (252{val=<=}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (53 (320{val=throw}) (14 (304{val=new}) (43 (801{val=NotStrictlyPositiveException})) (214{val=(}) (40{val=LocalizedFormats.MEAN}) (234{val=,}) (800{val=p}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/61/parent/src_main_java_org_apache_commons_math_distribution_PoissonDistributionImpl.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p ) ; }
Distance : 2

1
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } simpleMethod
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } simpleMethod
Distance : 5

2
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } instance
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } instance
Distance : 5

3
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } valueOf
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } valueOf
Distance : 5

4
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LanguageMode.ECMASCRIPT6
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LanguageMode.ECMASCRIPT6
Distance : 5

5
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } y
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } y
Distance : 5

6
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } externs
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } externs
Distance : 5

7
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } assertTrue
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } assertTrue
Distance : 5

8
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ?
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ?
Distance : 5

9
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } /
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } /
Distance : 5

10
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } checkNotNull
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } checkNotNull
Distance : 5

11
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } TestUtils
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } TestUtils
Distance : 5

12
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Fraction
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Fraction
Distance : 5

13
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Assert
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Assert
Distance : 5

14
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } invocations
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } invocations
Distance : 5

15
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } protected
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } protected
Distance : 5

16
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } stream
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } stream
Distance : 5

17
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } static
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } static
Distance : 5

18
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } a
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } a
Distance : 5

19
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } setAcceptedLanguage
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } setAcceptedLanguage
Distance : 5

20
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getArgumentMatcherStorage
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getArgumentMatcherStorage
Distance : 5

21
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } reportMatcher
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } reportMatcher
Distance : 5

22
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } optimizer
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } optimizer
Distance : 5

23
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } matcher
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } matcher
Distance : 5

24
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ;
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ;
Distance : 5

25
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <blank>
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <blank>
Distance : 5

26
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ;
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ;
Distance : 5

27
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <s>
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <s>
Distance : 5

28
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } (
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } (
Distance : 5

29
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } if
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } if
Distance : 5

30
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <
Distance : 5

31
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } this
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } this
Distance : 5

32
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } final
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } final
Distance : 5

33
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } public
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } public
Distance : 5

34
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } >
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } >
Distance : 5

35
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } null
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } null
Distance : 5

36
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } i
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } i
Distance : 5

37
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } &&
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } &&
Distance : 5

38
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } index
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } index
Distance : 5

39
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } out
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } out
Distance : 5

40
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } values
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } values
Distance : 5

41
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } return
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } return
Distance : 5

42
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } node
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } node
Distance : 5

43
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } alpha
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } alpha
Distance : 5

44
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } abs
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } abs
Distance : 5

45
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } StringBuilder
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } StringBuilder
Distance : 5

46
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } mockingProgress
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } mockingProgress
Distance : 5

47
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Override
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Override
Distance : 6

48
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } mock
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } mock
Distance : 6

49
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Object
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Object
Distance : 6

50
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } class
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } class
Distance : 6

51
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } try
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } try
Distance : 6

52
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } fail
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } fail
Distance : 6

53
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } List
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } List
Distance : 6

54
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } getInstance
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } getInstance
Distance : 6

55
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } result
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } result
Distance : 6

56
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } :
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } :
Distance : 6

57
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } boolean
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } boolean
Distance : 6

58
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } m
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } m
Distance : 6

59
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Node
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Node
Distance : 6

60
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Exception
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Exception
Distance : 6

61
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } lines
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } lines
Distance : 6

62
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } verify
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } verify
Distance : 6

63
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Integer
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Integer
Distance : 6

64
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } v
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } v
Distance : 6

65
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; }
Distance : 4

66
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } f
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } f
Distance : 6

67
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } ParamChecks
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } ParamChecks
Distance : 6

68
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } array
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } array
Distance : 6

69
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } <>
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } <>
Distance : 6

70
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } chrono
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } chrono
Distance : 5

71
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } else
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } else
Distance : 5

72
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getMessage
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getMessage
Distance : 5

73
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } instant
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } instant
Distance : 5

74
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } char
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } char
Distance : 5

75
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } JSType
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } JSType
Distance : 5

76
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } get
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } get
Distance : 5

77
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } isEmpty
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } isEmpty
Distance : 5

78
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } stroke
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } stroke
Distance : 5

79
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } )
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } )
Distance : 5

80
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } MutableTimePeriod
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } MutableTimePeriod
Distance : 5

81
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } size
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } size
Distance : 5

82
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } obj
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } obj
Distance : 5

83
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } traverseEs6
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } traverseEs6
Distance : 5

84
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } s
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } s
Distance : 5

85
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } NUMBER_CONSTANT
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } NUMBER_CONSTANT
Distance : 5

86
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Math
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Math
Distance : 5

87
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ]
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ]
Distance : 5

88
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Args
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } Args
Distance : 6

89
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } ArrayList
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; } ArrayList
Distance : 6

90
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LanguageMode.ECMASCRIPT_2015
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

91
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } .
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } .
Distance : 5

92
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } return;
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } return;
Distance : 5

93
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } =
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } =
Distance : 5

94
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 6

95
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 6

96
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , MathRuntimeException ) ; }
Distance : 3

97
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , p ) ; }
Distance : 3

98
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN ) ; }
Distance : 4

99
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , p ) ; }
Distance : 4

100
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , STRING_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , STRING_CONSTANT ) ; }
Distance : 3

101
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException ) ; }
Distance : 4

102
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , true ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , true ) ; }
Distance : 5

103
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , false ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , false ) ; }
Distance : 5

104
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException ) ; }
Distance : 2

105
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , STRING_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , STRING_CONSTANT ) ; }
Distance : 3

106
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p ) ; }
Distance : 2

107
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 6

108
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 6

109
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , MathRuntimeException ) ; }
Distance : 3

110
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , p ) ; }
Distance : 3

111
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= ) ; }
Distance : 4

112
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , p ) ; }
Distance : 4

113
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 2

114
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , STRING_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , STRING_CONSTANT ) ; }
Distance : 3

115
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , true ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , true ) ; }
Distance : 4

116
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , STRING_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , STRING_CONSTANT ) ; }
Distance : 3

117
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , STRING_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , STRING_CONSTANT ) ; }
Distance : 2

118
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ,
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ,
Distance : 5

119
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( STRING_CONSTANT + STRING_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( STRING_CONSTANT + STRING_CONSTANT ) ; }
Distance : 3

120
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; }
Distance : 1

121
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 5

122
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN ) ; }
Distance : 3

123
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , p ) ; }
Distance : 3

124
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , STRING_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , STRING_CONSTANT ) ; }
Distance : 2

125
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException ) ; }
Distance : 3

126
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , true ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , true ) ; }
Distance : 4

127
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , false ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , false ) ; }
Distance : 4

128
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , STRING_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , STRING_CONSTANT ) ; }
Distance : 2

129
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p ) ; }
Distance : 1

130
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 5

131
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p ) ; }
Distance : 3

132
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= ) ; }
Distance : 3

133
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; }
Distance : 5

134
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , p ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , p ) ; }
Distance : 3

135
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , STRING_CONSTANT ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , STRING_CONSTANT ) ; }
Distance : 2

136
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 2

137
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException ) ; }
Distance : 3

138
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( STRING_CONSTANT + STRING_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( STRING_CONSTANT + STRING_CONSTANT ) ; }
Distance : 4

139
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 7

140
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } b
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } b
Distance : 5

141
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } contains
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } contains
Distance : 5

142
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } isNormalBlock
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } isNormalBlock
Distance : 5

143
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Double
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Double
Distance : 5

144
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <=
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } <=
Distance : 5

145
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } clone
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } clone
Distance : 5

146
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } sqrt
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } sqrt
Distance : 5

147
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } double
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } double
Distance : 5

148
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } checkState
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } checkState
Distance : 5

149
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Test
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Test
Distance : 5

150
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } value
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } value
Distance : 5

151
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } !=
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } !=
Distance : 5

152
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } T
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } T
Distance : 5

153
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } +
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } +
Distance : 5

154
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } STRING_CONSTANT
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } STRING_CONSTANT
Distance : 5

155
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } new
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } new
Distance : 5

156
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } {
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } {
Distance : 5

157
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , true ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( MathRuntimeException , NUMBER_CONSTANT , true ) ; }
Distance : 5

158
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ()
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } ()
Distance : 5

159
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } }
Distance : 5

160
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Class
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } Class
Distance : 5

161
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } PeriodType
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } PeriodType
Distance : 5

162
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } super
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } super
Distance : 5

163
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } assertThat
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } assertThat
Distance : 5

164
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , MathRuntimeException ) ; }
Distance : 4

165
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p , MathRuntimeException ) ; }
Distance : 4

166
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , p ) ; }
Distance : 4

167
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException ) ; }
Distance : 3

168
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , NUMBER_CONSTANT , NUMBER_CONSTANT ) ; }
Distance : 7

169
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , MathRuntimeException ) ; }
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , MathRuntimeException ) ; }
Distance : 4

170
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , p ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , p ) ; }
Distance : 4

171
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , MathRuntimeException , MathRuntimeException ) ; }
Distance : 5

172
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , MathRuntimeException , MathRuntimeException ) ; }
Distance : 5

173
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getParent
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } getParent
Distance : 5

174
Tree	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , MathRuntimeException ) ; }
Code	if ( MathRuntimeException <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( <= , p , MathRuntimeException ) ; }
Distance : 4

175
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } notifyListeners
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } notifyListeners
Distance : 5

176
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } c
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } c
Distance : 5

177
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } x
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } x
Distance : 5

178
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } testSame
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } testSame
Distance : 5

179
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } parent
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } parent
Distance : 5

180
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } createIllegalArgumentException
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } createIllegalArgumentException
Distance : 5

181
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } invocation
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } invocation
Distance : 5

182
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } str
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } str
Distance : 5

183
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LINE_JOINER
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( p , NUMBER_CONSTANT , false ) ; } LINE_JOINER
Distance : 5

184
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } testSame
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } testSame
Distance : 2

185
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } matcher
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } matcher
Distance : 2

186
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instant
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instant
Distance : 2

187
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } s
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } s
Distance : 2

188
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } size
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } size
Distance : 2

189
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } traverseEs6
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } traverseEs6
Distance : 2

190
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } x
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } x
Distance : 2

191
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } alpha
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } alpha
Distance : 2

192
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getMessage
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } getMessage
Distance : 2

193
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } optimizer
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } optimizer
Distance : 2

194
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertTrue
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } assertTrue
Distance : 2

195
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkNotNull
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } checkNotNull
Distance : 2

196
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } simpleMethod
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } simpleMethod
Distance : 2

197
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instance
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } instance
Distance : 2

198
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } valueOf
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } valueOf
Distance : 2

199
Tree	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LanguageMode.ECMASCRIPT6
Code	if ( p <= NUMBER_CONSTANT ) { throw new NotStrictlyPositiveException ( LocalizedFormats.NOT_POSITIVE_POISSON_MEAN , p ) ; } LanguageMode.ECMASCRIPT6
Distance : 2

========================================================================


========================================================================
Example Number: 60
Parent Code is: 
{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=a}) (252{val=<=}) (800{val=b})) (215{val=)})) (233{val=?}) (800{val=b}) (226{val=:}) (36 (214{val=(}) (16 (32 (800{val=Float}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (27 (800{val=a}) (200{val=+}) (800{val=b})) (215{val=)})) (233{val=?}) (40{val=Float.NaN}) (226{val=:}) (800{val=b})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (16 (36 (214{val=(}) (27 (800{val=a}) (252{val=<=}) (800{val=b})) (215{val=)})) (233{val=?}) (800{val=b}) (226{val=:}) (36 (214{val=(}) (16 (32 (800{val=Float}) (235{val=.}) (802{val=isNaN}) (214{val=(}) (27 (800{val=a}) (200{val=+}) (800{val=b})) (215{val=)})) (233{val=?}) (40{val=Float.NaN}) (226{val=:}) (800{val=a})) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/59/parent/src_main_java_org_apache_commons_math_util_FastMath.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 1

1
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 0

2
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

3
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

4
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 1

5
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

6
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

7
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

8
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 2

9
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

10
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

11
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

12
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 1

13
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

14
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 3

15
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

16
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

17
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

18
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 2

19
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

20
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 2

21
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 1

22
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 2

23
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

24
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

25
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

26
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

27
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

28
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

29
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

30
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

31
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

32
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

33
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 2

34
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

35
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 2

36
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

37
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

38
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

39
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

40
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

41
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

42
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

43
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 1

44
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

45
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

46
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

47
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

48
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

49
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 2

50
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

51
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 3

52
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

53
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

54
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

55
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

56
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

57
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

58
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

59
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

60
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

61
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

62
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

63
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

64
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

65
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 2

66
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 3

67
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

68
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

69
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 3

70
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 1

71
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

72
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

73
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

74
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

75
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

76
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

77
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

78
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

79
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 5

80
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

81
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

82
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

83
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

84
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

85
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

86
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 3

87
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Distance : 3

88
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

89
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 1

90
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 3

91
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

92
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

93
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 5

94
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

95
Tree	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

96
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

97
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

98
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

99
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

100
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Distance : 2

101
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

102
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

103
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

104
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

105
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

106
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

107
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 3

108
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

109
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

110
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

111
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

112
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 3

113
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

114
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

115
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : Float ) ; }
Distance : 2

116
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 4

117
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

118
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 5

119
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 3

120
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

121
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 2

122
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

123
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 3

124
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 3

125
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

126
Tree	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

127
Tree	{ return ( b <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

128
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

129
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

130
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

131
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 3

132
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

133
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

134
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

135
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

136
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 2

137
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 2

138
Tree	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

139
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 5

140
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

141
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 4

142
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 4

143
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

144
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

145
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

146
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

147
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

148
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

149
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

150
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 3

151
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 3

152
Tree	{ return ( Float <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= a ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

153
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( Float + a ) ? Float.NaN : b ) ; }
Distance : 4

154
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

155
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : a ) ; }
Distance : 2

156
Tree	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= b ) ? a : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

157
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : a ) ; }
Distance : 4

158
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Distance : 4

159
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : a ) ; }
Distance : 2

160
Tree	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( Float . isNaN ( Float + b ) ? Float.NaN : Float ) ; }
Distance : 2

161
Tree	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? Float : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

162
Tree	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= Float ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 3

163
Tree	{ return ( b <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? b : ( b . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

164
Tree	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= Float ) ? a : ( Float . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

165
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 4

166
Tree	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= b ) ? b : ( a . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

167
Tree	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

168
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 4

169
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

170
Tree	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : a ) ; }
Distance : 2

171
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( a + b ) ? Float.NaN : Float ) ; }
Distance : 2

172
Tree	{ return ( b <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

173
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( Float + b ) ? Float.NaN : b ) ; }
Distance : 4

174
Tree	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

175
Tree	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

176
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 4

177
Tree	{ return ( b <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

178
Tree	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( Float . isNaN ( Float + a ) ? Float.NaN : a ) ; }
Distance : 3

179
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

180
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

181
Tree	{ return ( a <= a ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( b . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 4

182
Tree	{ return ( a <= a ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? a : ( a . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 5

183
Tree	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( b <= a ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 3

184
Tree	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Code	{ return ( b <= b ) ? b : ( Float . isNaN ( b + b ) ? Float.NaN : Float ) ; }
Distance : 3

185
Tree	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? Float : ( Float . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

186
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( a + b ) ? Float.NaN : b ) ; }
Distance : 3

187
Tree	{ return ( a <= b ) ? b : ( b . isNaN ( b + a ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? b : ( b . isNaN ( b + a ) ? Float.NaN : b ) ; }
Distance : 4

188
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( b + b ) ? Float.NaN : a ) ; }
Distance : 2

189
Tree	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( Float <= a ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

190
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

191
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + a ) ? Float.NaN : Float ) ; }
Distance : 4

192
Tree	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Code	{ return ( b <= Float ) ? b : ( Float . isNaN ( a + a ) ? Float.NaN : b ) ; }
Distance : 4

193
Tree	{ return ( b <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( b <= a ) ? a : ( Float . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 5

194
Tree	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Code	{ return ( Float <= b ) ? b : ( Float . isNaN ( a + Float ) ? Float.NaN : b ) ; }
Distance : 3

195
Tree	{ return ( a <= a ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Code	{ return ( a <= a ) ? b : ( Float . isNaN ( b + Float ) ? Float.NaN : b ) ; }
Distance : 4

196
Tree	{ return ( a <= b ) ? a : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Code	{ return ( a <= b ) ? a : ( a . isNaN ( b + b ) ? Float.NaN : b ) ; }
Distance : 4

197
Tree	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Code	{ return ( a <= b ) ? b : ( a . isNaN ( a + a ) ? Float.NaN : Float ) ; }
Distance : 3

198
Tree	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Code	{ return ( a <= b ) ? a : ( b . isNaN ( a + a ) ? Float.NaN : a ) ; }
Distance : 3

199
Tree	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Code	{ return ( a <= a ) ? a : ( Float . isNaN ( a + Float ) ? Float.NaN : a ) ; }
Distance : 3

========================================================================


========================================================================
Example Number: 61
Parent Code is: 
return fit ( new Gaussian.Parametric () , guess ) ;
-------------------------------------------------------------------------------
Child code is: 
return fit ( guess ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=fit}) (214{val=(}) (14 (304{val=new}) (43 (40{val=Gaussian.Parametric})) (216{val=()})) (234{val=,}) (800{val=guess}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=fit}) (214{val=(}) (800{val=guess}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/58/parent/src_main_java_org_apache_commons_math_optimization_fitting_GaussianFitter.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return fit ( new MinimizeExitPoints < guess > ( guess ) , guess ) ;
Code	return fit ( new MinimizeExitPoints < guess > ( guess ) , guess ) ;
Distance : 9

1
Tree	return fit ( new paletteName < guess > ( new ) , guess ) ;
Code	return fit ( new paletteName < guess > ( new ) , guess ) ;
Distance : 9

2
Tree	return fit ( new Median < guess > ( new ) , guess ) ;
Code	return fit ( new Median < guess > ( new ) , guess ) ;
Distance : 9

3
Tree	return fit ( new Assign < guess > ( new ) , guess ) ;
Code	return fit ( new Assign < guess > ( new ) , guess ) ;
Distance : 9

4
Tree	return fit ( new newHeaderNode < guess > ( guess ) , guess ) ;
Code	return fit ( new newHeaderNode < guess > ( guess ) , guess ) ;
Distance : 9

5
Tree	return fit ( new SymmLQEvent < guess > ( guess ) , guess ) ;
Code	return fit ( new SymmLQEvent < guess > ( guess ) , guess ) ;
Distance : 9

6
Tree	return fit ( new MatchNameNode < guess > ( new ) , guess ) ;
Code	return fit ( new MatchNameNode < guess > ( new ) , guess ) ;
Distance : 9

7
Tree	return fit ( new StandardPieToolTipGenerator < guess > ( guess ) , guess ) ;
Code	return fit ( new StandardPieToolTipGenerator < guess > ( guess ) , guess ) ;
Distance : 9

8
Tree	return fit ( new RealVectorFormat < guess > ( guess ) , guess ) ;
Code	return fit ( new RealVectorFormat < guess > ( guess ) , guess ) ;
Distance : 9

9
Tree	return fit ( new CapturesArguments < guess > ( guess ) , guess ) ;
Code	return fit ( new CapturesArguments < guess > ( guess ) , guess ) ;
Distance : 9

10
Tree	return fit ( new StubInfoImpl < guess > ( new ) , guess ) ;
Code	return fit ( new StubInfoImpl < guess > ( new ) , guess ) ;
Distance : 9

11
Tree	return fit ( new AncestorIterable < guess > ( new ) , guess ) ;
Code	return fit ( new AncestorIterable < guess > ( new ) , guess ) ;
Distance : 9

12
Tree	return fit ( new accum < guess > ( guess ) , guess ) ;
Code	return fit ( new accum < guess > ( guess ) , guess ) ;
Distance : 9

13
Tree	return fit ( new quoteless < guess > ( guess ) , guess ) ;
Code	return fit ( new quoteless < guess > ( guess ) , guess ) ;
Distance : 9

14
Tree	return fit ( new FrameworkUsageValidator < guess > ( guess ) , guess ) ;
Code	return fit ( new FrameworkUsageValidator < guess > ( guess ) , guess ) ;
Distance : 9

15
Tree	return fit ( new getPrototypeNameOfMethod < guess > ( new ) , guess ) ;
Code	return fit ( new getPrototypeNameOfMethod < guess > ( new ) , guess ) ;
Distance : 9

16
Tree	return fit ( new FormattedText < guess > ( guess ) , guess ) ;
Code	return fit ( new FormattedText < guess > ( guess ) , guess ) ;
Distance : 9

17
Tree	return fit ( new MalformedException < guess > ( new ) , guess ) ;
Code	return fit ( new MalformedException < guess > ( new ) , guess ) ;
Distance : 9

18
Tree	return fit ( new AAClass < guess > ( guess ) , guess ) ;
Code	return fit ( new AAClass < guess > ( guess ) , guess ) ;
Distance : 9

19
Tree	return fit ( new isCommonJsImport < guess > ( guess ) , guess ) ;
Code	return fit ( new isCommonJsImport < guess > ( guess ) , guess ) ;
Distance : 9

20
Tree	return fit ( new INVALID_ES3_PROP_NAME < guess > ( guess ) , guess ) ;
Code	return fit ( new INVALID_ES3_PROP_NAME < guess > ( guess ) , guess ) ;
Distance : 9

21
Tree	return fit ( new changed < guess > ( new ) , guess ) ;
Code	return fit ( new changed < guess > ( new ) , guess ) ;
Distance : 9

22
Tree	return fit ( new ComparableObjectItem < guess > ( new ) , guess ) ;
Code	return fit ( new ComparableObjectItem < guess > ( new ) , guess ) ;
Distance : 9

23
Tree	return fit ( new Year.MAXIMUM_YEAR < guess > ( guess ) , guess ) ;
Code	return fit ( new Year.MAXIMUM_YEAR < guess > ( guess ) , guess ) ;
Distance : 9

24
Tree	return fit ( new TweakFunction < guess > ( guess ) , guess ) ;
Code	return fit ( new TweakFunction < guess > ( guess ) , guess ) ;
Distance : 9

25
Tree	return fit ( new BitSet < guess > ( guess ) , guess ) ;
Code	return fit ( new BitSet < guess > ( guess ) , guess ) ;
Distance : 9

26
Tree	return fit ( new DuplicateDeclarationHandler < guess > ( guess ) , guess ) ;
Code	return fit ( new DuplicateDeclarationHandler < guess > ( guess ) , guess ) ;
Distance : 9

27
Tree	return fit ( new ZigguratNormalizedGaussianSampler < guess > ( guess ) , guess ) ;
Code	return fit ( new ZigguratNormalizedGaussianSampler < guess > ( guess ) , guess ) ;
Distance : 9

28
Tree	return fit ( new KthSelector < guess > ( guess ) , guess ) ;
Code	return fit ( new KthSelector < guess > ( guess ) , guess ) ;
Distance : 9

29
Tree	return fit ( new centers < guess > ( new ) , guess ) ;
Code	return fit ( new centers < guess > ( new ) , guess ) ;
Distance : 9

30
Tree	return fit ( new EliminationPass < guess > ( guess ) , guess ) ;
Code	return fit ( new EliminationPass < guess > ( guess ) , guess ) ;
Distance : 9

31
Tree	return fit ( new mockedTypeIsInconsistentWithSpiedInstanceType < guess > ( new ) , guess ) ;
Code	return fit ( new mockedTypeIsInconsistentWithSpiedInstanceType < guess > ( new ) , guess ) ;
Distance : 9

32
Tree	return fit ( new DefaultTransformer < guess > ( guess ) , guess ) ;
Code	return fit ( new DefaultTransformer < guess > ( guess ) , guess ) ;
Distance : 9

33
Tree	return fit ( new AtLeastDiscrepancy < guess > ( guess ) , guess ) ;
Code	return fit ( new AtLeastDiscrepancy < guess > ( guess ) , guess ) ;
Distance : 9

34
Tree	return fit ( new argMismatchStubbings < guess > ( guess ) , guess ) ;
Code	return fit ( new argMismatchStubbings < guess > ( guess ) , guess ) ;
Distance : 9

35
Tree	return fit ( new AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE < guess > ( guess ) , guess ) ;
Code	return fit ( new AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE < guess > ( guess ) , guess ) ;
Distance : 9

36
Tree	return fit ( new LinearConstraintSet < guess > ( , ) , guess ) ;
Code	return fit ( new LinearConstraintSet < guess > ( , ) , guess ) ;
Distance : 9

37
Tree	return fit ( new PassNames.AFTER_STANDARD_CHECKS < guess > ( new ) , guess ) ;
Code	return fit ( new PassNames.AFTER_STANDARD_CHECKS < guess > ( new ) , guess ) ;
Distance : 9

38
Tree	return fit ( new InvocationMarker < guess > ( new ) , guess ) ;
Code	return fit ( new InvocationMarker < guess > ( new ) , guess ) ;
Distance : 9

39
Tree	return fit ( new low < guess > ( guess ) , guess ) ;
Code	return fit ( new low < guess > ( guess ) , guess ) ;
Distance : 9

40
Tree	return fit ( new CrossModuleCodeMotion < guess > ( guess ) , guess ) ;
Code	return fit ( new CrossModuleCodeMotion < guess > ( guess ) , guess ) ;
Distance : 9

41
Tree	return fit ( new InlineFunctions < guess > ( guess ) , guess ) ;
Code	return fit ( new InlineFunctions < guess > ( guess ) , guess ) ;
Distance : 9

42
Tree	return fit ( new IdentifierToken < guess > ( , ) , guess ) ;
Code	return fit ( new IdentifierToken < guess > ( , ) , guess ) ;
Distance : 9

43
Tree	return fit ( new RankDeficientMatrixException < guess > ( guess ) , guess ) ;
Code	return fit ( new RankDeficientMatrixException < guess > ( guess ) , guess ) ;
Distance : 9

44
Tree	return fit ( new FileInputStream < guess > ( guess ) , guess ) ;
Code	return fit ( new FileInputStream < guess > ( guess ) , guess ) ;
Distance : 9

45
Tree	return fit ( new TextField < guess > ( guess ) , guess ) ;
Code	return fit ( new TextField < guess > ( guess ) , guess ) ;
Distance : 9

46
Tree	return fit ( new MissingInvocationInOrderChecker < guess > ( guess ) , guess ) ;
Code	return fit ( new MissingInvocationInOrderChecker < guess > ( guess ) , guess ) ;
Distance : 9

47
Tree	return fit ( new defaultOutlinePaint < guess > ( guess ) , guess ) ;
Code	return fit ( new defaultOutlinePaint < guess > ( guess ) , guess ) ;
Distance : 9

48
Tree	return fit ( new toCanonicalName < guess > ( guess ) , guess ) ;
Code	return fit ( new toCanonicalName < guess > ( guess ) , guess ) ;
Distance : 9

49
Tree	return fit ( new CanPrintArgumentVerbosely < guess > ( new ) , guess ) ;
Code	return fit ( new CanPrintArgumentVerbosely < guess > ( new ) , guess ) ;
Distance : 9

50
Tree	return fit ( new showSeparators < guess > ( guess ) , guess ) ;
Code	return fit ( new showSeparators < guess > ( guess ) , guess ) ;
Distance : 9

51
Tree	return fit ( new nameFor < guess > ( guess ) , guess ) ;
Code	return fit ( new nameFor < guess > ( guess ) , guess ) ;
Distance : 9

52
Tree	return fit ( new zeroInteractionsWanted < guess > ( guess ) , guess ) ;
Code	return fit ( new zeroInteractionsWanted < guess > ( guess ) , guess ) ;
Distance : 9

53
Tree	return fit ( new normalizeWhitelist < guess > ( new ) , guess ) ;
Code	return fit ( new normalizeWhitelist < guess > ( new ) , guess ) ;
Distance : 9

54
Tree	return fit ( new InMemoryClassLoader < guess > ( guess ) , guess ) ;
Code	return fit ( new InMemoryClassLoader < guess > ( guess ) , guess ) ;
Distance : 9

55
Tree	return fit ( new BufferedReader < guess > ( guess ) , guess ) ;
Code	return fit ( new BufferedReader < guess > ( guess ) , guess ) ;
Distance : 9

56
Tree	return fit ( new astParameter < guess > ( guess ) , guess ) ;
Code	return fit ( new astParameter < guess > ( guess ) , guess ) ;
Distance : 9

57
Tree	return fit ( new SourceMap.PrefixLocationMapping < guess > ( guess ) , guess ) ;
Code	return fit ( new SourceMap.PrefixLocationMapping < guess > ( guess ) , guess ) ;
Distance : 9

58
Tree	return fit ( new Feature.OBJECT_PATTERN_REST < guess > ( guess ) , guess ) ;
Code	return fit ( new Feature.OBJECT_PATTERN_REST < guess > ( guess ) , guess ) ;
Distance : 9

59
Tree	return fit ( new CoverageInstrumentationCallback < guess > ( guess ) , guess ) ;
Code	return fit ( new CoverageInstrumentationCallback < guess > ( guess ) , guess ) ;
Distance : 9

60
Tree	return fit ( new PeepholeReorderConstantExpression < guess > ( , ) , guess ) ;
Code	return fit ( new PeepholeReorderConstantExpression < guess > ( , ) , guess ) ;
Distance : 9

61
Tree	return fit ( new CrosshairOverlay < guess > ( new ) , guess ) ;
Code	return fit ( new CrosshairOverlay < guess > ( new ) , guess ) ;
Distance : 9

62
Tree	return fit ( new ReorderConstantExpression < guess > ( guess ) , guess ) ;
Code	return fit ( new ReorderConstantExpression < guess > ( guess ) , guess ) ;
Distance : 9

63
Tree	return fit ( new invalidUseOfMatchers < guess > ( guess ) , guess ) ;
Code	return fit ( new invalidUseOfMatchers < guess > ( guess ) , guess ) ;
Distance : 9

64
Tree	return fit ( new getCalendarField < guess > ( new ) , guess ) ;
Code	return fit ( new getCalendarField < guess > ( new ) , guess ) ;
Distance : 9

65
Tree	return fit ( new BicubicSplineInterpolatingFunction < guess > ( new ) , guess ) ;
Code	return fit ( new BicubicSplineInterpolatingFunction < guess > ( new ) , guess ) ;
Distance : 9

66
Tree	return fit ( new Definition < guess > ( guess ) , guess ) ;
Code	return fit ( new Definition < guess > ( guess ) , guess ) ;
Distance : 9

67
Tree	return fit ( new seriesIndex < guess > ( guess ) , guess ) ;
Code	return fit ( new seriesIndex < guess > ( guess ) , guess ) ;
Distance : 9

68
Tree	return fit ( new UNKNOWN_TYPE < guess > ( guess ) , guess ) ;
Code	return fit ( new UNKNOWN_TYPE < guess > ( guess ) , guess ) ;
Distance : 9

69
Tree	return fit ( new removePropertyChangeListener < guess > ( , ) , guess ) ;
Code	return fit ( new removePropertyChangeListener < guess > ( , ) , guess ) ;
Distance : 9

70
Tree	return fit ( new validateArrayPatternRest < guess > ( guess ) , guess ) ;
Code	return fit ( new validateArrayPatternRest < guess > ( guess ) , guess ) ;
Distance : 9

71
Tree	return fit ( new TimeZoneOffset < guess > ( new ) , guess ) ;
Code	return fit ( new TimeZoneOffset < guess > ( new ) , guess ) ;
Distance : 9

72
Tree	return fit ( new StandardCategoryToolTipGenerator < guess > ( new ) , guess ) ;
Code	return fit ( new StandardCategoryToolTipGenerator < guess > ( new ) , guess ) ;
Distance : 9

73
Tree	return fit ( new DiagnosticGroupWarningsGuard < guess > ( guess ) , guess ) ;
Code	return fit ( new DiagnosticGroupWarningsGuard < guess > ( guess ) , guess ) ;
Distance : 9

74
Tree	return fit ( new DatasetChangeEvent < guess > ( guess ) , guess ) ;
Code	return fit ( new DatasetChangeEvent < guess > ( guess ) , guess ) ;
Distance : 9

75
Tree	return fit ( new seriesShapesFilled < guess > ( guess ) , guess ) ;
Code	return fit ( new seriesShapesFilled < guess > ( guess ) , guess ) ;
Distance : 9

76
Tree	return fit ( new BOTH_NULL < guess > ( guess ) , guess ) ;
Code	return fit ( new BOTH_NULL < guess > ( guess ) , guess ) ;
Distance : 9

77
Tree	return fit ( new SourceMapInput < guess > ( new ) , guess ) ;
Code	return fit ( new SourceMapInput < guess > ( new ) , guess ) ;
Distance : 9

78
Tree	return fit ( new mulAndCheck < guess > ( guess ) , guess ) ;
Code	return fit ( new mulAndCheck < guess > ( guess ) , guess ) ;
Distance : 9

79
Tree	return fit ( new J2clPass < guess > ( guess ) , guess ) ;
Code	return fit ( new J2clPass < guess > ( guess ) , guess ) ;
Distance : 9

80
Tree	return fit ( new createDouble < guess > ( new ) , guess ) ;
Code	return fit ( new createDouble < guess > ( new ) , guess ) ;
Distance : 9

81
Tree	return fit ( new ConstructorArgumentResolver < guess > ( guess ) , guess ) ;
Code	return fit ( new ConstructorArgumentResolver < guess > ( guess ) , guess ) ;
Distance : 9

82
Tree	return fit ( new classloader_with_life_shorter_than_cache < guess > ( guess ) , guess ) ;
Code	return fit ( new classloader_with_life_shorter_than_cache < guess > ( guess ) , guess ) ;
Distance : 9

83
Tree	return fit ( new dn < guess > ( guess ) , guess ) ;
Code	return fit ( new dn < guess > ( guess ) , guess ) ;
Distance : 9

84
Tree	return fit ( new equalsAny < guess > ( guess ) , guess ) ;
Code	return fit ( new equalsAny < guess > ( guess ) , guess ) ;
Distance : 9

85
Tree	return fit ( new InstrumentFunctions < guess > ( guess ) , guess ) ;
Code	return fit ( new InstrumentFunctions < guess > ( guess ) , guess ) ;
Distance : 9

86
Tree	return fit ( new sortSuperTypesLast < guess > ( guess ) , guess ) ;
Code	return fit ( new sortSuperTypesLast < guess > ( guess ) , guess ) ;
Distance : 9

87
Tree	return fit ( new startOffset < guess > ( guess ) , guess ) ;
Code	return fit ( new startOffset < guess > ( guess ) , guess ) ;
Distance : 9

88
Tree	return fit ( new MethodsImpl < guess > ( new ) , guess ) ;
Code	return fit ( new MethodsImpl < guess > ( new ) , guess ) ;
Distance : 9

89
Tree	return fit ( new RendererChangeEvent < guess > ( guess ) , guess ) ;
Code	return fit ( new RendererChangeEvent < guess > ( guess ) , guess ) ;
Distance : 9

90
Tree	return fit ( new isParsed < guess > ( guess ) , guess ) ;
Code	return fit ( new isParsed < guess > ( guess ) , guess ) ;
Distance : 9

91
Tree	return fit ( new unnecessaryStubbings < guess > ( guess ) , guess ) ;
Code	return fit ( new unnecessaryStubbings < guess > ( guess ) , guess ) ;
Distance : 9

92
Tree	return fit ( new getOrCreateProperty < guess > ( new ) , guess ) ;
Code	return fit ( new getOrCreateProperty < guess > ( new ) , guess ) ;
Distance : 9

93
Tree	return fit ( new DEFAULT_INITIAL_CAPACITY < guess > ( guess ) , guess ) ;
Code	return fit ( new DEFAULT_INITIAL_CAPACITY < guess > ( guess ) , guess ) ;
Distance : 9

94
Tree	return fit ( new scopeToDeclareIn < guess > ( guess ) , guess ) ;
Code	return fit ( new scopeToDeclareIn < guess > ( guess ) , guess ) ;
Distance : 9

95
Tree	return fit ( new NUMBER_STRING_SYMBOL < guess > ( guess ) , guess ) ;
Code	return fit ( new NUMBER_STRING_SYMBOL < guess > ( guess ) , guess ) ;
Distance : 9

96
Tree	return fit ( new Power < guess > ( guess ) , guess ) ;
Code	return fit ( new Power < guess > ( guess ) , guess ) ;
Distance : 9

97
Tree	return fit ( new JsonFileSpec < guess > ( new ) , guess ) ;
Code	return fit ( new JsonFileSpec < guess > ( new ) , guess ) ;
Distance : 9

98
Tree	return fit ( new HttpSessionBindingEvent < guess > ( guess ) , guess ) ;
Code	return fit ( new HttpSessionBindingEvent < guess > ( guess ) , guess ) ;
Distance : 9

99
Tree	return fit ( new Tracer < guess > ( new ) , guess ) ;
Code	return fit ( new Tracer < guess > ( new ) , guess ) ;
Distance : 9

100
Tree	return fit ( new TableXYDataset < guess > ( guess ) , guess ) ;
Code	return fit ( new TableXYDataset < guess > ( guess ) , guess ) ;
Distance : 9

101
Tree	return fit ( new GeneralPath < guess > ( guess ) , guess ) ;
Code	return fit ( new GeneralPath < guess > ( guess ) , guess ) ;
Distance : 9

102
Tree	return fit ( new Constant < guess > ( guess ) , guess ) ;
Code	return fit ( new Constant < guess > ( guess ) , guess ) ;
Distance : 9

103
Tree	return fit ( new ForwardsInvocations < guess > ( guess ) , guess ) ;
Code	return fit ( new ForwardsInvocations < guess > ( guess ) , guess ) ;
Distance : 9

104
Tree	return fit ( new ParseResult < guess > ( guess ) , guess ) ;
Code	return fit ( new ParseResult < guess > ( guess ) , guess ) ;
Distance : 9

105
Tree	return fit ( new DummyStatement < guess > ( guess ) , guess ) ;
Code	return fit ( new DummyStatement < guess > ( guess ) , guess ) ;
Distance : 9

106
Tree	return fit ( new FriendlyReturnValues < guess > ( guess ) , guess ) ;
Code	return fit ( new FriendlyReturnValues < guess > ( guess ) , guess ) ;
Distance : 9

107
Tree	return fit ( new LocalMeasurement < guess > ( guess ) , guess ) ;
Code	return fit ( new LocalMeasurement < guess > ( guess ) , guess ) ;
Distance : 9

108
Tree	return fit ( new UnicodeUnescaper < guess > ( guess ) , guess ) ;
Code	return fit ( new UnicodeUnescaper < guess > ( guess ) , guess ) ;
Distance : 9

109
Tree	return fit ( new ComposeWarningsGuard < guess > ( guess ) , guess ) ;
Code	return fit ( new ComposeWarningsGuard < guess > ( guess ) , guess ) ;
Distance : 9

110
Tree	return fit ( new ConstructorInjection < guess > ( guess ) , guess ) ;
Code	return fit ( new ConstructorInjection < guess > ( guess ) , guess ) ;
Distance : 9

111
Tree	return fit ( new isUnknownObject < guess > ( , ) , guess ) ;
Code	return fit ( new isUnknownObject < guess > ( , ) , guess ) ;
Distance : 9

112
Tree	return fit ( new BasicBlock < guess > ( guess ) , guess ) ;
Code	return fit ( new BasicBlock < guess > ( guess ) , guess ) ;
Distance : 9

113
Tree	return fit ( new createUnionType < guess > ( guess ) , guess ) ;
Code	return fit ( new createUnionType < guess > ( guess ) , guess ) ;
Distance : 9

114
Tree	return fit ( new getStringBuffer < guess > ( guess ) , guess ) ;
Code	return fit ( new getStringBuffer < guess > ( guess ) , guess ) ;
Distance : 9

115
Tree	return fit ( new SerializableMockitoMethod < guess > ( guess ) , guess ) ;
Code	return fit ( new SerializableMockitoMethod < guess > ( guess ) , guess ) ;
Distance : 9

116
Tree	return fit ( new StepInterpolatorWrapper < guess > ( guess ) , guess ) ;
Code	return fit ( new StepInterpolatorWrapper < guess > ( guess ) , guess ) ;
Distance : 9

117
Tree	return fit ( new VariableStepHandler < guess > ( guess ) , guess ) ;
Code	return fit ( new VariableStepHandler < guess > ( guess ) , guess ) ;
Distance : 9

118
Tree	return fit ( new ClassNotFoundSerialization < guess > ( guess ) , guess ) ;
Code	return fit ( new ClassNotFoundSerialization < guess > ( guess ) , guess ) ;
Distance : 9

119
Tree	return fit ( new EndsWith < guess > ( new ) , guess ) ;
Code	return fit ( new EndsWith < guess > ( new ) , guess ) ;
Distance : 9

120
Tree	return fit ( new NestedLoops < guess > ( new ) , guess ) ;
Code	return fit ( new NestedLoops < guess > ( new ) , guess ) ;
Distance : 9

121
Tree	return fit ( new openStream < guess > ( guess ) , guess ) ;
Code	return fit ( new openStream < guess > ( guess ) , guess ) ;
Distance : 9

122
Tree	return fit ( new StreamDataAdapter < guess > ( guess ) , guess ) ;
Code	return fit ( new StreamDataAdapter < guess > ( guess ) , guess ) ;
Distance : 9

123
Tree	return fit ( new AstValidator < guess > ( guess ) , guess ) ;
Code	return fit ( new AstValidator < guess > ( guess ) , guess ) ;
Distance : 9

124
Tree	return fit ( new stubbedInvocation < guess > ( new ) , guess ) ;
Code	return fit ( new stubbedInvocation < guess > ( new ) , guess ) ;
Distance : 9

125
Tree	return fit ( new ExceptionStatement < guess > ( new ) , guess ) ;
Code	return fit ( new ExceptionStatement < guess > ( new ) , guess ) ;
Distance : 9

126
Tree	return fit ( new InputStreamReader < guess > ( guess ) , guess ) ;
Code	return fit ( new InputStreamReader < guess > ( guess ) , guess ) ;
Distance : 9

127
Tree	return fit ( new DuplicateSampleAbscissaException < guess > ( new ) , guess ) ;
Code	return fit ( new DuplicateSampleAbscissaException < guess > ( new ) , guess ) ;
Distance : 9

128
Tree	return fit ( new SuppressDocWarningsGuard < guess > ( guess ) , guess ) ;
Code	return fit ( new SuppressDocWarningsGuard < guess > ( guess ) , guess ) ;
Distance : 9

129
Tree	return fit ( new MethodAttributeAppender.ForInstrumentedMethod < guess > ( guess ) , guess ) ;
Code	return fit ( new MethodAttributeAppender.ForInstrumentedMethod < guess > ( guess ) , guess ) ;
Distance : 9

130
Tree	return fit ( new UnrecognizedRequire < guess > ( guess ) , guess ) ;
Code	return fit ( new UnrecognizedRequire < guess > ( guess ) , guess ) ;
Distance : 9

131
Tree	return fit ( new SimpleAffix < guess > ( new ) , guess ) ;
Code	return fit ( new SimpleAffix < guess > ( new ) , guess ) ;
Distance : 9

132
Tree	return this . fit . fit ( new . fit () ) ;
Code	return this . fit . fit ( new . fit () ) ;
Distance : 8

133
Tree	return fit ( new NordsieckInitializer < guess > ( new ) , guess ) ;
Code	return fit ( new NordsieckInitializer < guess > ( new ) , guess ) ;
Distance : 9

134
Tree	return fit ( new WeakHashMap < guess > ( guess ) , guess ) ;
Code	return fit ( new WeakHashMap < guess > ( guess ) , guess ) ;
Distance : 9

135
Tree	return fit ( new TextListener < guess > ( guess ) , guess ) ;
Code	return fit ( new TextListener < guess > ( guess ) , guess ) ;
Distance : 9

136
Tree	return fit ( new BeanPropertySetter < guess > ( guess ) , guess ) ;
Code	return fit ( new BeanPropertySetter < guess > ( guess ) , guess ) ;
Distance : 9

137
Tree	return fit ( new HarmonicFunction < guess > ( guess ) , guess ) ;
Code	return fit ( new HarmonicFunction < guess > ( guess ) , guess ) ;
Distance : 9

138
Tree	return fit ( new MockAwareVerificationMode < guess > ( guess ) , guess ) ;
Code	return fit ( new MockAwareVerificationMode < guess > ( guess ) , guess ) ;
Distance : 9

139
Tree	return fit ( new injectee < guess > ( guess ) , guess ) ;
Code	return fit ( new injectee < guess > ( guess ) , guess ) ;
Distance : 9

140
Tree	return fit ( new ModuleLoader < guess > ( guess ) , guess ) ;
Code	return fit ( new ModuleLoader < guess > ( guess ) , guess ) ;
Distance : 9

141
Tree	return fit ( new InstantiatorProvider2Adapter < guess > ( , ) , guess ) ;
Code	return fit ( new InstantiatorProvider2Adapter < guess > ( , ) , guess ) ;
Distance : 9

142
Tree	return fit ( new TypeVarBoundedType < guess > ( guess ) , guess ) ;
Code	return fit ( new TypeVarBoundedType < guess > ( guess ) , guess ) ;
Distance : 9

143
Tree	return fit ( new ToStringBuilder < guess > ( new ) , guess ) ;
Code	return fit ( new ToStringBuilder < guess > ( new ) , guess ) ;
Distance : 9

144
Tree	return fit ( new MaybeReachingVariableUse < guess > ( guess ) , guess ) ;
Code	return fit ( new MaybeReachingVariableUse < guess > ( guess ) , guess ) ;
Distance : 9

145
Tree	return fit ( new File < guess > ( guess ) , guess ) ;
Code	return fit ( new File < guess > ( guess ) , guess ) ;
Distance : 9

146
Tree	return fit ( new InterpolatingMicrosphere < guess > ( guess ) , guess ) ;
Code	return fit ( new InterpolatingMicrosphere < guess > ( guess ) , guess ) ;
Distance : 9

147
Tree	return fit ( new SerializableTypeVariable < guess > ( guess ) , guess ) ;
Code	return fit ( new SerializableTypeVariable < guess > ( guess ) , guess ) ;
Distance : 9

148
Tree	return fit ( new DevNull.out < guess > ( new ) , guess ) ;
Code	return fit ( new DevNull.out < guess > ( new ) , guess ) ;
Distance : 9

149
Tree	return fit ( new NominalTypeBuilderNti < guess > ( guess ) , guess ) ;
Code	return fit ( new NominalTypeBuilderNti < guess > ( guess ) , guess ) ;
Distance : 9

150
Tree	return fit ( new FlatFlowScopeCache < guess > ( guess ) , guess ) ;
Code	return fit ( new FlatFlowScopeCache < guess > ( guess ) , guess ) ;
Distance : 9

151
Tree	return fit ( new HamcrestArgumentMatcher < guess > ( new ) , guess ) ;
Code	return fit ( new HamcrestArgumentMatcher < guess > ( new ) , guess ) ;
Distance : 9

152
Tree	return fit ( new valuesFileURL < guess > ( guess ) , guess ) ;
Code	return fit ( new valuesFileURL < guess > ( guess ) , guess ) ;
Distance : 9

153
Tree	return fit ( new StatArray < guess > ( guess ) , guess ) ;
Code	return fit ( new StatArray < guess > ( guess ) , guess ) ;
Distance : 9

154
Tree	return fit ( new MappedNameSupplier < guess > ( new ) , guess ) ;
Code	return fit ( new MappedNameSupplier < guess > ( new ) , guess ) ;
Distance : 9

155
Tree	return fit ( new minuendYear < guess > ( guess ) , guess ) ;
Code	return fit ( new minuendYear < guess > ( guess ) , guess ) ;
Distance : 9

156
Tree	return fit ( new readFully < guess > ( guess ) , guess ) ;
Code	return fit ( new readFully < guess > ( guess ) , guess ) ;
Distance : 9

157
Tree	return fit ( new MarsagliaLogNormalSampler < guess > ( guess ) , guess ) ;
Code	return fit ( new MarsagliaLogNormalSampler < guess > ( guess ) , guess ) ;
Distance : 9

158
Tree	return fit ( new ConstantInitializer < guess > ( guess ) , guess ) ;
Code	return fit ( new ConstantInitializer < guess > ( guess ) , guess ) ;
Distance : 9

159
Tree	return fit ( new SerializableBoundedType < guess > ( new ) , guess ) ;
Code	return fit ( new SerializableBoundedType < guess > ( new ) , guess ) ;
Distance : 9

160
Tree	return fit ( new VersionBumper < guess > ( guess ) , guess ) ;
Code	return fit ( new VersionBumper < guess > ( guess ) , guess ) ;
Distance : 9

161
Tree	return fit ( new CharacterCodingException < guess > ( guess ) , guess ) ;
Code	return fit ( new CharacterCodingException < guess > ( guess ) , guess ) ;
Distance : 9

162
Tree	return fit ( new Writer < guess > ( guess ) , guess ) ;
Code	return fit ( new Writer < guess > ( guess ) , guess ) ;
Distance : 9

163
Tree	return fit ( new VerifyingRecorder < guess > ( guess ) , guess ) ;
Code	return fit ( new VerifyingRecorder < guess > ( guess ) , guess ) ;
Distance : 9

164
Tree	return fit ( new DormandPrince54FieldStepInterpolator < guess > ( guess ) , guess ) ;
Code	return fit ( new DormandPrince54FieldStepInterpolator < guess > ( guess ) , guess ) ;
Distance : 9

165
Tree	return fit ( new ObjectPropListItem < guess > ( guess ) , guess ) ;
Code	return fit ( new ObjectPropListItem < guess > ( guess ) , guess ) ;
Distance : 9

166
Tree	return fit ( new TypeTransformation < guess > ( new ) , guess ) ;
Code	return fit ( new TypeTransformation < guess > ( new ) , guess ) ;
Distance : 9

167
Tree	return fit ( new LiteralToken < guess > ( guess ) , guess ) ;
Code	return fit ( new LiteralToken < guess > ( guess ) , guess ) ;
Distance : 9

168
Tree	return fit ( new NodeMetadata < guess > ( guess ) , guess ) ;
Code	return fit ( new NodeMetadata < guess > ( guess ) , guess ) ;
Distance : 9

169
Tree	return fit ( new HasCGLIBMethodProxy < guess > ( guess ) , guess ) ;
Code	return fit ( new HasCGLIBMethodProxy < guess > ( guess ) , guess ) ;
Distance : 9

170
Tree	return fit ( new BooleanOutcomePair < guess > ( guess ) , guess ) ;
Code	return fit ( new BooleanOutcomePair < guess > ( guess ) , guess ) ;
Distance : 9

171
Tree	return fit ( new InOrderWrapper < guess > ( guess ) , guess ) ;
Code	return fit ( new InOrderWrapper < guess > ( guess ) , guess ) ;
Distance : 9

172
Tree	return fit ( new withMockFeatures < guess > ( guess ) , guess ) ;
Code	return fit ( new withMockFeatures < guess > ( guess ) , guess ) ;
Distance : 9

173
Tree	return fit ( new VerificationOverTimeImpl < guess > ( , ) , guess ) ;
Code	return fit ( new VerificationOverTimeImpl < guess > ( , ) , guess ) ;
Distance : 9

174
Tree	return fit ( new CallsRealMethods < guess > ( guess ) , guess ) ;
Code	return fit ( new CallsRealMethods < guess > ( guess ) , guess ) ;
Distance : 9

175
Tree	return fit ( new AllTestsRunner < guess > ( guess ) , guess ) ;
Code	return fit ( new AllTestsRunner < guess > ( guess ) , guess ) ;
Distance : 9

176
Tree	return fit ( new MockitoLoggerImpl < guess > ( guess ) , guess ) ;
Code	return fit ( new MockitoLoggerImpl < guess > ( guess ) , guess ) ;
Distance : 9

177
Tree	return fit ( new CombinedCompilerPass < guess > ( guess ) , guess ) ;
Code	return fit ( new CombinedCompilerPass < guess > ( guess ) , guess ) ;
Distance : 9

178
Tree	return fit ( new CGLIBProxyRealMethod < guess > ( new ) , guess ) ;
Code	return fit ( new CGLIBProxyRealMethod < guess > ( new ) , guess ) ;
Distance : 9

179
Tree	return fit ( new PropertyAndSetterInjection < guess > ( guess ) , guess ) ;
Code	return fit ( new PropertyAndSetterInjection < guess > ( guess ) , guess ) ;
Distance : 9

180
Tree	return fit ( new UnfinishedStubbingStatement < guess > ( new ) , guess ) ;
Code	return fit ( new UnfinishedStubbingStatement < guess > ( new ) , guess ) ;
Distance : 9

181
Tree	return fit ( new TestPeriodType < guess > ( guess ) , guess ) ;
Code	return fit ( new TestPeriodType < guess > ( guess ) , guess ) ;
Distance : 9

182
Tree	return fit ( new cumulativeTestPoints < guess > ( guess ) , guess ) ;
Code	return fit ( new cumulativeTestPoints < guess > ( guess ) , guess ) ;
Distance : 9

183
Tree	return fit ( new TypeAttributeAppender.ForInstrumentedType < guess > ( new ) , guess ) ;
Code	return fit ( new TypeAttributeAppender.ForInstrumentedType < guess > ( new ) , guess ) ;
Distance : 9

184
Tree	return fit ( new SoftReference < guess > ( guess ) , guess ) ;
Code	return fit ( new SoftReference < guess > ( guess ) , guess ) ;
Distance : 9

185
Tree	return fit ( new Discrepancy < guess > ( guess ) , guess ) ;
Code	return fit ( new Discrepancy < guess > ( guess ) , guess ) ;
Distance : 9

186
Tree	return fit ( new UniformContinuousDistribution < guess > ( new ) , guess ) ;
Code	return fit ( new UniformContinuousDistribution < guess > ( new ) , guess ) ;
Distance : 9

187
Tree	return fit ( new TestObjectReference < guess > ( guess ) , guess ) ;
Code	return fit ( new TestObjectReference < guess > ( guess ) , guess ) ;
Distance : 9

188
Tree	return fit ( new PropertyWrite < guess > ( guess ) , guess ) ;
Code	return fit ( new PropertyWrite < guess > ( guess ) , guess ) ;
Distance : 9

189
Tree	return fit ( new astValidationEnabled < guess > ( Gaussian.Parametric ) , guess ) ;
Code	return fit ( new astValidationEnabled < guess > ( Gaussian.Parametric ) , guess ) ;
Distance : 9

190
Tree	return fit ( new Scanner < guess > ( new ) , guess ) ;
Code	return fit ( new Scanner < guess > ( new ) , guess ) ;
Distance : 9

191
Tree	return fit ( new GitLogProvider < guess > ( new ) , guess ) ;
Code	return fit ( new GitLogProvider < guess > ( new ) , guess ) ;
Distance : 9

192
Tree	return fit ( new getItemShape < guess > ( new ) , guess ) ;
Code	return fit ( new getItemShape < guess > ( new ) , guess ) ;
Distance : 9

193
Tree	return fit ( new StandardXYURLGenerator < guess > ( guess ) , guess ) ;
Code	return fit ( new StandardXYURLGenerator < guess > ( guess ) , guess ) ;
Distance : 9

194
Tree	return fit ( new DefineCallbackReturnCallback < guess > ( guess ) , guess ) ;
Code	return fit ( new DefineCallbackReturnCallback < guess > ( guess ) , guess ) ;
Distance : 9

195
Tree	return fit ( new InstantiatorProviderAdapter < guess > ( new ) , guess ) ;
Code	return fit ( new InstantiatorProviderAdapter < guess > ( new ) , guess ) ;
Distance : 9

196
Tree	return fit ( new NameContext < guess > ( guess ) , guess ) ;
Code	return fit ( new NameContext < guess > ( guess ) , guess ) ;
Distance : 9

197
Tree	return fit ( new TestFixture < guess > ( guess ) , guess ) ;
Code	return fit ( new TestFixture < guess > ( guess ) , guess ) ;
Distance : 9

198
Tree	return fit ( new actualInvocationStackTrace < guess > ( guess ) , guess ) ;
Code	return fit ( new actualInvocationStackTrace < guess > ( guess ) , guess ) ;
Distance : 9

199
Tree	return fit . fit ( Gaussian.Parametric , STRING_CONSTANT , guess , guess . fit () ) ; [
Code	return fit . fit ( Gaussian.Parametric , STRING_CONSTANT , guess , guess . fit () ) ; [
Distance : 12

========================================================================


========================================================================
Example Number: 62
Parent Code is: 
int sum = NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Child code is: 
double sum = NUMBER_CONSTANT ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=int}) (59 (800{val=sum}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=double}) (59 (800{val=sum}) (204{val==}) (34{val=NUMBER_CONSTANT})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/57/parent/src_main_java_org_apache_commons_math_stat_clustering_KMeansPlusPlusClusterer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	int sum = sum ; i
Code	int sum = sum ; i
Distance : 3

1
Tree	int sum = NUMBER_CONSTANT ; Fraction
Code	int sum = NUMBER_CONSTANT ; Fraction
Distance : 2

2
Tree	int sum = NUMBER_CONSTANT ; returnZero
Code	int sum = NUMBER_CONSTANT ; returnZero
Distance : 2

3
Tree	int sum = NUMBER_CONSTANT ; sb
Code	int sum = NUMBER_CONSTANT ; sb
Distance : 2

4
Tree	int sum = NUMBER_CONSTANT ; append
Code	int sum = NUMBER_CONSTANT ; append
Distance : 2

5
Tree	int sum = NUMBER_CONSTANT ; getFirstChild
Code	int sum = NUMBER_CONSTANT ; getFirstChild
Distance : 2

6
Tree	int sum = NUMBER_CONSTANT ; sqrt
Code	int sum = NUMBER_CONSTANT ; sqrt
Distance : 2

7
Tree	int sum = NUMBER_CONSTANT ; throws
Code	int sum = NUMBER_CONSTANT ; throws
Distance : 2

8
Tree	int sum = NUMBER_CONSTANT ; !
Code	int sum = NUMBER_CONSTANT ; !
Distance : 2

9
Tree	int sum = NUMBER_CONSTANT ; UnivariateFunction
Code	int sum = NUMBER_CONSTANT ; UnivariateFunction
Distance : 2

10
Tree	int sum = NUMBER_CONSTANT ; field
Code	int sum = NUMBER_CONSTANT ; field
Distance : 2

11
Tree	int sum = NUMBER_CONSTANT ; reportCodeChange
Code	int sum = NUMBER_CONSTANT ; reportCodeChange
Distance : 2

12
Tree	int sum = NUMBER_CONSTANT ; t
Code	int sum = NUMBER_CONSTANT ; t
Distance : 2

13
Tree	int sum = NUMBER_CONSTANT ; FastMath
Code	int sum = NUMBER_CONSTANT ; FastMath
Distance : 2

14
Tree	int sum = NUMBER_CONSTANT ; invocation
Code	int sum = NUMBER_CONSTANT ; invocation
Distance : 2

15
Tree	int sum = NUMBER_CONSTANT ; IllegalArgumentException
Code	int sum = NUMBER_CONSTANT ; IllegalArgumentException
Distance : 2

16
Tree	int sum = NUMBER_CONSTANT ; scope
Code	int sum = NUMBER_CONSTANT ; scope
Distance : 2

17
Tree	int sum = NUMBER_CONSTANT ; name
Code	int sum = NUMBER_CONSTANT ; name
Distance : 2

18
Tree	int sum = NUMBER_CONSTANT ; nullNotPermitted
Code	int sum = NUMBER_CONSTANT ; nullNotPermitted
Distance : 2

19
Tree	int sum = NUMBER_CONSTANT ; ==
Code	int sum = NUMBER_CONSTANT ; ==
Distance : 2

20
Tree	int sum = NUMBER_CONSTANT ; []
Code	int sum = NUMBER_CONSTANT ; []
Distance : 2

21
Tree	int sum ; void
Code	int sum ; void
Distance : 4

22
Tree	int sum ; throw
Code	int sum ; throw
Distance : 4

23
Tree	int sum ; compiler
Code	int sum ; compiler
Distance : 4

24
Tree	int sum ; catch
Code	int sum ; catch
Distance : 4

25
Tree	int sum ; e
Code	int sum ; e
Distance : 4

26
Tree	int sum ; +
Code	int sum ; +
Distance : 4

27
Tree	int sum ; n
Code	int sum ; n
Distance : 4

28
Tree	int sum ; NodeTraversal
Code	int sum ; NodeTraversal
Distance : 4

29
Tree	int sum ; expected
Code	int sum ; expected
Distance : 4

30
Tree	int sum ; {}
Code	int sum ; {}
Distance : 4

31
Tree	int sum ; ]
Code	int sum ; ]
Distance : 4

32
Tree	int sum ; mode
Code	int sum ; mode
Distance : 4

33
Tree	int sum ; Preconditions
Code	int sum ; Preconditions
Distance : 4

34
Tree	int sum ; null
Code	int sum ; null
Distance : 4

35
Tree	int sum ; super
Code	int sum ; super
Distance : 4

36
Tree	int sum = NUMBER_CONSTANT ; length
Code	int sum = NUMBER_CONSTANT ; length
Distance : 2

37
Tree	int sum = NUMBER_CONSTANT ; assertEquals
Code	int sum = NUMBER_CONSTANT ; assertEquals
Distance : 2

38
Tree	int sum = NUMBER_CONSTANT ; b
Code	int sum = NUMBER_CONSTANT ; b
Distance : 2

39
Tree	int sum = NUMBER_CONSTANT ; @
Code	int sum = NUMBER_CONSTANT ; @
Distance : 2

40
Tree	int sum = NUMBER_CONSTANT ; test
Code	int sum = NUMBER_CONSTANT ; test
Distance : 2

41
Tree	int sum ; checkState
Code	int sum ; checkState
Distance : 4

42
Tree	int sum = NUMBER_CONSTANT ; equals
Code	int sum = NUMBER_CONSTANT ; equals
Distance : 2

43
Tree	int sum = NUMBER_CONSTANT ; Assert
Code	int sum = NUMBER_CONSTANT ; Assert
Distance : 2

44
Tree	int sum = sum ; isEmpty
Code	int sum = sum ; isEmpty
Distance : 3

45
Tree	int sum = NUMBER_CONSTANT ; assertTrue
Code	int sum = NUMBER_CONSTANT ; assertTrue
Distance : 2

46
Tree	int sum = sum ; -
Code	int sum = sum ; -
Distance : 3

47
Tree	int sum ; valueOf
Code	int sum ; valueOf
Distance : 4

48
Tree	int sum = sum ; wanted
Code	int sum = sum ; wanted
Distance : 3

49
Tree	int sum = sum ; ex
Code	int sum = sum ; ex
Distance : 3

50
Tree	int sum = sum ; NodeUtil
Code	int sum = sum ; NodeUtil
Distance : 3

51
Tree	int sum = sum ; checkArgument
Code	int sum = sum ; checkArgument
Distance : 3

52
Tree	int sum = sum ; add
Code	int sum = sum ; add
Distance : 3

53
Tree	int sum = sum ; data
Code	int sum = sum ; data
Distance : 3

54
Tree	int sum = sum ; root
Code	int sum = sum ; root
Distance : 3

55
Tree	int sum = sum ; void
Code	int sum = sum ; void
Distance : 3

56
Tree	int sum = sum ; throw
Code	int sum = sum ; throw
Distance : 3

57
Tree	int sum = sum ; compiler
Code	int sum = sum ; compiler
Distance : 3

58
Tree	int sum = sum ; catch
Code	int sum = sum ; catch
Distance : 3

59
Tree	int sum = NUMBER_CONSTANT ; Invocation
Code	int sum = NUMBER_CONSTANT ; Invocation
Distance : 2

60
Tree	int sum ; root
Code	int sum ; root
Distance : 4

61
Tree	int sum = NUMBER_CONSTANT ; externs
Code	int sum = NUMBER_CONSTANT ; externs
Distance : 2

62
Tree	int sum = NUMBER_CONSTANT ; TestUtilities
Code	int sum = NUMBER_CONSTANT ; TestUtilities
Distance : 2

63
Tree	int sum = NUMBER_CONSTANT ; int
Code	int sum = NUMBER_CONSTANT ; int
Distance : 2

64
Tree	int sum ; false
Code	int sum ; false
Distance : 4

65
Tree	int sum ; double
Code	int sum ; double
Distance : 4

66
Tree	int sum ; i
Code	int sum ; i
Distance : 4

67
Tree	int sum ; !=
Code	int sum ; !=
Distance : 4

68
Tree	int sum ; value
Code	int sum ; value
Distance : 4

69
Tree	int sum ; T
Code	int sum ; T
Distance : 4

70
Tree	int sum ; setAcceptedLanguage
Code	int sum ; setAcceptedLanguage
Distance : 4

71
Tree	int sum ; abs
Code	int sum ; abs
Distance : 4

72
Tree	int sum ; matcher
Code	int sum ; matcher
Distance : 4

73
Tree	int sum ; reportMatcher
Code	int sum ; reportMatcher
Distance : 4

74
Tree	int sum ; getMessage
Code	int sum ; getMessage
Distance : 4

75
Tree	int sum ; stream
Code	int sum ; stream
Distance : 4

76
Tree	int sum ; else
Code	int sum ; else
Distance : 4

77
Tree	int sum = NUMBER_CONSTANT ; StrBuilder
Code	int sum = NUMBER_CONSTANT ; StrBuilder
Distance : 2

78
Tree	int sum = NUMBER_CONSTANT ; js
Code	int sum = NUMBER_CONSTANT ; js
Distance : 2

79
Tree	int sum = NUMBER_CONSTANT ; d
Code	int sum = NUMBER_CONSTANT ; d
Distance : 2

80
Tree	int sum = NUMBER_CONSTANT ; for
Code	int sum = NUMBER_CONSTANT ; for
Distance : 2

81
Tree	int sum = sum ; e
Code	int sum = sum ; e
Distance : 3

82
Tree	int sum ; data
Code	int sum ; data
Distance : 4

83
Tree	int sum ; checkArgument
Code	int sum ; checkArgument
Distance : 4

84
Tree	int sum = NUMBER_CONSTANT ; LINE_JOINER
Code	int sum = NUMBER_CONSTANT ; LINE_JOINER
Distance : 2

85
Tree	int sum = NUMBER_CONSTANT ; parent
Code	int sum = NUMBER_CONSTANT ; parent
Distance : 2

86
Tree	int sum = NUMBER_CONSTANT ; ArrayList
Code	int sum = NUMBER_CONSTANT ; ArrayList
Distance : 2

87
Tree	int sum = NUMBER_CONSTANT ; createIllegalArgumentException
Code	int sum = NUMBER_CONSTANT ; createIllegalArgumentException
Distance : 2

88
Tree	int sum = NUMBER_CONSTANT ; isEmpty
Code	int sum = NUMBER_CONSTANT ; isEmpty
Distance : 2

89
Tree	int sum = NUMBER_CONSTANT ; JSType
Code	int sum = NUMBER_CONSTANT ; JSType
Distance : 2

90
Tree	int sum = NUMBER_CONSTANT ; testSame
Code	int sum = NUMBER_CONSTANT ; testSame
Distance : 2

91
Tree	int sum = NUMBER_CONSTANT ; x
Code	int sum = NUMBER_CONSTANT ; x
Distance : 2

92
Tree	int sum = NUMBER_CONSTANT ; static
Code	int sum = NUMBER_CONSTANT ; static
Distance : 2

93
Tree	int sum = NUMBER_CONSTANT ; setUp
Code	int sum = NUMBER_CONSTANT ; setUp
Distance : 2

94
Tree	int sum = NUMBER_CONSTANT ; getParent
Code	int sum = NUMBER_CONSTANT ; getParent
Distance : 2

95
Tree	int sum = NUMBER_CONSTANT ; protected
Code	int sum = NUMBER_CONSTANT ; protected
Distance : 2

96
Tree	int sum = NUMBER_CONSTANT ; invocations
Code	int sum = NUMBER_CONSTANT ; invocations
Distance : 2

97
Tree	int sum = NUMBER_CONSTANT ; values
Code	int sum = NUMBER_CONSTANT ; values
Distance : 2

98
Tree	int sum = NUMBER_CONSTANT ; out
Code	int sum = NUMBER_CONSTANT ; out
Distance : 2

99
Tree	int sum = NUMBER_CONSTANT ; s
Code	int sum = NUMBER_CONSTANT ; s
Distance : 2

100
Tree	int sum = NUMBER_CONSTANT ; node
Code	int sum = NUMBER_CONSTANT ; node
Distance : 2

101
Tree	int sum = NUMBER_CONSTANT ; str
Code	int sum = NUMBER_CONSTANT ; str
Distance : 2

102
Tree	int sum = NUMBER_CONSTANT ; assertThat
Code	int sum = NUMBER_CONSTANT ; assertThat
Distance : 2

103
Tree	int sum = NUMBER_CONSTANT ; String
Code	int sum = NUMBER_CONSTANT ; String
Distance : 2

104
Tree	float sum = return; ;
Code	float sum = return; ;
Distance : 2

105
Tree	float sum = continue; ;
Code	float sum = continue; ;
Distance : 2

106
Tree	int sum = NUMBER_CONSTANT ; class
Code	int sum = NUMBER_CONSTANT ; class
Distance : 2

107
Tree	int sum = NUMBER_CONSTANT ; Test
Code	int sum = NUMBER_CONSTANT ; Test
Distance : 2

108
Tree	int sum = NUMBER_CONSTANT ; toString
Code	int sum = NUMBER_CONSTANT ; toString
Distance : 2

109
Tree	int sum ; instant
Code	int sum ; instant
Distance : 4

110
Tree	int sum = NUMBER_CONSTANT ; notifyListeners
Code	int sum = NUMBER_CONSTANT ; notifyListeners
Distance : 2

111
Tree	int sum = NUMBER_CONSTANT ; return;
Code	int sum = NUMBER_CONSTANT ; return;
Distance : 2

112
Tree	int sum = NUMBER_CONSTANT ; chrono
Code	int sum = NUMBER_CONSTANT ; chrono
Distance : 2

113
Tree	int sum = NUMBER_CONSTANT ; mockingProgress
Code	int sum = NUMBER_CONSTANT ; mockingProgress
Distance : 2

114
Tree	int sum = NUMBER_CONSTANT ; clone
Code	int sum = NUMBER_CONSTANT ; clone
Distance : 2

115
Tree	int sum = NUMBER_CONSTANT ; Double
Code	int sum = NUMBER_CONSTANT ; Double
Distance : 2

116
Tree	int sum = NUMBER_CONSTANT ; PeriodType
Code	int sum = NUMBER_CONSTANT ; PeriodType
Distance : 2

117
Tree	int sum = NUMBER_CONSTANT ; <=
Code	int sum = NUMBER_CONSTANT ; <=
Distance : 2

118
Tree	int sum = NUMBER_CONSTANT ; contains
Code	int sum = NUMBER_CONSTANT ; contains
Distance : 2

119
Tree	int sum = NUMBER_CONSTANT ; a
Code	int sum = NUMBER_CONSTANT ; a
Distance : 2

120
Tree	int sum = NUMBER_CONSTANT ; isNormalBlock
Code	int sum = NUMBER_CONSTANT ; isNormalBlock
Distance : 2

121
Tree	int sum = NUMBER_CONSTANT ; obj
Code	int sum = NUMBER_CONSTANT ; obj
Distance : 2

122
Tree	int sum = NUMBER_CONSTANT ; stroke
Code	int sum = NUMBER_CONSTANT ; stroke
Distance : 2

123
Tree	int sum = NUMBER_CONSTANT ; traverseEs6
Code	int sum = NUMBER_CONSTANT ; traverseEs6
Distance : 2

124
Tree	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Code	int sum = NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Distance : 2

125
Tree	int sum ; sum
Code	int sum ; sum
Distance : 4

126
Tree	int sum ; <s>
Code	int sum ; <s>
Distance : 4

127
Tree	int sum ; )
Code	int sum ; )
Distance : 4

128
Tree	int sum ; >
Code	int sum ; >
Distance : 4

129
Tree	int sum ; final
Code	int sum ; final
Distance : 4

130
Tree	int sum ; return
Code	int sum ; return
Distance : 4

131
Tree	int sum ; this
Code	int sum ; this
Distance : 4

132
Tree	int sum ; public
Code	int sum ; public
Distance : 4

133
Tree	int sum ; if
Code	int sum ; if
Distance : 4

134
Tree	int sum ; NUMBER_CONSTANT
Code	int sum ; NUMBER_CONSTANT
Distance : 3

135
Tree	int sum ; -
Code	int sum ; -
Distance : 4

136
Tree	int sum ; [
Code	int sum ; [
Distance : 4

137
Tree	int sum ; &&
Code	int sum ; &&
Distance : 4

138
Tree	int sum = NUMBER_CONSTANT ; /
Code	int sum = NUMBER_CONSTANT ; /
Distance : 2

139
Tree	int sum ; wanted
Code	int sum ; wanted
Distance : 4

140
Tree	int sum ; ex
Code	int sum ; ex
Distance : 4

141
Tree	int sum ; NodeUtil
Code	int sum ; NodeUtil
Distance : 4

142
Tree	int sum ; <blank>
Code	int sum ; <blank>
Distance : 4

143
Tree	int sum ; add
Code	int sum ; add
Distance : 4

144
Tree	int sum ; ;
Code	int sum ; ;
Distance : 3

145
Tree	int sum ; .
Code	int sum ; .
Distance : 4

146
Tree	int sum = NUMBER_CONSTANT ; StringBuilder
Code	int sum = NUMBER_CONSTANT ; StringBuilder
Distance : 2

147
Tree	int sum = NUMBER_CONSTANT ; size
Code	int sum = NUMBER_CONSTANT ; size
Distance : 2

148
Tree	int sum = NUMBER_CONSTANT ; MutableTimePeriod
Code	int sum = NUMBER_CONSTANT ; MutableTimePeriod
Distance : 2

149
Tree	int sum = NUMBER_CONSTANT ; get
Code	int sum = NUMBER_CONSTANT ; get
Distance : 2

150
Tree	int sum = NUMBER_CONSTANT ; char
Code	int sum = NUMBER_CONSTANT ; char
Distance : 2

151
Tree	int sum = NUMBER_CONSTANT ; lines
Code	int sum = NUMBER_CONSTANT ; lines
Distance : 2

152
Tree	int sum ; MutableTimePeriod
Code	int sum ; MutableTimePeriod
Distance : 4

153
Tree	int sum = NUMBER_CONSTANT ; Node
Code	int sum = NUMBER_CONSTANT ; Node
Distance : 2

154
Tree	int sum ; true
Code	int sum ; true
Distance : 4

155
Tree	int sum ; new
Code	int sum ; new
Distance : 4

156
Tree	int sum ; =
Code	int sum ; =
Distance : 4

157
Tree	int sum ; STRING_CONSTANT
Code	int sum ; STRING_CONSTANT
Distance : 4

158
Tree	int sum ; ()
Code	int sum ; ()
Distance : 4

159
Tree	int sum ; ,
Code	int sum ; ,
Distance : 4

160
Tree	int sum ; {
Code	int sum ; {
Distance : 4

161
Tree	int sum ; }
Code	int sum ; }
Distance : 4

162
Tree	int sum ; <
Code	int sum ; <
Distance : 4

163
Tree	int sum ; (
Code	int sum ; (
Distance : 4

164
Tree	float sum = break; ;
Code	float sum = break; ;
Distance : 2

165
Tree	int sum = sum ; +
Code	int sum = sum ; +
Distance : 3

166
Tree	int sum = sum ; NodeTraversal
Code	int sum = sum ; NodeTraversal
Distance : 3

167
Tree	int sum ; mockingProgress
Code	int sum ; mockingProgress
Distance : 4

168
Tree	int sum ; clone
Code	int sum ; clone
Distance : 4

169
Tree	int sum ; Double
Code	int sum ; Double
Distance : 4

170
Tree	int sum ; <=
Code	int sum ; <=
Distance : 4

171
Tree	int sum ; ArrayList
Code	int sum ; ArrayList
Distance : 4

172
Tree	int sum ; contains
Code	int sum ; contains
Distance : 4

173
Tree	int sum ; a
Code	int sum ; a
Distance : 4

174
Tree	int sum ; chrono
Code	int sum ; chrono
Distance : 4

175
Tree	int sum ; isNormalBlock
Code	int sum ; isNormalBlock
Distance : 4

176
Tree	int sum ; assertThat
Code	int sum ; assertThat
Distance : 4

177
Tree	int sum ; str
Code	int sum ; str
Distance : 4

178
Tree	int sum ; x
Code	int sum ; x
Distance : 4

179
Tree	int sum ; LINE_JOINER
Code	int sum ; LINE_JOINER
Distance : 4

180
Tree	int sum ; parent
Code	int sum ; parent
Distance : 4

181
Tree	int sum ; Override
Code	int sum ; Override
Distance : 4

182
Tree	int sum ; Object
Code	int sum ; Object
Distance : 4

183
Tree	int sum ; String
Code	int sum ; String
Distance : 4

184
Tree	int sum ; isEmpty
Code	int sum ; isEmpty
Distance : 4

185
Tree	int sum ; return;
Code	int sum ; return;
Distance : 4

186
Tree	int sum ; JSType
Code	int sum ; JSType
Distance : 4

187
Tree	int sum ; paint
Code	int sum ; paint
Distance : 4

188
Tree	int sum ; getInstance
Code	int sum ; getInstance
Distance : 4

189
Tree	int sum ; type
Code	int sum ; type
Distance : 4

190
Tree	int sum ; serialised
Code	int sum ; serialised
Distance : 4

191
Tree	int sum ; fireChangeEvent
Code	int sum ; fireChangeEvent
Distance : 4

192
Tree	int sum ; array
Code	int sum ; array
Distance : 4

193
Tree	int sum ; f
Code	int sum ; f
Distance : 4

194
Tree	int sum ; class
Code	int sum ; class
Distance : 4

195
Tree	int sum ; ParamChecks
Code	int sum ; ParamChecks
Distance : 4

196
Tree	int sum ; mock
Code	int sum ; mock
Distance : 4

197
Tree	int sum ; MathRuntimeException
Code	int sum ; MathRuntimeException
Distance : 4

198
Tree	int sum ; notifyListeners
Code	int sum ; notifyListeners
Distance : 4

199
Tree	int sum ; testSame
Code	int sum ; testSame
Distance : 4

========================================================================


========================================================================
Example Number: 63
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Distance : 5

1
Tree	Iterator iter = iterator ( res.entries ) ; getField
Code	Iterator iter = iterator ( res.entries ) ; getField
Distance : 5

2
Tree	Iterator iter = iterator ( res.entries ) ; public
Code	Iterator iter = iterator ( res.entries ) ; public
Distance : 5

3
Tree	Iterator iter = iterator ( res.entries ) ; mock
Code	Iterator iter = iterator ( res.entries ) ; mock
Distance : 5

4
Tree	Iterator iter = iterator ( res.entries ) ; solver
Code	Iterator iter = iterator ( res.entries ) ; solver
Distance : 5

5
Tree	Iterator iter = iterator ( res.entries ) ; super
Code	Iterator iter = iterator ( res.entries ) ; super
Distance : 5

6
Tree	Iterator iter = iterator ( res.entries ) ; Test
Code	Iterator iter = iterator ( res.entries ) ; Test
Distance : 5

7
Tree	Iterator iter = iterator ( res.entries ) ; Class
Code	Iterator iter = iterator ( res.entries ) ; Class
Distance : 5

8
Tree	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Code	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Distance : 5

9
Tree	Iterator iter = iterator ( res.entries ) ; {}
Code	Iterator iter = iterator ( res.entries ) ; {}
Distance : 5

10
Tree	Iterator iter = iterator ( res.entries ) ; f
Code	Iterator iter = iterator ( res.entries ) ; f
Distance : 5

11
Tree	Iterator iter = iterator ( res.entries ) ; ParamChecks
Code	Iterator iter = iterator ( res.entries ) ; ParamChecks
Distance : 5

12
Tree	Iterator iter = iterator ( res.entries ) ; -
Code	Iterator iter = iterator ( res.entries ) ; -
Distance : 5

13
Tree	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Distance : 5

14
Tree	Iterator iter = iterator ( res.entries ) ; Preconditions
Code	Iterator iter = iterator ( res.entries ) ; Preconditions
Distance : 5

15
Tree	Iterator iter = iterator ( res.entries ) ; &&
Code	Iterator iter = iterator ( res.entries ) ; &&
Distance : 5

16
Tree	Iterator iter = iterator ( res.entries ) ; ]
Code	Iterator iter = iterator ( res.entries ) ; ]
Distance : 5

17
Tree	Iterator iter = iterator ( res.entries ) ; [
Code	Iterator iter = iterator ( res.entries ) ; [
Distance : 5

18
Tree	Iterator iter = iterator ( res.entries ) ; Object
Code	Iterator iter = iterator ( res.entries ) ; Object
Distance : 5

19
Tree	Iterator iter = iterator ( res.entries ) ; class
Code	Iterator iter = iterator ( res.entries ) ; class
Distance : 5

20
Tree	Iterator iter = iterator ( res.entries ) ; test
Code	Iterator iter = iterator ( res.entries ) ; test
Distance : 5

21
Tree	Iterator iter = iterator ( res.entries ) ; @
Code	Iterator iter = iterator ( res.entries ) ; @
Distance : 5

22
Tree	Iterator iter = iterator ( res.entries ) ; !
Code	Iterator iter = iterator ( res.entries ) ; !
Distance : 5

23
Tree	Iterator iter = iterator ( res.entries ) ; assertEquals
Code	Iterator iter = iterator ( res.entries ) ; assertEquals
Distance : 5

24
Tree	Iterator iter = iterator ( res.entries ) ; ==
Code	Iterator iter = iterator ( res.entries ) ; ==
Distance : 5

25
Tree	Iterator iter = iterator ( res.entries ) ; void
Code	Iterator iter = iterator ( res.entries ) ; void
Distance : 5

26
Tree	Iterator iter = iterator ( res.entries ) ; []
Code	Iterator iter = iterator ( res.entries ) ; []
Distance : 5

27
Tree	Iterator iter = iterator ( res.entries ) ; T
Code	Iterator iter = iterator ( res.entries ) ; T
Distance : 5

28
Tree	Iterator iter = iterator ( res.entries ) ; t
Code	Iterator iter = iterator ( res.entries ) ; t
Distance : 5

29
Tree	Iterator iter = iterator ( res.entries ) ; field
Code	Iterator iter = iterator ( res.entries ) ; field
Distance : 5

30
Tree	Iterator iter = iterator ( res.entries ) ; final
Code	Iterator iter = iterator ( res.entries ) ; final
Distance : 5

31
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Distance : 5

32
Tree	Iterator iter = iterator ( res.entries ) ; optimizer
Code	Iterator iter = iterator ( res.entries ) ; optimizer
Distance : 5

33
Tree	Iterator iter = iterator ( res.entries ) ; alpha
Code	Iterator iter = iterator ( res.entries ) ; alpha
Distance : 5

34
Tree	Iterator iter = iterator ( res.entries ) ; isBlock
Code	Iterator iter = iterator ( res.entries ) ; isBlock
Distance : 5

35
Tree	Iterator iter = iterator ( res.entries ) ; Override
Code	Iterator iter = iterator ( res.entries ) ; Override
Distance : 5

36
Tree	Iterator iter = iterator ( res.entries ) ; >
Code	Iterator iter = iterator ( res.entries ) ; >
Distance : 5

37
Tree	Iterator iter = iterator ( res.entries ) ; new
Code	Iterator iter = iterator ( res.entries ) ; new
Distance : 5

38
Tree	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Distance : 5

39
Tree	Iterator iter = iterator ( res.entries ) ; ,
Code	Iterator iter = iterator ( res.entries ) ; ,
Distance : 5

40
Tree	Iterator iter = iterator ( res.entries ) ; .
Code	Iterator iter = iterator ( res.entries ) ; .
Distance : 5

41
Tree	Iterator iter = iterator ( res.entries ) ; }
Code	Iterator iter = iterator ( res.entries ) ; }
Distance : 5

42
Tree	Iterator iter = iterator ( res.entries ) ; =
Code	Iterator iter = iterator ( res.entries ) ; =
Distance : 5

43
Tree	Iterator iter = iterator ( res.entries ) ; (
Code	Iterator iter = iterator ( res.entries ) ; (
Distance : 5

44
Tree	Iterator iter = iterator ( res.entries ) ; <s>
Code	Iterator iter = iterator ( res.entries ) ; <s>
Distance : 5

45
Tree	Iterator iter = iterator ( res.entries ) ; <blank>
Code	Iterator iter = iterator ( res.entries ) ; <blank>
Distance : 5

46
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

47
Tree	Iterator iter = iterator ( res.entries ) ; )
Code	Iterator iter = iterator ( res.entries ) ; )
Distance : 5

48
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

49
Tree	Iterator iter = iterator ( res.entries ) ; ()
Code	Iterator iter = iterator ( res.entries ) ; ()
Distance : 5

50
Tree	Iterator iter = iterator ( res.entries ) ; {
Code	Iterator iter = iterator ( res.entries ) ; {
Distance : 5

51
Tree	Iterator iter = iterator ( res.entries ) ; n
Code	Iterator iter = iterator ( res.entries ) ; n
Distance : 5

52
Tree	Iterator iter = iterator ( res.entries ) ; e
Code	Iterator iter = iterator ( res.entries ) ; e
Distance : 5

53
Tree	Iterator iter = iterator ( res.entries ) ; <
Code	Iterator iter = iterator ( res.entries ) ; <
Distance : 5

54
Tree	Iterator iter = iterator ( res.entries ) ; if
Code	Iterator iter = iterator ( res.entries ) ; if
Distance : 5

55
Tree	Iterator iter = iterator ( res.entries ) ; return
Code	Iterator iter = iterator ( res.entries ) ; return
Distance : 5

56
Tree	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Distance : 5

57
Tree	Iterator iter = iterator ( res.entries ) ; this
Code	Iterator iter = iterator ( res.entries ) ; this
Distance : 5

58
Tree	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Code	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Distance : 5

59
Tree	Iterator iter = iterator ( res.entries ) ; checkState
Code	Iterator iter = iterator ( res.entries ) ; checkState
Distance : 5

60
Tree	Iterator iter = iterator ( res.entries ) ; double
Code	Iterator iter = iterator ( res.entries ) ; double
Distance : 5

61
Tree	Iterator iter = iterator ( res.entries ) ; int
Code	Iterator iter = iterator ( res.entries ) ; int
Distance : 5

62
Tree	Iterator iter = iterator ( res.entries ) ; simpleMethod
Code	Iterator iter = iterator ( res.entries ) ; simpleMethod
Distance : 5

63
Tree	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Code	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Distance : 5

64
Tree	Iterator iter = iterator ( res.entries ) ; reportMatcher
Code	Iterator iter = iterator ( res.entries ) ; reportMatcher
Distance : 5

65
Tree	Iterator iter = iterator ( res.entries ) ; invocations
Code	Iterator iter = iterator ( res.entries ) ; invocations
Distance : 5

66
Tree	Iterator iter = iterator ( res.entries ) ; mode
Code	Iterator iter = iterator ( res.entries ) ; mode
Distance : 5

67
Tree	Iterator iter = iterator ( res.entries ) ; setUp
Code	Iterator iter = iterator ( res.entries ) ; setUp
Distance : 5

68
Tree	Iterator iter = iterator ( res.entries ) ; chrono
Code	Iterator iter = iterator ( res.entries ) ; chrono
Distance : 5

69
Tree	Iterator iter = iterator ( res.entries ) ; return;
Code	Iterator iter = iterator ( res.entries ) ; return;
Distance : 5

70
Tree	Iterator iter = iterator ( res.entries ) ; get
Code	Iterator iter = iterator ( res.entries ) ; get
Distance : 5

71
Tree	Iterator iter = iterator ( res.entries ) ; isEmpty
Code	Iterator iter = iterator ( res.entries ) ; isEmpty
Distance : 5

72
Tree	Iterator iter = iterator ( res.entries ) ; static
Code	Iterator iter = iterator ( res.entries ) ; static
Distance : 5

73
Tree	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Code	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Distance : 5

74
Tree	Iterator iter = iterator ( res.entries ) ; JSType
Code	Iterator iter = iterator ( res.entries ) ; JSType
Distance : 5

75
Tree	Iterator iter = iterator ( res.entries ) ; char
Code	Iterator iter = iterator ( res.entries ) ; char
Distance : 5

76
Tree	Iterator iter = iterator ( res.entries ) ; else
Code	Iterator iter = iterator ( res.entries ) ; else
Distance : 5

77
Tree	Iterator iter = iterator ( res.entries ) ; getMessage
Code	Iterator iter = iterator ( res.entries ) ; getMessage
Distance : 5

78
Tree	Iterator iter = iterator ( res.entries ) ; out
Code	Iterator iter = iterator ( res.entries ) ; out
Distance : 5

79
Tree	Iterator iter = iterator ( res.entries ) ; stream
Code	Iterator iter = iterator ( res.entries ) ; stream
Distance : 5

80
Tree	Iterator iter = iterator ( res.entries ) ; matcher
Code	Iterator iter = iterator ( res.entries ) ; matcher
Distance : 5

81
Tree	Iterator iter = iterator ( res.entries ) ; instant
Code	Iterator iter = iterator ( res.entries ) ; instant
Distance : 5

82
Tree	Iterator iter = iterator ( res.entries ) ; pattern
Code	Iterator iter = iterator ( res.entries ) ; pattern
Distance : 5

83
Tree	Iterator iter = iterator ( res.entries ) ; getChronology
Code	Iterator iter = iterator ( res.entries ) ; getChronology
Distance : 5

84
Tree	Iterator iter = iterator ( res.entries ) ; js
Code	Iterator iter = iterator ( res.entries ) ; js
Distance : 5

85
Tree	Iterator iter = iterator ( res.entries ) ; TestUtilities
Code	Iterator iter = iterator ( res.entries ) ; TestUtilities
Distance : 5

86
Tree	Iterator iter = iterator ( res.entries ) ; equals
Code	Iterator iter = iterator ( res.entries ) ; equals
Distance : 5

87
Tree	Iterator iter = iterator ( res.entries ) ; d
Code	Iterator iter = iterator ( res.entries ) ; d
Distance : 5

88
Tree	Iterator iter = iterator ( res.entries ) ; externs
Code	Iterator iter = iterator ( res.entries ) ; externs
Distance : 5

89
Tree	Iterator iter = iterator ( res.entries ) ; throws
Code	Iterator iter = iterator ( res.entries ) ; throws
Distance : 5

90
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Distance : 5

91
Tree	Iterator iter = iterator ( res.entries ) ; getFirstChild
Code	Iterator iter = iterator ( res.entries ) ; getFirstChild
Distance : 5

92
Tree	Iterator iter = iterator ( res.entries ) ; sqrt
Code	Iterator iter = iterator ( res.entries ) ; sqrt
Distance : 5

93
Tree	Iterator iter = iterator ( res.entries ) ; false
Code	Iterator iter = iterator ( res.entries ) ; false
Distance : 5

94
Tree	Iterator iter = iterator ( res.entries ) ; !=
Code	Iterator iter = iterator ( res.entries ) ; !=
Distance : 5

95
Tree	Iterator iter = iterator ( res.entries ) ; Collection
Code	Iterator iter = iterator ( res.entries ) ; Collection
Distance : 5

96
Tree	Iterator iter = iterator ( res.entries ) ; true
Code	Iterator iter = iterator ( res.entries ) ; true
Distance : 5

97
Tree	Iterator iter = iterator ( res.entries ) ; returnZero
Code	Iterator iter = iterator ( res.entries ) ; returnZero
Distance : 5

98
Tree	Iterator iter = iterator ( res.entries ) ; index
Code	Iterator iter = iterator ( res.entries ) ; index
Distance : 5

99
Tree	Iterator iter = iterator ( res.entries ) ; abs
Code	Iterator iter = iterator ( res.entries ) ; abs
Distance : 5

100
Tree	Iterator iter = iterator ( res.entries ) ; Double
Code	Iterator iter = iterator ( res.entries ) ; Double
Distance : 5

101
Tree	Iterator iter = iterator ( res.entries ) ; <=
Code	Iterator iter = iterator ( res.entries ) ; <=
Distance : 5

102
Tree	Iterator iter = iterator ( res.entries ) ; b
Code	Iterator iter = iterator ( res.entries ) ; b
Distance : 5

103
Tree	Iterator iter = iterator ( res.entries ) ; PeriodType
Code	Iterator iter = iterator ( res.entries ) ; PeriodType
Distance : 5

104
Tree	Iterator iter = iterator ( res.entries ) ; a
Code	Iterator iter = iterator ( res.entries ) ; a
Distance : 5

105
Tree	Iterator iter = iterator ( res.entries ) ; s
Code	Iterator iter = iterator ( res.entries ) ; s
Distance : 5

106
Tree	Iterator iter = iterator ( res.entries ) ; contains
Code	Iterator iter = iterator ( res.entries ) ; contains
Distance : 5

107
Tree	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Code	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Distance : 5

108
Tree	Iterator iter = iterator ( res.entries ) ; size
Code	Iterator iter = iterator ( res.entries ) ; size
Distance : 5

109
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Distance : 5

110
Tree	Iterator iter = iterator ( res.entries ) ; mockingProgress
Code	Iterator iter = iterator ( res.entries ) ; mockingProgress
Distance : 5

111
Tree	Iterator iter = iterator ( res.entries ) ; StringBuilder
Code	Iterator iter = iterator ( res.entries ) ; StringBuilder
Distance : 5

112
Tree	Iterator iter = iterator ( res.entries ) ; stroke
Code	Iterator iter = iterator ( res.entries ) ; stroke
Distance : 5

113
Tree	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Code	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Distance : 5

114
Tree	Iterator iter = iterator ( res.entries ) ; traverseEs6
Code	Iterator iter = iterator ( res.entries ) ; traverseEs6
Distance : 5

115
Tree	Iterator iter = iterator ( res.entries ) ; obj
Code	Iterator iter = iterator ( res.entries ) ; obj
Distance : 5

116
Tree	Iterator iter = iterator ( res.entries ) ; append
Code	Iterator iter = iterator ( res.entries ) ; append
Distance : 5

117
Tree	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Code	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Distance : 5

118
Tree	Iterator iter = iterator ( res.entries ) ; scope
Code	Iterator iter = iterator ( res.entries ) ; scope
Distance : 5

119
Tree	Iterator iter = iterator ( res.entries ) ; sb
Code	Iterator iter = iterator ( res.entries ) ; sb
Distance : 5

120
Tree	Iterator iter = iterator ( res.entries ) ; clone
Code	Iterator iter = iterator ( res.entries ) ; clone
Distance : 5

121
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Distance : 5

122
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Distance : 5

123
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Distance : 5

124
Tree	Iterator iter = iterator ( res.entries ) ; c
Code	Iterator iter = iterator ( res.entries ) ; c
Distance : 5

125
Tree	Iterator iter = iterator ( res.entries ) ; notifyListeners
Code	Iterator iter = iterator ( res.entries ) ; notifyListeners
Distance : 5

126
Tree	Iterator iter = iterator ( res.entries ) ; lines
Code	Iterator iter = iterator ( res.entries ) ; lines
Distance : 5

127
Tree	Iterator iter = iterator ( res.entries ) ; verify
Code	Iterator iter = iterator ( res.entries ) ; verify
Distance : 5

128
Tree	Iterator iter = iterator ( res.entries ) ; compiler
Code	Iterator iter = iterator ( res.entries ) ; compiler
Distance : 5

129
Tree	Iterator iter = iterator ( res.entries ) ; type
Code	Iterator iter = iterator ( res.entries ) ; type
Distance : 5

130
Tree	Iterator iter = iterator ( res.entries ) ; m
Code	Iterator iter = iterator ( res.entries ) ; m
Distance : 5

131
Tree	Iterator iter = iterator ( res.entries ) ; boolean
Code	Iterator iter = iterator ( res.entries ) ; boolean
Distance : 5

132
Tree	Iterator iter = iterator ( res.entries ) ; paint
Code	Iterator iter = iterator ( res.entries ) ; paint
Distance : 5

133
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Distance : 5

134
Tree	Iterator iter = iterator ( res.entries ) ; y
Code	Iterator iter = iterator ( res.entries ) ; y
Distance : 5

135
Tree	Iterator iter = iterator ( res.entries ) ; Integer
Code	Iterator iter = iterator ( res.entries ) ; Integer
Distance : 5

136
Tree	Iterator iter = iterator ( res.entries ) ; v
Code	Iterator iter = iterator ( res.entries ) ; v
Distance : 5

137
Tree	Iterator iter = iterator ( res.entries ) ; expected
Code	Iterator iter = iterator ( res.entries ) ; expected
Distance : 5

138
Tree	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Code	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Distance : 5

139
Tree	Iterator iter = iterator ( res.entries ) ; invocation
Code	Iterator iter = iterator ( res.entries ) ; invocation
Distance : 5

140
Tree	Iterator iter = iterator ( res.entries ) ; assertThat
Code	Iterator iter = iterator ( res.entries ) ; assertThat
Distance : 5

141
Tree	Iterator iter = iterator ( res.entries ) ; FastMath
Code	Iterator iter = iterator ( res.entries ) ; FastMath
Distance : 5

142
Tree	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Distance : 5

143
Tree	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Distance : 5

144
Tree	Iterator iter = iterator ( res.entries ) ; parent
Code	Iterator iter = iterator ( res.entries ) ; parent
Distance : 5

145
Tree	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Distance : 5

146
Tree	Iterator iter = iterator ( res.entries ) ; ArrayList
Code	Iterator iter = iterator ( res.entries ) ; ArrayList
Distance : 5

147
Tree	Iterator iter = iterator ( res.entries ) ; x
Code	Iterator iter = iterator ( res.entries ) ; x
Distance : 5

148
Tree	Iterator iter = iterator ( res.entries ) ; testSame
Code	Iterator iter = iterator ( res.entries ) ; testSame
Distance : 5

149
Tree	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Code	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Distance : 5

150
Tree	Iterator iter = iterator ( res.entries ) ; str
Code	Iterator iter = iterator ( res.entries ) ; str
Distance : 5

151
Tree	Iterator iter = iterator ( res.entries ) ; Node
Code	Iterator iter = iterator ( res.entries ) ; Node
Distance : 5

152
Tree	Iterator iter = iterator ( res.entries ) ; result
Code	Iterator iter = iterator ( res.entries ) ; result
Distance : 5

153
Tree	Iterator iter = iterator ( res.entries ) ; Exception
Code	Iterator iter = iterator ( res.entries ) ; Exception
Distance : 5

154
Tree	Iterator iter = iterator ( res.entries ) ; Assert
Code	Iterator iter = iterator ( res.entries ) ; Assert
Distance : 5

155
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Distance : 9

156
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Distance : 9

157
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Distance : 9

158
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Distance : 9

159
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

162
Tree	Iterator iter = iterator ( res.entries ) ; name
Code	Iterator iter = iterator ( res.entries ) ; name
Distance : 5

163
Tree	Iterator iter = iterator ( res.entries ) ; *
Code	Iterator iter = iterator ( res.entries ) ; *
Distance : 5

164
Tree	Iterator iter = iterator ( res.entries ) ; getInstance
Code	Iterator iter = iterator ( res.entries ) ; getInstance
Distance : 5

165
Tree	Iterator iter = iterator ( res.entries ) ; serialised
Code	Iterator iter = iterator ( res.entries ) ; serialised
Distance : 5

166
Tree	Iterator iter = iterator ( res.entries ) ; checkNotNull
Code	Iterator iter = iterator ( res.entries ) ; checkNotNull
Distance : 5

167
Tree	Iterator iter = iterator ( res.entries ) ; TestUtils
Code	Iterator iter = iterator ( res.entries ) ; TestUtils
Distance : 5

168
Tree	Iterator iter = iterator ( res.entries ) ; source
Code	Iterator iter = iterator ( res.entries ) ; source
Distance : 5

169
Tree	Iterator iter = iterator ( res.entries ) ; toString
Code	Iterator iter = iterator ( res.entries ) ; toString
Distance : 5

170
Tree	Iterator iter = iterator ( res.entries ) ; Math
Code	Iterator iter = iterator ( res.entries ) ; Math
Distance : 5

171
Tree	Iterator iter = iterator ( res.entries ) ; wanted
Code	Iterator iter = iterator ( res.entries ) ; wanted
Distance : 5

172
Tree	Iterator iter = iterator ( res.entries ) ; options
Code	Iterator iter = iterator ( res.entries ) ; options
Distance : 5

173
Tree	Iterator iter = iterator ( res.entries ) ; p
Code	Iterator iter = iterator ( res.entries ) ; p
Distance : 5

174
Tree	Iterator iter = iterator ( res.entries ) ; data
Code	Iterator iter = iterator ( res.entries ) ; data
Distance : 5

175
Tree	Iterator iter = iterator ( res.entries ) ; checkArgument
Code	Iterator iter = iterator ( res.entries ) ; checkArgument
Distance : 5

176
Tree	Iterator iter = iterator ( res.entries ) ; add
Code	Iterator iter = iterator ( res.entries ) ; add
Distance : 5

177
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Distance : 5

178
Tree	Iterator iter = iterator ( res.entries ) ; ex
Code	Iterator iter = iterator ( res.entries ) ; ex
Distance : 5

179
Tree	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Code	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Distance : 5

180
Tree	Iterator iter = iterator ( res.entries ) ; root
Code	Iterator iter = iterator ( res.entries ) ; root
Distance : 5

181
Tree	Iterator iter = iterator ( res.entries ) ; NodeUtil
Code	Iterator iter = iterator ( res.entries ) ; NodeUtil
Distance : 5

182
Tree	Iterator iter = iterator ( res.entries ) ; Fraction
Code	Iterator iter = iterator ( res.entries ) ; Fraction
Distance : 5

183
Tree	Iterator iter = iterator ( res.entries ) ; assertTrue
Code	Iterator iter = iterator ( res.entries ) ; assertTrue
Distance : 5

184
Tree	Iterator iter = iterator ( res.entries ) ; :
Code	Iterator iter = iterator ( res.entries ) ; :
Distance : 5

185
Tree	Iterator iter = iterator ( res.entries ) ; try
Code	Iterator iter = iterator ( res.entries ) ; try
Distance : 5

186
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Distance : 5

187
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Distance : 5

188
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Distance : 5

189
Tree	Iterator iter = iterator ( res.entries ) ; catch
Code	Iterator iter = iterator ( res.entries ) ; catch
Distance : 5

190
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Distance : 5

191
Tree	Iterator iter = iterator ( res.entries ) ; throw
Code	Iterator iter = iterator ( res.entries ) ; throw
Distance : 5

192
Tree	Iterator iter = iterator ( res.entries ) ; i
Code	Iterator iter = iterator ( res.entries ) ; i
Distance : 5

193
Tree	Iterator iter = iterator ( res.entries ) ; value
Code	Iterator iter = iterator ( res.entries ) ; value
Distance : 5

194
Tree	Iterator iter = iterator ( res.entries ) ; ?
Code	Iterator iter = iterator ( res.entries ) ; ?
Distance : 5

195
Tree	Iterator iter = iterator ( res.entries ) ; /
Code	Iterator iter = iterator ( res.entries ) ; /
Distance : 5

196
Tree	Iterator iter = iterator ( res.entries ) ; length
Code	Iterator iter = iterator ( res.entries ) ; length
Distance : 5

197
Tree	Iterator iter = iterator ( res.entries ) ; long
Code	Iterator iter = iterator ( res.entries ) ; long
Distance : 5

198
Tree	Iterator iter = iterator ( res.entries ) ; valueOf
Code	Iterator iter = iterator ( res.entries ) ; valueOf
Distance : 5

199
Tree	Iterator iter = iterator ( res.entries ) ; instance
Code	Iterator iter = iterator ( res.entries ) ; instance
Distance : 5

========================================================================


========================================================================
Example Number: 64
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Distance : 5

1
Tree	Iterator iter = iterator ( res.entries ) ; getField
Code	Iterator iter = iterator ( res.entries ) ; getField
Distance : 5

2
Tree	Iterator iter = iterator ( res.entries ) ; public
Code	Iterator iter = iterator ( res.entries ) ; public
Distance : 5

3
Tree	Iterator iter = iterator ( res.entries ) ; mock
Code	Iterator iter = iterator ( res.entries ) ; mock
Distance : 5

4
Tree	Iterator iter = iterator ( res.entries ) ; solver
Code	Iterator iter = iterator ( res.entries ) ; solver
Distance : 5

5
Tree	Iterator iter = iterator ( res.entries ) ; super
Code	Iterator iter = iterator ( res.entries ) ; super
Distance : 5

6
Tree	Iterator iter = iterator ( res.entries ) ; Test
Code	Iterator iter = iterator ( res.entries ) ; Test
Distance : 5

7
Tree	Iterator iter = iterator ( res.entries ) ; Class
Code	Iterator iter = iterator ( res.entries ) ; Class
Distance : 5

8
Tree	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Code	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Distance : 5

9
Tree	Iterator iter = iterator ( res.entries ) ; {}
Code	Iterator iter = iterator ( res.entries ) ; {}
Distance : 5

10
Tree	Iterator iter = iterator ( res.entries ) ; f
Code	Iterator iter = iterator ( res.entries ) ; f
Distance : 5

11
Tree	Iterator iter = iterator ( res.entries ) ; ParamChecks
Code	Iterator iter = iterator ( res.entries ) ; ParamChecks
Distance : 5

12
Tree	Iterator iter = iterator ( res.entries ) ; -
Code	Iterator iter = iterator ( res.entries ) ; -
Distance : 5

13
Tree	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Distance : 5

14
Tree	Iterator iter = iterator ( res.entries ) ; Preconditions
Code	Iterator iter = iterator ( res.entries ) ; Preconditions
Distance : 5

15
Tree	Iterator iter = iterator ( res.entries ) ; &&
Code	Iterator iter = iterator ( res.entries ) ; &&
Distance : 5

16
Tree	Iterator iter = iterator ( res.entries ) ; ]
Code	Iterator iter = iterator ( res.entries ) ; ]
Distance : 5

17
Tree	Iterator iter = iterator ( res.entries ) ; [
Code	Iterator iter = iterator ( res.entries ) ; [
Distance : 5

18
Tree	Iterator iter = iterator ( res.entries ) ; Object
Code	Iterator iter = iterator ( res.entries ) ; Object
Distance : 5

19
Tree	Iterator iter = iterator ( res.entries ) ; class
Code	Iterator iter = iterator ( res.entries ) ; class
Distance : 5

20
Tree	Iterator iter = iterator ( res.entries ) ; test
Code	Iterator iter = iterator ( res.entries ) ; test
Distance : 5

21
Tree	Iterator iter = iterator ( res.entries ) ; @
Code	Iterator iter = iterator ( res.entries ) ; @
Distance : 5

22
Tree	Iterator iter = iterator ( res.entries ) ; !
Code	Iterator iter = iterator ( res.entries ) ; !
Distance : 5

23
Tree	Iterator iter = iterator ( res.entries ) ; assertEquals
Code	Iterator iter = iterator ( res.entries ) ; assertEquals
Distance : 5

24
Tree	Iterator iter = iterator ( res.entries ) ; ==
Code	Iterator iter = iterator ( res.entries ) ; ==
Distance : 5

25
Tree	Iterator iter = iterator ( res.entries ) ; void
Code	Iterator iter = iterator ( res.entries ) ; void
Distance : 5

26
Tree	Iterator iter = iterator ( res.entries ) ; []
Code	Iterator iter = iterator ( res.entries ) ; []
Distance : 5

27
Tree	Iterator iter = iterator ( res.entries ) ; T
Code	Iterator iter = iterator ( res.entries ) ; T
Distance : 5

28
Tree	Iterator iter = iterator ( res.entries ) ; t
Code	Iterator iter = iterator ( res.entries ) ; t
Distance : 5

29
Tree	Iterator iter = iterator ( res.entries ) ; field
Code	Iterator iter = iterator ( res.entries ) ; field
Distance : 5

30
Tree	Iterator iter = iterator ( res.entries ) ; final
Code	Iterator iter = iterator ( res.entries ) ; final
Distance : 5

31
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Distance : 5

32
Tree	Iterator iter = iterator ( res.entries ) ; optimizer
Code	Iterator iter = iterator ( res.entries ) ; optimizer
Distance : 5

33
Tree	Iterator iter = iterator ( res.entries ) ; alpha
Code	Iterator iter = iterator ( res.entries ) ; alpha
Distance : 5

34
Tree	Iterator iter = iterator ( res.entries ) ; isBlock
Code	Iterator iter = iterator ( res.entries ) ; isBlock
Distance : 5

35
Tree	Iterator iter = iterator ( res.entries ) ; Override
Code	Iterator iter = iterator ( res.entries ) ; Override
Distance : 5

36
Tree	Iterator iter = iterator ( res.entries ) ; >
Code	Iterator iter = iterator ( res.entries ) ; >
Distance : 5

37
Tree	Iterator iter = iterator ( res.entries ) ; new
Code	Iterator iter = iterator ( res.entries ) ; new
Distance : 5

38
Tree	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Distance : 5

39
Tree	Iterator iter = iterator ( res.entries ) ; ,
Code	Iterator iter = iterator ( res.entries ) ; ,
Distance : 5

40
Tree	Iterator iter = iterator ( res.entries ) ; .
Code	Iterator iter = iterator ( res.entries ) ; .
Distance : 5

41
Tree	Iterator iter = iterator ( res.entries ) ; }
Code	Iterator iter = iterator ( res.entries ) ; }
Distance : 5

42
Tree	Iterator iter = iterator ( res.entries ) ; =
Code	Iterator iter = iterator ( res.entries ) ; =
Distance : 5

43
Tree	Iterator iter = iterator ( res.entries ) ; (
Code	Iterator iter = iterator ( res.entries ) ; (
Distance : 5

44
Tree	Iterator iter = iterator ( res.entries ) ; <s>
Code	Iterator iter = iterator ( res.entries ) ; <s>
Distance : 5

45
Tree	Iterator iter = iterator ( res.entries ) ; <blank>
Code	Iterator iter = iterator ( res.entries ) ; <blank>
Distance : 5

46
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

47
Tree	Iterator iter = iterator ( res.entries ) ; )
Code	Iterator iter = iterator ( res.entries ) ; )
Distance : 5

48
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

49
Tree	Iterator iter = iterator ( res.entries ) ; ()
Code	Iterator iter = iterator ( res.entries ) ; ()
Distance : 5

50
Tree	Iterator iter = iterator ( res.entries ) ; {
Code	Iterator iter = iterator ( res.entries ) ; {
Distance : 5

51
Tree	Iterator iter = iterator ( res.entries ) ; n
Code	Iterator iter = iterator ( res.entries ) ; n
Distance : 5

52
Tree	Iterator iter = iterator ( res.entries ) ; e
Code	Iterator iter = iterator ( res.entries ) ; e
Distance : 5

53
Tree	Iterator iter = iterator ( res.entries ) ; <
Code	Iterator iter = iterator ( res.entries ) ; <
Distance : 5

54
Tree	Iterator iter = iterator ( res.entries ) ; if
Code	Iterator iter = iterator ( res.entries ) ; if
Distance : 5

55
Tree	Iterator iter = iterator ( res.entries ) ; return
Code	Iterator iter = iterator ( res.entries ) ; return
Distance : 5

56
Tree	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Distance : 5

57
Tree	Iterator iter = iterator ( res.entries ) ; this
Code	Iterator iter = iterator ( res.entries ) ; this
Distance : 5

58
Tree	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Code	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Distance : 5

59
Tree	Iterator iter = iterator ( res.entries ) ; checkState
Code	Iterator iter = iterator ( res.entries ) ; checkState
Distance : 5

60
Tree	Iterator iter = iterator ( res.entries ) ; double
Code	Iterator iter = iterator ( res.entries ) ; double
Distance : 5

61
Tree	Iterator iter = iterator ( res.entries ) ; int
Code	Iterator iter = iterator ( res.entries ) ; int
Distance : 5

62
Tree	Iterator iter = iterator ( res.entries ) ; simpleMethod
Code	Iterator iter = iterator ( res.entries ) ; simpleMethod
Distance : 5

63
Tree	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Code	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Distance : 5

64
Tree	Iterator iter = iterator ( res.entries ) ; reportMatcher
Code	Iterator iter = iterator ( res.entries ) ; reportMatcher
Distance : 5

65
Tree	Iterator iter = iterator ( res.entries ) ; invocations
Code	Iterator iter = iterator ( res.entries ) ; invocations
Distance : 5

66
Tree	Iterator iter = iterator ( res.entries ) ; mode
Code	Iterator iter = iterator ( res.entries ) ; mode
Distance : 5

67
Tree	Iterator iter = iterator ( res.entries ) ; setUp
Code	Iterator iter = iterator ( res.entries ) ; setUp
Distance : 5

68
Tree	Iterator iter = iterator ( res.entries ) ; chrono
Code	Iterator iter = iterator ( res.entries ) ; chrono
Distance : 5

69
Tree	Iterator iter = iterator ( res.entries ) ; return;
Code	Iterator iter = iterator ( res.entries ) ; return;
Distance : 5

70
Tree	Iterator iter = iterator ( res.entries ) ; get
Code	Iterator iter = iterator ( res.entries ) ; get
Distance : 5

71
Tree	Iterator iter = iterator ( res.entries ) ; isEmpty
Code	Iterator iter = iterator ( res.entries ) ; isEmpty
Distance : 5

72
Tree	Iterator iter = iterator ( res.entries ) ; static
Code	Iterator iter = iterator ( res.entries ) ; static
Distance : 5

73
Tree	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Code	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Distance : 5

74
Tree	Iterator iter = iterator ( res.entries ) ; JSType
Code	Iterator iter = iterator ( res.entries ) ; JSType
Distance : 5

75
Tree	Iterator iter = iterator ( res.entries ) ; char
Code	Iterator iter = iterator ( res.entries ) ; char
Distance : 5

76
Tree	Iterator iter = iterator ( res.entries ) ; else
Code	Iterator iter = iterator ( res.entries ) ; else
Distance : 5

77
Tree	Iterator iter = iterator ( res.entries ) ; getMessage
Code	Iterator iter = iterator ( res.entries ) ; getMessage
Distance : 5

78
Tree	Iterator iter = iterator ( res.entries ) ; out
Code	Iterator iter = iterator ( res.entries ) ; out
Distance : 5

79
Tree	Iterator iter = iterator ( res.entries ) ; stream
Code	Iterator iter = iterator ( res.entries ) ; stream
Distance : 5

80
Tree	Iterator iter = iterator ( res.entries ) ; matcher
Code	Iterator iter = iterator ( res.entries ) ; matcher
Distance : 5

81
Tree	Iterator iter = iterator ( res.entries ) ; instant
Code	Iterator iter = iterator ( res.entries ) ; instant
Distance : 5

82
Tree	Iterator iter = iterator ( res.entries ) ; pattern
Code	Iterator iter = iterator ( res.entries ) ; pattern
Distance : 5

83
Tree	Iterator iter = iterator ( res.entries ) ; getChronology
Code	Iterator iter = iterator ( res.entries ) ; getChronology
Distance : 5

84
Tree	Iterator iter = iterator ( res.entries ) ; js
Code	Iterator iter = iterator ( res.entries ) ; js
Distance : 5

85
Tree	Iterator iter = iterator ( res.entries ) ; TestUtilities
Code	Iterator iter = iterator ( res.entries ) ; TestUtilities
Distance : 5

86
Tree	Iterator iter = iterator ( res.entries ) ; equals
Code	Iterator iter = iterator ( res.entries ) ; equals
Distance : 5

87
Tree	Iterator iter = iterator ( res.entries ) ; d
Code	Iterator iter = iterator ( res.entries ) ; d
Distance : 5

88
Tree	Iterator iter = iterator ( res.entries ) ; externs
Code	Iterator iter = iterator ( res.entries ) ; externs
Distance : 5

89
Tree	Iterator iter = iterator ( res.entries ) ; throws
Code	Iterator iter = iterator ( res.entries ) ; throws
Distance : 5

90
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Distance : 5

91
Tree	Iterator iter = iterator ( res.entries ) ; getFirstChild
Code	Iterator iter = iterator ( res.entries ) ; getFirstChild
Distance : 5

92
Tree	Iterator iter = iterator ( res.entries ) ; sqrt
Code	Iterator iter = iterator ( res.entries ) ; sqrt
Distance : 5

93
Tree	Iterator iter = iterator ( res.entries ) ; false
Code	Iterator iter = iterator ( res.entries ) ; false
Distance : 5

94
Tree	Iterator iter = iterator ( res.entries ) ; !=
Code	Iterator iter = iterator ( res.entries ) ; !=
Distance : 5

95
Tree	Iterator iter = iterator ( res.entries ) ; Collection
Code	Iterator iter = iterator ( res.entries ) ; Collection
Distance : 5

96
Tree	Iterator iter = iterator ( res.entries ) ; true
Code	Iterator iter = iterator ( res.entries ) ; true
Distance : 5

97
Tree	Iterator iter = iterator ( res.entries ) ; returnZero
Code	Iterator iter = iterator ( res.entries ) ; returnZero
Distance : 5

98
Tree	Iterator iter = iterator ( res.entries ) ; index
Code	Iterator iter = iterator ( res.entries ) ; index
Distance : 5

99
Tree	Iterator iter = iterator ( res.entries ) ; abs
Code	Iterator iter = iterator ( res.entries ) ; abs
Distance : 5

100
Tree	Iterator iter = iterator ( res.entries ) ; Double
Code	Iterator iter = iterator ( res.entries ) ; Double
Distance : 5

101
Tree	Iterator iter = iterator ( res.entries ) ; <=
Code	Iterator iter = iterator ( res.entries ) ; <=
Distance : 5

102
Tree	Iterator iter = iterator ( res.entries ) ; b
Code	Iterator iter = iterator ( res.entries ) ; b
Distance : 5

103
Tree	Iterator iter = iterator ( res.entries ) ; PeriodType
Code	Iterator iter = iterator ( res.entries ) ; PeriodType
Distance : 5

104
Tree	Iterator iter = iterator ( res.entries ) ; a
Code	Iterator iter = iterator ( res.entries ) ; a
Distance : 5

105
Tree	Iterator iter = iterator ( res.entries ) ; s
Code	Iterator iter = iterator ( res.entries ) ; s
Distance : 5

106
Tree	Iterator iter = iterator ( res.entries ) ; contains
Code	Iterator iter = iterator ( res.entries ) ; contains
Distance : 5

107
Tree	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Code	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Distance : 5

108
Tree	Iterator iter = iterator ( res.entries ) ; size
Code	Iterator iter = iterator ( res.entries ) ; size
Distance : 5

109
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Distance : 5

110
Tree	Iterator iter = iterator ( res.entries ) ; mockingProgress
Code	Iterator iter = iterator ( res.entries ) ; mockingProgress
Distance : 5

111
Tree	Iterator iter = iterator ( res.entries ) ; StringBuilder
Code	Iterator iter = iterator ( res.entries ) ; StringBuilder
Distance : 5

112
Tree	Iterator iter = iterator ( res.entries ) ; stroke
Code	Iterator iter = iterator ( res.entries ) ; stroke
Distance : 5

113
Tree	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Code	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Distance : 5

114
Tree	Iterator iter = iterator ( res.entries ) ; traverseEs6
Code	Iterator iter = iterator ( res.entries ) ; traverseEs6
Distance : 5

115
Tree	Iterator iter = iterator ( res.entries ) ; obj
Code	Iterator iter = iterator ( res.entries ) ; obj
Distance : 5

116
Tree	Iterator iter = iterator ( res.entries ) ; append
Code	Iterator iter = iterator ( res.entries ) ; append
Distance : 5

117
Tree	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Code	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Distance : 5

118
Tree	Iterator iter = iterator ( res.entries ) ; scope
Code	Iterator iter = iterator ( res.entries ) ; scope
Distance : 5

119
Tree	Iterator iter = iterator ( res.entries ) ; sb
Code	Iterator iter = iterator ( res.entries ) ; sb
Distance : 5

120
Tree	Iterator iter = iterator ( res.entries ) ; clone
Code	Iterator iter = iterator ( res.entries ) ; clone
Distance : 5

121
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Distance : 5

122
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Distance : 5

123
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Distance : 5

124
Tree	Iterator iter = iterator ( res.entries ) ; c
Code	Iterator iter = iterator ( res.entries ) ; c
Distance : 5

125
Tree	Iterator iter = iterator ( res.entries ) ; notifyListeners
Code	Iterator iter = iterator ( res.entries ) ; notifyListeners
Distance : 5

126
Tree	Iterator iter = iterator ( res.entries ) ; lines
Code	Iterator iter = iterator ( res.entries ) ; lines
Distance : 5

127
Tree	Iterator iter = iterator ( res.entries ) ; verify
Code	Iterator iter = iterator ( res.entries ) ; verify
Distance : 5

128
Tree	Iterator iter = iterator ( res.entries ) ; compiler
Code	Iterator iter = iterator ( res.entries ) ; compiler
Distance : 5

129
Tree	Iterator iter = iterator ( res.entries ) ; type
Code	Iterator iter = iterator ( res.entries ) ; type
Distance : 5

130
Tree	Iterator iter = iterator ( res.entries ) ; m
Code	Iterator iter = iterator ( res.entries ) ; m
Distance : 5

131
Tree	Iterator iter = iterator ( res.entries ) ; boolean
Code	Iterator iter = iterator ( res.entries ) ; boolean
Distance : 5

132
Tree	Iterator iter = iterator ( res.entries ) ; paint
Code	Iterator iter = iterator ( res.entries ) ; paint
Distance : 5

133
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Distance : 5

134
Tree	Iterator iter = iterator ( res.entries ) ; y
Code	Iterator iter = iterator ( res.entries ) ; y
Distance : 5

135
Tree	Iterator iter = iterator ( res.entries ) ; Integer
Code	Iterator iter = iterator ( res.entries ) ; Integer
Distance : 5

136
Tree	Iterator iter = iterator ( res.entries ) ; v
Code	Iterator iter = iterator ( res.entries ) ; v
Distance : 5

137
Tree	Iterator iter = iterator ( res.entries ) ; expected
Code	Iterator iter = iterator ( res.entries ) ; expected
Distance : 5

138
Tree	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Code	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Distance : 5

139
Tree	Iterator iter = iterator ( res.entries ) ; invocation
Code	Iterator iter = iterator ( res.entries ) ; invocation
Distance : 5

140
Tree	Iterator iter = iterator ( res.entries ) ; assertThat
Code	Iterator iter = iterator ( res.entries ) ; assertThat
Distance : 5

141
Tree	Iterator iter = iterator ( res.entries ) ; FastMath
Code	Iterator iter = iterator ( res.entries ) ; FastMath
Distance : 5

142
Tree	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Distance : 5

143
Tree	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Distance : 5

144
Tree	Iterator iter = iterator ( res.entries ) ; parent
Code	Iterator iter = iterator ( res.entries ) ; parent
Distance : 5

145
Tree	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Distance : 5

146
Tree	Iterator iter = iterator ( res.entries ) ; ArrayList
Code	Iterator iter = iterator ( res.entries ) ; ArrayList
Distance : 5

147
Tree	Iterator iter = iterator ( res.entries ) ; x
Code	Iterator iter = iterator ( res.entries ) ; x
Distance : 5

148
Tree	Iterator iter = iterator ( res.entries ) ; testSame
Code	Iterator iter = iterator ( res.entries ) ; testSame
Distance : 5

149
Tree	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Code	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Distance : 5

150
Tree	Iterator iter = iterator ( res.entries ) ; str
Code	Iterator iter = iterator ( res.entries ) ; str
Distance : 5

151
Tree	Iterator iter = iterator ( res.entries ) ; Node
Code	Iterator iter = iterator ( res.entries ) ; Node
Distance : 5

152
Tree	Iterator iter = iterator ( res.entries ) ; result
Code	Iterator iter = iterator ( res.entries ) ; result
Distance : 5

153
Tree	Iterator iter = iterator ( res.entries ) ; Exception
Code	Iterator iter = iterator ( res.entries ) ; Exception
Distance : 5

154
Tree	Iterator iter = iterator ( res.entries ) ; Assert
Code	Iterator iter = iterator ( res.entries ) ; Assert
Distance : 5

155
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Distance : 9

156
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Distance : 9

157
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Distance : 9

158
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Distance : 9

159
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

162
Tree	Iterator iter = iterator ( res.entries ) ; name
Code	Iterator iter = iterator ( res.entries ) ; name
Distance : 5

163
Tree	Iterator iter = iterator ( res.entries ) ; *
Code	Iterator iter = iterator ( res.entries ) ; *
Distance : 5

164
Tree	Iterator iter = iterator ( res.entries ) ; getInstance
Code	Iterator iter = iterator ( res.entries ) ; getInstance
Distance : 5

165
Tree	Iterator iter = iterator ( res.entries ) ; serialised
Code	Iterator iter = iterator ( res.entries ) ; serialised
Distance : 5

166
Tree	Iterator iter = iterator ( res.entries ) ; checkNotNull
Code	Iterator iter = iterator ( res.entries ) ; checkNotNull
Distance : 5

167
Tree	Iterator iter = iterator ( res.entries ) ; TestUtils
Code	Iterator iter = iterator ( res.entries ) ; TestUtils
Distance : 5

168
Tree	Iterator iter = iterator ( res.entries ) ; source
Code	Iterator iter = iterator ( res.entries ) ; source
Distance : 5

169
Tree	Iterator iter = iterator ( res.entries ) ; toString
Code	Iterator iter = iterator ( res.entries ) ; toString
Distance : 5

170
Tree	Iterator iter = iterator ( res.entries ) ; Math
Code	Iterator iter = iterator ( res.entries ) ; Math
Distance : 5

171
Tree	Iterator iter = iterator ( res.entries ) ; wanted
Code	Iterator iter = iterator ( res.entries ) ; wanted
Distance : 5

172
Tree	Iterator iter = iterator ( res.entries ) ; options
Code	Iterator iter = iterator ( res.entries ) ; options
Distance : 5

173
Tree	Iterator iter = iterator ( res.entries ) ; p
Code	Iterator iter = iterator ( res.entries ) ; p
Distance : 5

174
Tree	Iterator iter = iterator ( res.entries ) ; data
Code	Iterator iter = iterator ( res.entries ) ; data
Distance : 5

175
Tree	Iterator iter = iterator ( res.entries ) ; checkArgument
Code	Iterator iter = iterator ( res.entries ) ; checkArgument
Distance : 5

176
Tree	Iterator iter = iterator ( res.entries ) ; add
Code	Iterator iter = iterator ( res.entries ) ; add
Distance : 5

177
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Distance : 5

178
Tree	Iterator iter = iterator ( res.entries ) ; ex
Code	Iterator iter = iterator ( res.entries ) ; ex
Distance : 5

179
Tree	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Code	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Distance : 5

180
Tree	Iterator iter = iterator ( res.entries ) ; root
Code	Iterator iter = iterator ( res.entries ) ; root
Distance : 5

181
Tree	Iterator iter = iterator ( res.entries ) ; NodeUtil
Code	Iterator iter = iterator ( res.entries ) ; NodeUtil
Distance : 5

182
Tree	Iterator iter = iterator ( res.entries ) ; Fraction
Code	Iterator iter = iterator ( res.entries ) ; Fraction
Distance : 5

183
Tree	Iterator iter = iterator ( res.entries ) ; assertTrue
Code	Iterator iter = iterator ( res.entries ) ; assertTrue
Distance : 5

184
Tree	Iterator iter = iterator ( res.entries ) ; :
Code	Iterator iter = iterator ( res.entries ) ; :
Distance : 5

185
Tree	Iterator iter = iterator ( res.entries ) ; try
Code	Iterator iter = iterator ( res.entries ) ; try
Distance : 5

186
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Distance : 5

187
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Distance : 5

188
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Distance : 5

189
Tree	Iterator iter = iterator ( res.entries ) ; catch
Code	Iterator iter = iterator ( res.entries ) ; catch
Distance : 5

190
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Distance : 5

191
Tree	Iterator iter = iterator ( res.entries ) ; throw
Code	Iterator iter = iterator ( res.entries ) ; throw
Distance : 5

192
Tree	Iterator iter = iterator ( res.entries ) ; i
Code	Iterator iter = iterator ( res.entries ) ; i
Distance : 5

193
Tree	Iterator iter = iterator ( res.entries ) ; value
Code	Iterator iter = iterator ( res.entries ) ; value
Distance : 5

194
Tree	Iterator iter = iterator ( res.entries ) ; ?
Code	Iterator iter = iterator ( res.entries ) ; ?
Distance : 5

195
Tree	Iterator iter = iterator ( res.entries ) ; /
Code	Iterator iter = iterator ( res.entries ) ; /
Distance : 5

196
Tree	Iterator iter = iterator ( res.entries ) ; length
Code	Iterator iter = iterator ( res.entries ) ; length
Distance : 5

197
Tree	Iterator iter = iterator ( res.entries ) ; long
Code	Iterator iter = iterator ( res.entries ) ; long
Distance : 5

198
Tree	Iterator iter = iterator ( res.entries ) ; valueOf
Code	Iterator iter = iterator ( res.entries ) ; valueOf
Distance : 5

199
Tree	Iterator iter = iterator ( res.entries ) ; instance
Code	Iterator iter = iterator ( res.entries ) ; instance
Distance : 5

========================================================================


========================================================================
Example Number: 65
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Distance : 5

1
Tree	Iterator iter = iterator ( res.entries ) ; getField
Code	Iterator iter = iterator ( res.entries ) ; getField
Distance : 5

2
Tree	Iterator iter = iterator ( res.entries ) ; public
Code	Iterator iter = iterator ( res.entries ) ; public
Distance : 5

3
Tree	Iterator iter = iterator ( res.entries ) ; mock
Code	Iterator iter = iterator ( res.entries ) ; mock
Distance : 5

4
Tree	Iterator iter = iterator ( res.entries ) ; solver
Code	Iterator iter = iterator ( res.entries ) ; solver
Distance : 5

5
Tree	Iterator iter = iterator ( res.entries ) ; super
Code	Iterator iter = iterator ( res.entries ) ; super
Distance : 5

6
Tree	Iterator iter = iterator ( res.entries ) ; Test
Code	Iterator iter = iterator ( res.entries ) ; Test
Distance : 5

7
Tree	Iterator iter = iterator ( res.entries ) ; Class
Code	Iterator iter = iterator ( res.entries ) ; Class
Distance : 5

8
Tree	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Code	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Distance : 5

9
Tree	Iterator iter = iterator ( res.entries ) ; {}
Code	Iterator iter = iterator ( res.entries ) ; {}
Distance : 5

10
Tree	Iterator iter = iterator ( res.entries ) ; f
Code	Iterator iter = iterator ( res.entries ) ; f
Distance : 5

11
Tree	Iterator iter = iterator ( res.entries ) ; ParamChecks
Code	Iterator iter = iterator ( res.entries ) ; ParamChecks
Distance : 5

12
Tree	Iterator iter = iterator ( res.entries ) ; -
Code	Iterator iter = iterator ( res.entries ) ; -
Distance : 5

13
Tree	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Distance : 5

14
Tree	Iterator iter = iterator ( res.entries ) ; Preconditions
Code	Iterator iter = iterator ( res.entries ) ; Preconditions
Distance : 5

15
Tree	Iterator iter = iterator ( res.entries ) ; &&
Code	Iterator iter = iterator ( res.entries ) ; &&
Distance : 5

16
Tree	Iterator iter = iterator ( res.entries ) ; ]
Code	Iterator iter = iterator ( res.entries ) ; ]
Distance : 5

17
Tree	Iterator iter = iterator ( res.entries ) ; [
Code	Iterator iter = iterator ( res.entries ) ; [
Distance : 5

18
Tree	Iterator iter = iterator ( res.entries ) ; Object
Code	Iterator iter = iterator ( res.entries ) ; Object
Distance : 5

19
Tree	Iterator iter = iterator ( res.entries ) ; class
Code	Iterator iter = iterator ( res.entries ) ; class
Distance : 5

20
Tree	Iterator iter = iterator ( res.entries ) ; test
Code	Iterator iter = iterator ( res.entries ) ; test
Distance : 5

21
Tree	Iterator iter = iterator ( res.entries ) ; @
Code	Iterator iter = iterator ( res.entries ) ; @
Distance : 5

22
Tree	Iterator iter = iterator ( res.entries ) ; !
Code	Iterator iter = iterator ( res.entries ) ; !
Distance : 5

23
Tree	Iterator iter = iterator ( res.entries ) ; assertEquals
Code	Iterator iter = iterator ( res.entries ) ; assertEquals
Distance : 5

24
Tree	Iterator iter = iterator ( res.entries ) ; ==
Code	Iterator iter = iterator ( res.entries ) ; ==
Distance : 5

25
Tree	Iterator iter = iterator ( res.entries ) ; void
Code	Iterator iter = iterator ( res.entries ) ; void
Distance : 5

26
Tree	Iterator iter = iterator ( res.entries ) ; []
Code	Iterator iter = iterator ( res.entries ) ; []
Distance : 5

27
Tree	Iterator iter = iterator ( res.entries ) ; T
Code	Iterator iter = iterator ( res.entries ) ; T
Distance : 5

28
Tree	Iterator iter = iterator ( res.entries ) ; t
Code	Iterator iter = iterator ( res.entries ) ; t
Distance : 5

29
Tree	Iterator iter = iterator ( res.entries ) ; field
Code	Iterator iter = iterator ( res.entries ) ; field
Distance : 5

30
Tree	Iterator iter = iterator ( res.entries ) ; final
Code	Iterator iter = iterator ( res.entries ) ; final
Distance : 5

31
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Distance : 5

32
Tree	Iterator iter = iterator ( res.entries ) ; optimizer
Code	Iterator iter = iterator ( res.entries ) ; optimizer
Distance : 5

33
Tree	Iterator iter = iterator ( res.entries ) ; alpha
Code	Iterator iter = iterator ( res.entries ) ; alpha
Distance : 5

34
Tree	Iterator iter = iterator ( res.entries ) ; isBlock
Code	Iterator iter = iterator ( res.entries ) ; isBlock
Distance : 5

35
Tree	Iterator iter = iterator ( res.entries ) ; Override
Code	Iterator iter = iterator ( res.entries ) ; Override
Distance : 5

36
Tree	Iterator iter = iterator ( res.entries ) ; >
Code	Iterator iter = iterator ( res.entries ) ; >
Distance : 5

37
Tree	Iterator iter = iterator ( res.entries ) ; new
Code	Iterator iter = iterator ( res.entries ) ; new
Distance : 5

38
Tree	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Distance : 5

39
Tree	Iterator iter = iterator ( res.entries ) ; ,
Code	Iterator iter = iterator ( res.entries ) ; ,
Distance : 5

40
Tree	Iterator iter = iterator ( res.entries ) ; .
Code	Iterator iter = iterator ( res.entries ) ; .
Distance : 5

41
Tree	Iterator iter = iterator ( res.entries ) ; }
Code	Iterator iter = iterator ( res.entries ) ; }
Distance : 5

42
Tree	Iterator iter = iterator ( res.entries ) ; =
Code	Iterator iter = iterator ( res.entries ) ; =
Distance : 5

43
Tree	Iterator iter = iterator ( res.entries ) ; (
Code	Iterator iter = iterator ( res.entries ) ; (
Distance : 5

44
Tree	Iterator iter = iterator ( res.entries ) ; <s>
Code	Iterator iter = iterator ( res.entries ) ; <s>
Distance : 5

45
Tree	Iterator iter = iterator ( res.entries ) ; <blank>
Code	Iterator iter = iterator ( res.entries ) ; <blank>
Distance : 5

46
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

47
Tree	Iterator iter = iterator ( res.entries ) ; )
Code	Iterator iter = iterator ( res.entries ) ; )
Distance : 5

48
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

49
Tree	Iterator iter = iterator ( res.entries ) ; ()
Code	Iterator iter = iterator ( res.entries ) ; ()
Distance : 5

50
Tree	Iterator iter = iterator ( res.entries ) ; {
Code	Iterator iter = iterator ( res.entries ) ; {
Distance : 5

51
Tree	Iterator iter = iterator ( res.entries ) ; n
Code	Iterator iter = iterator ( res.entries ) ; n
Distance : 5

52
Tree	Iterator iter = iterator ( res.entries ) ; e
Code	Iterator iter = iterator ( res.entries ) ; e
Distance : 5

53
Tree	Iterator iter = iterator ( res.entries ) ; <
Code	Iterator iter = iterator ( res.entries ) ; <
Distance : 5

54
Tree	Iterator iter = iterator ( res.entries ) ; if
Code	Iterator iter = iterator ( res.entries ) ; if
Distance : 5

55
Tree	Iterator iter = iterator ( res.entries ) ; return
Code	Iterator iter = iterator ( res.entries ) ; return
Distance : 5

56
Tree	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Distance : 5

57
Tree	Iterator iter = iterator ( res.entries ) ; this
Code	Iterator iter = iterator ( res.entries ) ; this
Distance : 5

58
Tree	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Code	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Distance : 5

59
Tree	Iterator iter = iterator ( res.entries ) ; checkState
Code	Iterator iter = iterator ( res.entries ) ; checkState
Distance : 5

60
Tree	Iterator iter = iterator ( res.entries ) ; double
Code	Iterator iter = iterator ( res.entries ) ; double
Distance : 5

61
Tree	Iterator iter = iterator ( res.entries ) ; int
Code	Iterator iter = iterator ( res.entries ) ; int
Distance : 5

62
Tree	Iterator iter = iterator ( res.entries ) ; simpleMethod
Code	Iterator iter = iterator ( res.entries ) ; simpleMethod
Distance : 5

63
Tree	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Code	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Distance : 5

64
Tree	Iterator iter = iterator ( res.entries ) ; reportMatcher
Code	Iterator iter = iterator ( res.entries ) ; reportMatcher
Distance : 5

65
Tree	Iterator iter = iterator ( res.entries ) ; invocations
Code	Iterator iter = iterator ( res.entries ) ; invocations
Distance : 5

66
Tree	Iterator iter = iterator ( res.entries ) ; mode
Code	Iterator iter = iterator ( res.entries ) ; mode
Distance : 5

67
Tree	Iterator iter = iterator ( res.entries ) ; setUp
Code	Iterator iter = iterator ( res.entries ) ; setUp
Distance : 5

68
Tree	Iterator iter = iterator ( res.entries ) ; chrono
Code	Iterator iter = iterator ( res.entries ) ; chrono
Distance : 5

69
Tree	Iterator iter = iterator ( res.entries ) ; return;
Code	Iterator iter = iterator ( res.entries ) ; return;
Distance : 5

70
Tree	Iterator iter = iterator ( res.entries ) ; get
Code	Iterator iter = iterator ( res.entries ) ; get
Distance : 5

71
Tree	Iterator iter = iterator ( res.entries ) ; isEmpty
Code	Iterator iter = iterator ( res.entries ) ; isEmpty
Distance : 5

72
Tree	Iterator iter = iterator ( res.entries ) ; static
Code	Iterator iter = iterator ( res.entries ) ; static
Distance : 5

73
Tree	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Code	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Distance : 5

74
Tree	Iterator iter = iterator ( res.entries ) ; JSType
Code	Iterator iter = iterator ( res.entries ) ; JSType
Distance : 5

75
Tree	Iterator iter = iterator ( res.entries ) ; char
Code	Iterator iter = iterator ( res.entries ) ; char
Distance : 5

76
Tree	Iterator iter = iterator ( res.entries ) ; else
Code	Iterator iter = iterator ( res.entries ) ; else
Distance : 5

77
Tree	Iterator iter = iterator ( res.entries ) ; getMessage
Code	Iterator iter = iterator ( res.entries ) ; getMessage
Distance : 5

78
Tree	Iterator iter = iterator ( res.entries ) ; out
Code	Iterator iter = iterator ( res.entries ) ; out
Distance : 5

79
Tree	Iterator iter = iterator ( res.entries ) ; stream
Code	Iterator iter = iterator ( res.entries ) ; stream
Distance : 5

80
Tree	Iterator iter = iterator ( res.entries ) ; matcher
Code	Iterator iter = iterator ( res.entries ) ; matcher
Distance : 5

81
Tree	Iterator iter = iterator ( res.entries ) ; instant
Code	Iterator iter = iterator ( res.entries ) ; instant
Distance : 5

82
Tree	Iterator iter = iterator ( res.entries ) ; pattern
Code	Iterator iter = iterator ( res.entries ) ; pattern
Distance : 5

83
Tree	Iterator iter = iterator ( res.entries ) ; getChronology
Code	Iterator iter = iterator ( res.entries ) ; getChronology
Distance : 5

84
Tree	Iterator iter = iterator ( res.entries ) ; js
Code	Iterator iter = iterator ( res.entries ) ; js
Distance : 5

85
Tree	Iterator iter = iterator ( res.entries ) ; TestUtilities
Code	Iterator iter = iterator ( res.entries ) ; TestUtilities
Distance : 5

86
Tree	Iterator iter = iterator ( res.entries ) ; equals
Code	Iterator iter = iterator ( res.entries ) ; equals
Distance : 5

87
Tree	Iterator iter = iterator ( res.entries ) ; d
Code	Iterator iter = iterator ( res.entries ) ; d
Distance : 5

88
Tree	Iterator iter = iterator ( res.entries ) ; externs
Code	Iterator iter = iterator ( res.entries ) ; externs
Distance : 5

89
Tree	Iterator iter = iterator ( res.entries ) ; throws
Code	Iterator iter = iterator ( res.entries ) ; throws
Distance : 5

90
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Distance : 5

91
Tree	Iterator iter = iterator ( res.entries ) ; getFirstChild
Code	Iterator iter = iterator ( res.entries ) ; getFirstChild
Distance : 5

92
Tree	Iterator iter = iterator ( res.entries ) ; sqrt
Code	Iterator iter = iterator ( res.entries ) ; sqrt
Distance : 5

93
Tree	Iterator iter = iterator ( res.entries ) ; false
Code	Iterator iter = iterator ( res.entries ) ; false
Distance : 5

94
Tree	Iterator iter = iterator ( res.entries ) ; !=
Code	Iterator iter = iterator ( res.entries ) ; !=
Distance : 5

95
Tree	Iterator iter = iterator ( res.entries ) ; Collection
Code	Iterator iter = iterator ( res.entries ) ; Collection
Distance : 5

96
Tree	Iterator iter = iterator ( res.entries ) ; true
Code	Iterator iter = iterator ( res.entries ) ; true
Distance : 5

97
Tree	Iterator iter = iterator ( res.entries ) ; returnZero
Code	Iterator iter = iterator ( res.entries ) ; returnZero
Distance : 5

98
Tree	Iterator iter = iterator ( res.entries ) ; index
Code	Iterator iter = iterator ( res.entries ) ; index
Distance : 5

99
Tree	Iterator iter = iterator ( res.entries ) ; abs
Code	Iterator iter = iterator ( res.entries ) ; abs
Distance : 5

100
Tree	Iterator iter = iterator ( res.entries ) ; Double
Code	Iterator iter = iterator ( res.entries ) ; Double
Distance : 5

101
Tree	Iterator iter = iterator ( res.entries ) ; <=
Code	Iterator iter = iterator ( res.entries ) ; <=
Distance : 5

102
Tree	Iterator iter = iterator ( res.entries ) ; b
Code	Iterator iter = iterator ( res.entries ) ; b
Distance : 5

103
Tree	Iterator iter = iterator ( res.entries ) ; PeriodType
Code	Iterator iter = iterator ( res.entries ) ; PeriodType
Distance : 5

104
Tree	Iterator iter = iterator ( res.entries ) ; a
Code	Iterator iter = iterator ( res.entries ) ; a
Distance : 5

105
Tree	Iterator iter = iterator ( res.entries ) ; s
Code	Iterator iter = iterator ( res.entries ) ; s
Distance : 5

106
Tree	Iterator iter = iterator ( res.entries ) ; contains
Code	Iterator iter = iterator ( res.entries ) ; contains
Distance : 5

107
Tree	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Code	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Distance : 5

108
Tree	Iterator iter = iterator ( res.entries ) ; size
Code	Iterator iter = iterator ( res.entries ) ; size
Distance : 5

109
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Distance : 5

110
Tree	Iterator iter = iterator ( res.entries ) ; mockingProgress
Code	Iterator iter = iterator ( res.entries ) ; mockingProgress
Distance : 5

111
Tree	Iterator iter = iterator ( res.entries ) ; StringBuilder
Code	Iterator iter = iterator ( res.entries ) ; StringBuilder
Distance : 5

112
Tree	Iterator iter = iterator ( res.entries ) ; stroke
Code	Iterator iter = iterator ( res.entries ) ; stroke
Distance : 5

113
Tree	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Code	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Distance : 5

114
Tree	Iterator iter = iterator ( res.entries ) ; traverseEs6
Code	Iterator iter = iterator ( res.entries ) ; traverseEs6
Distance : 5

115
Tree	Iterator iter = iterator ( res.entries ) ; obj
Code	Iterator iter = iterator ( res.entries ) ; obj
Distance : 5

116
Tree	Iterator iter = iterator ( res.entries ) ; append
Code	Iterator iter = iterator ( res.entries ) ; append
Distance : 5

117
Tree	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Code	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Distance : 5

118
Tree	Iterator iter = iterator ( res.entries ) ; scope
Code	Iterator iter = iterator ( res.entries ) ; scope
Distance : 5

119
Tree	Iterator iter = iterator ( res.entries ) ; sb
Code	Iterator iter = iterator ( res.entries ) ; sb
Distance : 5

120
Tree	Iterator iter = iterator ( res.entries ) ; clone
Code	Iterator iter = iterator ( res.entries ) ; clone
Distance : 5

121
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Distance : 5

122
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Distance : 5

123
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Distance : 5

124
Tree	Iterator iter = iterator ( res.entries ) ; c
Code	Iterator iter = iterator ( res.entries ) ; c
Distance : 5

125
Tree	Iterator iter = iterator ( res.entries ) ; notifyListeners
Code	Iterator iter = iterator ( res.entries ) ; notifyListeners
Distance : 5

126
Tree	Iterator iter = iterator ( res.entries ) ; lines
Code	Iterator iter = iterator ( res.entries ) ; lines
Distance : 5

127
Tree	Iterator iter = iterator ( res.entries ) ; verify
Code	Iterator iter = iterator ( res.entries ) ; verify
Distance : 5

128
Tree	Iterator iter = iterator ( res.entries ) ; compiler
Code	Iterator iter = iterator ( res.entries ) ; compiler
Distance : 5

129
Tree	Iterator iter = iterator ( res.entries ) ; type
Code	Iterator iter = iterator ( res.entries ) ; type
Distance : 5

130
Tree	Iterator iter = iterator ( res.entries ) ; m
Code	Iterator iter = iterator ( res.entries ) ; m
Distance : 5

131
Tree	Iterator iter = iterator ( res.entries ) ; boolean
Code	Iterator iter = iterator ( res.entries ) ; boolean
Distance : 5

132
Tree	Iterator iter = iterator ( res.entries ) ; paint
Code	Iterator iter = iterator ( res.entries ) ; paint
Distance : 5

133
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Distance : 5

134
Tree	Iterator iter = iterator ( res.entries ) ; y
Code	Iterator iter = iterator ( res.entries ) ; y
Distance : 5

135
Tree	Iterator iter = iterator ( res.entries ) ; Integer
Code	Iterator iter = iterator ( res.entries ) ; Integer
Distance : 5

136
Tree	Iterator iter = iterator ( res.entries ) ; v
Code	Iterator iter = iterator ( res.entries ) ; v
Distance : 5

137
Tree	Iterator iter = iterator ( res.entries ) ; expected
Code	Iterator iter = iterator ( res.entries ) ; expected
Distance : 5

138
Tree	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Code	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Distance : 5

139
Tree	Iterator iter = iterator ( res.entries ) ; invocation
Code	Iterator iter = iterator ( res.entries ) ; invocation
Distance : 5

140
Tree	Iterator iter = iterator ( res.entries ) ; assertThat
Code	Iterator iter = iterator ( res.entries ) ; assertThat
Distance : 5

141
Tree	Iterator iter = iterator ( res.entries ) ; FastMath
Code	Iterator iter = iterator ( res.entries ) ; FastMath
Distance : 5

142
Tree	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Distance : 5

143
Tree	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Distance : 5

144
Tree	Iterator iter = iterator ( res.entries ) ; parent
Code	Iterator iter = iterator ( res.entries ) ; parent
Distance : 5

145
Tree	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Distance : 5

146
Tree	Iterator iter = iterator ( res.entries ) ; ArrayList
Code	Iterator iter = iterator ( res.entries ) ; ArrayList
Distance : 5

147
Tree	Iterator iter = iterator ( res.entries ) ; x
Code	Iterator iter = iterator ( res.entries ) ; x
Distance : 5

148
Tree	Iterator iter = iterator ( res.entries ) ; testSame
Code	Iterator iter = iterator ( res.entries ) ; testSame
Distance : 5

149
Tree	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Code	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Distance : 5

150
Tree	Iterator iter = iterator ( res.entries ) ; str
Code	Iterator iter = iterator ( res.entries ) ; str
Distance : 5

151
Tree	Iterator iter = iterator ( res.entries ) ; Node
Code	Iterator iter = iterator ( res.entries ) ; Node
Distance : 5

152
Tree	Iterator iter = iterator ( res.entries ) ; result
Code	Iterator iter = iterator ( res.entries ) ; result
Distance : 5

153
Tree	Iterator iter = iterator ( res.entries ) ; Exception
Code	Iterator iter = iterator ( res.entries ) ; Exception
Distance : 5

154
Tree	Iterator iter = iterator ( res.entries ) ; Assert
Code	Iterator iter = iterator ( res.entries ) ; Assert
Distance : 5

155
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Distance : 9

156
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Distance : 9

157
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Distance : 9

158
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Distance : 9

159
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

162
Tree	Iterator iter = iterator ( res.entries ) ; name
Code	Iterator iter = iterator ( res.entries ) ; name
Distance : 5

163
Tree	Iterator iter = iterator ( res.entries ) ; *
Code	Iterator iter = iterator ( res.entries ) ; *
Distance : 5

164
Tree	Iterator iter = iterator ( res.entries ) ; getInstance
Code	Iterator iter = iterator ( res.entries ) ; getInstance
Distance : 5

165
Tree	Iterator iter = iterator ( res.entries ) ; serialised
Code	Iterator iter = iterator ( res.entries ) ; serialised
Distance : 5

166
Tree	Iterator iter = iterator ( res.entries ) ; checkNotNull
Code	Iterator iter = iterator ( res.entries ) ; checkNotNull
Distance : 5

167
Tree	Iterator iter = iterator ( res.entries ) ; TestUtils
Code	Iterator iter = iterator ( res.entries ) ; TestUtils
Distance : 5

168
Tree	Iterator iter = iterator ( res.entries ) ; source
Code	Iterator iter = iterator ( res.entries ) ; source
Distance : 5

169
Tree	Iterator iter = iterator ( res.entries ) ; toString
Code	Iterator iter = iterator ( res.entries ) ; toString
Distance : 5

170
Tree	Iterator iter = iterator ( res.entries ) ; Math
Code	Iterator iter = iterator ( res.entries ) ; Math
Distance : 5

171
Tree	Iterator iter = iterator ( res.entries ) ; wanted
Code	Iterator iter = iterator ( res.entries ) ; wanted
Distance : 5

172
Tree	Iterator iter = iterator ( res.entries ) ; options
Code	Iterator iter = iterator ( res.entries ) ; options
Distance : 5

173
Tree	Iterator iter = iterator ( res.entries ) ; p
Code	Iterator iter = iterator ( res.entries ) ; p
Distance : 5

174
Tree	Iterator iter = iterator ( res.entries ) ; data
Code	Iterator iter = iterator ( res.entries ) ; data
Distance : 5

175
Tree	Iterator iter = iterator ( res.entries ) ; checkArgument
Code	Iterator iter = iterator ( res.entries ) ; checkArgument
Distance : 5

176
Tree	Iterator iter = iterator ( res.entries ) ; add
Code	Iterator iter = iterator ( res.entries ) ; add
Distance : 5

177
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Distance : 5

178
Tree	Iterator iter = iterator ( res.entries ) ; ex
Code	Iterator iter = iterator ( res.entries ) ; ex
Distance : 5

179
Tree	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Code	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Distance : 5

180
Tree	Iterator iter = iterator ( res.entries ) ; root
Code	Iterator iter = iterator ( res.entries ) ; root
Distance : 5

181
Tree	Iterator iter = iterator ( res.entries ) ; NodeUtil
Code	Iterator iter = iterator ( res.entries ) ; NodeUtil
Distance : 5

182
Tree	Iterator iter = iterator ( res.entries ) ; Fraction
Code	Iterator iter = iterator ( res.entries ) ; Fraction
Distance : 5

183
Tree	Iterator iter = iterator ( res.entries ) ; assertTrue
Code	Iterator iter = iterator ( res.entries ) ; assertTrue
Distance : 5

184
Tree	Iterator iter = iterator ( res.entries ) ; :
Code	Iterator iter = iterator ( res.entries ) ; :
Distance : 5

185
Tree	Iterator iter = iterator ( res.entries ) ; try
Code	Iterator iter = iterator ( res.entries ) ; try
Distance : 5

186
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Distance : 5

187
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Distance : 5

188
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Distance : 5

189
Tree	Iterator iter = iterator ( res.entries ) ; catch
Code	Iterator iter = iterator ( res.entries ) ; catch
Distance : 5

190
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Distance : 5

191
Tree	Iterator iter = iterator ( res.entries ) ; throw
Code	Iterator iter = iterator ( res.entries ) ; throw
Distance : 5

192
Tree	Iterator iter = iterator ( res.entries ) ; i
Code	Iterator iter = iterator ( res.entries ) ; i
Distance : 5

193
Tree	Iterator iter = iterator ( res.entries ) ; value
Code	Iterator iter = iterator ( res.entries ) ; value
Distance : 5

194
Tree	Iterator iter = iterator ( res.entries ) ; ?
Code	Iterator iter = iterator ( res.entries ) ; ?
Distance : 5

195
Tree	Iterator iter = iterator ( res.entries ) ; /
Code	Iterator iter = iterator ( res.entries ) ; /
Distance : 5

196
Tree	Iterator iter = iterator ( res.entries ) ; length
Code	Iterator iter = iterator ( res.entries ) ; length
Distance : 5

197
Tree	Iterator iter = iterator ( res.entries ) ; long
Code	Iterator iter = iterator ( res.entries ) ; long
Distance : 5

198
Tree	Iterator iter = iterator ( res.entries ) ; valueOf
Code	Iterator iter = iterator ( res.entries ) ; valueOf
Distance : 5

199
Tree	Iterator iter = iterator ( res.entries ) ; instance
Code	Iterator iter = iterator ( res.entries ) ; instance
Distance : 5

========================================================================


========================================================================
Example Number: 66
Parent Code is: 
Iterator iter = res.entries . iterator () ;
-------------------------------------------------------------------------------
Child code is: 
Iterator iter = entries . iterator () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (40{val=res.entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Iterator})) (59 (800{val=iter}) (204{val==}) (32 (800{val=entries}) (235{val=.}) (802{val=iterator}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/49/parent/src_main_java_org_apache_commons_math_linear_OpenMapRealVector.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; FastMath
Distance : 5

1
Tree	Iterator iter = iterator ( res.entries ) ; getField
Code	Iterator iter = iterator ( res.entries ) ; getField
Distance : 5

2
Tree	Iterator iter = iterator ( res.entries ) ; public
Code	Iterator iter = iterator ( res.entries ) ; public
Distance : 5

3
Tree	Iterator iter = iterator ( res.entries ) ; mock
Code	Iterator iter = iterator ( res.entries ) ; mock
Distance : 5

4
Tree	Iterator iter = iterator ( res.entries ) ; solver
Code	Iterator iter = iterator ( res.entries ) ; solver
Distance : 5

5
Tree	Iterator iter = iterator ( res.entries ) ; super
Code	Iterator iter = iterator ( res.entries ) ; super
Distance : 5

6
Tree	Iterator iter = iterator ( res.entries ) ; Test
Code	Iterator iter = iterator ( res.entries ) ; Test
Distance : 5

7
Tree	Iterator iter = iterator ( res.entries ) ; Class
Code	Iterator iter = iterator ( res.entries ) ; Class
Distance : 5

8
Tree	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Code	Iterator iter = iterator ( res.entries ) ; MathRuntimeException
Distance : 5

9
Tree	Iterator iter = iterator ( res.entries ) ; {}
Code	Iterator iter = iterator ( res.entries ) ; {}
Distance : 5

10
Tree	Iterator iter = iterator ( res.entries ) ; f
Code	Iterator iter = iterator ( res.entries ) ; f
Distance : 5

11
Tree	Iterator iter = iterator ( res.entries ) ; ParamChecks
Code	Iterator iter = iterator ( res.entries ) ; ParamChecks
Distance : 5

12
Tree	Iterator iter = iterator ( res.entries ) ; -
Code	Iterator iter = iterator ( res.entries ) ; -
Distance : 5

13
Tree	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; PlotChangeEvent
Distance : 5

14
Tree	Iterator iter = iterator ( res.entries ) ; Preconditions
Code	Iterator iter = iterator ( res.entries ) ; Preconditions
Distance : 5

15
Tree	Iterator iter = iterator ( res.entries ) ; &&
Code	Iterator iter = iterator ( res.entries ) ; &&
Distance : 5

16
Tree	Iterator iter = iterator ( res.entries ) ; ]
Code	Iterator iter = iterator ( res.entries ) ; ]
Distance : 5

17
Tree	Iterator iter = iterator ( res.entries ) ; [
Code	Iterator iter = iterator ( res.entries ) ; [
Distance : 5

18
Tree	Iterator iter = iterator ( res.entries ) ; Object
Code	Iterator iter = iterator ( res.entries ) ; Object
Distance : 5

19
Tree	Iterator iter = iterator ( res.entries ) ; class
Code	Iterator iter = iterator ( res.entries ) ; class
Distance : 5

20
Tree	Iterator iter = iterator ( res.entries ) ; test
Code	Iterator iter = iterator ( res.entries ) ; test
Distance : 5

21
Tree	Iterator iter = iterator ( res.entries ) ; @
Code	Iterator iter = iterator ( res.entries ) ; @
Distance : 5

22
Tree	Iterator iter = iterator ( res.entries ) ; !
Code	Iterator iter = iterator ( res.entries ) ; !
Distance : 5

23
Tree	Iterator iter = iterator ( res.entries ) ; assertEquals
Code	Iterator iter = iterator ( res.entries ) ; assertEquals
Distance : 5

24
Tree	Iterator iter = iterator ( res.entries ) ; ==
Code	Iterator iter = iterator ( res.entries ) ; ==
Distance : 5

25
Tree	Iterator iter = iterator ( res.entries ) ; void
Code	Iterator iter = iterator ( res.entries ) ; void
Distance : 5

26
Tree	Iterator iter = iterator ( res.entries ) ; []
Code	Iterator iter = iterator ( res.entries ) ; []
Distance : 5

27
Tree	Iterator iter = iterator ( res.entries ) ; T
Code	Iterator iter = iterator ( res.entries ) ; T
Distance : 5

28
Tree	Iterator iter = iterator ( res.entries ) ; t
Code	Iterator iter = iterator ( res.entries ) ; t
Distance : 5

29
Tree	Iterator iter = iterator ( res.entries ) ; field
Code	Iterator iter = iterator ( res.entries ) ; field
Distance : 5

30
Tree	Iterator iter = iterator ( res.entries ) ; final
Code	Iterator iter = iterator ( res.entries ) ; final
Distance : 5

31
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; @
Distance : 5

32
Tree	Iterator iter = iterator ( res.entries ) ; optimizer
Code	Iterator iter = iterator ( res.entries ) ; optimizer
Distance : 5

33
Tree	Iterator iter = iterator ( res.entries ) ; alpha
Code	Iterator iter = iterator ( res.entries ) ; alpha
Distance : 5

34
Tree	Iterator iter = iterator ( res.entries ) ; isBlock
Code	Iterator iter = iterator ( res.entries ) ; isBlock
Distance : 5

35
Tree	Iterator iter = iterator ( res.entries ) ; Override
Code	Iterator iter = iterator ( res.entries ) ; Override
Distance : 5

36
Tree	Iterator iter = iterator ( res.entries ) ; >
Code	Iterator iter = iterator ( res.entries ) ; >
Distance : 5

37
Tree	Iterator iter = iterator ( res.entries ) ; new
Code	Iterator iter = iterator ( res.entries ) ; new
Distance : 5

38
Tree	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; STRING_CONSTANT
Distance : 5

39
Tree	Iterator iter = iterator ( res.entries ) ; ,
Code	Iterator iter = iterator ( res.entries ) ; ,
Distance : 5

40
Tree	Iterator iter = iterator ( res.entries ) ; .
Code	Iterator iter = iterator ( res.entries ) ; .
Distance : 5

41
Tree	Iterator iter = iterator ( res.entries ) ; }
Code	Iterator iter = iterator ( res.entries ) ; }
Distance : 5

42
Tree	Iterator iter = iterator ( res.entries ) ; =
Code	Iterator iter = iterator ( res.entries ) ; =
Distance : 5

43
Tree	Iterator iter = iterator ( res.entries ) ; (
Code	Iterator iter = iterator ( res.entries ) ; (
Distance : 5

44
Tree	Iterator iter = iterator ( res.entries ) ; <s>
Code	Iterator iter = iterator ( res.entries ) ; <s>
Distance : 5

45
Tree	Iterator iter = iterator ( res.entries ) ; <blank>
Code	Iterator iter = iterator ( res.entries ) ; <blank>
Distance : 5

46
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

47
Tree	Iterator iter = iterator ( res.entries ) ; )
Code	Iterator iter = iterator ( res.entries ) ; )
Distance : 5

48
Tree	Iterator iter = iterator ( res.entries ) ; ;
Code	Iterator iter = iterator ( res.entries ) ; ;
Distance : 5

49
Tree	Iterator iter = iterator ( res.entries ) ; ()
Code	Iterator iter = iterator ( res.entries ) ; ()
Distance : 5

50
Tree	Iterator iter = iterator ( res.entries ) ; {
Code	Iterator iter = iterator ( res.entries ) ; {
Distance : 5

51
Tree	Iterator iter = iterator ( res.entries ) ; n
Code	Iterator iter = iterator ( res.entries ) ; n
Distance : 5

52
Tree	Iterator iter = iterator ( res.entries ) ; e
Code	Iterator iter = iterator ( res.entries ) ; e
Distance : 5

53
Tree	Iterator iter = iterator ( res.entries ) ; <
Code	Iterator iter = iterator ( res.entries ) ; <
Distance : 5

54
Tree	Iterator iter = iterator ( res.entries ) ; if
Code	Iterator iter = iterator ( res.entries ) ; if
Distance : 5

55
Tree	Iterator iter = iterator ( res.entries ) ; return
Code	Iterator iter = iterator ( res.entries ) ; return
Distance : 5

56
Tree	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Code	Iterator iter = iterator ( res.entries ) ; NUMBER_CONSTANT
Distance : 5

57
Tree	Iterator iter = iterator ( res.entries ) ; this
Code	Iterator iter = iterator ( res.entries ) ; this
Distance : 5

58
Tree	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Code	Iterator iter = iterator ( res.entries ) ; nullNotPermitted
Distance : 5

59
Tree	Iterator iter = iterator ( res.entries ) ; checkState
Code	Iterator iter = iterator ( res.entries ) ; checkState
Distance : 5

60
Tree	Iterator iter = iterator ( res.entries ) ; double
Code	Iterator iter = iterator ( res.entries ) ; double
Distance : 5

61
Tree	Iterator iter = iterator ( res.entries ) ; int
Code	Iterator iter = iterator ( res.entries ) ; int
Distance : 5

62
Tree	Iterator iter = iterator ( res.entries ) ; simpleMethod
Code	Iterator iter = iterator ( res.entries ) ; simpleMethod
Distance : 5

63
Tree	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Code	Iterator iter = iterator ( res.entries ) ; getArgumentMatcherStorage
Distance : 5

64
Tree	Iterator iter = iterator ( res.entries ) ; reportMatcher
Code	Iterator iter = iterator ( res.entries ) ; reportMatcher
Distance : 5

65
Tree	Iterator iter = iterator ( res.entries ) ; invocations
Code	Iterator iter = iterator ( res.entries ) ; invocations
Distance : 5

66
Tree	Iterator iter = iterator ( res.entries ) ; mode
Code	Iterator iter = iterator ( res.entries ) ; mode
Distance : 5

67
Tree	Iterator iter = iterator ( res.entries ) ; setUp
Code	Iterator iter = iterator ( res.entries ) ; setUp
Distance : 5

68
Tree	Iterator iter = iterator ( res.entries ) ; chrono
Code	Iterator iter = iterator ( res.entries ) ; chrono
Distance : 5

69
Tree	Iterator iter = iterator ( res.entries ) ; return;
Code	Iterator iter = iterator ( res.entries ) ; return;
Distance : 5

70
Tree	Iterator iter = iterator ( res.entries ) ; get
Code	Iterator iter = iterator ( res.entries ) ; get
Distance : 5

71
Tree	Iterator iter = iterator ( res.entries ) ; isEmpty
Code	Iterator iter = iterator ( res.entries ) ; isEmpty
Distance : 5

72
Tree	Iterator iter = iterator ( res.entries ) ; static
Code	Iterator iter = iterator ( res.entries ) ; static
Distance : 5

73
Tree	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Code	Iterator iter = iterator ( res.entries ) ; setAcceptedLanguage
Distance : 5

74
Tree	Iterator iter = iterator ( res.entries ) ; JSType
Code	Iterator iter = iterator ( res.entries ) ; JSType
Distance : 5

75
Tree	Iterator iter = iterator ( res.entries ) ; char
Code	Iterator iter = iterator ( res.entries ) ; char
Distance : 5

76
Tree	Iterator iter = iterator ( res.entries ) ; else
Code	Iterator iter = iterator ( res.entries ) ; else
Distance : 5

77
Tree	Iterator iter = iterator ( res.entries ) ; getMessage
Code	Iterator iter = iterator ( res.entries ) ; getMessage
Distance : 5

78
Tree	Iterator iter = iterator ( res.entries ) ; out
Code	Iterator iter = iterator ( res.entries ) ; out
Distance : 5

79
Tree	Iterator iter = iterator ( res.entries ) ; stream
Code	Iterator iter = iterator ( res.entries ) ; stream
Distance : 5

80
Tree	Iterator iter = iterator ( res.entries ) ; matcher
Code	Iterator iter = iterator ( res.entries ) ; matcher
Distance : 5

81
Tree	Iterator iter = iterator ( res.entries ) ; instant
Code	Iterator iter = iterator ( res.entries ) ; instant
Distance : 5

82
Tree	Iterator iter = iterator ( res.entries ) ; pattern
Code	Iterator iter = iterator ( res.entries ) ; pattern
Distance : 5

83
Tree	Iterator iter = iterator ( res.entries ) ; getChronology
Code	Iterator iter = iterator ( res.entries ) ; getChronology
Distance : 5

84
Tree	Iterator iter = iterator ( res.entries ) ; js
Code	Iterator iter = iterator ( res.entries ) ; js
Distance : 5

85
Tree	Iterator iter = iterator ( res.entries ) ; TestUtilities
Code	Iterator iter = iterator ( res.entries ) ; TestUtilities
Distance : 5

86
Tree	Iterator iter = iterator ( res.entries ) ; equals
Code	Iterator iter = iterator ( res.entries ) ; equals
Distance : 5

87
Tree	Iterator iter = iterator ( res.entries ) ; d
Code	Iterator iter = iterator ( res.entries ) ; d
Distance : 5

88
Tree	Iterator iter = iterator ( res.entries ) ; externs
Code	Iterator iter = iterator ( res.entries ) ; externs
Distance : 5

89
Tree	Iterator iter = iterator ( res.entries ) ; throws
Code	Iterator iter = iterator ( res.entries ) ; throws
Distance : 5

90
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; test
Distance : 5

91
Tree	Iterator iter = iterator ( res.entries ) ; getFirstChild
Code	Iterator iter = iterator ( res.entries ) ; getFirstChild
Distance : 5

92
Tree	Iterator iter = iterator ( res.entries ) ; sqrt
Code	Iterator iter = iterator ( res.entries ) ; sqrt
Distance : 5

93
Tree	Iterator iter = iterator ( res.entries ) ; false
Code	Iterator iter = iterator ( res.entries ) ; false
Distance : 5

94
Tree	Iterator iter = iterator ( res.entries ) ; !=
Code	Iterator iter = iterator ( res.entries ) ; !=
Distance : 5

95
Tree	Iterator iter = iterator ( res.entries ) ; Collection
Code	Iterator iter = iterator ( res.entries ) ; Collection
Distance : 5

96
Tree	Iterator iter = iterator ( res.entries ) ; true
Code	Iterator iter = iterator ( res.entries ) ; true
Distance : 5

97
Tree	Iterator iter = iterator ( res.entries ) ; returnZero
Code	Iterator iter = iterator ( res.entries ) ; returnZero
Distance : 5

98
Tree	Iterator iter = iterator ( res.entries ) ; index
Code	Iterator iter = iterator ( res.entries ) ; index
Distance : 5

99
Tree	Iterator iter = iterator ( res.entries ) ; abs
Code	Iterator iter = iterator ( res.entries ) ; abs
Distance : 5

100
Tree	Iterator iter = iterator ( res.entries ) ; Double
Code	Iterator iter = iterator ( res.entries ) ; Double
Distance : 5

101
Tree	Iterator iter = iterator ( res.entries ) ; <=
Code	Iterator iter = iterator ( res.entries ) ; <=
Distance : 5

102
Tree	Iterator iter = iterator ( res.entries ) ; b
Code	Iterator iter = iterator ( res.entries ) ; b
Distance : 5

103
Tree	Iterator iter = iterator ( res.entries ) ; PeriodType
Code	Iterator iter = iterator ( res.entries ) ; PeriodType
Distance : 5

104
Tree	Iterator iter = iterator ( res.entries ) ; a
Code	Iterator iter = iterator ( res.entries ) ; a
Distance : 5

105
Tree	Iterator iter = iterator ( res.entries ) ; s
Code	Iterator iter = iterator ( res.entries ) ; s
Distance : 5

106
Tree	Iterator iter = iterator ( res.entries ) ; contains
Code	Iterator iter = iterator ( res.entries ) ; contains
Distance : 5

107
Tree	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Code	Iterator iter = iterator ( res.entries ) ; isNormalBlock
Distance : 5

108
Tree	Iterator iter = iterator ( res.entries ) ; size
Code	Iterator iter = iterator ( res.entries ) ; size
Distance : 5

109
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT_2015
Distance : 5

110
Tree	Iterator iter = iterator ( res.entries ) ; mockingProgress
Code	Iterator iter = iterator ( res.entries ) ; mockingProgress
Distance : 5

111
Tree	Iterator iter = iterator ( res.entries ) ; StringBuilder
Code	Iterator iter = iterator ( res.entries ) ; StringBuilder
Distance : 5

112
Tree	Iterator iter = iterator ( res.entries ) ; stroke
Code	Iterator iter = iterator ( res.entries ) ; stroke
Distance : 5

113
Tree	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Code	Iterator iter = iterator ( res.entries ) ; MutableTimePeriod
Distance : 5

114
Tree	Iterator iter = iterator ( res.entries ) ; traverseEs6
Code	Iterator iter = iterator ( res.entries ) ; traverseEs6
Distance : 5

115
Tree	Iterator iter = iterator ( res.entries ) ; obj
Code	Iterator iter = iterator ( res.entries ) ; obj
Distance : 5

116
Tree	Iterator iter = iterator ( res.entries ) ; append
Code	Iterator iter = iterator ( res.entries ) ; append
Distance : 5

117
Tree	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Code	Iterator iter = iterator ( res.entries ) ; UnivariateFunction
Distance : 5

118
Tree	Iterator iter = iterator ( res.entries ) ; scope
Code	Iterator iter = iterator ( res.entries ) ; scope
Distance : 5

119
Tree	Iterator iter = iterator ( res.entries ) ; sb
Code	Iterator iter = iterator ( res.entries ) ; sb
Distance : 5

120
Tree	Iterator iter = iterator ( res.entries ) ; clone
Code	Iterator iter = iterator ( res.entries ) ; clone
Distance : 5

121
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; class
Distance : 5

122
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; Object
Distance : 5

123
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; [
Distance : 5

124
Tree	Iterator iter = iterator ( res.entries ) ; c
Code	Iterator iter = iterator ( res.entries ) ; c
Distance : 5

125
Tree	Iterator iter = iterator ( res.entries ) ; notifyListeners
Code	Iterator iter = iterator ( res.entries ) ; notifyListeners
Distance : 5

126
Tree	Iterator iter = iterator ( res.entries ) ; lines
Code	Iterator iter = iterator ( res.entries ) ; lines
Distance : 5

127
Tree	Iterator iter = iterator ( res.entries ) ; verify
Code	Iterator iter = iterator ( res.entries ) ; verify
Distance : 5

128
Tree	Iterator iter = iterator ( res.entries ) ; compiler
Code	Iterator iter = iterator ( res.entries ) ; compiler
Distance : 5

129
Tree	Iterator iter = iterator ( res.entries ) ; type
Code	Iterator iter = iterator ( res.entries ) ; type
Distance : 5

130
Tree	Iterator iter = iterator ( res.entries ) ; m
Code	Iterator iter = iterator ( res.entries ) ; m
Distance : 5

131
Tree	Iterator iter = iterator ( res.entries ) ; boolean
Code	Iterator iter = iterator ( res.entries ) ; boolean
Distance : 5

132
Tree	Iterator iter = iterator ( res.entries ) ; paint
Code	Iterator iter = iterator ( res.entries ) ; paint
Distance : 5

133
Tree	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Code	Iterator iter = iterator ( res.entries ) ; LanguageMode.ECMASCRIPT6
Distance : 5

134
Tree	Iterator iter = iterator ( res.entries ) ; y
Code	Iterator iter = iterator ( res.entries ) ; y
Distance : 5

135
Tree	Iterator iter = iterator ( res.entries ) ; Integer
Code	Iterator iter = iterator ( res.entries ) ; Integer
Distance : 5

136
Tree	Iterator iter = iterator ( res.entries ) ; v
Code	Iterator iter = iterator ( res.entries ) ; v
Distance : 5

137
Tree	Iterator iter = iterator ( res.entries ) ; expected
Code	Iterator iter = iterator ( res.entries ) ; expected
Distance : 5

138
Tree	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Code	Iterator iter = iterator ( res.entries ) ; reportCodeChange
Distance : 5

139
Tree	Iterator iter = iterator ( res.entries ) ; invocation
Code	Iterator iter = iterator ( res.entries ) ; invocation
Distance : 5

140
Tree	Iterator iter = iterator ( res.entries ) ; assertThat
Code	Iterator iter = iterator ( res.entries ) ; assertThat
Distance : 5

141
Tree	Iterator iter = iterator ( res.entries ) ; FastMath
Code	Iterator iter = iterator ( res.entries ) ; FastMath
Distance : 5

142
Tree	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; IllegalArgumentException
Distance : 5

143
Tree	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Code	Iterator iter = iterator ( res.entries ) ; createIllegalArgumentException
Distance : 5

144
Tree	Iterator iter = iterator ( res.entries ) ; parent
Code	Iterator iter = iterator ( res.entries ) ; parent
Distance : 5

145
Tree	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Code	Iterator iter = iterator ( res.entries ) ; fireChangeEvent
Distance : 5

146
Tree	Iterator iter = iterator ( res.entries ) ; ArrayList
Code	Iterator iter = iterator ( res.entries ) ; ArrayList
Distance : 5

147
Tree	Iterator iter = iterator ( res.entries ) ; x
Code	Iterator iter = iterator ( res.entries ) ; x
Distance : 5

148
Tree	Iterator iter = iterator ( res.entries ) ; testSame
Code	Iterator iter = iterator ( res.entries ) ; testSame
Distance : 5

149
Tree	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Code	Iterator iter = iterator ( res.entries ) ; LINE_JOINER
Distance : 5

150
Tree	Iterator iter = iterator ( res.entries ) ; str
Code	Iterator iter = iterator ( res.entries ) ; str
Distance : 5

151
Tree	Iterator iter = iterator ( res.entries ) ; Node
Code	Iterator iter = iterator ( res.entries ) ; Node
Distance : 5

152
Tree	Iterator iter = iterator ( res.entries ) ; result
Code	Iterator iter = iterator ( res.entries ) ; result
Distance : 5

153
Tree	Iterator iter = iterator ( res.entries ) ; Exception
Code	Iterator iter = iterator ( res.entries ) ; Exception
Distance : 5

154
Tree	Iterator iter = iterator ( res.entries ) ; Assert
Code	Iterator iter = iterator ( res.entries ) ; Assert
Distance : 5

155
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; mock
Distance : 9

156
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; Override
Distance : 9

157
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; public
Distance : 9

158
Tree	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Code	Iterator iter = iterator ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) ; >
Distance : 9

159
Tree	Iterator iter = res.entries . iterator () ; isNormalBlock
Code	Iterator iter = res.entries . iterator () ; isNormalBlock
Distance : 2

160
Tree	Iterator iter = res.entries . iterator () ; abs
Code	Iterator iter = res.entries . iterator () ; abs
Distance : 2

161
Tree	Iterator iter = res.entries . iterator () ; s
Code	Iterator iter = res.entries . iterator () ; s
Distance : 2

162
Tree	Iterator iter = iterator ( res.entries ) ; name
Code	Iterator iter = iterator ( res.entries ) ; name
Distance : 5

163
Tree	Iterator iter = iterator ( res.entries ) ; *
Code	Iterator iter = iterator ( res.entries ) ; *
Distance : 5

164
Tree	Iterator iter = iterator ( res.entries ) ; getInstance
Code	Iterator iter = iterator ( res.entries ) ; getInstance
Distance : 5

165
Tree	Iterator iter = iterator ( res.entries ) ; serialised
Code	Iterator iter = iterator ( res.entries ) ; serialised
Distance : 5

166
Tree	Iterator iter = iterator ( res.entries ) ; checkNotNull
Code	Iterator iter = iterator ( res.entries ) ; checkNotNull
Distance : 5

167
Tree	Iterator iter = iterator ( res.entries ) ; TestUtils
Code	Iterator iter = iterator ( res.entries ) ; TestUtils
Distance : 5

168
Tree	Iterator iter = iterator ( res.entries ) ; source
Code	Iterator iter = iterator ( res.entries ) ; source
Distance : 5

169
Tree	Iterator iter = iterator ( res.entries ) ; toString
Code	Iterator iter = iterator ( res.entries ) ; toString
Distance : 5

170
Tree	Iterator iter = iterator ( res.entries ) ; Math
Code	Iterator iter = iterator ( res.entries ) ; Math
Distance : 5

171
Tree	Iterator iter = iterator ( res.entries ) ; wanted
Code	Iterator iter = iterator ( res.entries ) ; wanted
Distance : 5

172
Tree	Iterator iter = iterator ( res.entries ) ; options
Code	Iterator iter = iterator ( res.entries ) ; options
Distance : 5

173
Tree	Iterator iter = iterator ( res.entries ) ; p
Code	Iterator iter = iterator ( res.entries ) ; p
Distance : 5

174
Tree	Iterator iter = iterator ( res.entries ) ; data
Code	Iterator iter = iterator ( res.entries ) ; data
Distance : 5

175
Tree	Iterator iter = iterator ( res.entries ) ; checkArgument
Code	Iterator iter = iterator ( res.entries ) ; checkArgument
Distance : 5

176
Tree	Iterator iter = iterator ( res.entries ) ; add
Code	Iterator iter = iterator ( res.entries ) ; add
Distance : 5

177
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; <
Distance : 5

178
Tree	Iterator iter = iterator ( res.entries ) ; ex
Code	Iterator iter = iterator ( res.entries ) ; ex
Distance : 5

179
Tree	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Code	Iterator iter = iterator ( res.entries ) ; NodeTraversal
Distance : 5

180
Tree	Iterator iter = iterator ( res.entries ) ; root
Code	Iterator iter = iterator ( res.entries ) ; root
Distance : 5

181
Tree	Iterator iter = iterator ( res.entries ) ; NodeUtil
Code	Iterator iter = iterator ( res.entries ) ; NodeUtil
Distance : 5

182
Tree	Iterator iter = iterator ( res.entries ) ; Fraction
Code	Iterator iter = iterator ( res.entries ) ; Fraction
Distance : 5

183
Tree	Iterator iter = iterator ( res.entries ) ; assertTrue
Code	Iterator iter = iterator ( res.entries ) ; assertTrue
Distance : 5

184
Tree	Iterator iter = iterator ( res.entries ) ; :
Code	Iterator iter = iterator ( res.entries ) ; :
Distance : 5

185
Tree	Iterator iter = iterator ( res.entries ) ; try
Code	Iterator iter = iterator ( res.entries ) ; try
Distance : 5

186
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; n
Distance : 5

187
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; void
Distance : 5

188
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; assertEquals
Distance : 5

189
Tree	Iterator iter = iterator ( res.entries ) ; catch
Code	Iterator iter = iterator ( res.entries ) ; catch
Distance : 5

190
Tree	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Code	Iterator iter = res.entries . iterator ( NUMBER_CONSTANT ) ; !
Distance : 5

191
Tree	Iterator iter = iterator ( res.entries ) ; throw
Code	Iterator iter = iterator ( res.entries ) ; throw
Distance : 5

192
Tree	Iterator iter = iterator ( res.entries ) ; i
Code	Iterator iter = iterator ( res.entries ) ; i
Distance : 5

193
Tree	Iterator iter = iterator ( res.entries ) ; value
Code	Iterator iter = iterator ( res.entries ) ; value
Distance : 5

194
Tree	Iterator iter = iterator ( res.entries ) ; ?
Code	Iterator iter = iterator ( res.entries ) ; ?
Distance : 5

195
Tree	Iterator iter = iterator ( res.entries ) ; /
Code	Iterator iter = iterator ( res.entries ) ; /
Distance : 5

196
Tree	Iterator iter = iterator ( res.entries ) ; length
Code	Iterator iter = iterator ( res.entries ) ; length
Distance : 5

197
Tree	Iterator iter = iterator ( res.entries ) ; long
Code	Iterator iter = iterator ( res.entries ) ; long
Distance : 5

198
Tree	Iterator iter = iterator ( res.entries ) ; valueOf
Code	Iterator iter = iterator ( res.entries ) ; valueOf
Distance : 5

199
Tree	Iterator iter = iterator ( res.entries ) ; instance
Code	Iterator iter = iterator ( res.entries ) ; instance
Distance : 5

========================================================================


========================================================================
Example Number: 67
Parent Code is: 
if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/47/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } int
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } int
Distance : 5

1
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } IllegalArgumentException
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } IllegalArgumentException
Distance : 5

2
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } FastMath
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } FastMath
Distance : 5

3
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } expected
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } expected
Distance : 5

4
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } super
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } super
Distance : 5

5
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } reportCodeChange
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } reportCodeChange
Distance : 5

6
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } testSame
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } testSame
Distance : 5

7
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } parent
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } parent
Distance : 5

8
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } createIllegalArgumentException
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } createIllegalArgumentException
Distance : 5

9
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } str
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } str
Distance : 5

10
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } field
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } field
Distance : 5

11
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } LINE_JOINER
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } LINE_JOINER
Distance : 5

12
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } invocation
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } invocation
Distance : 5

13
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ,
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ,
Distance : 5

14
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } x
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } x
Distance : 5

15
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } !=
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } !=
Distance : 5

16
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } &&
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } &&
Distance : 5

17
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } !
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } !
Distance : 5

18
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } sb
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } sb
Distance : 5

19
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } scope
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } scope
Distance : 5

20
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getFirstChild
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getFirstChild
Distance : 5

21
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertThat
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertThat
Distance : 5

22
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } t
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } t
Distance : 5

23
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } name
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } name
Distance : 5

24
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } add
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } add
Distance : 5

25
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <s>
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <s>
Distance : 5

26
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } (
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } (
Distance : 5

27
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } =
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } =
Distance : 5

28
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } }
Distance : 5

29
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ()
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ()
Distance : 5

30
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } {
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } {
Distance : 5

31
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } new
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } new
Distance : 5

32
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } STRING_CONSTANT
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } STRING_CONSTANT
Distance : 5

33
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NUMBER_CONSTANT
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NUMBER_CONSTANT
Distance : 5

34
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } return
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } return
Distance : 5

35
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } /
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } /
Distance : 5

36
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } T
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } T
Distance : 5

37
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } i
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } i
Distance : 5

38
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } value
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } value
Distance : 5

39
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkState
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkState
Distance : 5

40
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } double
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } double
Distance : 5

41
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <blank>
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <blank>
Distance : 5

42
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ;
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ;
Distance : 5

43
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } )
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } )
Distance : 5

44
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } .
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } .
Distance : 5

45
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } externs
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } externs
Distance : 5

46
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } throws
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } throws
Distance : 5

47
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertEquals
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertEquals
Distance : 5

48
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } UnivariateFunction
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } UnivariateFunction
Distance : 5

49
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } returnZero
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } returnZero
Distance : 5

50
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } List
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } List
Distance : 5

51
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } values
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } values
Distance : 5

52
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Args
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Args
Distance : 5

53
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } fail
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } fail
Distance : 5

54
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ?
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ?
Distance : 5

55
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } invocations
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } invocations
Distance : 5

56
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } index
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } index
Distance : 5

57
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getParent
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getParent
Distance : 5

58
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } try
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } try
Distance : 5

59
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

60
Tree	if ( NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

61
Tree	if ( divisor == NUMBER_CONSTANT ) { return isZero ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return isZero ; }
Distance : 4

62
Tree	if ( isZero == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( isZero == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

63
Tree	if ( NaN == NUMBER_CONSTANT ) { return isZero ; }
Code	if ( NaN == NUMBER_CONSTANT ) { return isZero ; }
Distance : 5

64
Tree	if ( isZero == NUMBER_CONSTANT ) { return isZero ; }
Code	if ( isZero == NUMBER_CONSTANT ) { return isZero ; }
Distance : 5

65
Tree	if ( divisor == NUMBER_CONSTANT ) { return divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return divisor ; }
Distance : 5

66
Tree	if ( NaN == NUMBER_CONSTANT ) { return divisor ; }
Code	if ( NaN == NUMBER_CONSTANT ) { return divisor ; }
Distance : 6

67
Tree	if ( isZero == NUMBER_CONSTANT ) { return divisor ; }
Code	if ( isZero == NUMBER_CONSTANT ) { return divisor ; }
Distance : 6

68
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

69
Tree	if ( divisor == NUMBER_CONSTANT ) { return isZero ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return isZero ; }
Distance : 4

70
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

71
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } node
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } node
Distance : 5

72
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } if
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } if
Distance : 5

73
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } nullNotPermitted
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } nullNotPermitted
Distance : 5

74
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } out
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } out
Distance : 5

75
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isBlock
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isBlock
Distance : 5

76
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } d
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } d
Distance : 5

77
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } equals
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } equals
Distance : 5

78
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } for
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } for
Distance : 5

79
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Invocation
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Invocation
Distance : 5

80
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } js
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } js
Distance : 5

81
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } TestUtilities
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } TestUtilities
Distance : 5

82
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } StrBuilder
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } StrBuilder
Distance : 5

83
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } setUp
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } setUp
Distance : 5

84
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } StringBuilder
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } StringBuilder
Distance : 5

85
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } m
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } m
Distance : 5

86
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } boolean
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } boolean
Distance : 5

87
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } append
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } append
Distance : 5

88
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } result
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } result
Distance : 5

89
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } []
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } []
Distance : 5

90
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } :
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } :
Distance : 5

91
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } test
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } test
Distance : 5

92
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } @
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } @
Distance : 5

93
Tree	if ( this . divisor . yearOfEra () ) { return NaN ; }
Code	if ( this . divisor . yearOfEra () ) { return NaN ; }
Distance : 9

94
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } false
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } false
Distance : 5

95
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } stream
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } stream
Distance : 5

96
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } protected
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } protected
Distance : 5

97
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mockingProgress
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mockingProgress
Distance : 5

98
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } return;
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } return;
Distance : 5

99
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } chrono
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } chrono
Distance : 5

100
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } null
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } null
Distance : 5

101
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } >
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } >
Distance : 5

102
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } public
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } public
Distance : 5

103
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } final
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } final
Distance : 5

104
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } this
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } this
Distance : 5

105
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <
Distance : 5

106
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } if
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } if
Distance : 5

107
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ArrayList
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ArrayList
Distance : 5

108
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } fireChangeEvent
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } fireChangeEvent
Distance : 5

109
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } true
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } true
Distance : 5

110
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mode
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mode
Distance : 5

111
Tree	if ( divisor == NUMBER_CONSTANT ) { return divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return divisor ; }
Distance : 5

112
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Preconditions
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Preconditions
Distance : 5

113
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } sqrt
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } sqrt
Distance : 5

114
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } long
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } long
Distance : 5

115
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } length
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } length
Distance : 5

116
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } v
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } v
Distance : 5

117
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } +
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } +
Distance : 5

118
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } static
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } static
Distance : 5

119
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } setAcceptedLanguage
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } setAcceptedLanguage
Distance : 5

120
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } reportMatcher
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } reportMatcher
Distance : 5

121
Tree	if ( this . divisor . cumulativeProbability () ) { return NaN ; }
Code	if ( this . divisor . cumulativeProbability () ) { return NaN ; }
Distance : 9

122
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Class
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Class
Distance : 5

123
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } notifyListeners
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } notifyListeners
Distance : 5

124
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } c
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } c
Distance : 5

125
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } MathRuntimeException
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } MathRuntimeException
Distance : 5

126
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } {}
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } {}
Distance : 5

127
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } toString
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } toString
Distance : 5

128
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } join
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } join
Distance : 5

129
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Integer
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Integer
Distance : 5

130
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } serialised
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } serialised
Distance : 5

131
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } JSType
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } JSType
Distance : 5

132
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } get
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } get
Distance : 5

133
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isEmpty
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isEmpty
Distance : 5

134
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } matcher
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } matcher
Distance : 5

135
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } instant
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } instant
Distance : 5

136
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getMessage
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getMessage
Distance : 5

137
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } else
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } else
Distance : 5

138
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } abs
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } abs
Distance : 5

139
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getInstance
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } getInstance
Distance : 5

140
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } verify
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } verify
Distance : 5

141
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } -
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } -
Distance : 5

142
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Exception
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Exception
Distance : 5

143
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Override
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Override
Distance : 5

144
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } f
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } f
Distance : 5

145
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ParamChecks
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ParamChecks
Distance : 5

146
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } array
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } array
Distance : 5

147
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } lines
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } lines
Distance : 5

148
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } a
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } a
Distance : 5

149
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } s
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } s
Distance : 5

150
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } traverseEs6
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } traverseEs6
Distance : 5

151
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } obj
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } obj
Distance : 5

152
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } size
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } size
Distance : 5

153
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } LanguageMode.ECMASCRIPT_2015
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

154
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } MutableTimePeriod
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } MutableTimePeriod
Distance : 5

155
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } stroke
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } stroke
Distance : 5

156
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertTrue
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } assertTrue
Distance : 5

157
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } b
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } b
Distance : 5

158
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } contains
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } contains
Distance : 5

159
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Double
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Double
Distance : 5

160
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mock
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } mock
Distance : 5

161
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Object
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Object
Distance : 5

162
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <>
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <>
Distance : 5

163
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ]
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ]
Distance : 5

164
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Node
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Node
Distance : 5

165
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } class
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } class
Distance : 5

166
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } String
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } String
Distance : 5

167
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } e
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } e
Distance : 5

168
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } n
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } n
Distance : 5

169
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } throw
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } throw
Distance : 5

170
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } catch
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } catch
Distance : 5

171
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } void
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } void
Distance : 5

172
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ==
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ==
Distance : 5

173
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } compiler
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } compiler
Distance : 5

174
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Fraction
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Fraction
Distance : 5

175
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } [
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } [
Distance : 5

176
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Assert
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Assert
Distance : 5

177
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isNormalBlock
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } isNormalBlock
Distance : 5

178
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <=
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } <=
Distance : 5

179
Tree	if ( NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

180
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } clone
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } clone
Distance : 5

181
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkNotNull
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkNotNull
Distance : 5

182
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } TestUtils
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } TestUtils
Distance : 5

183
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } char
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } char
Distance : 5

184
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Test
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Test
Distance : 5

185
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } p
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } p
Distance : 5

186
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } options
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } options
Distance : 5

187
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } source
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } source
Distance : 5

188
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ex
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } ex
Distance : 5

189
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } paint
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } paint
Distance : 5

190
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NodeTraversal
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NodeTraversal
Distance : 5

191
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkArgument
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } checkArgument
Distance : 5

192
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } data
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } data
Distance : 5

193
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NodeUtil
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } NodeUtil
Distance : 5

194
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } root
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } root
Distance : 5

195
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } wanted
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } wanted
Distance : 5

196
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Math
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } Math
Distance : 5

197
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } type
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ; } type
Distance : 5

198
Tree	if ( CannotVerifyStubOnlyMock ( STRING_CONSTANT ) ) { return NaN ; }
Code	if ( CannotVerifyStubOnlyMock ( STRING_CONSTANT ) ) { return NaN ; }
Distance : 8

199
Tree	if ( divisor . cumulativeProbability ( divisor ) ) { return NaN ; }
Code	if ( divisor . cumulativeProbability ( divisor ) ) { return NaN ; }
Distance : 9

========================================================================


========================================================================
Example Number: 68
Parent Code is: 
if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (800{val=divisor}) (236{val===}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/46/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( divisor == NUMBER_CONSTANT ) { return null ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return null ; }
Distance : 1

1
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isSubtypeWithoutStructuralTyping () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isSubtypeWithoutStructuralTyping () : NaN ; }
Distance : 7

2
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . invokedMock () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . invokedMock () : NaN ; }
Distance : 7

3
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPackageName () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPackageName () : NaN ; }
Distance : 7

4
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . isNamedType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . isNamedType () : divisor ; }
Distance : 7

5
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . getPackage () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . getPackage () : divisor ; }
Distance : 7

6
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isLastMatcherVarargMatcher . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isLastMatcherVarargMatcher . getTopDefiningInterface () : divisor ; }
Distance : 7

7
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getBeta () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getBeta () : NaN ; }
Distance : 7

8
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . removeChartMouseListener () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . removeChartMouseListener () : NaN ; }
Distance : 7

9
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED . getTopDefiningInterface () : divisor ; }
Distance : 7

10
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getSerializationSupport () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getSerializationSupport () : divisor ; }
Distance : 7

11
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDateTimeInstance () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDateTimeInstance () : NaN ; }
Distance : 7

12
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ModuleType.GOOG_MODULE . isModifiableClass () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ModuleType.GOOG_MODULE . isModifiableClass () : divisor ; }
Distance : 7

13
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . disambiguateProperties () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . disambiguateProperties () : NaN ; }
Distance : 7

14
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . incrementalCheckMode () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . incrementalCheckMode () : divisor ; }
Distance : 7

15
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . copySelf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . copySelf () : divisor ; }
Distance : 7

16
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isMockitoMock () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isMockitoMock () : NaN ; }
Distance : 7

17
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . getSerializationSupport () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . getSerializationSupport () : divisor ; }
Distance : 7

18
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . superEquals () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . superEquals () : NaN ; }
Distance : 7

19
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? uniqueId . isModifiableClass () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? uniqueId . isModifiableClass () : divisor ; }
Distance : 7

20
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ExpansionMode.MULTIPLICATIVE . isModifiableClass () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ExpansionMode.MULTIPLICATIVE . isModifiableClass () : divisor ; }
Distance : 7

21
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL . getBeta () : divisor ; }
Distance : 7

22
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . incrementalCheckMode () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . incrementalCheckMode () : divisor ; }
Distance : 7

23
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.b . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.b . getBeta () : divisor ; }
Distance : 7

24
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . tTest () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . tTest () : NaN ; }
Distance : 7

25
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . interceptors.target () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . interceptors.target () : NaN ; }
Distance : 7

26
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . level () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . level () : NaN ; }
Distance : 7

27
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . getClosingInterval () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . getClosingInterval () : divisor ; }
Distance : 7

28
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? currentState.length . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? currentState.length . getTopDefiningInterface () : divisor ; }
Distance : 7

29
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . instantiateGenericsWithUnknown () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . instantiateGenericsWithUnknown () : NaN ; }
Distance : 7

30
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN . isSubtypeWithoutStructuralTyping ( divisor . getLastChild () , reporterStub.location , divisor ) ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN . isSubtypeWithoutStructuralTyping ( divisor . getLastChild () , reporterStub.location , divisor ) ; }
Distance : 12

31
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getArgumentsVar () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getArgumentsVar () : NaN ; }
Distance : 7

32
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . anyStringNull () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . anyStringNull () : NaN ; }
Distance : 7

33
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isOSVersionMatch () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isOSVersionMatch () : NaN ; }
Distance : 7

34
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . copySelf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . copySelf () : divisor ; }
Distance : 7

35
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Year.MAXIMUM_YEAR . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Year.MAXIMUM_YEAR . getBeta () : divisor ; }
Distance : 7

36
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getBeta () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getBeta () : NaN ; }
Distance : 7

37
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . homoscedasticTTest () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . homoscedasticTTest () : divisor ; }
Distance : 7

38
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isSynthetic () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isSynthetic () : divisor ; }
Distance : 7

39
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Year.MAXIMUM_YEAR . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Year.MAXIMUM_YEAR . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

40
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getObjectType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getObjectType () : NaN ; }
Distance : 7

41
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isNamedType . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isNamedType . getTopDefiningInterface () : divisor ; }
Distance : 7

42
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.NUMBER_TOO_SMALL . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

43
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isPointInRect () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isPointInRect () : NaN ; }
Distance : 7

44
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . cumulativeProbability () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . cumulativeProbability () : divisor ; }
Distance : 7

45
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPrinter0 () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPrinter0 () : NaN ; }
Distance : 7

46
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isNamespaceDecl () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isNamespaceDecl () : NaN ; }
Distance : 7

47
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getLInfNorm () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getLInfNorm () : NaN ; }
Distance : 7

48
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . cumulativeProbability () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . cumulativeProbability () : divisor ; }
Distance : 7

49
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . uniqueId () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . uniqueId () : divisor ; }
Distance : 7

50
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? <= . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? <= . getTopDefiningInterface () : divisor ; }
Distance : 7

51
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDaysInYearMax () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDaysInYearMax () : divisor ; }
Distance : 7

52
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? DecompositionType.DECOMPOSABLE . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? DecompositionType.DECOMPOSABLE . getTopDefiningInterface () : divisor ; }
Distance : 7

53
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . equalsIgnoreCase () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . equalsIgnoreCase () : NaN ; }
Distance : 7

54
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . ALL () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . ALL () : NaN ; }
Distance : 7

55
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . isModifiableClass () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . isModifiableClass () : divisor ; }
Distance : 7

56
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN . isSubtypeWithoutStructuralTyping ( divisor . copySelf () , reporterStub.location , divisor ) ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN . isSubtypeWithoutStructuralTyping ( divisor . copySelf () , reporterStub.location , divisor ) ; }
Distance : 12

57
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . of () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . of () : divisor ; }
Distance : 7

58
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getYieldNode () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getYieldNode () : divisor ; }
Distance : 7

59
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getMask () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getMask () : divisor ; }
Distance : 7

60
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . primitiveTypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . primitiveTypeOf () : divisor ; }
Distance : 7

61
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isModifiableClass () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isModifiableClass () : divisor ; }
Distance : 7

62
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getInstance () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getInstance () : divisor ; }
Distance : 7

63
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . numberOfTrailingZeros () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . numberOfTrailingZeros () : divisor ; }
Distance : 7

64
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . isStrictModeInput () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . isStrictModeInput () : divisor ; }
Distance : 7

65
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . startYear () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . startYear () : divisor ; }
Distance : 7

66
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getDefaultAnswer () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getDefaultAnswer () : divisor ; }
Distance : 7

67
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? TracerMode.ALL . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? TracerMode.ALL . getTopDefiningInterface () : divisor ; }
Distance : 7

68
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . dereference () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . dereference () : divisor ; }
Distance : 7

69
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isEmptyType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isEmptyType () : divisor ; }
Distance : 7

70
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.length . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.length . getBeta () : divisor ; }
Distance : 7

71
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getInstance () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getInstance () : NaN ; }
Distance : 7

72
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getYearWeekType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getYearWeekType () : NaN ; }
Distance : 7

73
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . OutOfRangeException () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . OutOfRangeException () : NaN ; }
Distance : 7

74
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . isMocked () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . isMocked () : divisor ; }
Distance : 7

75
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . getTopDefiningInterface () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . getTopDefiningInterface () : NaN ; }
Distance : 7

76
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isReferenceToRemovedVar . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? isReferenceToRemovedVar . getTopDefiningInterface () : divisor ; }
Distance : 7

77
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . dereference () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . dereference () : divisor ; }
Distance : 7

78
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . primitiveValueOrNullFor () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . primitiveValueOrNullFor () : NaN ; }
Distance : 7

79
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toMaybeUnionType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toMaybeUnionType () : NaN ; }
Distance : 7

80
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . isMocked () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . isMocked () : divisor ; }
Distance : 7

81
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isEnhancedFor () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isEnhancedFor () : NaN ; }
Distance : 7

82
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Long.MAX_VALUE . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Long.MAX_VALUE . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

83
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

84
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inIncrementalCheckMode () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inIncrementalCheckMode () : NaN ; }
Distance : 7

85
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getClosingInterval () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getClosingInterval () : divisor ; }
Distance : 7

86
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isSubtypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isSubtypeOf () : divisor ; }
Distance : 7

87
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . ordinal () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . ordinal () : divisor ; }
Distance : 7

88
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . createParseException () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . createParseException () : NaN ; }
Distance : 7

89
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isSupported () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isSupported () : NaN ; }
Distance : 7

90
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? MatchResult.NO_MATCH . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? MatchResult.NO_MATCH . getBeta () : divisor ; }
Distance : 7

91
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isLiteralObject () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isLiteralObject () : divisor ; }
Distance : 7

92
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . hasErrors () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . hasErrors () : NaN ; }
Distance : 7

93
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isInstanceofObject () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isInstanceofObject () : NaN ; }
Distance : 7

94
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.b . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? rhs.b . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

95
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getSearchTree () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getSearchTree () : NaN ; }
Distance : 7

96
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toReturn () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toReturn () : NaN ; }
Distance : 7

97
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getCommonTypes () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getCommonTypes () : NaN ; }
Distance : 7

98
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getNumberInstance () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getNumberInstance () : divisor ; }
Distance : 7

99
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . contains () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . contains () : divisor ; }
Distance : 7

100
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isAssignableFrom () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isAssignableFrom () : divisor ; }
Distance : 7

101
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . uniqueId () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . uniqueId () : divisor ; }
Distance : 7

102
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . withLoose () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . withLoose () : divisor ; }
Distance : 7

103
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getRunOTIafterNTI () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getRunOTIafterNTI () : NaN ; }
Distance : 7

104
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? internalArray.length . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? internalArray.length . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

105
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isVanillaFunction () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isVanillaFunction () : divisor ; }
Distance : 7

106
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . readObject () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . readObject () : NaN ; }
Distance : 7

107
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isEmptyType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isEmptyType () : divisor ; }
Distance : 7

108
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isObjectLiteralThatCanBeSkipped () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isObjectLiteralThatCanBeSkipped () : NaN ; }
Distance : 7

109
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? internalArray.length . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? internalArray.length . getBeta () : divisor ; }
Distance : 7

110
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . uniqueId () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . uniqueId () : divisor ; }
Distance : 7

111
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isConstructor () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isConstructor () : NaN ; }
Distance : 7

112
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isNamedType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isNamedType () : divisor ; }
Distance : 7

113
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inModuleHoistScope () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inModuleHoistScope () : NaN ; }
Distance : 7

114
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . copySign () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . copySign () : divisor ; }
Distance : 7

115
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getTopDefiningInterface () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getTopDefiningInterface () : NaN ; }
Distance : 7

116
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . maxX () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . maxX () : NaN ; }
Distance : 7

117
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isRest () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isRest () : NaN ; }
Distance : 7

118
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Long.MAX_VALUE . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Long.MAX_VALUE . getTopDefiningInterface () : divisor ; }
Distance : 7

119
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . createsScope () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . createsScope () : divisor ; }
Distance : 7

120
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getTopDefiningInterface () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getTopDefiningInterface () : NaN ; }
Distance : 7

121
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . areNodesEqualForInlining () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . areNodesEqualForInlining () : NaN ; }
Distance : 7

122
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ExpansionMode.MULTIPLICATIVE . primitiveTypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ExpansionMode.MULTIPLICATIVE . primitiveTypeOf () : divisor ; }
Distance : 7

123
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getInstanceType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . getInstanceType () : divisor ; }
Distance : 7

124
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isLoose () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isLoose () : divisor ; }
Distance : 7

125
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inheritsFromIObjectReflexive () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . inheritsFromIObjectReflexive () : NaN ; }
Distance : 7

126
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . contains () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . contains () : NaN ; }
Distance : 7

127
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . getTopDefiningInterface () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . getTopDefiningInterface () : NaN ; }
Distance : 7

128
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . MatchResult.NO_MATCH () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . MatchResult.NO_MATCH () : NaN ; }
Distance : 7

129
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toObjectType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toObjectType () : NaN ; }
Distance : 7

130
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getEnumeratedTypeOfEnumElement () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getEnumeratedTypeOfEnumElement () : NaN ; }
Distance : 7

131
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ModuleType.GOOG_MODULE . primitiveTypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ModuleType.GOOG_MODULE . primitiveTypeOf () : divisor ; }
Distance : 7

132
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? uniqueId . primitiveTypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? uniqueId . primitiveTypeOf () : divisor ; }
Distance : 7

133
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . getNumberInstance () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . getNumberInstance () : divisor ; }
Distance : 7

134
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . contains () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . contains () : divisor ; }
Distance : 7

135
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isEmptyType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isEmptyType () : divisor ; }
Distance : 7

136
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getInstanceType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getInstanceType () : NaN ; }
Distance : 7

137
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . incrementalCheckMode () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . incrementalCheckMode () : divisor ; }
Distance : 7

138
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . incrementalCheckMode () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . incrementalCheckMode () : divisor ; }
Distance : 7

139
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isGeneratorFunction () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isGeneratorFunction () : divisor ; }
Distance : 7

140
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . anovaPValue () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . anovaPValue () : NaN ; }
Distance : 7

141
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPropType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getPropType () : NaN ; }
Distance : 7

142
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . testUnstableDerivative () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . testUnstableDerivative () : NaN ; }
Distance : 7

143
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . clone () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . clone () : NaN ; }
Distance : 7

144
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? BooleanLiteralSet.EMPTY . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? BooleanLiteralSet.EMPTY . getBeta () : divisor ; }
Distance : 7

145
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getCtorPropDeclaredType () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getCtorPropDeclaredType () : NaN ; }
Distance : 7

146
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . contains () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.GENERATE_IJS . contains () : divisor ; }
Distance : 7

147
Tree	if ( divisor == NUMBER_CONSTANT ) { return divisor ? this . getNumberInstance () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return divisor ? this . getNumberInstance () : NaN ; }
Distance : 7

148
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . getClosingInterval () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . getClosingInterval () : divisor ; }
Distance : 7

149
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isGeneratorFunction () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . isGeneratorFunction () : divisor ; }
Distance : 7

150
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . FunctionFlavor.NORMAL () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . FunctionFlavor.NORMAL () : NaN ; }
Distance : 7

151
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getPackage () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . getPackage () : divisor ; }
Distance : 7

152
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . processFile () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . processFile () : NaN ; }
Distance : 7

153
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . invoke () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . invoke () : NaN ; }
Distance : 7

154
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . propListHead () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . propListHead () : NaN ; }
Distance : 7

155
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . isNamedType () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startConfiguration.length . isNamedType () : divisor ; }
Distance : 7

156
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getMockHandler () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getMockHandler () : NaN ; }
Distance : 7

157
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . cumulativeProbability () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . cumulativeProbability () : divisor ; }
Distance : 7

158
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ConformanceResult.POSSIBLE_VIOLATION_DUE_TO_LOOSE_TYPES . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? ConformanceResult.POSSIBLE_VIOLATION_DUE_TO_LOOSE_TYPES . getTopDefiningInterface () : divisor ; }
Distance : 7

159
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . homoscedasticTTest () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . homoscedasticTTest () : divisor ; }
Distance : 7

160
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getMaxY () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getMaxY () : NaN ; }
Distance : 7

161
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY . getBeta () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY . getBeta () : divisor ; }
Distance : 7

162
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toAnnotationString () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . toAnnotationString () : NaN ; }
Distance : 7

163
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isMocked () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . isMocked () : divisor ; }
Distance : 7

164
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? BooleanLiteralSet.EMPTY . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? BooleanLiteralSet.EMPTY . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

165
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isSubtypeWithoutStructuralTyping () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isSubtypeWithoutStructuralTyping () : NaN ; }
Distance : 7

166
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDomainBounds () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getDomainBounds () : NaN ; }
Distance : 7

167
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . incrementalCheckMode () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . incrementalCheckMode () : NaN ; }
Distance : 7

168
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getSlot () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getSlot () : NaN ; }
Distance : 7

169
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . copySign () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . copySign () : divisor ; }
Distance : 7

170
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isAssignableFrom () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isAssignableFrom () : divisor ; }
Distance : 7

171
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isVanillaFunction () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . isVanillaFunction () : divisor ; }
Distance : 7

172
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . copySelf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . copySelf () : divisor ; }
Distance : 7

173
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . INFINITE_WINDOW () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? interceptors.target . INFINITE_WINDOW () : divisor ; }
Distance : 7

174
Tree	if ( divisor == NUMBER_CONSTANT ) { return null ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return null ; }
Distance : 1

175
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . getBeta () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? startPoint.length . getBeta () : NaN ; }
Distance : 7

176
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . groupIndex () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . groupIndex () : divisor ; }
Distance : 7

177
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getHandler () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getHandler () : NaN ; }
Distance : 7

178
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getYearMonthTypeUTC () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getYearMonthTypeUTC () : NaN ; }
Distance : 7

179
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . INFINITE_WINDOW () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? IncrementalCheckMode.OFF . INFINITE_WINDOW () : divisor ; }
Distance : 7

180
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY . isSubtypeWithoutStructuralTyping () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? LocalizedFormats.CARDAN_ANGLES_SINGULARITY . isSubtypeWithoutStructuralTyping () : divisor ; }
Distance : 7

181
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isEqualTo () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . isEqualTo () : NaN ; }
Distance : 7

182
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? MatchResult.LOOSE_MATCH . getTopDefiningInterface () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? MatchResult.LOOSE_MATCH . getTopDefiningInterface () : divisor ; }
Distance : 7

183
Tree	if ( divisor == NUMBER_CONSTANT ) { return divisor ? this . that () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return divisor ? this . that () : divisor ; }
Distance : 8

184
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isSupported () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? options.skipTranspilationAndCrash . isSupported () : divisor ; }
Distance : 7

185
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . primitiveTypeOf () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? Calendar.SUNDAY . primitiveTypeOf () : divisor ; }
Distance : 7

186
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getRMS () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getRMS () : NaN ; }
Distance : 7

187
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . containsNow () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . containsNow () : divisor ; }
Distance : 7

188
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getLanguageOut () : NaN ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? this . getLanguageOut () : NaN ; }
Distance : 7

189
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . fix2ndArgument () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . fix2ndArgument () : divisor ; }
Distance : 7

190
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . nullToEmpty () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . nullToEmpty () : divisor ; }
Distance : 7

191
Tree	if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN . of () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return isZero ? NaN . of () : divisor ; }
Distance : 7

192
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getAllValues () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getAllValues () : divisor ; }
Distance : 7

193
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . doubleToLongBits () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . doubleToLongBits () : divisor ; }
Distance : 7

194
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . iterateDomainBounds () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . iterateDomainBounds () : divisor ; }
Distance : 7

195
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . shouldRunCrossChunkCodeMotion () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . shouldRunCrossChunkCodeMotion () : divisor ; }
Distance : 7

196
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getArgumentsVar () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getArgumentsVar () : divisor ; }
Distance : 7

197
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . isPrototypeObjectNamedPropertyAssignment () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . isPrototypeObjectNamedPropertyAssignment () : divisor ; }
Distance : 7

198
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . findRangeBounds () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . findRangeBounds () : divisor ; }
Distance : 7

199
Tree	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getMaxY () : divisor ; }
Code	if ( divisor == NUMBER_CONSTANT ) { return NaN ? NaN . getMaxY () : divisor ; }
Distance : 7

========================================================================


========================================================================
Example Number: 69
Parent Code is: 
if ( divisor.isZero ) { return isZero ? NaN : INF ; }
-------------------------------------------------------------------------------
Child code is: 
if ( divisor.isZero ) { return NaN ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=divisor.isZero}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (16 (800{val=isZero}) (233{val=?}) (800{val=NaN}) (226{val=:}) (800{val=INF})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (40{val=divisor.isZero}) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/46/parent/src_main_java_org_apache_commons_math_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( this . hasConditionalAncestor () ) { return false ; }
Code	if ( this . hasConditionalAncestor () ) { return false ; }
Distance : 5

1
Tree	if ( this . getTransform () ) { return false ; }
Code	if ( this . getTransform () ) { return false ; }
Distance : 5

2
Tree	if ( this . setInline () ) { return false ; }
Code	if ( this . setInline () ) { return false ; }
Distance : 5

3
Tree	if ( this . defaultAnswerDoesNotAcceptNullParameter () ) { return false ; }
Code	if ( this . defaultAnswerDoesNotAcceptNullParameter () ) { return false ; }
Distance : 5

4
Tree	if ( this . resultEqualsValue () ) { return false ; }
Code	if ( this . resultEqualsValue () ) { return false ; }
Distance : 5

5
Tree	if ( this . counterClockwise () ) { return false ; }
Code	if ( this . counterClockwise () ) { return false ; }
Distance : 5

6
Tree	if ( this . token.type () ) { return false ; }
Code	if ( this . token.type () ) { return false ; }
Distance : 5

7
Tree	if ( this . legendLabelURLGenerator () ) { return null ; }
Code	if ( this . legendLabelURLGenerator () ) { return null ; }
Distance : 5

8
Tree	if ( this . legendItemGraphicPadding () ) { return false ; }
Code	if ( this . legendItemGraphicPadding () ) { return false ; }
Distance : 5

9
Tree	if ( this . stripOutlineVisible () ) { return false ; }
Code	if ( this . stripOutlineVisible () ) { return false ; }
Distance : 5

10
Tree	if ( this . setTotal () ) { return false ; }
Code	if ( this . setTotal () ) { return false ; }
Distance : 5

11
Tree	if ( this . multistageSerializeAndDeserialize () ) { return null ; }
Code	if ( this . multistageSerializeAndDeserialize () ) { return null ; }
Distance : 5

12
Tree	if ( this . setTaintsGlobalState () ) { return false ; }
Code	if ( this . setTaintsGlobalState () ) { return false ; }
Distance : 5

13
Tree	if ( this . newRoot () ) { return false ; }
Code	if ( this . newRoot () ) { return false ; }
Distance : 5

14
Tree	if ( this . decompMatrix () ) { return false ; }
Code	if ( this . decompMatrix () ) { return false ; }
Distance : 5

15
Tree	if ( this . TestPeriodType () ) { return false ; }
Code	if ( this . TestPeriodType () ) { return false ; }
Distance : 5

16
Tree	if ( this . numberOfVariables () ) { return null ; }
Code	if ( this . numberOfVariables () ) { return null ; }
Distance : 5

17
Tree	if ( this . matchesPrototype () ) { return null ; }
Code	if ( this . matchesPrototype () ) { return null ; }
Distance : 5

18
Tree	if ( this . tickLabelsVisible () ) { return false ; }
Code	if ( this . tickLabelsVisible () ) { return false ; }
Distance : 5

19
Tree	if ( this . alreadyRemoved () ) { return false ; }
Code	if ( this . alreadyRemoved () ) { return false ; }
Distance : 5

20
Tree	if ( this . getOrderOfRegressors () ) { return false ; }
Code	if ( this . getOrderOfRegressors () ) { return false ; }
Distance : 5

21
Tree	if ( this . checkingPolicy () ) { return false ; }
Code	if ( this . checkingPolicy () ) { return false ; }
Distance : 5

22
Tree	if ( this . setZoneRetainFields () ) { return false ; }
Code	if ( this . setZoneRetainFields () ) { return false ; }
Distance : 5

23
Tree	if ( this . negativeItemLabelPositionMap () ) { return false ; }
Code	if ( this . negativeItemLabelPositionMap () ) { return false ; }
Distance : 5

24
Tree	if ( this . isNotEqualTo () ) { return null ; }
Code	if ( this . isNotEqualTo () ) { return null ; }
Distance : 5

25
Tree	if ( this . ancestorInterfaces () ) { return false ; }
Code	if ( this . ancestorInterfaces () ) { return false ; }
Distance : 5

26
Tree	if ( this . indexParamName () ) { return false ; }
Code	if ( this . indexParamName () ) { return false ; }
Distance : 5

27
Tree	if ( this . sectionOutlineStrokeMap () ) { return null ; }
Code	if ( this . sectionOutlineStrokeMap () ) { return null ; }
Distance : 5

28
Tree	if ( this . standardTickUnits () ) { return null ; }
Code	if ( this . standardTickUnits () ) { return null ; }
Distance : 5

29
Tree	if ( this . mockedTypeIsInconsistentWithSpiedInstanceType () ) { return false ; }
Code	if ( this . mockedTypeIsInconsistentWithSpiedInstanceType () ) { return false ; }
Distance : 5

30
Tree	if ( this . isMethodOrCtorCallThatTriggersRemoval () ) { return false ; }
Code	if ( this . isMethodOrCtorCallThatTriggersRemoval () ) { return false ; }
Distance : 5

31
Tree	if ( this . pivotSelection () ) { return false ; }
Code	if ( this . pivotSelection () ) { return false ; }
Distance : 5

32
Tree	if ( this . addEs2018Passes () ) { return null ; }
Code	if ( this . addEs2018Passes () ) { return null ; }
Distance : 5

33
Tree	if ( this . returnedMock () ) { return false ; }
Code	if ( this . returnedMock () ) { return false ; }
Distance : 5

34
Tree	if ( this . ofThisVm () ) { return false ; }
Code	if ( this . ofThisVm () ) { return false ; }
Distance : 5

35
Tree	if ( this . regionMatches () ) { return null ; }
Code	if ( this . regionMatches () ) { return null ; }
Distance : 5

36
Tree	if ( this . getTotalMillis () ) { return null ; }
Code	if ( this . getTotalMillis () ) { return null ; }
Distance : 5

37
Tree	if ( this . actualInvocationStackTrace () ) { return false ; }
Code	if ( this . actualInvocationStackTrace () ) { return false ; }
Distance : 5

38
Tree	if ( this . isChromePassEnabled () ) { return null ; }
Code	if ( this . isChromePassEnabled () ) { return null ; }
Distance : 5

39
Tree	if ( this . stubInfo () ) { return null ; }
Code	if ( this . stubInfo () ) { return null ; }
Distance : 5

40
Tree	if ( this . ancestors.length () ) { return null ; }
Code	if ( this . ancestors.length () ) { return null ; }
Distance : 5

41
Tree	if ( this . isSpecializedOnlyWithUnknown () ) { return null ; }
Code	if ( this . isSpecializedOnlyWithUnknown () ) { return null ; }
Distance : 5

42
Tree	if ( this . wantedAtMostX () ) { return false ; }
Code	if ( this . wantedAtMostX () ) { return false ; }
Distance : 5

43
Tree	if ( this . getChangeStamp () ) { return false ; }
Code	if ( this . getChangeStamp () ) { return false ; }
Distance : 5

44
Tree	if ( this . newPos () ) { return false ; }
Code	if ( this . newPos () ) { return false ; }
Distance : 5

45
Tree	if ( this . labelType () ) { return null ; }
Code	if ( this . labelType () ) { return null ; }
Distance : 5

46
Tree	if ( this . gridBandsVisible () ) { return null ; }
Code	if ( this . gridBandsVisible () ) { return null ; }
Distance : 5

47
Tree	if ( this . defaultLegendTextPaint () ) { return false ; }
Code	if ( this . defaultLegendTextPaint () ) { return false ; }
Distance : 5

48
Tree	if ( this . flatten () ) { return null ; }
Code	if ( this . flatten () ) { return null ; }
Distance : 5

49
Tree	if ( this . isSetterDef () ) { return false ; }
Code	if ( this . isSetterDef () ) { return false ; }
Distance : 5

50
Tree	if ( this . angleGridlinesVisible () ) { return false ; }
Code	if ( this . angleGridlinesVisible () ) { return false ; }
Distance : 5

51
Tree	if ( this . visitFunction () ) { return false ; }
Code	if ( this . visitFunction () ) { return false ; }
Distance : 5

52
Tree	if ( this . setCssNames () ) { return false ; }
Code	if ( this . setCssNames () ) { return false ; }
Distance : 5

53
Tree	if ( this . getInstrumentForCoverageOnly () ) { return false ; }
Code	if ( this . getInstrumentForCoverageOnly () ) { return false ; }
Distance : 5

54
Tree	if ( this . getAllSuperclasses () ) { return false ; }
Code	if ( this . getAllSuperclasses () ) { return false ; }
Distance : 5

55
Tree	if ( this . timeToLive () ) { return false ; }
Code	if ( this . timeToLive () ) { return false ; }
Distance : 5

56
Tree	if ( this . showValueLines () ) { return null ; }
Code	if ( this . showValueLines () ) { return null ; }
Distance : 5

57
Tree	if ( this . chartArea () ) { return false ; }
Code	if ( this . chartArea () ) { return false ; }
Distance : 5

58
Tree	if ( this . zipFile1 () ) { return false ; }
Code	if ( this . zipFile1 () ) { return false ; }
Distance : 5

59
Tree	if ( this . _boundaries () ) { return null ; }
Code	if ( this . _boundaries () ) { return null ; }
Distance : 5

60
Tree	if ( this . objective.length () ) { return false ; }
Code	if ( this . objective.length () ) { return false ; }
Distance : 5

61
Tree	if ( this . arraySeparator () ) { return false ; }
Code	if ( this . arraySeparator () ) { return false ; }
Distance : 5

62
Tree	if ( this . wantedButNotInvokedInOrder () ) { return false ; }
Code	if ( this . wantedButNotInvokedInOrder () ) { return false ; }
Distance : 5

63
Tree	if ( this . valueClass () ) { return null ; }
Code	if ( this . valueClass () ) { return null ; }
Distance : 5

64
Tree	if ( this . lineStroke () ) { return false ; }
Code	if ( this . lineStroke () ) { return false ; }
Distance : 5

65
Tree	if ( this . isSpy () ) { return null ; }
Code	if ( this . isSpy () ) { return null ; }
Distance : 5

66
Tree	if ( this . containsNone () ) { return false ; }
Code	if ( this . containsNone () ) { return false ; }
Distance : 5

67
Tree	if ( this . shouldRunCrossChunkMethodMotion () ) { return false ; }
Code	if ( this . shouldRunCrossChunkMethodMotion () ) { return false ; }
Distance : 5

68
Tree	if ( this . CompilerTestCase.ACTIVE_X_OBJECT_DEF () ) { return false ; }
Code	if ( this . CompilerTestCase.ACTIVE_X_OBJECT_DEF () ) { return false ; }
Distance : 5

69
Tree	if ( this . aClass () ) { return null ; }
Code	if ( this . aClass () ) { return null ; }
Distance : 5

70
Tree	if ( this . defs () ) { return false ; }
Code	if ( this . defs () ) { return false ; }
Distance : 5

71
Tree	if ( this . angleGridlineStroke () ) { return null ; }
Code	if ( this . angleGridlineStroke () ) { return null ; }
Distance : 5

72
Tree	if ( this . CLEANER () ) { return null ; }
Code	if ( this . CLEANER () ) { return null ; }
Distance : 5

73
Tree	if ( this . isNotEmpty () ) { return false ; }
Code	if ( this . isNotEmpty () ) { return false ; }
Distance : 5

74
Tree	if ( this . plotOutlinePaint () ) { return false ; }
Code	if ( this . plotOutlinePaint () ) { return false ; }
Distance : 5

75
Tree	if ( this . baseFormatter () ) { return false ; }
Code	if ( this . baseFormatter () ) { return false ; }
Distance : 5

76
Tree	if ( this . setValidityCheck () ) { return null ; }
Code	if ( this . setValidityCheck () ) { return null ; }
Distance : 5

77
Tree	if ( this . mockitoOngoingStubbing () ) { return false ; }
Code	if ( this . mockitoOngoingStubbing () ) { return false ; }
Distance : 5

78
Tree	if ( this . Functions () ) { return null ; }
Code	if ( this . Functions () ) { return null ; }
Distance : 5

79
Tree	if ( this . isDestructuringDeclaration () ) { return null ; }
Code	if ( this . isDestructuringDeclaration () ) { return null ; }
Distance : 5

80
Tree	if ( this . shouldRunRemoveUnusedCode () ) { return null ; }
Code	if ( this . shouldRunRemoveUnusedCode () ) { return null ; }
Distance : 5

81
Tree	if ( this . definitionNodes () ) { return null ; }
Code	if ( this . definitionNodes () ) { return null ; }
Distance : 5

82
Tree	if ( this . isNoOp () ) { return null ; }
Code	if ( this . isNoOp () ) { return null ; }
Distance : 5

83
Tree	if ( this . defaultStroke () ) { return null ; }
Code	if ( this . defaultStroke () ) { return null ; }
Distance : 5

84
Tree	if ( this . canRecoverFromFailure () ) { return null ; }
Code	if ( this . canRecoverFromFailure () ) { return null ; }
Distance : 5

85
Tree	if ( this . itemLabelPaint () ) { return null ; }
Code	if ( this . itemLabelPaint () ) { return null ; }
Distance : 5

86
Tree	if ( this . printExterns () ) { return null ; }
Code	if ( this . printExterns () ) { return null ; }
Distance : 5

87
Tree	if ( this . nextZipf () ) { return null ; }
Code	if ( this . nextZipf () ) { return null ; }
Distance : 5

88
Tree	if ( this . enumLiteralHasKey () ) { return null ; }
Code	if ( this . enumLiteralHasKey () ) { return null ; }
Distance : 5

89
Tree	if ( this . ignoreZeroValues () ) { return null ; }
Code	if ( this . ignoreZeroValues () ) { return null ; }
Distance : 5

90
Tree	if ( this . domainMarkers () ) { return null ; }
Code	if ( this . domainMarkers () ) { return null ; }
Distance : 5

91
Tree	if ( this . AstValidator () ) { return null ; }
Code	if ( this . AstValidator () ) { return null ; }
Distance : 5

92
Tree	if ( this . potentialStubbingProblem () ) { return null ; }
Code	if ( this . potentialStubbingProblem () ) { return null ; }
Distance : 5

93
Tree	if ( this . isValidSimpleName () ) { return null ; }
Code	if ( this . isValidSimpleName () ) { return null ; }
Distance : 5

94
Tree	if ( this . getDeclaringClass () ) { return null ; }
Code	if ( this . getDeclaringClass () ) { return null ; }
Distance : 5

95
Tree	if ( this . defaultFillPaint () ) { return null ; }
Code	if ( this . defaultFillPaint () ) { return null ; }
Distance : 5

96
Tree	if ( this . disallowMovement () ) { return null ; }
Code	if ( this . disallowMovement () ) { return null ; }
Distance : 5

97
Tree	if ( this . getCountry () ) { return null ; }
Code	if ( this . getCountry () ) { return null ; }
Distance : 5

98
Tree	if ( this . isMovableDeclaration () ) { return null ; }
Code	if ( this . isMovableDeclaration () ) { return null ; }
Distance : 5

99
Tree	if ( this . subLabelFont () ) { return null ; }
Code	if ( this . subLabelFont () ) { return null ; }
Distance : 5

100
Tree	if ( this . isOrsonPDFAvailable () ) { return null ; }
Code	if ( this . isOrsonPDFAvailable () ) { return null ; }
Distance : 5

101
Tree	if ( this . optimizePropertyIndex () ) { return null ; }
Code	if ( this . optimizePropertyIndex () ) { return null ; }
Distance : 5

102
Tree	if ( this . unsupportedCombinationOfAnnotations () ) { return null ; }
Code	if ( this . unsupportedCombinationOfAnnotations () ) { return null ; }
Distance : 5

103
Tree	if ( this . periodCount () ) { return null ; }
Code	if ( this . periodCount () ) { return null ; }
Distance : 5

104
Tree	if ( this . isLoggable () ) { return null ; }
Code	if ( this . isLoggable () ) { return null ; }
Distance : 5

105
Tree	if ( this . isComingFromJDK () ) { return null ; }
Code	if ( this . isComingFromJDK () ) { return null ; }
Distance : 5

106
Tree	if ( this . isHashCodeMethod () ) { return null ; }
Code	if ( this . isHashCodeMethod () ) { return null ; }
Distance : 5

107
Tree	if ( this . inputsSupplier () ) { return null ; }
Code	if ( this . inputsSupplier () ) { return null ; }
Distance : 5

108
Tree	if ( this . getSuperClass () ) { return null ; }
Code	if ( this . getSuperClass () ) { return null ; }
Distance : 5

109
Tree	if ( this . defaultNegativeItemLabelPosition () ) { return null ; }
Code	if ( this . defaultNegativeItemLabelPosition () ) { return null ; }
Distance : 5

110
Tree	if ( this . JAVA_1_8 () ) { return null ; }
Code	if ( this . JAVA_1_8 () ) { return null ; }
Distance : 5

111
Tree	if ( this . parseTestCode () ) { return null ; }
Code	if ( this . parseTestCode () ) { return null ; }
Distance : 5

112
Tree	if ( this . circle.pole () ) { return null ; }
Code	if ( this . circle.pole () ) { return null ; }
Distance : 5

113
Tree	if ( this . maxFunctionSizeAfterInlining () ) { return null ; }
Code	if ( this . maxFunctionSizeAfterInlining () ) { return null ; }
Distance : 5

114
Tree	if ( this . createNumber () ) { return null ; }
Code	if ( this . createNumber () ) { return null ; }
Distance : 5

115
Tree	if ( this . cumulativeTestPoints () ) { return null ; }
Code	if ( this . cumulativeTestPoints () ) { return null ; }
Distance : 5

116
Tree	if ( this . denominatorFormat () ) { return null ; }
Code	if ( this . denominatorFormat () ) { return null ; }
Distance : 5

117
Tree	if ( this . isJUnit45OrHigherAvailable () ) { return null ; }
Code	if ( this . isJUnit45OrHigherAvailable () ) { return null ; }
Distance : 5

118
Tree	if ( this . nullPassedToVerify () ) { return null ; }
Code	if ( this . nullPassedToVerify () ) { return null ; }
Distance : 5

119
Tree	if ( this . doSanityChecks () ) { return null ; }
Code	if ( this . doSanityChecks () ) { return null ; }
Distance : 5

120
Tree	if ( this . noMoreInteractionsWantedInOrder () ) { return null ; }
Code	if ( this . noMoreInteractionsWantedInOrder () ) { return null ; }
Distance : 5

121
Tree	if ( this . OVERFLOW_MESSAGE () ) { return null ; }
Code	if ( this . OVERFLOW_MESSAGE () ) { return null ; }
Distance : 5

122
Tree	if ( this . exitCodeReceiver () ) { return null ; }
Code	if ( this . exitCodeReceiver () ) { return null ; }
Distance : 5

123
Tree	if ( this . isDefinedLocally () ) { return null ; }
Code	if ( this . isDefinedLocally () ) { return null ; }
Distance : 5

124
Tree	if ( this . deleteWhitespace () ) { return null ; }
Code	if ( this . deleteWhitespace () ) { return null ; }
Distance : 5

125
Tree	if ( this . inheritedPropDef.methodType () ) { return null ; }
Code	if ( this . inheritedPropDef.methodType () ) { return null ; }
Distance : 5

126
Tree	if ( this . GeneralPath () ) { return null ; }
Code	if ( this . GeneralPath () ) { return null ; }
Distance : 5

127
Tree	if ( this . strictlyRequiresFamiliarMock () ) { return null ; }
Code	if ( this . strictlyRequiresFamiliarMock () ) { return null ; }
Distance : 5

128
Tree	if ( this . setShape () ) { return null ; }
Code	if ( this . setShape () ) { return null ; }
Distance : 5

129
Tree	if ( this . largeFont () ) { return null ; }
Code	if ( this . largeFont () ) { return null ; }
Distance : 5

130
Tree	if ( this . rangeCrosshairVisible () ) { return null ; }
Code	if ( this . rangeCrosshairVisible () ) { return null ; }
Distance : 5

131
Tree	if ( this . rangeMarkers () ) { return null ; }
Code	if ( this . rangeMarkers () ) { return null ; }
Distance : 5

132
Tree	if ( this . leftOfArrow.type () ) { return null ; }
Code	if ( this . leftOfArrow.type () ) { return null ; }
Distance : 5

133
Tree	if ( this . isVerifiedStrictly () ) { return null ; }
Code	if ( this . isVerifiedStrictly () ) { return null ; }
Distance : 5

134
Tree	if ( this . CharUtils.CR () ) { return null ; }
Code	if ( this . CharUtils.CR () ) { return null ; }
Distance : 5

135
Tree	if ( this . meetWith () ) { return null ; }
Code	if ( this . meetWith () ) { return null ; }
Distance : 5

136
Tree	if ( this . shutdown () ) { return null ; }
Code	if ( this . shutdown () ) { return null ; }
Distance : 5

137
Tree	if ( this . HarmonicFunction () ) { return null ; }
Code	if ( this . HarmonicFunction () ) { return null ; }
Distance : 5

138
Tree	if ( this . recordPassStop () ) { return null ; }
Code	if ( this . recordPassStop () ) { return null ; }
Distance : 5

139
Tree	if ( this . getSigners () ) { return null ; }
Code	if ( this . getSigners () ) { return null ; }
Distance : 5

140
Tree	if ( this . replaceOnce () ) { return null ; }
Code	if ( this . replaceOnce () ) { return null ; }
Distance : 5

141
Tree	if ( this . isPrimitiveOrWrapper () ) { return null ; }
Code	if ( this . isPrimitiveOrWrapper () ) { return null ; }
Distance : 5

142
Tree	if ( this . FORBIDDEN_ZERO_DENOMINATOR () ) { return null ; }
Code	if ( this . FORBIDDEN_ZERO_DENOMINATOR () ) { return null ; }
Distance : 5

143
Tree	if ( this . scopeType () ) { return null ; }
Code	if ( this . scopeType () ) { return null ; }
Distance : 5

144
Tree	if ( this . checkUnusedLocals () ) { return null ; }
Code	if ( this . checkUnusedLocals () ) { return null ; }
Distance : 5

145
Tree	if ( this . isAsciiNumeric () ) { return null ; }
Code	if ( this . isAsciiNumeric () ) { return null ; }
Distance : 5

146
Tree	if ( this . nextPascal () ) { return null ; }
Code	if ( this . nextPascal () ) { return null ; }
Distance : 5

147
Tree	if ( this . hasConditionalAncestor () ) { return null ; }
Code	if ( this . hasConditionalAncestor () ) { return null ; }
Distance : 5

148
Tree	if ( this . getTransform () ) { return null ; }
Code	if ( this . getTransform () ) { return null ; }
Distance : 5

149
Tree	if ( this . setInline () ) { return null ; }
Code	if ( this . setInline () ) { return null ; }
Distance : 5

150
Tree	if ( this . defaultAnswerDoesNotAcceptNullParameter () ) { return null ; }
Code	if ( this . defaultAnswerDoesNotAcceptNullParameter () ) { return null ; }
Distance : 5

151
Tree	if ( this . resultEqualsValue () ) { return null ; }
Code	if ( this . resultEqualsValue () ) { return null ; }
Distance : 5

152
Tree	if ( this . counterClockwise () ) { return null ; }
Code	if ( this . counterClockwise () ) { return null ; }
Distance : 5

153
Tree	if ( this . token.type () ) { return null ; }
Code	if ( this . token.type () ) { return null ; }
Distance : 5

154
Tree	if ( this . legendItemGraphicPadding () ) { return null ; }
Code	if ( this . legendItemGraphicPadding () ) { return null ; }
Distance : 5

155
Tree	if ( this . stripOutlineVisible () ) { return null ; }
Code	if ( this . stripOutlineVisible () ) { return null ; }
Distance : 5

156
Tree	if ( this . setTotal () ) { return null ; }
Code	if ( this . setTotal () ) { return null ; }
Distance : 5

157
Tree	if ( this . setTaintsGlobalState () ) { return null ; }
Code	if ( this . setTaintsGlobalState () ) { return null ; }
Distance : 5

158
Tree	if ( this . newRoot () ) { return null ; }
Code	if ( this . newRoot () ) { return null ; }
Distance : 5

159
Tree	if ( this . decompMatrix () ) { return null ; }
Code	if ( this . decompMatrix () ) { return null ; }
Distance : 5

160
Tree	if ( this . TestPeriodType () ) { return null ; }
Code	if ( this . TestPeriodType () ) { return null ; }
Distance : 5

161
Tree	if ( this . tickLabelsVisible () ) { return null ; }
Code	if ( this . tickLabelsVisible () ) { return null ; }
Distance : 5

162
Tree	if ( this . alreadyRemoved () ) { return null ; }
Code	if ( this . alreadyRemoved () ) { return null ; }
Distance : 5

163
Tree	if ( this . getOrderOfRegressors () ) { return null ; }
Code	if ( this . getOrderOfRegressors () ) { return null ; }
Distance : 5

164
Tree	if ( this . checkingPolicy () ) { return null ; }
Code	if ( this . checkingPolicy () ) { return null ; }
Distance : 5

165
Tree	if ( this . setZoneRetainFields () ) { return null ; }
Code	if ( this . setZoneRetainFields () ) { return null ; }
Distance : 5

166
Tree	if ( this . negativeItemLabelPositionMap () ) { return null ; }
Code	if ( this . negativeItemLabelPositionMap () ) { return null ; }
Distance : 5

167
Tree	if ( this . ancestorInterfaces () ) { return null ; }
Code	if ( this . ancestorInterfaces () ) { return null ; }
Distance : 5

168
Tree	if ( this . indexParamName () ) { return null ; }
Code	if ( this . indexParamName () ) { return null ; }
Distance : 5

169
Tree	if ( this . mockedTypeIsInconsistentWithSpiedInstanceType () ) { return null ; }
Code	if ( this . mockedTypeIsInconsistentWithSpiedInstanceType () ) { return null ; }
Distance : 5

170
Tree	if ( this . isMethodOrCtorCallThatTriggersRemoval () ) { return null ; }
Code	if ( this . isMethodOrCtorCallThatTriggersRemoval () ) { return null ; }
Distance : 5

171
Tree	if ( this . pivotSelection () ) { return null ; }
Code	if ( this . pivotSelection () ) { return null ; }
Distance : 5

172
Tree	if ( this . returnedMock () ) { return null ; }
Code	if ( this . returnedMock () ) { return null ; }
Distance : 5

173
Tree	if ( this . ofThisVm () ) { return null ; }
Code	if ( this . ofThisVm () ) { return null ; }
Distance : 5

174
Tree	if ( this . actualInvocationStackTrace () ) { return null ; }
Code	if ( this . actualInvocationStackTrace () ) { return null ; }
Distance : 5

175
Tree	if ( this . wantedAtMostX () ) { return null ; }
Code	if ( this . wantedAtMostX () ) { return null ; }
Distance : 5

176
Tree	if ( this . getChangeStamp () ) { return null ; }
Code	if ( this . getChangeStamp () ) { return null ; }
Distance : 5

177
Tree	if ( this . newPos () ) { return null ; }
Code	if ( this . newPos () ) { return null ; }
Distance : 5

178
Tree	if ( this . defaultLegendTextPaint () ) { return null ; }
Code	if ( this . defaultLegendTextPaint () ) { return null ; }
Distance : 5

179
Tree	if ( this . isSetterDef () ) { return null ; }
Code	if ( this . isSetterDef () ) { return null ; }
Distance : 5

180
Tree	if ( this . angleGridlinesVisible () ) { return null ; }
Code	if ( this . angleGridlinesVisible () ) { return null ; }
Distance : 5

181
Tree	if ( this . visitFunction () ) { return null ; }
Code	if ( this . visitFunction () ) { return null ; }
Distance : 5

182
Tree	if ( this . setCssNames () ) { return null ; }
Code	if ( this . setCssNames () ) { return null ; }
Distance : 5

183
Tree	if ( this . getInstrumentForCoverageOnly () ) { return null ; }
Code	if ( this . getInstrumentForCoverageOnly () ) { return null ; }
Distance : 5

184
Tree	if ( this . getAllSuperclasses () ) { return null ; }
Code	if ( this . getAllSuperclasses () ) { return null ; }
Distance : 5

185
Tree	if ( this . timeToLive () ) { return null ; }
Code	if ( this . timeToLive () ) { return null ; }
Distance : 5

186
Tree	if ( this . chartArea () ) { return null ; }
Code	if ( this . chartArea () ) { return null ; }
Distance : 5

187
Tree	if ( this . zipFile1 () ) { return null ; }
Code	if ( this . zipFile1 () ) { return null ; }
Distance : 5

188
Tree	if ( this . objective.length () ) { return null ; }
Code	if ( this . objective.length () ) { return null ; }
Distance : 5

189
Tree	if ( this . arraySeparator () ) { return null ; }
Code	if ( this . arraySeparator () ) { return null ; }
Distance : 5

190
Tree	if ( this . wantedButNotInvokedInOrder () ) { return null ; }
Code	if ( this . wantedButNotInvokedInOrder () ) { return null ; }
Distance : 5

191
Tree	if ( this . lineStroke () ) { return null ; }
Code	if ( this . lineStroke () ) { return null ; }
Distance : 5

192
Tree	if ( this . containsNone () ) { return null ; }
Code	if ( this . containsNone () ) { return null ; }
Distance : 5

193
Tree	if ( this . shouldRunCrossChunkMethodMotion () ) { return null ; }
Code	if ( this . shouldRunCrossChunkMethodMotion () ) { return null ; }
Distance : 5

194
Tree	if ( this . CompilerTestCase.ACTIVE_X_OBJECT_DEF () ) { return null ; }
Code	if ( this . CompilerTestCase.ACTIVE_X_OBJECT_DEF () ) { return null ; }
Distance : 5

195
Tree	if ( this . defs () ) { return null ; }
Code	if ( this . defs () ) { return null ; }
Distance : 5

196
Tree	if ( this . isNotEmpty () ) { return null ; }
Code	if ( this . isNotEmpty () ) { return null ; }
Distance : 5

197
Tree	if ( this . plotOutlinePaint () ) { return null ; }
Code	if ( this . plotOutlinePaint () ) { return null ; }
Distance : 5

198
Tree	if ( this . baseFormatter () ) { return null ; }
Code	if ( this . baseFormatter () ) { return null ; }
Distance : 5

199
Tree	if ( this . mockitoOngoingStubbing () ) { return null ; }
Code	if ( this . mockitoOngoingStubbing () ) { return null ; }
Distance : 5

========================================================================


========================================================================
Example Number: 70
Parent Code is: 
{ super ( populationLimit ) ; this . elitismRate = elitismRate ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( populationLimit ) ; setElitismRate ( elitismRate ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=elitismRate})) (204{val==}) (800{val=elitismRate})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setElitismRate}) (214{val=(}) (800{val=elitismRate}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/35/parent/src_main_java_org_apache_commons_math3_genetics_ElitisticListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ super ( populationLimit , elitismRate ) ; }
Code	{ super ( populationLimit , elitismRate ) ; }
Distance : 4

1
Tree	{ super ( populationLimit ) ; this . elitismRate = new Sin [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Sin [] extends ; }
Distance : 7

2
Tree	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] [] ; }
Distance : 7

3
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] extends ; }
Distance : 7

4
Tree	{ super ( populationLimit ) ; this . elitismRate = new Sin [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Sin [] <> ; }
Distance : 7

5
Tree	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] extends ; }
Distance : 7

6
Tree	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] {} ; }
Distance : 7

7
Tree	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] [] ; }
Distance : 7

8
Tree	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] {} ; }
Distance : 7

9
Tree	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] <> ; }
Distance : 7

10
Tree	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] extends ; }
Distance : 7

11
Tree	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] <> ; }
Distance : 7

12
Tree	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] {} ; }
Distance : 7

13
Tree	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] <> ; }
Distance : 7

14
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] super ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] super ; }
Distance : 7

15
Tree	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] {} ; }
Distance : 7

16
Tree	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] extends ; }
Distance : 7

17
Tree	{ super ( populationLimit ) ; this . elitismRate = new Returns [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Returns [] {} ; }
Distance : 7

18
Tree	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] [] ; }
Distance : 7

19
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] CHAR_CONS ; }
Distance : 7

20
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] &= ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] &= ; }
Distance : 7

21
Tree	{ super ( populationLimit ) ; this . elitismRate = new Sin [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Sin [] [] ; }
Distance : 7

22
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] ? ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] ? ; }
Distance : 7

23
Tree	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] {} ; }
Distance : 7

24
Tree	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] [] ; }
Distance : 7

25
Tree	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] [] ; }
Distance : 7

26
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] CHAR_CONS ; }
Distance : 7

27
Tree	{ super ( populationLimit ) ; this . elitismRate = new ModuleLoader [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ModuleLoader [] {} ; }
Distance : 7

28
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] &= ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] &= ; }
Distance : 7

29
Tree	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] extends ; }
Distance : 7

30
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] super ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] super ; }
Distance : 7

31
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] [] ; }
Distance : 7

32
Tree	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] [] ; }
Distance : 7

33
Tree	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] {} ; }
Distance : 7

34
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] <> ; }
Distance : 7

35
Tree	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] <> ; }
Distance : 7

36
Tree	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] {} ; }
Distance : 7

37
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] / ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] / ; }
Distance : 7

38
Tree	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] extends ; }
Distance : 7

39
Tree	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] {} ; }
Distance : 7

40
Tree	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] <> ; }
Distance : 7

41
Tree	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] [] ; }
Distance : 7

42
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] {} ; }
Distance : 7

43
Tree	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] extends ; }
Distance : 7

44
Tree	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] [] ; }
Distance : 7

45
Tree	{ super ( populationLimit ) ; this . elitismRate = new GoogleCodingConvention [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GoogleCodingConvention [] {} ; }
Distance : 7

46
Tree	{ super ( populationLimit ) ; this . elitismRate = new Localized [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Localized [] [] ; }
Distance : 7

47
Tree	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] <> ; }
Distance : 7

48
Tree	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] {} ; }
Distance : 7

49
Tree	{ super ( populationLimit ) ; this . elitismRate = new Sin [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Sin [] {} ; }
Distance : 7

50
Tree	{ super ( populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 4

51
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] CHAR_CONS ; }
Distance : 7

52
Tree	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] {} ; }
Distance : 7

53
Tree	{ super ( populationLimit ) ; this . elitismRate = new Localized [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Localized [] {} ; }
Distance : 7

54
Tree	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] {} ; }
Distance : 7

55
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] extends ; }
Distance : 7

56
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] [] ; }
Distance : 7

57
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] {} ; }
Distance : 7

58
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] <> ; }
Distance : 7

59
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] {} ; }
Distance : 7

60
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] extends ; }
Distance : 7

61
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] [] ; }
Distance : 7

62
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] <> ; }
Distance : 7

63
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] [] ; }
Distance : 7

64
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] extends ; }
Distance : 7

65
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] <> ; }
Distance : 7

66
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] {} ; }
Distance : 7

67
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] <> ; }
Distance : 7

68
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] extends ; }
Distance : 7

69
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] {} ; }
Distance : 7

70
Tree	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new StatementFusion [] {} ; }
Distance : 7

71
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneratorFunctionsTranspiler [] <> ; }
Distance : 7

72
Tree	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] extends ; }
Distance : 7

73
Tree	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] {} ; }
Distance : 7

74
Tree	{ super ( populationLimit ) ; this . elitismRate = new Localized [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Localized [] extends ; }
Distance : 7

75
Tree	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] {} ; }
Distance : 7

76
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] &= ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] &= ; }
Distance : 7

77
Tree	{ super ( populationLimit ) ; this . elitismRate = new Localized [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Localized [] <> ; }
Distance : 7

78
Tree	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] {} ; }
Distance : 7

79
Tree	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] <> ; }
Distance : 7

80
Tree	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] <> ; }
Distance : 7

81
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] [] ; }
Distance : 7

82
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] ? ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] ? ; }
Distance : 7

83
Tree	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] {} ; }
Distance : 7

84
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] CHAR_CONS ; }
Distance : 7

85
Tree	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new LinkedHashSet [] {} ; }
Distance : 7

86
Tree	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ConsecutiveStubbing [] {} ; }
Distance : 7

87
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] extends ; }
Distance : 7

88
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] <> ; }
Distance : 7

89
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] [] ; }
Distance : 7

90
Tree	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new EarlyEs6ToEs3Converter [] {} ; }
Distance : 7

91
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] {} ; }
Distance : 7

92
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] {} ; }
Distance : 7

93
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] class ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] class ; }
Distance : 7

94
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] ? ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] ? ; }
Distance : 7

95
Tree	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] extends ; }
Distance : 7

96
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] / ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] / ; }
Distance : 7

97
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] <> ; }
Distance : 7

98
Tree	{ super ( populationLimit ) ; this . elitismRate = new Es7RewriteExponentialOperator [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Es7RewriteExponentialOperator [] {} ; }
Distance : 7

99
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] : ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] : ; }
Distance : 7

100
Tree	{ super ( populationLimit ) ; this . elitismRate = new Power [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Power [] {} ; }
Distance : 7

101
Tree	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] <> ; }
Distance : 7

102
Tree	{ super ( populationLimit ) ; this . elitismRate = new RombergIntegrator [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new RombergIntegrator [] {} ; }
Distance : 7

103
Tree	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] <> ; }
Distance : 7

104
Tree	{ super ( populationLimit ) ; this . elitismRate = new StreamDataAdapter [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new StreamDataAdapter [] {} ; }
Distance : 7

105
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] false ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] false ; }
Distance : 7

106
Tree	{ super ( populationLimit ) ; this . elitismRate = new VerifyingRecorder [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new VerifyingRecorder [] {} ; }
Distance : 7

107
Tree	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] [] ; }
Distance : 7

108
Tree	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] [] ; }
Distance : 7

109
Tree	{ super ( populationLimit ) ; this . elitismRate = new PeepholeCollectPropertyAssignments [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new PeepholeCollectPropertyAssignments [] {} ; }
Distance : 7

110
Tree	{ super ( populationLimit ) ; this . elitismRate = new Localized [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Localized [] CHAR_CONS ; }
Distance : 7

111
Tree	{ super ( populationLimit ) ; this . elitismRate = new int [] { NUMBER_CONSTANT , NUMBER_CONSTANT } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new int [] { NUMBER_CONSTANT , NUMBER_CONSTANT } ; }
Distance : 11

112
Tree	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] extends ; }
Distance : 7

113
Tree	{ super ( populationLimit ) ; this . elitismRate = new Es6SyntacticScopeCreator [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Es6SyntacticScopeCreator [] {} ; }
Distance : 7

114
Tree	{ super ( populationLimit ) ; this . elitismRate = new CheckSuper [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CheckSuper [] {} ; }
Distance : 7

115
Tree	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new IdentityPreconditioner [] CHAR_CONS ; }
Distance : 7

116
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] &= ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] &= ; }
Distance : 7

117
Tree	{ super ( populationLimit ) ; this . elitismRate = new ModuleLoader [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ModuleLoader [] <> ; }
Distance : 7

118
Tree	{ this ( populationLimit , false ) ; }
Code	{ this ( populationLimit , false ) ; }
Distance : 6

119
Tree	{ super ( populationLimit ) ; this . elitismRate = new Es6RewriteModulesToCommonJsModules [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Es6RewriteModulesToCommonJsModules [] {} ; }
Distance : 7

120
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] [] ; }
Distance : 7

121
Tree	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] extends ; }
Distance : 7

122
Tree	{ super ( populationLimit ) ; this . elitismRate = new Year [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Year [] {} ; }
Distance : 7

123
Tree	{ super ( populationLimit ) ; this . elitismRate = new ScaledDurationField [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ScaledDurationField [] <> ; }
Distance : 7

124
Tree	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AllowedSolutions.ANY_SIDE [] extends ; }
Distance : 7

125
Tree	{ super ( populationLimit ) ; this . elitismRate = new MappedNameSupplier [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MappedNameSupplier [] {} ; }
Distance : 7

126
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultExceptionContext [] extends ; }
Distance : 7

127
Tree	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] [] ; }
Distance : 7

128
Tree	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new HashSet [] CHAR_CONS ; }
Distance : 7

129
Tree	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ChartChangeEvent [] <> ; }
Distance : 7

130
Tree	{ super ( populationLimit ) ; this . elitismRate = new Sin [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Sin [] CHAR_CONS ; }
Distance : 7

131
Tree	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] [] ; }
Distance : 7

132
Tree	{ super ( populationLimit ) ; this . elitismRate = new MinpackMeasurement [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MinpackMeasurement [] {} ; }
Distance : 7

133
Tree	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new AstChangeProxy [] [] ; }
Distance : 7

134
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] ? ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] ? ; }
Distance : 7

135
Tree	{ super ( populationLimit ) ; this . elitismRate = new ToStringBuilder [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ToStringBuilder [] {} ; }
Distance : 7

136
Tree	{ super ( populationLimit ) ; this . elitismRate = new PoissonDistributionImpl [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new PoissonDistributionImpl [] {} ; }
Distance : 7

137
Tree	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] ? ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new GeneralPath [] ? ; }
Distance : 7

138
Tree	{ super ( populationLimit ) ; this . elitismRate = new Expm1 [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Expm1 [] {} ; }
Distance : 7

139
Tree	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] [] ; }
Distance : 7

140
Tree	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] extends ; }
Distance : 7

141
Tree	{ super ( populationLimit ) ; this . elitismRate = new Returns [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Returns [] extends ; }
Distance : 7

142
Tree	{ super ( populationLimit ) ; this . elitismRate = new short [] { populationLimit } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new short [] { populationLimit } ; }
Distance : 9

143
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] [] ; }
Distance : 7

144
Tree	{ super ( populationLimit ) ; this . elitismRate = new PeepholeSimplifyRegExp [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new PeepholeSimplifyRegExp [] {} ; }
Distance : 7

145
Tree	{ super ( populationLimit ) ; this . elitismRate = new Es6ToEs3Converter [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Es6ToEs3Converter [] {} ; }
Distance : 7

146
Tree	{ super ( populationLimit ) ; this . elitismRate = new ScaledDurationField [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ScaledDurationField [] {} ; }
Distance : 7

147
Tree	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] extends ; }
Distance : 7

148
Tree	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] extends ; }
Distance : 7

149
Tree	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] <> ; }
Distance : 7

150
Tree	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MockitoLoggerImpl [] <> ; }
Distance : 7

151
Tree	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CachingTranspiler [] CHAR_CONS ; }
Distance : 7

152
Tree	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] <> ; }
Distance : 7

153
Tree	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] [] ; }
Distance : 7

154
Tree	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new InitialGuess [] extends ; }
Distance : 7

155
Tree	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] <> ; }
Distance : 7

156
Tree	{ super ( populationLimit ) ; this . elitismRate = new byte [] { populationLimit } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new byte [] { populationLimit } ; }
Distance : 9

157
Tree	{ super ( populationLimit ) ; this . elitismRate = new mockedTypeIsInconsistentWithSpiedInstanceType [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new mockedTypeIsInconsistentWithSpiedInstanceType [] {} ; }
Distance : 7

158
Tree	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new java.util.ArrayList [] extends ; }
Distance : 7

159
Tree	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] <> ; }
Distance : 7

160
Tree	{ super ( populationLimit ) ; this . elitismRate = new ClosureOptimizePrimitives [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ClosureOptimizePrimitives [] {} ; }
Distance : 7

161
Tree	{ super ( populationLimit ) ; this . elitismRate = new notAnException [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new notAnException [] {} ; }
Distance : 7

162
Tree	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TreeSet [] <> ; }
Distance : 7

163
Tree	{ super ( populationLimit ) ; this . elitismRate = new Returns [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Returns [] <> ; }
Distance : 7

164
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultRegisteredInvocations [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultRegisteredInvocations [] {} ; }
Distance : 7

165
Tree	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] CHAR_CONS ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Coordinates3D [] CHAR_CONS ; }
Distance : 7

166
Tree	{ super ( populationLimit ) ; this . elitismRate = new float [] { populationLimit } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new float [] { populationLimit } ; }
Distance : 9

167
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] class ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] class ; }
Distance : 7

168
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] >= ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] >= ; }
Distance : 7

169
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] % ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] % ; }
Distance : 7

170
Tree	{ super ( populationLimit ) ; this . elitismRate = new Returns [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Returns [] [] ; }
Distance : 7

171
Tree	{ super ( populationLimit ) ; this . elitismRate = new Median [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Median [] {} ; }
Distance : 7

172
Tree	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] extends ; }
Distance : 7

173
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] / ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefaultTransformer [] / ; }
Distance : 7

174
Tree	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] [] ; }
Distance : 7

175
Tree	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MarsagliaNormalizedGaussianSampler [] <> ; }
Distance : 7

176
Tree	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new SerializableTypeVariable [] extends ; }
Distance : 7

177
Tree	{ super ( populationLimit ) ; this . elitismRate = new ReorderConstantExpression [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ReorderConstantExpression [] {} ; }
Distance : 7

178
Tree	{ super ( populationLimit ) ; this . elitismRate = new CompareToBuilder [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CompareToBuilder [] {} ; }
Distance : 7

179
Tree	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] [] ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new MonotoneChain [] [] ; }
Distance : 7

180
Tree	{ super ( populationLimit ) ; this . elitismRate = new SimpleAffix [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new SimpleAffix [] {} ; }
Distance : 7

181
Tree	{ super ( populationLimit ) ; this . elitismRate = new Tracer [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new Tracer [] {} ; }
Distance : 7

182
Tree	{ super ( populationLimit ) ; this . elitismRate = new CharUtilsPerfRun [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new CharUtilsPerfRun [] {} ; }
Distance : 7

183
Tree	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TypeCache.WithInlineExpunction [] <> ; }
Distance : 7

184
Tree	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] super ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ArrayDeque [] super ; }
Distance : 7

185
Tree	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new TrapezoidIntegrator [] extends ; }
Distance : 7

186
Tree	{ super ( populationLimit ) ; this . elitismRate = new int [] { populationLimit } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new int [] { populationLimit } ; }
Distance : 9

187
Tree	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] extends ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new DefineCallbackReturnCallback [] extends ; }
Distance : 7

188
Tree	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] {} ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ThreadSafeDelegatingErrorManager [] {} ; }
Distance : 7

189
Tree	{ super ( populationLimit ) ; }
Code	{ super ( populationLimit ) ; }
Distance : 5

190
Tree	{ super ( populationLimit ) ; this . elitismRate = new double [] { NUMBER_CONSTANT , NUMBER_CONSTANT } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new double [] { NUMBER_CONSTANT , NUMBER_CONSTANT } ; }
Distance : 11

191
Tree	{ super ( populationLimit ) ; this . elitismRate = new double [] { populationLimit } ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new double [] { populationLimit } ; }
Distance : 9

192
Tree	{ super ( populationLimit ) ; this . elitismRate = new ClosureOptimizePrimitives [] <> ; }
Code	{ super ( populationLimit ) ; this . elitismRate = new ClosureOptimizePrimitives [] <> ; }
Distance : 7

193
Tree	{ super ( populationLimit , elitismRate ) ; } Override
Code	{ super ( populationLimit , elitismRate ) ; } Override
Distance : 5

194
Tree	{ super ( populationLimit , elitismRate ) ; } assertEquals
Code	{ super ( populationLimit , elitismRate ) ; } assertEquals
Distance : 5

195
Tree	{ super ( populationLimit , elitismRate ) ; } !
Code	{ super ( populationLimit , elitismRate ) ; } !
Distance : 5

196
Tree	{ super ( populationLimit , elitismRate ) ; } nullNotPermitted
Code	{ super ( populationLimit , elitismRate ) ; } nullNotPermitted
Distance : 5

197
Tree	{ super ( populationLimit , elitismRate ) ; } mode
Code	{ super ( populationLimit , elitismRate ) ; } mode
Distance : 5

198
Tree	{ super ( populationLimit , elitismRate ) ; } mock
Code	{ super ( populationLimit , elitismRate ) ; } mock
Distance : 5

199
Tree	{ super ( populationLimit , elitismRate ) ; } throw
Code	{ super ( populationLimit , elitismRate ) ; } throw
Distance : 5

========================================================================


========================================================================
Example Number: 71
Parent Code is: 
{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; }
-------------------------------------------------------------------------------
Child code is: 
{ super ( chromosomes , populationLimit ) ; setElitismRate ( elitismRate ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (7 (22 (315{val=this}) (235{val=.}) (800{val=elitismRate})) (204{val==}) (800{val=elitismRate})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (46 (349{val=super}) (214{val=(}) (800{val=chromosomes}) (234{val=,}) (800{val=populationLimit}) (215{val=)}) (227{val=;})) (21 (32 (802{val=setElitismRate}) (214{val=(}) (800{val=elitismRate}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/35/parent/src_main_java_org_apache_commons_math3_genetics_ElitisticListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 4
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ this ( chromosomes , false ) ; }
Code	{ this ( chromosomes , false ) ; }
Distance : 7

1
Tree	{ this ( LocalizedFormats.EVALUATION_FAILED , populationLimit ) ; }
Code	{ this ( LocalizedFormats.EVALUATION_FAILED , populationLimit ) ; }
Distance : 7

2
Tree	{ this ( extractField , populationLimit ) ; }
Code	{ this ( extractField , populationLimit ) ; }
Distance : 7

3
Tree	{ this ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE , populationLimit ) ; }
Code	{ this ( LocalizedFormats.ROW_INDEX_OUT_OF_RANGE , populationLimit ) ; }
Distance : 7

4
Tree	{ this ( Memoizer , populationLimit ) ; }
Code	{ this ( Memoizer , populationLimit ) ; }
Distance : 7

5
Tree	{ this ( tokenizer , populationLimit ) ; }
Code	{ this ( tokenizer , populationLimit ) ; }
Distance : 7

6
Tree	{ this ( DEFAULT_NAN_STRATEGY , populationLimit ) ; }
Code	{ this ( DEFAULT_NAN_STRATEGY , populationLimit ) ; }
Distance : 7

7
Tree	{ this ( BigFraction.ONE , populationLimit ) ; }
Code	{ this ( BigFraction.ONE , populationLimit ) ; }
Distance : 7

8
Tree	{ this ( mainSetDimension , populationLimit ) ; }
Code	{ this ( mainSetDimension , populationLimit ) ; }
Distance : 7

9
Tree	{ this ( StandardPieURLGenerator , populationLimit ) ; }
Code	{ this ( StandardPieURLGenerator , populationLimit ) ; }
Distance : 7

10
Tree	{ this ( stepEnd , populationLimit ) ; }
Code	{ this ( stepEnd , populationLimit ) ; }
Distance : 7

11
Tree	{ this ( getRandomGenerator , populationLimit ) ; }
Code	{ this ( getRandomGenerator , populationLimit ) ; }
Distance : 7

12
Tree	{ this ( testOne , populationLimit ) ; }
Code	{ this ( testOne , populationLimit ) ; }
Distance : 7

13
Tree	{ this ( relativeThreshold , populationLimit ) ; }
Code	{ this ( relativeThreshold , populationLimit ) ; }
Distance : 7

14
Tree	{ this ( CharacterCodingException , populationLimit ) ; }
Code	{ this ( CharacterCodingException , populationLimit ) ; }
Distance : 7

15
Tree	{ this ( UnescapeUtils.UNESCAPE_ECMASCRIPT , populationLimit ) ; }
Code	{ this ( UnescapeUtils.UNESCAPE_ECMASCRIPT , populationLimit ) ; }
Distance : 7

16
Tree	{ this ( only , populationLimit ) ; }
Code	{ this ( only , populationLimit ) ; }
Distance : 7

17
Tree	{ this ( outputFeatureSet , populationLimit ) ; }
Code	{ this ( outputFeatureSet , populationLimit ) ; }
Distance : 7

18
Tree	{ this ( LocalizedFormats.CANNOT_PARSE , populationLimit ) ; }
Code	{ this ( LocalizedFormats.CANNOT_PARSE , populationLimit ) ; }
Distance : 7

19
Tree	{ this ( mapper.start , populationLimit ) ; }
Code	{ this ( mapper.start , populationLimit ) ; }
Distance : 7

20
Tree	{ this ( packageJsonEntryNames , populationLimit ) ; }
Code	{ this ( packageJsonEntryNames , populationLimit ) ; }
Distance : 7

21
Tree	{ this ( LocalizedFormats.NON_SQUARE_MATRIX , populationLimit ) ; }
Code	{ this ( LocalizedFormats.NON_SQUARE_MATRIX , populationLimit ) ; }
Distance : 7

22
Tree	{ this ( urlGenerator , populationLimit ) ; }
Code	{ this ( urlGenerator , populationLimit ) ; }
Distance : 7

23
Tree	{ this ( getTimeInstance , populationLimit ) ; }
Code	{ this ( getTimeInstance , populationLimit ) ; }
Distance : 7

24
Tree	{ this ( LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES , populationLimit ) ; }
Code	{ this ( LocalizedFormats.INSTANCES_NOT_COMPARABLE_TO_EXISTING_VALUES , populationLimit ) ; }
Distance : 7

25
Tree	{ this ( BigRealField , populationLimit ) ; }
Code	{ this ( BigRealField , populationLimit ) ; }
Distance : 7

26
Tree	{ this ( spiedReceiver.tuner , populationLimit ) ; }
Code	{ this ( spiedReceiver.tuner , populationLimit ) ; }
Distance : 7

27
Tree	{ this ( DurationFormatUtils.Token , populationLimit ) ; }
Code	{ this ( DurationFormatUtils.Token , populationLimit ) ; }
Distance : 7

28
Tree	{ this ( TestVectorImpl , populationLimit ) ; }
Code	{ this ( TestVectorImpl , populationLimit ) ; }
Distance : 7

29
Tree	{ this ( dateStyle , populationLimit ) ; }
Code	{ this ( dateStyle , populationLimit ) ; }
Distance : 7

30
Tree	{ this ( ComposableFunction.SINH , populationLimit ) ; }
Code	{ this ( ComposableFunction.SINH , populationLimit ) ; }
Distance : 7

31
Tree	{ this ( labelLinksVisible , populationLimit ) ; }
Code	{ this ( labelLinksVisible , populationLimit ) ; }
Distance : 7

32
Tree	{ this ( yTmp , populationLimit ) ; }
Code	{ this ( yTmp , populationLimit ) ; }
Distance : 7

33
Tree	{ this ( chromosomes , populationLimit ) ; }
Code	{ this ( chromosomes , populationLimit ) ; }
Distance : 6

34
Tree	{ this ( changeListeners , populationLimit ) ; }
Code	{ this ( changeListeners , populationLimit ) ; }
Distance : 7

35
Tree	{ this ( LocalizedFormats.MAX_COUNT_EXCEEDED , populationLimit ) ; }
Code	{ this ( LocalizedFormats.MAX_COUNT_EXCEEDED , populationLimit ) ; }
Distance : 7

36
Tree	{ this ( ComposableFunction.SQRT , populationLimit ) ; }
Code	{ this ( ComposableFunction.SQRT , populationLimit ) ; }
Distance : 7

37
Tree	{ this ( System.in , populationLimit ) ; }
Code	{ this ( System.in , populationLimit ) ; }
Distance : 7

38
Tree	{ this ( CategoryLabelPosition , populationLimit ) ; }
Code	{ this ( CategoryLabelPosition , populationLimit ) ; }
Distance : 7

39
Tree	{ this ( Opcodes.ASM6 , populationLimit ) ; }
Code	{ this ( Opcodes.ASM6 , populationLimit ) ; }
Distance : 7

40
Tree	{ this ( URL , populationLimit ) ; }
Code	{ this ( URL , populationLimit ) ; }
Distance : 7

41
Tree	{ this ( Fraction.ZERO , populationLimit ) ; }
Code	{ this ( Fraction.ZERO , populationLimit ) ; }
Distance : 7

42
Tree	{ this ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , populationLimit ) ; }
Code	{ this ( LocalizedFormats.FRACTION_CONVERSION_OVERFLOW , populationLimit ) ; }
Distance : 7

43
Tree	{ this ( oldMockHandler.mockingProgress , populationLimit ) ; }
Code	{ this ( oldMockHandler.mockingProgress , populationLimit ) ; }
Distance : 7

44
Tree	{ this ( one , populationLimit ) ; }
Code	{ this ( one , populationLimit ) ; }
Distance : 7

45
Tree	{ this ( VectorDataItem , populationLimit ) ; }
Code	{ this ( VectorDataItem , populationLimit ) ; }
Distance : 7

46
Tree	{ this ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , populationLimit ) ; }
Code	{ this ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS , populationLimit ) ; }
Distance : 7

47
Tree	{ this ( currentType , populationLimit ) ; }
Code	{ this ( currentType , populationLimit ) ; }
Distance : 7

48
Tree	{ this ( LocalizedFormats.EVALUATIONS , populationLimit ) ; }
Code	{ this ( LocalizedFormats.EVALUATIONS , populationLimit ) ; }
Distance : 7

49
Tree	{ this ( Complex.ZERO , populationLimit ) ; }
Code	{ this ( Complex.ZERO , populationLimit ) ; }
Distance : 7

50
Tree	{ this ( MockHandlerInterface , populationLimit ) ; }
Code	{ this ( MockHandlerInterface , populationLimit ) ; }
Distance : 7

51
Tree	{ this ( labelFont , populationLimit ) ; }
Code	{ this ( labelFont , populationLimit ) ; }
Distance : 7

52
Tree	{ this ( RandomSource.MT_64 , populationLimit ) ; }
Code	{ this ( RandomSource.MT_64 , populationLimit ) ; }
Distance : 7

53
Tree	{ this ( XYTitleAnnotation , populationLimit ) ; }
Code	{ this ( XYTitleAnnotation , populationLimit ) ; }
Distance : 7

54
Tree	{ this ( LocalizedFormats.USER_EXCEPTION , populationLimit ) ; }
Code	{ this ( LocalizedFormats.USER_EXCEPTION , populationLimit ) ; }
Distance : 7

55
Tree	{ this ( setValue , populationLimit ) ; }
Code	{ this ( setValue , populationLimit ) ; }
Distance : 7

56
Tree	{ this ( FormatCache , populationLimit ) ; }
Code	{ this ( FormatCache , populationLimit ) ; }
Distance : 7

57
Tree	{ super ( chromosomes , populationLimit ) ; }
Code	{ super ( chromosomes , populationLimit ) ; }
Distance : 5

58
Tree	{ this ( FieldBracketingNthOrderBrentSolver , populationLimit ) ; }
Code	{ this ( FieldBracketingNthOrderBrentSolver , populationLimit ) ; }
Distance : 7

59
Tree	{ this ( lendsName , populationLimit ) ; }
Code	{ this ( lendsName , populationLimit ) ; }
Distance : 7

60
Tree	{ this ( GenericArrayType , populationLimit ) ; }
Code	{ this ( GenericArrayType , populationLimit ) ; }
Distance : 7

61
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = new double [] { chromosomes } ; }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = new double [] { chromosomes } ; }
Distance : 9

62
Tree	{ this ( Pair , populationLimit ) ; }
Code	{ this ( Pair , populationLimit ) ; }
Distance : 7

63
Tree	{ this ( legendTextFontMap , populationLimit ) ; }
Code	{ this ( legendTextFontMap , populationLimit ) ; }
Distance : 7

64
Tree	{ this ( symbolName , populationLimit ) ; }
Code	{ this ( symbolName , populationLimit ) ; }
Distance : 7

65
Tree	{ this ( Omega , populationLimit ) ; }
Code	{ this ( Omega , populationLimit ) ; }
Distance : 7

66
Tree	{ this ( RandomSource.TWO_CMRES , populationLimit ) ; }
Code	{ this ( RandomSource.TWO_CMRES , populationLimit ) ; }
Distance : 7

67
Tree	{ this ( PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES , populationLimit ) ; }
Code	{ this ( PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES , populationLimit ) ; }
Distance : 7

68
Tree	{ this ( aliases , populationLimit ) ; }
Code	{ this ( aliases , populationLimit ) ; }
Distance : 7

69
Tree	{ this ( OHLCDataItem , populationLimit ) ; }
Code	{ this ( OHLCDataItem , populationLimit ) ; }
Distance : 7

70
Tree	{ this ( methodCall , populationLimit ) ; }
Code	{ this ( methodCall , populationLimit ) ; }
Distance : 7

71
Tree	{ this ( dialBackgroundPaint , populationLimit ) ; }
Code	{ this ( dialBackgroundPaint , populationLimit ) ; }
Distance : 7

72
Tree	{ this ( OverlayChangeListener , populationLimit ) ; }
Code	{ this ( OverlayChangeListener , populationLimit ) ; }
Distance : 7

73
Tree	{ this ( Locale.US , populationLimit ) ; }
Code	{ this ( Locale.US , populationLimit ) ; }
Distance : 7

74
Tree	{ this ( pole , populationLimit ) ; }
Code	{ this ( pole , populationLimit ) ; }
Distance : 7

75
Tree	{ this ( nextChiSquare , populationLimit ) ; }
Code	{ this ( nextChiSquare , populationLimit ) ; }
Distance : 7

76
Tree	{ this ( nextZipf , populationLimit ) ; }
Code	{ this ( nextZipf , populationLimit ) ; }
Distance : 7

77
Tree	{ this ( ComposableFunction.TANH , populationLimit ) ; }
Code	{ this ( ComposableFunction.TANH , populationLimit ) ; }
Distance : 7

78
Tree	{ this ( Fraction.ONE , populationLimit ) ; }
Code	{ this ( Fraction.ONE , populationLimit ) ; }
Distance : 7

79
Tree	{ this ( TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY , populationLimit ) ; }
Code	{ this ( TDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY , populationLimit ) ; }
Distance : 7

80
Tree	{ this ( OnePointCrossover , populationLimit ) ; }
Code	{ this ( OnePointCrossover , populationLimit ) ; }
Distance : 7

81
Tree	{ this ( LocalizedFormats.NUMBER_TOO_LARGE , populationLimit ) ; }
Code	{ this ( LocalizedFormats.NUMBER_TOO_LARGE , populationLimit ) ; }
Distance : 7

82
Tree	{ this ( formatString , populationLimit ) ; }
Code	{ this ( formatString , populationLimit ) ; }
Distance : 7

83
Tree	{ this ( BracketedRealFieldUnivariateSolver , populationLimit ) ; }
Code	{ this ( BracketedRealFieldUnivariateSolver , populationLimit ) ; }
Distance : 7

84
Tree	{ this ( RelativeDateFormat , populationLimit ) ; }
Code	{ this ( RelativeDateFormat , populationLimit ) ; }
Distance : 7

85
Tree	{ this ( testIArrayLikeStructuralMatch2 , populationLimit ) ; }
Code	{ this ( testIArrayLikeStructuralMatch2 , populationLimit ) ; }
Distance : 7

86
Tree	{ this ( ByteArrayOutputStream , populationLimit ) ; }
Code	{ this ( ByteArrayOutputStream , populationLimit ) ; }
Distance : 7

87
Tree	{ this ( TransformType.FORWARD , populationLimit ) ; }
Code	{ this ( TransformType.FORWARD , populationLimit ) ; }
Distance : 7

88
Tree	{ this ( splitState , populationLimit ) ; }
Code	{ this ( splitState , populationLimit ) ; }
Distance : 7

89
Tree	{ this ( ComposableFunction.CEIL , populationLimit ) ; }
Code	{ this ( ComposableFunction.CEIL , populationLimit ) ; }
Distance : 7

90
Tree	{ this ( circle.pole , populationLimit ) ; }
Code	{ this ( circle.pole , populationLimit ) ; }
Distance : 7

91
Tree	{ this ( ComposableFunction.ULP , populationLimit ) ; }
Code	{ this ( ComposableFunction.ULP , populationLimit ) ; }
Distance : 7

92
Tree	{ this ( LanguageMode.ECMASCRIPT_2016 , populationLimit ) ; }
Code	{ this ( LanguageMode.ECMASCRIPT_2016 , populationLimit ) ; }
Distance : 7

93
Tree	{ this ( tickMarkOutsideLength , populationLimit ) ; }
Code	{ this ( tickMarkOutsideLength , populationLimit ) ; }
Distance : 7

94
Tree	{ this ( shouldScreamWhenNotAMockPassed , populationLimit ) ; }
Code	{ this ( shouldScreamWhenNotAMockPassed , populationLimit ) ; }
Distance : 7

95
Tree	{ this ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent , populationLimit ) ; }
Code	{ this ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent , populationLimit ) ; }
Distance : 7

96
Tree	{ this ( startX , populationLimit ) ; }
Code	{ this ( startX , populationLimit ) ; }
Distance : 7

97
Tree	{ this ( spiedReceiver.oldAntenna , populationLimit ) ; }
Code	{ this ( spiedReceiver.oldAntenna , populationLimit ) ; }
Distance : 7

98
Tree	{ this ( unescapeJava , populationLimit ) ; }
Code	{ this ( unescapeJava , populationLimit ) ; }
Distance : 7

99
Tree	{ this ( REYKJAVIK , populationLimit ) ; }
Code	{ this ( REYKJAVIK , populationLimit ) ; }
Distance : 7

100
Tree	{ this ( MathUtils.PI_SQUARED , populationLimit ) ; }
Code	{ this ( MathUtils.PI_SQUARED , populationLimit ) ; }
Distance : 7

101
Tree	{ this ( sectionPaint , populationLimit ) ; }
Code	{ this ( sectionPaint , populationLimit ) ; }
Distance : 7

102
Tree	{ this ( LocalizedFormats.ILLEGAL_STATE , populationLimit ) ; }
Code	{ this ( LocalizedFormats.ILLEGAL_STATE , populationLimit ) ; }
Distance : 7

103
Tree	{ this ( testInlineInFunction1 , populationLimit ) ; }
Code	{ this ( testInlineInFunction1 , populationLimit ) ; }
Distance : 7

104
Tree	{ this ( itemLabelGeneratorMap , populationLimit ) ; }
Code	{ this ( itemLabelGeneratorMap , populationLimit ) ; }
Distance : 7

105
Tree	{ this ( DE , populationLimit ) ; }
Code	{ this ( DE , populationLimit ) ; }
Distance : 7

106
Tree	{ this ( chromosomes , true ) ; }
Code	{ this ( chromosomes , true ) ; }
Distance : 7

107
Tree	{ this ( METHOD_NAME , populationLimit ) ; }
Code	{ this ( METHOD_NAME , populationLimit ) ; }
Distance : 7

108
Tree	{ this ( CompilerOptions.J2clPassMode , populationLimit ) ; }
Code	{ this ( CompilerOptions.J2clPassMode , populationLimit ) ; }
Distance : 7

109
Tree	{ this ( ObjectOutputStream , populationLimit ) ; }
Code	{ this ( ObjectOutputStream , populationLimit ) ; }
Distance : 7

110
Tree	{ this ( testGoogModuleWithEmptyDestructuringRequire , populationLimit ) ; }
Code	{ this ( testGoogModuleWithEmptyDestructuringRequire , populationLimit ) ; }
Distance : 7

111
Tree	{ this ( rectWidth , populationLimit ) ; }
Code	{ this ( rectWidth , populationLimit ) ; }
Distance : 7

112
Tree	{ this ( sIdx , populationLimit ) ; }
Code	{ this ( sIdx , populationLimit ) ; }
Distance : 7

113
Tree	{ this ( EscapeUtils.ESCAPE_JAVA , populationLimit ) ; }
Code	{ this ( EscapeUtils.ESCAPE_JAVA , populationLimit ) ; }
Distance : 7

114
Tree	{ this ( dstInit , populationLimit ) ; }
Code	{ this ( dstInit , populationLimit ) ; }
Distance : 7

115
Tree	{ this ( Matches , populationLimit ) ; }
Code	{ this ( Matches , populationLimit ) ; }
Distance : 7

116
Tree	{ this ( Locale.JAPAN , populationLimit ) ; }
Code	{ this ( Locale.JAPAN , populationLimit ) ; }
Distance : 7

117
Tree	{ this ( RandomGeneratorFactory , populationLimit ) ; }
Code	{ this ( RandomGeneratorFactory , populationLimit ) ; }
Distance : 7

118
Tree	{ this ( CollectCreatedMocks , populationLimit ) ; }
Code	{ this ( CollectCreatedMocks , populationLimit ) ; }
Distance : 7

119
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 5

120
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 5

121
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = elitismRate ; }
Distance : 5

122
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 5

123
Tree	{ super ( chromosomes , elitismRate ) ; this . elitismRate = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . elitismRate = chromosomes ; }
Distance : 5

124
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = chromosomes ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = chromosomes ; }
Distance : 5

125
Tree	{ super ( populationLimit , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 6

126
Tree	{ super ( elitismRate , elitismRate ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , elitismRate ) ; this . elitismRate = elitismRate ; }
Distance : 6

127
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 7

128
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 4

129
Tree	{ super ( populationLimit , elitismRate ) ; this . elitismRate = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . elitismRate = chromosomes ; }
Distance : 6

130
Tree	{ super ( elitismRate , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 6

131
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 7

132
Tree	{ super ( chromosomes , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 6

133
Tree	{ super ( populationLimit , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 6

134
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 6

135
Tree	{ super ( elitismRate , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( elitismRate , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 5

136
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = populationLimit ; }
Distance : 5

137
Tree	{ super ( elitismRate , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( elitismRate , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 6

138
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = populationLimit ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = populationLimit ; }
Distance : 5

139
Tree	{ super ( chromosomes , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( chromosomes , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 6

140
Tree	{ super ( chromosomes , populationLimit ) ; this . chromosomes = chromosomes ; }
Code	{ super ( chromosomes , populationLimit ) ; this . chromosomes = chromosomes ; }
Distance : 5

141
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = elitismRate ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = elitismRate ; }
Distance : 6

142
Tree	{ super ( populationLimit , populationLimit ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , populationLimit ) ; this . chromosomes = elitismRate ; }
Distance : 6

143
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 7

144
Tree	{ super ( populationLimit , chromosomes ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , chromosomes ) ; this . populationLimit = chromosomes ; }
Distance : 7

145
Tree	{ super ( elitismRate , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( elitismRate , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 7

146
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 7

147
Tree	{ super ( elitismRate , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 7

148
Tree	{ super ( populationLimit , elitismRate ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . populationLimit = chromosomes ; }
Distance : 7

149
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = chromosomes ; }
Distance : 7

150
Tree	{ super ( elitismRate , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( elitismRate , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 7

151
Tree	{ super ( elitismRate , chromosomes ) ; this . elitismRate = populationLimit ; }
Code	{ super ( elitismRate , chromosomes ) ; this . elitismRate = populationLimit ; }
Distance : 6

152
Tree	{ super ( populationLimit , elitismRate ) ; this . chromosomes = chromosomes ; }
Code	{ super ( populationLimit , elitismRate ) ; this . chromosomes = chromosomes ; }
Distance : 7

153
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = elitismRate ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = elitismRate ; }
Distance : 7

154
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } List
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } List
Distance : 5

155
Tree	{ this ( chromosomes , false ) ; } getFirstChild
Code	{ this ( chromosomes , false ) ; } getFirstChild
Distance : 8

156
Tree	{ super ( populationLimit , populationLimit ) ; this . populationLimit = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . populationLimit = chromosomes ; }
Distance : 6

157
Tree	{ super ( chromosomes , chromosomes ) ; this . elitismRate = chromosomes ; }
Code	{ super ( chromosomes , chromosomes ) ; this . elitismRate = chromosomes ; }
Distance : 5

158
Tree	{ super ( chromosomes , elitismRate ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , elitismRate ) ; this . populationLimit = elitismRate ; }
Distance : 6

159
Tree	{ super ( chromosomes , populationLimit ) ; this . chromosomes = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . chromosomes = populationLimit ; }
Distance : 5

160
Tree	{ super ( elitismRate , populationLimit ) ; this . chromosomes = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . chromosomes = elitismRate ; }
Distance : 6

161
Tree	{ super ( chromosomes , chromosomes ) ; this . chromosomes = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . chromosomes = elitismRate ; }
Distance : 6

162
Tree	{ super ( populationLimit , populationLimit ) ; this . elitismRate = chromosomes ; }
Code	{ super ( populationLimit , populationLimit ) ; this . elitismRate = chromosomes ; }
Distance : 5

163
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = chromosomes ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = chromosomes ; }
Distance : 5

164
Tree	{ super ( chromosomes , populationLimit ) ; this . populationLimit = populationLimit ; }
Code	{ super ( chromosomes , populationLimit ) ; this . populationLimit = populationLimit ; }
Distance : 5

165
Tree	{ super ( populationLimit , chromosomes ) ; this . elitismRate = elitismRate ; }
Code	{ super ( populationLimit , chromosomes ) ; this . elitismRate = elitismRate ; }
Distance : 6

166
Tree	{ super ( elitismRate , populationLimit ) ; this . populationLimit = elitismRate ; }
Code	{ super ( elitismRate , populationLimit ) ; this . populationLimit = elitismRate ; }
Distance : 6

167
Tree	{ super ( chromosomes , chromosomes ) ; this . populationLimit = elitismRate ; }
Code	{ super ( chromosomes , chromosomes ) ; this . populationLimit = elitismRate ; }
Distance : 6

168
Tree	{ this ( chromosomes , false ) ; } else
Code	{ this ( chromosomes , false ) ; } else
Distance : 8

169
Tree	{ this ( chromosomes , false ) ; } ]
Code	{ this ( chromosomes , false ) ; } ]
Distance : 8

170
Tree	{ this ( chromosomes , false ) ; } [
Code	{ this ( chromosomes , false ) ; } [
Distance : 8

171
Tree	{ this ( chromosomes , false ) ; } true
Code	{ this ( chromosomes , false ) ; } true
Distance : 8

172
Tree	{ this ( chromosomes , false ) ; } super
Code	{ this ( chromosomes , false ) ; } super
Distance : 8

173
Tree	{ this ( chromosomes , false ) ; } mode
Code	{ this ( chromosomes , false ) ; } mode
Distance : 8

174
Tree	{ this ( chromosomes , false ) ; } this
Code	{ this ( chromosomes , false ) ; } this
Distance : 8

175
Tree	{ this ( chromosomes , false ) ; } NUMBER_CONSTANT
Code	{ this ( chromosomes , false ) ; } NUMBER_CONSTANT
Distance : 8

176
Tree	{ this ( chromosomes , false ) ; } return
Code	{ this ( chromosomes , false ) ; } return
Distance : 8

177
Tree	{ this ( chromosomes , false ) ; } =
Code	{ this ( chromosomes , false ) ; } =
Distance : 8

178
Tree	{ this ( chromosomes , false ) ; } }
Code	{ this ( chromosomes , false ) ; } }
Distance : 7

179
Tree	{ this ( chromosomes , false ) ; } {
Code	{ this ( chromosomes , false ) ; } {
Distance : 8

180
Tree	{ this ( chromosomes , false ) ; } final
Code	{ this ( chromosomes , false ) ; } final
Distance : 8

181
Tree	{ this ( chromosomes , false ) ; } super
Code	{ this ( chromosomes , false ) ; } super
Distance : 8

182
Tree	{ this ( chromosomes , false ) ; } !=
Code	{ this ( chromosomes , false ) ; } !=
Distance : 8

183
Tree	{ this ( chromosomes , false ) ; } &&
Code	{ this ( chromosomes , false ) ; } &&
Distance : 8

184
Tree	{ this ( chromosomes , false ) ; } js
Code	{ this ( chromosomes , false ) ; } js
Distance : 8

185
Tree	{ this ( chromosomes , false ) ; } /
Code	{ this ( chromosomes , false ) ; } /
Distance : 8

186
Tree	{ this ( chromosomes , false ) ; } ?
Code	{ this ( chromosomes , false ) ; } ?
Distance : 8

187
Tree	{ this ( chromosomes , false ) ; } Fraction
Code	{ this ( chromosomes , false ) ; } Fraction
Distance : 8

188
Tree	{ this ( chromosomes , false ) ; } Assert
Code	{ this ( chromosomes , false ) ; } Assert
Distance : 8

189
Tree	{ this ( chromosomes , false ) ; } isNormalBlock
Code	{ this ( chromosomes , false ) ; } isNormalBlock
Distance : 8

190
Tree	{ super ( populationLimit , chromosomes ) ; this . chromosomes = populationLimit ; }
Code	{ super ( populationLimit , chromosomes ) ; this . chromosomes = populationLimit ; }
Distance : 7

191
Tree	{ this ( chromosomes , false ) ; } contains
Code	{ this ( chromosomes , false ) ; } contains
Distance : 8

192
Tree	{ this ( chromosomes , false ) ; } <blank>
Code	{ this ( chromosomes , false ) ; } <blank>
Distance : 8

193
Tree	{ super ( chromosomes , elitismRate ) ; this . elitismRate = populationLimit ; }
Code	{ super ( chromosomes , elitismRate ) ; this . elitismRate = populationLimit ; }
Distance : 5

194
Tree	{ super ( chromosomes , elitismRate ) ; this . chromosomes = populationLimit ; }
Code	{ super ( chromosomes , elitismRate ) ; this . chromosomes = populationLimit ; }
Distance : 6

195
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fail
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } fail
Distance : 5

196
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ==
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } ==
Distance : 5

197
Tree	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Integer
Code	{ super ( chromosomes , populationLimit ) ; this . elitismRate = elitismRate ; } Integer
Distance : 5

198
Tree	{ this ( chromosomes , false ) ; } ,
Code	{ this ( chromosomes , false ) ; } ,
Distance : 8

199
Tree	{ this ( chromosomes , false ) ; } (
Code	{ this ( chromosomes , false ) ; } (
Distance : 7

========================================================================


========================================================================
Example Number: 72
Parent Code is: 
{ return chromosomes . iterator () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return getChromosomes () . iterator () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=chromosomes}) (235{val=.}) (802{val=iterator}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=getChromosomes}) (216{val=()})) (235{val=.}) (802{val=iterator}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/34/parent/src_main_java_org_apache_commons_math3_genetics_ListPopulation.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return chromosomes . iterator () ; }
Code	{ return chromosomes . iterator () ; }
Distance : 2

1
Tree	{ return new chromosomes () ; } getChronology
Code	{ return new chromosomes () ; } getChronology
Distance : 5

2
Tree	{ return new chromosomes () ; } Collection
Code	{ return new chromosomes () ; } Collection
Distance : 5

3
Tree	{ return new chromosomes () ; } pattern
Code	{ return new chromosomes () ; } pattern
Distance : 5

4
Tree	{ return new chromosomes () ; } PlotChangeEvent
Code	{ return new chromosomes () ; } PlotChangeEvent
Distance : 5

5
Tree	{ return new chromosomes () ; } matcher
Code	{ return new chromosomes () ; } matcher
Distance : 5

6
Tree	{ return new chromosomes () ; } abs
Code	{ return new chromosomes () ; } abs
Distance : 5

7
Tree	{ return new chromosomes () ; } dataset
Code	{ return new chromosomes () ; } dataset
Distance : 5

8
Tree	{ return new chromosomes () ; } StrBuilder
Code	{ return new chromosomes () ; } StrBuilder
Distance : 5

9
Tree	{ return new chromosomes () ; } js
Code	{ return new chromosomes () ; } js
Distance : 5

10
Tree	{ return new chromosomes () ; } MutableTimePeriod
Code	{ return new chromosomes () ; } MutableTimePeriod
Distance : 5

11
Tree	{ return new chromosomes () ; } createIllegalArgumentException
Code	{ return new chromosomes () ; } createIllegalArgumentException
Distance : 5

12
Tree	{ return new chromosomes () ; } size
Code	{ return new chromosomes () ; } size
Distance : 5

13
Tree	{ return new chromosomes () ; } try
Code	{ return new chromosomes () ; } try
Distance : 5

14
Tree	{ return new chromosomes () ; } expected
Code	{ return new chromosomes () ; } expected
Distance : 5

15
Tree	{ return new chromosomes () ; } testSame
Code	{ return new chromosomes () ; } testSame
Distance : 5

16
Tree	{ return new chromosomes () ; } solver
Code	{ return new chromosomes () ; } solver
Distance : 5

17
Tree	{ return new chromosomes () ; } ArrayList
Code	{ return new chromosomes () ; } ArrayList
Distance : 5

18
Tree	{ return new chromosomes () ; } parent
Code	{ return new chromosomes () ; } parent
Distance : 5

19
Tree	{ return new chromosomes () ; } LINE_JOINER
Code	{ return new chromosomes () ; } LINE_JOINER
Distance : 5

20
Tree	{ return new chromosomes () ; } x
Code	{ return new chromosomes () ; } x
Distance : 5

21
Tree	{ return new chromosomes () ; } str
Code	{ return new chromosomes () ; } str
Distance : 5

22
Tree	{ return new chromosomes () ; } {}
Code	{ return new chromosomes () ; } {}
Distance : 5

23
Tree	{ return new chromosomes () ; } boolean
Code	{ return new chromosomes () ; } boolean
Distance : 5

24
Tree	{ return new chromosomes () ; } mockingProgress
Code	{ return new chromosomes () ; } mockingProgress
Distance : 5

25
Tree	{ return new chromosomes () ; } isEmpty
Code	{ return new chromosomes () ; } isEmpty
Distance : 5

26
Tree	{ return new chromosomes () ; } char
Code	{ return new chromosomes () ; } char
Distance : 5

27
Tree	{ return new chromosomes () ; } clone
Code	{ return new chromosomes () ; } clone
Distance : 5

28
Tree	{ return new chromosomes () ; } Double
Code	{ return new chromosomes () ; } Double
Distance : 5

29
Tree	{ return new chromosomes () ; } PeriodType
Code	{ return new chromosomes () ; } PeriodType
Distance : 5

30
Tree	{ return new chromosomes () ; } <=
Code	{ return new chromosomes () ; } <=
Distance : 5

31
Tree	{ return new chromosomes () ; } contains
Code	{ return new chromosomes () ; } contains
Distance : 5

32
Tree	{ return new chromosomes () ; } a
Code	{ return new chromosomes () ; } a
Distance : 5

33
Tree	{ return new chromosomes () ; } isNormalBlock
Code	{ return new chromosomes () ; } isNormalBlock
Distance : 5

34
Tree	{ return new chromosomes () ; } b
Code	{ return new chromosomes () ; } b
Distance : 5

35
Tree	{ return new chromosomes () ; } externs
Code	{ return new chromosomes () ; } externs
Distance : 5

36
Tree	{ return new chromosomes () ; } for
Code	{ return new chromosomes () ; } for
Distance : 5

37
Tree	{ return new chromosomes () ; } TestUtilities
Code	{ return new chromosomes () ; } TestUtilities
Distance : 5

38
Tree	{ return new chromosomes () ; } d
Code	{ return new chromosomes () ; } d
Distance : 5

39
Tree	{ return new chromosomes () ; } get
Code	{ return new chromosomes () ; } get
Distance : 5

40
Tree	{ return new chromosomes () ; } JSType
Code	{ return new chromosomes () ; } JSType
Distance : 5

41
Tree	{ return new chromosomes () ; } return;
Code	{ return new chromosomes () ; } return;
Distance : 5

42
Tree	{ return new chromosomes () ; } instant
Code	{ return new chromosomes () ; } instant
Distance : 5

43
Tree	{ return new chromosomes () ; } else
Code	{ return new chromosomes () ; } else
Distance : 5

44
Tree	{ return new chromosomes () ; } stream
Code	{ return new chromosomes () ; } stream
Distance : 5

45
Tree	{ return new chromosomes () ; } getMessage
Code	{ return new chromosomes () ; } getMessage
Distance : 5

46
Tree	{ return new chromosomes () ; } reportMatcher
Code	{ return new chromosomes () ; } reportMatcher
Distance : 5

47
Tree	{ return new chromosomes () ; } chrono
Code	{ return new chromosomes () ; } chrono
Distance : 5

48
Tree	{ return new chromosomes () ; } values
Code	{ return new chromosomes () ; } values
Distance : 5

49
Tree	{ return new chromosomes () ; } result
Code	{ return new chromosomes () ; } result
Distance : 5

50
Tree	{ return new chromosomes () ; } invocation
Code	{ return new chromosomes () ; } invocation
Distance : 5

51
Tree	{ return new chromosomes () ; } sqrt
Code	{ return new chromosomes () ; } sqrt
Distance : 5

52
Tree	{ return new chromosomes () ; } scope
Code	{ return new chromosomes () ; } scope
Distance : 5

53
Tree	{ return new chromosomes () ; } t
Code	{ return new chromosomes () ; } t
Distance : 5

54
Tree	{ return new chromosomes () ; } optimizer
Code	{ return new chromosomes () ; } optimizer
Distance : 5

55
Tree	{ return new chromosomes () ; } simpleMethod
Code	{ return new chromosomes () ; } simpleMethod
Distance : 5

56
Tree	{ return new chromosomes () ; } isBlock
Code	{ return new chromosomes () ; } isBlock
Distance : 5

57
Tree	{ return new chromosomes () ; } getArgumentMatcherStorage
Code	{ return new chromosomes () ; } getArgumentMatcherStorage
Distance : 5

58
Tree	{ return new chromosomes () ; } valueOf
Code	{ return new chromosomes () ; } valueOf
Distance : 5

59
Tree	{ return new chromosomes () ; } alpha
Code	{ return new chromosomes () ; } alpha
Distance : 5

60
Tree	{ return new chromosomes () ; } instance
Code	{ return new chromosomes () ; } instance
Distance : 5

61
Tree	{ return new chromosomes () ; } getField
Code	{ return new chromosomes () ; } getField
Distance : 5

62
Tree	{ return new chromosomes () ; } length
Code	{ return new chromosomes () ; } length
Distance : 5

63
Tree	{ return new chromosomes () ; } field
Code	{ return new chromosomes () ; } field
Distance : 5

64
Tree	{ return new chromosomes () ; } reportCodeChange
Code	{ return new chromosomes () ; } reportCodeChange
Distance : 5

65
Tree	{ return new chromosomes () ; } y
Code	{ return new chromosomes () ; } y
Distance : 5

66
Tree	{ return new chromosomes () ; } assertEquals
Code	{ return new chromosomes () ; } assertEquals
Distance : 5

67
Tree	{ return new chromosomes () ; } name
Code	{ return new chromosomes () ; } name
Distance : 5

68
Tree	{ return chromosomes . iterator ( chromosomes ) ; } notifyListeners
Code	{ return chromosomes . iterator ( chromosomes ) ; } notifyListeners
Distance : 6

69
Tree	{ return chromosomes . iterator ( chromosomes ) ; } checkArgument
Code	{ return chromosomes . iterator ( chromosomes ) ; } checkArgument
Distance : 6

70
Tree	{ return chromosomes . iterator ( chromosomes ) ; } name
Code	{ return chromosomes . iterator ( chromosomes ) ; } name
Distance : 6

71
Tree	{ return new chromosomes () ; }
Code	{ return new chromosomes () ; }
Distance : 4

72
Tree	{ return new chromosomes () ; } getFirstChild
Code	{ return new chromosomes () ; } getFirstChild
Distance : 5

73
Tree	{ return new chromosomes () ; } :
Code	{ return new chromosomes () ; } :
Distance : 5

74
Tree	{ return new chromosomes () ; } UnivariateFunction
Code	{ return new chromosomes () ; } UnivariateFunction
Distance : 5

75
Tree	{ return new chromosomes () ; } append
Code	{ return new chromosomes () ; } append
Distance : 5

76
Tree	{ return new chromosomes () ; } Args
Code	{ return new chromosomes () ; } Args
Distance : 5

77
Tree	{ return new chromosomes () ; } <>
Code	{ return new chromosomes () ; } <>
Distance : 5

78
Tree	{ return new chromosomes () ; } List
Code	{ return new chromosomes () ; } List
Distance : 5

79
Tree	{ return new chromosomes () ; } fail
Code	{ return new chromosomes () ; } fail
Distance : 5

80
Tree	{ return new chromosomes () ; } *
Code	{ return new chromosomes () ; } *
Distance : 5

81
Tree	{ return new chromosomes () ; } join
Code	{ return new chromosomes () ; } join
Distance : 5

82
Tree	{ return new chromosomes () ; } m
Code	{ return new chromosomes () ; } m
Distance : 5

83
Tree	{ return new chromosomes () ; } paint
Code	{ return new chromosomes () ; } paint
Distance : 5

84
Tree	{ return new chromosomes () ; } getInstance
Code	{ return new chromosomes () ; } getInstance
Distance : 5

85
Tree	{ return new chromosomes () ; } type
Code	{ return new chromosomes () ; } type
Distance : 5

86
Tree	{ return new chromosomes () ; } serialised
Code	{ return new chromosomes () ; } serialised
Distance : 5

87
Tree	{ return new chromosomes () ; } IllegalArgumentException
Code	{ return new chromosomes () ; } IllegalArgumentException
Distance : 5

88
Tree	{ return new chromosomes () ; } FastMath
Code	{ return new chromosomes () ; } FastMath
Distance : 5

89
Tree	{ return new chromosomes () ; } StringBuilder
Code	{ return new chromosomes () ; } StringBuilder
Distance : 5

90
Tree	{ return new chromosomes () ; } throws
Code	{ return new chromosomes () ; } throws
Distance : 5

91
Tree	{ return new chromosomes () ; } LanguageMode.ECMASCRIPT_2015
Code	{ return new chromosomes () ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

92
Tree	{ return new chromosomes () ; } traverseEs6
Code	{ return new chromosomes () ; } traverseEs6
Distance : 5

93
Tree	{ return new chromosomes () ; } stroke
Code	{ return new chromosomes () ; } stroke
Distance : 5

94
Tree	{ return new chromosomes () ; } obj
Code	{ return new chromosomes () ; } obj
Distance : 5

95
Tree	{ return new chromosomes () ; } s
Code	{ return new chromosomes () ; } s
Distance : 5

96
Tree	{ return new chromosomes () ; } returnZero
Code	{ return new chromosomes () ; } returnZero
Distance : 5

97
Tree	{ return new chromosomes () ; } sb
Code	{ return new chromosomes () ; } sb
Distance : 5

98
Tree	{ return new chromosomes () ; } setAcceptedLanguage
Code	{ return new chromosomes () ; } setAcceptedLanguage
Distance : 5

99
Tree	{ return new chromosomes () ; } assertThat
Code	{ return new chromosomes () ; } assertThat
Distance : 5

100
Tree	{ return new chromosomes () ; } getParent
Code	{ return new chromosomes () ; } getParent
Distance : 5

101
Tree	{ return chromosomes . getChromosomes ( chromosomes ) ; }
Code	{ return chromosomes . getChromosomes ( chromosomes ) ; }
Distance : 6

102
Tree	{ return chromosomes . getChromosomes () . getChromosomes () ; }
Code	{ return chromosomes . getChromosomes () . getChromosomes () ; }
Distance : 3

103
Tree	{ return ( chromosomes == null ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

104
Tree	{ return ( chromosomes == null ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

105
Tree	{ return ( chromosomes == null ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

106
Tree	{ return ( chromosomes == default: ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? null : chromosomes . iterator () ) ; }
Distance : 9

107
Tree	{ return chromosomes . getChromosomes ( chromosomes . iterator () ) ; }
Code	{ return chromosomes . getChromosomes ( chromosomes . iterator () ) ; }
Distance : 5

108
Tree	{ return ( chromosomes == super(); ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? super(); : chromosomes . iterator () ) ; }
Distance : 9

109
Tree	{ return ( chromosomes == super(); ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

110
Tree	{ return ( chromosomes == super(); ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? return; : chromosomes . iterator () ) ; }
Distance : 9

111
Tree	{ return ( chromosomes == return; ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? super(); : chromosomes . iterator () ) ; }
Distance : 9

112
Tree	{ return ( chromosomes == super(); ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? continue; : chromosomes . iterator () ) ; }
Distance : 9

113
Tree	{ return ( chromosomes == return; ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

114
Tree	{ return ( chromosomes == super(); ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? break; : chromosomes . iterator () ) ; }
Distance : 9

115
Tree	{ return ( chromosomes == return; ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? return; : chromosomes . iterator () ) ; }
Distance : 9

116
Tree	{ return ( chromosomes == return; ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? continue; : chromosomes . iterator () ) ; }
Distance : 9

117
Tree	{ return chromosomes . getChromosomes ( chromosomes . getChromosomes () ) ; }
Code	{ return chromosomes . getChromosomes ( chromosomes . getChromosomes () ) ; }
Distance : 6

118
Tree	{ return ( chromosomes == return; ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? break; : chromosomes . iterator () ) ; }
Distance : 9

119
Tree	{ return ( chromosomes == null ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

120
Tree	{ return ( chromosomes == continue; ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? super(); : chromosomes . iterator () ) ; }
Distance : 9

121
Tree	{ return ( chromosomes == continue; ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

122
Tree	{ return ( chromosomes == break; ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? null : chromosomes . iterator () ) ; }
Distance : 9

123
Tree	{ return ( chromosomes == break; ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? super(); : chromosomes . iterator () ) ; }
Distance : 9

124
Tree	{ return ( chromosomes == continue; ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? null : chromosomes . iterator () ) ; }
Distance : 9

125
Tree	{ return chromosomes . iterator ( chromosomes . getChromosomes () ) ; }
Code	{ return chromosomes . iterator ( chromosomes . getChromosomes () ) ; }
Distance : 7

126
Tree	{ return chromosomes . iterator () - NUMBER_CONSTANT ; }
Code	{ return chromosomes . iterator () - NUMBER_CONSTANT ; }
Distance : 4

127
Tree	{ return new chromosomes () ; } protected
Code	{ return new chromosomes () ; } protected
Distance : 5

128
Tree	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; }
Distance : 9

129
Tree	{ return ! chromosomes . iterator () ; }
Code	{ return ! chromosomes . iterator () ; }
Distance : 2

130
Tree	{ return ( chromosomes ) chromosomes . iterator () ; }
Code	{ return ( chromosomes ) chromosomes . iterator () ; }
Distance : 4

131
Tree	{ return chromosomes . iterator () . iterator () ; }
Code	{ return chromosomes . iterator () . iterator () ; }
Distance : 3

132
Tree	{ return chromosomes . iterator ( chromosomes ) ; }
Code	{ return chromosomes . iterator ( chromosomes ) ; }
Distance : 5

133
Tree	{ return chromosomes . getChromosomes () ; }
Code	{ return chromosomes . getChromosomes () ; }
Distance : 3

134
Tree	{ return ( chromosomes == null ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? super(); : chromosomes . iterator () ) ; }
Distance : 9

135
Tree	{ return chromosomes . getChromosomes () - NUMBER_CONSTANT ; }
Code	{ return chromosomes . getChromosomes () - NUMBER_CONSTANT ; }
Distance : 5

136
Tree	{ return chromosomes . iterator () . getChromosomes () ; }
Code	{ return chromosomes . iterator () . getChromosomes () ; }
Distance : 4

137
Tree	{ return ( chromosomes == null ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

138
Tree	{ return ( chromosomes == null ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? return; : chromosomes . iterator () ) ; }
Distance : 9

139
Tree	{ return ( chromosomes == null ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? continue; : chromosomes . iterator () ) ; }
Distance : 9

140
Tree	{ return ( chromosomes == null ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? break; : chromosomes . iterator () ) ; }
Distance : 9

141
Tree	{ return ! chromosomes . getChromosomes () ; }
Code	{ return ! chromosomes . getChromosomes () ; }
Distance : 3

142
Tree	{ return chromosomes . iterator ( chromosomes . iterator () ) ; }
Code	{ return chromosomes . iterator ( chromosomes . iterator () ) ; }
Distance : 6

143
Tree	{ return ( chromosomes ) chromosomes . getChromosomes () ; }
Code	{ return ( chromosomes ) chromosomes . getChromosomes () ; }
Distance : 5

144
Tree	{ return ( chromosomes == super(); ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? null : chromosomes . iterator () ) ; }
Distance : 9

145
Tree	{ return chromosomes . getChromosomes () . iterator () ; }
Code	{ return chromosomes . getChromosomes () . iterator () ; }
Distance : 2

146
Tree	{ return ( chromosomes == return; ? null : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? null : chromosomes . iterator () ) ; }
Distance : 9

147
Tree	{ return ( chromosomes == null ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == null ? default: : chromosomes . iterator () ) ; }
Distance : 9

148
Tree	{ return ( chromosomes == break; ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

149
Tree	{ return ( chromosomes == null ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == null ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

150
Tree	{ return ( chromosomes == continue; ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? continue; : chromosomes . iterator () ) ; }
Distance : 9

151
Tree	{ return ( chromosomes == continue; ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

152
Tree	{ return ( chromosomes == continue; ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

153
Tree	{ return ( chromosomes == break; ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

154
Tree	{ return ( chromosomes == break; ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

155
Tree	{ return ( chromosomes == default: ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? default: : chromosomes . iterator () ) ; }
Distance : 9

156
Tree	{ return ( chromosomes == break; ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

157
Tree	{ return ( chromosomes == super(); ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

158
Tree	{ return ( chromosomes == return; ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

159
Tree	{ return ( chromosomes == continue; ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

160
Tree	{ return ( chromosomes == default: ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

161
Tree	{ return ( chromosomes == continue; ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

162
Tree	{ return ( chromosomes == break; ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

163
Tree	{ return ( chromosomes == default: ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

164
Tree	{ return ( chromosomes == default: ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

165
Tree	{ return ( chromosomes == default: ? default: : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? default: : chromosomes . getChromosomes () ) ; }
Distance : 10

166
Tree	{ return new chromosomes () ; } static
Code	{ return new chromosomes () ; } static
Distance : 5

167
Tree	{ return new chromosomes () ; } invocations
Code	{ return new chromosomes () ; } invocations
Distance : 5

168
Tree	{ return new chromosomes () ; } Invocation
Code	{ return new chromosomes () ; } Invocation
Distance : 5

169
Tree	{ return new chromosomes () ; } equals
Code	{ return new chromosomes () ; } equals
Distance : 5

170
Tree	{ return new chromosomes () ; } index
Code	{ return new chromosomes () ; } index
Distance : 5

171
Tree	{ return ( chromosomes == continue; ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? return; : chromosomes . iterator () ) ; }
Distance : 9

172
Tree	{ return new chromosomes () ; } setUp
Code	{ return new chromosomes () ; } setUp
Distance : 5

173
Tree	{ return ( chromosomes == default: ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

174
Tree	{ return ( chromosomes == break; ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == break; ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

175
Tree	{ return new chromosomes () ; } node
Code	{ return new chromosomes () ; } node
Distance : 5

176
Tree	{ return ( chromosomes == return; ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

177
Tree	{ return ( chromosomes == continue; ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == continue; ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

178
Tree	{ return ( chromosomes == break; ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? return; : chromosomes . iterator () ) ; }
Distance : 9

179
Tree	{ return ( chromosomes == break; ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? continue; : chromosomes . iterator () ) ; }
Distance : 9

180
Tree	{ return ( chromosomes == break; ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? break; : chromosomes . iterator () ) ; }
Distance : 9

181
Tree	{ return ( chromosomes == super(); ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == super(); ? default: : chromosomes . iterator () ) ; }
Distance : 9

182
Tree	{ return ( chromosomes == return; ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == return; ? default: : chromosomes . iterator () ) ; }
Distance : 9

183
Tree	{ return ( chromosomes == continue; ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? default: : chromosomes . iterator () ) ; }
Distance : 9

184
Tree	{ return ( chromosomes == default: ? super(); : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? super(); : chromosomes . iterator () ) ; }
Distance : 9

185
Tree	{ return ( chromosomes == default: ? null : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == default: ? null : chromosomes . getChromosomes () ) ; }
Distance : 10

186
Tree	{ return ( chromosomes == break; ? default: : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == break; ? default: : chromosomes . iterator () ) ; }
Distance : 9

187
Tree	{ return ( chromosomes == continue; ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == continue; ? break; : chromosomes . iterator () ) ; }
Distance : 9

188
Tree	{ return ( chromosomes == default: ? continue; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? continue; : chromosomes . iterator () ) ; }
Distance : 9

189
Tree	{ return ( chromosomes == default: ? break; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? break; : chromosomes . iterator () ) ; }
Distance : 9

190
Tree	{ return ( chromosomes == super(); ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

191
Tree	{ return ( chromosomes == super(); ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

192
Tree	{ return ( chromosomes == return; ? super(); : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? super(); : chromosomes . getChromosomes () ) ; }
Distance : 10

193
Tree	{ return ( chromosomes == super(); ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

194
Tree	{ return ( chromosomes == super(); ? break; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == super(); ? break; : chromosomes . getChromosomes () ) ; }
Distance : 10

195
Tree	{ return ( chromosomes == return; ? return; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? return; : chromosomes . getChromosomes () ) ; }
Distance : 10

196
Tree	{ return ( chromosomes == return; ? continue; : chromosomes . getChromosomes () ) ; }
Code	{ return ( chromosomes == return; ? continue; : chromosomes . getChromosomes () ) ; }
Distance : 10

197
Tree	{ return ( chromosomes == default: ? return; : chromosomes . iterator () ) ; }
Code	{ return ( chromosomes == default: ? return; : chromosomes . iterator () ) ; }
Distance : 9

198
Tree	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; } {
Code	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; } {
Distance : 10

199
Tree	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; } void
Code	{ return ( chromosomes == null ? null : chromosomes . iterator () ) ; } void
Distance : 10

========================================================================


========================================================================
Example Number: 73
Parent Code is: 
if ( Precision . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( Precision . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=maxUlps}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (32 (800{val=Precision}) (235{val=.}) (802{val=compareTo}) (214{val=(}) (800{val=entry}) (234{val=,}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (800{val=epsilon}) (215{val=)})) (231{val=>}) (34{val=NUMBER_CONSTANT})) (215{val=)}) (8 (218{val={}) (21 (32 (800{val=columnsToDrop}) (235{val=.}) (802{val=add}) (214{val=(}) (800{val=i}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/33/parent/src_main_java_org_apache_commons_math3_optimization_linear_SimplexTableau.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 5

1
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , LangVersion.TYPESCRIPT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , LangVersion.TYPESCRIPT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

2
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , GoalType.MINIMIZE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , GoalType.MINIMIZE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

3
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.DECLARE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.DECLARE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

4
Tree	if ( entry . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( entry . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 3

5
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , newEnd ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , newEnd ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

6
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 4

7
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , startMillis ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , startMillis ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

8
Tree	if ( Precision . compareTo ( i , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( i , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

9
Tree	if ( entry . compareTo ( entry , NUMBER_CONSTANT , columnsToDrop ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( entry , NUMBER_CONSTANT , columnsToDrop ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

10
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , cutOff ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , cutOff ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 5

11
Tree	if ( i . compareTo ( entry , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( i . compareTo ( entry , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

12
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , MathUtils.TWO_PI ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , MathUtils.TWO_PI ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

13
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , current.parent.scopes ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , current.parent.scopes ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

14
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , OrderDirection.INCREASING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , OrderDirection.INCREASING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

15
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , CombinatoricsUtils ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , CombinatoricsUtils ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

16
Tree	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , i ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , i ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 2

17
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , CheckLevel.OFF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , CheckLevel.OFF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

18
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , knots.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , knots.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

19
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , importedName.value ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , importedName.value ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

20
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , obj2.props ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , obj2.props ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

21
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , GoalType.MINIMIZE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , GoalType.MINIMIZE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

22
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , PivotSelectionRule.BLAND ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , PivotSelectionRule.BLAND ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

23
Tree	if ( maxUlps . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( maxUlps . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

24
Tree	if ( entry . compareTo ( entry , this . maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( entry , this . maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 5

25
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , obj2.props ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , obj2.props ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

26
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , importedName.value ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , importedName.value ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

27
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , LanguageMode.ECMASCRIPT5_STRICT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , LanguageMode.ECMASCRIPT5_STRICT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

28
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , isNativeType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , isNativeType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

29
Tree	if ( entry . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 2

30
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , googFooGetprop2ObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , googFooGetprop2ObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

31
Tree	if ( entry . compareTo ( maxUlps , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( maxUlps , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

32
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , MathUtils.TWO_PI ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , MathUtils.TWO_PI ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

33
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Long.MAX_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Long.MAX_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

34
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , current.parent.scopes ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , current.parent.scopes ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

35
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Calendar.DECEMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Calendar.DECEMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

36
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , OrderDirection.INCREASING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , OrderDirection.INCREASING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

37
Tree	if ( columnsToDrop . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( columnsToDrop . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

38
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , month ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , month ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

39
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 5

40
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , rsl ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , rsl ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

41
Tree	if ( i . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( i . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 3

42
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Calendar.OCTOBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Calendar.OCTOBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

43
Tree	if ( entry . compareTo ( null , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( null , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

44
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , CheckLevel.OFF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , CheckLevel.OFF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

45
Tree	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , epsilon ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 1

46
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , currentCase.mayFallThrough ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , currentCase.mayFallThrough ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

47
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.MODULE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.MODULE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

48
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , getNativeObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , getNativeObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

49
Tree	if ( compareTo ( entry . compareTo ( entry , NUMBER_CONSTANT , entry ) , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( compareTo ( entry . compareTo ( entry , NUMBER_CONSTANT , entry ) , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 7

50
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , wrapper ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , wrapper ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

51
Tree	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 6

52
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , GlobalTypeInfoCollector.CTOR_IN_DIFFERENT_SCOPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , GlobalTypeInfoCollector.CTOR_IN_DIFFERENT_SCOPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

53
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , cutOff ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , cutOff ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 4

54
Tree	if ( entry . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( i ) ; }
Code	if ( entry . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( i ) ; }
Distance : 7

55
Tree	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( entry ) ; }
Code	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( entry ) ; }
Distance : 7

56
Tree	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( entry ) ; }
Code	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( entry ) ; }
Distance : 6

57
Tree	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( epsilon ) ; }
Code	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( epsilon ) ; }
Distance : 7

58
Tree	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Code	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Distance : 7

59
Tree	if ( add ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Code	if ( add ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Distance : 8

60
Tree	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( i ) ; }
Code	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( i ) ; }
Distance : 6

61
Tree	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Code	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Distance : 6

62
Tree	if ( i . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( i . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

63
Tree	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( Precision ) ; }
Code	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( Precision ) ; }
Distance : 6

64
Tree	if ( entry . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Code	if ( entry . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Distance : 6

65
Tree	if ( i . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( i . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

66
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( columnsToDrop ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( columnsToDrop ) ; }
Distance : 6

67
Tree	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( Precision ) ; }
Code	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( Precision ) ; }
Distance : 7

68
Tree	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . compareTo ( i ) ; }
Code	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { entry . compareTo ( i ) ; }
Distance : 7

69
Tree	if ( add ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Code	if ( add ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Distance : 8

70
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( entry ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( entry ) ; }
Distance : 5

71
Tree	if ( epsilon . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( columnsToDrop ) ; }
Code	if ( epsilon . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( columnsToDrop ) ; }
Distance : 6

72
Tree	if ( Precision . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( columnsToDrop ) ; }
Code	if ( Precision . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( columnsToDrop ) ; }
Distance : 5

73
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( Precision ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( Precision ) ; }
Distance : 5

74
Tree	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Code	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( maxUlps ) ; }
Distance : 6

75
Tree	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( columnsToDrop ) ; }
Code	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( columnsToDrop ) ; }
Distance : 6

76
Tree	if ( entry . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( entry ) ; }
Code	if ( entry . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( entry ) ; }
Distance : 7

77
Tree	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( maxUlps ) ; }
Code	if ( maxUlps . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( maxUlps ) ; }
Distance : 6

78
Tree	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( columnsToDrop ) ; }
Code	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( columnsToDrop ) ; }
Distance : 6

79
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( epsilon ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( epsilon ) ; }
Distance : 5

80
Tree	if ( Precision . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( maxUlps ) ; }
Code	if ( Precision . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( maxUlps ) ; }
Distance : 6

81
Tree	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( maxUlps ) ; }
Code	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( maxUlps ) ; }
Distance : 7

82
Tree	if ( entry . compareTo ( default: , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( default: , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

83
Tree	if ( columnsToDrop . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( columnsToDrop . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 5

84
Tree	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( entry ) ; }
Code	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( entry ) ; }
Distance : 7

85
Tree	if ( entry . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( columnsToDrop ) ; }
Code	if ( entry . add ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( columnsToDrop ) ; }
Distance : 6

86
Tree	if ( entry . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( entry . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 6

87
Tree	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( i ) ; }
Code	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( i ) ; }
Distance : 6

88
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( Precision ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . add ( Precision ) ; }
Distance : 6

89
Tree	if ( Precision . compareTo ( super(); , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Code	if ( Precision . compareTo ( super(); , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Distance : 5

90
Tree	if ( columnsToDrop . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( columnsToDrop ) ; }
Code	if ( columnsToDrop . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( columnsToDrop ) ; }
Distance : 7

91
Tree	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( epsilon ) ; }
Code	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( epsilon ) ; }
Distance : 7

92
Tree	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( epsilon ) ; }
Code	if ( columnsToDrop . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( epsilon ) ; }
Distance : 6

93
Tree	if ( columnsToDrop . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( columnsToDrop . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 5

94
Tree	if ( Precision . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( entry ) ; }
Code	if ( Precision . add ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( entry ) ; }
Distance : 6

95
Tree	if ( entry . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( entry . compareTo ( return; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 6

96
Tree	if ( epsilon . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( i ) ; }
Code	if ( epsilon . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( i ) ; }
Distance : 5

97
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . compareTo ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { entry . compareTo ( i ) ; }
Distance : 5

98
Tree	if ( columnsToDrop . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( columnsToDrop . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 5

99
Tree	if ( entry . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( entry . compareTo ( break; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 6

100
Tree	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Code	if ( i . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( entry ) ; }
Distance : 7

101
Tree	if ( entry . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Code	if ( entry . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Distance : 6

102
Tree	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( i ) ; }
Code	if ( maxUlps . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( i ) ; }
Distance : 7

103
Tree	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( maxUlps ) ; }
Code	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . compareTo ( maxUlps ) ; }
Distance : 7

104
Tree	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( epsilon ) ; }
Code	if ( epsilon . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( epsilon ) ; }
Distance : 6

105
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( maxUlps ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { i . add ( maxUlps ) ; }
Distance : 6

106
Tree	if ( entry . compareTo ( super(); , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( entry ) ; }
Code	if ( entry . compareTo ( super(); , STRING_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( entry ) ; }
Distance : 6

107
Tree	if ( i . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( i . compareTo ( continue; , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

108
Tree	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , columnsToDrop ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , columnsToDrop ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 1

109
Tree	if ( entry . compareTo ( entry , this . entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( entry , this . entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

110
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , defineSlot ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , defineSlot ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

111
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , seed.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , seed.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

112
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , LocalizedFormats.INTERNAL_ERROR ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , LocalizedFormats.INTERNAL_ERROR ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

113
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Entities.ISO8859_1_ARRAY_LENGTH ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Entities.ISO8859_1_ARRAY_LENGTH ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

114
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , standardDeviation.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , standardDeviation.length ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

115
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , var.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , var.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

116
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

117
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , ExpansionMode.MULTIPLICATIVE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , ExpansionMode.MULTIPLICATIVE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

118
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , StepNormalizerMode.MULTIPLES ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , StepNormalizerMode.MULTIPLES ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

119
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , googFooGetprop2ObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , googFooGetprop2ObjectType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

120
Tree	if ( Precision . compareTo ( maxUlps , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( maxUlps , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

121
Tree	if ( maxUlps . compareTo ( entry , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( maxUlps . compareTo ( entry , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

122
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , Long.MAX_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , Long.MAX_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

123
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , anchorY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , anchorY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

124
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , Calendar.DECEMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , Calendar.DECEMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

125
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , ResizableDoubleArray.ExpansionMode.ADDITIVE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , ResizableDoubleArray.ExpansionMode.ADDITIVE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

126
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , oldMockHandler.mockSettings ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , oldMockHandler.mockSettings ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

127
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , resolve ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , resolve ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

128
Tree	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( i . compareTo ( NUMBER_CONSTANT , NUMBER_CONSTANT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

129
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , export.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , export.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

130
Tree	if ( entry . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

131
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , month ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , month ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

132
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , initialCapacity ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , initialCapacity ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

133
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , rsl ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , rsl ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

134
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , that.formatter ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , that.formatter ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

135
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , options.inlineLocalFunctions ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , options.inlineLocalFunctions ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

136
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

137
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , NUMBER_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

138
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , oldMockHandler.matchersBinder ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , oldMockHandler.matchersBinder ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

139
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , isNativeType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , isNativeType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

140
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , pair.env ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , pair.env ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

141
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , subSuperMap ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , subSuperMap ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

142
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , reporterStub.previousLocation ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , reporterStub.previousLocation ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

143
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , round ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , round ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

144
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , reporterStub ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , reporterStub ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

145
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , allInvocations ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , allInvocations ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

146
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , flags.emitUseStrict ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , flags.emitUseStrict ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

147
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Config.RunMode.KEEP_GOING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Config.RunMode.KEEP_GOING ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

148
Tree	if ( Precision . compareTo ( entry , this . entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , this . entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

149
Tree	if ( entry . compareTo ( i , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( i , NUMBER_CONSTANT , entry ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

150
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , initialNorm ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , initialNorm ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

151
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , calculateValueNoINF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , calculateValueNoINF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

152
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , TokenType.TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

153
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , displayOffset ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , displayOffset ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

154
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , that.id ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , that.id ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

155
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , Float.MIN_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , Float.MIN_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

156
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , TextBlock ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , TextBlock ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

157
Tree	if ( Precision . compareTo ( entry , this . epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , this . epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

158
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Color.ORANGE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Color.ORANGE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

159
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , CHAR_COPY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , CHAR_COPY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

160
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , that.obj ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , that.obj ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

161
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , ReadableIntervalConverter.INSTANCE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , ReadableIntervalConverter.INSTANCE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

162
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , defineSlot ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , defineSlot ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

163
Tree	if ( entry . compareTo ( null , i ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( null , i ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

164
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Color.green ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Color.green ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

165
Tree	if ( i . compareTo ( entry , NUMBER_CONSTANT , i ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( i . compareTo ( entry , NUMBER_CONSTANT , i ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 2

166
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , CONFLICTING_EXTENDED_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , CONFLICTING_EXTENDED_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

167
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , LangVersion.TYPESCRIPT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , LangVersion.TYPESCRIPT ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

168
Tree	if ( Precision . compareTo ( entry , this . maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , this . maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 4

169
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Dfp.INFINITE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Dfp.INFINITE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

170
Tree	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Code	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { Precision . add ( i ) ; }
Distance : 6

171
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , current.parent ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , current.parent ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

172
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , chrono.MILLIS_PER_DAY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , chrono.MILLIS_PER_DAY ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

173
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , DoesNothing ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , DoesNothing ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

174
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Percentile.EstimationType.R_9 ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Percentile.EstimationType.R_9 ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

175
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , getNativeNumberType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , getNativeNumberType ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

176
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , TokenType.DECLARE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , TokenType.DECLARE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

177
Tree	if ( entry . compareTo ( null , epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( null , epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

178
Tree	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Code	if ( Precision . compareTo ( entry , NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { epsilon . add ( i ) ; }
Distance : 2

179
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , ConstructorStrategy.Default.IMITATE_SUPER_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , ConstructorStrategy.Default.IMITATE_SUPER_TYPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

180
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

181
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , newEnd ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , newEnd ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

182
Tree	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( null , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

183
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , var.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , var.scope ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

184
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , startMillis ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , startMillis ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

185
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , LocalizedFormats.INTERNAL_ERROR ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , LocalizedFormats.INTERNAL_ERROR ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

186
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , options.inlineLocalFunctions ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , options.inlineLocalFunctions ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

187
Tree	if ( entry . compareTo ( entry , this . epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( entry , this . epsilon ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

188
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , Float.MIN_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , Float.MIN_VALUE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

189
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , calculateValueNoINF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , calculateValueNoINF ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

190
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 5

191
Tree	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( epsilon ) ; }
Code	if ( compareTo ( STRING_CONSTANT , STRING_CONSTANT , STRING_CONSTANT ) > NUMBER_CONSTANT ) { maxUlps . compareTo ( epsilon ) ; }
Distance : 8

192
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , that.defaultGroup ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , that.defaultGroup ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

193
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , l40 ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , l40 ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

194
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , GlobalTypeInfoCollector.CTOR_IN_DIFFERENT_SCOPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , GlobalTypeInfoCollector.CTOR_IN_DIFFERENT_SCOPE ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

195
Tree	if ( entry . compareTo ( null , entry ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( entry . compareTo ( null , entry ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 6

196
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , isObjLit ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , isObjLit ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

197
Tree	if ( Precision . compareTo ( NUMBER_CONSTANT , Calendar.OCTOBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( Precision . compareTo ( NUMBER_CONSTANT , Calendar.OCTOBER ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 3

198
Tree	if ( Precision . compareTo ( null , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Code	if ( Precision . compareTo ( null , maxUlps ) > NUMBER_CONSTANT ) { maxUlps . add ( i ) ; }
Distance : 5

199
Tree	if ( entry . compareTo ( NUMBER_CONSTANT , options.removeUnusedVars ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Code	if ( entry . compareTo ( NUMBER_CONSTANT , options.removeUnusedVars ) > NUMBER_CONSTANT ) { columnsToDrop . add ( i ) ; }
Distance : 4

========================================================================


========================================================================
Example Number: 74
Parent Code is: 
final int n1n2prod = n1 * n2 ;
-------------------------------------------------------------------------------
Child code is: 
final double n1n2prod = n1 * n2 ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=int}) (59 (800{val=n1n2prod}) (204{val==}) (27 (800{val=n1}) (202{val=*}) (800{val=n2}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (83{val=final}) (39{val=double}) (59 (800{val=n1n2prod}) (204{val==}) (27 (800{val=n1}) (202{val=*}) (800{val=n2}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/30/parent/src_main_java_org_apache_commons_math3_stat_inference_MannWhitneyUTest.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Correct
========================================================================
True

0
Tree	final int n1n2prod = ( long ) n1 * n2 ;
Code	final int n1n2prod = ( long ) n1 * n2 ;
Distance : 4

1
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * FastMath.PI ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * FastMath.PI ;
Distance : 6

2
Tree	final int n1n2prod = NUMBER_CONSTANT * Precision.EPSILON ;
Code	final int n1n2prod = NUMBER_CONSTANT * Precision.EPSILON ;
Distance : 3

3
Tree	final int n1 = n1 + NUMBER_CONSTANT ;
Code	final int n1 = n1 + NUMBER_CONSTANT ;
Distance : 4

4
Tree	final int n1n2prod = NUMBER_CONSTANT * Calendar.HOUR_OF_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * Calendar.HOUR_OF_DAY ;
Distance : 3

5
Tree	final int n1n2prod = NUMBER_CONSTANT * Calendar.YEAR ;
Code	final int n1n2prod = NUMBER_CONSTANT * Calendar.YEAR ;
Distance : 3

6
Tree	final int n1n2prod = NUMBER_CONSTANT * compiler.functionNames ;
Code	final int n1n2prod = NUMBER_CONSTANT * compiler.functionNames ;
Distance : 3

7
Tree	final int n1n2prod = NUMBER_CONSTANT * Color.BLACK ;
Code	final int n1n2prod = NUMBER_CONSTANT * Color.BLACK ;
Distance : 3

8
Tree	final int n1 = ( int ) n2 * n2 ;
Code	final int n1 = ( int ) n2 * n2 ;
Distance : 6

9
Tree	final int n1n2prod = NUMBER_CONSTANT * IncrementalCheckMode.OFF ;
Code	final int n1n2prod = NUMBER_CONSTANT * IncrementalCheckMode.OFF ;
Distance : 3

10
Tree	final int n1n2prod = NUMBER_CONSTANT * plane.w ;
Code	final int n1n2prod = NUMBER_CONSTANT * plane.w ;
Distance : 3

11
Tree	final int n1n2prod = NUMBER_CONSTANT * compiler.globalTypeInfo ;
Code	final int n1n2prod = NUMBER_CONSTANT * compiler.globalTypeInfo ;
Distance : 3

12
Tree	final int n1n2prod = NUMBER_CONSTANT * rhs.b ;
Code	final int n1n2prod = NUMBER_CONSTANT * rhs.b ;
Distance : 3

13
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * PropertyCollapseLevel.NONE ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * PropertyCollapseLevel.NONE ;
Distance : 6

14
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * DateUtils.MILLIS_PER_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * DateUtils.MILLIS_PER_DAY ;
Distance : 6

15
Tree	final int n1n2prod = n1 - scale [ n2 ] ;
Code	final int n1n2prod = n1 - scale [ n2 ] ;
Distance : 5

16
Tree	final int n1n2prod = NUMBER_CONSTANT * TransformType.INVERSE ;
Code	final int n1n2prod = NUMBER_CONSTANT * TransformType.INVERSE ;
Distance : 3

17
Tree	final int n1n2prod = NUMBER_CONSTANT * HEX_40000000 ;
Code	final int n1n2prod = NUMBER_CONSTANT * HEX_40000000 ;
Distance : 3

18
Tree	final byte n1n2prod = ( long ) n1 * n2 ;
Code	final byte n1n2prod = ( long ) n1 * n2 ;
Distance : 4

19
Tree	final int n1n2prod = NUMBER_CONSTANT * Token.AND ;
Code	final int n1n2prod = NUMBER_CONSTANT * Token.AND ;
Distance : 3

20
Tree	final int n2 = ( long ) n2 * n1 ;
Code	final int n2 = ( long ) n2 * n1 ;
Distance : 7

21
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * TypeCache.Sort.SOFT ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * TypeCache.Sort.SOFT ;
Distance : 6

22
Tree	final int n1n2prod = NUMBER_CONSTANT * x.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * x.length ;
Distance : 3

23
Tree	final int n1n2prod = NUMBER_CONSTANT * Year.MAXIMUM_YEAR ;
Code	final int n1n2prod = NUMBER_CONSTANT * Year.MAXIMUM_YEAR ;
Distance : 3

24
Tree	final int n1n2prod = NUMBER_CONSTANT * line.originOffset ;
Code	final int n1n2prod = NUMBER_CONSTANT * line.originOffset ;
Distance : 3

25
Tree	final int n1n2prod = NUMBER_CONSTANT * a.dfbg ;
Code	final int n1n2prod = NUMBER_CONSTANT * a.dfbg ;
Distance : 3

26
Tree	final double n1n2prod = n1 * n1 ;
Code	final double n1n2prod = n1 * n1 ;
Distance : 1

27
Tree	final int n1n2prod = NUMBER_CONSTANT * getHistogram2 ;
Code	final int n1n2prod = NUMBER_CONSTANT * getHistogram2 ;
Distance : 3

28
Tree	final int n1n2prod = NUMBER_CONSTANT * P ;
Code	final int n1n2prod = NUMBER_CONSTANT * P ;
Distance : 3

29
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * IncrementalCheckMode.GENERATE_IJS ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * IncrementalCheckMode.GENERATE_IJS ;
Distance : 6

30
Tree	final int n1n2prod = n1 - R [ n2 ] ;
Code	final int n1n2prod = n1 - R [ n2 ] ;
Distance : 5

31
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * v2.data.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * v2.data.length ;
Distance : 6

32
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * rhs.b ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * rhs.b ;
Distance : 6

33
Tree	final int n1n2prod = NUMBER_CONSTANT * SimplexSolver.DEFAULT_CUT_OFF ;
Code	final int n1n2prod = NUMBER_CONSTANT * SimplexSolver.DEFAULT_CUT_OFF ;
Distance : 3

34
Tree	final byte n1n2prod = ( int ) n1 * n2 ;
Code	final byte n1n2prod = ( int ) n1 * n2 ;
Distance : 4

35
Tree	final int n1n2prod = NUMBER_CONSTANT * mant.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * mant.length ;
Distance : 3

36
Tree	final int n1 = ( long ) n2 * n2 ;
Code	final int n1 = ( long ) n2 * n2 ;
Distance : 6

37
Tree	final int n1n2prod = NUMBER_CONSTANT * n1 * n1 * currentState.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n1 * n1 * currentState.length ;
Distance : 6

38
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * f.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * f.length ;
Distance : 6

39
Tree	final int n1n2prod = n1 - tol [ n2 ] ;
Code	final int n1n2prod = n1 - tol [ n2 ] ;
Distance : 5

40
Tree	final int n2 = n2 * n1 ;
Code	final int n2 = n2 * n1 ;
Distance : 4

41
Tree	final int n1n2prod = NUMBER_CONSTANT * GoalType.MAXIMIZE ;
Code	final int n1n2prod = NUMBER_CONSTANT * GoalType.MAXIMIZE ;
Distance : 3

42
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * DateTimeConstants.MILLIS_PER_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * DateTimeConstants.MILLIS_PER_DAY ;
Distance : 6

43
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.EULER_ANGLES_SINGULARITY ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.EULER_ANGLES_SINGULARITY ;
Distance : 3

44
Tree	abstract int n1n2prod = ( long ) n1 * n2 ;
Code	abstract int n1n2prod = ( long ) n1 * n2 ;
Distance : 5

45
Tree	final int n1n2prod = NUMBER_CONSTANT * Boolean.FALSE ;
Code	final int n1n2prod = NUMBER_CONSTANT * Boolean.FALSE ;
Distance : 3

46
Tree	final int n1n2prod = NUMBER_CONSTANT * v.data ;
Code	final int n1n2prod = NUMBER_CONSTANT * v.data ;
Distance : 3

47
Tree	final double n1n2prod = n2 * n2 ;
Code	final double n1n2prod = n2 * n2 ;
Distance : 1

48
Tree	final int n2 = n1 * n2 / n2 ;
Code	final int n2 = n1 * n2 / n2 ;
Distance : 4

49
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_LARGE ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_LARGE ;
Distance : 3

50
Tree	final int n1n2prod = NUMBER_CONSTANT * LazyHolder.INSTANCE ;
Code	final int n1n2prod = NUMBER_CONSTANT * LazyHolder.INSTANCE ;
Distance : 3

51
Tree	final int n1n2prod = NUMBER_CONSTANT * GoalType.MINIMIZE ;
Code	final int n1n2prod = NUMBER_CONSTANT * GoalType.MINIMIZE ;
Distance : 3

52
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * tx.amount ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * tx.amount ;
Distance : 6

53
Tree	static int n1n2prod = ( long ) n1 * n2 ;
Code	static int n1n2prod = ( long ) n1 * n2 ;
Distance : 5

54
Tree	final int n1n2prod = ( char ) n2 * n2 ;
Code	final int n1n2prod = ( char ) n2 * n2 ;
Distance : 5

55
Tree	final int n1n2prod = NUMBER_CONSTANT * Font ;
Code	final int n1n2prod = NUMBER_CONSTANT * Font ;
Distance : 3

56
Tree	final int n1n2prod = NUMBER_CONSTANT * Cartesian3D.NaN ;
Code	final int n1n2prod = NUMBER_CONSTANT * Cartesian3D.NaN ;
Distance : 3

57
Tree	final int n1n2prod = NUMBER_CONSTANT * Ref.Type.ALIASING_GET ;
Code	final int n1n2prod = NUMBER_CONSTANT * Ref.Type.ALIASING_GET ;
Distance : 3

58
Tree	final int n2 = n1 > > NUMBER_CONSTANT ;
Code	final int n2 = n1 > > NUMBER_CONSTANT ;
Distance : 5

59
Tree	final long n1n2prod = ( int ) n1 * n2 ;
Code	final long n1n2prod = ( int ) n1 * n2 ;
Distance : 4

60
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Reach.NONE ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Reach.NONE ;
Distance : 6

61
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * RotationConvention.FRAME_TRANSFORM ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * RotationConvention.FRAME_TRANSFORM ;
Distance : 6

62
Tree	final double n1n2prod = ( long ) n2 * n2 ;
Code	final double n1n2prod = ( long ) n2 * n2 ;
Distance : 4

63
Tree	final int n1n2prod = NUMBER_CONSTANT * FunctionFlavor.GENERATOR ;
Code	final int n1n2prod = NUMBER_CONSTANT * FunctionFlavor.GENERATOR ;
Distance : 3

64
Tree	final int n1n2prod = NUMBER_CONSTANT * getBase ;
Code	final int n1n2prod = NUMBER_CONSTANT * getBase ;
Distance : 3

65
Tree	final int n1n2prod = NUMBER_CONSTANT * ScalarPointValuePair ;
Code	final int n1n2prod = NUMBER_CONSTANT * ScalarPointValuePair ;
Distance : 3

66
Tree	final int n1n2prod = NUMBER_CONSTANT * ImmutableSet.Builder ;
Code	final int n1n2prod = NUMBER_CONSTANT * ImmutableSet.Builder ;
Distance : 3

67
Tree	final int n1n2prod = NUMBER_CONSTANT * createLong ;
Code	final int n1n2prod = NUMBER_CONSTANT * createLong ;
Distance : 3

68
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.DIMENSIONS_MISMATCH ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.DIMENSIONS_MISMATCH ;
Distance : 3

69
Tree	final int n1n2prod = NUMBER_CONSTANT * RotationConvention.FRAME_TRANSFORM ;
Code	final int n1n2prod = NUMBER_CONSTANT * RotationConvention.FRAME_TRANSFORM ;
Distance : 3

70
Tree	final int n1n2prod = NUMBER_CONSTANT * reflectUpToClass ;
Code	final int n1n2prod = NUMBER_CONSTANT * reflectUpToClass ;
Distance : 3

71
Tree	final byte n1n2prod = n1 * n2 ;
Code	final byte n1n2prod = n1 * n2 ;
Distance : 1

72
Tree	final int n1n2prod = NUMBER_CONSTANT * Coordinates3D.NaN ;
Code	final int n1n2prod = NUMBER_CONSTANT * Coordinates3D.NaN ;
Distance : 3

73
Tree	final int n1n2prod = NUMBER_CONSTANT * Long.MAX_VALUE ;
Code	final int n1n2prod = NUMBER_CONSTANT * Long.MAX_VALUE ;
Distance : 3

74
Tree	final int n1n2prod = NUMBER_CONSTANT * GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ;
Code	final int n1n2prod = NUMBER_CONSTANT * GammaDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ;
Distance : 3

75
Tree	final int n1n2prod = NUMBER_CONSTANT * SubHyperplane ;
Code	final int n1n2prod = NUMBER_CONSTANT * SubHyperplane ;
Distance : 3

76
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Precision.EPSILON ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Precision.EPSILON ;
Distance : 6

77
Tree	final int n1n2prod = NUMBER_CONSTANT * matchesObjectContext ;
Code	final int n1n2prod = NUMBER_CONSTANT * matchesObjectContext ;
Distance : 3

78
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * System.out ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * System.out ;
Distance : 6

79
Tree	final int n1n2prod = NUMBER_CONSTANT * Reach.NONE ;
Code	final int n1n2prod = NUMBER_CONSTANT * Reach.NONE ;
Distance : 3

80
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * mant.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * mant.length ;
Distance : 6

81
Tree	final int n1n2prod = NUMBER_CONSTANT * getBounds2D ;
Code	final int n1n2prod = NUMBER_CONSTANT * getBounds2D ;
Distance : 3

82
Tree	final int n2 = ( int ) n2 * n1 ;
Code	final int n2 = ( int ) n2 * n1 ;
Distance : 7

83
Tree	final int n2 = n1 - n2 [ n2 ] ;
Code	final int n2 = n1 - n2 [ n2 ] ;
Distance : 6

84
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * CheckLevel.OFF ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * CheckLevel.OFF ;
Distance : 6

85
Tree	final int n1n2prod = NUMBER_CONSTANT * RandomSource.TWO_CMRES ;
Code	final int n1n2prod = NUMBER_CONSTANT * RandomSource.TWO_CMRES ;
Distance : 3

86
Tree	final int n1n2prod = NUMBER_CONSTANT * Verification.EXPLICIT ;
Code	final int n1n2prod = NUMBER_CONSTANT * Verification.EXPLICIT ;
Distance : 3

87
Tree	final int n1n2prod = NUMBER_CONSTANT * TimeUnit.HOURS ;
Code	final int n1n2prod = NUMBER_CONSTANT * TimeUnit.HOURS ;
Distance : 3

88
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * sample1.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * sample1.length ;
Distance : 6

89
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED ;
Distance : 6

90
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Color.BLUE ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Color.BLUE ;
Distance : 6

91
Tree	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * Vector1D.ZERO ;
Code	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * Vector1D.ZERO ;
Distance : 5

92
Tree	final int n1n2prod = ( double ) n2 * n2 ;
Code	final int n1n2prod = ( double ) n2 * n2 ;
Distance : 5

93
Tree	final int n1n2prod = NUMBER_CONSTANT * interceptors.target ;
Code	final int n1n2prod = NUMBER_CONSTANT * interceptors.target ;
Distance : 3

94
Tree	final int n1n2prod = NUMBER_CONSTANT * R ;
Code	final int n1n2prod = NUMBER_CONSTANT * R ;
Distance : 3

95
Tree	final int n1n2prod = NUMBER_CONSTANT * -= ;
Code	final int n1n2prod = NUMBER_CONSTANT * -= ;
Distance : 3

96
Tree	final int n1n2prod = ( float ) n1 * n2 ;
Code	final int n1n2prod = ( float ) n1 * n2 ;
Distance : 4

97
Tree	final int n2 = NUMBER_CONSTANT * n2 * n2 * currentState.length ;
Code	final int n2 = NUMBER_CONSTANT * n2 * n2 * currentState.length ;
Distance : 7

98
Tree	final int n1n2prod = NUMBER_CONSTANT * State.DURING_RESOLUTION ;
Code	final int n1n2prod = NUMBER_CONSTANT * State.DURING_RESOLUTION ;
Distance : 3

99
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * y.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * y.length ;
Distance : 6

100
Tree	final int n1n2prod = ( int ) n1 * n2 ;
Code	final int n1n2prod = ( int ) n1 * n2 ;
Distance : 4

101
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED ;
Distance : 3

102
Tree	final int n2 = ( long ) n1 * n1 ;
Code	final int n2 = ( long ) n1 * n1 ;
Distance : 6

103
Tree	final int n2 = ( int ) n1 * n1 ;
Code	final int n2 = ( int ) n1 * n1 ;
Distance : 6

104
Tree	final int n1n2prod = ( double ) n1 * n2 ;
Code	final int n1n2prod = ( double ) n1 * n2 ;
Distance : 4

105
Tree	final int n1n2prod = ( char ) n1 * n2 ;
Code	final int n1n2prod = ( char ) n1 * n2 ;
Distance : 4

106
Tree	final double n1n2prod = ( long ) n1 * n2 ;
Code	final double n1n2prod = ( long ) n1 * n2 ;
Distance : 3

107
Tree	final int n1 = n1 * n2 ;
Code	final int n1 = n1 * n2 ;
Distance : 2

108
Tree	final double n1n2prod = ( int ) n1 * n2 ;
Code	final double n1n2prod = ( int ) n1 * n2 ;
Distance : 3

109
Tree	final int n1n2prod = n1 * n1 / n2 ;
Code	final int n1n2prod = n1 * n1 / n2 ;
Distance : 3

110
Tree	final int n1n2prod = NUMBER_CONSTANT * Vector1D.ZERO ;
Code	final int n1n2prod = NUMBER_CONSTANT * Vector1D.ZERO ;
Distance : 3

111
Tree	final int n1n2prod = NUMBER_CONSTANT * FastMath.PI ;
Code	final int n1n2prod = NUMBER_CONSTANT * FastMath.PI ;
Distance : 3

112
Tree	final int n1n2prod = NUMBER_CONSTANT * y.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * y.length ;
Distance : 3

113
Tree	final int n1n2prod = NUMBER_CONSTANT * Color.BLUE ;
Code	final int n1n2prod = NUMBER_CONSTANT * Color.BLUE ;
Distance : 3

114
Tree	final int n1n2prod = NUMBER_CONSTANT * MathUtils.TWO_PI ;
Code	final int n1n2prod = NUMBER_CONSTANT * MathUtils.TWO_PI ;
Distance : 3

115
Tree	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * currentState.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * currentState.length ;
Distance : 5

116
Tree	final int n1n2prod = n2 * n2 / n2 ;
Code	final int n1n2prod = n2 * n2 / n2 ;
Distance : 4

117
Tree	final int n2 = n1 * n1 ;
Code	final int n2 = n1 * n1 ;
Distance : 3

118
Tree	final int n1n2prod = n2 - n2 [ n2 ] ;
Code	final int n1n2prod = n2 - n2 [ n2 ] ;
Distance : 6

119
Tree	final int n1n2prod = NUMBER_CONSTANT * IncrementalCheckMode.GENERATE_IJS ;
Code	final int n1n2prod = NUMBER_CONSTANT * IncrementalCheckMode.GENERATE_IJS ;
Distance : 3

120
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ;
Distance : 3

121
Tree	final double n1n2prod = n1 * n2 ;
Code	final double n1n2prod = n1 * n2 ;
Distance : 0

122
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.CARDAN_ANGLES_SINGULARITY ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.CARDAN_ANGLES_SINGULARITY ;
Distance : 3

123
Tree	final int n1n2prod = n1 * n2 / n1 ;
Code	final int n1n2prod = n1 * n2 / n1 ;
Distance : 3

124
Tree	final int n1n2prod = ( byte ) n1 * n2 ;
Code	final int n1n2prod = ( byte ) n1 * n2 ;
Distance : 4

125
Tree	final int n1 = ( int ) n1 * n2 ;
Code	final int n1 = ( int ) n1 * n2 ;
Distance : 5

126
Tree	final int n1n2prod = NUMBER_CONSTANT * currentState.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * currentState.length ;
Distance : 3

127
Tree	final int n1n2prod = n1 * n2 ;
Code	final int n1n2prod = n1 * n2 ;
Distance : 1

128
Tree	final int n1n2prod = ( long ) n1 * n1 ;
Code	final int n1n2prod = ( long ) n1 * n1 ;
Distance : 5

129
Tree	final int n1n2prod = ( int ) n1 * n1 ;
Code	final int n1n2prod = ( int ) n1 * n1 ;
Distance : 5

130
Tree	final int n1n2prod = n1 * n1 ;
Code	final int n1n2prod = n1 * n1 ;
Distance : 2

131
Tree	final int n1n2prod = n2 * n2 ;
Code	final int n1n2prod = n2 * n2 ;
Distance : 2

132
Tree	final int n1n2prod = ( long ) n2 * n2 ;
Code	final int n1n2prod = ( long ) n2 * n2 ;
Distance : 5

133
Tree	final int n1n2prod = n1 + NUMBER_CONSTANT ;
Code	final int n1n2prod = n1 + NUMBER_CONSTANT ;
Distance : 3

134
Tree	final int n1n2prod = ( int ) n2 * n2 ;
Code	final int n1n2prod = ( int ) n2 * n2 ;
Distance : 5

135
Tree	final int n1n2prod = n2 * n1 ;
Code	final int n1n2prod = n2 * n1 ;
Distance : 3

136
Tree	final int n2 = ( long ) n1 * n2 ;
Code	final int n2 = ( long ) n1 * n2 ;
Distance : 5

137
Tree	final int n2 = ( int ) n1 * n2 ;
Code	final int n2 = ( int ) n1 * n2 ;
Distance : 5

138
Tree	final int n1n2prod = ( long ) n2 * n1 ;
Code	final int n1n2prod = ( long ) n2 * n1 ;
Distance : 6

139
Tree	final int n1n2prod = n1 * n2 / n2 ;
Code	final int n1n2prod = n1 * n2 / n2 ;
Distance : 3

140
Tree	final int n1n2prod = n1 - n2 [ n2 ] ;
Code	final int n1n2prod = n1 - n2 [ n2 ] ;
Distance : 5

141
Tree	final int n1n2prod = ( int ) n2 * n1 ;
Code	final int n1n2prod = ( int ) n2 * n1 ;
Distance : 6

142
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * currentState.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * currentState.length ;
Distance : 6

143
Tree	final int n1n2prod = n1 > > NUMBER_CONSTANT ;
Code	final int n1n2prod = n1 > > NUMBER_CONSTANT ;
Distance : 4

144
Tree	final int n2 = n1 * n2 ;
Code	final int n2 = n1 * n2 ;
Distance : 2

145
Tree	final int n1n2prod = NUMBER_CONSTANT * f.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * f.length ;
Distance : 3

146
Tree	final int n1n2prod = n2 + NUMBER_CONSTANT ;
Code	final int n1n2prod = n2 + NUMBER_CONSTANT ;
Distance : 4

147
Tree	final int n1 = ( long ) n1 * n2 ;
Code	final int n1 = ( long ) n1 * n2 ;
Distance : 5

148
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * FunctionFlavor.NORMAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * FunctionFlavor.NORMAL ;
Distance : 6

149
Tree	final int n1n2prod = NUMBER_CONSTANT * FunctionFlavor.NORMAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * FunctionFlavor.NORMAL ;
Distance : 3

150
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_SMALL ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NUMBER_TOO_SMALL ;
Distance : 3

151
Tree	final int n1n2prod = n2 > > NUMBER_CONSTANT ;
Code	final int n1n2prod = n2 > > NUMBER_CONSTANT ;
Distance : 5

152
Tree	final int n1n2prod = NUMBER_CONSTANT * var.scope ;
Code	final int n1n2prod = NUMBER_CONSTANT * var.scope ;
Distance : 3

153
Tree	final int n1 = n1 * n1 ;
Code	final int n1 = n1 * n1 ;
Distance : 3

154
Tree	final int n1n2prod = NUMBER_CONSTANT * EvalMode.NORMAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * EvalMode.NORMAL ;
Distance : 3

155
Tree	final int n1n2prod = NUMBER_CONSTANT * EvalMode.EVAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * EvalMode.EVAL ;
Distance : 3

156
Tree	final int n1n2prod = NUMBER_CONSTANT * DateTimeConstants.MILLIS_PER_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * DateTimeConstants.MILLIS_PER_DAY ;
Distance : 3

157
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Boolean.FALSE ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Boolean.FALSE ;
Distance : 6

158
Tree	final int n1n2prod = NUMBER_CONSTANT * *= ;
Code	final int n1n2prod = NUMBER_CONSTANT * *= ;
Distance : 3

159
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * iChronology.MILLIS_PER_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * iChronology.MILLIS_PER_DAY ;
Distance : 6

160
Tree	final int n1n2prod = NUMBER_CONSTANT * tx.amount ;
Code	final int n1n2prod = NUMBER_CONSTANT * tx.amount ;
Distance : 3

161
Tree	final int n1n2prod = NUMBER_CONSTANT * SimplexSolver.DEFAULT_ULPS ;
Code	final int n1n2prod = NUMBER_CONSTANT * SimplexSolver.DEFAULT_ULPS ;
Distance : 3

162
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED ;
Distance : 6

163
Tree	final int n1n2prod = NUMBER_CONSTANT * Percentile.EstimationType ;
Code	final int n1n2prod = NUMBER_CONSTANT * Percentile.EstimationType ;
Distance : 3

164
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n1 * currentState.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n1 * currentState.length ;
Distance : 6

165
Tree	final int n1n2prod = ( byte ) n1 * n1 ;
Code	final int n1n2prod = ( byte ) n1 * n1 ;
Distance : 5

166
Tree	final int n1n2prod = NUMBER_CONSTANT * t1.time ;
Code	final int n1n2prod = NUMBER_CONSTANT * t1.time ;
Distance : 3

167
Tree	final int n1n2prod = NUMBER_CONSTANT * ^ ;
Code	final int n1n2prod = NUMBER_CONSTANT * ^ ;
Distance : 3

168
Tree	final int n1n2prod = NUMBER_CONSTANT * v1.y ;
Code	final int n1n2prod = NUMBER_CONSTANT * v1.y ;
Distance : 3

169
Tree	final int n1n2prod = n2 * n1 / n2 ;
Code	final int n1n2prod = n2 * n1 / n2 ;
Distance : 4

170
Tree	final int n1n2prod = NUMBER_CONSTANT * Order.MINUS_SUB_PLUS ;
Code	final int n1n2prod = NUMBER_CONSTANT * Order.MINUS_SUB_PLUS ;
Distance : 3

171
Tree	final int n1n2prod = NUMBER_CONSTANT * sample1.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * sample1.length ;
Distance : 3

172
Tree	final int n1n2prod = NUMBER_CONSTANT * RandomSource.MT_64 ;
Code	final int n1n2prod = NUMBER_CONSTANT * RandomSource.MT_64 ;
Distance : 3

173
Tree	final int n1n2prod = n2 * n2 / n1 ;
Code	final int n1n2prod = n2 * n2 / n1 ;
Distance : 4

174
Tree	final int n1n2prod = NUMBER_CONSTANT * other.nominalType ;
Code	final int n1n2prod = NUMBER_CONSTANT * other.nominalType ;
Distance : 3

175
Tree	final int n1 = n2 * n2 ;
Code	final int n1 = n2 * n2 ;
Distance : 3

176
Tree	final int n1n2prod = NUMBER_CONSTANT * getHistogram1 ;
Code	final int n1n2prod = NUMBER_CONSTANT * getHistogram1 ;
Distance : 3

177
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n1 * FunctionFlavor.NORMAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n1 * FunctionFlavor.NORMAL ;
Distance : 6

178
Tree	final int n1n2prod = NUMBER_CONSTANT * SourceMap.LocationMapping ;
Code	final int n1n2prod = NUMBER_CONSTANT * SourceMap.LocationMapping ;
Distance : 3

179
Tree	final int n1n2prod = NUMBER_CONSTANT * / ;
Code	final int n1n2prod = NUMBER_CONSTANT * / ;
Distance : 3

180
Tree	final int n1 = ( long ) n1 * n1 ;
Code	final int n1 = ( long ) n1 * n1 ;
Distance : 6

181
Tree	final int n2 = n2 * n2 ;
Code	final int n2 = n2 * n2 ;
Distance : 3

182
Tree	final int n1n2prod = NUMBER_CONSTANT * observed1.length ;
Code	final int n1n2prod = NUMBER_CONSTANT * observed1.length ;
Distance : 3

183
Tree	final int n1 = ( int ) n1 * n1 ;
Code	final int n1 = ( int ) n1 * n1 ;
Distance : 6

184
Tree	final int n1n2prod = NUMBER_CONSTANT * &= ;
Code	final int n1n2prod = NUMBER_CONSTANT * &= ;
Distance : 3

185
Tree	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * FunctionFlavor.NORMAL ;
Code	final int n1n2prod = NUMBER_CONSTANT * n1 * n2 * FunctionFlavor.NORMAL ;
Distance : 5

186
Tree	final int n1n2prod = n1 - n1 [ n2 ] ;
Code	final int n1n2prod = n1 - n1 [ n2 ] ;
Distance : 5

187
Tree	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Vector1D.ZERO ;
Code	final int n1n2prod = NUMBER_CONSTANT * n2 * n2 * Vector1D.ZERO ;
Distance : 6

188
Tree	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NOT_FINITE_NUMBER ;
Code	final int n1n2prod = NUMBER_CONSTANT * LocalizedFormats.NOT_FINITE_NUMBER ;
Distance : 3

189
Tree	final int n1n2prod = ( double ) n1 * n1 ;
Code	final int n1n2prod = ( double ) n1 * n1 ;
Distance : 5

190
Tree	final int n1n2prod = n1 * n1 / n1 ;
Code	final int n1n2prod = n1 * n1 / n1 ;
Distance : 4

191
Tree	final int n1n2prod = NUMBER_CONSTANT * iChronology.MILLIS_PER_DAY ;
Code	final int n1n2prod = NUMBER_CONSTANT * iChronology.MILLIS_PER_DAY ;
Distance : 3

192
Tree	final int n2 = ( long ) n2 * n2 ;
Code	final int n2 = ( long ) n2 * n2 ;
Distance : 6

193
Tree	final int n1n2prod = n1 - n2 [ n1 ] ;
Code	final int n1n2prod = n1 - n2 [ n1 ] ;
Distance : 5

194
Tree	final int n1n2prod = ( char ) n1 * n1 ;
Code	final int n1n2prod = ( char ) n1 * n1 ;
Distance : 5

195
Tree	final int n2 = ( int ) n2 * n2 ;
Code	final int n2 = ( int ) n2 * n2 ;
Distance : 6

196
Tree	final int n2 = n1 + NUMBER_CONSTANT ;
Code	final int n2 = n1 + NUMBER_CONSTANT ;
Distance : 4

197
Tree	final double n1n2prod = ( int ) n1 * n1 ;
Code	final double n1n2prod = ( int ) n1 * n1 ;
Distance : 4

198
Tree	final double n1n2prod = ( long ) n1 * n1 ;
Code	final double n1n2prod = ( long ) n1 * n1 ;
Distance : 4

199
Tree	final int n1n2prod = NUMBER_CONSTANT * definitionsGatherer.definitions ;
Code	final int n1n2prod = NUMBER_CONSTANT * definitionsGatherer.definitions ;
Distance : 3

========================================================================


========================================================================
Example Number: 75
Parent Code is: 
if ( y >= TWO_POWER_52  y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
-------------------------------------------------------------------------------
Child code is: 
if ( y >= TWO_POWER_53  y <= - TWO_POWER_53 ) { return pow ( - x , y ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y}) (251{val=>=}) (800{val=TWO_POWER_52})) (250{val=||}) (27 (800{val=y}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_52})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=y}) (251{val=>=}) (800{val=TWO_POWER_53})) (250{val=||}) (27 (800{val=y}) (252{val=<=}) (38 (201{val=-}) (800{val=TWO_POWER_53})))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=pow}) (214{val=(}) (38 (201{val=-}) (800{val=x})) (234{val=,}) (800{val=y}) (215{val=)})) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/15/parent/src_main_java_org_apache_commons_math3_util_FastMath.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( y >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

1
Tree	if ( y > - MathUtils.TWO_PI y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - MathUtils.TWO_PI y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

2
Tree	if ( y > - Double.NaN y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

3
Tree	if ( y > - Integer.MAX_VALUE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Integer.MAX_VALUE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

4
Tree	if ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.SAME_SIGN_AT_ENDPOINTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

5
Tree	if ( Integer.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( Integer.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

6
Tree	if ( y > - / y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

7
Tree	if ( options.polymerVersion != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.polymerVersion != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

8
Tree	if ( observations.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( observations.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

9
Tree	if ( sb.buffer.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( sb.buffer.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

10
Tree	if ( y > - x.length y y < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y y < x.length ) { return pow ( - x , y ) ; }
Distance : 6

11
Tree	if ( v.length != null - x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( v.length != null - x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

12
Tree	if ( y > - y.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 6

13
Tree	if ( y > - y.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

14
Tree	if ( x.length != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( x.length != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

15
Tree	if ( boxedInfo.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( boxedInfo.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

16
Tree	if ( x >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( x >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 5

17
Tree	if ( TWO_POWER_52 >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

18
Tree	if ( y.length != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y.length != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

19
Tree	if ( var.scope != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( var.scope != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

20
Tree	if ( LocalizedFormats.OUT_OF_RANGE_SIMPLE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.OUT_OF_RANGE_SIMPLE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

21
Tree	if ( result.sourceMap != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( result.sourceMap != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

22
Tree	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

23
Tree	if ( y > - y.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

24
Tree	if ( d.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( d.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

25
Tree	if ( y > - v.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

26
Tree	if ( y > - FastMath.PI y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - FastMath.PI y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

27
Tree	if ( y > - x.length y TWO_POWER_52 < y ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < y ) { return pow ( - x , y ) ; }
Distance : 6

28
Tree	if ( options.skipNonTranspilationPasses != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.skipNonTranspilationPasses != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

29
Tree	if ( y > - f.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - f.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

30
Tree	if ( CompilerTestCase.ACTIVE_X_OBJECT_DEF != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( CompilerTestCase.ACTIVE_X_OBJECT_DEF != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

31
Tree	if ( y > - v.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

32
Tree	if ( options.checksOnly != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.checksOnly != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

33
Tree	if ( y > - / y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

34
Tree	if ( y > - Double.NaN y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

35
Tree	if ( startConfiguration.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( startConfiguration.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

36
Tree	if ( currentScript.isModule != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( currentScript.isModule != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

37
Tree	if ( c.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( c.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

38
Tree	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

39
Tree	if ( y != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 4

40
Tree	if ( y > - *= y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - *= y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

41
Tree	if ( TextAnchor.TOP_CENTER != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( TextAnchor.TOP_CENTER != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

42
Tree	if ( y > - y.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Distance : 6

43
Tree	if ( Token.CATCH != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Token.CATCH != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

44
Tree	if ( MathUtils.TWO_PI != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( MathUtils.TWO_PI != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

45
Tree	if ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_3D_VECTOR != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

46
Tree	if ( y > - x.length y TWO_POWER_52 < sample2.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < sample2.length ) { return pow ( - x , y ) ; }
Distance : 6

47
Tree	if ( Precision.SAFE_MIN != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Precision.SAFE_MIN != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

48
Tree	if ( y > - var.scope y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - var.scope y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

49
Tree	if ( y > - var.scope - TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - var.scope - TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 7

50
Tree	if ( x.length != null TWO_POWER_52 y <= - y ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 y <= - y ) { return pow ( - x , y ) ; }
Distance : 5

51
Tree	if ( Var.ARGUMENTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Var.ARGUMENTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

52
Tree	if ( y > - x.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

53
Tree	if ( currentScript.isModule != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( currentScript.isModule != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

54
Tree	if ( y > - y.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

55
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 4

56
Tree	if ( Precision.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Precision.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

57
Tree	if ( v.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( v.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

58
Tree	if ( y.length != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y.length != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

59
Tree	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

60
Tree	if ( x >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( x >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

61
Tree	if ( c.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( c.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

62
Tree	if ( y > - x.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

63
Tree	if ( MathUtils.TWO_PI != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( MathUtils.TWO_PI != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

64
Tree	if ( Integer.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Integer.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

65
Tree	if ( x.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

66
Tree	if ( x >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( x >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

67
Tree	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

68
Tree	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

69
Tree	if ( y >= NUMBER_CONSTANT TWO_POWER_52 x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= NUMBER_CONSTANT TWO_POWER_52 x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

70
Tree	if ( y >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( y >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 4

71
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

72
Tree	if ( x.length != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

73
Tree	if ( isInferrableConst != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( isInferrableConst != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

74
Tree	if ( Double.MIN_VALUE != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Double.MIN_VALUE != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

75
Tree	if ( y >= NUMBER_CONSTANT TWO_POWER_52 x <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( y >= NUMBER_CONSTANT TWO_POWER_52 x <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 5

76
Tree	if ( c.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( c.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

77
Tree	if ( MathUtils.TWO_PI != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( MathUtils.TWO_PI != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

78
Tree	if ( y > - x.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Distance : 6

79
Tree	if ( Math.PI != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Math.PI != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

80
Tree	if ( y > - y.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

81
Tree	if ( y > - v.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

82
Tree	if ( Integer.MAX_VALUE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Integer.MAX_VALUE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

83
Tree	if ( y > - Double.NaN y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

84
Tree	if ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

85
Tree	if ( LocalizedFormats.NUMBER_OF_POINTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.NUMBER_OF_POINTS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

86
Tree	if ( y >= y y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= y y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

87
Tree	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

88
Tree	if ( y > - / y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

89
Tree	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( v.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

90
Tree	if ( y > - x.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 6

91
Tree	if ( options.dartPass != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.dartPass != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

92
Tree	if ( y > - x.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

93
Tree	if ( Double.NaN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Double.NaN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

94
Tree	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

95
Tree	if ( knots.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( knots.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

96
Tree	if ( child.parent != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( child.parent != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

97
Tree	if ( y > - x.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

98
Tree	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

99
Tree	if ( x >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( x >= NUMBER_CONSTANT y y <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 5

100
Tree	if ( y > - Precision.SAFE_MIN y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Precision.SAFE_MIN y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

101
Tree	if ( y > - y.length y TWO_POWER_52 < sample2.length ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y TWO_POWER_52 < sample2.length ) { return pow ( - x , y ) ; }
Distance : 6

102
Tree	if ( options.propertyRenaming != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.propertyRenaming != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

103
Tree	if ( y > - x.length y TWO_POWER_52 < ArrayIndexOutOfBoundsException ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < ArrayIndexOutOfBoundsException ) { return pow ( - x , y ) ; }
Distance : 6

104
Tree	if ( isPrototypeObject != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( isPrototypeObject != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

105
Tree	if ( y > - DateUtils.MILLIS_PER_MINUTE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - DateUtils.MILLIS_PER_MINUTE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

106
Tree	if ( LocalizedFormats.FUNCTION_NOT_POLYNOMIAL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.FUNCTION_NOT_POLYNOMIAL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

107
Tree	if ( y > - var.scope - TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - var.scope - TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 7

108
Tree	if ( Precision.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( Precision.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 6

109
Tree	if ( options.removeUnusedVars != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.removeUnusedVars != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

110
Tree	if ( PolynomialFunction != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( PolynomialFunction != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

111
Tree	if ( y > - x.length y TWO_POWER_52 < F_1_3 ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < F_1_3 ) { return pow ( - x , y ) ; }
Distance : 6

112
Tree	if ( v.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( v.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 7

113
Tree	if ( y > - var.scope y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - var.scope y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

114
Tree	if ( options.processCommonJSModules != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.processCommonJSModules != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

115
Tree	if ( y > - getX y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - getX y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

116
Tree	if ( Token.FOR_IN != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Token.FOR_IN != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

117
Tree	if ( PropertyCollapseLevel.ALL != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( PropertyCollapseLevel.ALL != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

118
Tree	if ( currentScript.defaultExportLocalName != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( currentScript.defaultExportLocalName != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

119
Tree	if ( replacementNode != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( replacementNode != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

120
Tree	if ( Integer.MAX_VALUE != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Integer.MAX_VALUE != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

121
Tree	if ( AnyVararg.ANY_VARARG != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( AnyVararg.ANY_VARARG != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

122
Tree	if ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

123
Tree	if ( currentScript.willCreateExportsObject != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( currentScript.willCreateExportsObject != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

124
Tree	if ( y > - / y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Distance : 6

125
Tree	if ( org.mockito.creation.instance.InstantiationException != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( org.mockito.creation.instance.InstantiationException != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

126
Tree	if ( y >= NUMBER_CONSTANT TWO_POWER_52 y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= NUMBER_CONSTANT TWO_POWER_52 y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

127
Tree	if ( y > - *= y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - *= y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

128
Tree	if ( handler.invocationContainerImpl != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( handler.invocationContainerImpl != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

129
Tree	if ( c.length != null y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( c.length != null y x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

130
Tree	if ( Complex.NaN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Complex.NaN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

131
Tree	if ( line.zero != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( line.zero != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

132
Tree	if ( shouldPrintExterns != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( shouldPrintExterns != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

133
Tree	if ( PlotOrientation.VERTICAL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( PlotOrientation.VERTICAL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

134
Tree	if ( y > - v.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Distance : 6

135
Tree	if ( options.deadAssignmentElimination != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.deadAssignmentElimination != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

136
Tree	if ( LocalizedFormats.NUMBER_OF_POINTS != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.NUMBER_OF_POINTS != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

137
Tree	if ( b.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( b.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

138
Tree	if ( y > - Double.MIN_VALUE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.MIN_VALUE y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

139
Tree	if ( MathUtils.TWO_PI != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( MathUtils.TWO_PI != null TWO_POWER_52 x <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

140
Tree	if ( y > - x.length - y < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length - y < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 7

141
Tree	if ( y > - MathUtils.TWO_PI y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - MathUtils.TWO_PI y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

142
Tree	if ( MathUtils.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( MathUtils.SAFE_MIN != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

143
Tree	if ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LiveVariablesAnalysisEs6.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

144
Tree	if ( y > - Double.NaN y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < Integer.MAX_VALUE ) { return pow ( - x , y ) ; }
Distance : 6

145
Tree	if ( x.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( x.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

146
Tree	if ( y > - Integer.MAX_VALUE y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - Integer.MAX_VALUE y TWO_POWER_52 < y.length ) { return pow ( - x , y ) ; }
Distance : 6

147
Tree	if ( callSite.parent != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( callSite.parent != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

148
Tree	if ( MathUtils.PI_SQUARED != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( MathUtils.PI_SQUARED != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

149
Tree	if ( x >= TWO_POWER_52 - TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( x >= TWO_POWER_52 - TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 5

150
Tree	if ( srcArgs.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( srcArgs.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

151
Tree	if ( mean.length != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( mean.length != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

152
Tree	if ( y > - Double.NaN y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 6

153
Tree	if ( IncrementalCheckMode.GENERATE_IJS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( IncrementalCheckMode.GENERATE_IJS != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

154
Tree	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 3

155
Tree	if ( Color.WHITE != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Color.WHITE != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

156
Tree	if ( Double.MIN_VALUE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Double.MIN_VALUE != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

157
Tree	if ( LocalizedFormats.INVALID_BINARY_DIGIT != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LocalizedFormats.INVALID_BINARY_DIGIT != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

158
Tree	if ( y > - / y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 6

159
Tree	if ( y > - Double.NaN y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - Double.NaN y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

160
Tree	if ( f.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( f.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

161
Tree	if ( TWO_POWER_52 >= NUMBER_CONSTANT TWO_POWER_52 y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( TWO_POWER_52 >= NUMBER_CONSTANT TWO_POWER_52 y <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

162
Tree	if ( hasOneChild != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( hasOneChild != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

163
Tree	if ( LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( LiveVariablesAnalysis.MAX_VARIABLES_TO_ANALYZE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

164
Tree	if ( y > - x.length y TWO_POWER_52 < Double.NaN ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < Double.NaN ) { return pow ( - x , y ) ; }
Distance : 6

165
Tree	if ( Node.FREE_CALL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Node.FREE_CALL != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

166
Tree	if ( y > - / y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - / y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

167
Tree	if ( newNode != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( newNode != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

168
Tree	if ( y >= NUMBER_CONSTANT TWO_POWER_52 TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , TWO_POWER_52 ) ; }
Code	if ( y >= NUMBER_CONSTANT TWO_POWER_52 TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , TWO_POWER_52 ) ; }
Distance : 5

169
Tree	if ( Var.ARGUMENTS != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Var.ARGUMENTS != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

170
Tree	if ( work.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( work.length != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

171
Tree	if ( y.length != null TWO_POWER_52 y <= - y ) { return pow ( - x , y ) ; }
Code	if ( y.length != null TWO_POWER_52 y <= - y ) { return pow ( - x , y ) ; }
Distance : 5

172
Tree	if ( y >= TWO_POWER_52 y x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= TWO_POWER_52 y x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

173
Tree	if ( y > - indexRm2 y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - indexRm2 y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

174
Tree	if ( ArrayIndexOutOfBoundsException != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( ArrayIndexOutOfBoundsException != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

175
Tree	if ( y > - var.scope y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Code	if ( y > - var.scope y TWO_POWER_52 < IncrementalCheckMode.GENERATE_IJS ) { return pow ( - x , y ) ; }
Distance : 6

176
Tree	if ( x >= NUMBER_CONSTANT y x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( x >= NUMBER_CONSTANT y x <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 4

177
Tree	if ( options.dartPass != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.dartPass != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

178
Tree	if ( y > - x.length y TWO_POWER_52 < v.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < v.length ) { return pow ( - x , y ) ; }
Distance : 6

179
Tree	if ( y > - IncrementalCheckMode.GENERATE_IJS y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - IncrementalCheckMode.GENERATE_IJS y TWO_POWER_52 < x.length ) { return pow ( - x , y ) ; }
Distance : 6

180
Tree	if ( y > - y.length y y < x.length ) { return pow ( - x , y ) ; }
Code	if ( y > - y.length y y < x.length ) { return pow ( - x , y ) ; }
Distance : 6

181
Tree	if ( isNamespacePlaceholder != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( isNamespacePlaceholder != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

182
Tree	if ( isHoistScope != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( isHoistScope != null y y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

183
Tree	if ( y > - x.length y TWO_POWER_52 < / ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < / ) { return pow ( - x , y ) ; }
Distance : 6

184
Tree	if ( y >= x y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Code	if ( y >= x y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , y ) ; }
Distance : 3

185
Tree	if ( y > - x.length y y < y.length ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y y < y.length ) { return pow ( - x , y ) ; }
Distance : 6

186
Tree	if ( polyfill.polyfillVersion != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( polyfill.polyfillVersion != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

187
Tree	if ( Long.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Long.MAX_VALUE != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

188
Tree	if ( y.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Code	if ( y.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , x ) ; }
Distance : 7

189
Tree	if ( knots.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( knots.length != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

190
Tree	if ( child.parent != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( child.parent != null TWO_POWER_52 TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 6

191
Tree	if ( StandardXYToolTipGenerator != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( StandardXYToolTipGenerator != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

192
Tree	if ( Double.NaN != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( Double.NaN != null y TWO_POWER_52 <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

193
Tree	if ( y > - x.length y TWO_POWER_52 < x.length ) { return pow ( - x , x ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < x.length ) { return pow ( - x , x ) ; }
Distance : 7

194
Tree	if ( y > - v.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < Precision.SAFE_MIN ) { return pow ( - x , y ) ; }
Distance : 6

195
Tree	if ( y > - x.length y TWO_POWER_52 < var.scope ) { return pow ( - x , y ) ; }
Code	if ( y > - x.length y TWO_POWER_52 < var.scope ) { return pow ( - x , y ) ; }
Distance : 6

196
Tree	if ( y > - v.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Code	if ( y > - v.length y TWO_POWER_52 < MathUtils.TWO_PI ) { return pow ( - x , y ) ; }
Distance : 6

197
Tree	if ( v.length != null y y <= - y ) { return pow ( - x , y ) ; }
Code	if ( v.length != null y y <= - y ) { return pow ( - x , y ) ; }
Distance : 5

198
Tree	if ( y >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Code	if ( y >= NUMBER_CONSTANT y TWO_POWER_52 <= - NUMBER_CONSTANT ) { return pow ( - x , x ) ; }
Distance : 4

199
Tree	if ( options.removeUnusedVars != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Code	if ( options.removeUnusedVars != null TWO_POWER_52 y <= - TWO_POWER_52 ) { return pow ( - x , y ) ; }
Distance : 5

========================================================================


========================================================================
Example Number: 76
Parent Code is: 
FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
-------------------------------------------------------------------------------
Child code is: 
FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - NUMBER_CONSTANT * dim ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI})) (234{val=,}) (27 (38 (201{val=-}) (800{val=dim})) (203{val=/}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=covarianceMatrixDeterminant}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (802{val=getExponentTerm}) (214{val=(}) (800{val=vals}) (215{val=)}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (27 (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (27 (34{val=NUMBER_CONSTANT}) (202{val=*}) (40{val=FastMath.PI})) (234{val=,}) (27 (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (202{val=*}) (800{val=dim})) (215{val=)})) (202{val=*}) (32 (800{val=FastMath}) (235{val=.}) (802{val=pow}) (214{val=(}) (800{val=covarianceMatrixDeterminant}) (234{val=,}) (38 (201{val=-}) (34{val=NUMBER_CONSTANT})) (215{val=)})) (202{val=*}) (32 (802{val=getExponentTerm}) (214{val=(}) (800{val=vals}) (215{val=)}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/11/parent/src_main_java_org_apache_commons_math3_distribution_MultivariateNormalDistribution.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

1
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

2
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

3
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

4
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

5
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

6
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

7
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

8
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

9
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

10
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

11
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

12
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 4

13
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

14
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

15
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

16
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

17
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

18
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 5

19
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

20
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

21
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 4

22
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

23
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

24
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

25
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

26
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

27
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

28
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

29
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

30
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

31
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

32
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

33
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

34
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

35
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

36
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

37
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

38
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

39
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

40
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

41
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

42
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

43
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

44
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

45
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

46
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

47
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

48
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

49
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

50
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

51
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

52
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

53
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

54
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

55
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

56
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

57
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

58
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

59
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

60
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

61
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

62
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

63
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

64
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

65
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

66
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

67
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

68
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

69
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

70
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

71
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

72
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

73
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

74
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

75
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

76
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

77
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

78
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

79
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

80
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

81
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

82
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

83
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

84
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

85
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

86
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

87
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

88
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

89
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

90
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

91
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

92
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

93
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

94
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

95
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

96
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

97
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

98
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

99
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

100
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

101
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

102
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

103
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

104
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

105
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

106
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

107
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

108
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

109
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

110
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

111
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

112
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

113
Tree	. . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	. . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

114
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

115
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

116
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

117
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 3

118
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

119
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

120
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

121
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

122
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

123
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

124
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

125
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

126
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

127
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

128
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

129
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

130
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

131
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

132
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

133
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

134
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

135
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

136
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

137
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

138
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 4

139
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

140
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

141
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

142
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

143
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

144
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

145
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

146
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

147
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

148
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

149
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

150
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

151
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

152
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

153
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

154
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 4

155
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

156
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

157
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

158
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

159
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

160
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

161
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

162
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

163
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

164
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 5

165
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

166
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

167
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 7

168
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 6

169
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

170
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - vals / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

171
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

172
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

173
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

174
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

175
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

176
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * vals . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

177
Tree	. . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	. . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

178
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

179
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

180
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

181
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

182
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 6

183
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 5

184
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

185
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 5

186
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

187
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

188
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( FastMath , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

189
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 5

190
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( vals )
Distance : 4

191
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

192
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( FastMath )
Distance : 6

193
Tree	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	dim . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 6

194
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * dim . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 6

195
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 5

196
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( vals , - NUMBER_CONSTANT ) * getExponentTerm ( dim )
Distance : 5

197
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - dim / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * getExponentTerm ( FastMath )
Distance : 4

198
Tree	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Code	vals . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( dim , - NUMBER_CONSTANT ) * pow ( dim )
Distance : 7

199
Tree	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Code	FastMath . pow ( NUMBER_CONSTANT * FastMath.PI , - FastMath / NUMBER_CONSTANT ) * FastMath . pow ( covarianceMatrixDeterminant , - NUMBER_CONSTANT ) * pow ( vals )
Distance : 4

========================================================================


========================================================================
Example Number: 77
Parent Code is: 
iterations = new Incrementor ( NUMBER_CONSTANT , new MaxIterCallback () ) ;
-------------------------------------------------------------------------------
Child code is: 
iterations = new Incrementor ( Integer.MAX_VALUE , new MaxIterCallback () ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (7 (800{val=iterations}) (204{val==}) (14 (304{val=new}) (43 (801{val=Incrementor})) (214{val=(}) (34{val=NUMBER_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MaxIterCallback})) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (7 (800{val=iterations}) (204{val==}) (14 (304{val=new}) (43 (801{val=Incrementor})) (214{val=(}) (40{val=Integer.MAX_VALUE}) (234{val=,}) (14 (304{val=new}) (43 (801{val=MaxIterCallback})) (216{val=()})) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/6/parent/src_main_java_org_apache_commons_math3_optim_BaseOptimizer.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	iterations = new Incrementor < iterations > () ;
Code	iterations = new Incrementor < iterations > () ;
Distance : 6

1
Tree	iterations = new Incrementor ( iterations , getModuleGraph () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getModuleGraph () , new MaxIterCallback () ) ;
Distance : 4

2
Tree	iterations = new Incrementor ( iterations , that.seriesKey () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.seriesKey () , new MaxIterCallback () ) ;
Distance : 4

3
Tree	iterations = new Incrementor ( iterations , line.direction () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , line.direction () , new MaxIterCallback () ) ;
Distance : 4

4
Tree	iterations = new Incrementor ( iterations , cluster () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , cluster () , new MaxIterCallback () ) ;
Distance : 4

5
Tree	iterations = new Incrementor ( iterations , GREGORIAN_DEFAULT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , GREGORIAN_DEFAULT () , new MaxIterCallback () ) ;
Distance : 4

6
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , ReplaceIdGenerators.CONDITIONAL_ID_GENERATOR_CALL ) ;
Distance : 3

7
Tree	iterations = new Incrementor ( iterations , fieldOwner () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , fieldOwner () , new MaxIterCallback () ) ;
Distance : 4

8
Tree	iterations = new Incrementor ( iterations , NameChangingCallback () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , NameChangingCallback () , new MaxIterCallback () ) ;
Distance : 4

9
Tree	iterations = new Incrementor ( iterations , SuppressDocWarningsGuard () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , SuppressDocWarningsGuard () , new MaxIterCallback () ) ;
Distance : 4

10
Tree	iterations = new Incrementor ( iterations , copySelf () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , copySelf () , new MaxIterCallback () ) ;
Distance : 4

11
Tree	iterations = new Incrementor ( iterations , normalize () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , normalize () , new MaxIterCallback () ) ;
Distance : 4

12
Tree	iterations = new Incrementor ( iterations , LinearConstraintSet () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , LinearConstraintSet () , new MaxIterCallback () ) ;
Distance : 4

13
Tree	iterations = new Incrementor ( iterations , configureWith () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , configureWith () , new MaxIterCallback () ) ;
Distance : 4

14
Tree	iterations = new Incrementor ( iterations , constructorBody () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , constructorBody () , new MaxIterCallback () ) ;
Distance : 4

15
Tree	iterations = new Incrementor ( iterations , mulAndCheck () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , mulAndCheck () , new MaxIterCallback () ) ;
Distance : 4

16
Tree	iterations = new Incrementor ( iterations , buildChebyquadArray () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , buildChebyquadArray () , new MaxIterCallback () ) ;
Distance : 4

17
Tree	iterations = new Incrementor ( iterations , that.defaultGroup () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.defaultGroup () , new MaxIterCallback () ) ;
Distance : 4

18
Tree	iterations = new Incrementor ( iterations , finderStub.invocations () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , finderStub.invocations () , new MaxIterCallback () ) ;
Distance : 4

19
Tree	iterations = new Incrementor ( iterations , c.seriesList () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , c.seriesList () , new MaxIterCallback () ) ;
Distance : 4

20
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , Color.green ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , Color.green ) ;
Distance : 3

21
Tree	iterations = new Incrementor ( iterations , ConstructorStrategy.Default.IMITATE_SUPER_TYPE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , ConstructorStrategy.Default.IMITATE_SUPER_TYPE () , new MaxIterCallback () ) ;
Distance : 4

22
Tree	iterations = new Incrementor ( iterations , MODULE_USES_GOOG_MODULE_GET () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , MODULE_USES_GOOG_MODULE_GET () , new MaxIterCallback () ) ;
Distance : 4

23
Tree	iterations = new Incrementor ( iterations , getMocksToBeVerifiedStrictly () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getMocksToBeVerifiedStrictly () , new MaxIterCallback () ) ;
Distance : 4

24
Tree	iterations = new Incrementor ( iterations , ScopeFactory () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , ScopeFactory () , new MaxIterCallback () ) ;
Distance : 4

25
Tree	iterations = new Incrementor ( iterations , LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER () , new MaxIterCallback () ) ;
Distance : 4

26
Tree	iterations = new Incrementor ( iterations , emptyMap () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , emptyMap () , new MaxIterCallback () ) ;
Distance : 4

27
Tree	iterations = new Incrementor ( iterations , getSecondaryState () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getSecondaryState () , new MaxIterCallback () ) ;
Distance : 4

28
Tree	iterations = new Incrementor ( iterations , getInvocations () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getInvocations () , new MaxIterCallback () ) ;
Distance : 4

29
Tree	iterations = new Incrementor ( iterations , that.legendLine () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.legendLine () , new MaxIterCallback () ) ;
Distance : 4

30
Tree	iterations = new Incrementor ( iterations , str2 () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , str2 () , new MaxIterCallback () ) ;
Distance : 4

31
Tree	iterations = new Incrementor ( iterations , MethodAttributeAppender.ForInstrumentedMethod () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , MethodAttributeAppender.ForInstrumentedMethod () , new MaxIterCallback () ) ;
Distance : 4

32
Tree	iterations = new Incrementor ( iterations , startY () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , startY () , new MaxIterCallback () ) ;
Distance : 4

33
Tree	iterations = new Incrementor ( iterations , createLineRegion () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createLineRegion () , new MaxIterCallback () ) ;
Distance : 4

34
Tree	iterations = new Incrementor ( iterations , getNameSupplier () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getNameSupplier () , new MaxIterCallback () ) ;
Distance : 4

35
Tree	iterations = new Incrementor ( iterations , requirement_ () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , requirement_ () , new MaxIterCallback () ) ;
Distance : 4

36
Tree	iterations = new Incrementor ( iterations , numberOfTrueValues () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , numberOfTrueValues () , new MaxIterCallback () ) ;
Distance : 4

37
Tree	iterations = new Incrementor ( iterations , accept () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , accept () , new MaxIterCallback () ) ;
Distance : 4

38
Tree	iterations = new Incrementor ( iterations , InputStreamReader () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , InputStreamReader () , new MaxIterCallback () ) ;
Distance : 4

39
Tree	iterations = new Incrementor ( iterations , objectValue () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , objectValue () , new MaxIterCallback () ) ;
Distance : 4

40
Tree	iterations = new Incrementor ( iterations , eras () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , eras () , new MaxIterCallback () ) ;
Distance : 4

41
Tree	iterations = new Incrementor ( iterations , ofThisVm () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , ofThisVm () , new MaxIterCallback () ) ;
Distance : 4

42
Tree	iterations = new Incrementor ( iterations , probabilities () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , probabilities () , new MaxIterCallback () ) ;
Distance : 4

43
Tree	iterations = new Incrementor ( iterations , Ordering () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Ordering () , new MaxIterCallback () ) ;
Distance : 4

44
Tree	iterations = new Incrementor ( iterations , BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , BaseAbstractUnivariateIntegrator.DEFAULT_ABSOLUTE_ACCURACY () , new MaxIterCallback () ) ;
Distance : 4

45
Tree	iterations = new Incrementor ( iterations , Traverser () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Traverser () , new MaxIterCallback () ) ;
Distance : 4

46
Tree	iterations = new Incrementor ( iterations , isToStringMethod () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , isToStringMethod () , new MaxIterCallback () ) ;
Distance : 4

47
Tree	iterations = new Incrementor ( iterations , getLastInvocationLocation () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getLastInvocationLocation () , new MaxIterCallback () ) ;
Distance : 4

48
Tree	iterations = new Incrementor ( iterations , that.id () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.id () , new MaxIterCallback () ) ;
Distance : 4

49
Tree	iterations = new Incrementor ( iterations , createGetterPropName () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createGetterPropName () , new MaxIterCallback () ) ;
Distance : 4

50
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , FeatureSet.ES3 ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , FeatureSet.ES3 ) ;
Distance : 3

51
Tree	iterations = new Incrementor ( iterations , gridSize () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , gridSize () , new MaxIterCallback () ) ;
Distance : 4

52
Tree	iterations = new Incrementor ( iterations , TokenType.TYPE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , TokenType.TYPE () , new MaxIterCallback () ) ;
Distance : 4

53
Tree	iterations = new Incrementor ( iterations , anchorX () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , anchorX () , new MaxIterCallback () ) ;
Distance : 4

54
Tree	iterations = new Incrementor ( iterations , NodeMetadata () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , NodeMetadata () , new MaxIterCallback () ) ;
Distance : 4

55
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , TimeZoneNumberRule.INSTANCE_COLON ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , TimeZoneNumberRule.INSTANCE_COLON ) ;
Distance : 3

56
Tree	iterations = new Incrementor ( iterations , iterateZBounds () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , iterateZBounds () , new MaxIterCallback () ) ;
Distance : 4

57
Tree	iterations = new Incrementor ( iterations , DummyStatement () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , DummyStatement () , new MaxIterCallback () ) ;
Distance : 4

58
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , isize ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , isize ) ;
Distance : 3

59
Tree	iterations = new Incrementor ( iterations , getTotalMillis () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getTotalMillis () , new MaxIterCallback () ) ;
Distance : 4

60
Tree	iterations = new Incrementor ( iterations , isPrettyPrint () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , isPrettyPrint () , new MaxIterCallback () ) ;
Distance : 4

61
Tree	iterations = new Incrementor ( iterations , upperBinMass () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , upperBinMass () , new MaxIterCallback () ) ;
Distance : 4

62
Tree	iterations = new Incrementor ( iterations , normalizeArray () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , normalizeArray () , new MaxIterCallback () ) ;
Distance : 4

63
Tree	iterations = new Incrementor ( iterations , options.moduleRoots () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , options.moduleRoots () , new MaxIterCallback () ) ;
Distance : 4

64
Tree	iterations = new Incrementor ( iterations , TimeZoneNumberRule.INSTANCE_COLON () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , TimeZoneNumberRule.INSTANCE_COLON () , new MaxIterCallback () ) ;
Distance : 4

65
Tree	iterations = new Incrementor ( iterations , delayMillis () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , delayMillis () , new MaxIterCallback () ) ;
Distance : 4

66
Tree	iterations = new Incrementor ( iterations , nextToken () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , nextToken () , new MaxIterCallback () ) ;
Distance : 4

67
Tree	iterations = new Incrementor ( iterations , PivotSelectionRule.BLAND () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , PivotSelectionRule.BLAND () , new MaxIterCallback () ) ;
Distance : 4

68
Tree	iterations = new Incrementor ( iterations , Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR () , new MaxIterCallback () ) ;
Distance : 4

69
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , authorName ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , authorName ) ;
Distance : 3

70
Tree	iterations = new Incrementor ( iterations , findObjectWithNonStringifiableKey () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , findObjectWithNonStringifiableKey () , new MaxIterCallback () ) ;
Distance : 4

71
Tree	iterations = new Incrementor ( new Incrementor () ) ;
Code	iterations = new Incrementor ( new Incrementor () ) ;
Distance : 3

72
Tree	iterations = new Incrementor ( iterations , flags.outputWrapper () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , flags.outputWrapper () , new MaxIterCallback () ) ;
Distance : 4

73
Tree	iterations = new Incrementor ( iterations , getUnitMillis () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getUnitMillis () , new MaxIterCallback () ) ;
Distance : 4

74
Tree	iterations = new Incrementor ( iterations , createTableau () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createTableau () , new MaxIterCallback () ) ;
Distance : 4

75
Tree	iterations = new Incrementor ( iterations , centuries () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , centuries () , new MaxIterCallback () ) ;
Distance : 4

76
Tree	iterations = new Incrementor ( iterations , createRecorder () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createRecorder () , new MaxIterCallback () ) ;
Distance : 4

77
Tree	iterations = new Incrementor ( iterations , renamed () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , renamed () , new MaxIterCallback () ) ;
Distance : 4

78
Tree	iterations = new Incrementor ( iterations , Calendar.YEAR () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Calendar.YEAR () , new MaxIterCallback () ) ;
Distance : 4

79
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , ToStringBuilder ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , ToStringBuilder ) ;
Distance : 3

80
Tree	iterations = new Incrementor ( iterations , unsorted () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , unsorted () , new MaxIterCallback () ) ;
Distance : 4

81
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , realMatrixFormat ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , realMatrixFormat ) ;
Distance : 3

82
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , ^ ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , ^ ) ;
Distance : 3

83
Tree	iterations = new Incrementor ( iterations , invocationTwoChunkOne () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , invocationTwoChunkOne () , new MaxIterCallback () ) ;
Distance : 4

84
Tree	iterations = new Incrementor ( iterations , numberFormat () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , numberFormat () , new MaxIterCallback () ) ;
Distance : 4

85
Tree	iterations = new Incrementor ( iterations , getScopedName () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getScopedName () , new MaxIterCallback () ) ;
Distance : 4

86
Tree	iterations = new Incrementor ( iterations , RandomSource.MT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , RandomSource.MT () , new MaxIterCallback () ) ;
Distance : 4

87
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , InvocationMarker ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , InvocationMarker ) ;
Distance : 3

88
Tree	iterations = new Incrementor ( iterations , zeroThreshold () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , zeroThreshold () , new MaxIterCallback () ) ;
Distance : 4

89
Tree	iterations = new Incrementor ( iterations , intLog10 () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , intLog10 () , new MaxIterCallback () ) ;
Distance : 4

90
Tree	iterations = new Incrementor ( iterations , round () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , round () , new MaxIterCallback () ) ;
Distance : 4

91
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , formatMethodCall ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , formatMethodCall ) ;
Distance : 3

92
Tree	iterations = new Incrementor ( iterations , NordsieckInitializer () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , NordsieckInitializer () , new MaxIterCallback () ) ;
Distance : 4

93
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , false ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , false ) ;
Distance : 3

94
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , Dialog ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , Dialog ) ;
Distance : 3

95
Tree	iterations = new Incrementor ( iterations , high () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , high () , new MaxIterCallback () ) ;
Distance : 4

96
Tree	iterations = new Incrementor ( iterations , other.features () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , other.features () , new MaxIterCallback () ) ;
Distance : 4

97
Tree	iterations = new Incrementor ( iterations , BOTH_NULL () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , BOTH_NULL () , new MaxIterCallback () ) ;
Distance : 4

98
Tree	iterations = new Incrementor ( iterations , injectee () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , injectee () , new MaxIterCallback () ) ;
Distance : 4

99
Tree	iterations = new Incrementor ( iterations , LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE () , new MaxIterCallback () ) ;
Distance : 4

100
Tree	iterations = new Incrementor ( iterations , DateTimeZone.UTC () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , DateTimeZone.UTC () , new MaxIterCallback () ) ;
Distance : 4

101
Tree	iterations = new Incrementor ( iterations , makeDeclared () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , makeDeclared () , new MaxIterCallback () ) ;
Distance : 4

102
Tree	iterations = new Incrementor ( iterations , collectionHasExactlyInOrder () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , collectionHasExactlyInOrder () , new MaxIterCallback () ) ;
Distance : 4

103
Tree	iterations = new Incrementor ( iterations , newMockSafeHashSet () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , newMockSafeHashSet () , new MaxIterCallback () ) ;
Distance : 4

104
Tree	iterations = new Incrementor ( iterations , mapToString () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , mapToString () , new MaxIterCallback () ) ;
Distance : 4

105
Tree	iterations = new Incrementor ( iterations , srcText () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , srcText () , new MaxIterCallback () ) ;
Distance : 4

106
Tree	iterations = new Incrementor ( iterations , that.date () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.date () , new MaxIterCallback () ) ;
Distance : 4

107
Tree	iterations = new Incrementor ( iterations , searchArray () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , searchArray () , new MaxIterCallback () ) ;
Distance : 4

108
Tree	iterations = new Incrementor ( iterations , pair.env () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , pair.env () , new MaxIterCallback () ) ;
Distance : 4

109
Tree	iterations = new Incrementor ( iterations , randomPermutation () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , randomPermutation () , new MaxIterCallback () ) ;
Distance : 4

110
Tree	iterations = new Incrementor ( iterations , IEEEremainder () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , IEEEremainder () , new MaxIterCallback () ) ;
Distance : 4

111
Tree	iterations = new Incrementor ( iterations , toInclusive () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , toInclusive () , new MaxIterCallback () ) ;
Distance : 4

112
Tree	iterations = new Incrementor ( iterations , recvLvalue.env () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , recvLvalue.env () , new MaxIterCallback () ) ;
Distance : 4

113
Tree	iterations = new Incrementor ( iterations , newBuilder () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , newBuilder () , new MaxIterCallback () ) ;
Distance : 4

114
Tree	iterations = new Incrementor ( iterations , faces () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , faces () , new MaxIterCallback () ) ;
Distance : 4

115
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , else ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , else ) ;
Distance : 3

116
Tree	iterations = new Incrementor ( iterations , subtrahendYear () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , subtrahendYear () , new MaxIterCallback () ) ;
Distance : 4

117
Tree	iterations = new Incrementor ( iterations , Strictness.SILENT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Strictness.SILENT () , new MaxIterCallback () ) ;
Distance : 4

118
Tree	iterations = new Incrementor ( iterations , unmodifiableSet () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , unmodifiableSet () , new MaxIterCallback () ) ;
Distance : 4

119
Tree	iterations = new Incrementor ( iterations , RemoveVerifiedInOrder () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , RemoveVerifiedInOrder () , new MaxIterCallback () ) ;
Distance : 4

120
Tree	iterations = new Incrementor ( iterations , toURI () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , toURI () , new MaxIterCallback () ) ;
Distance : 4

121
Tree	iterations = new Incrementor ( iterations , options.renamePrefixNamespace () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , options.renamePrefixNamespace () , new MaxIterCallback () ) ;
Distance : 4

122
Tree	iterations = new Incrementor ( iterations , sortSuperTypesLast () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , sortSuperTypesLast () , new MaxIterCallback () ) ;
Distance : 4

123
Tree	iterations = new Incrementor ( iterations , that.obj () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.obj () , new MaxIterCallback () ) ;
Distance : 4

124
Tree	iterations = new Incrementor ( iterations , addLibraries () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , addLibraries () , new MaxIterCallback () ) ;
Distance : 4

125
Tree	iterations = new Incrementor ( iterations , DevNull.out () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , DevNull.out () , new MaxIterCallback () ) ;
Distance : 4

126
Tree	iterations = new Incrementor ( new Incrementor ( null ) ) ;
Code	iterations = new Incrementor ( new Incrementor ( null ) ) ;
Distance : 5

127
Tree	iterations = new Incrementor ( iterations , bTwos () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , bTwos () , new MaxIterCallback () ) ;
Distance : 4

128
Tree	iterations = new Incrementor ( new Incrementor () , iterations ) ;
Code	iterations = new Incrementor ( new Incrementor () , iterations ) ;
Distance : 5

129
Tree	iterations = new Incrementor ( new Incrementor () , Integer.MAX_VALUE ) ;
Code	iterations = new Incrementor ( new Incrementor () , Integer.MAX_VALUE ) ;
Distance : 5

130
Tree	iterations = new Incrementor ( iterations , getTolerance () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getTolerance () , new MaxIterCallback () ) ;
Distance : 4

131
Tree	iterations = new Incrementor ( iterations , getNodes () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getNodes () , new MaxIterCallback () ) ;
Distance : 4

132
Tree	iterations = new Incrementor ( iterations , boundDifference () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , boundDifference () , new MaxIterCallback () ) ;
Distance : 4

133
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , CHAR_CONS ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , CHAR_CONS ) ;
Distance : 3

134
Tree	iterations = new Incrementor ( iterations , BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY () , new MaxIterCallback () ) ;
Distance : 4

135
Tree	iterations = new Incrementor ( iterations , LangVersion.TYPESCRIPT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , LangVersion.TYPESCRIPT () , new MaxIterCallback () ) ;
Distance : 4

136
Tree	iterations = new Incrementor ( iterations , getDiagnosticGroups () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getDiagnosticGroups () , new MaxIterCallback () ) ;
Distance : 4

137
Tree	iterations = new Incrementor ( iterations , moduleGraph () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , moduleGraph () , new MaxIterCallback () ) ;
Distance : 4

138
Tree	iterations = new Incrementor ( iterations , isInClosurizedFile () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , isInClosurizedFile () , new MaxIterCallback () ) ;
Distance : 4

139
Tree	iterations = new Incrementor ( iterations , getNaNStrategy () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getNaNStrategy () , new MaxIterCallback () ) ;
Distance : 4

140
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , hex ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , hex ) ;
Distance : 3

141
Tree	iterations = new Incrementor ( iterations , Calendar.MINUTE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Calendar.MINUTE () , new MaxIterCallback () ) ;
Distance : 4

142
Tree	iterations = new Incrementor ( iterations , SerializableMockitoMethod () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , SerializableMockitoMethod () , new MaxIterCallback () ) ;
Distance : 4

143
Tree	iterations = new Incrementor ( iterations , plane.w () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , plane.w () , new MaxIterCallback () ) ;
Distance : 4

144
Tree	iterations = new Incrementor ( iterations , getAsNominalType () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getAsNominalType () , new MaxIterCallback () ) ;
Distance : 4

145
Tree	iterations = new Incrementor ( iterations , Calendar.SECOND () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Calendar.SECOND () , new MaxIterCallback () ) ;
Distance : 4

146
Tree	iterations = new Incrementor ( iterations , getUT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getUT () , new MaxIterCallback () ) ;
Distance : 4

147
Tree	iterations = new Incrementor ( iterations , Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE () , new MaxIterCallback () ) ;
Distance : 4

148
Tree	iterations = new Incrementor ( iterations , compilerSupplier () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , compilerSupplier () , new MaxIterCallback () ) ;
Distance : 4

149
Tree	iterations = new Incrementor ( iterations , LocalizedFormats.INTERNAL_ERROR () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , LocalizedFormats.INTERNAL_ERROR () , new MaxIterCallback () ) ;
Distance : 4

150
Tree	iterations = new Incrementor ( iterations , SoftReference () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , SoftReference () , new MaxIterCallback () ) ;
Distance : 4

151
Tree	iterations = new Incrementor ( iterations , flatten () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , flatten () , new MaxIterCallback () ) ;
Distance : 4

152
Tree	iterations = new Incrementor ( iterations , targetBaseInterface () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , targetBaseInterface () , new MaxIterCallback () ) ;
Distance : 4

153
Tree	iterations = new Incrementor ( iterations , zval.length () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , zval.length () , new MaxIterCallback () ) ;
Distance : 4

154
Tree	iterations = new Incrementor ( iterations , stubbedInvocation () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , stubbedInvocation () , new MaxIterCallback () ) ;
Distance : 4

155
Tree	iterations = new Incrementor ( iterations , createDistribution () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createDistribution () , new MaxIterCallback () ) ;
Distance : 4

156
Tree	iterations = new Incrementor ( iterations , getExpansionFactor () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getExpansionFactor () , new MaxIterCallback () ) ;
Distance : 4

157
Tree	iterations = new Incrementor ( iterations , v1.length () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , v1.length () , new MaxIterCallback () ) ;
Distance : 4

158
Tree	iterations = new Incrementor ( iterations , newSetOf () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , newSetOf () , new MaxIterCallback () ) ;
Distance : 4

159
Tree	iterations = new Incrementor ( iterations , timeout () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , timeout () , new MaxIterCallback () ) ;
Distance : 4

160
Tree	iterations = new Incrementor ( iterations , line.cos () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , line.cos () , new MaxIterCallback () ) ;
Distance : 4

161
Tree	iterations = new Incrementor ( iterations , AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , AnnotationAppender.ValueFilter.AppendDefaults.INSTANCE () , new MaxIterCallback () ) ;
Distance : 4

162
Tree	iterations = new Incrementor ( iterations , relationship () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , relationship () , new MaxIterCallback () ) ;
Distance : 4

163
Tree	iterations = new Incrementor ( iterations , RenameCallback () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , RenameCallback () , new MaxIterCallback () ) ;
Distance : 4

164
Tree	iterations = new Incrementor ( iterations , that.arrowStroke () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.arrowStroke () , new MaxIterCallback () ) ;
Distance : 4

165
Tree	iterations = new Incrementor ( iterations , Strictness.LENIENT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , Strictness.LENIENT () , new MaxIterCallback () ) ;
Distance : 4

166
Tree	iterations = new Incrementor ( iterations , toCanonicalName () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , toCanonicalName () , new MaxIterCallback () ) ;
Distance : 4

167
Tree	iterations = new Incrementor ( iterations , getKthSelector () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getKthSelector () , new MaxIterCallback () ) ;
Distance : 4

168
Tree	iterations = new Incrementor ( iterations , showSeparators () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , showSeparators () , new MaxIterCallback () ) ;
Distance : 4

169
Tree	iterations = new Incrementor ( iterations , createTooLittleInvocationsMessage () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createTooLittleInvocationsMessage () , new MaxIterCallback () ) ;
Distance : 4

170
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , Es6RewriteModules.NAMESPACE_IMPORT_CANNOT_USE_STAR ) ;
Distance : 3

171
Tree	iterations = new Incrementor ( iterations , getUniqueNameIdSupplier () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getUniqueNameIdSupplier () , new MaxIterCallback () ) ;
Distance : 4

172
Tree	iterations = new Incrementor ( iterations , lineSeparator () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , lineSeparator () , new MaxIterCallback () ) ;
Distance : 4

173
Tree	iterations = new Incrementor ( iterations , TextFragment.DEFAULT_FONT () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , TextFragment.DEFAULT_FONT () , new MaxIterCallback () ) ;
Distance : 4

174
Tree	iterations = new Incrementor ( iterations , REACHABLE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , REACHABLE () , new MaxIterCallback () ) ;
Distance : 4

175
Tree	iterations = new Incrementor ( iterations , getRepresentation () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getRepresentation () , new MaxIterCallback () ) ;
Distance : 4

176
Tree	iterations = new Incrementor ( iterations , DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , DEFAULT_NOT_EMPTY_CHAR_SEQUENCE_EX_MESSAGE () , new MaxIterCallback () ) ;
Distance : 4

177
Tree	iterations = new Incrementor ( iterations , normalizeWhitelist () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , normalizeWhitelist () , new MaxIterCallback () ) ;
Distance : 4

178
Tree	iterations = new Incrementor ( iterations , createIntegerInstance () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , createIntegerInstance () , new MaxIterCallback () ) ;
Distance : 4

179
Tree	iterations = new Incrementor ( iterations , ImpreciseCutoverField () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , ImpreciseCutoverField () , new MaxIterCallback () ) ;
Distance : 4

180
Tree	iterations = new Incrementor ( iterations , firstNonNull () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , firstNonNull () , new MaxIterCallback () ) ;
Distance : 4

181
Tree	iterations = new Incrementor ( iterations , getEntries () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getEntries () , new MaxIterCallback () ) ;
Distance : 4

182
Tree	iterations = new Incrementor ( iterations , openStream () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , openStream () , new MaxIterCallback () ) ;
Distance : 4

183
Tree	iterations = new Incrementor ( iterations , getLowerMargin () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getLowerMargin () , new MaxIterCallback () ) ;
Distance : 4

184
Tree	iterations = new Incrementor ( iterations , InOrderWrapper () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , InOrderWrapper () , new MaxIterCallback () ) ;
Distance : 4

185
Tree	iterations = new Incrementor ( iterations , new MaxIterCallback () , NAME_DEFINED_LATE_WARNING ) ;
Code	iterations = new Incrementor ( iterations , new MaxIterCallback () , NAME_DEFINED_LATE_WARNING ) ;
Distance : 3

186
Tree	iterations = new Incrementor ( iterations , l40 () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , l40 () , new MaxIterCallback () ) ;
Distance : 4

187
Tree	iterations = new Incrementor ( iterations , NonNegativeConstraint () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , NonNegativeConstraint () , new MaxIterCallback () ) ;
Distance : 4

188
Tree	iterations = new Incrementor ( iterations , getNativeObjectType () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getNativeObjectType () , new MaxIterCallback () ) ;
Distance : 4

189
Tree	iterations = new Incrementor ( iterations , getKey () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getKey () , new MaxIterCallback () ) ;
Distance : 4

190
Tree	iterations = new Incrementor ( iterations , that.seriesShapesFilled () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , that.seriesShapesFilled () , new MaxIterCallback () ) ;
Distance : 4

191
Tree	iterations = new Incrementor ( iterations , estimatedState () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , estimatedState () , new MaxIterCallback () ) ;
Distance : 4

192
Tree	iterations = new Incrementor ( iterations , currentResiduals () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , currentResiduals () , new MaxIterCallback () ) ;
Distance : 4

193
Tree	iterations = new Incrementor ( iterations , delegatesTo () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , delegatesTo () , new MaxIterCallback () ) ;
Distance : 4

194
Tree	iterations = new Incrementor ( iterations , centers () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , centers () , new MaxIterCallback () ) ;
Distance : 4

195
Tree	iterations = new Incrementor ( iterations , TransformType.INVERSE () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , TransformType.INVERSE () , new MaxIterCallback () ) ;
Distance : 4

196
Tree	iterations = new Incrementor ( iterations , getEdges () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , getEdges () , new MaxIterCallback () ) ;
Distance : 4

197
Tree	iterations = new Incrementor ( iterations , yval () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , yval () , new MaxIterCallback () ) ;
Distance : 4

198
Tree	iterations = new Incrementor ( iterations , buildUndesiredInvocationCause () , new MaxIterCallback () ) ;
Code	iterations = new Incrementor ( iterations , buildUndesiredInvocationCause () , new MaxIterCallback () ) ;
Distance : 4

199
Tree	iterations = new Incrementor ( new Incrementor () ) ; v
Code	iterations = new Incrementor ( new Incrementor () ) ; v
Distance : 4

========================================================================


========================================================================
Example Number: 78
Parent Code is: 
if ( real == NUMBER_CONSTANT && imaginary == NUMBER_CONSTANT ) { return NaN ; }
-------------------------------------------------------------------------------
Child code is: 
if ( real == NUMBER_CONSTANT && imaginary == NUMBER_CONSTANT ) { return INF ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=real}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=imaginary}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=NaN}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (25 (313{val=if}) (214{val=(}) (27 (27 (800{val=real}) (236{val===}) (34{val=NUMBER_CONSTANT})) (249{val=&&}) (27 (800{val=imaginary}) (236{val===}) (34{val=NUMBER_CONSTANT}))) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (800{val=INF}) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Math/5/parent/src_main_java_org_apache_commons_math3_complex_Complex.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

1
Tree	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Distance : 3

2
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

3
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

4
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

5
Tree	if ( real == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

6
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 4

7
Tree	if ( imaginary == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 5

8
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

9
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

10
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

11
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

12
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

13
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

14
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

15
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 4

16
Tree	if ( imaginary == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

17
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 3

18
Tree	if ( real == NUMBER_CONSTANT && this == real ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && this == real ) { return real ; }
Distance : 3

19
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

20
Tree	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 4

21
Tree	if ( real == NUMBER_CONSTANT && NaN > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN > real ) { return NaN ; }
Distance : 4

22
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Distance : 3

23
Tree	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 4

24
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return real ; }
Distance : 4

25
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Distance : 4

26
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

27
Tree	if ( real == NUMBER_CONSTANT && real > NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > NaN ) { return NaN ; }
Distance : 4

28
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

29
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 4

30
Tree	if ( real == NUMBER_CONSTANT && real == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

31
Tree	if ( imaginary == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Distance : 5

32
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

33
Tree	if ( imaginary == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

34
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Distance : 3

35
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

36
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 4

37
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Distance : 4

38
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

39
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

40
Tree	if ( NaN == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

41
Tree	if ( NaN == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Distance : 4

42
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

43
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

44
Tree	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Code	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Distance : 4

45
Tree	if ( real == NUMBER_CONSTANT && real > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > real ) { return NaN ; }
Distance : 4

46
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

47
Tree	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

48
Tree	if ( real == NUMBER_CONSTANT && this == real ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && this == real ) { return imaginary ; }
Distance : 3

49
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

50
Tree	if ( NaN == NUMBER_CONSTANT && real > real ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real > real ) { return NaN ; }
Distance : 5

51
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 3

52
Tree	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return imaginary ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return imaginary ; }
Distance : 4

53
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Distance : 3

54
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

55
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return imaginary ; }
Distance : 3

56
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

57
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 3

58
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Distance : 4

59
Tree	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Distance : 4

60
Tree	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Distance : 3

61
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

62
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Distance : 4

63
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

64
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return imaginary ; }
Distance : 4

65
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Distance : 3

66
Tree	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

67
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Distance : 3

68
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 4

69
Tree	if ( imaginary == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

70
Tree	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

71
Tree	if ( real == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Distance : 3

72
Tree	if ( real == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

73
Tree	if ( imaginary == NUMBER_CONSTANT && this == real ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == real ) { return NaN ; }
Distance : 4

74
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

75
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Distance : 3

76
Tree	if ( imaginary == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

77
Tree	if ( imaginary == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 5

78
Tree	if ( real == NUMBER_CONSTANT && real > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > real ) { return NaN ; }
Distance : 4

79
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

80
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 4

81
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

82
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

83
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

84
Tree	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Distance : 3

85
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

86
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

87
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

88
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

89
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

90
Tree	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Distance : 3

91
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

92
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

93
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 4

94
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

95
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

96
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 3

97
Tree	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 4

98
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

99
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

100
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

101
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

102
Tree	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 4

103
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 3

104
Tree	if ( NaN == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 5

105
Tree	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

106
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 3

107
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

108
Tree	if ( NaN == NUMBER_CONSTANT && this == real ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && this == real ) { return NaN ; }
Distance : 4

109
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 4

110
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 4

111
Tree	if ( imaginary == NUMBER_CONSTANT && real > real ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real > real ) { return NaN ; }
Distance : 5

112
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

113
Tree	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == real ) { return NaN ; }
Distance : 3

114
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

115
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return real ; }
Distance : 3

116
Tree	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return real ; }
Distance : 4

117
Tree	if ( imaginary == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Distance : 4

118
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

119
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Distance : 3

120
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

121
Tree	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 3

122
Tree	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Distance : 4

123
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

124
Tree	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

125
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 4

126
Tree	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && this == imaginary ) { return NaN ; }
Distance : 4

127
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 3

128
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 3

129
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

130
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

131
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return NaN ; }
Distance : 4

132
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

133
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return imaginary ; }
Distance : 3

134
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

135
Tree	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

136
Tree	if ( real == NUMBER_CONSTANT && NaN == NaN == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && NaN == NaN == NUMBER_CONSTANT ) { return real ; }
Distance : 4

137
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Distance : 4

138
Tree	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

139
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > NaN ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > NaN ) { return imaginary ; }
Distance : 4

140
Tree	if ( real == NUMBER_CONSTANT && real > real ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && real > real ) { return imaginary ; }
Distance : 4

141
Tree	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 3

142
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Distance : 3

143
Tree	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Distance : 4

144
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 4

145
Tree	if ( NaN == NUMBER_CONSTANT && this == NaN ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && this == NaN ) { return imaginary ; }
Distance : 4

146
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary > imaginary ) { return imaginary ; }
Distance : 4

147
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 4

148
Tree	if ( real == NUMBER_CONSTANT && NaN > NaN ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && NaN > NaN ) { return real ; }
Distance : 4

149
Tree	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

150
Tree	if ( real == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 4

151
Tree	if ( NaN == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 4

152
Tree	if ( imaginary == NUMBER_CONSTANT && NaN > real ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN > real ) { return NaN ; }
Distance : 5

153
Tree	if ( NaN == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && real == real == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 5

154
Tree	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return imaginary ; }
Distance : 3

155
Tree	if ( NaN == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && real > imaginary ) { return NaN ; }
Distance : 5

156
Tree	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return imaginary ; }
Distance : 4

157
Tree	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == NaN == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 3

158
Tree	if ( real == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && this == NaN ) { return NaN ; }
Distance : 3

159
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

160
Tree	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && NaN > imaginary ) { return real ; }
Distance : 4

161
Tree	if ( imaginary == NUMBER_CONSTANT && NaN > real ) { return real ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN > real ) { return real ; }
Distance : 5

162
Tree	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > NaN ) { return NaN ; }
Distance : 3

163
Tree	if ( imaginary == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return real ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return real ; }
Distance : 5

164
Tree	if ( NaN == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return NaN ; }
Distance : 4

165
Tree	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Code	if ( NaN == NUMBER_CONSTANT && imaginary > real ) { return real ; }
Distance : 4

166
Tree	if ( imaginary == NUMBER_CONSTANT && real == NaN == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real == NaN == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

167
Tree	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( NaN == NUMBER_CONSTANT && real == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 4

168
Tree	if ( NaN == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Code	if ( NaN == NUMBER_CONSTANT && NaN > imaginary ) { return NaN ; }
Distance : 5

169
Tree	if ( real == NUMBER_CONSTANT && real > imaginary ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && real > imaginary ) { return real ; }
Distance : 4

170
Tree	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 3

171
Tree	if ( imaginary == NUMBER_CONSTANT && real > NaN ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && real > NaN ) { return NaN ; }
Distance : 5

172
Tree	if ( NaN == NUMBER_CONSTANT && real > real ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && real > real ) { return imaginary ; }
Distance : 5

173
Tree	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && imaginary == real == NUMBER_CONSTANT ) { return real ; }
Distance : 3

174
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } expected
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } expected
Distance : 4

175
Tree	if ( real == NUMBER_CONSTANT && this == NaN ) { return imaginary ; }
Code	if ( real == NUMBER_CONSTANT && this == NaN ) { return imaginary ; }
Distance : 3

176
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } Test
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } Test
Distance : 4

177
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } m
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } m
Distance : 4

178
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } invocation
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } invocation
Distance : 4

179
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } add
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } add
Distance : 4

180
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } name
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } name
Distance : 4

181
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } t
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } t
Distance : 4

182
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } field
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } field
Distance : 4

183
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } IllegalArgumentException
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } IllegalArgumentException
Distance : 4

184
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } FastMath
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } FastMath
Distance : 4

185
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } reportCodeChange
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } reportCodeChange
Distance : 4

186
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } x
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } x
Distance : 4

187
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } testSame
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } testSame
Distance : 4

188
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } parent
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } parent
Distance : 4

189
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } createIllegalArgumentException
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } createIllegalArgumentException
Distance : 4

190
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } str
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } str
Distance : 4

191
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } LINE_JOINER
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } LINE_JOINER
Distance : 4

192
Tree	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return real ; }
Code	if ( real == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return real ; }
Distance : 3

193
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } :
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } :
Distance : 4

194
Tree	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( imaginary == NUMBER_CONSTANT && imaginary == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 4

195
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } notifyListeners
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } notifyListeners
Distance : 4

196
Tree	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } ArrayList
Code	if ( real == NUMBER_CONSTANT && this == imaginary ) { return NaN ; } ArrayList
Distance : 4

197
Tree	if ( imaginary == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return NaN ; }
Code	if ( imaginary == NUMBER_CONSTANT && NaN == real == NUMBER_CONSTANT ) { return NaN ; }
Distance : 5

198
Tree	if ( NaN == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Code	if ( NaN == NUMBER_CONSTANT && NaN == imaginary == NUMBER_CONSTANT ) { return imaginary ; }
Distance : 4

199
Tree	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Code	if ( real == NUMBER_CONSTANT && imaginary > real ) { return NaN ; }
Distance : 3

========================================================================


========================================================================
Example Number: 79
Parent Code is: 
new Reporter () . smartNullPointerException ( location ) ;
-------------------------------------------------------------------------------
Child code is: 
new Reporter () . smartNullPointerException ( obj , location ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=Reporter})) (216{val=()})) (235{val=.}) (802{val=smartNullPointerException}) (214{val=(}) (800{val=location}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (14 (304{val=new}) (43 (801{val=Reporter})) (216{val=()})) (235{val=.}) (802{val=smartNullPointerException}) (214{val=(}) (800{val=obj}) (234{val=,}) (800{val=location}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/30/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsSmartNulls.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	location . smartNullPointerException ( location , new Reporter () ) ; verify
Code	location . smartNullPointerException ( location , new Reporter () ) ; verify
Distance : 8

1
Tree	new Reporter () . smartNullPointerException ( location ) ; e
Code	new Reporter () . smartNullPointerException ( location ) ; e
Distance : 3

2
Tree	new Reporter () . smartNullPointerException ( location ) ; <
Code	new Reporter () . smartNullPointerException ( location ) ; <
Distance : 3

3
Tree	new Reporter () . smartNullPointerException ( location ) ; if
Code	new Reporter () . smartNullPointerException ( location ) ; if
Distance : 3

4
Tree	new Reporter () . smartNullPointerException ( location ) ; return
Code	new Reporter () . smartNullPointerException ( location ) ; return
Distance : 3

5
Tree	new Reporter () . smartNullPointerException ( location ) ; NUMBER_CONSTANT
Code	new Reporter () . smartNullPointerException ( location ) ; NUMBER_CONSTANT
Distance : 3

6
Tree	new Reporter () . smartNullPointerException ( location ) ; this
Code	new Reporter () . smartNullPointerException ( location ) ; this
Distance : 3

7
Tree	new Reporter () . smartNullPointerException ( location ) ; final
Code	new Reporter () . smartNullPointerException ( location ) ; final
Distance : 3

8
Tree	new Reporter () . smartNullPointerException ( location ) ; field
Code	new Reporter () . smartNullPointerException ( location ) ; field
Distance : 3

9
Tree	new Reporter () . smartNullPointerException ( location ) ; t
Code	new Reporter () . smartNullPointerException ( location ) ; t
Distance : 3

10
Tree	new Reporter () . smartNullPointerException ( location ) ; PlotChangeEvent
Code	new Reporter () . smartNullPointerException ( location ) ; PlotChangeEvent
Distance : 3

11
Tree	new Reporter () . smartNullPointerException ( location ) ; getField
Code	new Reporter () . smartNullPointerException ( location ) ; getField
Distance : 3

12
Tree	new Reporter () . smartNullPointerException ( location ) ; public
Code	new Reporter () . smartNullPointerException ( location ) ; public
Distance : 3

13
Tree	new Reporter () . smartNullPointerException ( location ) ; n
Code	new Reporter () . smartNullPointerException ( location ) ; n
Distance : 3

14
Tree	new Reporter () . smartNullPointerException ( location ) ; mock
Code	new Reporter () . smartNullPointerException ( location ) ; mock
Distance : 3

15
Tree	new Reporter () . smartNullPointerException ( location ) ; super
Code	new Reporter () . smartNullPointerException ( location ) ; super
Distance : 3

16
Tree	new Reporter () . smartNullPointerException ( location ) ; Test
Code	new Reporter () . smartNullPointerException ( location ) ; Test
Distance : 3

17
Tree	new Reporter () . smartNullPointerException ( location ) ; Class
Code	new Reporter () . smartNullPointerException ( location ) ; Class
Distance : 3

18
Tree	new Reporter () . smartNullPointerException ( location ) ; MathRuntimeException
Code	new Reporter () . smartNullPointerException ( location ) ; MathRuntimeException
Distance : 3

19
Tree	new Reporter () . smartNullPointerException ( location ) ; {}
Code	new Reporter () . smartNullPointerException ( location ) ; {}
Distance : 3

20
Tree	new Reporter () . smartNullPointerException ( location ) ; f
Code	new Reporter () . smartNullPointerException ( location ) ; f
Distance : 3

21
Tree	new Reporter () . smartNullPointerException ( location ) ; ParamChecks
Code	new Reporter () . smartNullPointerException ( location ) ; ParamChecks
Distance : 3

22
Tree	new Reporter () . smartNullPointerException ( location ) ; -
Code	new Reporter () . smartNullPointerException ( location ) ; -
Distance : 3

23
Tree	new Reporter () . smartNullPointerException ( location ) ; Preconditions
Code	new Reporter () . smartNullPointerException ( location ) ; Preconditions
Distance : 3

24
Tree	new Reporter () . smartNullPointerException ( location ) ; T
Code	new Reporter () . smartNullPointerException ( location ) ; T
Distance : 3

25
Tree	new Reporter () . smartNullPointerException ( location ) ; &&
Code	new Reporter () . smartNullPointerException ( location ) ; &&
Distance : 3

26
Tree	new Reporter () . smartNullPointerException ( location ) ; ]
Code	new Reporter () . smartNullPointerException ( location ) ; ]
Distance : 3

27
Tree	new Reporter () . smartNullPointerException ( location ) ; solver
Code	new Reporter () . smartNullPointerException ( location ) ; solver
Distance : 3

28
Tree	new Reporter () . smartNullPointerException ( location ) ; {
Code	new Reporter () . smartNullPointerException ( location ) ; {
Distance : 3

29
Tree	new Reporter () . smartNullPointerException ( location ) ; ()
Code	new Reporter () . smartNullPointerException ( location ) ; ()
Distance : 3

30
Tree	new Reporter () . smartNullPointerException ( location ) ; ;
Code	new Reporter () . smartNullPointerException ( location ) ; ;
Distance : 3

31
Tree	location . smartNullPointerException ( location , new Reporter () ) ; &&
Code	location . smartNullPointerException ( location , new Reporter () ) ; &&
Distance : 8

32
Tree	location . smartNullPointerException ( location , new Reporter () ) ; T
Code	location . smartNullPointerException ( location , new Reporter () ) ; T
Distance : 8

33
Tree	location . smartNullPointerException ( location , new Reporter () ) ; i
Code	location . smartNullPointerException ( location , new Reporter () ) ; i
Distance : 8

34
Tree	location . smartNullPointerException ( location , new Reporter () ) ; value
Code	location . smartNullPointerException ( location , new Reporter () ) ; value
Distance : 8

35
Tree	location . smartNullPointerException ( location , new Reporter () ) ; class
Code	location . smartNullPointerException ( location , new Reporter () ) ; class
Distance : 8

36
Tree	location . smartNullPointerException ( location , new Reporter () ) ; Object
Code	location . smartNullPointerException ( location , new Reporter () ) ; Object
Distance : 8

37
Tree	location . smartNullPointerException ( location , new Reporter () ) ; mock
Code	location . smartNullPointerException ( location , new Reporter () ) ; mock
Distance : 8

38
Tree	location . smartNullPointerException ( location , new Reporter () ) ; Override
Code	location . smartNullPointerException ( location , new Reporter () ) ; Override
Distance : 8

39
Tree	location . smartNullPointerException ( location , new Reporter () ) ; assertEquals
Code	location . smartNullPointerException ( location , new Reporter () ) ; assertEquals
Distance : 8

40
Tree	location . smartNullPointerException ( location , new Reporter () ) ; !
Code	location . smartNullPointerException ( location , new Reporter () ) ; !
Distance : 8

41
Tree	location . smartNullPointerException ( location , new Reporter () ) ; []
Code	location . smartNullPointerException ( location , new Reporter () ) ; []
Distance : 8

42
Tree	new Reporter () . smartNullPointerException ( location ) ; optimizer
Code	new Reporter () . smartNullPointerException ( location ) ; optimizer
Distance : 3

43
Tree	new Reporter () . smartNullPointerException ( location ) ; isBlock
Code	new Reporter () . smartNullPointerException ( location ) ; isBlock
Distance : 3

44
Tree	location . smartNullPointerException ( location , new Reporter () ) ; public
Code	location . smartNullPointerException ( location , new Reporter () ) ; public
Distance : 8

45
Tree	new Reporter () . smartNullPointerException ( location ) ; Override
Code	new Reporter () . smartNullPointerException ( location ) ; Override
Distance : 3

46
Tree	new Reporter () . smartNullPointerException ( location ) ; >
Code	new Reporter () . smartNullPointerException ( location ) ; >
Distance : 3

47
Tree	new Reporter () . smartNullPointerException ( location ) ; new
Code	new Reporter () . smartNullPointerException ( location ) ; new
Distance : 3

48
Tree	new Reporter () . smartNullPointerException ( location ) ; STRING_CONSTANT
Code	new Reporter () . smartNullPointerException ( location ) ; STRING_CONSTANT
Distance : 3

49
Tree	new Reporter () . smartNullPointerException ( location ) ; ,
Code	new Reporter () . smartNullPointerException ( location ) ; ,
Distance : 3

50
Tree	new Reporter () . smartNullPointerException ( location ) ; .
Code	new Reporter () . smartNullPointerException ( location ) ; .
Distance : 3

51
Tree	new Reporter () . smartNullPointerException ( location ) ; }
Code	new Reporter () . smartNullPointerException ( location ) ; }
Distance : 3

52
Tree	new Reporter () . smartNullPointerException ( location ) ; =
Code	new Reporter () . smartNullPointerException ( location ) ; =
Distance : 3

53
Tree	new Reporter () . smartNullPointerException ( location ) ; (
Code	new Reporter () . smartNullPointerException ( location ) ; (
Distance : 3

54
Tree	new Reporter () . smartNullPointerException ( location ) ; <s>
Code	new Reporter () . smartNullPointerException ( location ) ; <s>
Distance : 3

55
Tree	new Reporter () . smartNullPointerException ( location ) ; <blank>
Code	new Reporter () . smartNullPointerException ( location ) ; <blank>
Distance : 3

56
Tree	new Reporter () . smartNullPointerException ( location ) ; ;
Code	new Reporter () . smartNullPointerException ( location ) ; ;
Distance : 3

57
Tree	new Reporter () . smartNullPointerException ( location ) ; )
Code	new Reporter () . smartNullPointerException ( location ) ; )
Distance : 3

58
Tree	new Reporter () . smartNullPointerException ( location ) ; [
Code	new Reporter () . smartNullPointerException ( location ) ; [
Distance : 3

59
Tree	new Reporter () . smartNullPointerException ( location ) ; Object
Code	new Reporter () . smartNullPointerException ( location ) ; Object
Distance : 3

60
Tree	new Reporter () . smartNullPointerException ( location ) ; class
Code	new Reporter () . smartNullPointerException ( location ) ; class
Distance : 3

61
Tree	new Reporter () . smartNullPointerException ( location ) ; test
Code	new Reporter () . smartNullPointerException ( location ) ; test
Distance : 3

62
Tree	new Reporter () . smartNullPointerException ( location ) ; traverseEs6
Code	new Reporter () . smartNullPointerException ( location ) ; traverseEs6
Distance : 3

63
Tree	new Reporter () . smartNullPointerException ( location ) ; obj
Code	new Reporter () . smartNullPointerException ( location ) ; obj
Distance : 3

64
Tree	new Reporter () . smartNullPointerException ( location ) ; append
Code	new Reporter () . smartNullPointerException ( location ) ; append
Distance : 3

65
Tree	new Reporter () . smartNullPointerException ( location ) ; UnivariateFunction
Code	new Reporter () . smartNullPointerException ( location ) ; UnivariateFunction
Distance : 3

66
Tree	new Reporter () . smartNullPointerException ( location ) ; scope
Code	new Reporter () . smartNullPointerException ( location ) ; scope
Distance : 3

67
Tree	new Reporter () . smartNullPointerException ( location ) ; sb
Code	new Reporter () . smartNullPointerException ( location ) ; sb
Distance : 3

68
Tree	new Reporter () . smartNullPointerException ( location ) ; sqrt
Code	new Reporter () . smartNullPointerException ( location ) ; sqrt
Distance : 3

69
Tree	new Reporter () . smartNullPointerException ( location ) ; clone
Code	new Reporter () . smartNullPointerException ( location ) ; clone
Distance : 3

70
Tree	new Reporter () . smartNullPointerException ( location ) ; getFirstChild
Code	new Reporter () . smartNullPointerException ( location ) ; getFirstChild
Distance : 3

71
Tree	new Reporter () . smartNullPointerException ( location ) ; throws
Code	new Reporter () . smartNullPointerException ( location ) ; throws
Distance : 3

72
Tree	new Reporter () . smartNullPointerException ( location ) ; simpleMethod
Code	new Reporter () . smartNullPointerException ( location ) ; simpleMethod
Distance : 3

73
Tree	new Reporter () . smartNullPointerException ( location ) ; getArgumentMatcherStorage
Code	new Reporter () . smartNullPointerException ( location ) ; getArgumentMatcherStorage
Distance : 3

74
Tree	new Reporter () . smartNullPointerException ( location ) ; reportMatcher
Code	new Reporter () . smartNullPointerException ( location ) ; reportMatcher
Distance : 3

75
Tree	new Reporter () . smartNullPointerException ( location ) ; invocations
Code	new Reporter () . smartNullPointerException ( location ) ; invocations
Distance : 3

76
Tree	new Reporter () . smartNullPointerException ( location ) ; mode
Code	new Reporter () . smartNullPointerException ( location ) ; mode
Distance : 3

77
Tree	new Reporter () . smartNullPointerException ( location ) ; setUp
Code	new Reporter () . smartNullPointerException ( location ) ; setUp
Distance : 3

78
Tree	new Reporter () . smartNullPointerException ( location ) ; chrono
Code	new Reporter () . smartNullPointerException ( location ) ; chrono
Distance : 3

79
Tree	new Reporter () . smartNullPointerException ( location ) ; return;
Code	new Reporter () . smartNullPointerException ( location ) ; return;
Distance : 3

80
Tree	new Reporter () . smartNullPointerException ( location ) ; get
Code	new Reporter () . smartNullPointerException ( location ) ; get
Distance : 3

81
Tree	new Reporter () . smartNullPointerException ( location ) ; isEmpty
Code	new Reporter () . smartNullPointerException ( location ) ; isEmpty
Distance : 3

82
Tree	new Reporter () . smartNullPointerException ( location ) ; static
Code	new Reporter () . smartNullPointerException ( location ) ; static
Distance : 3

83
Tree	new Reporter () . smartNullPointerException ( location ) ; setAcceptedLanguage
Code	new Reporter () . smartNullPointerException ( location ) ; setAcceptedLanguage
Distance : 3

84
Tree	new Reporter () . smartNullPointerException ( location ) ; JSType
Code	new Reporter () . smartNullPointerException ( location ) ; JSType
Distance : 3

85
Tree	new Reporter () . smartNullPointerException ( location ) ; char
Code	new Reporter () . smartNullPointerException ( location ) ; char
Distance : 3

86
Tree	new Reporter () . smartNullPointerException ( location ) ; else
Code	new Reporter () . smartNullPointerException ( location ) ; else
Distance : 3

87
Tree	new Reporter () . smartNullPointerException ( location ) ; getMessage
Code	new Reporter () . smartNullPointerException ( location ) ; getMessage
Distance : 3

88
Tree	new Reporter () . smartNullPointerException ( location ) ; out
Code	new Reporter () . smartNullPointerException ( location ) ; out
Distance : 3

89
Tree	new Reporter () . smartNullPointerException ( location ) ; MutableTimePeriod
Code	new Reporter () . smartNullPointerException ( location ) ; MutableTimePeriod
Distance : 3

90
Tree	location . smartNullPointerException ( location , new Reporter () ) ; p
Code	location . smartNullPointerException ( location , new Reporter () ) ; p
Distance : 8

91
Tree	new Reporter () . smartNullPointerException ( location ) ; stroke
Code	new Reporter () . smartNullPointerException ( location ) ; stroke
Distance : 3

92
Tree	new Reporter () . smartNullPointerException ( location ) ; mockingProgress
Code	new Reporter () . smartNullPointerException ( location ) ; mockingProgress
Distance : 3

93
Tree	new Reporter () . smartNullPointerException ( location ) ; @
Code	new Reporter () . smartNullPointerException ( location ) ; @
Distance : 3

94
Tree	new Reporter () . smartNullPointerException ( location ) ; !
Code	new Reporter () . smartNullPointerException ( location ) ; !
Distance : 3

95
Tree	new Reporter () . smartNullPointerException ( location ) ; assertEquals
Code	new Reporter () . smartNullPointerException ( location ) ; assertEquals
Distance : 3

96
Tree	new Reporter () . smartNullPointerException ( location ) ; ==
Code	new Reporter () . smartNullPointerException ( location ) ; ==
Distance : 3

97
Tree	new Reporter () . smartNullPointerException ( location ) ; void
Code	new Reporter () . smartNullPointerException ( location ) ; void
Distance : 3

98
Tree	new Reporter () . smartNullPointerException ( location ) ; []
Code	new Reporter () . smartNullPointerException ( location ) ; []
Distance : 3

99
Tree	new Reporter () . smartNullPointerException ( location ) ; nullNotPermitted
Code	new Reporter () . smartNullPointerException ( location ) ; nullNotPermitted
Distance : 3

100
Tree	new Reporter () . smartNullPointerException ( location ) ; checkState
Code	new Reporter () . smartNullPointerException ( location ) ; checkState
Distance : 3

101
Tree	new Reporter () . smartNullPointerException ( location ) ; double
Code	new Reporter () . smartNullPointerException ( location ) ; double
Distance : 3

102
Tree	new Reporter () . smartNullPointerException ( location ) ; int
Code	new Reporter () . smartNullPointerException ( location ) ; int
Distance : 3

103
Tree	new Reporter () . smartNullPointerException ( location ) ; false
Code	new Reporter () . smartNullPointerException ( location ) ; false
Distance : 3

104
Tree	new Reporter () . smartNullPointerException ( location ) ; !=
Code	new Reporter () . smartNullPointerException ( location ) ; !=
Distance : 3

105
Tree	new Reporter () . smartNullPointerException ( location ) ; Collection
Code	new Reporter () . smartNullPointerException ( location ) ; Collection
Distance : 3

106
Tree	new Reporter () . smartNullPointerException ( location ) ; true
Code	new Reporter () . smartNullPointerException ( location ) ; true
Distance : 3

107
Tree	new Reporter () . smartNullPointerException ( location ) ; returnZero
Code	new Reporter () . smartNullPointerException ( location ) ; returnZero
Distance : 3

108
Tree	new Reporter () . smartNullPointerException ( location ) ; index
Code	new Reporter () . smartNullPointerException ( location ) ; index
Distance : 3

109
Tree	new Reporter () . smartNullPointerException ( location ) ; abs
Code	new Reporter () . smartNullPointerException ( location ) ; abs
Distance : 3

110
Tree	new Reporter () . smartNullPointerException ( location ) ; Double
Code	new Reporter () . smartNullPointerException ( location ) ; Double
Distance : 3

111
Tree	new Reporter () . smartNullPointerException ( location ) ; <=
Code	new Reporter () . smartNullPointerException ( location ) ; <=
Distance : 3

112
Tree	new Reporter () . smartNullPointerException ( location ) ; b
Code	new Reporter () . smartNullPointerException ( location ) ; b
Distance : 3

113
Tree	new Reporter () . smartNullPointerException ( location ) ; PeriodType
Code	new Reporter () . smartNullPointerException ( location ) ; PeriodType
Distance : 3

114
Tree	new Reporter () . smartNullPointerException ( location ) ; a
Code	new Reporter () . smartNullPointerException ( location ) ; a
Distance : 3

115
Tree	new Reporter () . smartNullPointerException ( location ) ; s
Code	new Reporter () . smartNullPointerException ( location ) ; s
Distance : 3

116
Tree	new Reporter () . smartNullPointerException ( location ) ; contains
Code	new Reporter () . smartNullPointerException ( location ) ; contains
Distance : 3

117
Tree	new Reporter () . smartNullPointerException ( location ) ; isNormalBlock
Code	new Reporter () . smartNullPointerException ( location ) ; isNormalBlock
Distance : 3

118
Tree	new Reporter () . smartNullPointerException ( location ) ; size
Code	new Reporter () . smartNullPointerException ( location ) ; size
Distance : 3

119
Tree	new Reporter () . smartNullPointerException ( location ) ; LanguageMode.ECMASCRIPT_2015
Code	new Reporter () . smartNullPointerException ( location ) ; LanguageMode.ECMASCRIPT_2015
Distance : 3

120
Tree	new Reporter () . smartNullPointerException ( location ) ; StringBuilder
Code	new Reporter () . smartNullPointerException ( location ) ; StringBuilder
Distance : 3

121
Tree	new Reporter () . smartNullPointerException ( location ) ; stream
Code	new Reporter () . smartNullPointerException ( location ) ; stream
Distance : 3

122
Tree	location . smartNullPointerException ( location , new Reporter () ) ; options
Code	location . smartNullPointerException ( location , new Reporter () ) ; options
Distance : 8

123
Tree	location . smartNullPointerException ( location , new Reporter () ) ; toString
Code	location . smartNullPointerException ( location , new Reporter () ) ; toString
Distance : 8

124
Tree	new Reporter () . smartNullPointerException ( location ) ; ex
Code	new Reporter () . smartNullPointerException ( location ) ; ex
Distance : 3

125
Tree	new Reporter () . smartNullPointerException ( location ) ; NodeTraversal
Code	new Reporter () . smartNullPointerException ( location ) ; NodeTraversal
Distance : 3

126
Tree	new Reporter () . smartNullPointerException ( location ) ; root
Code	new Reporter () . smartNullPointerException ( location ) ; root
Distance : 3

127
Tree	new Reporter () . smartNullPointerException ( location ) ; NodeUtil
Code	new Reporter () . smartNullPointerException ( location ) ; NodeUtil
Distance : 3

128
Tree	new Reporter () . smartNullPointerException ( location ) ; Assert
Code	new Reporter () . smartNullPointerException ( location ) ; Assert
Distance : 3

129
Tree	new Reporter () . smartNullPointerException ( location ) ; Fraction
Code	new Reporter () . smartNullPointerException ( location ) ; Fraction
Distance : 3

130
Tree	new Reporter () . smartNullPointerException ( location ) ; Exception
Code	new Reporter () . smartNullPointerException ( location ) ; Exception
Distance : 3

131
Tree	new Reporter () . smartNullPointerException ( location ) ; Node
Code	new Reporter () . smartNullPointerException ( location ) ; Node
Distance : 3

132
Tree	new Reporter () . smartNullPointerException ( location ) ; c
Code	new Reporter () . smartNullPointerException ( location ) ; c
Distance : 3

133
Tree	new Reporter () . smartNullPointerException ( location ) ; notifyListeners
Code	new Reporter () . smartNullPointerException ( location ) ; notifyListeners
Distance : 3

134
Tree	new Reporter () . smartNullPointerException ( location ) ; lines
Code	new Reporter () . smartNullPointerException ( location ) ; lines
Distance : 3

135
Tree	new Reporter () . smartNullPointerException ( location ) ; verify
Code	new Reporter () . smartNullPointerException ( location ) ; verify
Distance : 3

136
Tree	new Reporter () . smartNullPointerException ( location ) ; add
Code	new Reporter () . smartNullPointerException ( location ) ; add
Distance : 3

137
Tree	new Reporter () . smartNullPointerException ( location ) ; type
Code	new Reporter () . smartNullPointerException ( location ) ; type
Distance : 3

138
Tree	new Reporter () . smartNullPointerException ( location ) ; String
Code	new Reporter () . smartNullPointerException ( location ) ; String
Distance : 3

139
Tree	new Reporter () . smartNullPointerException ( location ) ; paint
Code	new Reporter () . smartNullPointerException ( location ) ; paint
Distance : 3

140
Tree	new Reporter () . smartNullPointerException ( location ) ; LanguageMode.ECMASCRIPT6
Code	new Reporter () . smartNullPointerException ( location ) ; LanguageMode.ECMASCRIPT6
Distance : 3

141
Tree	new Reporter () . smartNullPointerException ( location ) ; y
Code	new Reporter () . smartNullPointerException ( location ) ; y
Distance : 3

142
Tree	new Reporter () . smartNullPointerException ( location ) ; Integer
Code	new Reporter () . smartNullPointerException ( location ) ; Integer
Distance : 3

143
Tree	new Reporter () . smartNullPointerException ( location ) ; v
Code	new Reporter () . smartNullPointerException ( location ) ; v
Distance : 3

144
Tree	new Reporter () . smartNullPointerException ( location ) ; expected
Code	new Reporter () . smartNullPointerException ( location ) ; expected
Distance : 3

145
Tree	new Reporter () . smartNullPointerException ( location ) ; reportCodeChange
Code	new Reporter () . smartNullPointerException ( location ) ; reportCodeChange
Distance : 3

146
Tree	new Reporter () . smartNullPointerException ( location ) ; invocation
Code	new Reporter () . smartNullPointerException ( location ) ; invocation
Distance : 3

147
Tree	new Reporter () . smartNullPointerException ( location ) ; assertThat
Code	new Reporter () . smartNullPointerException ( location ) ; assertThat
Distance : 3

148
Tree	new Reporter () . smartNullPointerException ( location ) ; FastMath
Code	new Reporter () . smartNullPointerException ( location ) ; FastMath
Distance : 3

149
Tree	new Reporter () . smartNullPointerException ( location ) ; IllegalArgumentException
Code	new Reporter () . smartNullPointerException ( location ) ; IllegalArgumentException
Distance : 3

150
Tree	new Reporter () . smartNullPointerException ( location ) ; boolean
Code	new Reporter () . smartNullPointerException ( location ) ; boolean
Distance : 3

151
Tree	new Reporter () . smartNullPointerException ( location ) ; name
Code	new Reporter () . smartNullPointerException ( location ) ; name
Distance : 3

152
Tree	new Reporter () . smartNullPointerException ( location ) ; checkArgument
Code	new Reporter () . smartNullPointerException ( location ) ; checkArgument
Distance : 3

153
Tree	new Reporter () . smartNullPointerException ( location ) ; data
Code	new Reporter () . smartNullPointerException ( location ) ; data
Distance : 3

154
Tree	location . smartNullPointerException ( location ) ; throw
Code	location . smartNullPointerException ( location ) ; throw
Distance : 6

155
Tree	location . smartNullPointerException ( location ) ; catch
Code	location . smartNullPointerException ( location ) ; catch
Distance : 6

156
Tree	location . smartNullPointerException ( location ) ; void
Code	location . smartNullPointerException ( location ) ; void
Distance : 6

157
Tree	location . smartNullPointerException ( location ) ; ==
Code	location . smartNullPointerException ( location ) ; ==
Distance : 6

158
Tree	location . smartNullPointerException ( location ) ; false
Code	location . smartNullPointerException ( location ) ; false
Distance : 6

159
Tree	location . smartNullPointerException ( location ) ; int
Code	location . smartNullPointerException ( location ) ; int
Distance : 6

160
Tree	location . smartNullPointerException ( location ) ; @
Code	location . smartNullPointerException ( location ) ; @
Distance : 6

161
Tree	location . smartNullPointerException ( location ) ; test
Code	location . smartNullPointerException ( location ) ; test
Distance : 6

162
Tree	location . smartNullPointerException ( location ) ; mode
Code	location . smartNullPointerException ( location ) ; mode
Distance : 6

163
Tree	location . smartNullPointerException ( location ) ; true
Code	location . smartNullPointerException ( location ) ; true
Distance : 6

164
Tree	location . smartNullPointerException ( location ) ; {}
Code	location . smartNullPointerException ( location ) ; {}
Distance : 6

165
Tree	location . smartNullPointerException ( location ) ; MathRuntimeException
Code	location . smartNullPointerException ( location ) ; MathRuntimeException
Distance : 6

166
Tree	smartNullPointerException ( location , obj , obj ) ; return;
Code	smartNullPointerException ( location , obj , obj ) ; return;
Distance : 8

167
Tree	smartNullPointerException ( location , obj , obj ) ; s
Code	smartNullPointerException ( location , obj , obj ) ; s
Distance : 8

168
Tree	smartNullPointerException ( location , obj , obj ) ; char
Code	smartNullPointerException ( location , obj , obj ) ; char
Distance : 8

169
Tree	new Reporter () . smartNullPointerException ( location ) ; m
Code	new Reporter () . smartNullPointerException ( location ) ; m
Distance : 3

170
Tree	new Reporter () . smartNullPointerException ( location ) ; *
Code	new Reporter () . smartNullPointerException ( location ) ; *
Distance : 3

171
Tree	new Reporter () . smartNullPointerException ( location ) ; getInstance
Code	new Reporter () . smartNullPointerException ( location ) ; getInstance
Distance : 3

172
Tree	new Reporter () . smartNullPointerException ( location ) ; serialised
Code	new Reporter () . smartNullPointerException ( location ) ; serialised
Distance : 3

173
Tree	new Reporter () . smartNullPointerException ( location ) ; checkNotNull
Code	new Reporter () . smartNullPointerException ( location ) ; checkNotNull
Distance : 3

174
Tree	new Reporter () . smartNullPointerException ( location ) ; TestUtils
Code	new Reporter () . smartNullPointerException ( location ) ; TestUtils
Distance : 3

175
Tree	new Reporter () . smartNullPointerException ( location ) ; source
Code	new Reporter () . smartNullPointerException ( location ) ; source
Distance : 3

176
Tree	new Reporter () . smartNullPointerException ( location ) ; toString
Code	new Reporter () . smartNullPointerException ( location ) ; toString
Distance : 3

177
Tree	new Reporter () . smartNullPointerException ( location ) ; Math
Code	new Reporter () . smartNullPointerException ( location ) ; Math
Distance : 3

178
Tree	new Reporter () . smartNullPointerException ( location ) ; wanted
Code	new Reporter () . smartNullPointerException ( location ) ; wanted
Distance : 3

179
Tree	new Reporter () . smartNullPointerException ( location ) ; options
Code	new Reporter () . smartNullPointerException ( location ) ; options
Distance : 3

180
Tree	new Reporter () . smartNullPointerException ( location ) ; p
Code	new Reporter () . smartNullPointerException ( location ) ; p
Distance : 3

181
Tree	new Reporter () . smartNullPointerException ( location ) ; createIllegalArgumentException
Code	new Reporter () . smartNullPointerException ( location ) ; createIllegalArgumentException
Distance : 3

182
Tree	new Reporter () . smartNullPointerException ( location ) ; parent
Code	new Reporter () . smartNullPointerException ( location ) ; parent
Distance : 3

183
Tree	new Reporter () . smartNullPointerException ( location ) ; fireChangeEvent
Code	new Reporter () . smartNullPointerException ( location ) ; fireChangeEvent
Distance : 3

184
Tree	new Reporter () . smartNullPointerException ( location ) ; ArrayList
Code	new Reporter () . smartNullPointerException ( location ) ; ArrayList
Distance : 3

185
Tree	location . smartNullPointerException ( location , new Reporter () ) ; }
Code	location . smartNullPointerException ( location , new Reporter () ) ; }
Distance : 8

186
Tree	location . smartNullPointerException ( location , new Reporter () ) ; ()
Code	location . smartNullPointerException ( location , new Reporter () ) ; ()
Distance : 8

187
Tree	location . smartNullPointerException ( location , new Reporter () ) ; ;
Code	location . smartNullPointerException ( location , new Reporter () ) ; ;
Distance : 8

188
Tree	location . smartNullPointerException ( location , new Reporter () ) ; <s>
Code	location . smartNullPointerException ( location , new Reporter () ) ; <s>
Distance : 8

189
Tree	location . smartNullPointerException ( location , new Reporter () ) ; (
Code	location . smartNullPointerException ( location , new Reporter () ) ; (
Distance : 8

190
Tree	location . smartNullPointerException ( location , new Reporter () ) ; ;
Code	location . smartNullPointerException ( location , new Reporter () ) ; ;
Distance : 8

191
Tree	location . smartNullPointerException ( location , new Reporter () ) ; )
Code	location . smartNullPointerException ( location , new Reporter () ) ; )
Distance : 8

192
Tree	location . smartNullPointerException ( location , new Reporter () ) ; .
Code	location . smartNullPointerException ( location , new Reporter () ) ; .
Distance : 8

193
Tree	location . smartNullPointerException ( location , new Reporter () ) ; ,
Code	location . smartNullPointerException ( location , new Reporter () ) ; ,
Distance : 8

194
Tree	location . smartNullPointerException ( location , new Reporter () ) ; +
Code	location . smartNullPointerException ( location , new Reporter () ) ; +
Distance : 8

195
Tree	location . smartNullPointerException ( location , new Reporter () ) ; null
Code	location . smartNullPointerException ( location , new Reporter () ) ; null
Distance : 8

196
Tree	location . smartNullPointerException ( location , new Reporter () ) ; void
Code	location . smartNullPointerException ( location , new Reporter () ) ; void
Distance : 8

197
Tree	location . smartNullPointerException ( location , new Reporter () ) ; throw
Code	location . smartNullPointerException ( location , new Reporter () ) ; throw
Distance : 8

198
Tree	new Reporter () . smartNullPointerException ( location ) ; +
Code	new Reporter () . smartNullPointerException ( location ) ; +
Distance : 3

199
Tree	location . smartNullPointerException ( location , new Reporter () ) ; nullNotPermitted
Code	location . smartNullPointerException ( location , new Reporter () ) ; nullNotPermitted
Distance : 8

========================================================================


========================================================================
Example Number: 80
Parent Code is: 
return getMock ( invocation ) ;
-------------------------------------------------------------------------------
Child code is: 
return getMock ( invocation , returnTypeGenericMetadata ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getMock}) (214{val=(}) (800{val=invocation}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=getMock}) (214{val=(}) (800{val=invocation}) (234{val=,}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/25/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return getMock ( invocation ) ;
Code	return getMock ( invocation ) ;
Distance : 2

1
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getParent
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getParent
Distance : 7

2
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; node
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; node
Distance : 7

3
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Invocation
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Invocation
Distance : 7

4
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ex
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ex
Distance : 7

5
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Exception
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Exception
Distance : 7

6
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; root
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; root
Distance : 7

7
Tree	return getMock ( invocation ) ; .
Code	return getMock ( invocation ) ; .
Distance : 3

8
Tree	return getMock ( invocation ) ; return;
Code	return getMock ( invocation ) ; return;
Distance : 3

9
Tree	return getMock ( invocation ) ; chrono
Code	return getMock ( invocation ) ; chrono
Distance : 3

10
Tree	return getMock ( invocation ) ; mode
Code	return getMock ( invocation ) ; mode
Distance : 3

11
Tree	return getMock ( invocation ) ; true
Code	return getMock ( invocation ) ; true
Distance : 3

12
Tree	return getMock ( invocation ) ; solver
Code	return getMock ( invocation ) ; solver
Distance : 3

13
Tree	return getMock ( invocation ) ; Collection
Code	return getMock ( invocation ) ; Collection
Distance : 3

14
Tree	return getMock ( invocation ) ; getField
Code	return getMock ( invocation ) ; getField
Distance : 3

15
Tree	return getMock ( invocation ) ; PlotChangeEvent
Code	return getMock ( invocation ) ; PlotChangeEvent
Distance : 3

16
Tree	return getMock ( invocation ) ; t
Code	return getMock ( invocation ) ; t
Distance : 3

17
Tree	return getMock ( invocation ) ; field
Code	return getMock ( invocation ) ; field
Distance : 3

18
Tree	return getMock ( invocation ) ; final
Code	return getMock ( invocation ) ; final
Distance : 3

19
Tree	return getMock ( invocation ) ; this
Code	return getMock ( invocation ) ; this
Distance : 3

20
Tree	return getMock ( invocation ) ; NUMBER_CONSTANT
Code	return getMock ( invocation ) ; NUMBER_CONSTANT
Distance : 3

21
Tree	return getMock ( invocation ) ; return
Code	return getMock ( invocation ) ; return
Distance : 3

22
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; StrBuilder
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; StrBuilder
Distance : 7

23
Tree	return getMock ( invocation ) ; if
Code	return getMock ( invocation ) ; if
Distance : 3

24
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; setUp
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; setUp
Distance : 7

25
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; index
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; index
Distance : 7

26
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; for
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; for
Distance : 7

27
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; NodeTraversal
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; NodeTraversal
Distance : 7

28
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; append
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; append
Distance : 7

29
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; obj
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; obj
Distance : 7

30
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; traverseEs6
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; traverseEs6
Distance : 7

31
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; MutableTimePeriod
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; MutableTimePeriod
Distance : 7

32
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; stroke
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; stroke
Distance : 7

33
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; StringBuilder
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; StringBuilder
Distance : 7

34
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; mockingProgress
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; mockingProgress
Distance : 7

35
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT_2015
Distance : 7

36
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; size
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; size
Distance : 7

37
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isNormalBlock
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isNormalBlock
Distance : 7

38
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; contains
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; contains
Distance : 7

39
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; s
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; s
Distance : 7

40
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; a
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; a
Distance : 7

41
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; PeriodType
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; PeriodType
Distance : 7

42
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; b
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; b
Distance : 7

43
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; <=
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; <=
Distance : 7

44
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Double
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Double
Distance : 7

45
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; abs
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; abs
Distance : 7

46
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; reportMatcher
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; reportMatcher
Distance : 7

47
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; invocations
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; invocations
Distance : 7

48
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; assertTrue
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; assertTrue
Distance : 7

49
Tree	return getMock ( invocation ) ; <
Code	return getMock ( invocation ) ; <
Distance : 3

50
Tree	return getMock ( invocation ) ; n
Code	return getMock ( invocation ) ; n
Distance : 3

51
Tree	return getMock ( invocation ) ; setAcceptedLanguage
Code	return getMock ( invocation ) ; setAcceptedLanguage
Distance : 3

52
Tree	return getMock ( invocation ) ; TestUtilities
Code	return getMock ( invocation ) ; TestUtilities
Distance : 3

53
Tree	return getMock ( invocation ) ; js
Code	return getMock ( invocation ) ; js
Distance : 3

54
Tree	return getMock ( invocation ) ; getChronology
Code	return getMock ( invocation ) ; getChronology
Distance : 3

55
Tree	return getMock ( invocation ) ; pattern
Code	return getMock ( invocation ) ; pattern
Distance : 3

56
Tree	return getMock ( invocation ) ; instant
Code	return getMock ( invocation ) ; instant
Distance : 3

57
Tree	return getMock ( invocation ) ; matcher
Code	return getMock ( invocation ) ; matcher
Distance : 3

58
Tree	return getMock ( invocation ) ; stream
Code	return getMock ( invocation ) ; stream
Distance : 3

59
Tree	return getMock ( invocation ) ; out
Code	return getMock ( invocation ) ; out
Distance : 3

60
Tree	return getMock ( invocation ) ; getMessage
Code	return getMock ( invocation ) ; getMessage
Distance : 3

61
Tree	return getMock ( invocation ) ; else
Code	return getMock ( invocation ) ; else
Distance : 3

62
Tree	return getMock ( invocation ) ; char
Code	return getMock ( invocation ) ; char
Distance : 3

63
Tree	return getMock ( invocation ) ; JSType
Code	return getMock ( invocation ) ; JSType
Distance : 3

64
Tree	return getMock ( invocation ) ; }
Code	return getMock ( invocation ) ; }
Distance : 3

65
Tree	return getMock ( invocation ) ; ,
Code	return getMock ( invocation ) ; ,
Distance : 3

66
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; NodeUtil
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; NodeUtil
Distance : 7

67
Tree	return getMock ( invocation ) ; STRING_CONSTANT
Code	return getMock ( invocation ) ; STRING_CONSTANT
Distance : 3

68
Tree	return getMock ( invocation ) ; MathRuntimeException
Code	return getMock ( invocation ) ; MathRuntimeException
Distance : 3

69
Tree	return getMock ( invocation ) ; Class
Code	return getMock ( invocation ) ; Class
Distance : 3

70
Tree	return getMock ( invocation ) ; Test
Code	return getMock ( invocation ) ; Test
Distance : 3

71
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ;
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ;
Distance : 6

72
Tree	return getMock ( invocation ) ; equals
Code	return getMock ( invocation ) ; equals
Distance : 3

73
Tree	return getMock ( invocation ) ; e
Code	return getMock ( invocation ) ; e
Distance : 3

74
Tree	return getMock ( invocation ) ; externs
Code	return getMock ( invocation ) ; externs
Distance : 3

75
Tree	return getMock ( invocation ) ; for
Code	return getMock ( invocation ) ; for
Distance : 3

76
Tree	return getMock ( invocation ) ; {
Code	return getMock ( invocation ) ; {
Distance : 3

77
Tree	return getMock ( invocation ) ; ()
Code	return getMock ( invocation ) ; ()
Distance : 3

78
Tree	return getMock ( invocation ) ; ;
Code	return getMock ( invocation ) ; ;
Distance : 3

79
Tree	return getMock ( invocation ) ; )
Code	return getMock ( invocation ) ; )
Distance : 3

80
Tree	return getMock ( invocation ) ; ;
Code	return getMock ( invocation ) ; ;
Distance : 3

81
Tree	return getMock ( invocation ) ; <blank>
Code	return getMock ( invocation ) ; <blank>
Distance : 3

82
Tree	return getMock ( invocation ) ; <s>
Code	return getMock ( invocation ) ; <s>
Distance : 3

83
Tree	return getMock ( invocation ) ; (
Code	return getMock ( invocation ) ; (
Distance : 3

84
Tree	return getMock ( invocation ) ; =
Code	return getMock ( invocation ) ; =
Distance : 3

85
Tree	return getMock ( invocation ) ; get
Code	return getMock ( invocation ) ; get
Distance : 3

86
Tree	return getMock ( invocation ) ; isEmpty
Code	return getMock ( invocation ) ; isEmpty
Distance : 3

87
Tree	return getMock ( invocation ) ; static
Code	return getMock ( invocation ) ; static
Distance : 3

88
Tree	return getMock ( invocation ) ; d
Code	return getMock ( invocation ) ; d
Distance : 3

89
Tree	return getMock ( invocation ) ; abs
Code	return getMock ( invocation ) ; abs
Distance : 3

90
Tree	return getMock ( invocation ) ; reportMatcher
Code	return getMock ( invocation ) ; reportMatcher
Distance : 3

91
Tree	return getMock ( invocation ) ; index
Code	return getMock ( invocation ) ; index
Distance : 3

92
Tree	return getMock ( invocation ) ; invocations
Code	return getMock ( invocation ) ; invocations
Distance : 3

93
Tree	return getMock ( invocation ) ; setUp
Code	return getMock ( invocation ) ; setUp
Distance : 3

94
Tree	return getMock ( invocation ) ; StrBuilder
Code	return getMock ( invocation ) ; StrBuilder
Distance : 3

95
Tree	return getMock ( invocation ) ; getParent
Code	return getMock ( invocation ) ; getParent
Distance : 3

96
Tree	return getMock ( invocation ) ; node
Code	return getMock ( invocation ) ; node
Distance : 3

97
Tree	return getMock ( invocation ) ; assertTrue
Code	return getMock ( invocation ) ; assertTrue
Distance : 3

98
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; externs
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; externs
Distance : 7

99
Tree	return getMock ( invocation ) ; Invocation
Code	return getMock ( invocation ) ; Invocation
Distance : 3

100
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; final
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; final
Distance : 7

101
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Integer
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Integer
Distance : 7

102
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; y
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; y
Distance : 7

103
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT6
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LanguageMode.ECMASCRIPT6
Distance : 7

104
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; optimizer
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; optimizer
Distance : 7

105
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; alpha
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; alpha
Distance : 7

106
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isBlock
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isBlock
Distance : 7

107
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; returnZero
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; returnZero
Distance : 7

108
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getArgumentMatcherStorage
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getArgumentMatcherStorage
Distance : 7

109
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; simpleMethod
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; simpleMethod
Distance : 7

110
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; throws
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; throws
Distance : 7

111
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getFirstChild
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getFirstChild
Distance : 7

112
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LINE_JOINER
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; LINE_JOINER
Distance : 7

113
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; fail
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; fail
Distance : 7

114
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; result
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; result
Distance : 7

115
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; :
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; :
Distance : 7

116
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; checkArgument
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; checkArgument
Distance : 7

117
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; data
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; data
Distance : 7

118
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; p
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; p
Distance : 7

119
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; options
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; options
Distance : 7

120
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; wanted
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; wanted
Distance : 7

121
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Math
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Math
Distance : 7

122
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; v
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; v
Distance : 7

123
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; toString
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; toString
Distance : 7

124
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; expected
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; expected
Distance : 7

125
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; reportCodeChange
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; reportCodeChange
Distance : 7

126
Tree	return returnTypeGenericMetadata . getMock ( invocation ) ;
Code	return returnTypeGenericMetadata . getMock ( invocation ) ;
Distance : 4

127
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; d
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; d
Distance : 7

128
Tree	return invocation + NUMBER_CONSTANT ;
Code	return invocation + NUMBER_CONSTANT ;
Distance : 5

129
Tree	return returnTypeGenericMetadata + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ;
Code	return returnTypeGenericMetadata + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ;
Distance : 8

130
Tree	return invocation . getMock ( invocation ) ;
Code	return invocation . getMock ( invocation ) ;
Distance : 4

131
Tree	return getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata ) ;
Distance : 2

132
Tree	return returnTypeGenericMetadata + this . invocation . getMock ( CHAR_CONS , CHAR_CONS ) ;
Code	return returnTypeGenericMetadata + this . invocation . getMock ( CHAR_CONS , CHAR_CONS ) ;
Distance : 8

133
Tree	return invocation + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ;
Code	return invocation + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ;
Distance : 8

134
Tree	return returnTypeGenericMetadata . getMock ( returnTypeGenericMetadata ) ;
Code	return returnTypeGenericMetadata . getMock ( returnTypeGenericMetadata ) ;
Distance : 4

135
Tree	return invocation + this . invocation . getMock ( CHAR_CONS , CHAR_CONS ) ;
Code	return invocation + this . invocation . getMock ( CHAR_CONS , CHAR_CONS ) ;
Distance : 8

136
Tree	return invocation . getMock ( returnTypeGenericMetadata ) ;
Code	return invocation . getMock ( returnTypeGenericMetadata ) ;
Distance : 4

137
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; add
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; add
Distance : 7

138
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; FastMath
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; FastMath
Distance : 7

139
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; invocation
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; invocation
Distance : 7

140
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; createIllegalArgumentException
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; createIllegalArgumentException
Distance : 7

141
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; parent
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; parent
Distance : 7

142
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; fireChangeEvent
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; fireChangeEvent
Distance : 7

143
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ArrayList
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ArrayList
Distance : 7

144
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; x
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; x
Distance : 7

145
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; testSame
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; testSame
Distance : 7

146
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; assertThat
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; assertThat
Distance : 7

147
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; str
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; str
Distance : 7

148
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; source
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; source
Distance : 7

149
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; IllegalArgumentException
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; IllegalArgumentException
Distance : 7

150
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; checkNotNull
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; checkNotNull
Distance : 7

151
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; matcher
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; matcher
Distance : 7

152
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; stream
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; stream
Distance : 7

153
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; out
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; out
Distance : 7

154
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getMessage
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getMessage
Distance : 7

155
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; else
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; else
Distance : 7

156
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; char
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; char
Distance : 7

157
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; JSType
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; JSType
Distance : 7

158
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; static
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; static
Distance : 7

159
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; scope
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; scope
Distance : 7

160
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isEmpty
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; isEmpty
Distance : 7

161
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; get
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; get
Distance : 7

162
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; return;
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; return;
Distance : 7

163
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; chrono
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; chrono
Distance : 7

164
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; true
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; true
Distance : 7

165
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; solver
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; solver
Distance : 7

166
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Collection
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Collection
Distance : 7

167
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getField
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getField
Distance : 7

168
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; PlotChangeEvent
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; PlotChangeEvent
Distance : 7

169
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; TestUtils
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; TestUtils
Distance : 7

170
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; field
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; field
Distance : 7

171
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; t
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; t
Distance : 7

172
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; instant
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; instant
Distance : 7

173
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; pattern
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; pattern
Distance : 7

174
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; mode
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; mode
Distance : 7

175
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; js
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; js
Distance : 7

176
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; *
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; *
Distance : 7

177
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getInstance
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getInstance
Distance : 7

178
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getChronology
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; getChronology
Distance : 7

179
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; serialised
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; serialised
Distance : 7

180
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; type
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; type
Distance : 7

181
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; m
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; m
Distance : 7

182
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; boolean
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; boolean
Distance : 7

183
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; join
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; join
Distance : 7

184
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; List
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; List
Distance : 7

185
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Args
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; Args
Distance : 7

186
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; array
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; array
Distance : 7

187
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; paint
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; paint
Distance : 7

188
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; try
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; try
Distance : 7

189
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; sqrt
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; sqrt
Distance : 7

190
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; TestUtilities
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; TestUtilities
Distance : 7

191
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; name
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; name
Distance : 7

192
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; clone
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; clone
Distance : 7

193
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; UnivariateFunction
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; UnivariateFunction
Distance : 7

194
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; sb
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; sb
Distance : 7

195
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; <>
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; <>
Distance : 7

196
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; setAcceptedLanguage
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; setAcceptedLanguage
Distance : 7

197
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; equals
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; equals
Distance : 7

198
Tree	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ]
Code	return returnTypeGenericMetadata + NUMBER_CONSTANT ; ]
Distance : 7

199
Tree	return returnTypeGenericMetadata + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ; optimizer
Code	return returnTypeGenericMetadata + this . returnTypeGenericMetadata . getMock ( CHAR_CONS , CHAR_CONS ) ; optimizer
Distance : 9

========================================================================


========================================================================
Example Number: 81
Parent Code is: 
return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
-------------------------------------------------------------------------------
Child code is: 
return mockSettings . serializable () . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=mockSettings}) (235{val=.}) (802{val=defaultAnswer}) (214{val=(}) (32 (802{val=returnsDeepStubsAnswerUsing}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (32 (800{val=mockSettings}) (235{val=.}) (802{val=serializable}) (216{val=()})) (235{val=.}) (802{val=defaultAnswer}) (214{val=(}) (32 (802{val=returnsDeepStubsAnswerUsing}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/23/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
Distance : 5

1
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Object ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Object ;
Distance : 5

2
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && defaultBehavior ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && defaultBehavior ;
Distance : 5

3
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && expected ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && expected ;
Distance : 5

4
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && printers ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && printers ;
Distance : 5

5
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InvocationBuilder ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InvocationBuilder ;
Distance : 5

6
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && answer ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && answer ;
Distance : 5

7
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && invocation ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && invocation ;
Distance : 5

8
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Random ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Random ;
Distance : 5

9
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && testMissedEndEvent ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && testMissedEndEvent ;
Distance : 5

10
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InitializationError ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InitializationError ;
Distance : 5

11
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && serializable ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && serializable ;
Distance : 5

12
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && rhs.b ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && rhs.b ;
Distance : 5

13
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && -- ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && -- ;
Distance : 5

14
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getBytes ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getBytes ;
Distance : 5

15
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) < mockSettings ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) < mockSettings ;
Distance : 5

16
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && callback ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && callback ;
Distance : 5

17
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && returnMap ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && returnMap ;
Distance : 5

18
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && withSettings ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && withSettings ;
Distance : 5

19
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && indirect ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && indirect ;
Distance : 5

20
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getArguments ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getArguments ;
Distance : 5

21
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && type ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && type ;
Distance : 5

22
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FakeList ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FakeList ;
Distance : 5

23
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getWanted ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getWanted ;
Distance : 5

24
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && <= ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && <= ;
Distance : 6

25
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PRIMITIVE_TYPES ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PRIMITIVE_TYPES ;
Distance : 5

26
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && ruleSets ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && ruleSets ;
Distance : 5

27
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && chunk ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && chunk ;
Distance : 5

28
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && typeToMock ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && typeToMock ;
Distance : 5

29
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && serialised ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && serialised ;
Distance : 5

30
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && MockitoMock ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && MockitoMock ;
Distance : 5

31
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && invocationListeners ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && invocationListeners ;
Distance : 5

32
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InvocationImpl ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && InvocationImpl ;
Distance : 5

33
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Config.StrictMode.SLOPPY ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Config.StrictMode.SLOPPY ;
Distance : 5

34
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && est ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && est ;
Distance : 5

35
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && hasSameMethod ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && hasSameMethod ;
Distance : 5

36
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && delegatesTo ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && delegatesTo ;
Distance : 5

37
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && len ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && len ;
Distance : 5

38
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && matchLabel ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && matchLabel ;
Distance : 5

39
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && popList ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && popList ;
Distance : 5

40
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getMockSettings ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getMockSettings ;
Distance : 5

41
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && groupsTmp ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && groupsTmp ;
Distance : 5

42
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && MockAwareStub ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && MockAwareStub ;
Distance : 5

43
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && a2 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && a2 ;
Distance : 5

44
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && lhsClass ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && lhsClass ;
Distance : 5

45
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && returnZero ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && returnZero ;
Distance : 5

46
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && template ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && template ;
Distance : 5

47
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && ^ ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && ^ ;
Distance : 6

48
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Method ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Method ;
Distance : 5

49
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && argumentsMatch ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && argumentsMatch ;
Distance : 5

50
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && {} ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && {} ;
Distance : 5

51
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && toLowerCase ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && toLowerCase ;
Distance : 5

52
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && hyper ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && hyper ;
Distance : 5

53
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && extraInterfaces ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && extraInterfaces ;
Distance : 6

54
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && needAliases ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && needAliases ;
Distance : 5

55
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Evaluation ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Evaluation ;
Distance : 5

56
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PointVectorValuePair ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PointVectorValuePair ;
Distance : 5

57
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CaseInsensitiveTextStrategy ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CaseInsensitiveTextStrategy ;
Distance : 5

58
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ;
Distance : 3

59
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && method ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && method ;
Distance : 5

60
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Locale.UK ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Locale.UK ;
Distance : 5

61
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getEnums ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getEnums ;
Distance : 5

62
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Color.BLUE ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Color.BLUE ;
Distance : 5

63
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_HOUR ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_HOUR ;
Distance : 5

64
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getInterceptor ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getInterceptor ;
Distance : 5

65
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && et ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && et ;
Distance : 5

66
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DefaultExceptionContext ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DefaultExceptionContext ;
Distance : 5

67
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Double.NaN ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Double.NaN ;
Distance : 5

68
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getHistogram2 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getHistogram2 ;
Distance : 5

69
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && var.scope ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && var.scope ;
Distance : 5

70
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && andThrow ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && andThrow ;
Distance : 5

71
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getRMS ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getRMS ;
Distance : 5

72
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getData ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getData ;
Distance : 5

73
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_DAY ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_DAY ;
Distance : 6

74
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && tmp ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && tmp ;
Distance : 5

75
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && defaultValue ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && defaultValue ;
Distance : 5

76
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mocksToBeVerifiedStrictly ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mocksToBeVerifiedStrictly ;
Distance : 5

77
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getNumRepetitions ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getNumRepetitions ;
Distance : 5

78
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && linkedList ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && linkedList ;
Distance : 5

79
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && AbstractScope ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && AbstractScope ;
Distance : 5

80
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && *= ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && *= ;
Distance : 5

81
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && testStepSize ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && testStepSize ;
Distance : 5

82
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && clss ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && clss ;
Distance : 5

83
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Entry ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Entry ;
Distance : 5

84
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CheckLevel.OFF ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CheckLevel.OFF ;
Distance : 5

85
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && converted ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && converted ;
Distance : 5

86
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && verifyNoMoreInteractions ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && verifyNoMoreInteractions ;
Distance : 5

87
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Cartesian2D ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Cartesian2D ;
Distance : 5

88
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) < returnTypeGenericMetadata ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) < returnTypeGenericMetadata ;
Distance : 5

89
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && parameterTypes ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && parameterTypes ;
Distance : 5

90
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && RealFieldElement ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && RealFieldElement ;
Distance : 5

91
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && interfaces ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && interfaces ;
Distance : 5

92
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && /= ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && /= ;
Distance : 5

93
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Sin ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Sin ;
Distance : 5

94
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && pairs ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && pairs ;
Distance : 5

95
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && stub ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && stub ;
Distance : 5

96
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && BrentSolver ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && BrentSolver ;
Distance : 5

97
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FunctionFlavor.NORMAL ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FunctionFlavor.NORMAL ;
Distance : 5

98
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && featureSet ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && featureSet ;
Distance : 5

99
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PropertyCollapseLevel.NONE ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && PropertyCollapseLevel.NONE ;
Distance : 5

100
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FunctionFlavor.GENERATOR ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FunctionFlavor.GENERATOR ;
Distance : 5

101
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && % ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && % ;
Distance : 5

102
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && & ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && & ;
Distance : 5

103
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && classToMock ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && classToMock ;
Distance : 5

104
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && anyList ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && anyList ;
Distance : 6

105
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 5

106
Tree	return defaultAnswer ( returnTypeGenericMetadata ) . defaultAnswer () ;
Code	return defaultAnswer ( returnTypeGenericMetadata ) . defaultAnswer () ;
Distance : 10

107
Tree	return defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) ;
Code	return defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) ;
Distance : 6

108
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) ;
Distance : 4

109
Tree	return defaultAnswer ( returnTypeGenericMetadata ) . defaultAnswer ( returnTypeGenericMetadata ) ;
Code	return defaultAnswer ( returnTypeGenericMetadata ) . defaultAnswer ( returnTypeGenericMetadata ) ;
Distance : 7

110
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 6

111
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && &= ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && &= ;
Distance : 5

112
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && extends ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && extends ;
Distance : 5

113
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && <= ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && <= ;
Distance : 5

114
Tree	return defaultAnswer ( serializable ( returnTypeGenericMetadata ) ) ;
Code	return defaultAnswer ( serializable ( returnTypeGenericMetadata ) ) ;
Distance : 6

115
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_DAY ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_DAY ;
Distance : 5

116
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && ^ ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && ^ ;
Distance : 5

117
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && extraInterfaces ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && extraInterfaces ;
Distance : 5

118
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getString ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getString ;
Distance : 5

119
Tree	return defaultAnswer ( mockSettings ) . defaultAnswer () ;
Code	return defaultAnswer ( mockSettings ) . defaultAnswer () ;
Distance : 10

120
Tree	return mockSettings . defaultAnswer ( serializable ( returnTypeGenericMetadata ) ) ;
Code	return mockSettings . defaultAnswer ( serializable ( returnTypeGenericMetadata ) ) ;
Distance : 4

121
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && chars ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && chars ;
Distance : 5

122
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && pos ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && pos ;
Distance : 5

123
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && anyList ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && anyList ;
Distance : 5

124
Tree	return defaultAnswer ( mockSettings ) . defaultAnswer ( returnTypeGenericMetadata ) ;
Code	return defaultAnswer ( mockSettings ) . defaultAnswer ( returnTypeGenericMetadata ) ;
Distance : 7

125
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && p3 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && p3 ;
Distance : 5

126
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && &= ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && &= ;
Distance : 6

127
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && unusedStubs ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && unusedStubs ;
Distance : 5

128
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && zimap ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && zimap ;
Distance : 5

129
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Set ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && Set ;
Distance : 5

130
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && t1 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && t1 ;
Distance : 5

131
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && toReturn ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && toReturn ;
Distance : 5

132
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getHistogram1 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getHistogram1 ;
Distance : 5

133
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getLastInvocation ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getLastInvocation ;
Distance : 5

134
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mocks ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mocks ;
Distance : 5

135
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CircleVectorial ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && CircleVectorial ;
Distance : 5

136
Tree	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && extends ;
Code	return mockSettings . defaultAnswer ( defaultAnswer ( returnTypeGenericMetadata ) ) && extends ;
Distance : 6

137
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_SECOND ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && DateUtils.MILLIS_PER_SECOND ;
Distance : 5

138
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && typeParameters ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && typeParameters ;
Distance : 5

139
Tree	return mockSettings . defaultAnswer ( serializable ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return mockSettings . defaultAnswer ( serializable ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 6

140
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getStubbingLookupListeners ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && getStubbingLookupListeners ;
Distance : 5

141
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && data ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && data ;
Distance : 5

142
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && eigenDecompose ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && eigenDecompose ;
Distance : 5

143
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && p2 ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && p2 ;
Distance : 5

144
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && apply ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && apply ;
Distance : 5

145
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && RADIX ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && RADIX ;
Distance : 5

146
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && excludeFields ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && excludeFields ;
Distance : 5

147
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && map ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && map ;
Distance : 5

148
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && checker ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && checker ;
Distance : 5

149
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && any ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && any ;
Distance : 5

150
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && emptyList ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && emptyList ;
Distance : 5

151
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && currentState.length ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && currentState.length ;
Distance : 5

152
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && elementPairs ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && elementPairs ;
Distance : 5

153
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && two_type_params ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && two_type_params ;
Distance : 5

154
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && delimiters.length ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && delimiters.length ;
Distance : 5

155
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mockHandler ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mockHandler ;
Distance : 5

156
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && voidMethodStubbable ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && voidMethodStubbable ;
Distance : 5

157
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && / ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && / ;
Distance : 5

158
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FormatFactory ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && FormatFactory ;
Distance : 5

159
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && clazz ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && clazz ;
Distance : 5

160
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && StringUtils.EMPTY ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && StringUtils.EMPTY ;
Distance : 5

161
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && of ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && of ;
Distance : 5

162
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && anyObject ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && anyObject ;
Distance : 5

163
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mueff ;
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) && mueff ;
Distance : 5

164
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; !=
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; !=
Distance : 6

165
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; nullNotPermitted
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; nullNotPermitted
Distance : 6

166
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; []
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; []
Distance : 6

167
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; void
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; void
Distance : 6

168
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; t
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; t
Distance : 6

169
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; =
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; =
Distance : 6

170
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; <s>
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; <s>
Distance : 6

171
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; <blank>
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; <blank>
Distance : 6

172
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; field
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; field
Distance : 6

173
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; invocation
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; invocation
Distance : 6

174
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; super
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; super
Distance : 6

175
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; ==
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; ==
Distance : 6

176
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; !
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; !
Distance : 6

177
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; LINE_JOINER
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; LINE_JOINER
Distance : 6

178
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; false
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; false
Distance : 6

179
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; stream
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; stream
Distance : 6

180
Tree	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ; Fraction
Code	return mockSettings . defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ; Fraction
Distance : 6

181
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; assertThat
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; assertThat
Distance : 6

182
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; (
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; (
Distance : 6

183
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; }
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; }
Distance : 6

184
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; .
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; .
Distance : 6

185
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; int
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; int
Distance : 6

186
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; ,
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; ,
Distance : 6

187
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; new
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; new
Distance : 6

188
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; str
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; str
Distance : 6

189
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; NodeUtil
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; NodeUtil
Distance : 6

190
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; root
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; root
Distance : 6

191
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; value
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; value
Distance : 6

192
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; i
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; i
Distance : 6

193
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; STRING_CONSTANT
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; STRING_CONSTANT
Distance : 6

194
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; expected
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; expected
Distance : 6

195
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; scope
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; scope
Distance : 6

196
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; createIllegalArgumentException
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; createIllegalArgumentException
Distance : 6

197
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; static
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; static
Distance : 6

198
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; instant
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; instant
Distance : 6

199
Tree	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; isEmpty
Code	return defaultAnswer ( returnsDeepStubsAnswerUsing ( returnTypeGenericMetadata ) ) ; isEmpty
Distance : 6

========================================================================


========================================================================
Example Number: 82
Parent Code is: 
{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withParams ( cls , outerClassInstance ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=outerClassInstance}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=noArgConstructor}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=withOuterClass}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (25 (313{val=if}) (214{val=(}) (27 (800{val=outerClassInstance}) (236{val===}) (500{val=null})) (215{val=)}) (8 (218{val={}) (41 (329{val=return}) (32 (802{val=noArgConstructor}) (214{val=(}) (800{val=cls}) (215{val=)})) (227{val=;})) (219{val=}}))) (41 (329{val=return}) (32 (802{val=withParams}) (214{val=(}) (800{val=cls}) (234{val=,}) (800{val=outerClassInstance}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/21/parent/src_org_mockito_internal_creation_instance_ConstructorInstantiator.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 3

1
Tree	{ if ( cls == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

2
Tree	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

3
Tree	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

4
Tree	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

5
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

6
Tree	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

7
Tree	{ if ( cls == continue; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

8
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 8

9
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 5

10
Tree	{ if ( cls == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

11
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

12
Tree	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

13
Tree	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

14
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

15
Tree	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

16
Tree	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

17
Tree	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

18
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 8

19
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 6

20
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

21
Tree	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

22
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( outerClassInstance , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( outerClassInstance , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

23
Tree	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

24
Tree	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

25
Tree	{ if ( cls == null ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

26
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance , cls . ( ( cls ) ) ; }
Distance : 8

27
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls , cls . ) ( cls ) ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls , cls . ) ( cls ) ) ; }
Distance : 8

28
Tree	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

29
Tree	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

30
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

31
Tree	{ if ( cls == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

32
Tree	{ if ( cls == return; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

33
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

34
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

35
Tree	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

36
Tree	{ if ( cls == return; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

37
Tree	{ if ( cls == break; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

38
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

39
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 5

40
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

41
Tree	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

42
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

43
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 6

44
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

45
Tree	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

46
Tree	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

47
Tree	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

48
Tree	{ if ( cls == super(); ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

49
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

50
Tree	{ if ( outerClassInstance == return; ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

51
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 6

52
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

53
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 6

54
Tree	{ if ( cls == break; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

55
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

56
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 6

57
Tree	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

58
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

59
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 8

60
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 6

61
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

62
Tree	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

63
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( outerClassInstance ) ; }
Distance : 4

64
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 5

65
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

66
Tree	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

67
Tree	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

68
Tree	{ if ( cls == continue; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == continue; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

69
Tree	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == break; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

70
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

71
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

72
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 5

73
Tree	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

74
Tree	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

75
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 5

76
Tree	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

77
Tree	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 7

78
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( outerClassInstance ) ; }
Distance : 4

79
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 6

80
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

81
Tree	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

82
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

83
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return outerClassInstance . withOuterClass ( cls ) ; }
Distance : 5

84
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

85
Tree	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

86
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

87
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

88
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

89
Tree	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

90
Tree	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

91
Tree	{ if ( outerClassInstance == return; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

92
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

93
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

94
Tree	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

95
Tree	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

96
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 3

97
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 5

98
Tree	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

99
Tree	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

100
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

101
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

102
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

103
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

104
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

105
Tree	{ if ( cls == null ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

106
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 7

107
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

108
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

109
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

110
Tree	{ if ( cls == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

111
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

112
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 4

113
Tree	{ if ( outerClassInstance == continue; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

114
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

115
Tree	{ if ( cls == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

116
Tree	{ if ( cls == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return cls . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

117
Tree	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

118
Tree	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

119
Tree	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return cls . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

120
Tree	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

121
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

122
Tree	{ if ( cls == super(); ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

123
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( outerClassInstance ) ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( outerClassInstance ) ) ; }
Distance : 6

124
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 4

125
Tree	{ if ( outerClassInstance == default: ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

126
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , outerClassInstance . null ( cls ) ) ; }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , outerClassInstance . null ( cls ) ) ; }
Distance : 6

127
Tree	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

128
Tree	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == continue; ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

129
Tree	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

130
Tree	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

131
Tree	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == return; ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

132
Tree	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 5

133
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return cls . withOuterClass ( cls ) ; }
Distance : 6

134
Tree	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( outerClassInstance == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 8

135
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 7

136
Tree	{ if ( outerClassInstance == break; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == break; ) { return this . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

137
Tree	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

138
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 4

139
Tree	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

140
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 6

141
Tree	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

142
Tree	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Code	{ if ( cls == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls , cls . ( ( cls ) ) ; }
Distance : 8

143
Tree	{ if ( outerClassInstance == default: ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == default: ) { return noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 7

144
Tree	{ if ( cls == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return cls . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

145
Tree	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == super(); ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 5

146
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls , outerClassInstance ) ; } return withOuterClass ( cls ) ; }
Distance : 7

147
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( outerClassInstance , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 7

148
Tree	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == super(); ) { return outerClassInstance . noArgConstructor ( cls , cls ) ; } return withOuterClass ( cls ) ; }
Distance : 8

149
Tree	{ if ( cls == null ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Code	{ if ( cls == null ) { return cls . noArgConstructor () ; } return withOuterClass ( cls ) ; }
Distance : 8

150
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( outerClassInstance ) ; }
Distance : 5

151
Tree	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Code	{ if ( outerClassInstance == return; ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; }
Distance : 6

152
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } StrBuilder
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } StrBuilder
Distance : 4

153
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtilities
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } TestUtilities
Distance : 4

154
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } js
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } js
Distance : 4

155
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Invocation
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Invocation
Distance : 4

156
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkArgument
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkArgument
Distance : 4

157
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ParamChecks
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ParamChecks
Distance : 4

158
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } name
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } name
Distance : 6

159
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ex
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ex
Distance : 4

160
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeTraversal
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeTraversal
Distance : 4

161
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } array
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } array
Distance : 4

162
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setUp
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } setUp
Distance : 4

163
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } i
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } i
Distance : 4

164
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } super
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } super
Distance : 4

165
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } double
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } double
Distance : 4

166
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkState
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } checkState
Distance : 4

167
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } value
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } value
Distance : 4

168
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Distance : 4

169
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } for
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } for
Distance : 4

170
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } T
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } T
Distance : 4

171
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Distance : 4

172
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } }
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } }
Distance : 4

173
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Distance : 4

174
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } data
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } data
Distance : 4

175
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Distance : 4

176
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !=
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } !=
Distance : 4

177
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeUtil
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } NodeUtil
Distance : 4

178
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } {
Distance : 6

179
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } wanted
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } wanted
Distance : 4

180
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } [
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } [
Distance : 4

181
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Distance : 4

182
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ]
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ]
Distance : 4

183
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } class
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } class
Distance : 4

184
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Object
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } Object
Distance : 4

185
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mock
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } mock
Distance : 4

186
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ;
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ;
Distance : 4

187
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } )
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } )
Distance : 4

188
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } .
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } .
Distance : 4

189
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ,
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ,
Distance : 4

190
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } STRING_CONSTANT
Distance : 6

191
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } new
Distance : 6

192
Tree	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } root
Code	{ if ( outerClassInstance == null ) { return noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } root
Distance : 4

193
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } ()
Distance : 6

194
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } =
Distance : 6

195
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportCodeChange
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } reportCodeChange
Distance : 6

196
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } expected
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } expected
Distance : 6

197
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } FastMath
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } FastMath
Distance : 6

198
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } IllegalArgumentException
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } IllegalArgumentException
Distance : 6

199
Tree	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } field
Code	{ if ( outerClassInstance == null ) { return outerClassInstance . noArgConstructor ( cls ) ; } return withOuterClass ( cls ) ; } field
Distance : 6

========================================================================


========================================================================
Example Number: 83
Parent Code is: 
Object injected = mockCandidateFilter . filterCandidate ( mocks , field , instance ) . thenInject () ;
-------------------------------------------------------------------------------
Child code is: 
Object injected = mockCandidateFilter . filterCandidate ( mocks , field , orderedInstanceFields , instance ) . thenInject () ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Object})) (59 (800{val=injected}) (204{val==}) (32 (32 (800{val=mockCandidateFilter}) (235{val=.}) (802{val=filterCandidate}) (214{val=(}) (800{val=mocks}) (234{val=,}) (800{val=field}) (234{val=,}) (800{val=instance}) (215{val=)})) (235{val=.}) (802{val=thenInject}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Object})) (59 (800{val=injected}) (204{val==}) (32 (32 (800{val=mockCandidateFilter}) (235{val=.}) (802{val=filterCandidate}) (214{val=(}) (800{val=mocks}) (234{val=,}) (800{val=field}) (234{val=,}) (800{val=orderedInstanceFields}) (234{val=,}) (800{val=instance}) (215{val=)})) (235{val=.}) (802{val=thenInject}) (216{val=()}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/19/parent/src_org_mockito_internal_configuration_injection_PropertyAndSetterInjection.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Object injected = filterCandidate ( instance , mocks , instance ) . thenInject () ;
Code	Object injected = filterCandidate ( instance , mocks , instance ) . thenInject () ;
Distance : 6

1
Tree	Object injected = ( ( injected ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = ( ( injected ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Distance : 10

2
Tree	Object instance = filterCandidate ( injected , instance ) . thenInject () ;
Code	Object instance = filterCandidate ( injected , instance ) . thenInject () ;
Distance : 8

3
Tree	Object mocks = injected . filterCandidate ( mocks , field , field . instance () ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , field , field . instance () ) . thenInject () ;
Distance : 5

4
Tree	Object mocks = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , mocks ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , mocks ) . thenInject () ;
Distance : 4

5
Tree	Object injected = field . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 3

6
Tree	Object field = filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Code	Object field = filterCandidate ( mocks , mocks , injected ) . thenInject () ;
Distance : 7

7
Tree	Object mocks = ( ( instance ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Code	Object mocks = ( ( instance ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Distance : 11

8
Tree	Object field = injected . filterCandidate ( NUMBER_CONSTANT , mocks , instance , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( NUMBER_CONSTANT , mocks , instance , instance ) . thenInject () ;
Distance : 5

9
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Distance : 4

10
Tree	Object field = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object field = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 6

11
Tree	Object mocks = filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object mocks = filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 6

12
Tree	Object mocks = filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 5

13
Tree	Object mocks = filterCandidate ( injected , mocks ) . thenInject () ;
Code	Object mocks = filterCandidate ( injected , mocks ) . thenInject () ;
Distance : 9

14
Tree	Object mocks = filterCandidate ( field , field , injected ) . thenInject () ;
Code	Object mocks = filterCandidate ( field , field , injected ) . thenInject () ;
Distance : 7

15
Tree	Object injected = filterCandidate ( instance , field , mocks ) . thenInject () ;
Code	Object injected = filterCandidate ( instance , field , mocks ) . thenInject () ;
Distance : 6

16
Tree	Object injected = mocks . filterCandidate ( mocks , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance ) . thenInject () ;
Distance : 5

17
Tree	Object injected = mocks . filterCandidate ( injected , field ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( injected , field ) . thenInject () ;
Distance : 6

18
Tree	Object injected = ( ( mocks ) this ) . thenInject ( injected , instance , field ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( injected , instance , field ) . thenInject () ;
Distance : 12

19
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 3

20
Tree	Object mocks = filterCandidate ( field , field , instance ) . thenInject () ;
Code	Object mocks = filterCandidate ( field , field , instance ) . thenInject () ;
Distance : 6

21
Tree	Object mocks = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Code	Object mocks = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Distance : 5

22
Tree	Object injected = ( ( mocks ) this ) . thenInject ( injected , field , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( injected , field , instance ) . thenInject () ;
Distance : 10

23
Tree	Object field = ( ( mocks ) this ) . thenInject ( instance , field , instance ) . thenInject () ;
Code	Object field = ( ( mocks ) this ) . thenInject ( instance , field , instance ) . thenInject () ;
Distance : 11

24
Tree	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , injected ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , injected ) . thenInject () ;
Distance : 5

25
Tree	Object injected = filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , mocks , mocks ) . thenInject () ;
Distance : 6

26
Tree	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , mocks , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , mocks , instance ) . thenInject () ;
Distance : 3

27
Tree	Object field = ( ( mocks ) this ) . thenInject ( mocks , instance , injected ) . thenInject () ;
Code	Object field = ( ( mocks ) this ) . thenInject ( mocks , instance , injected ) . thenInject () ;
Distance : 12

28
Tree	Object injected = field . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Code	Object injected = field . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Distance : 4

29
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , field ) . thenInject () ;
Distance : 5

30
Tree	Object mocks = field . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object mocks = field . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 4

31
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , injected ) . thenInject () ;
Distance : 4

32
Tree	Object injected = filterCandidate ( instance , mocks ) . thenInject () ;
Code	Object injected = filterCandidate ( instance , mocks ) . thenInject () ;
Distance : 8

33
Tree	Object injected = ( ( field ) this ) . thenInject ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = ( ( field ) this ) . thenInject ( mocks , field , mocks ) . thenInject () ;
Distance : 10

34
Tree	Object injected = ( ( injected ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = ( ( injected ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Distance : 10

35
Tree	Object injected = field . filterCandidate ( NUMBER_CONSTANT , field , field , field ) . thenInject () ;
Code	Object injected = field . filterCandidate ( NUMBER_CONSTANT , field , field , field ) . thenInject () ;
Distance : 4

36
Tree	Object mocks = mocks . filterCandidate ( mocks , instance ) . thenInject () ;
Code	Object mocks = mocks . filterCandidate ( mocks , instance ) . thenInject () ;
Distance : 6

37
Tree	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 4

38
Tree	Object injected = injected . filterCandidate ( mocks , instance , instance . instance () ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , instance , instance . instance () ) . thenInject () ;
Distance : 5

39
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , injected ) . thenInject () ;
Distance : 5

40
Tree	Object instance = ( ( mocks ) this ) . thenInject ( mocks , mocks , field ) . thenInject () ;
Code	Object instance = ( ( mocks ) this ) . thenInject ( mocks , mocks , field ) . thenInject () ;
Distance : 12

41
Tree	Object injected = ( ( instance ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = ( ( instance ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Distance : 10

42
Tree	Object injected = ( ( mocks ) this ) . thenInject ( injected , instance , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( injected , instance , instance ) . thenInject () ;
Distance : 11

43
Tree	Object instance = filterCandidate ( injected , instance , instance ) . thenInject () ;
Code	Object instance = filterCandidate ( injected , instance , instance ) . thenInject () ;
Distance : 7

44
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , injected ) . thenInject () ;
Distance : 4

45
Tree	Object injected = ( ( mocks ) this ) . thenInject ( injected , mocks , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( injected , mocks , instance ) . thenInject () ;
Distance : 11

46
Tree	Object mocks = ( ( injected ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Code	Object mocks = ( ( injected ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Distance : 11

47
Tree	Object injected = injected . filterCandidate ( mocks , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field ) . thenInject () ;
Distance : 5

48
Tree	Object field = injected . filterCandidate ( mocks , mocks ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , mocks ) . thenInject () ;
Distance : 7

49
Tree	Object injected = field . filterCandidate ( mocks , field , instance . instance () ) . thenInject () ;
Code	Object injected = field . filterCandidate ( mocks , field , instance . instance () ) . thenInject () ;
Distance : 4

50
Tree	Object field = ( ( mocks ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Code	Object field = ( ( mocks ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Distance : 11

51
Tree	Object instance = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , instance ) . thenInject () ;
Code	Object instance = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , instance ) . thenInject () ;
Distance : 4

52
Tree	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Code	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Distance : 11

53
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Distance : 10

54
Tree	Object instance = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Code	Object instance = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Distance : 5

55
Tree	Object instance = filterCandidate ( mocks , injected , field ) . thenInject () ;
Code	Object instance = filterCandidate ( mocks , injected , field ) . thenInject () ;
Distance : 7

56
Tree	Object injected = filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

57
Tree	Object injected = ( ( field ) this ) . thenInject ( injected , field , instance ) . thenInject () ;
Code	Object injected = ( ( field ) this ) . thenInject ( injected , field , instance ) . thenInject () ;
Distance : 10

58
Tree	Object injected = filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 5

59
Tree	Object instance = filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object instance = filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 6

60
Tree	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 3

61
Tree	Object field = injected . filterCandidate ( NUMBER_CONSTANT , field , mocks , instance ) . thenInject () ;
Code	Object field = injected . filterCandidate ( NUMBER_CONSTANT , field , mocks , instance ) . thenInject () ;
Distance : 4

62
Tree	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , injected ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , injected ) . thenInject () ;
Distance : 4

63
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks ) . thenInject () ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks ) . thenInject () ;
Distance : 6

64
Tree	Object field = filterCandidate ( instance , field , field ) . thenInject () ;
Code	Object field = filterCandidate ( instance , field , field ) . thenInject () ;
Distance : 7

65
Tree	Object injected = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Distance : 4

66
Tree	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Distance : 5

67
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , injected , field ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , injected , field ) . thenInject () ;
Distance : 11

68
Tree	Object injected = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , mocks ) . thenInject () ;
Distance : 3

69
Tree	Object injected = injected . filterCandidate ( mocks , field , field . instance () ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , field . instance () ) . thenInject () ;
Distance : 4

70
Tree	Object injected = ( ( injected ) this ) . thenInject ( mocks , instance , field ) . thenInject () ;
Code	Object injected = ( ( injected ) this ) . thenInject ( mocks , instance , field ) . thenInject () ;
Distance : 11

71
Tree	Object mocks = filterCandidate ( injected , mocks , instance ) . thenInject () ;
Code	Object mocks = filterCandidate ( injected , mocks , instance ) . thenInject () ;
Distance : 7

72
Tree	Object injected = ( ( instance ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Code	Object injected = ( ( instance ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Distance : 10

73
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 9

74
Tree	Object injected = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 2

75
Tree	Object injected = instance . filterCandidate ( mocks , field , field ) ;
Code	Object injected = instance . filterCandidate ( mocks , field , field ) ;
Distance : 7

76
Tree	Object field = ( ( mocks ) this ) . thenInject ( mocks , field , injected ) . thenInject () ;
Code	Object field = ( ( mocks ) this ) . thenInject ( mocks , field , injected ) . thenInject () ;
Distance : 11

77
Tree	Object injected = mocks ( mocks , injected ) . thenInject () ;
Code	Object injected = mocks ( mocks , injected ) . thenInject () ;
Distance : 8

78
Tree	Object injected = injected . filterCandidate ( mocks , field , instance . instance () ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance . instance () ) . thenInject () ;
Distance : 4

79
Tree	Object mocks = mocks . filterCandidate ( mocks , field ) . thenInject () ;
Code	Object mocks = mocks . filterCandidate ( mocks , field ) . thenInject () ;
Distance : 6

80
Tree	Object mocks = field ( mocks , instance ) . thenInject () ;
Code	Object mocks = field ( mocks , instance ) . thenInject () ;
Distance : 8

81
Tree	Object injected = filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

82
Tree	Object mocks = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

83
Tree	Object injected = filterCandidate ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , injected , instance ) . thenInject () ;
Distance : 5

84
Tree	Object instance = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object instance = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 6

85
Tree	Object injected = ( ( instance ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object injected = ( ( instance ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 9

86
Tree	Object field = injected ( field , field ) . thenInject () ;
Code	Object field = injected ( field , field ) . thenInject () ;
Distance : 9

87
Tree	Object injected = ( ( injected ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object injected = ( ( injected ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 9

88
Tree	Object mocks = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 5

89
Tree	Object injected = injected . filterCandidate ( mocks , field , field ) ;
Code	Object injected = injected . filterCandidate ( mocks , field , field ) ;
Distance : 7

90
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , instance , instance , instance ) . thenInject () ;
Distance : 4

91
Tree	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 4

92
Tree	Object injected = injected ( instance , field ) . thenInject () ;
Code	Object injected = injected ( instance , field ) . thenInject () ;
Distance : 8

93
Tree	Object mocks = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 4

94
Tree	Object field = mockCandidateFilter . filterCandidate ( mocks , field , instance ) ;
Code	Object field = mockCandidateFilter . filterCandidate ( mocks , field , instance ) ;
Distance : 6

95
Tree	Object instance = filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object instance = filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 6

96
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , field ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , field ) . thenInject () ;
Distance : 4

97
Tree	Object field = mockCandidateFilter . filterCandidate ( mocks , field , injected ) ;
Code	Object field = mockCandidateFilter . filterCandidate ( mocks , field , injected ) ;
Distance : 7

98
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) ;
Distance : 7

99
Tree	Object injected = mocks . filterCandidate ( mocks , field ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , field ) . thenInject () ;
Distance : 5

100
Tree	Object injected = mocks . filterCandidate ( injected , field , instance ) ;
Code	Object injected = mocks . filterCandidate ( injected , field , instance ) ;
Distance : 7

101
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

102
Tree	Object injected = filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 5

103
Tree	Object injected = field ( mocks , instance ) . thenInject () ;
Code	Object injected = field ( mocks , instance ) . thenInject () ;
Distance : 7

104
Tree	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , injected ) . thenInject () ;
Distance : 4

105
Tree	Object injected = filterCandidate ( field , field , field ) . thenInject () ;
Code	Object injected = filterCandidate ( field , field , field ) . thenInject () ;
Distance : 6

106
Tree	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) ;
Code	Object mocks = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) ;
Distance : 7

107
Tree	Object injected = instance . filterCandidate ( mocks , field , instance ) ;
Code	Object injected = instance . filterCandidate ( mocks , field , instance ) ;
Distance : 6

108
Tree	Object injected = instance . filterCandidate ( mocks , field , injected ) ;
Code	Object injected = instance . filterCandidate ( mocks , field , injected ) ;
Distance : 7

109
Tree	Object injected = injected . filterCandidate ( field , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( field , field , instance ) . thenInject () ;
Distance : 4

110
Tree	Object injected = ( ( mocks ) this ) . thenInject ( injected , field , field ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( injected , field , field ) . thenInject () ;
Distance : 11

111
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , field , instance ) . thenInject () ;
Distance : 3

112
Tree	Object injected = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

113
Tree	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 3

114
Tree	Object field = mockCandidateFilter ( mocks , mocks ) . thenInject () ;
Code	Object field = mockCandidateFilter ( mocks , mocks ) . thenInject () ;
Distance : 8

115
Tree	Object mocks = mockCandidateFilter ( mocks , field ) . thenInject () ;
Code	Object mocks = mockCandidateFilter ( mocks , field ) . thenInject () ;
Distance : 7

116
Tree	Object injected = mockCandidateFilter . filterCandidate ( instance , field , instance ) ;
Code	Object injected = mockCandidateFilter . filterCandidate ( instance , field , instance ) ;
Distance : 6

117
Tree	Object injected = field ( injected , field ) . thenInject () ;
Code	Object injected = field ( injected , field ) . thenInject () ;
Distance : 8

118
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , instance , instance ) ;
Distance : 7

119
Tree	Object injected = ( ( injected ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Code	Object injected = ( ( injected ) this ) . thenInject ( mocks , field , field ) . thenInject () ;
Distance : 10

120
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field ) . thenInject () ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field ) . thenInject () ;
Distance : 5

121
Tree	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Code	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Distance : 11

122
Tree	Object mocks = injected . filterCandidate ( mocks , injected , instance ) ;
Code	Object mocks = injected . filterCandidate ( mocks , injected , instance ) ;
Distance : 8

123
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) . thenInject () ;
Distance : 3

124
Tree	Object field = injected ( mocks , field ) . thenInject () ;
Code	Object field = injected ( mocks , field ) . thenInject () ;
Distance : 8

125
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , instance ) ;
Distance : 6

126
Tree	Object injected = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 3

127
Tree	Object field = injected ( mocks , injected ) . thenInject () ;
Code	Object field = injected ( mocks , injected ) . thenInject () ;
Distance : 9

128
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , field , mocks ) . thenInject () ;
Distance : 3

129
Tree	Object injected = instance ( mocks , mocks ) . thenInject () ;
Code	Object injected = instance ( mocks , mocks ) . thenInject () ;
Distance : 8

130
Tree	Object mocks = mockCandidateFilter ( field , field ) . thenInject () ;
Code	Object mocks = mockCandidateFilter ( field , field ) . thenInject () ;
Distance : 8

131
Tree	Object injected = mocks . filterCandidate ( mocks , instance , field ) ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , field ) ;
Distance : 8

132
Tree	Object field = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object field = mockCandidateFilter . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 4

133
Tree	Object injected = filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , instance , mocks ) . thenInject () ;
Distance : 6

134
Tree	Object mocks = mocks . filterCandidate ( mocks , field , instance ) ;
Code	Object mocks = mocks . filterCandidate ( mocks , field , instance ) ;
Distance : 7

135
Tree	Object injected = mockCandidateFilter ( mocks , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter ( mocks , field ) . thenInject () ;
Distance : 6

136
Tree	Object mocks = mocks . filterCandidate ( mocks , field , injected ) ;
Code	Object mocks = mocks . filterCandidate ( mocks , field , injected ) ;
Distance : 8

137
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , mocks , instance ) . thenInject () ;
Distance : 10

138
Tree	Object instance = injected . filterCandidate ( mocks , mocks , instance ) ;
Code	Object instance = injected . filterCandidate ( mocks , mocks , instance ) ;
Distance : 8

139
Tree	Object field = filterCandidate ( mocks , instance , field ) . thenInject () ;
Code	Object field = filterCandidate ( mocks , instance , field ) . thenInject () ;
Distance : 7

140
Tree	Object injected = injected . filterCandidate ( mocks , injected , instance ) ;
Code	Object injected = injected . filterCandidate ( mocks , injected , instance ) ;
Distance : 7

141
Tree	Object mocks = injected . filterCandidate ( mocks , field , instance ) ;
Code	Object mocks = injected . filterCandidate ( mocks , field , instance ) ;
Distance : 7

142
Tree	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 10

143
Tree	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , field ) . thenInject () ;
Code	Object mocks = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , field ) . thenInject () ;
Distance : 5

144
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , injected , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , injected , instance ) . thenInject () ;
Distance : 10

145
Tree	Object instance = mocks ( mocks , instance ) . thenInject () ;
Code	Object instance = mocks ( mocks , instance ) . thenInject () ;
Distance : 8

146
Tree	Object field = injected . filterCandidate ( injected , field , instance ) ;
Code	Object field = injected . filterCandidate ( injected , field , instance ) ;
Distance : 8

147
Tree	Object injected = instance . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = instance . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 4

148
Tree	Object instance = filterCandidate ( injected , field ) . thenInject () ;
Code	Object instance = filterCandidate ( injected , field ) . thenInject () ;
Distance : 8

149
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 3

150
Tree	Object injected = mockCandidateFilter ( field , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter ( field , field ) . thenInject () ;
Distance : 7

151
Tree	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 10

152
Tree	Object injected = field . filterCandidate ( mocks , field , mocks ) ;
Code	Object injected = field . filterCandidate ( mocks , field , mocks ) ;
Distance : 7

153
Tree	Object instance = injected ( mocks , field ) . thenInject () ;
Code	Object instance = injected ( mocks , field ) . thenInject () ;
Distance : 8

154
Tree	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Code	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Distance : 6

155
Tree	Object mocks = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object mocks = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 4

156
Tree	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , instance ) . thenInject () ;
Code	Object injected = injected . filterCandidate ( NUMBER_CONSTANT , field , injected , instance ) . thenInject () ;
Distance : 3

157
Tree	Object field = field . filterCandidate ( mocks , field , field ) ;
Code	Object field = field . filterCandidate ( mocks , field , field ) ;
Distance : 8

158
Tree	Object injected = filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 5

159
Tree	Object injected = mocks . filterCandidate ( mocks , field , injected ) ;
Code	Object injected = mocks . filterCandidate ( mocks , field , injected ) ;
Distance : 7

160
Tree	Object mocks = mocks ( mocks , mocks ) . thenInject () ;
Code	Object mocks = mocks ( mocks , mocks ) . thenInject () ;
Distance : 9

161
Tree	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) ;
Code	Object injected = mockCandidateFilter . filterCandidate ( mocks , mocks , field ) ;
Distance : 7

162
Tree	Object instance = filterCandidate ( injected , field , instance ) . thenInject () ;
Code	Object instance = filterCandidate ( injected , field , instance ) . thenInject () ;
Distance : 6

163
Tree	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , field ) . thenInject () ;
Distance : 4

164
Tree	Object injected = filterCandidate ( mocks , injected , field ) . thenInject () ;
Code	Object injected = filterCandidate ( mocks , injected , field ) . thenInject () ;
Distance : 6

165
Tree	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , injected ) . thenInject () ;
Code	Object instance = ( ( mocks ) this ) . thenInject ( mocks , field , injected ) . thenInject () ;
Distance : 11

166
Tree	Object injected = injected . filterCandidate ( mocks , field , instance ) ;
Code	Object injected = injected . filterCandidate ( mocks , field , instance ) ;
Distance : 6

167
Tree	Object injected = filterCandidate ( injected , mocks ) . thenInject () ;
Code	Object injected = filterCandidate ( injected , mocks ) . thenInject () ;
Distance : 8

168
Tree	Object mocks = filterCandidate ( instance , instance ) . thenInject () ;
Code	Object mocks = filterCandidate ( instance , instance ) . thenInject () ;
Distance : 8

169
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 9

170
Tree	Object injected = mocks . filterCandidate ( field , field , instance ) ;
Code	Object injected = mocks . filterCandidate ( field , field , instance ) ;
Distance : 7

171
Tree	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 4

172
Tree	Object instance = injected ( field , field ) . thenInject () ;
Code	Object instance = injected ( field , field ) . thenInject () ;
Distance : 9

173
Tree	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , instance , field ) . thenInject () ;
Code	Object mocks = ( ( mocks ) this ) . thenInject ( mocks , instance , field ) . thenInject () ;
Distance : 12

174
Tree	Object mocks = instance ( mocks , instance ) . thenInject () ;
Code	Object mocks = instance ( mocks , instance ) . thenInject () ;
Distance : 8

175
Tree	Object injected = injected . filterCandidate ( mocks , instance , mocks ) ;
Code	Object injected = injected . filterCandidate ( mocks , instance , mocks ) ;
Distance : 8

176
Tree	Object mocks = mockCandidateFilter ( mocks , field ) . thenInject () ;
Code	Object mocks = mockCandidateFilter ( mocks , field ) . thenInject () ;
Distance : 7

177
Tree	Object mocks = filterCandidate ( instance , field ) . thenInject () ;
Code	Object mocks = filterCandidate ( instance , field ) . thenInject () ;
Distance : 8

178
Tree	Object mocks = mockCandidateFilter ( mocks , injected ) . thenInject () ;
Code	Object mocks = mockCandidateFilter ( mocks , injected ) . thenInject () ;
Distance : 8

179
Tree	Object field = injected . filterCandidate ( mocks , instance , instance ) ;
Code	Object field = injected . filterCandidate ( mocks , instance , instance ) ;
Distance : 8

180
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , mocks , field ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , mocks , field ) . thenInject () ;
Distance : 11

181
Tree	Object field = injected . filterCandidate ( mocks , field ) . thenInject () ;
Code	Object field = injected . filterCandidate ( mocks , field ) . thenInject () ;
Distance : 6

182
Tree	Object injected = injected . filterCandidate ( mocks , injected , field ) ;
Code	Object injected = injected . filterCandidate ( mocks , injected , field ) ;
Distance : 8

183
Tree	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Code	Object injected = mocks . filterCandidate ( NUMBER_CONSTANT , field , instance , instance ) . thenInject () ;
Distance : 3

184
Tree	Object mocks = mocks . filterCandidate ( mocks , field , field ) . thenInject () ;
Code	Object mocks = mocks . filterCandidate ( mocks , field , field ) . thenInject () ;
Distance : 5

185
Tree	Object instance = filterCandidate ( mocks , instance , instance ) . thenInject () ;
Code	Object instance = filterCandidate ( mocks , instance , instance ) . thenInject () ;
Distance : 6

186
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , field ) ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , field ) ;
Distance : 7

187
Tree	Object mocks = injected . filterCandidate ( mocks , field , mocks ) ;
Code	Object mocks = injected . filterCandidate ( mocks , field , mocks ) ;
Distance : 8

188
Tree	Object injected = mockCandidateFilter ( field , field ) . thenInject () ;
Code	Object injected = mockCandidateFilter ( field , field ) . thenInject () ;
Distance : 7

189
Tree	Object injected = ( ( mocks ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Code	Object injected = ( ( mocks ) this ) . thenInject ( mocks , instance , instance ) . thenInject () ;
Distance : 10

190
Tree	Object field = injected . filterCandidate ( mocks , instance , field ) ;
Code	Object field = injected . filterCandidate ( mocks , instance , field ) ;
Distance : 9

191
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , instance ) ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , instance ) ;
Distance : 6

192
Tree	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Code	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Distance : 6

193
Tree	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Code	Object injected = mocks . filterCandidate ( mocks , field , instance ) ;
Distance : 6

194
Tree	Object mocks = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Code	Object mocks = filterCandidate ( mocks , mocks , instance ) . thenInject () ;
Distance : 6

195
Tree	Object injected = mocks ( mocks , mocks ) . thenInject () ;
Code	Object injected = mocks ( mocks , mocks ) . thenInject () ;
Distance : 8

196
Tree	Object injected = mocks . filterCandidate ( mocks , field , injected ) ;
Code	Object injected = mocks . filterCandidate ( mocks , field , injected ) ;
Distance : 7

197
Tree	Object injected = injected ( mocks , instance ) . thenInject () ;
Code	Object injected = injected ( mocks , instance ) . thenInject () ;
Distance : 7

198
Tree	Object mocks = ( ( field ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Code	Object mocks = ( ( field ) this ) . thenInject ( mocks , field , instance ) . thenInject () ;
Distance : 10

199
Tree	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , injected ) ;
Code	Object instance = mockCandidateFilter . filterCandidate ( mocks , field , injected ) ;
Distance : 7

========================================================================


========================================================================
Example Number: 84
Parent Code is: 
{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return MOCKITO_CORE . mock ( classToMock , mockSettings , true ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MOCKITO_CORE}) (235{val=.}) (802{val=mock}) (214{val=(}) (800{val=classToMock}) (234{val=,}) (800{val=mockSettings}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (800{val=MOCKITO_CORE}) (235{val=.}) (802{val=mock}) (214{val=(}) (800{val=classToMock}) (234{val=,}) (800{val=mockSettings}) (234{val=,}) (9{val=true}) (215{val=)})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/16/parent/src_org_mockito_Mockito.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Override
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Override
Distance : 5

1
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } long
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } long
Distance : 3

2
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Integer
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Integer
Distance : 3

3
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } length
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } length
Distance : 3

4
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } get
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } get
Distance : 3

5
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } char
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } char
Distance : 3

6
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isEmpty
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isEmpty
Distance : 3

7
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return;
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return;
Distance : 3

8
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } protected
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } protected
Distance : 3

9
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtils
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } TestUtils
Distance : 3

10
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocations
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } invocations
Distance : 3

11
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } index
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } index
Distance : 3

12
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StrBuilder
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StrBuilder
Distance : 3

13
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Exception
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Exception
Distance : 3

14
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } verify
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } verify
Distance : 3

15
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Node
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Node
Distance : 3

16
Tree	{ return mock ( classToMock , mockSettings ) ; } final
Code	{ return mock ( classToMock , mockSettings ) ; } final
Distance : 5

17
Tree	{ return mock ( classToMock , mockSettings ) ; } [
Code	{ return mock ( classToMock , mockSettings ) ; } [
Distance : 5

18
Tree	{ return mock ( classToMock , mockSettings ) ; } null
Code	{ return mock ( classToMock , mockSettings ) ; } null
Distance : 5

19
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } node
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } node
Distance : 3

20
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <=
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <=
Distance : 3

21
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } PeriodType
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } PeriodType
Distance : 3

22
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isNormalBlock
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } isNormalBlock
Distance : 3

23
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getMessage
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getMessage
Distance : 3

24
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setUp
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } setUp
Distance : 3

25
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <s>
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <s>
Distance : 3

26
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } -
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } -
Distance : 3

27
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mockingProgress
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } mockingProgress
Distance : 3

28
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stroke
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stroke
Distance : 3

29
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } size
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } size
Distance : 3

30
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Distance : 3

31
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } true
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } true
Distance : 3

32
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ]
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ]
Distance : 3

33
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } [
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } [
Distance : 3

34
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } js
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } js
Distance : 3

35
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } T
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } T
Distance : 3

36
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } chrono
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } chrono
Distance : 3

37
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StringBuilder
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } StringBuilder
Distance : 3

38
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 3

39
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } JSType
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } JSType
Distance : 3

40
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } static
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } static
Distance : 3

41
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } traverseEs6
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } traverseEs6
Distance : 3

42
Tree	{ return mock ( classToMock , mockSettings ) ; } if
Code	{ return mock ( classToMock , mockSettings ) ; } if
Distance : 5

43
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } notifyListeners
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } notifyListeners
Distance : 3

44
Tree	{ return mock ( classToMock , mockSettings ) ; } public
Code	{ return mock ( classToMock , mockSettings ) ; } public
Distance : 5

45
Tree	{ return mock ( classToMock , mockSettings ) ; } return
Code	{ return mock ( classToMock , mockSettings ) ; } return
Distance : 5

46
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } createIllegalArgumentException
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } createIllegalArgumentException
Distance : 3

47
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } testSame
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } testSame
Distance : 3

48
Tree	{ return mock ( classToMock , mockSettings ) ; } .
Code	{ return mock ( classToMock , mockSettings ) ; } .
Distance : 5

49
Tree	{ return mock ( classToMock , mockSettings ) ; } <
Code	{ return mock ( classToMock , mockSettings ) ; } <
Distance : 5

50
Tree	{ return mock ( classToMock , mockSettings ) ; } }
Code	{ return mock ( classToMock , mockSettings ) ; } }
Distance : 5

51
Tree	{ return mock ( classToMock , mockSettings ) ; } n
Code	{ return mock ( classToMock , mockSettings ) ; } n
Distance : 5

52
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Args
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Args
Distance : 3

53
Tree	{ return mock ( classToMock , mockSettings ) ; } wanted
Code	{ return mock ( classToMock , mockSettings ) ; } wanted
Distance : 5

54
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } x
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } x
Distance : 3

55
Tree	{ return mock ( classToMock , mockSettings ) ; } ex
Code	{ return mock ( classToMock , mockSettings ) ; } ex
Distance : 5

56
Tree	{ return mock ( classToMock , mockSettings ) ; } checkArgument
Code	{ return mock ( classToMock , mockSettings ) ; } checkArgument
Distance : 5

57
Tree	{ return mock ( classToMock , mockSettings ) ; } add
Code	{ return mock ( classToMock , mockSettings ) ; } add
Distance : 5

58
Tree	{ return mock ( classToMock , mockSettings ) ; } data
Code	{ return mock ( classToMock , mockSettings ) ; } data
Distance : 5

59
Tree	{ return mock ( classToMock , mockSettings ) ; } root
Code	{ return mock ( classToMock , mockSettings ) ; } root
Distance : 5

60
Tree	{ return mock ( classToMock , mockSettings ) ; } void
Code	{ return mock ( classToMock , mockSettings ) ; } void
Distance : 5

61
Tree	{ return mock ( classToMock , mockSettings ) ; } throw
Code	{ return mock ( classToMock , mockSettings ) ; } throw
Distance : 5

62
Tree	{ return mock ( classToMock , mockSettings ) ; } compiler
Code	{ return mock ( classToMock , mockSettings ) ; } compiler
Distance : 5

63
Tree	{ return mock ( classToMock , mockSettings ) ; } catch
Code	{ return mock ( classToMock , mockSettings ) ; } catch
Distance : 5

64
Tree	{ return mock ( classToMock , mockSettings ) ; } NodeUtil
Code	{ return mock ( classToMock , mockSettings ) ; } NodeUtil
Distance : 5

65
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fireChangeEvent
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } fireChangeEvent
Distance : 3

66
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LINE_JOINER
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } LINE_JOINER
Distance : 3

67
Tree	{ return mock ( classToMock , mockSettings ) ; } reportMatcher
Code	{ return mock ( classToMock , mockSettings ) ; } reportMatcher
Distance : 5

68
Tree	{ return mock ( classToMock , mockSettings ) ; } >
Code	{ return mock ( classToMock , mockSettings ) ; } >
Distance : 5

69
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } v
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } v
Distance : 3

70
Tree	{ return mock ( classToMock , mockSettings ) ; } )
Code	{ return mock ( classToMock , mockSettings ) ; } )
Distance : 5

71
Tree	{ return mock ( classToMock , mockSettings ) ; } <s>
Code	{ return mock ( classToMock , mockSettings ) ; } <s>
Distance : 5

72
Tree	{ return mock ( classToMock , mockSettings ) ; } MOCKITO_CORE
Code	{ return mock ( classToMock , mockSettings ) ; } MOCKITO_CORE
Distance : 5

73
Tree	{ return mock ( classToMock , mockSettings ) ; } <blank>
Code	{ return mock ( classToMock , mockSettings ) ; } <blank>
Distance : 5

74
Tree	{ return mock ( classToMock , mockSettings ) ; } ;
Code	{ return mock ( classToMock , mockSettings ) ; } ;
Distance : 5

75
Tree	{ return mock ( classToMock , mockSettings ) ; } (
Code	{ return mock ( classToMock , mockSettings ) ; } (
Distance : 5

76
Tree	{ return mock ( classToMock , mockSettings ) ; } super
Code	{ return mock ( classToMock , mockSettings ) ; } super
Distance : 5

77
Tree	{ return mock ( classToMock , mockSettings ) ; } checkState
Code	{ return mock ( classToMock , mockSettings ) ; } checkState
Distance : 5

78
Tree	{ return mock ( classToMock , mockSettings ) ; } false
Code	{ return mock ( classToMock , mockSettings ) ; } false
Distance : 5

79
Tree	{ return mock ( classToMock , mockSettings ) ; } double
Code	{ return mock ( classToMock , mockSettings ) ; } double
Distance : 5

80
Tree	{ return mock ( classToMock , mockSettings ) ; } i
Code	{ return mock ( classToMock , mockSettings ) ; } i
Distance : 5

81
Tree	{ return mock ( classToMock , mockSettings ) ; } !=
Code	{ return mock ( classToMock , mockSettings ) ; } !=
Distance : 5

82
Tree	{ return mock ( classToMock , mockSettings ) ; } value
Code	{ return mock ( classToMock , mockSettings ) ; } value
Distance : 5

83
Tree	{ return mock ( classToMock , mockSettings ) ; } T
Code	{ return mock ( classToMock , mockSettings ) ; } T
Distance : 5

84
Tree	{ return mock ( classToMock , mockSettings ) ; } setAcceptedLanguage
Code	{ return mock ( classToMock , mockSettings ) ; } setAcceptedLanguage
Distance : 5

85
Tree	{ return mock ( classToMock , mockSettings ) ; } abs
Code	{ return mock ( classToMock , mockSettings ) ; } abs
Distance : 5

86
Tree	{ return mock ( classToMock , mockSettings ) ; } matcher
Code	{ return mock ( classToMock , mockSettings ) ; } matcher
Distance : 5

87
Tree	{ return mock ( classToMock , mockSettings ) ; } this
Code	{ return mock ( classToMock , mockSettings ) ; } this
Distance : 5

88
Tree	{ return mock ( classToMock , mockSettings ) ; } e
Code	{ return mock ( classToMock , mockSettings ) ; } e
Distance : 5

89
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Test
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Test
Distance : 3

90
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } lines
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } lines
Distance : 3

91
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } !
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } !
Distance : 5

92
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } :
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } :
Distance : 3

93
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } public
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } public
Distance : 3

94
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } null
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } null
Distance : 3

95
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } String
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } String
Distance : 3

96
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } n
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } n
Distance : 3

97
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } compiler
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } compiler
Distance : 3

98
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } catch
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } catch
Distance : 3

99
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Fraction
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Fraction
Distance : 5

100
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } STRING_CONSTANT
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } STRING_CONSTANT
Distance : 3

101
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } {
Distance : 3

102
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } }
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } }
Distance : 3

103
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } .
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } .
Distance : 3

104
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ;
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ;
Distance : 3

105
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ,
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ,
Distance : 3

106
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ()
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ()
Distance : 3

107
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } try
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } try
Distance : 3

108
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } nullNotPermitted
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } nullNotPermitted
Distance : 5

109
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } =
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } =
Distance : 3

110
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } returnZero
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } returnZero
Distance : 5

111
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Object
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Object
Distance : 5

112
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } fail
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } fail
Distance : 5

113
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } sqrt
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } sqrt
Distance : 5

114
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } getFirstChild
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } getFirstChild
Distance : 5

115
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } append
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } append
Distance : 5

116
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } sb
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } sb
Distance : 5

117
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } b
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } b
Distance : 5

118
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } length
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } length
Distance : 5

119
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Node
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Node
Distance : 5

120
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Integer
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Integer
Distance : 5

121
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } lines
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } lines
Distance : 5

122
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } c
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } c
Distance : 5

123
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } verify
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } verify
Distance : 5

124
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } v
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } v
Distance : 5

125
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } boolean
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } boolean
Distance : 5

126
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } result
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } result
Distance : 5

127
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } try
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } try
Distance : 5

128
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } :
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } :
Distance : 5

129
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Args
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Args
Distance : 5

130
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } <>
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } <>
Distance : 5

131
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } List
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } List
Distance : 5

132
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } StrBuilder
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } StrBuilder
Distance : 5

133
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } c
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } c
Distance : 3

134
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } js
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } js
Distance : 5

135
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } TestUtilities
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } TestUtilities
Distance : 5

136
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ex
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ex
Distance : 3

137
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } name
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } name
Distance : 3

138
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } root
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } root
Distance : 3

139
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } values
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } values
Distance : 3

140
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stream
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } stream
Distance : 3

141
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } source
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } source
Distance : 3

142
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } wanted
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } wanted
Distance : 3

143
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeUtil
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeUtil
Distance : 3

144
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } data
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } data
Distance : 3

145
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Math
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Math
Distance : 3

146
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } this
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } this
Distance : 3

147
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } return
Distance : 3

148
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } new
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } new
Distance : 3

149
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NUMBER_CONSTANT
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NUMBER_CONSTANT
Distance : 3

150
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <
Distance : 3

151
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } final
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } final
Distance : 3

152
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } if
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } if
Distance : 3

153
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } >
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } >
Distance : 3

154
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } options
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } options
Distance : 3

155
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getParent
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } getParent
Distance : 3

156
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeTraversal
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } NodeTraversal
Distance : 3

157
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkNotNull
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } checkNotNull
Distance : 3

158
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } for
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } for
Distance : 5

159
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } externs
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } externs
Distance : 5

160
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } Invocation
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } Invocation
Distance : 5

161
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } equals
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } equals
Distance : 5

162
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } int
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } int
Distance : 5

163
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } test
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } test
Distance : 5

164
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } assertEquals
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } assertEquals
Distance : 5

165
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } @
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } @
Distance : 5

166
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } []
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } []
Distance : 5

167
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } ==
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } ==
Distance : 5

168
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MOCKITO_CORE
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } MOCKITO_CORE
Distance : 3

169
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <blank>
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } <blank>
Distance : 3

170
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } MathRuntimeException
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } MathRuntimeException
Distance : 5

171
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Fraction
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Fraction
Distance : 3

172
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } p
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } p
Distance : 3

173
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } toString
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } toString
Distance : 3

174
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Class
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Class
Distance : 3

175
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ?
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } ?
Distance : 3

176
Tree	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Assert
Code	{ return MOCKITO_CORE . mock ( classToMock , mockSettings ) ; } Assert
Distance : 3

177
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } d
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } d
Distance : 5

178
Tree	{ return MOCKITO_CORE . mock ( classToMock ) ; } throws
Code	{ return MOCKITO_CORE . mock ( classToMock ) ; } throws
Distance : 5

179
Tree	{ return mock ( classToMock , mockSettings ) ; } +
Code	{ return mock ( classToMock , mockSettings ) ; } +
Distance : 5

180
Tree	{ return mock ( classToMock , mockSettings ) ; } {
Code	{ return mock ( classToMock , mockSettings ) ; } {
Distance : 5

181
Tree	{ return mock ( classToMock , mockSettings ) ; } static
Code	{ return mock ( classToMock , mockSettings ) ; } static
Distance : 5

182
Tree	{ return mock ( classToMock , mockSettings ) ; } protected
Code	{ return mock ( classToMock , mockSettings ) ; } protected
Distance : 5

183
Tree	{ return mock ( classToMock , mockSettings ) ; } invocations
Code	{ return mock ( classToMock , mockSettings ) ; } invocations
Distance : 5

184
Tree	{ return mock ( classToMock , mockSettings ) ; } values
Code	{ return mock ( classToMock , mockSettings ) ; } values
Distance : 5

185
Tree	{ return mock ( classToMock , mockSettings ) ; } out
Code	{ return mock ( classToMock , mockSettings ) ; } out
Distance : 5

186
Tree	{ return mock ( classToMock , mockSettings ) ; } s
Code	{ return mock ( classToMock , mockSettings ) ; } s
Distance : 5

187
Tree	{ return mock ( classToMock , mockSettings ) ; } obj
Code	{ return mock ( classToMock , mockSettings ) ; } obj
Distance : 5

188
Tree	{ return mock ( classToMock , mockSettings ) ; } stroke
Code	{ return mock ( classToMock , mockSettings ) ; } stroke
Distance : 5

189
Tree	{ return mock ( classToMock , mockSettings ) ; } x
Code	{ return mock ( classToMock , mockSettings ) ; } x
Distance : 5

190
Tree	{ return mock ( classToMock , mockSettings ) ; } traverseEs6
Code	{ return mock ( classToMock , mockSettings ) ; } traverseEs6
Distance : 5

191
Tree	{ return mock ( classToMock , mockSettings ) ; } StringBuilder
Code	{ return mock ( classToMock , mockSettings ) ; } StringBuilder
Distance : 5

192
Tree	{ return mock ( classToMock , mockSettings ) ; } size
Code	{ return mock ( classToMock , mockSettings ) ; } size
Distance : 5

193
Tree	{ return mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Code	{ return mock ( classToMock , mockSettings ) ; } MutableTimePeriod
Distance : 5

194
Tree	{ return mock ( classToMock , mockSettings ) ; } get
Code	{ return mock ( classToMock , mockSettings ) ; } get
Distance : 5

195
Tree	{ return mock ( classToMock , mockSettings ) ; } char
Code	{ return mock ( classToMock , mockSettings ) ; } char
Distance : 5

196
Tree	{ return mock ( classToMock , mockSettings ) ; } JSType
Code	{ return mock ( classToMock , mockSettings ) ; } JSType
Distance : 5

197
Tree	{ return mock ( classToMock , mockSettings ) ; } str
Code	{ return mock ( classToMock , mockSettings ) ; } str
Distance : 5

198
Tree	{ return mock ( classToMock , mockSettings ) ; } return;
Code	{ return mock ( classToMock , mockSettings ) ; } return;
Distance : 5

199
Tree	{ return mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return mock ( classToMock , mockSettings ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

========================================================================


========================================================================
Example Number: 85
Parent Code is: 
mockingProgress . verificationStarted ( mode ) ;
-------------------------------------------------------------------------------
Child code is: 
mockingProgress . verificationStarted ( new MockAwareVerificationMode ( mock , mode ) ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=mockingProgress}) (235{val=.}) (802{val=verificationStarted}) (214{val=(}) (800{val=mode}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (21 (32 (800{val=mockingProgress}) (235{val=.}) (802{val=verificationStarted}) (214{val=(}) (14 (304{val=new}) (43 (801{val=MockAwareVerificationMode})) (214{val=(}) (800{val=mock}) (234{val=,}) (800{val=mode}) (215{val=)})) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/14/parent/src_org_mockito_internal_MockitoCore.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	verificationStarted ( mode ) ; root
Code	verificationStarted ( mode ) ; root
Distance : 9

1
Tree	verificationStarted ( mode ) ; nullNotPermitted
Code	verificationStarted ( mode ) ; nullNotPermitted
Distance : 9

2
Tree	verificationStarted ( mode ) ; !
Code	verificationStarted ( mode ) ; !
Distance : 9

3
Tree	verificationStarted ( mode ) ; void
Code	verificationStarted ( mode ) ; void
Distance : 9

4
Tree	verificationStarted ( mode ) ; throw
Code	verificationStarted ( mode ) ; throw
Distance : 9

5
Tree	verificationStarted ( mode ) ; ==
Code	verificationStarted ( mode ) ; ==
Distance : 9

6
Tree	mockingProgress . verificationStarted ( mode ) ; Class
Code	mockingProgress . verificationStarted ( mode ) ; Class
Distance : 7

7
Tree	mockingProgress . verificationStarted ( mode ) ; Test
Code	mockingProgress . verificationStarted ( mode ) ; Test
Distance : 7

8
Tree	verificationStarted ( mode ) ; this
Code	verificationStarted ( mode ) ; this
Distance : 9

9
Tree	mockingProgress . verificationStarted ( mode ) ; {
Code	mockingProgress . verificationStarted ( mode ) ; {
Distance : 7

10
Tree	mockingProgress . verificationStarted ( mode ) ; <
Code	mockingProgress . verificationStarted ( mode ) ; <
Distance : 7

11
Tree	mockingProgress . verificationStarted ( mode ) ; .
Code	mockingProgress . verificationStarted ( mode ) ; .
Distance : 7

12
Tree	mockingProgress . verificationStarted ( mode ) ; (
Code	mockingProgress . verificationStarted ( mode ) ; (
Distance : 7

13
Tree	verificationStarted ( mode ) ; assertEquals
Code	verificationStarted ( mode ) ; assertEquals
Distance : 9

14
Tree	mockingProgress . verificationStarted ( mode ) ; ;
Code	mockingProgress . verificationStarted ( mode ) ; ;
Distance : 6

15
Tree	mockingProgress . verificationStarted ( mode ) ; ;
Code	mockingProgress . verificationStarted ( mode ) ; ;
Distance : 6

16
Tree	mockingProgress . verificationStarted ( mode ) ; <s>
Code	mockingProgress . verificationStarted ( mode ) ; <s>
Distance : 7

17
Tree	mockingProgress . verificationStarted ( mode ) ; )
Code	mockingProgress . verificationStarted ( mode ) ; )
Distance : 7

18
Tree	mockingProgress . verificationStarted ( mode ) ; >
Code	mockingProgress . verificationStarted ( mode ) ; >
Distance : 7

19
Tree	mockingProgress . verificationStarted ( mode ) ; final
Code	mockingProgress . verificationStarted ( mode ) ; final
Distance : 7

20
Tree	mockingProgress . verificationStarted ( mode ) ; return
Code	mockingProgress . verificationStarted ( mode ) ; return
Distance : 7

21
Tree	mockingProgress . verificationStarted ( mode ) ; this
Code	mockingProgress . verificationStarted ( mode ) ; this
Distance : 7

22
Tree	mockingProgress . verificationStarted ( mode ) ; public
Code	mockingProgress . verificationStarted ( mode ) ; public
Distance : 7

23
Tree	mockingProgress . verificationStarted ( mode ) ; if
Code	mockingProgress . verificationStarted ( mode ) ; if
Distance : 7

24
Tree	mockingProgress . verificationStarted ( mode ) ; null
Code	mockingProgress . verificationStarted ( mode ) ; null
Distance : 7

25
Tree	mockingProgress . verificationStarted ( mode ) ; [
Code	mockingProgress . verificationStarted ( mode ) ; [
Distance : 7

26
Tree	mockingProgress . verificationStarted ( mode ) ; super
Code	mockingProgress . verificationStarted ( mode ) ; super
Distance : 7

27
Tree	mockingProgress . verificationStarted ( mode ) ; <blank>
Code	mockingProgress . verificationStarted ( mode ) ; <blank>
Distance : 7

28
Tree	mockingProgress . verificationStarted ( mode ) ; checkState
Code	mockingProgress . verificationStarted ( mode ) ; checkState
Distance : 7

29
Tree	verificationStarted ( mode ) ; @
Code	verificationStarted ( mode ) ; @
Distance : 9

30
Tree	verificationStarted ( mode ) ; Override
Code	verificationStarted ( mode ) ; Override
Distance : 9

31
Tree	verificationStarted ( mode ) ; +
Code	verificationStarted ( mode ) ; +
Distance : 9

32
Tree	verificationStarted ( mode ) ; public
Code	verificationStarted ( mode ) ; public
Distance : 9

33
Tree	verificationStarted ( mode ) ; <
Code	verificationStarted ( mode ) ; <
Distance : 9

34
Tree	verificationStarted ( mode ) ; NUMBER_CONSTANT
Code	verificationStarted ( mode ) ; NUMBER_CONSTANT
Distance : 9

35
Tree	verificationStarted ( mode ) ; new
Code	verificationStarted ( mode ) ; new
Distance : 9

36
Tree	verificationStarted ( mode ) ; test
Code	verificationStarted ( mode ) ; test
Distance : 9

37
Tree	verificationStarted ( mode ) ; false
Code	verificationStarted ( mode ) ; false
Distance : 9

38
Tree	verificationStarted ( mode ) ; double
Code	verificationStarted ( mode ) ; double
Distance : 9

39
Tree	verificationStarted ( mode ) ; &&
Code	verificationStarted ( mode ) ; &&
Distance : 9

40
Tree	mockingProgress . verificationStarted ( mode ) ; externs
Code	mockingProgress . verificationStarted ( mode ) ; externs
Distance : 7

41
Tree	mockingProgress . verificationStarted ( mode ) ; for
Code	mockingProgress . verificationStarted ( mode ) ; for
Distance : 7

42
Tree	mockingProgress . verificationStarted ( mode ) ; TestUtilities
Code	mockingProgress . verificationStarted ( mode ) ; TestUtilities
Distance : 7

43
Tree	verificationStarted ( mode ) ; Object
Code	verificationStarted ( mode ) ; Object
Distance : 9

44
Tree	mockingProgress . verificationStarted ( mode ) ; d
Code	mockingProgress . verificationStarted ( mode ) ; d
Distance : 7

45
Tree	mockingProgress . verificationStarted ( mode ) ; StrBuilder
Code	mockingProgress . verificationStarted ( mode ) ; StrBuilder
Distance : 7

46
Tree	verificationStarted ( mode ) ; Class
Code	verificationStarted ( mode ) ; Class
Distance : 9

47
Tree	verificationStarted ( mode ) ; {}
Code	verificationStarted ( mode ) ; {}
Distance : 9

48
Tree	verificationStarted ( mode ) ; toString
Code	verificationStarted ( mode ) ; toString
Distance : 9

49
Tree	verificationStarted ( mode ) ; p
Code	verificationStarted ( mode ) ; p
Distance : 9

50
Tree	verificationStarted ( mode ) ; ParamChecks
Code	verificationStarted ( mode ) ; ParamChecks
Distance : 9

51
Tree	verificationStarted ( mode ) ; Preconditions
Code	verificationStarted ( mode ) ; Preconditions
Distance : 9

52
Tree	verificationStarted ( mode ) ; value
Code	verificationStarted ( mode ) ; value
Distance : 9

53
Tree	verificationStarted ( mode ) ; []
Code	verificationStarted ( mode ) ; []
Distance : 9

54
Tree	verificationStarted ( mode ) ; T
Code	verificationStarted ( mode ) ; T
Distance : 9

55
Tree	verificationStarted ( mode ) ; [
Code	verificationStarted ( mode ) ; [
Distance : 9

56
Tree	verificationStarted ( mode ) ; class
Code	verificationStarted ( mode ) ; class
Distance : 9

57
Tree	mockingProgress . verificationStarted ( mode ) ; js
Code	mockingProgress . verificationStarted ( mode ) ; js
Distance : 7

58
Tree	verificationStarted ( mode ) ; e
Code	verificationStarted ( mode ) ; e
Distance : 9

59
Tree	mockingProgress . verificationStarted ( mode ) ; false
Code	mockingProgress . verificationStarted ( mode ) ; false
Distance : 7

60
Tree	mockingProgress . verificationStarted ( mode ) ; i
Code	mockingProgress . verificationStarted ( mode ) ; i
Distance : 7

61
Tree	mockingProgress . verificationStarted ( mode ) ; &&
Code	mockingProgress . verificationStarted ( mode ) ; &&
Distance : 7

62
Tree	mockingProgress . verificationStarted ( mode ) ; -
Code	mockingProgress . verificationStarted ( mode ) ; -
Distance : 7

63
Tree	mockingProgress . verificationStarted ( mode ) ; true
Code	mockingProgress . verificationStarted ( mode ) ; true
Distance : 7

64
Tree	mockingProgress . verificationStarted ( mode ) ; NUMBER_CONSTANT
Code	mockingProgress . verificationStarted ( mode ) ; NUMBER_CONSTANT
Distance : 7

65
Tree	mockingProgress . verificationStarted ( mode ) ; new
Code	mockingProgress . verificationStarted ( mode ) ; new
Distance : 7

66
Tree	mockingProgress . verificationStarted ( mode ) ; =
Code	mockingProgress . verificationStarted ( mode ) ; =
Distance : 7

67
Tree	mockingProgress . verificationStarted ( mode ) ; STRING_CONSTANT
Code	mockingProgress . verificationStarted ( mode ) ; STRING_CONSTANT
Distance : 7

68
Tree	mockingProgress . verificationStarted ( mode ) ; reportMatcher
Code	mockingProgress . verificationStarted ( mode ) ; reportMatcher
Distance : 7

69
Tree	mockingProgress . verificationStarted ( mode ) ; getMessage
Code	mockingProgress . verificationStarted ( mode ) ; getMessage
Distance : 7

70
Tree	mockingProgress . verificationStarted ( mode ) ; stream
Code	mockingProgress . verificationStarted ( mode ) ; stream
Distance : 7

71
Tree	mockingProgress . verificationStarted ( mode ) ; else
Code	mockingProgress . verificationStarted ( mode ) ; else
Distance : 7

72
Tree	mockingProgress . verificationStarted ( mode ) ; StringBuilder
Code	mockingProgress . verificationStarted ( mode ) ; StringBuilder
Distance : 7

73
Tree	mockingProgress . verificationStarted ( mode ) ; Preconditions
Code	mockingProgress . verificationStarted ( mode ) ; Preconditions
Distance : 7

74
Tree	mockingProgress . verificationStarted ( mode ) ; size
Code	mockingProgress . verificationStarted ( mode ) ; size
Distance : 7

75
Tree	mockingProgress . verificationStarted ( mode ) ; get
Code	mockingProgress . verificationStarted ( mode ) ; get
Distance : 7

76
Tree	mockingProgress . verificationStarted ( mode ) ; char
Code	mockingProgress . verificationStarted ( mode ) ; char
Distance : 7

77
Tree	mockingProgress . verificationStarted ( mode ) ; static
Code	mockingProgress . verificationStarted ( mode ) ; static
Distance : 7

78
Tree	mockingProgress . verificationStarted ( mode ) ; JSType
Code	mockingProgress . verificationStarted ( mode ) ; JSType
Distance : 7

79
Tree	mockingProgress . verificationStarted ( mode ) ; return;
Code	mockingProgress . verificationStarted ( mode ) ; return;
Distance : 7

80
Tree	mockingProgress . verificationStarted ( mode ) ; isEmpty
Code	mockingProgress . verificationStarted ( mode ) ; isEmpty
Distance : 7

81
Tree	mockingProgress . verificationStarted ( mode ) ; chrono
Code	mockingProgress . verificationStarted ( mode ) ; chrono
Distance : 7

82
Tree	mockingProgress . verificationStarted ( mode ) ; mockingProgress
Code	mockingProgress . verificationStarted ( mode ) ; mockingProgress
Distance : 7

83
Tree	mockingProgress . verificationStarted ( mode ) ; clone
Code	mockingProgress . verificationStarted ( mode ) ; clone
Distance : 7

84
Tree	mockingProgress . verificationStarted ( mode ) ; Double
Code	mockingProgress . verificationStarted ( mode ) ; Double
Distance : 7

85
Tree	mockingProgress . verificationStarted ( mode ) ; PeriodType
Code	mockingProgress . verificationStarted ( mode ) ; PeriodType
Distance : 7

86
Tree	mockingProgress . verificationStarted ( mode ) ; <=
Code	mockingProgress . verificationStarted ( mode ) ; <=
Distance : 7

87
Tree	mockingProgress . verificationStarted ( mode ) ; MutableTimePeriod
Code	mockingProgress . verificationStarted ( mode ) ; MutableTimePeriod
Distance : 7

88
Tree	mockingProgress . verificationStarted ( mode ) ; double
Code	mockingProgress . verificationStarted ( mode ) ; double
Distance : 7

89
Tree	mockingProgress . verificationStarted ( mode ) ; mode
Code	mockingProgress . verificationStarted ( mode ) ; mode
Distance : 7

90
Tree	mockingProgress . verificationStarted ( mode ) ; {}
Code	mockingProgress . verificationStarted ( mode ) ; {}
Distance : 7

91
Tree	mockingProgress . verificationStarted ( mode ) ; !=
Code	mockingProgress . verificationStarted ( mode ) ; !=
Distance : 7

92
Tree	mockingProgress . verificationStarted ( mode ) ; value
Code	mockingProgress . verificationStarted ( mode ) ; value
Distance : 7

93
Tree	mockingProgress . verificationStarted ( mode ) ; T
Code	mockingProgress . verificationStarted ( mode ) ; T
Distance : 7

94
Tree	mockingProgress . verificationStarted ( mode ) ; setAcceptedLanguage
Code	mockingProgress . verificationStarted ( mode ) ; setAcceptedLanguage
Distance : 7

95
Tree	mockingProgress . verificationStarted ( mode ) ; abs
Code	mockingProgress . verificationStarted ( mode ) ; abs
Distance : 7

96
Tree	mockingProgress . verificationStarted ( mode ) ; matcher
Code	mockingProgress . verificationStarted ( mode ) ; matcher
Distance : 7

97
Tree	mockingProgress . verificationStarted ( mode ) ; }
Code	mockingProgress . verificationStarted ( mode ) ; }
Distance : 7

98
Tree	mockingProgress . verificationStarted ( mode ) ; ,
Code	mockingProgress . verificationStarted ( mode ) ; ,
Distance : 7

99
Tree	mockingProgress . verificationStarted ( mode ) ; notifyListeners
Code	mockingProgress . verificationStarted ( mode ) ; notifyListeners
Distance : 7

100
Tree	mockingProgress . verificationStarted ( mode ) ; ()
Code	mockingProgress . verificationStarted ( mode ) ; ()
Distance : 7

101
Tree	mockingProgress . verificationStarted ( mode ) ; wanted
Code	mockingProgress . verificationStarted ( mode ) ; wanted
Distance : 7

102
Tree	mockingProgress . verificationStarted ( mode ) ; ex
Code	mockingProgress . verificationStarted ( mode ) ; ex
Distance : 7

103
Tree	mockingProgress . verificationStarted ( mode ) ; ]
Code	mockingProgress . verificationStarted ( mode ) ; ]
Distance : 7

104
Tree	mockingProgress . verificationStarted ( mode ) ; NodeUtil
Code	mockingProgress . verificationStarted ( mode ) ; NodeUtil
Distance : 7

105
Tree	mockingProgress . verificationStarted ( mode ) ; add
Code	mockingProgress . verificationStarted ( mode ) ; add
Distance : 7

106
Tree	mockingProgress . verificationStarted ( mode ) ; data
Code	mockingProgress . verificationStarted ( mode ) ; data
Distance : 7

107
Tree	mockingProgress . verificationStarted ( mode ) ; root
Code	mockingProgress . verificationStarted ( mode ) ; root
Distance : 7

108
Tree	mockingProgress . verificationStarted ( mode ) ; void
Code	mockingProgress . verificationStarted ( mode ) ; void
Distance : 7

109
Tree	mockingProgress . verificationStarted ( mode ) ; throw
Code	mockingProgress . verificationStarted ( mode ) ; throw
Distance : 7

110
Tree	mockingProgress . verificationStarted ( mode ) ; compiler
Code	mockingProgress . verificationStarted ( mode ) ; compiler
Distance : 7

111
Tree	mockingProgress . verificationStarted ( mode ) ; catch
Code	mockingProgress . verificationStarted ( mode ) ; catch
Distance : 7

112
Tree	mockingProgress . verificationStarted ( mode ) ; e
Code	mockingProgress . verificationStarted ( mode ) ; e
Distance : 7

113
Tree	mockingProgress . verificationStarted ( mode ) ; +
Code	mockingProgress . verificationStarted ( mode ) ; +
Distance : 7

114
Tree	mockingProgress . verificationStarted ( mode ) ; n
Code	mockingProgress . verificationStarted ( mode ) ; n
Distance : 7

115
Tree	mockingProgress . verificationStarted ( mode ) ; NodeTraversal
Code	mockingProgress . verificationStarted ( mode ) ; NodeTraversal
Distance : 7

116
Tree	mockingProgress . verificationStarted ( mode ) ; expected
Code	mockingProgress . verificationStarted ( mode ) ; expected
Distance : 7

117
Tree	mockingProgress . verificationStarted ( mode ) ; checkArgument
Code	mockingProgress . verificationStarted ( mode ) ; checkArgument
Distance : 7

118
Tree	verificationStarted ( mode ) ; ()
Code	verificationStarted ( mode ) ; ()
Distance : 9

119
Tree	verificationStarted ( mode ) ; ,
Code	verificationStarted ( mode ) ; ,
Distance : 9

120
Tree	verificationStarted ( mode ) ; ;
Code	verificationStarted ( mode ) ; ;
Distance : 8

121
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; isNormalBlock
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; isNormalBlock
Distance : 8

122
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; PeriodType
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; PeriodType
Distance : 8

123
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; <=
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; <=
Distance : 8

124
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; TestUtils
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; TestUtils
Distance : 8

125
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; long
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; long
Distance : 8

126
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Integer
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Integer
Distance : 8

127
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; length
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; length
Distance : 8

128
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Fraction
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Fraction
Distance : 8

129
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; checkNotNull
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; checkNotNull
Distance : 8

130
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Assert
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Assert
Distance : 8

131
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; ?
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; ?
Distance : 8

132
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Class
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Class
Distance : 8

133
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; traverseEs6
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; traverseEs6
Distance : 8

134
Tree	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; ex
Code	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; ex
Distance : 5

135
Tree	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; NodeTraversal
Code	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; NodeTraversal
Distance : 5

136
Tree	mockingProgress . verificationStarted ( mode ) ; verify
Code	mockingProgress . verificationStarted ( mode ) ; verify
Distance : 7

137
Tree	mockingProgress . verificationStarted ( mode ) ; lines
Code	mockingProgress . verificationStarted ( mode ) ; lines
Distance : 7

138
Tree	mockingProgress . verificationStarted ( mode ) ; Integer
Code	mockingProgress . verificationStarted ( mode ) ; Integer
Distance : 7

139
Tree	mockingProgress . verificationStarted ( mode ) ; Node
Code	mockingProgress . verificationStarted ( mode ) ; Node
Distance : 7

140
Tree	mockingProgress . verificationStarted ( mode ) ; length
Code	mockingProgress . verificationStarted ( mode ) ; length
Distance : 7

141
Tree	mockingProgress . verificationStarted ( mode ) ; b
Code	mockingProgress . verificationStarted ( mode ) ; b
Distance : 7

142
Tree	mockingProgress . verificationStarted ( mode ) ; scope
Code	mockingProgress . verificationStarted ( mode ) ; scope
Distance : 7

143
Tree	mockingProgress . verificationStarted ( mode ) ; IllegalArgumentException
Code	mockingProgress . verificationStarted ( mode ) ; IllegalArgumentException
Distance : 7

144
Tree	mockingProgress . verificationStarted ( mode ) ; invocation
Code	mockingProgress . verificationStarted ( mode ) ; invocation
Distance : 7

145
Tree	mockingProgress . verificationStarted ( mode ) ; FastMath
Code	mockingProgress . verificationStarted ( mode ) ; FastMath
Distance : 7

146
Tree	mockingProgress . verificationStarted ( mode ) ; t
Code	mockingProgress . verificationStarted ( mode ) ; t
Distance : 7

147
Tree	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; []
Code	mockingProgress . verificationStarted ( mode , new MockAwareVerificationMode ( mode ) ) ; []
Distance : 5

148
Tree	mockingProgress . verificationStarted ( mode ) ; reportCodeChange
Code	mockingProgress . verificationStarted ( mode ) ; reportCodeChange
Distance : 7

149
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; mockingProgress
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; mockingProgress
Distance : 8

150
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; size
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; size
Distance : 8

151
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; final
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; final
Distance : 8

152
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; if
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; if
Distance : 8

153
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; >
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; >
Distance : 8

154
Tree	verificationStarted ( mode , mockingProgress ) ; LINE_JOINER
Code	verificationStarted ( mode , mockingProgress ) ; LINE_JOINER
Distance : 9

155
Tree	verificationStarted ( mode , mockingProgress ) ; x
Code	verificationStarted ( mode , mockingProgress ) ; x
Distance : 9

156
Tree	verificationStarted ( mode , mockingProgress ) ; str
Code	verificationStarted ( mode , mockingProgress ) ; str
Distance : 9

157
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; lines
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; lines
Distance : 8

158
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; c
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; c
Distance : 8

159
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Test
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Test
Distance : 8

160
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; notifyListeners
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; notifyListeners
Distance : 8

161
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Exception
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Exception
Distance : 8

162
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; verify
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; verify
Distance : 8

163
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; stroke
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; stroke
Distance : 8

164
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Node
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; Node
Distance : 8

165
Tree	verificationStarted ( mode , mockingProgress ) ; assertThat
Code	verificationStarted ( mode , mockingProgress ) ; assertThat
Distance : 9

166
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; wanted
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; wanted
Distance : 8

167
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; p
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; p
Distance : 8

168
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; StringBuilder
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; StringBuilder
Distance : 8

169
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; toString
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; toString
Distance : 8

170
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; chrono
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; chrono
Distance : 8

171
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; T
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; T
Distance : 8

172
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; [
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; [
Distance : 8

173
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; -
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; -
Distance : 8

174
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; ]
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; ]
Distance : 8

175
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; true
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; true
Distance : 8

176
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; MutableTimePeriod
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; MutableTimePeriod
Distance : 8

177
Tree	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; v
Code	mockingProgress . verificationStarted ( mode , mockingProgress . verificationStarted () ) ; v
Distance : 8

178
Tree	mockingProgress . verificationStarted ( mode ) ; field
Code	mockingProgress . verificationStarted ( mode ) ; field
Distance : 7

179
Tree	mockingProgress . verificationStarted ( mode ) ; name
Code	mockingProgress . verificationStarted ( mode ) ; name
Distance : 7

180
Tree	mockingProgress . verificationStarted ( mode ) ; UnivariateFunction
Code	mockingProgress . verificationStarted ( mode ) ; UnivariateFunction
Distance : 7

181
Tree	mockingProgress . verificationStarted ( mode ) ; class
Code	mockingProgress . verificationStarted ( mode ) ; class
Distance : 7

182
Tree	mockingProgress . verificationStarted ( mode ) ; ParamChecks
Code	mockingProgress . verificationStarted ( mode ) ; ParamChecks
Distance : 7

183
Tree	mockingProgress . verificationStarted ( mode ) ; try
Code	mockingProgress . verificationStarted ( mode ) ; try
Distance : 7

184
Tree	mockingProgress . verificationStarted ( mode ) ; result
Code	mockingProgress . verificationStarted ( mode ) ; result
Distance : 7

185
Tree	mockingProgress . verificationStarted ( mode ) ; test
Code	mockingProgress . verificationStarted ( mode ) ; test
Distance : 7

186
Tree	mockingProgress . verificationStarted ( mode ) ; int
Code	mockingProgress . verificationStarted ( mode ) ; int
Distance : 7

187
Tree	mockingProgress . verificationStarted ( mode ) ; equals
Code	mockingProgress . verificationStarted ( mode ) ; equals
Distance : 7

188
Tree	mockingProgress . verificationStarted ( mode ) ; Invocation
Code	mockingProgress . verificationStarted ( mode ) ; Invocation
Distance : 7

189
Tree	verificationStarted ( mode ) ; int
Code	verificationStarted ( mode ) ; int
Distance : 9

190
Tree	verificationStarted ( mode ) ; super
Code	verificationStarted ( mode ) ; super
Distance : 9

191
Tree	verificationStarted ( mode ) ; mode
Code	verificationStarted ( mode ) ; mode
Distance : 9

192
Tree	verificationStarted ( mode ) ; MathRuntimeException
Code	verificationStarted ( mode ) ; MathRuntimeException
Distance : 9

193
Tree	mockingProgress . verificationStarted ( mode ) ; f
Code	mockingProgress . verificationStarted ( mode ) ; f
Distance : 7

194
Tree	verificationStarted ( mode ) ; mock
Code	verificationStarted ( mode ) ; mock
Distance : 9

195
Tree	verificationStarted ( mode ) ; if
Code	verificationStarted ( mode ) ; if
Distance : 9

196
Tree	verificationStarted ( mode ) ; final
Code	verificationStarted ( mode ) ; final
Distance : 9

197
Tree	verificationStarted ( mode ) ; STRING_CONSTANT
Code	verificationStarted ( mode ) ; STRING_CONSTANT
Distance : 9

198
Tree	verificationStarted ( mode ) ; .
Code	verificationStarted ( mode ) ; .
Distance : 9

199
Tree	verificationStarted ( mode ) ; =
Code	verificationStarted ( mode ) ; =
Distance : 9

========================================================================


========================================================================
Example Number: 86
Parent Code is: 
return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
-------------------------------------------------------------------------------
Child code is: 
return recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata , invocation . getMock () ) , container ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=recordDeepStubAnswer}) (214{val=(}) (32 (802{val=newDeepStubMock}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (215{val=)})) (234{val=,}) (800{val=container}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (802{val=recordDeepStubAnswer}) (214{val=(}) (32 (802{val=newDeepStubMock}) (214{val=(}) (800{val=returnTypeGenericMetadata}) (234{val=,}) (32 (800{val=invocation}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (234{val=,}) (800{val=container}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/10/parent/src_org_mockito_internal_stubbing_defaultanswers_ReturnsDeepStubs.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < container ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < container ;
Distance : 9

1
Tree	return container . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return container . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

2
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) && container ( returnTypeGenericMetadata ) ;
Distance : 8

3
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( container ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( container ) ;
Distance : 8

4
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 8

5
Tree	return returnTypeGenericMetadata . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return returnTypeGenericMetadata . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

6
Tree	return getMock ( container , container ) < invocation ;
Code	return getMock ( container , container ) < invocation ;
Distance : 11

7
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 8

8
Tree	return returnTypeGenericMetadata . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return returnTypeGenericMetadata . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 9

9
Tree	return getMock ( container , invocation ) < container ;
Code	return getMock ( container , invocation ) < container ;
Distance : 9

10
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( invocation ) ;
Distance : 9

11
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Distance : 9

12
Tree	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Code	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Distance : 10

13
Tree	return getMock ( invocation ) . container ( returnTypeGenericMetadata ) ;
Code	return getMock ( invocation ) . container ( returnTypeGenericMetadata ) ;
Distance : 11

14
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Distance : 9

15
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Distance : 9

16
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Distance : 10

17
Tree	return getMock ( invocation , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return getMock ( invocation , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 11

18
Tree	return container . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return container . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 9

19
Tree	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

20
Tree	return getMock ( returnTypeGenericMetadata , container ) && getMock ( container ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && getMock ( container ) ;
Distance : 9

21
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 8

22
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( container ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( container ) ;
Distance : 7

23
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( container ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( container ) ;
Distance : 8

24
Tree	return getMock ( container , container ) && container ( returnTypeGenericMetadata ) ;
Code	return getMock ( container , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 11

25
Tree	return getMock ( invocation ) . getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( invocation ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 10

26
Tree	return recordDeepStubAnswer ( invocation ) < invocation ;
Code	return recordDeepStubAnswer ( invocation ) < invocation ;
Distance : 10

27
Tree	return getMock ( returnTypeGenericMetadata , container ) && getMock ( invocation ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && getMock ( invocation ) ;
Distance : 10

28
Tree	return getMock ( returnTypeGenericMetadata ) . getMock ( invocation ) ;
Code	return getMock ( returnTypeGenericMetadata ) . getMock ( invocation ) ;
Distance : 9

29
Tree	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 9

30
Tree	return invocation . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return invocation . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

31
Tree	return getMock ( container , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return getMock ( container , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 11

32
Tree	return getMock ( container ) . container ( returnTypeGenericMetadata ) ;
Code	return getMock ( container ) . container ( returnTypeGenericMetadata ) ;
Distance : 11

33
Tree	return getMock ( returnTypeGenericMetadata , invocation ) < returnTypeGenericMetadata ;
Code	return getMock ( returnTypeGenericMetadata , invocation ) < returnTypeGenericMetadata ;
Distance : 9

34
Tree	return invocation . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return invocation . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

35
Tree	return getMock ( invocation , container ) && container ( returnTypeGenericMetadata ) ;
Code	return getMock ( invocation , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 11

36
Tree	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < invocation ;
Code	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < invocation ;
Distance : 10

37
Tree	return invocation . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return invocation . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

38
Tree	return getMock ( returnTypeGenericMetadata ) . container ( invocation ) ;
Code	return getMock ( returnTypeGenericMetadata ) . container ( invocation ) ;
Distance : 10

39
Tree	return getMock ( returnTypeGenericMetadata , container ) && container ( invocation ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && container ( invocation ) ;
Distance : 10

40
Tree	return recordDeepStubAnswer ( container , container ) && getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( container , container ) && getMock ( invocation ) ;
Distance : 10

41
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Distance : 9

42
Tree	return getMock ( invocation ) < invocation ;
Code	return getMock ( invocation ) < invocation ;
Distance : 11

43
Tree	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata + getMock ( returnTypeGenericMetadata ) ) ;
Code	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

44
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Distance : 7

45
Tree	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 9

46
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata + getMock ( returnTypeGenericMetadata ) ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

47
Tree	return recordDeepStubAnswer ( invocation , invocation ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( invocation , invocation ) < returnTypeGenericMetadata ;
Distance : 9

48
Tree	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Code	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Distance : 9

49
Tree	return invocation . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Code	return invocation . recordDeepStubAnswer ( returnTypeGenericMetadata , container + ) ( returnTypeGenericMetadata ) ) ;
Distance : 10

50
Tree	return returnTypeGenericMetadata . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return returnTypeGenericMetadata . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 9

51
Tree	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Code	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ;
Distance : 9

52
Tree	return recordDeepStubAnswer ( container ) . container ( invocation ) ;
Code	return recordDeepStubAnswer ( container ) . container ( invocation ) ;
Distance : 10

53
Tree	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < invocation ;
Code	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < invocation ;
Distance : 10

54
Tree	return recordDeepStubAnswer ( container , container ) && container ( invocation ) ;
Code	return recordDeepStubAnswer ( container , container ) && container ( invocation ) ;
Distance : 10

55
Tree	return container . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return container . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 9

56
Tree	return recordDeepStubAnswer ( invocation , container ) && getMock ( container ) ;
Code	return recordDeepStubAnswer ( invocation , container ) && getMock ( container ) ;
Distance : 9

57
Tree	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Code	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) < container ;
Distance : 10

58
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ;
Distance : 8

59
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( invocation ) ;
Distance : 9

60
Tree	return recordDeepStubAnswer ( invocation , invocation ) < container ;
Code	return recordDeepStubAnswer ( invocation , invocation ) < container ;
Distance : 8

61
Tree	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Code	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , returnTypeGenericMetadata ) ;
Distance : 8

62
Tree	return recordDeepStubAnswer ( invocation ) . getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( invocation ) . getMock ( invocation ) ;
Distance : 9

63
Tree	return recordDeepStubAnswer ( container ) . getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( container ) . getMock ( invocation ) ;
Distance : 9

64
Tree	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

65
Tree	return getMock ( container ) < invocation ;
Code	return getMock ( container ) < invocation ;
Distance : 12

66
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( container ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( container ) ;
Distance : 8

67
Tree	return getMock ( container , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( container , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

68
Tree	return recordDeepStubAnswer ( container , invocation ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( container , invocation ) < returnTypeGenericMetadata ;
Distance : 9

69
Tree	return getMock ( invocation , container ) < invocation ;
Code	return getMock ( invocation , container ) < invocation ;
Distance : 11

70
Tree	return getMock ( returnTypeGenericMetadata , invocation ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata , invocation ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 9

71
Tree	return getMock ( invocation , invocation ) < container ;
Code	return getMock ( invocation , invocation ) < container ;
Distance : 9

72
Tree	return getMock ( returnTypeGenericMetadata ) . getMock ( container ) ;
Code	return getMock ( returnTypeGenericMetadata ) . getMock ( container ) ;
Distance : 8

73
Tree	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < invocation ;
Code	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < invocation ;
Distance : 10

74
Tree	return getMock ( returnTypeGenericMetadata , container ) && container ( container ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && container ( container ) ;
Distance : 9

75
Tree	return recordDeepStubAnswer ( container , container ) && getMock ( container ) ;
Code	return recordDeepStubAnswer ( container , container ) && getMock ( container ) ;
Distance : 9

76
Tree	return invocation . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return invocation . getMock ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 9

77
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < invocation ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < invocation ;
Distance : 8

78
Tree	return invocation . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return invocation . getMock ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

79
Tree	return recordDeepStubAnswer ( invocation , container ) && getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( invocation , container ) && getMock ( invocation ) ;
Distance : 10

80
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( invocation ) , container ) ;
Distance : 7

81
Tree	return recordDeepStubAnswer ( invocation , container ) < invocation ;
Code	return recordDeepStubAnswer ( invocation , container ) < invocation ;
Distance : 10

82
Tree	return getMock ( invocation , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( invocation , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

83
Tree	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

84
Tree	return getMock ( returnTypeGenericMetadata , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

85
Tree	return getMock ( invocation , container ) < container ;
Code	return getMock ( invocation , container ) < container ;
Distance : 10

86
Tree	return recordDeepStubAnswer ( container ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( container ) < returnTypeGenericMetadata ;
Distance : 11

87
Tree	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < container ;
Code	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < container ;
Distance : 9

88
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < invocation ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < invocation ;
Distance : 9

89
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < container ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < container ;
Distance : 7

90
Tree	return getMock ( returnTypeGenericMetadata ) . getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 9

91
Tree	return recordDeepStubAnswer ( container , container ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( container , container ) < returnTypeGenericMetadata ;
Distance : 10

92
Tree	return recordDeepStubAnswer ( invocation , container ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( invocation , container ) < returnTypeGenericMetadata ;
Distance : 10

93
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < invocation ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < invocation ;
Distance : 10

94
Tree	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < container ;
Code	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < container ;
Distance : 9

95
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 9

96
Tree	return getMock ( returnTypeGenericMetadata , container ) && container ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

97
Tree	return recordDeepStubAnswer ( container , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

98
Tree	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 10

99
Tree	return getMock ( returnTypeGenericMetadata ) . container ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata ) . container ( returnTypeGenericMetadata ) ;
Distance : 10

100
Tree	return recordDeepStubAnswer ( invocation ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( invocation ) < returnTypeGenericMetadata ;
Distance : 10

101
Tree	return getMock ( invocation ) < container ;
Code	return getMock ( invocation ) < container ;
Distance : 10

102
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( returnTypeGenericMetadata ) ;
Distance : 9

103
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 9

104
Tree	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 9

105
Tree	return getMock ( returnTypeGenericMetadata ) < container ;
Code	return getMock ( returnTypeGenericMetadata ) < container ;
Distance : 10

106
Tree	return getMock ( returnTypeGenericMetadata , container ) < container ;
Code	return getMock ( returnTypeGenericMetadata , container ) < container ;
Distance : 9

107
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < returnTypeGenericMetadata ;
Distance : 9

108
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 10

109
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < container ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < container ;
Distance : 8

110
Tree	return recordDeepStubAnswer ( container ) < container ;
Code	return recordDeepStubAnswer ( container ) < container ;
Distance : 10

111
Tree	return recordDeepStubAnswer ( container , container ) < container ;
Code	return recordDeepStubAnswer ( container , container ) < container ;
Distance : 9

112
Tree	return recordDeepStubAnswer ( invocation , container ) < container ;
Code	return recordDeepStubAnswer ( invocation , container ) < container ;
Distance : 9

113
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 9

114
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 8

115
Tree	return getMock ( returnTypeGenericMetadata , container ) < returnTypeGenericMetadata ;
Code	return getMock ( returnTypeGenericMetadata , container ) < returnTypeGenericMetadata ;
Distance : 10

116
Tree	return getMock ( returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return getMock ( returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 11

117
Tree	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < container ;
Code	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < container ;
Distance : 9

118
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 9

119
Tree	return getMock ( container ) < container ;
Code	return getMock ( container ) < container ;
Distance : 11

120
Tree	return getMock ( container , container ) < container ;
Code	return getMock ( container , container ) < container ;
Distance : 10

121
Tree	return recordDeepStubAnswer ( container ) . getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 9

122
Tree	return recordDeepStubAnswer ( invocation , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

123
Tree	return recordDeepStubAnswer ( invocation ) < container ;
Code	return recordDeepStubAnswer ( invocation ) < container ;
Distance : 9

124
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && container ( returnTypeGenericMetadata ) ;
Distance : 9

125
Tree	return getMock ( container , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( container , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 11

126
Tree	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return invocation . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 7

127
Tree	return recordDeepStubAnswer ( container , container ) < invocation ;
Code	return recordDeepStubAnswer ( container , container ) < invocation ;
Distance : 10

128
Tree	return recordDeepStubAnswer ( container , invocation ) < container ;
Code	return recordDeepStubAnswer ( container , invocation ) < container ;
Distance : 8

129
Tree	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( invocation , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 10

130
Tree	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return container . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

131
Tree	return recordDeepStubAnswer ( invocation ) . container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation ) . container ( returnTypeGenericMetadata ) ;
Distance : 10

132
Tree	return returnTypeGenericMetadata . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return returnTypeGenericMetadata . getMock ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

133
Tree	return container . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return container . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

134
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . container ( invocation ) ;
Distance : 9

135
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && container ( invocation ) ;
Distance : 9

136
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( getMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 8

137
Tree	return getMock ( invocation , container ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( invocation , container ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 11

138
Tree	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return container . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

139
Tree	return getMock ( container , container ) < returnTypeGenericMetadata ;
Code	return getMock ( container , container ) < returnTypeGenericMetadata ;
Distance : 11

140
Tree	return recordDeepStubAnswer ( container ) < invocation ;
Code	return recordDeepStubAnswer ( container ) < invocation ;
Distance : 11

141
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( returnTypeGenericMetadata , container + getMock ( returnTypeGenericMetadata ) ) ;
Distance : 9

142
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( container ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( container ) ;
Distance : 8

143
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < invocation ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , returnTypeGenericMetadata ) < invocation ;
Distance : 9

144
Tree	return getMock ( container ) . getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( container ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 10

145
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , invocation ) < returnTypeGenericMetadata ;
Distance : 8

146
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 7

147
Tree	return recordDeepStubAnswer ( invocation , container ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

148
Tree	return getMock ( returnTypeGenericMetadata , container ) < invocation ;
Code	return getMock ( returnTypeGenericMetadata , container ) < invocation ;
Distance : 10

149
Tree	return getMock ( container , returnTypeGenericMetadata ) < container ;
Code	return getMock ( container , returnTypeGenericMetadata ) < container ;
Distance : 10

150
Tree	return getMock ( returnTypeGenericMetadata , invocation ) < container ;
Code	return getMock ( returnTypeGenericMetadata , invocation ) < container ;
Distance : 8

151
Tree	return getMock ( container ) < returnTypeGenericMetadata ;
Code	return getMock ( container ) < returnTypeGenericMetadata ;
Distance : 12

152
Tree	return recordDeepStubAnswer ( container , container ) && container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container , container ) && container ( returnTypeGenericMetadata ) ;
Distance : 10

153
Tree	return recordDeepStubAnswer ( invocation ) . getMock ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( invocation ) . getMock ( returnTypeGenericMetadata ) ;
Distance : 9

154
Tree	return getMock ( invocation , container ) < returnTypeGenericMetadata ;
Code	return getMock ( invocation , container ) < returnTypeGenericMetadata ;
Distance : 11

155
Tree	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Code	return returnTypeGenericMetadata . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ;
Distance : 7

156
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata ) . getMock ( invocation ) ;
Distance : 8

157
Tree	return getMock ( invocation ) < returnTypeGenericMetadata ;
Code	return getMock ( invocation ) < returnTypeGenericMetadata ;
Distance : 11

158
Tree	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Code	return recordDeepStubAnswer ( container , returnTypeGenericMetadata ) < returnTypeGenericMetadata ;
Distance : 10

159
Tree	return getMock ( returnTypeGenericMetadata ) < invocation ;
Code	return getMock ( returnTypeGenericMetadata ) < invocation ;
Distance : 11

160
Tree	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Code	return getMock ( returnTypeGenericMetadata , returnTypeGenericMetadata ) && getMock ( returnTypeGenericMetadata ) ;
Distance : 10

161
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( invocation ) ;
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) && getMock ( invocation ) ;
Distance : 9

162
Tree	return recordDeepStubAnswer ( container ) . container ( returnTypeGenericMetadata ) ;
Code	return recordDeepStubAnswer ( container ) . container ( returnTypeGenericMetadata ) ;
Distance : 10

163
Tree	return getMock ( invocation , returnTypeGenericMetadata ) < container ;
Code	return getMock ( invocation , returnTypeGenericMetadata ) < container ;
Distance : 10

164
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; null
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; null
Distance : 8

165
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; )
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; )
Distance : 8

166
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ;
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ;
Distance : 8

167
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; {
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; {
Distance : 8

168
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ()
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ()
Distance : 8

169
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; :
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; :
Distance : 8

170
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; =
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; =
Distance : 8

171
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; boolean
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; boolean
Distance : 8

172
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; result
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; result
Distance : 8

173
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ==
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ==
Distance : 8

174
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; n
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; n
Distance : 8

175
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; test
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; test
Distance : 8

176
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; }
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; }
Distance : 8

177
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; invocations
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; invocations
Distance : 9

178
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; else
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; else
Distance : 9

179
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; .
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; .
Distance : 8

180
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; type
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; type
Distance : 8

181
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; m
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; m
Distance : 8

182
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; int
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; int
Distance : 8

183
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; paint
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; paint
Distance : 8

184
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ,
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ,
Distance : 8

185
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; fireChangeEvent
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; fireChangeEvent
Distance : 8

186
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; join
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; join
Distance : 8

187
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; getInstance
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; getInstance
Distance : 8

188
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; createIllegalArgumentException
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; createIllegalArgumentException
Distance : 8

189
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; parent
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; parent
Distance : 8

190
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; getMessage
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; getMessage
Distance : 9

191
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; out
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; out
Distance : 9

192
Tree	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; stream
Code	return recordDeepStubAnswer ( returnTypeGenericMetadata , container ) < container ; stream
Distance : 9

193
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ArrayList
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; ArrayList
Distance : 8

194
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; serialised
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; serialised
Distance : 8

195
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; false
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; false
Distance : 8

196
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ; super
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) ) < container ; super
Distance : 10

197
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; expected
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; expected
Distance : 8

198
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; <s>
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; <s>
Distance : 8

199
Tree	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; void
Code	return container . recordDeepStubAnswer ( newDeepStubMock ( returnTypeGenericMetadata ) , container ) ; void
Distance : 8

========================================================================


========================================================================
Example Number: 87
Parent Code is: 
{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyCollection () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=Collection})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyCollection}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher () ; } boolean
Code	{ return reportMatcher () ; } boolean
Distance : 2

1
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } index
Code	{ reportMatcher ( Any.ANY ) ; return null ; } index
Distance : 8

2
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocations
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocations
Distance : 8

3
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Code	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Distance : 8

4
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Code	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Distance : 8

5
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getParent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getParent
Distance : 8

6
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } node
Distance : 8

7
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } List
Code	{ reportMatcher ( Any.ANY ) ; return null ; } List
Distance : 8

8
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Args
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Args
Distance : 8

9
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } array
Code	{ reportMatcher ( Any.ANY ) ; return null ; } array
Distance : 8

10
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Distance : 8

11
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Distance : 8

12
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Code	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Distance : 8

13
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Distance : 8

14
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } source
Code	{ reportMatcher ( Any.ANY ) ; return null ; } source
Distance : 8

15
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } field
Code	{ reportMatcher ( Any.ANY ) ; return null ; } field
Distance : 8

16
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } t
Code	{ reportMatcher ( Any.ANY ) ; return null ; } t
Distance : 8

17
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Distance : 8

18
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Distance : 8

19
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Distance : 8

20
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Distance : 8

21
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Distance : 8

22
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Distance : 8

23
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Distance : 8

24
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Distance : 8

25
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } x
Code	{ reportMatcher ( Any.ANY ) ; return null ; } x
Distance : 8

26
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Code	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Distance : 8

27
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } new
Code	{ reportMatcher ( Any.ANY ) ; return null ; } new
Distance : 8

28
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } values
Code	{ reportMatcher ( Any.ANY ) ; return null ; } values
Distance : 8

29
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Distance : 8

30
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } double
Distance : 8

31
Tree	{ return reportMatcher () ; } ==
Code	{ return reportMatcher () ; } ==
Distance : 2

32
Tree	{ return reportMatcher () ; } []
Code	{ return reportMatcher () ; } []
Distance : 2

33
Tree	{ return reportMatcher () ; } double
Code	{ return reportMatcher () ; } double
Distance : 2

34
Tree	{ return reportMatcher () ; } false
Code	{ return reportMatcher () ; } false
Distance : 2

35
Tree	{ return reportMatcher () ; } test
Code	{ return reportMatcher () ; } test
Distance : 2

36
Tree	{ return reportMatcher () ; } int
Code	{ return reportMatcher () ; } int
Distance : 2

37
Tree	{ return reportMatcher () ; } super
Code	{ return reportMatcher () ; } super
Distance : 2

38
Tree	{ return reportMatcher () ; } mode
Code	{ return reportMatcher () ; } mode
Distance : 2

39
Tree	{ return reportMatcher () ; } MathRuntimeException
Code	{ return reportMatcher () ; } MathRuntimeException
Distance : 2

40
Tree	{ return reportMatcher () ; } mock
Code	{ return reportMatcher () ; } mock
Distance : 2

41
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Distance : 8

42
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Distance : 8

43
Tree	{ return reportMatcher () ; } return;
Code	{ return reportMatcher () ; } return;
Distance : 2

44
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } str
Code	{ reportMatcher ( Any.ANY ) ; return null ; } str
Distance : 8

45
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } root
Code	{ reportMatcher ( Any.ANY ) ; return null ; } root
Distance : 8

46
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } value
Code	{ reportMatcher ( Any.ANY ) ; return null ; } value
Distance : 8

47
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } i
Code	{ reportMatcher ( Any.ANY ) ; return null ; } i
Distance : 8

48
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } false
Code	{ reportMatcher ( Any.ANY ) ; return null ; } false
Distance : 8

49
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } int
Code	{ reportMatcher ( Any.ANY ) ; return null ; } int
Distance : 8

50
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } super
Code	{ reportMatcher ( Any.ANY ) ; return null ; } super
Distance : 8

51
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Distance : 8

52
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Distance : 8

53
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } []
Code	{ reportMatcher ( Any.ANY ) ; return null ; } []
Distance : 8

54
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } void
Code	{ reportMatcher ( Any.ANY ) ; return null ; } void
Distance : 8

55
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Distance : 8

56
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Distance : 8

57
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !
Distance : 8

58
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Code	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Distance : 8

59
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Distance : 8

60
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

61
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Distance : 8

62
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Code	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Distance : 8

63
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } join
Code	{ reportMatcher ( Any.ANY ) ; return null ; } join
Distance : 8

64
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } p
Code	{ reportMatcher ( Any.ANY ) ; return null ; } p
Distance : 8

65
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 8

66
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Distance : 8

67
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Distance : 8

68
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } add
Code	{ reportMatcher ( Any.ANY ) ; return null ; } add
Distance : 8

69
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } name
Code	{ reportMatcher ( Any.ANY ) ; return null ; } name
Distance : 8

70
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Distance : 8

71
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } data
Code	{ reportMatcher ( Any.ANY ) ; return null ; } data
Distance : 8

72
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Code	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Distance : 8

73
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Code	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Distance : 8

74
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Distance : 8

75
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Code	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Distance : 8

76
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } d
Code	{ reportMatcher ( Any.ANY ) ; return null ; } d
Distance : 8

77
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Distance : 8

78
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } true
Code	{ reportMatcher ( Any.ANY ) ; return null ; } true
Distance : 8

79
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Distance : 8

80
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Distance : 8

81
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Distance : 8

82
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Code	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Distance : 8

83
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Code	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Distance : 8

84
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Distance : 8

85
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Distance : 8

86
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } for
Code	{ reportMatcher ( Any.ANY ) ; return null ; } for
Distance : 8

87
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Distance : 8

88
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Distance : 8

89
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Code	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Distance : 8

90
Tree	{ return reportMatcher () ; } throw
Code	{ return reportMatcher () ; } throw
Distance : 2

91
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } m
Code	{ reportMatcher ( Any.ANY ) ; return null ; } m
Distance : 8

92
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } *
Code	{ reportMatcher ( Any.ANY ) ; return null ; } *
Distance : 8

93
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Distance : 8

94
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } )
Code	{ reportMatcher ( Any.ANY ) ; return null ; } )
Distance : 8

95
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

96
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Distance : 8

97
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Distance : 8

98
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } (
Code	{ reportMatcher ( Any.ANY ) ; return null ; } (
Distance : 8

99
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } =
Code	{ reportMatcher ( Any.ANY ) ; return null ; } =
Distance : 8

100
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } }
Code	{ reportMatcher ( Any.ANY ) ; return null ; } }
Distance : 8

101
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } .
Code	{ reportMatcher ( Any.ANY ) ; return null ; } .
Distance : 8

102
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Distance : 8

103
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Distance : 8

104
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } try
Code	{ reportMatcher ( Any.ANY ) ; return null ; } try
Distance : 8

105
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fail
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fail
Distance : 8

106
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 8

107
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 8

108
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } @
Code	{ reportMatcher ( Any.ANY ) ; return null ; } @
Distance : 8

109
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } test
Distance : 8

110
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } public
Code	{ reportMatcher ( Any.ANY ) ; return null ; } public
Distance : 8

111
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } >
Code	{ reportMatcher ( Any.ANY ) ; return null ; } >
Distance : 8

112
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <
Distance : 8

113
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } if
Code	{ reportMatcher ( Any.ANY ) ; return null ; } if
Distance : 8

114
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return
Distance : 8

115
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Distance : 8

116
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } this
Code	{ reportMatcher ( Any.ANY ) ; return null ; } this
Distance : 8

117
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } final
Code	{ reportMatcher ( Any.ANY ) ; return null ; } final
Distance : 8

118
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Code	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Distance : 8

119
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Distance : 8

120
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } type
Code	{ reportMatcher ( Any.ANY ) ; return null ; } type
Distance : 8

121
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Distance : 8

122
Tree	{ return reportMatcher () ; } void
Code	{ return reportMatcher () ; } void
Distance : 2

123
Tree	{ return reportMatcher () ; } !
Code	{ return reportMatcher () ; } !
Distance : 2

124
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } c
Code	{ reportMatcher ( Any.ANY ) ; return null ; } c
Distance : 8

125
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Code	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Distance : 8

126
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } lines
Code	{ reportMatcher ( Any.ANY ) ; return null ; } lines
Distance : 8

127
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } verify
Code	{ reportMatcher ( Any.ANY ) ; return null ; } verify
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } n
Code	{ reportMatcher ( Any.ANY ) ; return null ; } n
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } e
Code	{ reportMatcher ( Any.ANY ) ; return null ; } e
Distance : 8

130
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } null
Code	{ reportMatcher ( Any.ANY ) ; return null ; } null
Distance : 8

131
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } +
Code	{ reportMatcher ( Any.ANY ) ; return null ; } +
Distance : 8

132
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Code	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Distance : 8

133
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } String
Code	{ reportMatcher ( Any.ANY ) ; return null ; } String
Distance : 8

134
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Code	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Distance : 8

135
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Distance : 8

136
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Distance : 8

137
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Distance : 8

138
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } length
Code	{ reportMatcher ( Any.ANY ) ; return null ; } length
Distance : 8

139
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } long
Code	{ reportMatcher ( Any.ANY ) ; return null ; } long
Distance : 8

140
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Distance : 8

141
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Distance : 8

142
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Distance : 8

143
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } a
Code	{ reportMatcher ( Any.ANY ) ; return null ; } a
Distance : 8

144
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } b
Code	{ reportMatcher ( Any.ANY ) ; return null ; } b
Distance : 8

145
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Distance : 8

146
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Distance : 8

147
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Distance : 8

148
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Distance : 8

149
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Distance : 8

150
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Distance : 8

151
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Distance : 8

152
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } v
Code	{ reportMatcher ( Any.ANY ) ; return null ; } v
Distance : 8

153
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Distance : 8

154
Tree	{ return ( Collection ) reportMatcher () ; } class
Code	{ return ( Collection ) reportMatcher () ; } class
Distance : 5

155
Tree	{ return ( Collection ) reportMatcher () ; } Override
Code	{ return ( Collection ) reportMatcher () ; } Override
Distance : 5

156
Tree	{ return ( Collection ) reportMatcher () ; } Object
Code	{ return ( Collection ) reportMatcher () ; } Object
Distance : 5

157
Tree	{ return ( Collection ) reportMatcher () ; } @
Code	{ return ( Collection ) reportMatcher () ; } @
Distance : 5

158
Tree	{ return ( Collection ) reportMatcher () ; } assertEquals
Code	{ return ( Collection ) reportMatcher () ; } assertEquals
Distance : 5

159
Tree	{ return ( Collection ) reportMatcher () ; } !
Code	{ return ( Collection ) reportMatcher () ; } !
Distance : 5

160
Tree	{ return ( Collection ) reportMatcher () ; } >
Code	{ return ( Collection ) reportMatcher () ; } >
Distance : 5

161
Tree	{ return ( Collection ) reportMatcher () ; } void
Code	{ return ( Collection ) reportMatcher () ; } void
Distance : 5

162
Tree	{ return ( Collection ) reportMatcher () ; } throw
Code	{ return ( Collection ) reportMatcher () ; } throw
Distance : 5

163
Tree	{ return ( Collection ) reportMatcher () ; } ==
Code	{ return ( Collection ) reportMatcher () ; } ==
Distance : 5

164
Tree	{ return ( Collection ) reportMatcher () ; } []
Code	{ return ( Collection ) reportMatcher () ; } []
Distance : 5

165
Tree	{ return ( Collection ) reportMatcher () ; } double
Code	{ return ( Collection ) reportMatcher () ; } double
Distance : 5

166
Tree	{ return ( Collection ) reportMatcher () ; } false
Code	{ return ( Collection ) reportMatcher () ; } false
Distance : 5

167
Tree	{ return ( Collection ) reportMatcher () ; } test
Code	{ return ( Collection ) reportMatcher () ; } test
Distance : 5

168
Tree	{ return ( Collection ) reportMatcher () ; } int
Code	{ return ( Collection ) reportMatcher () ; } int
Distance : 5

169
Tree	{ return ( Collection ) reportMatcher () ; } super
Code	{ return ( Collection ) reportMatcher () ; } super
Distance : 5

170
Tree	{ return ( Collection ) reportMatcher () ; } mode
Code	{ return ( Collection ) reportMatcher () ; } mode
Distance : 5

171
Tree	{ return ( Collection ) reportMatcher () ; } MathRuntimeException
Code	{ return ( Collection ) reportMatcher () ; } MathRuntimeException
Distance : 5

172
Tree	{ return ( Collection ) reportMatcher () ; } mock
Code	{ return ( Collection ) reportMatcher () ; } mock
Distance : 5

173
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } scope
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } scope
Distance : 8

174
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } b
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } b
Distance : 8

175
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } sb
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) ; } sb
Distance : 8

176
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } s
Code	{ reportMatcher ( Any.ANY ) ; return null ; } s
Distance : 8

177
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Distance : 8

178
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Distance : 8

179
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Distance : 8

180
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } js
Code	{ reportMatcher ( Any.ANY ) ; return null ; } js
Distance : 8

181
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Code	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Distance : 8

182
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Code	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Distance : 8

183
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } [
Code	{ reportMatcher ( Any.ANY ) ; return null ; } [
Distance : 8

184
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Distance : 8

185
Tree	{ return reportMatcher () ; } NUMBER_CONSTANT
Code	{ return reportMatcher () ; } NUMBER_CONSTANT
Distance : 2

186
Tree	{ return reportMatcher () ; } new
Code	{ return reportMatcher () ; } new
Distance : 2

187
Tree	{ return reportMatcher () ; } return
Code	{ return reportMatcher () ; } return
Distance : 2

188
Tree	{ return reportMatcher () ; } this
Code	{ return reportMatcher () ; } this
Distance : 2

189
Tree	{ return reportMatcher () ; } t
Code	{ return reportMatcher () ; } t
Distance : 2

190
Tree	{ return reportMatcher () ; } reportCodeChange
Code	{ return reportMatcher () ; } reportCodeChange
Distance : 2

191
Tree	{ return reportMatcher () ; } IllegalArgumentException
Code	{ return reportMatcher () ; } IllegalArgumentException
Distance : 2

192
Tree	{ return reportMatcher () ; } getField
Code	{ return reportMatcher () ; } getField
Distance : 2

193
Tree	{ return reportMatcher () ; } solver
Code	{ return reportMatcher () ; } solver
Distance : 2

194
Tree	{ return reportMatcher () ; } -
Code	{ return reportMatcher () ; } -
Distance : 2

195
Tree	{ return reportMatcher () ; } ]
Code	{ return reportMatcher () ; } ]
Distance : 2

196
Tree	{ return reportMatcher () ; } STRING_CONSTANT
Code	{ return reportMatcher () ; } STRING_CONSTANT
Distance : 2

197
Tree	{ return reportMatcher () ; } final
Code	{ return reportMatcher () ; } final
Distance : 2

198
Tree	{ return reportMatcher () ; } if
Code	{ return reportMatcher () ; } if
Distance : 2

199
Tree	{ return reportMatcher () ; } nullNotPermitted
Code	{ return reportMatcher () ; } nullNotPermitted
Distance : 2

========================================================================


========================================================================
Example Number: 88
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Collection . class ) ) . returnList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Collection})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Collection ; } invocations
Code	{ return this . Collection ; } invocations
Distance : 13

2
Tree	{ return this . Collection ; } values
Code	{ return this . Collection ; } values
Distance : 13

3
Tree	{ return this . Collection ; } setAcceptedLanguage
Code	{ return this . Collection ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Collection ; } clone
Code	{ return this . Collection ; } clone
Distance : 13

5
Tree	{ return this . Collection ; } Double
Code	{ return this . Collection ; } Double
Distance : 13

6
Tree	{ return this . Collection ; } PeriodType
Code	{ return this . Collection ; } PeriodType
Distance : 13

7
Tree	{ return this . Collection ; } <=
Code	{ return this . Collection ; } <=
Distance : 13

8
Tree	{ return this . Collection ; } contains
Code	{ return this . Collection ; } contains
Distance : 13

9
Tree	{ return this . Collection ; } a
Code	{ return this . Collection ; } a
Distance : 13

10
Tree	{ return this . Collection ; } protected
Code	{ return this . Collection ; } protected
Distance : 13

11
Tree	{ return this . Collection ; } isNormalBlock
Code	{ return this . Collection ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Collection ; } MutableTimePeriod
Code	{ return this . Collection ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Collection ; } size
Code	{ return this . Collection ; } size
Distance : 13

14
Tree	{ return this . Collection ; } StringBuilder
Code	{ return this . Collection ; } StringBuilder
Distance : 13

15
Tree	{ return this . Collection ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Collection ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Collection ; } traverseEs6
Code	{ return this . Collection ; } traverseEs6
Distance : 13

17
Tree	{ return this . Collection ; } stroke
Code	{ return this . Collection ; } stroke
Distance : 13

18
Tree	{ return this . Collection ; } obj
Code	{ return this . Collection ; } obj
Distance : 13

19
Tree	{ return this . Collection ; } s
Code	{ return this . Collection ; } s
Distance : 13

20
Tree	{ return this . Collection ; } returnZero
Code	{ return this . Collection ; } returnZero
Distance : 13

21
Tree	{ return this . Collection ; } b
Code	{ return this . Collection ; } b
Distance : 13

22
Tree	{ return this . Collection ; } null
Code	{ return this . Collection ; } null
Distance : 13

23
Tree	{ return this . Collection ; } setUp
Code	{ return this . Collection ; } setUp
Distance : 13

24
Tree	{ return this . Collection ; } node
Code	{ return this . Collection ; } node
Distance : 13

25
Tree	{ return this . Collection ; } reportCodeChange
Code	{ return this . Collection ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Collection ; } t
Code	{ return this . Collection ; } t
Distance : 13

27
Tree	{ return this . Collection ; } FastMath
Code	{ return this . Collection ; } FastMath
Distance : 13

28
Tree	{ return this . Collection ; } invocation
Code	{ return this . Collection ; } invocation
Distance : 13

29
Tree	{ return this . Collection ; } IllegalArgumentException
Code	{ return this . Collection ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Collection ; } expected
Code	{ return this . Collection ; } expected
Distance : 13

31
Tree	{ return this . Collection ; } testSame
Code	{ return this . Collection ; } testSame
Distance : 13

32
Tree	{ return this . Collection ; } createIllegalArgumentException
Code	{ return this . Collection ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Collection ; } ArrayList
Code	{ return this . Collection ; } ArrayList
Distance : 13

34
Tree	{ return this . Collection ; } parent
Code	{ return this . Collection ; } parent
Distance : 13

35
Tree	{ return this . Collection ; } LINE_JOINER
Code	{ return this . Collection ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Collection ; } x
Code	{ return this . Collection ; } x
Distance : 13

37
Tree	{ return this . Collection ; } str
Code	{ return this . Collection ; } str
Distance : 13

38
Tree	{ return this . Collection ; } assertThat
Code	{ return this . Collection ; } assertThat
Distance : 13

39
Tree	{ return this . Collection ; } getFirstChild
Code	{ return this . Collection ; } getFirstChild
Distance : 13

40
Tree	{ return this . Collection ; } sb
Code	{ return this . Collection ; } sb
Distance : 13

41
Tree	{ return this . Collection ; } externs
Code	{ return this . Collection ; } externs
Distance : 13

42
Tree	{ return this . Collection ; } append
Code	{ return this . Collection ; } append
Distance : 13

43
Tree	{ return this . Collection ; } Invocation
Code	{ return this . Collection ; } Invocation
Distance : 13

44
Tree	{ return this . Collection ; } equals
Code	{ return this . Collection ; } equals
Distance : 13

45
Tree	{ return this . Collection ; } index
Code	{ return this . Collection ; } index
Distance : 13

46
Tree	{ return this . Collection ; } NUMBER_CONSTANT
Code	{ return this . Collection ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Collection ; } Object
Code	{ return this . Collection ; } Object
Distance : 13

48
Tree	{ return this . Collection ; } value
Code	{ return this . Collection ; } value
Distance : 13

49
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } testSame
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } testSame
Distance : 10

50
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } add
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } add
Distance : 10

51
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } parent
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } parent
Distance : 10

52
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } serialised
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } serialised
Distance : 10

54
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } y
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } y
Distance : 10

55
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } sb
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } sb
Distance : 10

56
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } scope
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } scope
Distance : 10

57
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } throws
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } throws
Distance : 10

59
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Double
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Double
Distance : 10

60
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } <=
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } <=
Distance : 10

61
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } clone
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } clone
Distance : 10

62
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } sqrt
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } sqrt
Distance : 10

63
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } isBlock
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } isBlock
Distance : 10

64
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } returnZero
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } returnZero
Distance : 10

65
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } append
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } append
Distance : 10

67
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } getInstance
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } getInstance
Distance : 10

69
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } valueOf
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } valueOf
Distance : 10

70
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

71
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Math
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Math
Distance : 10

72
Tree	{ return this . Collection ; } field
Code	{ return this . Collection ; } field
Distance : 13

73
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } wanted
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } wanted
Distance : 10

74
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } x
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } x
Distance : 10

76
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } try
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } try
Distance : 10

77
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } fail
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } fail
Distance : 10

78
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Args
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Args
Distance : 10

79
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } List
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } List
Distance : 10

80
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } f
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } f
Distance : 10

81
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } array
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } array
Distance : 10

83
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } <>
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } <>
Distance : 10

84
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } m
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } m
Distance : 10

85
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } boolean
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } boolean
Distance : 10

86
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } :
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } :
Distance : 10

87
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } result
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } result
Distance : 10

88
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } join
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } join
Distance : 10

89
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } paint
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } paint
Distance : 10

90
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } *
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } *
Distance : 10

91
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } type
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } type
Distance : 10

92
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } long
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } long
Distance : 10

93
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } length
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } length
Distance : 10

94
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } v
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } v
Distance : 10

95
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Integer
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } Integer
Distance : 10

96
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } root
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; } root
Distance : 10

97
Tree	{ return this . Collection ; } length
Code	{ return this . Collection ; } length
Distance : 13

98
Tree	{ return this . Collection ; } @
Code	{ return this . Collection ; } @
Distance : 13

99
Tree	{ return this . Collection ; } instance
Code	{ return this . Collection ; } instance
Distance : 13

100
Tree	{ super ( Collection ) ; reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ super ( Collection ) ; reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

101
Tree	{ returnList ( Any.ANY ) ; return default: ; }
Code	{ returnList ( Any.ANY ) ; return default: ; }
Distance : 12

102
Tree	{ return ( Collection ) returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 10

104
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

105
Tree	{ super ( Collection ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Collection ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

106
Tree	{ returnList ( Any.ANY ) ; Collection = Any.ANY . returnList () ; }
Code	{ returnList ( Any.ANY ) ; Collection = Any.ANY . returnList () ; }
Distance : 9

107
Tree	{ returnList ( Any.ANY ) ; Collection = Any.ANY . reportMatcher () ; }
Code	{ returnList ( Any.ANY ) ; Collection = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Collection ; } chrono
Code	{ return this . Collection ; } chrono
Distance : 13

109
Tree	{ return this . Collection ; } JSType
Code	{ return this . Collection ; } JSType
Distance : 13

110
Tree	{ return this . Collection ; } static
Code	{ return this . Collection ; } static
Distance : 13

111
Tree	{ return this . Collection ; } char
Code	{ return this . Collection ; } char
Distance : 13

112
Tree	{ return this . Collection ; } return;
Code	{ return this . Collection ; } return;
Distance : 13

113
Tree	{ return this . Collection ; } isEmpty
Code	{ return this . Collection ; } isEmpty
Distance : 13

114
Tree	{ return this . Collection ; } mockingProgress
Code	{ return this . Collection ; } mockingProgress
Distance : 13

115
Tree	{ return this . Collection ; } js
Code	{ return this . Collection ; } js
Distance : 13

116
Tree	{ return this . Collection ; } get
Code	{ return this . Collection ; } get
Distance : 13

117
Tree	{ return this . Collection ; } instant
Code	{ return this . Collection ; } instant
Distance : 13

118
Tree	{ return this . Collection ; } else
Code	{ return this . Collection ; } else
Distance : 13

119
Tree	{ return this . Collection ; } stream
Code	{ return this . Collection ; } stream
Distance : 13

120
Tree	{ return this . Collection ; } {}
Code	{ return this . Collection ; } {}
Distance : 13

121
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 8

122
Tree	{ return this . Collection ; } reportMatcher
Code	{ return this . Collection ; } reportMatcher
Distance : 13

123
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; }
Code	{ super ( Collection ) ; returnList ( Any.ANY ) . returnList () ; }
Distance : 9

124
Tree	{ super ( Collection ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Collection ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

125
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 7

126
Tree	{ return this . Collection ; } getField
Code	{ return this . Collection ; } getField
Distance : 13

127
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

128
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

132
Tree	{ returnList ( Any.ANY ) ; return null ; }
Code	{ returnList ( Any.ANY ) ; return null ; }
Distance : 12

133
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

134
Tree	{ returnList ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnList ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

135
Tree	{ return returnList ( Any.ANY ) . returnList () ; }
Code	{ return returnList ( Any.ANY ) . returnList () ; }
Distance : 8

136
Tree	{ return this . Collection ; }
Code	{ return this . Collection ; }
Distance : 12

137
Tree	{ returnList ( Any.ANY ) ; return return; ; }
Code	{ returnList ( Any.ANY ) ; return return; ; }
Distance : 12

138
Tree	{ return ( Collection ) returnList ( Any.ANY ) ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) ; }
Distance : 10

139
Tree	{ returnList ( Any.ANY ) ; return super(); ; }
Code	{ returnList ( Any.ANY ) ; return super(); ; }
Distance : 12

140
Tree	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

141
Tree	{ return ( Collection ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Collection ) reportMatcher ( Any.ANY ) ; }
Distance : 10

142
Tree	{ super ( Collection ) ; returnList ( Any.ANY ) ; }
Code	{ super ( Collection ) ; returnList ( Any.ANY ) ; }
Distance : 12

143
Tree	{ returnList ( Any.ANY ) ; return break; ; }
Code	{ returnList ( Any.ANY ) ; return break; ; }
Distance : 12

144
Tree	{ reportMatcher ( Any.ANY ) ; Collection = Any.ANY . returnList () ; }
Code	{ reportMatcher ( Any.ANY ) ; Collection = Any.ANY . returnList () ; }
Distance : 8

145
Tree	{ returnList ( Any.ANY ) ; return continue; ; }
Code	{ returnList ( Any.ANY ) ; return continue; ; }
Distance : 12

146
Tree	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Code	{ return ( Collection ) returnList ( Any.ANY ) . returnList () ; }
Distance : 8

147
Tree	{ return this . Collection ; } matcher
Code	{ return this . Collection ; } matcher
Distance : 13

148
Tree	{ reportMatcher ( Any.ANY ) ; Collection = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Collection = Any.ANY . reportMatcher () ; }
Distance : 9

149
Tree	{ return this . Collection ; } valueOf
Code	{ return this . Collection ; } valueOf
Distance : 13

150
Tree	{ return this . Collection ; } this
Code	{ return this . Collection ; } this
Distance : 13

151
Tree	{ return this . Collection ; } return
Code	{ return this . Collection ; } return
Distance : 13

152
Tree	{ return this . Collection ; } final
Code	{ return this . Collection ; } final
Distance : 13

153
Tree	{ return this . Collection ; } <
Code	{ return this . Collection ; } <
Distance : 13

154
Tree	{ return this . Collection ; } name
Code	{ return this . Collection ; } name
Distance : 13

155
Tree	{ return this . Collection ; } solver
Code	{ return this . Collection ; } solver
Distance : 13

156
Tree	{ return this . Collection ; } y
Code	{ return this . Collection ; } y
Distance : 13

157
Tree	{ return this . Collection ; } PlotChangeEvent
Code	{ return this . Collection ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Collection ; } d
Code	{ return this . Collection ; } d
Distance : 13

159
Tree	{ return this . Collection ; } getParent
Code	{ return this . Collection ; } getParent
Distance : 13

160
Tree	{ return this . Collection ; } for
Code	{ return this . Collection ; } for
Distance : 13

161
Tree	{ return this . Collection ; } UnivariateFunction
Code	{ return this . Collection ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Collection ; } sqrt
Code	{ return this . Collection ; } sqrt
Distance : 13

163
Tree	{ return this . Collection ; } throws
Code	{ return this . Collection ; } throws
Distance : 13

164
Tree	{ return this . Collection ; } scope
Code	{ return this . Collection ; } scope
Distance : 13

165
Tree	{ return this . Collection ; } optimizer
Code	{ return this . Collection ; } optimizer
Distance : 13

166
Tree	{ return this . Collection ; } simpleMethod
Code	{ return this . Collection ; } simpleMethod
Distance : 13

167
Tree	{ return this . Collection ; } isBlock
Code	{ return this . Collection ; } isBlock
Distance : 13

168
Tree	{ return this . Collection ; } getArgumentMatcherStorage
Code	{ return this . Collection ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Collection ; } abs
Code	{ return this . Collection ; } abs
Distance : 13

170
Tree	{ return this . Collection ; } alpha
Code	{ return this . Collection ; } alpha
Distance : 13

171
Tree	{ return this . Collection ; } TestUtilities
Code	{ return this . Collection ; } TestUtilities
Distance : 13

172
Tree	{ return this . Collection ; } if
Code	{ return this . Collection ; } if
Distance : 13

173
Tree	{ return this . Collection ; } pattern
Code	{ return this . Collection ; } pattern
Distance : 13

174
Tree	{ return this . Collection ; } String
Code	{ return this . Collection ; } String
Distance : 13

175
Tree	{ return this . Collection ; } dataset
Code	{ return this . Collection ; } dataset
Distance : 13

176
Tree	{ return this . Collection ; } public
Code	{ return this . Collection ; } public
Distance : 13

177
Tree	{ return this . Collection ; } getMessage
Code	{ return this . Collection ; } getMessage
Distance : 13

178
Tree	{ return this . Collection ; } >
Code	{ return this . Collection ; } >
Distance : 13

179
Tree	{ return this . Collection ; } getChronology
Code	{ return this . Collection ; } getChronology
Distance : 13

180
Tree	{ return this . Collection ; } Collection
Code	{ return this . Collection ; } Collection
Distance : 13

181
Tree	{ return this . Collection ; } =
Code	{ return this . Collection ; } =
Distance : 13

182
Tree	{ return this . Collection ; } new
Code	{ return this . Collection ; } new
Distance : 13

183
Tree	{ return this . Collection ; } ()
Code	{ return this . Collection ; } ()
Distance : 13

184
Tree	{ return this . Collection ; } ,
Code	{ return this . Collection ; } ,
Distance : 13

185
Tree	{ return this . Collection ; } {
Code	{ return this . Collection ; } {
Distance : 13

186
Tree	{ return this . Collection ; } StrBuilder
Code	{ return this . Collection ; } StrBuilder
Distance : 13

187
Tree	{ return this . Collection ; } )
Code	{ return this . Collection ; } )
Distance : 13

188
Tree	{ return this . Collection ; } <s>
Code	{ return this . Collection ; } <s>
Distance : 13

189
Tree	{ return this . Collection ; } {
Code	{ return this . Collection ; } {
Distance : 13

190
Tree	{ return this . Collection ; } <blank>
Code	{ return this . Collection ; } <blank>
Distance : 13

191
Tree	{ return this . Collection ; } ;
Code	{ return this . Collection ; } ;
Distance : 13

192
Tree	{ return this . Collection ; } (
Code	{ return this . Collection ; } (
Distance : 13

193
Tree	{ return this . Collection ; } .
Code	{ return this . Collection ; } .
Distance : 13

194
Tree	{ return this . Collection ; } }
Code	{ return this . Collection ; } }
Distance : 13

195
Tree	{ return this . Collection ; } STRING_CONSTANT
Code	{ return this . Collection ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 89
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnMap () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyMap () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 7

1
Tree	{ return this . DateTimeParser ; }
Code	{ return this . DateTimeParser ; }
Distance : 3

2
Tree	{ return this . inputCharset ; }
Code	{ return this . inputCharset ; }
Distance : 3

3
Tree	{ return this . definingCalendar ; }
Code	{ return this . definingCalendar ; }
Distance : 3

4
Tree	{ return this . iParser ; }
Code	{ return this . iParser ; }
Distance : 3

5
Tree	{ return this . calendar ; }
Code	{ return this . calendar ; }
Distance : 3

6
Tree	{ return this . backgroundPaint ; }
Code	{ return this . backgroundPaint ; }
Distance : 3

7
Tree	{ return this . returnTypeGenericMetadata ; }
Code	{ return this . returnTypeGenericMetadata ; }
Distance : 3

8
Tree	{ return this . period ; }
Code	{ return this . period ; }
Distance : 3

9
Tree	{ return this . categoryMargin ; }
Code	{ return this . categoryMargin ; }
Distance : 3

10
Tree	{ return this . sourceMapCache ; }
Code	{ return this . sourceMapCache ; }
Distance : 3

11
Tree	{ return this . padding ; }
Code	{ return this . padding ; }
Distance : 3

12
Tree	{ return this . TimeSeries ; }
Code	{ return this . TimeSeries ; }
Distance : 3

13
Tree	{ return this . seconds ; }
Code	{ return this . seconds ; }
Distance : 3

14
Tree	{ return this . matchers ; }
Code	{ return this . matchers ; }
Distance : 3

15
Tree	{ return this . insets ; }
Code	{ return this . insets ; }
Distance : 3

16
Tree	{ return this . what ; }
Code	{ return this . what ; }
Distance : 3

17
Tree	{ return this . verificationMode ; }
Code	{ return this . verificationMode ; }
Distance : 3

18
Tree	{ return this . cause ; }
Code	{ return this . cause ; }
Distance : 3

19
Tree	{ return this . sectionOutlineStroke ; }
Code	{ return this . sectionOutlineStroke ; }
Distance : 3

20
Tree	{ return this . newValues ; }
Code	{ return this . newValues ; }
Distance : 3

21
Tree	{ return this . categoryLabelURLs ; }
Code	{ return this . categoryLabelURLs ; }
Distance : 3

22
Tree	{ return this . formatPattern ; }
Code	{ return this . formatPattern ; }
Distance : 3

23
Tree	{ return this . RemoveUnusedVars ; }
Code	{ return this . RemoveUnusedVars ; }
Distance : 3

24
Tree	{ return this . parser ; }
Code	{ return this . parser ; }
Distance : 3

25
Tree	{ return this . GitContributionsProvider ; }
Code	{ return this . GitContributionsProvider ; }
Distance : 3

26
Tree	{ return this . getOptions ; }
Code	{ return this . getOptions ; }
Distance : 3

27
Tree	{ return this . NotNull.NOT_NULL ; }
Code	{ return this . NotNull.NOT_NULL ; }
Distance : 3

28
Tree	{ return this . parsePatterns ; }
Code	{ return this . parsePatterns ; }
Distance : 3

29
Tree	{ return this . years ; }
Code	{ return this . years ; }
Distance : 3

30
Tree	{ return this . METHOD_NAME ; }
Code	{ return this . METHOD_NAME ; }
Distance : 3

31
Tree	{ return this . getMockSettings ; }
Code	{ return this . getMockSettings ; }
Distance : 3

32
Tree	{ return this . invocationContainerImpl ; }
Code	{ return this . invocationContainerImpl ; }
Distance : 3

33
Tree	{ return this . join ; }
Code	{ return this . join ; }
Distance : 3

34
Tree	{ return this . Validate ; }
Code	{ return this . Validate ; }
Distance : 3

35
Tree	{ return this . MULTI_LINE_STYLE ; }
Code	{ return this . MULTI_LINE_STYLE ; }
Distance : 3

36
Tree	{ return this . parameterTypes ; }
Code	{ return this . parameterTypes ; }
Distance : 3

37
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 7

38
Tree	{ return this . mocksToBeVerifiedStrictly ; }
Code	{ return this . mocksToBeVerifiedStrictly ; }
Distance : 3

39
Tree	{ return this . dimension1 ; }
Code	{ return this . dimension1 ; }
Distance : 3

40
Tree	{ return this . EXTERNS ; }
Code	{ return this . EXTERNS ; }
Distance : 3

41
Tree	{ return this . defaultBehavior ; }
Code	{ return this . defaultBehavior ; }
Distance : 3

42
Tree	{ return this . descStr ; }
Code	{ return this . descStr ; }
Distance : 3

43
Tree	{ return this . errorManager ; }
Code	{ return this . errorManager ; }
Distance : 3

44
Tree	{ return this . stubbingCompleted ; }
Code	{ return this . stubbingCompleted ; }
Distance : 3

45
Tree	{ return this . toolTipGeneratorMap ; }
Code	{ return this . toolTipGeneratorMap ; }
Distance : 3

46
Tree	{ return this . value ; }
Code	{ return this . value ; }
Distance : 3

47
Tree	{ return this . date ; }
Code	{ return this . date ; }
Distance : 3

48
Tree	{ return this . dayOfWeek ; }
Code	{ return this . dayOfWeek ; }
Distance : 3

49
Tree	{ return this . argumentPosition ; }
Code	{ return this . argumentPosition ; }
Distance : 3

50
Tree	{ return this . MockitoMock ; }
Code	{ return this . MockitoMock ; }
Distance : 3

51
Tree	{ return this . buildMessage ; }
Code	{ return this . buildMessage ; }
Distance : 3

52
Tree	{ return this . reportAnd ; }
Code	{ return this . reportAnd ; }
Distance : 3

53
Tree	{ return this . ArgumentMatcher ; }
Code	{ return this . ArgumentMatcher ; }
Distance : 3

54
Tree	{ return this . proxy ; }
Code	{ return this . proxy ; }
Distance : 3

55
Tree	{ return this . classProvider ; }
Code	{ return this . classProvider ; }
Distance : 3

56
Tree	{ return this . notEmpty ; }
Code	{ return this . notEmpty ; }
Distance : 3

57
Tree	{ return ( reportMatcher ) returnMap ( Any.ANY ) ; }
Code	{ return ( reportMatcher ) returnMap ( Any.ANY ) ; }
Distance : 7

58
Tree	{ return this . nullToEmpty ; }
Code	{ return this . nullToEmpty ; }
Distance : 3

59
Tree	{ return this . commonTypes ; }
Code	{ return this . commonTypes ; }
Distance : 3

60
Tree	{ return this . substring ; }
Code	{ return this . substring ; }
Distance : 3

61
Tree	{ return this . mock ; }
Code	{ return this . mock ; }
Distance : 3

62
Tree	{ return this . klass ; }
Code	{ return this . klass ; }
Distance : 3

63
Tree	{ return this . dimension2 ; }
Code	{ return this . dimension2 ; }
Distance : 3

64
Tree	{ return this . TypeInferenceMode.NEITHER ; }
Code	{ return this . TypeInferenceMode.NEITHER ; }
Distance : 3

65
Tree	{ return this . initialize ; }
Code	{ return this . initialize ; }
Distance : 3

66
Tree	{ return this . handyReturnValues ; }
Code	{ return this . handyReturnValues ; }
Distance : 3

67
Tree	{ return this . prefix ; }
Code	{ return this . prefix ; }
Distance : 3

68
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 6

69
Tree	{ return this . wrappedVerification ; }
Code	{ return this . wrappedVerification ; }
Distance : 3

70
Tree	{ return this . argument ; }
Code	{ return this . argument ; }
Distance : 3

71
Tree	{ return this . noStubFunctions ; }
Code	{ return this . noStubFunctions ; }
Distance : 3

72
Tree	{ return this . ISOPeriodFormat ; }
Code	{ return this . ISOPeriodFormat ; }
Distance : 3

73
Tree	{ return this . Equals ; }
Code	{ return this . Equals ; }
Distance : 3

74
Tree	{ return this . valueFor ; }
Code	{ return this . valueFor ; }
Distance : 3

75
Tree	{ return this . contents ; }
Code	{ return this . contents ; }
Distance : 3

76
Tree	{ return this . legendArea ; }
Code	{ return this . legendArea ; }
Distance : 3

77
Tree	{ return this . incompletePaint ; }
Code	{ return this . incompletePaint ; }
Distance : 3

78
Tree	{ return this . MatcherToString ; }
Code	{ return this . MatcherToString ; }
Distance : 3

79
Tree	{ return this . chars ; }
Code	{ return this . chars ; }
Distance : 3

80
Tree	{ return this . CompositeFormat ; }
Code	{ return this . CompositeFormat ; }
Distance : 3

81
Tree	{ return this . regex ; }
Code	{ return this . regex ; }
Distance : 3

82
Tree	{ return this . getAllValues ; }
Code	{ return this . getAllValues ; }
Distance : 3

83
Tree	{ return this . preserveClosurePrimitives ; }
Code	{ return this . preserveClosurePrimitives ; }
Distance : 3

84
Tree	{ return ( T ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( T ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

85
Tree	{ return this . Before ; }
Code	{ return this . Before ; }
Distance : 3

86
Tree	{ return this . atLeastOnceMode ; }
Code	{ return this . atLeastOnceMode ; }
Distance : 3

87
Tree	{ return this . name ; }
Code	{ return this . name ; }
Distance : 3

88
Tree	{ return this . FAILED_EVALUATION_MESSAGE ; }
Code	{ return this . FAILED_EVALUATION_MESSAGE ; }
Distance : 3

89
Tree	{ return this . crosshair ; }
Code	{ return this . crosshair ; }
Distance : 3

90
Tree	{ return this . MockUtil ; }
Code	{ return this . MockUtil ; }
Distance : 3

91
Tree	{ return this . MOCKING_PROGRESS ; }
Code	{ return this . MOCKING_PROGRESS ; }
Distance : 3

92
Tree	{ return this . map ; }
Code	{ return this . map ; }
Distance : 3

93
Tree	{ return this . getMillisType ; }
Code	{ return this . getMillisType ; }
Distance : 3

94
Tree	{ return this . expectedCode ; }
Code	{ return this . expectedCode ; }
Distance : 3

95
Tree	{ return this . MockitoConfiguration ; }
Code	{ return this . MockitoConfiguration ; }
Distance : 3

96
Tree	{ return this . argumentsToMatchers ; }
Code	{ return this . argumentsToMatchers ; }
Distance : 3

97
Tree	{ return this . anchor ; }
Code	{ return this . anchor ; }
Distance : 3

98
Tree	{ return this . defaultAnswer ; }
Code	{ return this . defaultAnswer ; }
Distance : 3

99
Tree	{ return this . setUp ; }
Code	{ return this . setUp ; }
Distance : 3

100
Tree	{ return this . getDateTimeInstance ; }
Code	{ return this . getDateTimeInstance ; }
Distance : 3

101
Tree	{ return this . MutableDateTime ; }
Code	{ return this . MutableDateTime ; }
Distance : 3

102
Tree	{ return this . assign ; }
Code	{ return this . assign ; }
Distance : 3

103
Tree	{ return ( T ) returnMap ( Any.ANY ) ; }
Code	{ return ( T ) returnMap ( Any.ANY ) ; }
Distance : 7

104
Tree	{ return this . arguments ; }
Code	{ return this . arguments ; }
Distance : 3

105
Tree	{ return this . externs ; }
Code	{ return this . externs ; }
Distance : 3

106
Tree	{ return this . itemLabelGeneratorMap ; }
Code	{ return this . itemLabelGeneratorMap ; }
Distance : 3

107
Tree	{ return this . pattern ; }
Code	{ return this . pattern ; }
Distance : 3

108
Tree	{ return this . text ; }
Code	{ return this . text ; }
Distance : 3

109
Tree	{ return this . LINE_JOINER ; }
Code	{ return this . LINE_JOINER ; }
Distance : 3

110
Tree	{ return this . Foo ; }
Code	{ return this . Foo ; }
Distance : 3

111
Tree	{ return this . superMethod ; }
Code	{ return this . superMethod ; }
Distance : 3

112
Tree	{ return this . getArgumentMatcherStorage ; }
Code	{ return this . getArgumentMatcherStorage ; }
Distance : 3

113
Tree	{ return this . stubber ; }
Code	{ return this . stubber ; }
Distance : 3

114
Tree	{ return this . stubbingStarted ; }
Code	{ return this . stubbingStarted ; }
Distance : 3

115
Tree	{ return this . delegatedInstance ; }
Code	{ return this . delegatedInstance ; }
Distance : 3

116
Tree	{ return this . typeVariable ; }
Code	{ return this . typeVariable ; }
Distance : 3

117
Tree	{ return this . domainCrosshairStroke ; }
Code	{ return this . domainCrosshairStroke ; }
Distance : 3

118
Tree	{ return this . gap ; }
Code	{ return this . gap ; }
Distance : 3

119
Tree	{ return this . Any.ANY ; }
Code	{ return this . Any.ANY ; }
Distance : 3

120
Tree	{ return this . LanguageMode.ECMASCRIPT_2015 ; }
Code	{ return this . LanguageMode.ECMASCRIPT_2015 ; }
Distance : 3

121
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 7

122
Tree	{ return this . orderedVars ; }
Code	{ return this . orderedVars ; }
Distance : 3

123
Tree	{ return this . mode ; }
Code	{ return this . mode ; }
Distance : 3

124
Tree	{ return this . RETURNS_DEFAULTS ; }
Code	{ return this . RETURNS_DEFAULTS ; }
Distance : 3

125
Tree	{ return this . object ; }
Code	{ return this . object ; }
Distance : 3

126
Tree	{ return this . allowed ; }
Code	{ return this . allowed ; }
Distance : 3

127
Tree	{ return this . mockSettings ; }
Code	{ return this . mockSettings ; }
Distance : 3

128
Tree	{ return this . classToMock ; }
Code	{ return this . classToMock ; }
Distance : 3

129
Tree	{ return this . matcher ; }
Code	{ return this . matcher ; }
Distance : 3

130
Tree	{ return this . label ; }
Code	{ return this . label ; }
Distance : 3

131
Tree	{ return this . reportMatcher ; }
Code	{ return this . reportMatcher ; }
Distance : 3

132
Tree	{ return this . capturingMatcher ; }
Code	{ return this . capturingMatcher ; }
Distance : 3

133
Tree	{ return this . chronology ; }
Code	{ return this . chronology ; }
Distance : 3

134
Tree	{ return this . languageMode ; }
Code	{ return this . languageMode ; }
Distance : 3

135
Tree	{ return this . zFormat ; }
Code	{ return this . zFormat ; }
Distance : 3

136
Tree	{ return this . def ; }
Code	{ return this . def ; }
Distance : 3

137
Tree	{ return this . legendLine ; }
Code	{ return this . legendLine ; }
Distance : 3

138
Tree	{ return this . answer ; }
Code	{ return this . answer ; }
Distance : 3

139
Tree	{ return this . lines ; }
Code	{ return this . lines ; }
Distance : 3

140
Tree	{ return this . namespace ; }
Code	{ return this . namespace ; }
Distance : 3

141
Tree	{ return this . MockitoCore ; }
Code	{ return this . MockitoCore ; }
Distance : 3

142
Tree	{ return this . millis ; }
Code	{ return this . millis ; }
Distance : 3

143
Tree	{ return this . duration ; }
Code	{ return this . duration ; }
Distance : 3

144
Tree	{ return this . Charset ; }
Code	{ return this . Charset ; }
Distance : 3

145
Tree	{ return this . DateTimeParserInternalParser ; }
Code	{ return this . DateTimeParserInternalParser ; }
Distance : 3

146
Tree	{ return this . comparator ; }
Code	{ return this . comparator ; }
Distance : 3

147
Tree	{ return this . InstanceOf ; }
Code	{ return this . InstanceOf ; }
Distance : 3

148
Tree	{ return this . file ; }
Code	{ return this . file ; }
Distance : 3

149
Tree	{ return this . T ; }
Code	{ return this . T ; }
Distance : 3

150
Tree	{ return this . config ; }
Code	{ return this . config ; }
Distance : 3

151
Tree	{ return this . cache ; }
Code	{ return this . cache ; }
Distance : 3

152
Tree	{ return this . days ; }
Code	{ return this . days ; }
Distance : 3

153
Tree	{ return this . expectedFeatures ; }
Code	{ return this . expectedFeatures ; }
Distance : 3

154
Tree	{ return this . iObjectIndexTemplateKey ; }
Code	{ return this . iObjectIndexTemplateKey ; }
Distance : 3

155
Tree	{ return this . formatter ; }
Code	{ return this . formatter ; }
Distance : 3

156
Tree	{ return this . unusedStubs ; }
Code	{ return this . unusedStubs ; }
Distance : 3

157
Tree	{ return this . runner ; }
Code	{ return this . runner ; }
Distance : 3

158
Tree	{ return this . subLabelPaint ; }
Code	{ return this . subLabelPaint ; }
Distance : 3

159
Tree	{ return this . maxStep ; }
Code	{ return this . maxStep ; }
Distance : 3

160
Tree	{ return this . DateTimeFieldType ; }
Code	{ return this . DateTimeFieldType ; }
Distance : 3

161
Tree	{ return this . mockRef ; }
Code	{ return this . mockRef ; }
Distance : 3

162
Tree	{ return this . area ; }
Code	{ return this . area ; }
Distance : 3

163
Tree	{ return this . suffix ; }
Code	{ return this . suffix ; }
Distance : 3

164
Tree	{ return this . returnType ; }
Code	{ return this . returnType ; }
Distance : 3

165
Tree	{ return this . of ; }
Code	{ return this . of ; }
Distance : 3

166
Tree	{ return this . interval ; }
Code	{ return this . interval ; }
Distance : 3

167
Tree	{ return this . parseMutableDateTime ; }
Code	{ return this . parseMutableDateTime ; }
Distance : 3

168
Tree	{ return this . googModule ; }
Code	{ return this . googModule ; }
Distance : 3

169
Tree	{ return this . args ; }
Code	{ return this . args ; }
Distance : 3

170
Tree	{ return this . HandyReturnValues ; }
Code	{ return this . HandyReturnValues ; }
Distance : 3

171
Tree	{ return this . USING_GLOBAL_CONFIG ; }
Code	{ return this . USING_GLOBAL_CONFIG ; }
Distance : 3

172
Tree	{ return this . instance ; }
Code	{ return this . instance ; }
Distance : 3

173
Tree	{ return this . getArgument ; }
Code	{ return this . getArgument ; }
Distance : 3

174
Tree	{ return this . position ; }
Code	{ return this . position ; }
Distance : 3

175
Tree	{ return this . ArgumentsProcessor ; }
Code	{ return this . ArgumentsProcessor ; }
Distance : 3

176
Tree	{ return this . nSteps ; }
Code	{ return this . nSteps ; }
Distance : 3

177
Tree	{ return this . reportOngoingStubbing ; }
Code	{ return this . reportOngoingStubbing ; }
Distance : 3

178
Tree	{ return this . lowerMargin ; }
Code	{ return this . lowerMargin ; }
Distance : 3

179
Tree	{ return this . MockSettingsImpl ; }
Code	{ return this . MockSettingsImpl ; }
Distance : 3

180
Tree	{ return this . returnZero ; }
Code	{ return this . returnZero ; }
Distance : 3

181
Tree	{ return this . doAnswer ; }
Code	{ return this . doAnswer ; }
Distance : 3

182
Tree	{ return this . ImageMapUtils ; }
Code	{ return this . ImageMapUtils ; }
Distance : 3

183
Tree	{ return this . parseDateTime ; }
Code	{ return this . parseDateTime ; }
Distance : 3

184
Tree	{ return this . font ; }
Code	{ return this . font ; }
Distance : 3

185
Tree	{ return this . locale ; }
Code	{ return this . locale ; }
Distance : 3

186
Tree	{ return this . MOCKITO_CORE ; }
Code	{ return this . MOCKITO_CORE ; }
Distance : 3

187
Tree	{ return this . returnFor ; }
Code	{ return this . returnFor ; }
Distance : 3

188
Tree	{ return this . iValues ; }
Code	{ return this . iValues ; }
Distance : 3

189
Tree	{ return this . toolTipGenerator ; }
Code	{ return this . toolTipGenerator ; }
Distance : 3

190
Tree	{ return this . dayOfYear ; }
Code	{ return this . dayOfYear ; }
Distance : 3

191
Tree	{ super ( argumentsToMatchers ) ; returnMap ( Any.ANY ) . returnMap () ; }
Code	{ super ( argumentsToMatchers ) ; returnMap ( Any.ANY ) . returnMap () ; }
Distance : 11

192
Tree	{ return ( mockSettings ) reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return ( mockSettings ) reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 9

193
Tree	{ return ( Validate ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( Validate ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

194
Tree	{ return ( area ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( area ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

195
Tree	{ return ( reportMatcher ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( reportMatcher ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

196
Tree	{ return ( setValues ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( setValues ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

197
Tree	{ super ( appendable ) ; returnMap ( Any.ANY ) . returnMap () ; }
Code	{ super ( appendable ) ; returnMap ( Any.ANY ) . returnMap () ; }
Distance : 11

198
Tree	{ super ( inFunction ) ; returnMap ( Any.ANY ) . returnMap () ; }
Code	{ super ( inFunction ) ; returnMap ( Any.ANY ) . returnMap () ; }
Distance : 11

199
Tree	{ return ( getArgument ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( getArgument ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

========================================================================


========================================================================
Example Number: 90
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnMap () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Map . class ) ) . returnMap () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Map})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnMap}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Map ; } invocations
Code	{ return this . Map ; } invocations
Distance : 13

2
Tree	{ return this . Map ; } values
Code	{ return this . Map ; } values
Distance : 13

3
Tree	{ return this . Map ; } setAcceptedLanguage
Code	{ return this . Map ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Map ; } clone
Code	{ return this . Map ; } clone
Distance : 13

5
Tree	{ return this . Map ; } Double
Code	{ return this . Map ; } Double
Distance : 13

6
Tree	{ return this . Map ; } PeriodType
Code	{ return this . Map ; } PeriodType
Distance : 13

7
Tree	{ return this . Map ; } <=
Code	{ return this . Map ; } <=
Distance : 13

8
Tree	{ return this . Map ; } contains
Code	{ return this . Map ; } contains
Distance : 13

9
Tree	{ return this . Map ; } a
Code	{ return this . Map ; } a
Distance : 13

10
Tree	{ return this . Map ; } protected
Code	{ return this . Map ; } protected
Distance : 13

11
Tree	{ return this . Map ; } isNormalBlock
Code	{ return this . Map ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Map ; } MutableTimePeriod
Code	{ return this . Map ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Map ; } size
Code	{ return this . Map ; } size
Distance : 13

14
Tree	{ return this . Map ; } StringBuilder
Code	{ return this . Map ; } StringBuilder
Distance : 13

15
Tree	{ return this . Map ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Map ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Map ; } traverseEs6
Code	{ return this . Map ; } traverseEs6
Distance : 13

17
Tree	{ return this . Map ; } stroke
Code	{ return this . Map ; } stroke
Distance : 13

18
Tree	{ return this . Map ; } obj
Code	{ return this . Map ; } obj
Distance : 13

19
Tree	{ return this . Map ; } s
Code	{ return this . Map ; } s
Distance : 13

20
Tree	{ return this . Map ; } returnZero
Code	{ return this . Map ; } returnZero
Distance : 13

21
Tree	{ return this . Map ; } b
Code	{ return this . Map ; } b
Distance : 13

22
Tree	{ return this . Map ; } null
Code	{ return this . Map ; } null
Distance : 13

23
Tree	{ return this . Map ; } setUp
Code	{ return this . Map ; } setUp
Distance : 13

24
Tree	{ return this . Map ; } node
Code	{ return this . Map ; } node
Distance : 13

25
Tree	{ return this . Map ; } reportCodeChange
Code	{ return this . Map ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Map ; } t
Code	{ return this . Map ; } t
Distance : 13

27
Tree	{ return this . Map ; } FastMath
Code	{ return this . Map ; } FastMath
Distance : 13

28
Tree	{ return this . Map ; } invocation
Code	{ return this . Map ; } invocation
Distance : 13

29
Tree	{ return this . Map ; } IllegalArgumentException
Code	{ return this . Map ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Map ; } expected
Code	{ return this . Map ; } expected
Distance : 13

31
Tree	{ return this . Map ; } testSame
Code	{ return this . Map ; } testSame
Distance : 13

32
Tree	{ return this . Map ; } createIllegalArgumentException
Code	{ return this . Map ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Map ; } ArrayList
Code	{ return this . Map ; } ArrayList
Distance : 13

34
Tree	{ return this . Map ; } parent
Code	{ return this . Map ; } parent
Distance : 13

35
Tree	{ return this . Map ; } LINE_JOINER
Code	{ return this . Map ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Map ; } x
Code	{ return this . Map ; } x
Distance : 13

37
Tree	{ return this . Map ; } str
Code	{ return this . Map ; } str
Distance : 13

38
Tree	{ return this . Map ; } assertThat
Code	{ return this . Map ; } assertThat
Distance : 13

39
Tree	{ return this . Map ; } getFirstChild
Code	{ return this . Map ; } getFirstChild
Distance : 13

40
Tree	{ return this . Map ; } sb
Code	{ return this . Map ; } sb
Distance : 13

41
Tree	{ return this . Map ; } externs
Code	{ return this . Map ; } externs
Distance : 13

42
Tree	{ return this . Map ; } append
Code	{ return this . Map ; } append
Distance : 13

43
Tree	{ return this . Map ; } Invocation
Code	{ return this . Map ; } Invocation
Distance : 13

44
Tree	{ return this . Map ; } equals
Code	{ return this . Map ; } equals
Distance : 13

45
Tree	{ return this . Map ; } index
Code	{ return this . Map ; } index
Distance : 13

46
Tree	{ return this . Map ; } NUMBER_CONSTANT
Code	{ return this . Map ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Map ; } Object
Code	{ return this . Map ; } Object
Distance : 13

48
Tree	{ return this . Map ; } value
Code	{ return this . Map ; } value
Distance : 13

49
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } testSame
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } testSame
Distance : 10

50
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } add
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } add
Distance : 10

51
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } parent
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } parent
Distance : 10

52
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } serialised
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } serialised
Distance : 10

54
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } y
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } y
Distance : 10

55
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } sb
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } sb
Distance : 10

56
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } scope
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } scope
Distance : 10

57
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } getFirstChild
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } throws
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } throws
Distance : 10

59
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Double
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Double
Distance : 10

60
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } <=
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } <=
Distance : 10

61
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } clone
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } clone
Distance : 10

62
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } sqrt
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } sqrt
Distance : 10

63
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } isBlock
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } isBlock
Distance : 10

64
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } returnZero
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } returnZero
Distance : 10

65
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } UnivariateFunction
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } append
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } append
Distance : 10

67
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } getInstance
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } getInstance
Distance : 10

69
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } valueOf
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 7

71
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Math
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Math
Distance : 10

72
Tree	{ return this . Map ; } field
Code	{ return this . Map ; } field
Distance : 13

73
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } wanted
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } wanted
Distance : 10

74
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } NodeUtil
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } x
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } x
Distance : 10

76
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } try
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } try
Distance : 10

77
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } fail
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } fail
Distance : 10

78
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Args
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Args
Distance : 10

79
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } List
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } List
Distance : 10

80
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } f
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } f
Distance : 10

81
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } ParamChecks
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } array
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } array
Distance : 10

83
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } <>
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } <>
Distance : 10

84
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } m
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } m
Distance : 10

85
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } boolean
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } boolean
Distance : 10

86
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } :
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } :
Distance : 10

87
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } result
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } result
Distance : 10

88
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } join
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } join
Distance : 10

89
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } paint
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } paint
Distance : 10

90
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } *
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } *
Distance : 10

91
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } type
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } type
Distance : 10

92
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } long
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } long
Distance : 10

93
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } length
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } length
Distance : 10

94
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } v
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } v
Distance : 10

95
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Integer
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } Integer
Distance : 10

96
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } root
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; } root
Distance : 10

97
Tree	{ return this . Map ; } length
Code	{ return this . Map ; } length
Distance : 13

98
Tree	{ return this . Map ; } @
Code	{ return this . Map ; } @
Distance : 13

99
Tree	{ return this . Map ; } instance
Code	{ return this . Map ; } instance
Distance : 13

100
Tree	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnMap ( Any.ANY ) . reportMatcher () ; }
Distance : 9

101
Tree	{ returnMap ( Any.ANY ) ; return continue; ; }
Code	{ returnMap ( Any.ANY ) ; return continue; ; }
Distance : 12

102
Tree	{ super ( Map ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Map ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

103
Tree	{ return ( Map ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Map ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

104
Tree	{ reportMatcher ( Any.ANY ) ; Map = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Map = Any.ANY . reportMatcher () ; }
Distance : 9

105
Tree	{ returnMap ( Any.ANY ) ; return default: ; }
Code	{ returnMap ( Any.ANY ) ; return default: ; }
Distance : 12

106
Tree	{ returnMap ( Any.ANY ) ; Map = Any.ANY . returnMap () ; }
Code	{ returnMap ( Any.ANY ) ; Map = Any.ANY . returnMap () ; }
Distance : 9

107
Tree	{ returnMap ( Any.ANY ) ; Map = Any.ANY . reportMatcher () ; }
Code	{ returnMap ( Any.ANY ) ; Map = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Map ; } else
Code	{ return this . Map ; } else
Distance : 13

109
Tree	{ return this . Map ; } static
Code	{ return this . Map ; } static
Distance : 13

110
Tree	{ return this . Map ; } mockingProgress
Code	{ return this . Map ; } mockingProgress
Distance : 13

111
Tree	{ return this . Map ; } chrono
Code	{ return this . Map ; } chrono
Distance : 13

112
Tree	{ return this . Map ; } isEmpty
Code	{ return this . Map ; } isEmpty
Distance : 13

113
Tree	{ return this . Map ; } return;
Code	{ return this . Map ; } return;
Distance : 13

114
Tree	{ return this . Map ; } js
Code	{ return this . Map ; } js
Distance : 13

115
Tree	{ return this . Map ; } StrBuilder
Code	{ return this . Map ; } StrBuilder
Distance : 13

116
Tree	{ return this . Map ; } JSType
Code	{ return this . Map ; } JSType
Distance : 13

117
Tree	{ return this . Map ; } char
Code	{ return this . Map ; } char
Distance : 13

118
Tree	{ return this . Map ; } instant
Code	{ return this . Map ; } instant
Distance : 13

119
Tree	{ return this . Map ; } dataset
Code	{ return this . Map ; } dataset
Distance : 13

120
Tree	{ return this . Map ; } abs
Code	{ return this . Map ; } abs
Distance : 13

121
Tree	{ return ( Map ) returnMap ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Map ) returnMap ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Map ; } matcher
Code	{ return this . Map ; } matcher
Distance : 13

123
Tree	{ returnMap ( Any.ANY ) ; return super(); ; }
Code	{ returnMap ( Any.ANY ) ; return super(); ; }
Distance : 12

124
Tree	{ returnMap ( Any.ANY ) ; return return; ; }
Code	{ returnMap ( Any.ANY ) ; return return; ; }
Distance : 12

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Map ; } getField
Code	{ return this . Map ; } getField
Distance : 13

127
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

128
Tree	{ return this . Map ; }
Code	{ return this . Map ; }
Distance : 12

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

131
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

132
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

133
Tree	{ returnMap ( Any.ANY ) ; return null ; }
Code	{ returnMap ( Any.ANY ) ; return null ; }
Distance : 12

134
Tree	{ return ( Map ) returnMap ( Any.ANY ) ; }
Code	{ return ( Map ) returnMap ( Any.ANY ) ; }
Distance : 10

135
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) ; }
Code	{ super ( Map ) ; returnMap ( Any.ANY ) ; }
Distance : 12

136
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; }
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . returnMap () ; }
Distance : 9

137
Tree	{ return ( Map ) returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return ( Map ) returnMap ( Any.ANY ) . returnMap () ; }
Distance : 8

138
Tree	{ return returnMap ( Any.ANY ) . returnMap () ; }
Code	{ return returnMap ( Any.ANY ) . returnMap () ; }
Distance : 8

139
Tree	{ return ( Map ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Map ) reportMatcher ( Any.ANY ) ; }
Distance : 10

140
Tree	{ returnMap ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnMap ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

141
Tree	{ super ( Map ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Map ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

142
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

143
Tree	{ super ( Map ) ; reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ super ( Map ) ; reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 9

144
Tree	{ return ( Map ) reportMatcher ( Any.ANY ) . returnMap () ; }
Code	{ return ( Map ) reportMatcher ( Any.ANY ) . returnMap () ; }
Distance : 8

145
Tree	{ reportMatcher ( Any.ANY ) ; Map = Any.ANY . returnMap () ; }
Code	{ reportMatcher ( Any.ANY ) ; Map = Any.ANY . returnMap () ; }
Distance : 8

146
Tree	{ super ( Map ) ; returnMap ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Map ) ; returnMap ( Any.ANY ) . reportMatcher () ; }
Distance : 10

147
Tree	{ return this . Map ; } reportMatcher
Code	{ return this . Map ; } reportMatcher
Distance : 13

148
Tree	{ returnMap ( Any.ANY ) ; return break; ; }
Code	{ returnMap ( Any.ANY ) ; return break; ; }
Distance : 12

149
Tree	{ return this . Map ; } valueOf
Code	{ return this . Map ; } valueOf
Distance : 13

150
Tree	{ return this . Map ; } this
Code	{ return this . Map ; } this
Distance : 13

151
Tree	{ return this . Map ; } return
Code	{ return this . Map ; } return
Distance : 13

152
Tree	{ return this . Map ; } final
Code	{ return this . Map ; } final
Distance : 13

153
Tree	{ return this . Map ; } <
Code	{ return this . Map ; } <
Distance : 13

154
Tree	{ return this . Map ; } name
Code	{ return this . Map ; } name
Distance : 13

155
Tree	{ return this . Map ; } solver
Code	{ return this . Map ; } solver
Distance : 13

156
Tree	{ return this . Map ; } y
Code	{ return this . Map ; } y
Distance : 13

157
Tree	{ return this . Map ; } PlotChangeEvent
Code	{ return this . Map ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Map ; } d
Code	{ return this . Map ; } d
Distance : 13

159
Tree	{ return this . Map ; } getParent
Code	{ return this . Map ; } getParent
Distance : 13

160
Tree	{ return this . Map ; } for
Code	{ return this . Map ; } for
Distance : 13

161
Tree	{ return this . Map ; } UnivariateFunction
Code	{ return this . Map ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Map ; } sqrt
Code	{ return this . Map ; } sqrt
Distance : 13

163
Tree	{ return this . Map ; } throws
Code	{ return this . Map ; } throws
Distance : 13

164
Tree	{ return this . Map ; } scope
Code	{ return this . Map ; } scope
Distance : 13

165
Tree	{ return this . Map ; } optimizer
Code	{ return this . Map ; } optimizer
Distance : 13

166
Tree	{ return this . Map ; } simpleMethod
Code	{ return this . Map ; } simpleMethod
Distance : 13

167
Tree	{ return this . Map ; } isBlock
Code	{ return this . Map ; } isBlock
Distance : 13

168
Tree	{ return this . Map ; } getArgumentMatcherStorage
Code	{ return this . Map ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Map ; } {}
Code	{ return this . Map ; } {}
Distance : 13

170
Tree	{ return this . Map ; } alpha
Code	{ return this . Map ; } alpha
Distance : 13

171
Tree	{ return this . Map ; } TestUtilities
Code	{ return this . Map ; } TestUtilities
Distance : 13

172
Tree	{ return this . Map ; } if
Code	{ return this . Map ; } if
Distance : 13

173
Tree	{ return this . Map ; } pattern
Code	{ return this . Map ; } pattern
Distance : 13

174
Tree	{ return this . Map ; } String
Code	{ return this . Map ; } String
Distance : 13

175
Tree	{ return this . Map ; } stream
Code	{ return this . Map ; } stream
Distance : 13

176
Tree	{ return this . Map ; } public
Code	{ return this . Map ; } public
Distance : 13

177
Tree	{ return this . Map ; } getMessage
Code	{ return this . Map ; } getMessage
Distance : 13

178
Tree	{ return this . Map ; } >
Code	{ return this . Map ; } >
Distance : 13

179
Tree	{ return this . Map ; } getChronology
Code	{ return this . Map ; } getChronology
Distance : 13

180
Tree	{ return this . Map ; } Collection
Code	{ return this . Map ; } Collection
Distance : 13

181
Tree	{ return this . Map ; } =
Code	{ return this . Map ; } =
Distance : 13

182
Tree	{ return this . Map ; } new
Code	{ return this . Map ; } new
Distance : 13

183
Tree	{ return this . Map ; } ()
Code	{ return this . Map ; } ()
Distance : 13

184
Tree	{ return this . Map ; } ,
Code	{ return this . Map ; } ,
Distance : 13

185
Tree	{ return this . Map ; } {
Code	{ return this . Map ; } {
Distance : 13

186
Tree	{ return this . Map ; } get
Code	{ return this . Map ; } get
Distance : 13

187
Tree	{ return this . Map ; } )
Code	{ return this . Map ; } )
Distance : 13

188
Tree	{ return this . Map ; } <s>
Code	{ return this . Map ; } <s>
Distance : 13

189
Tree	{ return this . Map ; } {
Code	{ return this . Map ; } {
Distance : 13

190
Tree	{ return this . Map ; } <blank>
Code	{ return this . Map ; } <blank>
Distance : 13

191
Tree	{ return this . Map ; } ;
Code	{ return this . Map ; } ;
Distance : 13

192
Tree	{ return this . Map ; } (
Code	{ return this . Map ; } (
Distance : 13

193
Tree	{ return this . Map ; } .
Code	{ return this . Map ; } .
Distance : 13

194
Tree	{ return this . Map ; } }
Code	{ return this . Map ; } }
Distance : 13

195
Tree	{ return this . Map ; } STRING_CONSTANT
Code	{ return this . Map ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 91
Parent Code is: 
{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anySet () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=Set})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anySet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher () ; } LINE_JOINER
Code	{ return reportMatcher () ; } LINE_JOINER
Distance : 2

1
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Code	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Distance : 8

2
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getMessage
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getMessage
Distance : 8

3
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } else
Code	{ reportMatcher ( Any.ANY ) ; return null ; } else
Distance : 8

4
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } values
Code	{ reportMatcher ( Any.ANY ) ; return null ; } values
Distance : 8

5
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Distance : 8

6
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Distance : 8

7
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return
Distance : 8

8
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } p
Code	{ reportMatcher ( Any.ANY ) ; return null ; } p
Distance : 8

9
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Distance : 8

10
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Distance : 8

11
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Distance : 8

12
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Distance : 8

13
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } data
Code	{ reportMatcher ( Any.ANY ) ; return null ; } data
Distance : 8

14
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Code	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Distance : 8

15
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } String
Code	{ reportMatcher ( Any.ANY ) ; return null ; } String
Distance : 8

16
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } e
Code	{ reportMatcher ( Any.ANY ) ; return null ; } e
Distance : 8

17
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } n
Code	{ reportMatcher ( Any.ANY ) ; return null ; } n
Distance : 8

18
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } field
Code	{ reportMatcher ( Any.ANY ) ; return null ; } field
Distance : 8

19
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } t
Code	{ reportMatcher ( Any.ANY ) ; return null ; } t
Distance : 8

20
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } name
Code	{ reportMatcher ( Any.ANY ) ; return null ; } name
Distance : 8

21
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } add
Code	{ reportMatcher ( Any.ANY ) ; return null ; } add
Distance : 8

22
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Distance : 8

23
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Distance : 8

24
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Code	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Distance : 8

25
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } str
Code	{ reportMatcher ( Any.ANY ) ; return null ; } str
Distance : 8

26
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Distance : 8

27
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } [
Code	{ reportMatcher ( Any.ANY ) ; return null ; } [
Distance : 8

28
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Distance : 8

29
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Preconditions
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Preconditions
Distance : 8

30
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Distance : 8

31
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } double
Distance : 8

32
Tree	{ return reportMatcher () ; } void
Code	{ return reportMatcher () ; } void
Distance : 2

33
Tree	{ return reportMatcher () ; } []
Code	{ return reportMatcher () ; } []
Distance : 2

34
Tree	{ return reportMatcher () ; } nullNotPermitted
Code	{ return reportMatcher () ; } nullNotPermitted
Distance : 2

35
Tree	{ return reportMatcher () ; } checkState
Code	{ return reportMatcher () ; } checkState
Distance : 2

36
Tree	{ return reportMatcher () ; } double
Code	{ return reportMatcher () ; } double
Distance : 2

37
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Distance : 8

38
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } root
Code	{ reportMatcher ( Any.ANY ) ; return null ; } root
Distance : 8

39
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Distance : 8

40
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Distance : 8

41
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } new
Code	{ reportMatcher ( Any.ANY ) ; return null ; } new
Distance : 8

42
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } (
Code	{ reportMatcher ( Any.ANY ) ; return null ; } (
Distance : 8

43
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Distance : 8

44
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

45
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Distance : 8

46
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } final
Code	{ reportMatcher ( Any.ANY ) ; return null ; } final
Distance : 8

47
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } this
Code	{ reportMatcher ( Any.ANY ) ; return null ; } this
Distance : 8

48
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <
Distance : 8

49
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } if
Code	{ reportMatcher ( Any.ANY ) ; return null ; } if
Distance : 8

50
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } value
Code	{ reportMatcher ( Any.ANY ) ; return null ; } value
Distance : 8

51
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } i
Code	{ reportMatcher ( Any.ANY ) ; return null ; } i
Distance : 8

52
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } T
Code	{ reportMatcher ( Any.ANY ) ; return null ; } T
Distance : 8

53
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } &&
Code	{ reportMatcher ( Any.ANY ) ; return null ; } &&
Distance : 8

54
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } false
Code	{ reportMatcher ( Any.ANY ) ; return null ; } false
Distance : 8

55
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } int
Code	{ reportMatcher ( Any.ANY ) ; return null ; } int
Distance : 8

56
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } @
Code	{ reportMatcher ( Any.ANY ) ; return null ; } @
Distance : 8

57
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } test
Distance : 8

58
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Distance : 8

59
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } super
Code	{ reportMatcher ( Any.ANY ) ; return null ; } super
Distance : 8

60
Tree	{ return reportMatcher () ; } ==
Code	{ return reportMatcher () ; } ==
Distance : 2

61
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } -
Code	{ reportMatcher ( Any.ANY ) ; return null ; } -
Distance : 8

62
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } }
Code	{ reportMatcher ( Any.ANY ) ; return null ; } }
Distance : 8

63
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Distance : 8

64
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Distance : 8

65
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Code	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Distance : 8

66
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } source
Code	{ reportMatcher ( Any.ANY ) ; return null ; } source
Distance : 8

67
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 8

68
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } StringBuilder
Code	{ reportMatcher ( Any.ANY ) ; return null ; } StringBuilder
Distance : 8

69
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mockingProgress
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mockingProgress
Distance : 8

70
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return;
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return;
Distance : 8

71
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 8

72
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 8

73
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 8

74
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isBlock
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isBlock
Distance : 8

75
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } returnZero
Code	{ reportMatcher ( Any.ANY ) ; return null ; } returnZero
Distance : 8

76
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } UnivariateFunction
Code	{ reportMatcher ( Any.ANY ) ; return null ; } UnivariateFunction
Distance : 8

77
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } append
Code	{ reportMatcher ( Any.ANY ) ; return null ; } append
Distance : 8

78
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Distance : 8

79
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Distance : 8

80
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Distance : 8

81
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Distance : 8

82
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } simpleMethod
Code	{ reportMatcher ( Any.ANY ) ; return null ; } simpleMethod
Distance : 8

83
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getArgumentMatcherStorage
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getArgumentMatcherStorage
Distance : 8

84
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } alpha
Code	{ reportMatcher ( Any.ANY ) ; return null ; } alpha
Distance : 8

85
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } chrono
Code	{ reportMatcher ( Any.ANY ) ; return null ; } chrono
Distance : 8

86
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Code	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Distance : 8

87
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Code	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Distance : 8

88
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Distance : 8

89
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } js
Code	{ reportMatcher ( Any.ANY ) ; return null ; } js
Distance : 8

90
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Distance : 8

91
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } =
Code	{ reportMatcher ( Any.ANY ) ; return null ; } =
Distance : 8

92
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Code	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Distance : 8

93
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Distance : 8

94
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Distance : 8

95
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

96
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Distance : 8

97
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } )
Code	{ reportMatcher ( Any.ANY ) ; return null ; } )
Distance : 8

98
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } .
Code	{ reportMatcher ( Any.ANY ) ; return null ; } .
Distance : 8

99
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } out
Code	{ reportMatcher ( Any.ANY ) ; return null ; } out
Distance : 8

100
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Code	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Distance : 8

101
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } m
Code	{ reportMatcher ( Any.ANY ) ; return null ; } m
Distance : 8

102
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Code	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Distance : 8

103
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } static
Code	{ reportMatcher ( Any.ANY ) ; return null ; } static
Distance : 8

104
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } setAcceptedLanguage
Code	{ reportMatcher ( Any.ANY ) ; return null ; } setAcceptedLanguage
Distance : 8

105
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Distance : 8

106
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Distance : 8

107
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } char
Code	{ reportMatcher ( Any.ANY ) ; return null ; } char
Distance : 8

108
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } JSType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } JSType
Distance : 8

109
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } get
Code	{ reportMatcher ( Any.ANY ) ; return null ; } get
Distance : 8

110
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isEmpty
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isEmpty
Distance : 8

111
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Distance : 8

112
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } b
Code	{ reportMatcher ( Any.ANY ) ; return null ; } b
Distance : 8

113
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } contains
Code	{ reportMatcher ( Any.ANY ) ; return null ; } contains
Distance : 8

114
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isNormalBlock
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isNormalBlock
Distance : 8

115
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } public
Code	{ reportMatcher ( Any.ANY ) ; return null ; } public
Distance : 8

116
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } >
Code	{ reportMatcher ( Any.ANY ) ; return null ; } >
Distance : 8

117
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } null
Code	{ reportMatcher ( Any.ANY ) ; return null ; } null
Distance : 8

118
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } +
Code	{ reportMatcher ( Any.ANY ) ; return null ; } +
Distance : 8

119
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } x
Code	{ reportMatcher ( Any.ANY ) ; return null ; } x
Distance : 8

120
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Code	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Distance : 8

121
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Distance : 8

122
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } node
Distance : 8

123
Tree	{ return reportMatcher () ; } assertEquals
Code	{ return reportMatcher () ; } assertEquals
Distance : 2

124
Tree	{ return reportMatcher () ; } @
Code	{ return reportMatcher () ; } @
Distance : 2

125
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Distance : 8

126
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } void
Code	{ reportMatcher ( Any.ANY ) ; return null ; } void
Distance : 8

127
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Code	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Distance : 8

130
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } []
Code	{ reportMatcher ( Any.ANY ) ; return null ; } []
Distance : 8

131
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !
Distance : 8

132
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Distance : 8

133
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Distance : 8

134
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Code	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Distance : 8

135
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Distance : 8

136
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Distance : 8

137
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Distance : 8

138
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Distance : 8

139
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } c
Code	{ reportMatcher ( Any.ANY ) ; return null ; } c
Distance : 8

140
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Code	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Distance : 8

141
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Distance : 8

142
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Distance : 8

143
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } join
Code	{ reportMatcher ( Any.ANY ) ; return null ; } join
Distance : 8

144
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Code	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Distance : 8

145
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } *
Code	{ reportMatcher ( Any.ANY ) ; return null ; } *
Distance : 8

146
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } type
Code	{ reportMatcher ( Any.ANY ) ; return null ; } type
Distance : 8

147
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } class
Code	{ reportMatcher ( Any.ANY ) ; return null ; } class
Distance : 8

148
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Object
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Object
Distance : 8

149
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mock
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mock
Distance : 8

150
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Override
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Override
Distance : 8

151
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Distance : 8

152
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } long
Code	{ reportMatcher ( Any.ANY ) ; return null ; } long
Distance : 8

153
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } true
Code	{ reportMatcher ( Any.ANY ) ; return null ; } true
Distance : 8

154
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } length
Code	{ reportMatcher ( Any.ANY ) ; return null ; } length
Distance : 8

155
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Distance : 8

156
Tree	{ return ( Set ) reportMatcher () ; } double
Code	{ return ( Set ) reportMatcher () ; } double
Distance : 5

157
Tree	{ return ( Set ) reportMatcher () ; } int
Code	{ return ( Set ) reportMatcher () ; } int
Distance : 5

158
Tree	{ return ( Set ) reportMatcher () ; } false
Code	{ return ( Set ) reportMatcher () ; } false
Distance : 5

159
Tree	{ return ( Set ) reportMatcher () ; } !=
Code	{ return ( Set ) reportMatcher () ; } !=
Distance : 5

160
Tree	{ return ( Set ) reportMatcher () ; } super
Code	{ return ( Set ) reportMatcher () ; } super
Distance : 5

161
Tree	{ return ( Set ) reportMatcher () ; } mock
Code	{ return ( Set ) reportMatcher () ; } mock
Distance : 5

162
Tree	{ return ( Set ) reportMatcher () ; } Override
Code	{ return ( Set ) reportMatcher () ; } Override
Distance : 5

163
Tree	{ return ( Set ) reportMatcher () ; } public
Code	{ return ( Set ) reportMatcher () ; } public
Distance : 5

164
Tree	{ return ( Set ) reportMatcher () ; } >
Code	{ return ( Set ) reportMatcher () ; } >
Distance : 5

165
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) ; } stroke
Code	{ return ( Set ) reportMatcher ( Any.ANY ) ; } stroke
Distance : 8

166
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) ; } Double
Code	{ return ( Set ) reportMatcher ( Any.ANY ) ; } Double
Distance : 8

167
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) ; } mockingProgress
Code	{ return ( Set ) reportMatcher ( Any.ANY ) ; } mockingProgress
Distance : 8

168
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Code	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Distance : 8

169
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } s
Code	{ reportMatcher ( Any.ANY ) ; return null ; } s
Distance : 8

170
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } a
Code	{ reportMatcher ( Any.ANY ) ; return null ; } a
Distance : 8

171
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Distance : 8

172
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Code	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Distance : 8

173
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Distance : 8

174
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Distance : 8

175
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Distance : 8

176
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Code	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Distance : 8

177
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Distance : 8

178
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Distance : 8

179
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Distance : 8

180
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Distance : 8

181
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Code	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Distance : 8

182
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Distance : 8

183
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } v
Code	{ reportMatcher ( Any.ANY ) ; return null ; } v
Distance : 8

184
Tree	{ return reportMatcher () ; } !
Code	{ return reportMatcher () ; } !
Distance : 2

185
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {}
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {}
Distance : 8

186
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Distance : 8

187
Tree	{ return reportMatcher () ; } return
Code	{ return reportMatcher () ; } return
Distance : 2

188
Tree	{ return reportMatcher () ; } NUMBER_CONSTANT
Code	{ return reportMatcher () ; } NUMBER_CONSTANT
Distance : 2

189
Tree	{ return reportMatcher () ; } this
Code	{ return reportMatcher () ; } this
Distance : 2

190
Tree	{ return reportMatcher () ; } final
Code	{ return reportMatcher () ; } final
Distance : 2

191
Tree	{ return reportMatcher () ; } field
Code	{ return reportMatcher () ; } field
Distance : 2

192
Tree	{ return reportMatcher () ; } super
Code	{ return reportMatcher () ; } super
Distance : 2

193
Tree	{ return reportMatcher () ; } false
Code	{ return reportMatcher () ; } false
Distance : 2

194
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Distance : 8

195
Tree	{ return reportMatcher () ; } int
Code	{ return reportMatcher () ; } int
Distance : 2

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } for
Code	{ reportMatcher ( Any.ANY ) ; return null ; } for
Distance : 8

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Distance : 8

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } d
Code	{ reportMatcher ( Any.ANY ) ; return null ; } d
Distance : 8

199
Tree	{ return reportMatcher () ; } Test
Code	{ return reportMatcher () ; } Test
Distance : 2

========================================================================


========================================================================
Example Number: 92
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnSet () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Set . class ) ) . returnSet () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Set})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnSet}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Set ; } invocations
Code	{ return this . Set ; } invocations
Distance : 13

2
Tree	{ return this . Set ; } values
Code	{ return this . Set ; } values
Distance : 13

3
Tree	{ return this . Set ; } setAcceptedLanguage
Code	{ return this . Set ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Set ; } clone
Code	{ return this . Set ; } clone
Distance : 13

5
Tree	{ return this . Set ; } Double
Code	{ return this . Set ; } Double
Distance : 13

6
Tree	{ return this . Set ; } PeriodType
Code	{ return this . Set ; } PeriodType
Distance : 13

7
Tree	{ return this . Set ; } <=
Code	{ return this . Set ; } <=
Distance : 13

8
Tree	{ return this . Set ; } contains
Code	{ return this . Set ; } contains
Distance : 13

9
Tree	{ return this . Set ; } a
Code	{ return this . Set ; } a
Distance : 13

10
Tree	{ return this . Set ; } protected
Code	{ return this . Set ; } protected
Distance : 13

11
Tree	{ return this . Set ; } isNormalBlock
Code	{ return this . Set ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Set ; } MutableTimePeriod
Code	{ return this . Set ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Set ; } size
Code	{ return this . Set ; } size
Distance : 13

14
Tree	{ return this . Set ; } StringBuilder
Code	{ return this . Set ; } StringBuilder
Distance : 13

15
Tree	{ return this . Set ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Set ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Set ; } traverseEs6
Code	{ return this . Set ; } traverseEs6
Distance : 13

17
Tree	{ return this . Set ; } stroke
Code	{ return this . Set ; } stroke
Distance : 13

18
Tree	{ return this . Set ; } obj
Code	{ return this . Set ; } obj
Distance : 13

19
Tree	{ return this . Set ; } s
Code	{ return this . Set ; } s
Distance : 13

20
Tree	{ return this . Set ; } returnZero
Code	{ return this . Set ; } returnZero
Distance : 13

21
Tree	{ return this . Set ; } b
Code	{ return this . Set ; } b
Distance : 13

22
Tree	{ return this . Set ; } null
Code	{ return this . Set ; } null
Distance : 13

23
Tree	{ return this . Set ; } setUp
Code	{ return this . Set ; } setUp
Distance : 13

24
Tree	{ return this . Set ; } node
Code	{ return this . Set ; } node
Distance : 13

25
Tree	{ return this . Set ; } reportCodeChange
Code	{ return this . Set ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Set ; } t
Code	{ return this . Set ; } t
Distance : 13

27
Tree	{ return this . Set ; } FastMath
Code	{ return this . Set ; } FastMath
Distance : 13

28
Tree	{ return this . Set ; } invocation
Code	{ return this . Set ; } invocation
Distance : 13

29
Tree	{ return this . Set ; } IllegalArgumentException
Code	{ return this . Set ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Set ; } expected
Code	{ return this . Set ; } expected
Distance : 13

31
Tree	{ return this . Set ; } testSame
Code	{ return this . Set ; } testSame
Distance : 13

32
Tree	{ return this . Set ; } createIllegalArgumentException
Code	{ return this . Set ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Set ; } ArrayList
Code	{ return this . Set ; } ArrayList
Distance : 13

34
Tree	{ return this . Set ; } parent
Code	{ return this . Set ; } parent
Distance : 13

35
Tree	{ return this . Set ; } LINE_JOINER
Code	{ return this . Set ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Set ; } x
Code	{ return this . Set ; } x
Distance : 13

37
Tree	{ return this . Set ; } str
Code	{ return this . Set ; } str
Distance : 13

38
Tree	{ return this . Set ; } assertThat
Code	{ return this . Set ; } assertThat
Distance : 13

39
Tree	{ return this . Set ; } getFirstChild
Code	{ return this . Set ; } getFirstChild
Distance : 13

40
Tree	{ return this . Set ; } sb
Code	{ return this . Set ; } sb
Distance : 13

41
Tree	{ return this . Set ; } externs
Code	{ return this . Set ; } externs
Distance : 13

42
Tree	{ return this . Set ; } append
Code	{ return this . Set ; } append
Distance : 13

43
Tree	{ return this . Set ; } Invocation
Code	{ return this . Set ; } Invocation
Distance : 13

44
Tree	{ return this . Set ; } equals
Code	{ return this . Set ; } equals
Distance : 13

45
Tree	{ return this . Set ; } index
Code	{ return this . Set ; } index
Distance : 13

46
Tree	{ return this . Set ; } NUMBER_CONSTANT
Code	{ return this . Set ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Set ; } Object
Code	{ return this . Set ; } Object
Distance : 13

48
Tree	{ return this . Set ; } value
Code	{ return this . Set ; } value
Distance : 13

49
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } testSame
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } testSame
Distance : 10

50
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } add
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } add
Distance : 10

51
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } parent
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } parent
Distance : 10

52
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } createIllegalArgumentException
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } serialised
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } serialised
Distance : 10

54
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } y
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } y
Distance : 10

55
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } sb
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } sb
Distance : 10

56
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } scope
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } scope
Distance : 10

57
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } getFirstChild
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } throws
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } throws
Distance : 10

59
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Double
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Double
Distance : 10

60
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } <=
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } <=
Distance : 10

61
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } clone
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } clone
Distance : 10

62
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } sqrt
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } sqrt
Distance : 10

63
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } isBlock
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } isBlock
Distance : 10

64
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } returnZero
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } returnZero
Distance : 10

65
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } UnivariateFunction
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } append
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } append
Distance : 10

67
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } getInstance
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } getInstance
Distance : 10

69
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } valueOf
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } valueOf
Distance : 10

70
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

71
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Math
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Math
Distance : 10

72
Tree	{ return this . Set ; } field
Code	{ return this . Set ; } field
Distance : 13

73
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } wanted
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } wanted
Distance : 10

74
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } NodeUtil
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } x
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } x
Distance : 10

76
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } try
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } try
Distance : 10

77
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } fail
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } fail
Distance : 10

78
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Args
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Args
Distance : 10

79
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } List
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } List
Distance : 10

80
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } f
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } f
Distance : 10

81
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } ParamChecks
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } array
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } array
Distance : 10

83
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } <>
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } <>
Distance : 10

84
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } m
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } m
Distance : 10

85
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } boolean
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } boolean
Distance : 10

86
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } :
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } :
Distance : 10

87
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } result
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } result
Distance : 10

88
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } join
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } join
Distance : 10

89
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } paint
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } paint
Distance : 10

90
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } *
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } *
Distance : 10

91
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } type
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } type
Distance : 10

92
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } long
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } long
Distance : 10

93
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } length
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } length
Distance : 10

94
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } v
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } v
Distance : 10

95
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Integer
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } Integer
Distance : 10

96
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } root
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; } root
Distance : 10

97
Tree	{ return this . Set ; } length
Code	{ return this . Set ; } length
Distance : 13

98
Tree	{ return this . Set ; } @
Code	{ return this . Set ; } @
Distance : 13

99
Tree	{ return this . Set ; } instance
Code	{ return this . Set ; } instance
Distance : 13

100
Tree	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . returnSet () ; }
Code	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . returnSet () ; }
Distance : 8

101
Tree	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 7

102
Tree	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . reportMatcher () ; }
Distance : 9

103
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

104
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

105
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

106
Tree	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . returnSet () ; }
Code	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . returnSet () ; }
Distance : 8

107
Tree	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Set = Any.ANY . reportMatcher () ; }
Distance : 9

108
Tree	{ return this . Set ; } else
Code	{ return this . Set ; } else
Distance : 13

109
Tree	{ return this . Set ; } static
Code	{ return this . Set ; } static
Distance : 13

110
Tree	{ return this . Set ; } mockingProgress
Code	{ return this . Set ; } mockingProgress
Distance : 13

111
Tree	{ return this . Set ; } chrono
Code	{ return this . Set ; } chrono
Distance : 13

112
Tree	{ return this . Set ; } isEmpty
Code	{ return this . Set ; } isEmpty
Distance : 13

113
Tree	{ return this . Set ; } return;
Code	{ return this . Set ; } return;
Distance : 13

114
Tree	{ return this . Set ; } js
Code	{ return this . Set ; } js
Distance : 13

115
Tree	{ return this . Set ; } StrBuilder
Code	{ return this . Set ; } StrBuilder
Distance : 13

116
Tree	{ return this . Set ; } JSType
Code	{ return this . Set ; } JSType
Distance : 13

117
Tree	{ return this . Set ; } char
Code	{ return this . Set ; } char
Distance : 13

118
Tree	{ return this . Set ; } instant
Code	{ return this . Set ; } instant
Distance : 13

119
Tree	{ return this . Set ; } dataset
Code	{ return this . Set ; } dataset
Distance : 13

120
Tree	{ return this . Set ; } abs
Code	{ return this . Set ; } abs
Distance : 13

121
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

122
Tree	{ return this . Set ; } matcher
Code	{ return this . Set ; } matcher
Distance : 13

123
Tree	{ return ( Set ) returnSet ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Set ) returnSet ( Any.ANY ) . reportMatcher () ; }
Distance : 9

124
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

125
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

126
Tree	{ return this . Set ; } getField
Code	{ return this . Set ; } getField
Distance : 13

127
Tree	{ return this . Set ; }
Code	{ return this . Set ; }
Distance : 12

128
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 7

131
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

132
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

133
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) ; }
Distance : 10

134
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

135
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

136
Tree	{ super ( Set ) ; returnSet ( Any.ANY ) ; }
Code	{ super ( Set ) ; returnSet ( Any.ANY ) ; }
Distance : 12

137
Tree	{ return ( Set ) returnSet ( Any.ANY ) ; }
Code	{ return ( Set ) returnSet ( Any.ANY ) ; }
Distance : 10

138
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

139
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

140
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 8

141
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; }
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . returnSet () ; }
Distance : 9

142
Tree	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Set ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

143
Tree	{ super ( Set ) ; returnSet ( Any.ANY ) . returnSet () ; }
Code	{ super ( Set ) ; returnSet ( Any.ANY ) . returnSet () ; }
Distance : 9

144
Tree	{ super ( Set ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Set ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

145
Tree	{ super ( Set ) ; returnSet ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Set ) ; returnSet ( Any.ANY ) . reportMatcher () ; }
Distance : 10

146
Tree	{ return ( Set ) returnSet ( Any.ANY ) . returnSet () ; }
Code	{ return ( Set ) returnSet ( Any.ANY ) . returnSet () ; }
Distance : 8

147
Tree	{ return this . Set ; } reportMatcher
Code	{ return this . Set ; } reportMatcher
Distance : 13

148
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

149
Tree	{ return this . Set ; } valueOf
Code	{ return this . Set ; } valueOf
Distance : 13

150
Tree	{ return this . Set ; } this
Code	{ return this . Set ; } this
Distance : 13

151
Tree	{ return this . Set ; } return
Code	{ return this . Set ; } return
Distance : 13

152
Tree	{ return this . Set ; } final
Code	{ return this . Set ; } final
Distance : 13

153
Tree	{ return this . Set ; } <
Code	{ return this . Set ; } <
Distance : 13

154
Tree	{ return this . Set ; } name
Code	{ return this . Set ; } name
Distance : 13

155
Tree	{ return this . Set ; } solver
Code	{ return this . Set ; } solver
Distance : 13

156
Tree	{ return this . Set ; } y
Code	{ return this . Set ; } y
Distance : 13

157
Tree	{ return this . Set ; } PlotChangeEvent
Code	{ return this . Set ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Set ; } d
Code	{ return this . Set ; } d
Distance : 13

159
Tree	{ return this . Set ; } getParent
Code	{ return this . Set ; } getParent
Distance : 13

160
Tree	{ return this . Set ; } for
Code	{ return this . Set ; } for
Distance : 13

161
Tree	{ return this . Set ; } UnivariateFunction
Code	{ return this . Set ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Set ; } sqrt
Code	{ return this . Set ; } sqrt
Distance : 13

163
Tree	{ return this . Set ; } throws
Code	{ return this . Set ; } throws
Distance : 13

164
Tree	{ return this . Set ; } scope
Code	{ return this . Set ; } scope
Distance : 13

165
Tree	{ return this . Set ; } optimizer
Code	{ return this . Set ; } optimizer
Distance : 13

166
Tree	{ return this . Set ; } simpleMethod
Code	{ return this . Set ; } simpleMethod
Distance : 13

167
Tree	{ return this . Set ; } isBlock
Code	{ return this . Set ; } isBlock
Distance : 13

168
Tree	{ return this . Set ; } getArgumentMatcherStorage
Code	{ return this . Set ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Set ; } {}
Code	{ return this . Set ; } {}
Distance : 13

170
Tree	{ return this . Set ; } alpha
Code	{ return this . Set ; } alpha
Distance : 13

171
Tree	{ return this . Set ; } TestUtilities
Code	{ return this . Set ; } TestUtilities
Distance : 13

172
Tree	{ return this . Set ; } if
Code	{ return this . Set ; } if
Distance : 13

173
Tree	{ return this . Set ; } pattern
Code	{ return this . Set ; } pattern
Distance : 13

174
Tree	{ return this . Set ; } String
Code	{ return this . Set ; } String
Distance : 13

175
Tree	{ return this . Set ; } stream
Code	{ return this . Set ; } stream
Distance : 13

176
Tree	{ return this . Set ; } public
Code	{ return this . Set ; } public
Distance : 13

177
Tree	{ return this . Set ; } getMessage
Code	{ return this . Set ; } getMessage
Distance : 13

178
Tree	{ return this . Set ; } >
Code	{ return this . Set ; } >
Distance : 13

179
Tree	{ return this . Set ; } getChronology
Code	{ return this . Set ; } getChronology
Distance : 13

180
Tree	{ return this . Set ; } Collection
Code	{ return this . Set ; } Collection
Distance : 13

181
Tree	{ return this . Set ; } =
Code	{ return this . Set ; } =
Distance : 13

182
Tree	{ return this . Set ; } new
Code	{ return this . Set ; } new
Distance : 13

183
Tree	{ return this . Set ; } ()
Code	{ return this . Set ; } ()
Distance : 13

184
Tree	{ return this . Set ; } ,
Code	{ return this . Set ; } ,
Distance : 13

185
Tree	{ return this . Set ; } {
Code	{ return this . Set ; } {
Distance : 13

186
Tree	{ return this . Set ; } get
Code	{ return this . Set ; } get
Distance : 13

187
Tree	{ return this . Set ; } )
Code	{ return this . Set ; } )
Distance : 13

188
Tree	{ return this . Set ; } <s>
Code	{ return this . Set ; } <s>
Distance : 13

189
Tree	{ return this . Set ; } {
Code	{ return this . Set ; } {
Distance : 13

190
Tree	{ return this . Set ; } <blank>
Code	{ return this . Set ; } <blank>
Distance : 13

191
Tree	{ return this . Set ; } ;
Code	{ return this . Set ; } ;
Distance : 13

192
Tree	{ return this . Set ; } (
Code	{ return this . Set ; } (
Distance : 13

193
Tree	{ return this . Set ; } .
Code	{ return this . Set ; } .
Distance : 13

194
Tree	{ return this . Set ; } }
Code	{ return this . Set ; } }
Distance : 13

195
Tree	{ return this . Set ; } STRING_CONSTANT
Code	{ return this . Set ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 93
Parent Code is: 
{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return anyList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=List})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (802{val=anyList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 9
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher () ; } boolean
Code	{ return reportMatcher () ; } boolean
Distance : 2

1
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } index
Code	{ reportMatcher ( Any.ANY ) ; return null ; } index
Distance : 8

2
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocations
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocations
Distance : 8

3
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Code	{ reportMatcher ( Any.ANY ) ; return null ; } setUp
Distance : 8

4
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Code	{ reportMatcher ( Any.ANY ) ; return null ; } StrBuilder
Distance : 8

5
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getParent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getParent
Distance : 8

6
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } node
Distance : 8

7
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } List
Code	{ reportMatcher ( Any.ANY ) ; return null ; } List
Distance : 8

8
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Args
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Args
Distance : 8

9
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } array
Code	{ reportMatcher ( Any.ANY ) ; return null ; } array
Distance : 8

10
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <>
Distance : 8

11
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Distance : 8

12
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Code	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Distance : 8

13
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Distance : 8

14
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } source
Code	{ reportMatcher ( Any.ANY ) ; return null ; } source
Distance : 8

15
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } field
Code	{ reportMatcher ( Any.ANY ) ; return null ; } field
Distance : 8

16
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } t
Code	{ reportMatcher ( Any.ANY ) ; return null ; } t
Distance : 8

17
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Distance : 8

18
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Distance : 8

19
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Distance : 8

20
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Distance : 8

21
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Distance : 8

22
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Distance : 8

23
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Distance : 8

24
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Distance : 8

25
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } x
Code	{ reportMatcher ( Any.ANY ) ; return null ; } x
Distance : 8

26
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Code	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Distance : 8

27
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } new
Code	{ reportMatcher ( Any.ANY ) ; return null ; } new
Distance : 8

28
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } values
Code	{ reportMatcher ( Any.ANY ) ; return null ; } values
Distance : 8

29
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Distance : 8

30
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } double
Distance : 8

31
Tree	{ return reportMatcher () ; } ==
Code	{ return reportMatcher () ; } ==
Distance : 2

32
Tree	{ return reportMatcher () ; } []
Code	{ return reportMatcher () ; } []
Distance : 2

33
Tree	{ return reportMatcher () ; } double
Code	{ return reportMatcher () ; } double
Distance : 2

34
Tree	{ return reportMatcher () ; } false
Code	{ return reportMatcher () ; } false
Distance : 2

35
Tree	{ return reportMatcher () ; } test
Code	{ return reportMatcher () ; } test
Distance : 2

36
Tree	{ return reportMatcher () ; } int
Code	{ return reportMatcher () ; } int
Distance : 2

37
Tree	{ return reportMatcher () ; } super
Code	{ return reportMatcher () ; } super
Distance : 2

38
Tree	{ return reportMatcher () ; } mode
Code	{ return reportMatcher () ; } mode
Distance : 2

39
Tree	{ return reportMatcher () ; } MathRuntimeException
Code	{ return reportMatcher () ; } MathRuntimeException
Distance : 2

40
Tree	{ return reportMatcher () ; } mock
Code	{ return reportMatcher () ; } mock
Distance : 2

41
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Class
Distance : 8

42
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Distance : 8

43
Tree	{ return reportMatcher () ; } return;
Code	{ return reportMatcher () ; } return;
Distance : 2

44
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } str
Code	{ reportMatcher ( Any.ANY ) ; return null ; } str
Distance : 8

45
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } root
Code	{ reportMatcher ( Any.ANY ) ; return null ; } root
Distance : 8

46
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } value
Code	{ reportMatcher ( Any.ANY ) ; return null ; } value
Distance : 8

47
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } i
Code	{ reportMatcher ( Any.ANY ) ; return null ; } i
Distance : 8

48
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } false
Code	{ reportMatcher ( Any.ANY ) ; return null ; } false
Distance : 8

49
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } int
Code	{ reportMatcher ( Any.ANY ) ; return null ; } int
Distance : 8

50
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } super
Code	{ reportMatcher ( Any.ANY ) ; return null ; } super
Distance : 8

51
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Distance : 8

52
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Distance : 8

53
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } []
Code	{ reportMatcher ( Any.ANY ) ; return null ; } []
Distance : 8

54
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } void
Code	{ reportMatcher ( Any.ANY ) ; return null ; } void
Distance : 8

55
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Distance : 8

56
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Distance : 8

57
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !
Distance : 8

58
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Code	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Distance : 8

59
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Distance : 8

60
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

61
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Distance : 8

62
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Code	{ reportMatcher ( Any.ANY ) ; return null ; } paint
Distance : 8

63
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } join
Code	{ reportMatcher ( Any.ANY ) ; return null ; } join
Distance : 8

64
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } p
Code	{ reportMatcher ( Any.ANY ) ; return null ; } p
Distance : 8

65
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 8

66
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Distance : 8

67
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Distance : 8

68
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } add
Code	{ reportMatcher ( Any.ANY ) ; return null ; } add
Distance : 8

69
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } name
Code	{ reportMatcher ( Any.ANY ) ; return null ; } name
Distance : 8

70
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Distance : 8

71
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } data
Code	{ reportMatcher ( Any.ANY ) ; return null ; } data
Distance : 8

72
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Code	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Distance : 8

73
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Code	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Distance : 8

74
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Distance : 8

75
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Code	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Distance : 8

76
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } d
Code	{ reportMatcher ( Any.ANY ) ; return null ; } d
Distance : 8

77
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mode
Distance : 8

78
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } true
Code	{ reportMatcher ( Any.ANY ) ; return null ; } true
Distance : 8

79
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Distance : 8

80
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Distance : 8

81
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Distance : 8

82
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Code	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Distance : 8

83
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Code	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Distance : 8

84
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Distance : 8

85
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Invocation
Distance : 8

86
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } for
Code	{ reportMatcher ( Any.ANY ) ; return null ; } for
Distance : 8

87
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Distance : 8

88
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Distance : 8

89
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Code	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Distance : 8

90
Tree	{ return reportMatcher () ; } throw
Code	{ return reportMatcher () ; } throw
Distance : 2

91
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } m
Code	{ reportMatcher ( Any.ANY ) ; return null ; } m
Distance : 8

92
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } *
Code	{ reportMatcher ( Any.ANY ) ; return null ; } *
Distance : 8

93
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Distance : 8

94
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } )
Code	{ reportMatcher ( Any.ANY ) ; return null ; } )
Distance : 8

95
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 8

96
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Distance : 8

97
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Distance : 8

98
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } (
Code	{ reportMatcher ( Any.ANY ) ; return null ; } (
Distance : 8

99
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } =
Code	{ reportMatcher ( Any.ANY ) ; return null ; } =
Distance : 8

100
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } }
Code	{ reportMatcher ( Any.ANY ) ; return null ; } }
Distance : 8

101
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } .
Code	{ reportMatcher ( Any.ANY ) ; return null ; } .
Distance : 8

102
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Distance : 8

103
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Distance : 8

104
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } try
Code	{ reportMatcher ( Any.ANY ) ; return null ; } try
Distance : 8

105
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fail
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fail
Distance : 8

106
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 8

107
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 8

108
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } @
Code	{ reportMatcher ( Any.ANY ) ; return null ; } @
Distance : 8

109
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } test
Distance : 8

110
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } public
Code	{ reportMatcher ( Any.ANY ) ; return null ; } public
Distance : 8

111
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } >
Code	{ reportMatcher ( Any.ANY ) ; return null ; } >
Distance : 8

112
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <
Distance : 8

113
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } if
Code	{ reportMatcher ( Any.ANY ) ; return null ; } if
Distance : 8

114
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return
Distance : 8

115
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Distance : 8

116
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } this
Code	{ reportMatcher ( Any.ANY ) ; return null ; } this
Distance : 8

117
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } final
Code	{ reportMatcher ( Any.ANY ) ; return null ; } final
Distance : 8

118
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Code	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Distance : 8

119
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Distance : 8

120
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } type
Code	{ reportMatcher ( Any.ANY ) ; return null ; } type
Distance : 8

121
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } equals
Distance : 8

122
Tree	{ return reportMatcher () ; } void
Code	{ return reportMatcher () ; } void
Distance : 2

123
Tree	{ return reportMatcher () ; } !
Code	{ return reportMatcher () ; } !
Distance : 2

124
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } c
Code	{ reportMatcher ( Any.ANY ) ; return null ; } c
Distance : 8

125
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Code	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Distance : 8

126
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } lines
Code	{ reportMatcher ( Any.ANY ) ; return null ; } lines
Distance : 8

127
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } verify
Code	{ reportMatcher ( Any.ANY ) ; return null ; } verify
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } n
Code	{ reportMatcher ( Any.ANY ) ; return null ; } n
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } e
Code	{ reportMatcher ( Any.ANY ) ; return null ; } e
Distance : 8

130
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } null
Code	{ reportMatcher ( Any.ANY ) ; return null ; } null
Distance : 8

131
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } +
Code	{ reportMatcher ( Any.ANY ) ; return null ; } +
Distance : 8

132
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Code	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Distance : 8

133
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } String
Code	{ reportMatcher ( Any.ANY ) ; return null ; } String
Distance : 8

134
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Code	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Distance : 8

135
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Distance : 8

136
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Node
Distance : 8

137
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkNotNull
Distance : 8

138
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } length
Code	{ reportMatcher ( Any.ANY ) ; return null ; } length
Distance : 8

139
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } long
Code	{ reportMatcher ( Any.ANY ) ; return null ; } long
Distance : 8

140
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Assert
Distance : 8

141
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Fraction
Distance : 8

142
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Distance : 8

143
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } a
Code	{ reportMatcher ( Any.ANY ) ; return null ; } a
Distance : 8

144
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } b
Code	{ reportMatcher ( Any.ANY ) ; return null ; } b
Distance : 8

145
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Distance : 8

146
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Distance : 8

147
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Test
Distance : 8

148
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Distance : 8

149
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Distance : 8

150
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtils
Distance : 8

151
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Exception
Distance : 8

152
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } v
Code	{ reportMatcher ( Any.ANY ) ; return null ; } v
Distance : 8

153
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Distance : 8

154
Tree	{ return ( List ) reportMatcher () ; } class
Code	{ return ( List ) reportMatcher () ; } class
Distance : 5

155
Tree	{ return ( List ) reportMatcher () ; } Override
Code	{ return ( List ) reportMatcher () ; } Override
Distance : 5

156
Tree	{ return ( List ) reportMatcher () ; } Object
Code	{ return ( List ) reportMatcher () ; } Object
Distance : 5

157
Tree	{ return ( List ) reportMatcher () ; } @
Code	{ return ( List ) reportMatcher () ; } @
Distance : 5

158
Tree	{ return ( List ) reportMatcher () ; } assertEquals
Code	{ return ( List ) reportMatcher () ; } assertEquals
Distance : 5

159
Tree	{ return ( List ) reportMatcher () ; } !
Code	{ return ( List ) reportMatcher () ; } !
Distance : 5

160
Tree	{ return ( List ) reportMatcher () ; } >
Code	{ return ( List ) reportMatcher () ; } >
Distance : 5

161
Tree	{ return ( List ) reportMatcher () ; } void
Code	{ return ( List ) reportMatcher () ; } void
Distance : 5

162
Tree	{ return ( List ) reportMatcher () ; } throw
Code	{ return ( List ) reportMatcher () ; } throw
Distance : 5

163
Tree	{ return ( List ) reportMatcher () ; } ==
Code	{ return ( List ) reportMatcher () ; } ==
Distance : 5

164
Tree	{ return ( List ) reportMatcher () ; } []
Code	{ return ( List ) reportMatcher () ; } []
Distance : 5

165
Tree	{ return ( List ) reportMatcher () ; } double
Code	{ return ( List ) reportMatcher () ; } double
Distance : 5

166
Tree	{ return ( List ) reportMatcher () ; } false
Code	{ return ( List ) reportMatcher () ; } false
Distance : 5

167
Tree	{ return ( List ) reportMatcher () ; } test
Code	{ return ( List ) reportMatcher () ; } test
Distance : 5

168
Tree	{ return ( List ) reportMatcher () ; } int
Code	{ return ( List ) reportMatcher () ; } int
Distance : 5

169
Tree	{ return ( List ) reportMatcher () ; } super
Code	{ return ( List ) reportMatcher () ; } super
Distance : 5

170
Tree	{ return ( List ) reportMatcher () ; } mode
Code	{ return ( List ) reportMatcher () ; } mode
Distance : 5

171
Tree	{ return ( List ) reportMatcher () ; } MathRuntimeException
Code	{ return ( List ) reportMatcher () ; } MathRuntimeException
Distance : 5

172
Tree	{ return ( List ) reportMatcher () ; } mock
Code	{ return ( List ) reportMatcher () ; } mock
Distance : 5

173
Tree	{ return ( List ) reportMatcher ( Any.ANY ) ; } scope
Code	{ return ( List ) reportMatcher ( Any.ANY ) ; } scope
Distance : 8

174
Tree	{ return ( List ) reportMatcher ( Any.ANY ) ; } b
Code	{ return ( List ) reportMatcher ( Any.ANY ) ; } b
Distance : 8

175
Tree	{ return ( List ) reportMatcher ( Any.ANY ) ; } sb
Code	{ return ( List ) reportMatcher ( Any.ANY ) ; } sb
Distance : 8

176
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } s
Code	{ reportMatcher ( Any.ANY ) ; return null ; } s
Distance : 8

177
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Distance : 8

178
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Distance : 8

179
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Code	{ reportMatcher ( Any.ANY ) ; return null ; } TestUtilities
Distance : 8

180
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } js
Code	{ reportMatcher ( Any.ANY ) ; return null ; } js
Distance : 8

181
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Code	{ reportMatcher ( Any.ANY ) ; return null ; } obj
Distance : 8

182
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Code	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Distance : 8

183
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } [
Code	{ reportMatcher ( Any.ANY ) ; return null ; } [
Distance : 8

184
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Distance : 8

185
Tree	{ return reportMatcher () ; } NUMBER_CONSTANT
Code	{ return reportMatcher () ; } NUMBER_CONSTANT
Distance : 2

186
Tree	{ return reportMatcher () ; } new
Code	{ return reportMatcher () ; } new
Distance : 2

187
Tree	{ return reportMatcher () ; } return
Code	{ return reportMatcher () ; } return
Distance : 2

188
Tree	{ return reportMatcher () ; } this
Code	{ return reportMatcher () ; } this
Distance : 2

189
Tree	{ return reportMatcher () ; } t
Code	{ return reportMatcher () ; } t
Distance : 2

190
Tree	{ return reportMatcher () ; } reportCodeChange
Code	{ return reportMatcher () ; } reportCodeChange
Distance : 2

191
Tree	{ return reportMatcher () ; } IllegalArgumentException
Code	{ return reportMatcher () ; } IllegalArgumentException
Distance : 2

192
Tree	{ return reportMatcher () ; } getField
Code	{ return reportMatcher () ; } getField
Distance : 2

193
Tree	{ return reportMatcher () ; } solver
Code	{ return reportMatcher () ; } solver
Distance : 2

194
Tree	{ return reportMatcher () ; } -
Code	{ return reportMatcher () ; } -
Distance : 2

195
Tree	{ return reportMatcher () ; } ]
Code	{ return reportMatcher () ; } ]
Distance : 2

196
Tree	{ return reportMatcher () ; } STRING_CONSTANT
Code	{ return reportMatcher () ; } STRING_CONSTANT
Distance : 2

197
Tree	{ return reportMatcher () ; } final
Code	{ return reportMatcher () ; } final
Distance : 2

198
Tree	{ return reportMatcher () ; } if
Code	{ return reportMatcher () ; } if
Distance : 2

199
Tree	{ return reportMatcher () ; } nullNotPermitted
Code	{ return reportMatcher () ; } nullNotPermitted
Distance : 2

========================================================================


========================================================================
Example Number: 94
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnList () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( List . class ) ) . returnList () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=List})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnList}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . List ; } invocations
Code	{ return this . List ; } invocations
Distance : 13

2
Tree	{ return this . List ; } values
Code	{ return this . List ; } values
Distance : 13

3
Tree	{ return this . List ; } setAcceptedLanguage
Code	{ return this . List ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . List ; } clone
Code	{ return this . List ; } clone
Distance : 13

5
Tree	{ return this . List ; } Double
Code	{ return this . List ; } Double
Distance : 13

6
Tree	{ return this . List ; } PeriodType
Code	{ return this . List ; } PeriodType
Distance : 13

7
Tree	{ return this . List ; } <=
Code	{ return this . List ; } <=
Distance : 13

8
Tree	{ return this . List ; } contains
Code	{ return this . List ; } contains
Distance : 13

9
Tree	{ return this . List ; } a
Code	{ return this . List ; } a
Distance : 13

10
Tree	{ return this . List ; } protected
Code	{ return this . List ; } protected
Distance : 13

11
Tree	{ return this . List ; } isNormalBlock
Code	{ return this . List ; } isNormalBlock
Distance : 13

12
Tree	{ return this . List ; } MutableTimePeriod
Code	{ return this . List ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . List ; } size
Code	{ return this . List ; } size
Distance : 13

14
Tree	{ return this . List ; } StringBuilder
Code	{ return this . List ; } StringBuilder
Distance : 13

15
Tree	{ return this . List ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . List ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . List ; } traverseEs6
Code	{ return this . List ; } traverseEs6
Distance : 13

17
Tree	{ return this . List ; } stroke
Code	{ return this . List ; } stroke
Distance : 13

18
Tree	{ return this . List ; } obj
Code	{ return this . List ; } obj
Distance : 13

19
Tree	{ return this . List ; } s
Code	{ return this . List ; } s
Distance : 13

20
Tree	{ return this . List ; } returnZero
Code	{ return this . List ; } returnZero
Distance : 13

21
Tree	{ return this . List ; } b
Code	{ return this . List ; } b
Distance : 13

22
Tree	{ return this . List ; } null
Code	{ return this . List ; } null
Distance : 13

23
Tree	{ return this . List ; } setUp
Code	{ return this . List ; } setUp
Distance : 13

24
Tree	{ return this . List ; } node
Code	{ return this . List ; } node
Distance : 13

25
Tree	{ return this . List ; } reportCodeChange
Code	{ return this . List ; } reportCodeChange
Distance : 13

26
Tree	{ return this . List ; } t
Code	{ return this . List ; } t
Distance : 13

27
Tree	{ return this . List ; } FastMath
Code	{ return this . List ; } FastMath
Distance : 13

28
Tree	{ return this . List ; } invocation
Code	{ return this . List ; } invocation
Distance : 13

29
Tree	{ return this . List ; } IllegalArgumentException
Code	{ return this . List ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . List ; } expected
Code	{ return this . List ; } expected
Distance : 13

31
Tree	{ return this . List ; } testSame
Code	{ return this . List ; } testSame
Distance : 13

32
Tree	{ return this . List ; } createIllegalArgumentException
Code	{ return this . List ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . List ; } ArrayList
Code	{ return this . List ; } ArrayList
Distance : 13

34
Tree	{ return this . List ; } parent
Code	{ return this . List ; } parent
Distance : 13

35
Tree	{ return this . List ; } LINE_JOINER
Code	{ return this . List ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . List ; } x
Code	{ return this . List ; } x
Distance : 13

37
Tree	{ return this . List ; } str
Code	{ return this . List ; } str
Distance : 13

38
Tree	{ return this . List ; } assertThat
Code	{ return this . List ; } assertThat
Distance : 13

39
Tree	{ return this . List ; } getFirstChild
Code	{ return this . List ; } getFirstChild
Distance : 13

40
Tree	{ return this . List ; } sb
Code	{ return this . List ; } sb
Distance : 13

41
Tree	{ return this . List ; } externs
Code	{ return this . List ; } externs
Distance : 13

42
Tree	{ return this . List ; } append
Code	{ return this . List ; } append
Distance : 13

43
Tree	{ return this . List ; } Invocation
Code	{ return this . List ; } Invocation
Distance : 13

44
Tree	{ return this . List ; } equals
Code	{ return this . List ; } equals
Distance : 13

45
Tree	{ return this . List ; } index
Code	{ return this . List ; } index
Distance : 13

46
Tree	{ return this . List ; } NUMBER_CONSTANT
Code	{ return this . List ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . List ; } Object
Code	{ return this . List ; } Object
Distance : 13

48
Tree	{ return this . List ; } value
Code	{ return this . List ; } value
Distance : 13

49
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } testSame
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } testSame
Distance : 10

50
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } add
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } add
Distance : 10

51
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } parent
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } parent
Distance : 10

52
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } serialised
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } serialised
Distance : 10

54
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } y
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } y
Distance : 10

55
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } sb
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } sb
Distance : 10

56
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } scope
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } scope
Distance : 10

57
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } getFirstChild
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } getFirstChild
Distance : 10

58
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } throws
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } throws
Distance : 10

59
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Double
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Double
Distance : 10

60
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } <=
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } <=
Distance : 10

61
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } clone
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } clone
Distance : 10

62
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } sqrt
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } sqrt
Distance : 10

63
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } isBlock
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } isBlock
Distance : 10

64
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } returnZero
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } returnZero
Distance : 10

65
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } UnivariateFunction
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } append
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } append
Distance : 10

67
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } getInstance
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } getInstance
Distance : 10

69
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } valueOf
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } valueOf
Distance : 10

70
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

71
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Math
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Math
Distance : 10

72
Tree	{ return this . List ; } field
Code	{ return this . List ; } field
Distance : 13

73
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } wanted
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } wanted
Distance : 10

74
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } NodeUtil
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } NodeUtil
Distance : 10

75
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } x
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } x
Distance : 10

76
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } try
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } try
Distance : 10

77
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } fail
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } fail
Distance : 10

78
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Args
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Args
Distance : 10

79
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } List
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } List
Distance : 10

80
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } f
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } f
Distance : 10

81
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } ParamChecks
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } ParamChecks
Distance : 10

82
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } array
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } array
Distance : 10

83
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } <>
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } <>
Distance : 10

84
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } m
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } m
Distance : 10

85
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } boolean
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } boolean
Distance : 10

86
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } :
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } :
Distance : 10

87
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } result
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } result
Distance : 10

88
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } join
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } join
Distance : 10

89
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } paint
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } paint
Distance : 10

90
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } *
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } *
Distance : 10

91
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } type
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } type
Distance : 10

92
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } long
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } long
Distance : 10

93
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } length
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } length
Distance : 10

94
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } v
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } v
Distance : 10

95
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Integer
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } Integer
Distance : 10

96
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } root
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; } root
Distance : 10

97
Tree	{ return this . List ; } length
Code	{ return this . List ; } length
Distance : 13

98
Tree	{ return this . List ; } @
Code	{ return this . List ; } @
Distance : 13

99
Tree	{ return this . List ; } instance
Code	{ return this . List ; } instance
Distance : 13

100
Tree	{ returnList ( Any.ANY ) ; return continue; ; }
Code	{ returnList ( Any.ANY ) ; return continue; ; }
Distance : 12

101
Tree	{ super ( List ) ; returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( List ) ; returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 10

102
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ super ( List ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( List ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

104
Tree	{ reportMatcher ( Any.ANY ) ; List = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; List = Any.ANY . reportMatcher () ; }
Distance : 9

105
Tree	{ returnList ( Any.ANY ) ; return default: ; }
Code	{ returnList ( Any.ANY ) ; return default: ; }
Distance : 12

106
Tree	{ returnList ( Any.ANY ) ; List = Any.ANY . returnList () ; }
Code	{ returnList ( Any.ANY ) ; List = Any.ANY . returnList () ; }
Distance : 9

107
Tree	{ returnList ( Any.ANY ) ; List = Any.ANY . reportMatcher () ; }
Code	{ returnList ( Any.ANY ) ; List = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . List ; } mockingProgress
Code	{ return this . List ; } mockingProgress
Distance : 13

109
Tree	{ return this . List ; } chrono
Code	{ return this . List ; } chrono
Distance : 13

110
Tree	{ return this . List ; } isEmpty
Code	{ return this . List ; } isEmpty
Distance : 13

111
Tree	{ return this . List ; } return;
Code	{ return this . List ; } return;
Distance : 13

112
Tree	{ return this . List ; } js
Code	{ return this . List ; } js
Distance : 13

113
Tree	{ return this . List ; } JSType
Code	{ return this . List ; } JSType
Distance : 13

114
Tree	{ return this . List ; } static
Code	{ return this . List ; } static
Distance : 13

115
Tree	{ return this . List ; } char
Code	{ return this . List ; } char
Distance : 13

116
Tree	{ return this . List ; } StrBuilder
Code	{ return this . List ; } StrBuilder
Distance : 13

117
Tree	{ return this . List ; } dataset
Code	{ return this . List ; } dataset
Distance : 13

118
Tree	{ return this . List ; } abs
Code	{ return this . List ; } abs
Distance : 13

119
Tree	{ return this . List ; } matcher
Code	{ return this . List ; } matcher
Distance : 13

120
Tree	{ return this . List ; } reportMatcher
Code	{ return this . List ; } reportMatcher
Distance : 13

121
Tree	{ returnList ( Any.ANY ) ; return break; ; }
Code	{ returnList ( Any.ANY ) ; return break; ; }
Distance : 12

122
Tree	{ return this . List ; } {}
Code	{ return this . List ; } {}
Distance : 13

123
Tree	{ reportMatcher ( Any.ANY ) ; List = Any.ANY . returnList () ; }
Code	{ reportMatcher ( Any.ANY ) ; List = Any.ANY . returnList () ; }
Distance : 8

124
Tree	{ returnList ( Any.ANY ) ; return super(); ; }
Code	{ returnList ( Any.ANY ) ; return super(); ; }
Distance : 12

125
Tree	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 7

126
Tree	{ return this . List ; } getField
Code	{ return this . List ; } getField
Distance : 13

127
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

128
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

132
Tree	{ return this . List ; }
Code	{ return this . List ; }
Distance : 12

133
Tree	{ returnList ( Any.ANY ) ; return null ; }
Code	{ returnList ( Any.ANY ) ; return null ; }
Distance : 12

134
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

135
Tree	{ returnList ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnList ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

136
Tree	{ return returnList ( Any.ANY ) . returnList () ; }
Code	{ return returnList ( Any.ANY ) . returnList () ; }
Distance : 8

137
Tree	{ return ( List ) returnList ( Any.ANY ) ; }
Code	{ return ( List ) returnList ( Any.ANY ) ; }
Distance : 10

138
Tree	{ super ( List ) ; returnList ( Any.ANY ) ; }
Code	{ super ( List ) ; returnList ( Any.ANY ) ; }
Distance : 12

139
Tree	{ return ( List ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) ; }
Distance : 10

140
Tree	{ super ( List ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( List ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

141
Tree	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; }
Code	{ super ( List ) ; returnList ( Any.ANY ) . returnList () ; }
Distance : 9

142
Tree	{ return ( List ) returnList ( Any.ANY ) . returnList () ; }
Code	{ return ( List ) returnList ( Any.ANY ) . returnList () ; }
Distance : 8

143
Tree	{ returnList ( Any.ANY ) ; return return; ; }
Code	{ returnList ( Any.ANY ) ; return return; ; }
Distance : 12

144
Tree	{ super ( List ) ; reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ super ( List ) ; reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 9

145
Tree	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
Code	{ return ( List ) reportMatcher ( Any.ANY ) . returnList () ; }
Distance : 8

146
Tree	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . List ; } get
Code	{ return this . List ; } get
Distance : 13

148
Tree	{ return ( List ) returnList ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( List ) returnList ( Any.ANY ) . reportMatcher () ; }
Distance : 9

149
Tree	{ return this . List ; } valueOf
Code	{ return this . List ; } valueOf
Distance : 13

150
Tree	{ return this . List ; } this
Code	{ return this . List ; } this
Distance : 13

151
Tree	{ return this . List ; } return
Code	{ return this . List ; } return
Distance : 13

152
Tree	{ return this . List ; } final
Code	{ return this . List ; } final
Distance : 13

153
Tree	{ return this . List ; } <
Code	{ return this . List ; } <
Distance : 13

154
Tree	{ return this . List ; } name
Code	{ return this . List ; } name
Distance : 13

155
Tree	{ return this . List ; } solver
Code	{ return this . List ; } solver
Distance : 13

156
Tree	{ return this . List ; } y
Code	{ return this . List ; } y
Distance : 13

157
Tree	{ return this . List ; } PlotChangeEvent
Code	{ return this . List ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . List ; } d
Code	{ return this . List ; } d
Distance : 13

159
Tree	{ return this . List ; } getParent
Code	{ return this . List ; } getParent
Distance : 13

160
Tree	{ return this . List ; } for
Code	{ return this . List ; } for
Distance : 13

161
Tree	{ return this . List ; } UnivariateFunction
Code	{ return this . List ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . List ; } sqrt
Code	{ return this . List ; } sqrt
Distance : 13

163
Tree	{ return this . List ; } throws
Code	{ return this . List ; } throws
Distance : 13

164
Tree	{ return this . List ; } scope
Code	{ return this . List ; } scope
Distance : 13

165
Tree	{ return this . List ; } optimizer
Code	{ return this . List ; } optimizer
Distance : 13

166
Tree	{ return this . List ; } simpleMethod
Code	{ return this . List ; } simpleMethod
Distance : 13

167
Tree	{ return this . List ; } isBlock
Code	{ return this . List ; } isBlock
Distance : 13

168
Tree	{ return this . List ; } getArgumentMatcherStorage
Code	{ return this . List ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . List ; } instant
Code	{ return this . List ; } instant
Distance : 13

170
Tree	{ return this . List ; } alpha
Code	{ return this . List ; } alpha
Distance : 13

171
Tree	{ return this . List ; } TestUtilities
Code	{ return this . List ; } TestUtilities
Distance : 13

172
Tree	{ return this . List ; } if
Code	{ return this . List ; } if
Distance : 13

173
Tree	{ return this . List ; } pattern
Code	{ return this . List ; } pattern
Distance : 13

174
Tree	{ return this . List ; } String
Code	{ return this . List ; } String
Distance : 13

175
Tree	{ return this . List ; } else
Code	{ return this . List ; } else
Distance : 13

176
Tree	{ return this . List ; } public
Code	{ return this . List ; } public
Distance : 13

177
Tree	{ return this . List ; } getMessage
Code	{ return this . List ; } getMessage
Distance : 13

178
Tree	{ return this . List ; } >
Code	{ return this . List ; } >
Distance : 13

179
Tree	{ return this . List ; } getChronology
Code	{ return this . List ; } getChronology
Distance : 13

180
Tree	{ return this . List ; } Collection
Code	{ return this . List ; } Collection
Distance : 13

181
Tree	{ return this . List ; } =
Code	{ return this . List ; } =
Distance : 13

182
Tree	{ return this . List ; } new
Code	{ return this . List ; } new
Distance : 13

183
Tree	{ return this . List ; } ()
Code	{ return this . List ; } ()
Distance : 13

184
Tree	{ return this . List ; } ,
Code	{ return this . List ; } ,
Distance : 13

185
Tree	{ return this . List ; } {
Code	{ return this . List ; } {
Distance : 13

186
Tree	{ return this . List ; } stream
Code	{ return this . List ; } stream
Distance : 13

187
Tree	{ return this . List ; } )
Code	{ return this . List ; } )
Distance : 13

188
Tree	{ return this . List ; } <s>
Code	{ return this . List ; } <s>
Distance : 13

189
Tree	{ return this . List ; } {
Code	{ return this . List ; } {
Distance : 13

190
Tree	{ return this . List ; } <blank>
Code	{ return this . List ; } <blank>
Distance : 13

191
Tree	{ return this . List ; } ;
Code	{ return this . List ; } ;
Distance : 13

192
Tree	{ return this . List ; } (
Code	{ return this . List ; } (
Distance : 13

193
Tree	{ return this . List ; } .
Code	{ return this . List ; } .
Distance : 13

194
Tree	{ return this . List ; } }
Code	{ return this . List ; } }
Distance : 13

195
Tree	{ return this . List ; } STRING_CONSTANT
Code	{ return this . List ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 95
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnString () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( String . class ) ) . returnString () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnString}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=String})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnString}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . String ; } invocations
Code	{ return this . String ; } invocations
Distance : 13

2
Tree	{ return this . String ; } values
Code	{ return this . String ; } values
Distance : 13

3
Tree	{ return this . String ; } setAcceptedLanguage
Code	{ return this . String ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . String ; } clone
Code	{ return this . String ; } clone
Distance : 13

5
Tree	{ return this . String ; } Double
Code	{ return this . String ; } Double
Distance : 13

6
Tree	{ return this . String ; } PeriodType
Code	{ return this . String ; } PeriodType
Distance : 13

7
Tree	{ return this . String ; } <=
Code	{ return this . String ; } <=
Distance : 13

8
Tree	{ return this . String ; } contains
Code	{ return this . String ; } contains
Distance : 13

9
Tree	{ return this . String ; } a
Code	{ return this . String ; } a
Distance : 13

10
Tree	{ return this . String ; } protected
Code	{ return this . String ; } protected
Distance : 13

11
Tree	{ return this . String ; } isNormalBlock
Code	{ return this . String ; } isNormalBlock
Distance : 13

12
Tree	{ return this . String ; } MutableTimePeriod
Code	{ return this . String ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . String ; } size
Code	{ return this . String ; } size
Distance : 13

14
Tree	{ return this . String ; } StringBuilder
Code	{ return this . String ; } StringBuilder
Distance : 13

15
Tree	{ return this . String ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . String ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . String ; } traverseEs6
Code	{ return this . String ; } traverseEs6
Distance : 13

17
Tree	{ return this . String ; } stroke
Code	{ return this . String ; } stroke
Distance : 13

18
Tree	{ return this . String ; } obj
Code	{ return this . String ; } obj
Distance : 13

19
Tree	{ return this . String ; } s
Code	{ return this . String ; } s
Distance : 13

20
Tree	{ return this . String ; } returnZero
Code	{ return this . String ; } returnZero
Distance : 13

21
Tree	{ return this . String ; } b
Code	{ return this . String ; } b
Distance : 13

22
Tree	{ return this . String ; } null
Code	{ return this . String ; } null
Distance : 13

23
Tree	{ return this . String ; } setUp
Code	{ return this . String ; } setUp
Distance : 13

24
Tree	{ return this . String ; } node
Code	{ return this . String ; } node
Distance : 13

25
Tree	{ return this . String ; } reportCodeChange
Code	{ return this . String ; } reportCodeChange
Distance : 13

26
Tree	{ return this . String ; } t
Code	{ return this . String ; } t
Distance : 13

27
Tree	{ return this . String ; } FastMath
Code	{ return this . String ; } FastMath
Distance : 13

28
Tree	{ return this . String ; } invocation
Code	{ return this . String ; } invocation
Distance : 13

29
Tree	{ return this . String ; } IllegalArgumentException
Code	{ return this . String ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . String ; } expected
Code	{ return this . String ; } expected
Distance : 13

31
Tree	{ return this . String ; } testSame
Code	{ return this . String ; } testSame
Distance : 13

32
Tree	{ return this . String ; } createIllegalArgumentException
Code	{ return this . String ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . String ; } ArrayList
Code	{ return this . String ; } ArrayList
Distance : 13

34
Tree	{ return this . String ; } parent
Code	{ return this . String ; } parent
Distance : 13

35
Tree	{ return this . String ; } LINE_JOINER
Code	{ return this . String ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . String ; } x
Code	{ return this . String ; } x
Distance : 13

37
Tree	{ return this . String ; } str
Code	{ return this . String ; } str
Distance : 13

38
Tree	{ return this . String ; } assertThat
Code	{ return this . String ; } assertThat
Distance : 13

39
Tree	{ return this . String ; } getFirstChild
Code	{ return this . String ; } getFirstChild
Distance : 13

40
Tree	{ return this . String ; } sb
Code	{ return this . String ; } sb
Distance : 13

41
Tree	{ return this . String ; } externs
Code	{ return this . String ; } externs
Distance : 13

42
Tree	{ return this . String ; } append
Code	{ return this . String ; } append
Distance : 13

43
Tree	{ return this . String ; } Invocation
Code	{ return this . String ; } Invocation
Distance : 13

44
Tree	{ return this . String ; } equals
Code	{ return this . String ; } equals
Distance : 13

45
Tree	{ return this . String ; } index
Code	{ return this . String ; } index
Distance : 13

46
Tree	{ return this . String ; } NUMBER_CONSTANT
Code	{ return this . String ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . String ; } Object
Code	{ return this . String ; } Object
Distance : 13

48
Tree	{ return this . String ; } value
Code	{ return this . String ; } value
Distance : 13

49
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } testSame
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } testSame
Distance : 10

50
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } add
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } add
Distance : 10

51
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } parent
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } parent
Distance : 10

52
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } createIllegalArgumentException
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } serialised
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } serialised
Distance : 10

54
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } y
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } y
Distance : 10

55
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } sb
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } sb
Distance : 10

56
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } scope
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } scope
Distance : 10

57
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } getFirstChild
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } getFirstChild
Distance : 10

58
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } throws
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } throws
Distance : 10

59
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Double
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Double
Distance : 10

60
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } <=
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } <=
Distance : 10

61
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } clone
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } clone
Distance : 10

62
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } sqrt
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } sqrt
Distance : 10

63
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } isBlock
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } isBlock
Distance : 10

64
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } returnZero
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } returnZero
Distance : 10

65
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } UnivariateFunction
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } append
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } append
Distance : 10

67
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } getInstance
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } getInstance
Distance : 10

69
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } valueOf
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } valueOf
Distance : 10

70
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

71
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Math
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Math
Distance : 10

72
Tree	{ return this . String ; } field
Code	{ return this . String ; } field
Distance : 13

73
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } wanted
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } wanted
Distance : 10

74
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } NodeUtil
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } NodeUtil
Distance : 10

75
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } x
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } x
Distance : 10

76
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } try
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } try
Distance : 10

77
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } fail
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } fail
Distance : 10

78
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Args
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Args
Distance : 10

79
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } List
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } List
Distance : 10

80
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } f
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } f
Distance : 10

81
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } ParamChecks
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } ParamChecks
Distance : 10

82
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } array
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } array
Distance : 10

83
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } <>
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } <>
Distance : 10

84
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } m
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } m
Distance : 10

85
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } boolean
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } boolean
Distance : 10

86
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } :
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } :
Distance : 10

87
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } result
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } result
Distance : 10

88
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } join
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } join
Distance : 10

89
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } paint
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } paint
Distance : 10

90
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } *
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } *
Distance : 10

91
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } type
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } type
Distance : 10

92
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } long
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } long
Distance : 10

93
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } length
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } length
Distance : 10

94
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } v
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } v
Distance : 10

95
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Integer
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } Integer
Distance : 10

96
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } root
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; } root
Distance : 10

97
Tree	{ return this . String ; } length
Code	{ return this . String ; } length
Distance : 13

98
Tree	{ return this . String ; } @
Code	{ return this . String ; } @
Distance : 13

99
Tree	{ return this . String ; } instance
Code	{ return this . String ; } instance
Distance : 13

100
Tree	{ reportMatcher ( Any.ANY ) ; String = Any.ANY . returnString () ; }
Code	{ reportMatcher ( Any.ANY ) ; String = Any.ANY . returnString () ; }
Distance : 8

101
Tree	{ return ( String ) returnString ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( String ) returnString ( Any.ANY ) . reportMatcher () ; }
Distance : 9

102
Tree	{ return ( String ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( String ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

104
Tree	{ super ( String ) ; returnString ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( String ) ; returnString ( Any.ANY ) . reportMatcher () ; }
Distance : 10

105
Tree	{ reportMatcher ( Any.ANY ) ; String = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; String = Any.ANY . reportMatcher () ; }
Distance : 9

106
Tree	{ returnString ( Any.ANY ) ; String = Any.ANY . returnString () ; }
Code	{ returnString ( Any.ANY ) ; String = Any.ANY . returnString () ; }
Distance : 9

107
Tree	{ returnString ( Any.ANY ) ; String = Any.ANY . reportMatcher () ; }
Code	{ returnString ( Any.ANY ) ; String = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . String ; } char
Code	{ return this . String ; } char
Distance : 13

109
Tree	{ return this . String ; } mockingProgress
Code	{ return this . String ; } mockingProgress
Distance : 13

110
Tree	{ return this . String ; } chrono
Code	{ return this . String ; } chrono
Distance : 13

111
Tree	{ return this . String ; } isEmpty
Code	{ return this . String ; } isEmpty
Distance : 13

112
Tree	{ return this . String ; } return;
Code	{ return this . String ; } return;
Distance : 13

113
Tree	{ return this . String ; } js
Code	{ return this . String ; } js
Distance : 13

114
Tree	{ return this . String ; } StrBuilder
Code	{ return this . String ; } StrBuilder
Distance : 13

115
Tree	{ return this . String ; } JSType
Code	{ return this . String ; } JSType
Distance : 13

116
Tree	{ return this . String ; } static
Code	{ return this . String ; } static
Distance : 13

117
Tree	{ return this . String ; } dataset
Code	{ return this . String ; } dataset
Distance : 13

118
Tree	{ return this . String ; } stream
Code	{ return this . String ; } stream
Distance : 13

119
Tree	{ return this . String ; } abs
Code	{ return this . String ; } abs
Distance : 13

120
Tree	{ return this . String ; } matcher
Code	{ return this . String ; } matcher
Distance : 13

121
Tree	{ return returnString ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnString ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . String ; } reportMatcher
Code	{ return this . String ; } reportMatcher
Distance : 13

123
Tree	{ super ( String ) ; returnString ( Any.ANY ) . returnString () ; }
Code	{ super ( String ) ; returnString ( Any.ANY ) . returnString () ; }
Distance : 9

124
Tree	{ return ( String ) reportMatcher ( Any.ANY ) . returnString () ; }
Code	{ return ( String ) reportMatcher ( Any.ANY ) . returnString () ; }
Distance : 8

125
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

126
Tree	{ return this . String ; } getField
Code	{ return this . String ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . returnString () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnString () ; }
Distance : 7

128
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

131
Tree	{ return this . String ; }
Code	{ return this . String ; }
Distance : 12

132
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

133
Tree	{ returnString ( Any.ANY ) ; return null ; }
Code	{ returnString ( Any.ANY ) ; return null ; }
Distance : 12

134
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

135
Tree	{ returnString ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnString ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

136
Tree	{ return ( String ) returnString ( Any.ANY ) ; }
Code	{ return ( String ) returnString ( Any.ANY ) ; }
Distance : 10

137
Tree	{ return ( String ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( String ) reportMatcher ( Any.ANY ) ; }
Distance : 10

138
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

139
Tree	{ super ( String ) ; returnString ( Any.ANY ) ; }
Code	{ super ( String ) ; returnString ( Any.ANY ) ; }
Distance : 12

140
Tree	{ returnString ( Any.ANY ) ; return return; ; }
Code	{ returnString ( Any.ANY ) ; return return; ; }
Distance : 12

141
Tree	{ return returnString ( Any.ANY ) . returnString () ; }
Code	{ return returnString ( Any.ANY ) . returnString () ; }
Distance : 8

142
Tree	{ returnString ( Any.ANY ) ; return super(); ; }
Code	{ returnString ( Any.ANY ) ; return super(); ; }
Distance : 12

143
Tree	{ returnString ( Any.ANY ) ; return break; ; }
Code	{ returnString ( Any.ANY ) ; return break; ; }
Distance : 12

144
Tree	{ return ( String ) returnString ( Any.ANY ) . returnString () ; }
Code	{ return ( String ) returnString ( Any.ANY ) . returnString () ; }
Distance : 8

145
Tree	{ returnString ( Any.ANY ) ; return continue; ; }
Code	{ returnString ( Any.ANY ) ; return continue; ; }
Distance : 12

146
Tree	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; }
Code	{ super ( String ) ; reportMatcher ( Any.ANY ) . returnString () ; }
Distance : 9

147
Tree	{ return this . String ; } {}
Code	{ return this . String ; } {}
Distance : 13

148
Tree	{ returnString ( Any.ANY ) ; return default: ; }
Code	{ returnString ( Any.ANY ) ; return default: ; }
Distance : 12

149
Tree	{ return this . String ; } valueOf
Code	{ return this . String ; } valueOf
Distance : 13

150
Tree	{ return this . String ; } this
Code	{ return this . String ; } this
Distance : 13

151
Tree	{ return this . String ; } return
Code	{ return this . String ; } return
Distance : 13

152
Tree	{ return this . String ; } final
Code	{ return this . String ; } final
Distance : 13

153
Tree	{ return this . String ; } <
Code	{ return this . String ; } <
Distance : 13

154
Tree	{ return this . String ; } name
Code	{ return this . String ; } name
Distance : 13

155
Tree	{ return this . String ; } solver
Code	{ return this . String ; } solver
Distance : 13

156
Tree	{ return this . String ; } y
Code	{ return this . String ; } y
Distance : 13

157
Tree	{ return this . String ; } PlotChangeEvent
Code	{ return this . String ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . String ; } d
Code	{ return this . String ; } d
Distance : 13

159
Tree	{ return this . String ; } getParent
Code	{ return this . String ; } getParent
Distance : 13

160
Tree	{ return this . String ; } for
Code	{ return this . String ; } for
Distance : 13

161
Tree	{ return this . String ; } UnivariateFunction
Code	{ return this . String ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . String ; } sqrt
Code	{ return this . String ; } sqrt
Distance : 13

163
Tree	{ return this . String ; } throws
Code	{ return this . String ; } throws
Distance : 13

164
Tree	{ return this . String ; } scope
Code	{ return this . String ; } scope
Distance : 13

165
Tree	{ return this . String ; } optimizer
Code	{ return this . String ; } optimizer
Distance : 13

166
Tree	{ return this . String ; } simpleMethod
Code	{ return this . String ; } simpleMethod
Distance : 13

167
Tree	{ return this . String ; } isBlock
Code	{ return this . String ; } isBlock
Distance : 13

168
Tree	{ return this . String ; } getArgumentMatcherStorage
Code	{ return this . String ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . String ; } get
Code	{ return this . String ; } get
Distance : 13

170
Tree	{ return this . String ; } alpha
Code	{ return this . String ; } alpha
Distance : 13

171
Tree	{ return this . String ; } TestUtilities
Code	{ return this . String ; } TestUtilities
Distance : 13

172
Tree	{ return this . String ; } if
Code	{ return this . String ; } if
Distance : 13

173
Tree	{ return this . String ; } pattern
Code	{ return this . String ; } pattern
Distance : 13

174
Tree	{ return this . String ; } String
Code	{ return this . String ; } String
Distance : 13

175
Tree	{ return this . String ; } instant
Code	{ return this . String ; } instant
Distance : 13

176
Tree	{ return this . String ; } public
Code	{ return this . String ; } public
Distance : 13

177
Tree	{ return this . String ; } getMessage
Code	{ return this . String ; } getMessage
Distance : 13

178
Tree	{ return this . String ; } >
Code	{ return this . String ; } >
Distance : 13

179
Tree	{ return this . String ; } getChronology
Code	{ return this . String ; } getChronology
Distance : 13

180
Tree	{ return this . String ; } Collection
Code	{ return this . String ; } Collection
Distance : 13

181
Tree	{ return this . String ; } =
Code	{ return this . String ; } =
Distance : 13

182
Tree	{ return this . String ; } new
Code	{ return this . String ; } new
Distance : 13

183
Tree	{ return this . String ; } ()
Code	{ return this . String ; } ()
Distance : 13

184
Tree	{ return this . String ; } ,
Code	{ return this . String ; } ,
Distance : 13

185
Tree	{ return this . String ; } {
Code	{ return this . String ; } {
Distance : 13

186
Tree	{ return this . String ; } else
Code	{ return this . String ; } else
Distance : 13

187
Tree	{ return this . String ; } )
Code	{ return this . String ; } )
Distance : 13

188
Tree	{ return this . String ; } <s>
Code	{ return this . String ; } <s>
Distance : 13

189
Tree	{ return this . String ; } {
Code	{ return this . String ; } {
Distance : 13

190
Tree	{ return this . String ; } <blank>
Code	{ return this . String ; } <blank>
Distance : 13

191
Tree	{ return this . String ; } ;
Code	{ return this . String ; } ;
Distance : 13

192
Tree	{ return this . String ; } (
Code	{ return this . String ; } (
Distance : 13

193
Tree	{ return this . String ; } .
Code	{ return this . String ; } .
Distance : 13

194
Tree	{ return this . String ; } }
Code	{ return this . String ; } }
Distance : 13

195
Tree	{ return this . String ; } STRING_CONSTANT
Code	{ return this . String ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 96
Parent Code is: 
{ return ( T ) anyObject () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (802{val=anyObject}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 6
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } f
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } f
Distance : 5

1
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } false
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } false
Distance : 5

2
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } double
Distance : 5

3
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } i
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } i
Distance : 5

4
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } !=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } !=
Distance : 5

5
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } value
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } value
Distance : 5

6
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } T
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } T
Distance : 5

7
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } setAcceptedLanguage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } setAcceptedLanguage
Distance : 5

8
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } abs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } abs
Distance : 5

9
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {
Distance : 5

10
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ,
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ,
Distance : 5

11
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ()
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ()
Distance : 5

12
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } +
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } +
Distance : 5

13
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } wanted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } wanted
Distance : 5

14
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ex
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ex
Distance : 5

15
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NodeUtil
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NodeUtil
Distance : 5

16
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkArgument
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkArgument
Distance : 5

17
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } add
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } add
Distance : 5

18
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } data
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } data
Distance : 5

19
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } root
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } root
Distance : 5

20
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } void
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } void
Distance : 5

21
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } throw
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } throw
Distance : 5

22
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } compiler
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } compiler
Distance : 5

23
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } catch
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } catch
Distance : 5

24
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } e
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } e
Distance : 5

25
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } n
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } n
Distance : 5

26
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } STRING_CONSTANT
Distance : 5

27
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NodeTraversal
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NodeTraversal
Distance : 5

28
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkState
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkState
Distance : 5

29
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } expected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } expected
Distance : 5

30
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } super
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } super
Distance : 5

31
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } null
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } null
Distance : 5

32
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } e
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } e
Distance : 5

33
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } +
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } +
Distance : 5

34
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } n
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } n
Distance : 5

35
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeTraversal
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } NodeTraversal
Distance : 5

36
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } expected
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } expected
Distance : 5

37
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {}
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } {}
Distance : 5

38
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ]
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } ]
Distance : 5

39
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mode
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } mode
Distance : 5

40
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } toString
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } toString
Distance : 5

41
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Test
Distance : 5

42
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } notifyListeners
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } notifyListeners
Distance : 5

43
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } reportMatcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } reportMatcher
Distance : 5

44
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } }
Distance : 5

45
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <
Distance : 5

46
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } .
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } .
Distance : 5

47
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } (
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } (
Distance : 5

48
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ;
Distance : 5

49
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <blank>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <blank>
Distance : 5

50
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {
Distance : 5

51
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <s>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <s>
Distance : 5

52
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } )
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } )
Distance : 5

53
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } >
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } >
Distance : 5

54
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } final
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } final
Distance : 5

55
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } return
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } return
Distance : 5

56
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } this
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } this
Distance : 5

57
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } public
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } public
Distance : 5

58
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } if
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } if
Distance : 5

59
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } [
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } [
Distance : 5

60
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } catch
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } catch
Distance : 5

61
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {}
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } {}
Distance : 5

62
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } mode
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } mode
Distance : 5

63
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } assertThat
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } assertThat
Distance : 5

64
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } str
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } str
Distance : 5

65
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } x
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } x
Distance : 5

66
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } LINE_JOINER
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } LINE_JOINER
Distance : 5

67
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } parent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } parent
Distance : 5

68
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ArrayList
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ArrayList
Distance : 5

69
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } createIllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } createIllegalArgumentException
Distance : 5

70
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } traverseEs6
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } traverseEs6
Distance : 5

71
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } stroke
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } stroke
Distance : 5

72
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } obj
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } obj
Distance : 5

73
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Assert
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Assert
Distance : 5

74
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } else
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } else
Distance : 5

75
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } instant
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } instant
Distance : 5

76
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } *
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } *
Distance : 5

77
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } optimizer
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } optimizer
Distance : 5

78
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isBlock
Distance : 5

79
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } simpleMethod
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } simpleMethod
Distance : 5

80
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } valueOf
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } valueOf
Distance : 5

81
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } alpha
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } alpha
Distance : 5

82
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } instance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } instance
Distance : 5

83
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getArgumentMatcherStorage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getArgumentMatcherStorage
Distance : 5

84
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } assertTrue
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } assertTrue
Distance : 5

85
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } /
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } /
Distance : 5

86
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ?
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ?
Distance : 5

87
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } s
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } s
Distance : 5

88
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } TestUtils
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } TestUtils
Distance : 5

89
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } long
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } long
Distance : 5

90
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } String
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } String
Distance : 5

91
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ]
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ]
Distance : 5

92
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isNormalBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isNormalBlock
Distance : 5

93
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } contains
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } contains
Distance : 5

94
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Preconditions
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Preconditions
Distance : 5

95
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } &&
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } &&
Distance : 5

96
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } -
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } -
Distance : 5

97
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } true
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } true
Distance : 5

98
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NUMBER_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } NUMBER_CONSTANT
Distance : 5

99
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } new
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } new
Distance : 5

100
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } =
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } =
Distance : 5

101
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } matcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } matcher
Distance : 5

102
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getMessage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getMessage
Distance : 5

103
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } testSame
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } testSame
Distance : 5

104
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } stream
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } stream
Distance : 5

105
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } LanguageMode.ECMASCRIPT_2015
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } LanguageMode.ECMASCRIPT_2015
Distance : 5

106
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } StringBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } StringBuilder
Distance : 5

107
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } size
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } size
Distance : 5

108
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } MutableTimePeriod
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } MutableTimePeriod
Distance : 5

109
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } get
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } get
Distance : 5

110
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } char
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } char
Distance : 5

111
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } static
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } static
Distance : 5

112
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } JSType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } JSType
Distance : 5

113
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } return;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } return;
Distance : 5

114
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isEmpty
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } isEmpty
Distance : 5

115
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } chrono
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } chrono
Distance : 5

116
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } mockingProgress
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } mockingProgress
Distance : 5

117
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } clone
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } clone
Distance : 5

118
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Double
Distance : 5

119
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } PeriodType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } PeriodType
Distance : 5

120
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } <=
Distance : 5

121
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } a
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } a
Distance : 5

122
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkNotNull
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } checkNotNull
Distance : 5

123
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } compiler
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } compiler
Distance : 5

124
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } void
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } void
Distance : 5

125
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getFirstChild
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getFirstChild
Distance : 5

126
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } append
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } append
Distance : 5

127
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } sb
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } sb
Distance : 5

128
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } returnZero
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } returnZero
Distance : 5

129
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Fraction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Fraction
Distance : 5

130
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } !
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } !
Distance : 5

131
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } nullNotPermitted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } nullNotPermitted
Distance : 5

132
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ==
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ==
Distance : 5

133
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } []
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } []
Distance : 5

134
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } @
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } @
Distance : 5

135
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } verify
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } verify
Distance : 5

136
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } boolean
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } boolean
Distance : 5

137
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } i
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } i
Distance : 5

138
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } result
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } result
Distance : 5

139
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Class
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Class
Distance : 5

140
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } options
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } options
Distance : 5

141
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Math
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Math
Distance : 5

142
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } p
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } p
Distance : 5

143
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } source
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } source
Distance : 5

144
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Exception
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Exception
Distance : 5

145
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } join
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } join
Distance : 5

146
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } m
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } m
Distance : 5

147
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } paint
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } paint
Distance : 5

148
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getInstance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } getInstance
Distance : 5

149
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } type
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } type
Distance : 5

150
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } serialised
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } serialised
Distance : 5

151
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } fireChangeEvent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } fireChangeEvent
Distance : 5

152
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } sqrt
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } sqrt
Distance : 5

153
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } array
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } array
Distance : 5

154
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } throws
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } throws
Distance : 5

155
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } name
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } name
Distance : 5

156
Tree	{ return ( T ) reportMatcher () ; } super
Code	{ return ( T ) reportMatcher () ; } super
Distance : 6

157
Tree	{ return ( T ) reportMatcher () ; } mode
Code	{ return ( T ) reportMatcher () ; } mode
Distance : 6

158
Tree	{ return ( T ) reportMatcher () ; } MathRuntimeException
Code	{ return ( T ) reportMatcher () ; } MathRuntimeException
Distance : 6

159
Tree	{ return ( T ) reportMatcher () ; } mock
Code	{ return ( T ) reportMatcher () ; } mock
Distance : 6

160
Tree	{ return ( T ) reportMatcher () ; } >
Code	{ return ( T ) reportMatcher () ; } >
Distance : 6

161
Tree	{ return ( T ) reportMatcher () ; } if
Code	{ return ( T ) reportMatcher () ; } if
Distance : 6

162
Tree	{ return ( T ) reportMatcher () ; } final
Code	{ return ( T ) reportMatcher () ; } final
Distance : 6

163
Tree	{ return ( T ) reportMatcher () ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher () ; } STRING_CONSTANT
Distance : 6

164
Tree	{ return ( T ) reportMatcher () ; } .
Code	{ return ( T ) reportMatcher () ; } .
Distance : 6

165
Tree	{ return ( T ) reportMatcher () ; } =
Code	{ return ( T ) reportMatcher () ; } =
Distance : 6

166
Tree	{ return reportMatcher () ; } stroke
Code	{ return reportMatcher () ; } stroke
Distance : 9

167
Tree	{ return reportMatcher () ; } <=
Code	{ return reportMatcher () ; } <=
Distance : 9

168
Tree	{ return reportMatcher () ; } MutableTimePeriod
Code	{ return reportMatcher () ; } MutableTimePeriod
Distance : 9

169
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } v
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } v
Distance : 5

170
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } c
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } c
Distance : 5

171
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } lines
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } lines
Distance : 5

172
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Integer
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Integer
Distance : 5

173
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } Node
Distance : 5

174
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } length
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } length
Distance : 5

175
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } b
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } b
Distance : 5

176
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } scope
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } scope
Distance : 5

177
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } IllegalArgumentException
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } IllegalArgumentException
Distance : 5

178
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } invocation
Distance : 5

179
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } FastMath
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } FastMath
Distance : 5

180
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } t
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } t
Distance : 5

181
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } reportCodeChange
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } reportCodeChange
Distance : 5

182
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } field
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } field
Distance : 5

183
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } UnivariateFunction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } UnivariateFunction
Distance : 5

184
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throw
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } throw
Distance : 5

185
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } f
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } f
Distance : 5

186
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ParamChecks
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; } ParamChecks
Distance : 5

187
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } final
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } final
Distance : 5

188
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } this
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } this
Distance : 5

189
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } public
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } public
Distance : 5

190
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } if
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } if
Distance : 5

191
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } null
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } null
Distance : 5

192
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } [
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } [
Distance : 5

193
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } super
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } super
Distance : 5

194
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkState
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } checkState
Distance : 5

195
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } false
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } false
Distance : 5

196
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } true
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } true
Distance : 5

197
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } -
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } -
Distance : 5

198
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } &&
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } &&
Distance : 5

199
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } data
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; } data
Distance : 5

========================================================================


========================================================================
Example Number: 97
Parent Code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( new InstanceOf ( clazz ) ) . returnFor ( clazz ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnFor}) (214{val=(}) (800{val=clazz}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (800{val=clazz}) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnFor}) (214{val=(}) (800{val=clazz}) (215{val=)}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 5
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher () ; }
Code	{ return reportMatcher () ; }
Distance : 15

1
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtilities
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } TestUtilities
Distance : 6

2
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Invocation
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Invocation
Distance : 6

3
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } =
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } =
Distance : 6

4
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } m
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } m
Distance : 6

5
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sb
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } sb
Distance : 6

6
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } scope
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } scope
Distance : 6

7
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getFirstChild
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getFirstChild
Distance : 6

8
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throws
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } throws
Distance : 6

9
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } append
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } append
Distance : 6

10
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } UnivariateFunction
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } UnivariateFunction
Distance : 6

11
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } returnZero
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } returnZero
Distance : 6

12
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isBlock
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isBlock
Distance : 6

13
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } d
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } d
Distance : 6

14
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } boolean
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } boolean
Distance : 6

15
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isEmpty
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } isEmpty
Distance : 6

16
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } >
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } >
Distance : 6

17
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setAcceptedLanguage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setAcceptedLanguage
Distance : 6

18
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } null
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } null
Distance : 6

19
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } +
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } +
Distance : 6

20
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StrBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StrBuilder
Distance : 6

21
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } out
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } out
Distance : 6

22
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setUp
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } setUp
Distance : 6

23
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mockingProgress
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } mockingProgress
Distance : 6

24
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } super
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } super
Distance : 6

25
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !=
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !=
Distance : 6

26
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertEquals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } assertEquals
Distance : 6

27
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } !
Distance : 6

28
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } []
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } []
Distance : 6

29
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } nullNotPermitted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } nullNotPermitted
Distance : 6

30
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } test
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } test
Distance : 6

31
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } @
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } @
Distance : 6

32
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } int
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } int
Distance : 6

33
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } false
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } false
Distance : 6

34
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } this
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } this
Distance : 6

35
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } public
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } public
Distance : 6

36
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } equals
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } equals
Distance : 6

37
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } js
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } js
Distance : 6

38
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } get
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } get
Distance : 6

39
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } JSType
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } JSType
Distance : 6

40
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } char
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } char
Distance : 6

41
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } chrono
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } chrono
Distance : 6

42
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return;
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return;
Distance : 6

43
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StringBuilder
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } StringBuilder
Distance : 6

44
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } protected
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } protected
Distance : 6

45
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } values
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } values
Distance : 6

46
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } node
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } node
Distance : 6

47
Tree	{ return ( T ) reportMatcher ( clazz ) ; } array
Code	{ return ( T ) reportMatcher ( clazz ) ; } array
Distance : 10

48
Tree	{ return ( T ) reportMatcher ( clazz ) ; } ParamChecks
Code	{ return ( T ) reportMatcher ( clazz ) ; } ParamChecks
Distance : 10

49
Tree	{ return ( T ) reportMatcher ( clazz ) ; } f
Code	{ return ( T ) reportMatcher ( clazz ) ; } f
Distance : 10

50
Tree	{ return ( T ) reportMatcher ( clazz ) ; } Override
Code	{ return ( T ) reportMatcher ( clazz ) ; } Override
Distance : 10

51
Tree	{ return ( T ) reportMatcher ( clazz ) ; } mock
Code	{ return ( T ) reportMatcher ( clazz ) ; } mock
Distance : 10

52
Tree	{ return ( T ) reportMatcher ( clazz ) ; } Object
Code	{ return ( T ) reportMatcher ( clazz ) ; } Object
Distance : 10

53
Tree	{ return ( T ) reportMatcher ( clazz ) ; } class
Code	{ return ( T ) reportMatcher ( clazz ) ; } class
Distance : 10

54
Tree	{ return ( T ) reportMatcher ( clazz ) ; } try
Code	{ return ( T ) reportMatcher ( clazz ) ; } try
Distance : 10

55
Tree	{ return ( T ) reportMatcher ( clazz ) ; } fail
Code	{ return ( T ) reportMatcher ( clazz ) ; } fail
Distance : 10

56
Tree	{ return ( T ) reportMatcher ( clazz ) ; } Args
Code	{ return ( T ) reportMatcher ( clazz ) ; } Args
Distance : 10

57
Tree	{ return ( T ) reportMatcher ( clazz ) ; } List
Code	{ return ( T ) reportMatcher ( clazz ) ; } List
Distance : 10

58
Tree	{ return ( T ) reportMatcher ( clazz ) ; } result
Code	{ return ( T ) reportMatcher ( clazz ) ; } result
Distance : 10

59
Tree	{ return ( T ) reportMatcher ( clazz ) ; } :
Code	{ return ( T ) reportMatcher ( clazz ) ; } :
Distance : 10

60
Tree	{ return ( T ) reportMatcher ( clazz ) ; } boolean
Code	{ return ( T ) reportMatcher ( clazz ) ; } boolean
Distance : 10

61
Tree	{ return ( T ) reportMatcher ( clazz ) ; } m
Code	{ return ( T ) reportMatcher ( clazz ) ; } m
Distance : 10

62
Tree	{ return ( T ) reportMatcher ( clazz ) ; } Node
Code	{ return ( T ) reportMatcher ( clazz ) ; } Node
Distance : 10

63
Tree	{ return ( T ) reportMatcher ( clazz ) ; } Exception
Code	{ return ( T ) reportMatcher ( clazz ) ; } Exception
Distance : 10

64
Tree	{ return ( T ) reportMatcher ( clazz ) ; } lines
Code	{ return ( T ) reportMatcher ( clazz ) ; } lines
Distance : 10

65
Tree	{ return ( T ) reportMatcher ( clazz ) ; } verify
Code	{ return ( T ) reportMatcher ( clazz ) ; } verify
Distance : 10

66
Tree	{ return ( T ) reportMatcher ( clazz ) ; } <>
Code	{ return ( T ) reportMatcher ( clazz ) ; } <>
Distance : 10

67
Tree	{ return ( T ) reportMatcher ( clazz ) ; } ArrayList
Code	{ return ( T ) reportMatcher ( clazz ) ; } ArrayList
Distance : 10

68
Tree	{ return ( T ) reportMatcher ( clazz ) ; } fireChangeEvent
Code	{ return ( T ) reportMatcher ( clazz ) ; } fireChangeEvent
Distance : 10

69
Tree	{ return ( T ) reportMatcher ( clazz ) ; } getInstance
Code	{ return ( T ) reportMatcher ( clazz ) ; } getInstance
Distance : 10

70
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getParent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getParent
Distance : 6

71
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } index
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } index
Distance : 6

72
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocations
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } invocations
Distance : 6

73
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } static
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } static
Distance : 6

74
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportMatcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } reportMatcher
Distance : 6

75
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } matcher
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } matcher
Distance : 6

76
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } abs
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } abs
Distance : 6

77
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } try
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } try
Distance : 6

78
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fail
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fail
Distance : 6

79
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stream
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } stream
Distance : 6

80
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Args
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Args
Distance : 6

81
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } result
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } result
Distance : 6

82
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } :
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } :
Distance : 6

83
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } else
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } else
Distance : 6

84
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getMessage
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getMessage
Distance : 6

85
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } instant
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } instant
Distance : 6

86
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } }
Distance : 6

87
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } name
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } name
Distance : 6

88
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } (
Distance : 6

89
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <s>
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <s>
Distance : 6

90
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } List
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } List
Distance : 6

91
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } double
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } double
Distance : 6

92
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 14

93
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } i
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } i
Distance : 6

94
Tree	{ return ( T ) returnFor ( clazz ) ; }
Code	{ return ( T ) returnFor ( clazz ) ; }
Distance : 9

95
Tree	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 6

96
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) ; }
Distance : 11

97
Tree	{ return ( T ) returnFor ( Any.ANY ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) ; }
Distance : 10

98
Tree	{ return this . clazz . returnFor ( T ) ; }
Code	{ return this . clazz . returnFor ( T ) ; }
Distance : 11

99
Tree	{ return this . T . returnFor ( clazz ) ; }
Code	{ return this . T . returnFor ( clazz ) ; }
Distance : 11

100
Tree	{ return this . T . reportMatcher ( T ) ; }
Code	{ return this . T . reportMatcher ( T ) ; }
Distance : 13

101
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 14

102
Tree	{ returnFor ( Any.ANY ) ; return return; ; }
Code	{ returnFor ( Any.ANY ) ; return return; ; }
Distance : 15

103
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Distance : 6

104
Tree	{ returnFor ( Any.ANY ) ; return super(); ; }
Code	{ returnFor ( Any.ANY ) ; return super(); ; }
Distance : 15

105
Tree	{ return reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Distance : 9

106
Tree	{ returnFor ( Any.ANY ) ; return continue; ; }
Code	{ returnFor ( Any.ANY ) ; return continue; ; }
Distance : 15

107
Tree	{ return returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 10

108
Tree	{ returnFor ( Any.ANY ) ; return break; ; }
Code	{ returnFor ( Any.ANY ) ; return break; ; }
Distance : 15

109
Tree	{ return this . clazz . returnFor ( clazz ) ; }
Code	{ return this . clazz . returnFor ( clazz ) ; }
Distance : 10

110
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 7

111
Tree	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 7

112
Tree	{ return this . clazz . reportMatcher ( T ) ; }
Code	{ return this . clazz . reportMatcher ( T ) ; }
Distance : 12

113
Tree	{ return ( T ) reportMatcher ( T ) ; }
Code	{ return ( T ) reportMatcher ( T ) ; }
Distance : 10

114
Tree	{ return this . T . reportMatcher ( clazz ) ; }
Code	{ return this . T . reportMatcher ( clazz ) ; }
Distance : 12

115
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 6

116
Tree	{ return returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 9

117
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } value
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } value
Distance : 6

118
Tree	{ return ( T ) reportMatcher ( clazz ) ; }
Code	{ return ( T ) reportMatcher ( clazz ) ; }
Distance : 9

119
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 5

120
Tree	{ return ( T ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) ; }
Distance : 10

121
Tree	{ return reportMatcher ( Any.ANY ) ; }
Code	{ return reportMatcher ( Any.ANY ) ; }
Distance : 13

122
Tree	{ return reportMatcher ( this , T ) ; }
Code	{ return reportMatcher ( this , T ) ; }
Distance : 13

123
Tree	{ return reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 8

124
Tree	{ return reportMatcher ( this , clazz ) ; }
Code	{ return reportMatcher ( this , clazz ) ; }
Distance : 12

125
Tree	{ return returnFor () ; }
Code	{ return returnFor () ; }
Distance : 15

126
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 14

127
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 14

128
Tree	{ return this . T . returnFor ( T ) ; }
Code	{ return this . T . returnFor ( T ) ; }
Distance : 12

129
Tree	{ returnFor ( Any.ANY ) ; return null ; }
Code	{ returnFor ( Any.ANY ) ; return null ; }
Distance : 15

130
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 6

131
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 14

132
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 9

133
Tree	{ return returnFor ( Any.ANY ) ; }
Code	{ return returnFor ( Any.ANY ) ; }
Distance : 13

134
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 14

135
Tree	{ return returnFor ( this , T ) ; }
Code	{ return returnFor ( this , T ) ; }
Distance : 14

136
Tree	{ return ( clazz ) reportMatcher ( clazz ) ; }
Code	{ return ( clazz ) reportMatcher ( clazz ) ; }
Distance : 10

137
Tree	{ return ( clazz ) returnFor ( clazz ) ; }
Code	{ return ( clazz ) returnFor ( clazz ) ; }
Distance : 9

138
Tree	{ return returnFor ( this , clazz ) ; }
Code	{ return returnFor ( this , clazz ) ; }
Distance : 13

139
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( clazz ) ; }
Distance : 7

140
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fireChangeEvent
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } fireChangeEvent
Distance : 6

141
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkArgument
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkArgument
Distance : 6

142
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } if
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } if
Distance : 6

143
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } *
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } *
Distance : 6

144
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } paint
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } paint
Distance : 6

145
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } join
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } join
Distance : 6

146
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } serialised
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } serialised
Distance : 6

147
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getInstance
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } getInstance
Distance : 6

148
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } for
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } for
Distance : 6

149
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ArrayList
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ArrayList
Distance : 6

150
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } final
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } final
Distance : 6

151
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ()
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } ()
Distance : 6

152
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } {
Distance : 6

153
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } new
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } new
Distance : 6

154
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } STRING_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } STRING_CONSTANT
Distance : 6

155
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NUMBER_CONSTANT
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NUMBER_CONSTANT
Distance : 6

156
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } return
Distance : 6

157
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } &&
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } &&
Distance : 6

158
Tree	{ return ( clazz ) reportMatcher ( T ) ; }
Code	{ return ( clazz ) reportMatcher ( T ) ; }
Distance : 11

159
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } T
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } T
Distance : 6

160
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkState
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } checkState
Distance : 6

161
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } type
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } type
Distance : 6

162
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } data
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } data
Distance : 6

163
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Math
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } Math
Distance : 6

164
Tree	{ return ( T ) returnFor ( T ) ; }
Code	{ return ( T ) returnFor ( T ) ; }
Distance : 10

165
Tree	{ returnFor ( Any.ANY ) ; return default: ; }
Code	{ returnFor ( Any.ANY ) ; return default: ; }
Distance : 15

166
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 10

167
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( T ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 7

168
Tree	{ return returnFor ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return returnFor ( Any.ANY ) . returnFor ( T ) ; }
Distance : 10

169
Tree	{ return this . clazz . reportMatcher ( clazz ) ; }
Code	{ return this . clazz . reportMatcher ( clazz ) ; }
Distance : 11

170
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . returnFor ( T ) ; }
Distance : 7

171
Tree	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Distance : 7

172
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( clazz ) ; }
Distance : 8

173
Tree	{ return returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 11

174
Tree	{ return ( clazz ) returnFor ( Any.ANY ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) ; }
Distance : 10

175
Tree	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( clazz ) reportMatcher ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 8

176
Tree	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( T ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 8

177
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . returnFor ( T ) ; }
Distance : 8

178
Tree	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Code	{ return ( clazz ) returnFor ( Any.ANY ) . reportMatcher ( T ) ; }
Distance : 9

179
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } <
Distance : 6

180
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeUtil
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } NodeUtil
Distance : 6

181
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } root
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } root
Distance : 6

182
Tree	{ return ( clazz ) returnFor ( T ) ; }
Code	{ return ( clazz ) returnFor ( T ) ; }
Distance : 10

183
Tree	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } wanted
Code	{ return ( T ) reportMatcher ( Any.ANY ) . returnFor ( clazz ) ; } wanted
Distance : 6

184
Tree	{ return reportMatcher () ; } sb
Code	{ return reportMatcher () ; } sb
Distance : 16

185
Tree	{ return reportMatcher () ; } invocations
Code	{ return reportMatcher () ; } invocations
Distance : 16

186
Tree	{ return reportMatcher () ; } index
Code	{ return reportMatcher () ; } index
Distance : 16

187
Tree	{ return reportMatcher () ; } simpleMethod
Code	{ return reportMatcher () ; } simpleMethod
Distance : 16

188
Tree	{ return reportMatcher () ; } clone
Code	{ return reportMatcher () ; } clone
Distance : 16

189
Tree	{ return reportMatcher () ; } getFirstChild
Code	{ return reportMatcher () ; } getFirstChild
Distance : 16

190
Tree	{ return reportMatcher () ; } setUp
Code	{ return reportMatcher () ; } setUp
Distance : 16

191
Tree	{ return reportMatcher () ; } sqrt
Code	{ return reportMatcher () ; } sqrt
Distance : 16

192
Tree	{ return reportMatcher () ; } throws
Code	{ return reportMatcher () ; } throws
Distance : 16

193
Tree	{ return reportMatcher () ; } matcher
Code	{ return reportMatcher () ; } matcher
Distance : 16

194
Tree	{ return reportMatcher () ; } static
Code	{ return reportMatcher () ; } static
Distance : 16

195
Tree	{ return reportMatcher () ; } return;
Code	{ return reportMatcher () ; } return;
Distance : 16

196
Tree	{ return reportMatcher () ; } get
Code	{ return reportMatcher () ; } get
Distance : 16

197
Tree	{ return reportMatcher () ; } isEmpty
Code	{ return reportMatcher () ; } isEmpty
Distance : 16

198
Tree	{ return reportMatcher () ; } setAcceptedLanguage
Code	{ return reportMatcher () ; } setAcceptedLanguage
Distance : 16

199
Tree	{ return reportMatcher () ; } JSType
Code	{ return reportMatcher () ; } JSType
Distance : 16

========================================================================


========================================================================
Example Number: 98
Parent Code is: 
{ return ( T ) reportMatcher ( Any.ANY ) . returnNull () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return ( T ) reportMatcher ( new InstanceOf ( Object . class ) ) . returnNull () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (11 (214{val=(}) (43 (800{val=T})) (215{val=)}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Object})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnNull}) (216{val=()}))) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ return reportMatcher () ; } invocation
Code	{ return reportMatcher () ; } invocation
Distance : 15

1
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } if
Code	{ reportMatcher ( Any.ANY ) ; return null ; } if
Distance : 15

2
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } value
Code	{ reportMatcher ( Any.ANY ) ; return null ; } value
Distance : 15

3
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } i
Code	{ reportMatcher ( Any.ANY ) ; return null ; } i
Distance : 15

4
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } T
Code	{ reportMatcher ( Any.ANY ) ; return null ; } T
Distance : 15

5
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } &&
Code	{ reportMatcher ( Any.ANY ) ; return null ; } &&
Distance : 15

6
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } int
Code	{ reportMatcher ( Any.ANY ) ; return null ; } int
Distance : 15

7
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } root
Code	{ reportMatcher ( Any.ANY ) ; return null ; } root
Distance : 15

8
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } @
Code	{ reportMatcher ( Any.ANY ) ; return null ; } @
Distance : 15

9
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } test
Code	{ reportMatcher ( Any.ANY ) ; return null ; } test
Distance : 15

10
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkState
Distance : 15

11
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } double
Distance : 15

12
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } super
Code	{ reportMatcher ( Any.ANY ) ; return null ; } super
Distance : 15

13
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <
Distance : 15

14
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !=
Distance : 15

15
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Code	{ reportMatcher ( Any.ANY ) ; return null ; } instant
Distance : 15

16
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getMessage
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getMessage
Distance : 15

17
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } else
Code	{ reportMatcher ( Any.ANY ) ; return null ; } else
Distance : 15

18
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } values
Code	{ reportMatcher ( Any.ANY ) ; return null ; } values
Distance : 15

19
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } protected
Distance : 15

20
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } out
Code	{ reportMatcher ( Any.ANY ) ; return null ; } out
Distance : 15

21
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } STRING_CONSTANT
Distance : 15

22
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NUMBER_CONSTANT
Distance : 15

23
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return
Distance : 15

24
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ,
Distance : 15

25
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ex
Distance : 15

26
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeTraversal
Distance : 15

27
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } matcher
Distance : 15

28
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } this
Code	{ reportMatcher ( Any.ANY ) ; return null ; } this
Distance : 15

29
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } final
Code	{ reportMatcher ( Any.ANY ) ; return null ; } final
Distance : 15

30
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <blank>
Distance : 15

31
Tree	{ return reportMatcher () ; } T
Code	{ return reportMatcher () ; } T
Distance : 15

32
Tree	{ return reportMatcher () ; } &&
Code	{ return reportMatcher () ; } &&
Distance : 15

33
Tree	{ return reportMatcher () ; } ]
Code	{ return reportMatcher () ; } ]
Distance : 15

34
Tree	{ return reportMatcher () ; } [
Code	{ return reportMatcher () ; } [
Distance : 15

35
Tree	{ return reportMatcher () ; } Object
Code	{ return reportMatcher () ; } Object
Distance : 15

36
Tree	{ return reportMatcher () ; } class
Code	{ return reportMatcher () ; } class
Distance : 15

37
Tree	{ return reportMatcher () ; } test
Code	{ return reportMatcher () ; } test
Distance : 15

38
Tree	{ return reportMatcher () ; } @
Code	{ return reportMatcher () ; } @
Distance : 15

39
Tree	{ return reportMatcher () ; } !
Code	{ return reportMatcher () ; } !
Distance : 15

40
Tree	{ return reportMatcher () ; } assertEquals
Code	{ return reportMatcher () ; } assertEquals
Distance : 15

41
Tree	{ return reportMatcher () ; } ==
Code	{ return reportMatcher () ; } ==
Distance : 15

42
Tree	{ return reportMatcher () ; } void
Code	{ return reportMatcher () ; } void
Distance : 15

43
Tree	{ return reportMatcher () ; } []
Code	{ return reportMatcher () ; } []
Distance : 15

44
Tree	{ return reportMatcher () ; } nullNotPermitted
Code	{ return reportMatcher () ; } nullNotPermitted
Distance : 15

45
Tree	{ return reportMatcher () ; } checkState
Code	{ return reportMatcher () ; } checkState
Distance : 15

46
Tree	{ return reportMatcher () ; } double
Code	{ return reportMatcher () ; } double
Distance : 15

47
Tree	{ return reportMatcher () ; } int
Code	{ return reportMatcher () ; } int
Distance : 15

48
Tree	{ return reportMatcher () ; } false
Code	{ return reportMatcher () ; } false
Distance : 15

49
Tree	{ return reportMatcher () ; } !=
Code	{ return reportMatcher () ; } !=
Distance : 15

50
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } c
Code	{ reportMatcher ( Any.ANY ) ; return null ; } c
Distance : 15

51
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } wanted
Distance : 15

52
Tree	{ return reportMatcher () ; } solver
Code	{ return reportMatcher () ; } solver
Distance : 15

53
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } false
Code	{ reportMatcher ( Any.ANY ) ; return null ; } false
Distance : 15

54
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } new
Code	{ reportMatcher ( Any.ANY ) ; return null ; } new
Distance : 15

55
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } (
Code	{ reportMatcher ( Any.ANY ) ; return null ; } (
Distance : 15

56
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <s>
Distance : 15

57
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } return
Code	{ reportMatcher ( Any.ANY ) ; return null ; } return
Distance : 15

58
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Code	{ reportMatcher ( Any.ANY ) ; return null ; } checkArgument
Distance : 15

59
Tree	{ return reportMatcher () ; } Preconditions
Code	{ return reportMatcher () ; } Preconditions
Distance : 15

60
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } data
Code	{ reportMatcher ( Any.ANY ) ; return null ; } data
Distance : 15

61
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } String
Code	{ reportMatcher ( Any.ANY ) ; return null ; } String
Distance : 15

62
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } PeriodType
Distance : 15

63
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } b
Code	{ reportMatcher ( Any.ANY ) ; return null ; } b
Distance : 15

64
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } contains
Code	{ reportMatcher ( Any.ANY ) ; return null ; } contains
Distance : 15

65
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isNormalBlock
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isNormalBlock
Distance : 15

66
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } public
Code	{ reportMatcher ( Any.ANY ) ; return null ; } public
Distance : 15

67
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } >
Code	{ reportMatcher ( Any.ANY ) ; return null ; } >
Distance : 15

68
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } null
Code	{ reportMatcher ( Any.ANY ) ; return null ; } null
Distance : 15

69
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } +
Code	{ reportMatcher ( Any.ANY ) ; return null ; } +
Distance : 15

70
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } x
Code	{ reportMatcher ( Any.ANY ) ; return null ; } x
Distance : 15

71
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Code	{ reportMatcher ( Any.ANY ) ; return null ; } testSame
Distance : 15

72
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } parent
Distance : 15

73
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } createIllegalArgumentException
Distance : 15

74
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isEmpty
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isEmpty
Distance : 15

75
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Code	{ reportMatcher ( Any.ANY ) ; return null ; } serialised
Distance : 15

76
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Code	{ reportMatcher ( Any.ANY ) ; return null ; } fireChangeEvent
Distance : 15

77
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ArrayList
Distance : 15

78
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Code	{ reportMatcher ( Any.ANY ) ; return null ; } toString
Distance : 15

79
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } source
Code	{ reportMatcher ( Any.ANY ) ; return null ; } source
Distance : 15

80
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 15

81
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } p
Code	{ reportMatcher ( Any.ANY ) ; return null ; } p
Distance : 15

82
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Code	{ reportMatcher ( Any.ANY ) ; return null ; } NodeUtil
Distance : 15

83
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } setAcceptedLanguage
Code	{ reportMatcher ( Any.ANY ) ; return null ; } setAcceptedLanguage
Distance : 15

84
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } StringBuilder
Code	{ reportMatcher ( Any.ANY ) ; return null ; } StringBuilder
Distance : 15

85
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 15

86
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } mockingProgress
Code	{ reportMatcher ( Any.ANY ) ; return null ; } mockingProgress
Distance : 15

87
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 15

88
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getInstance
Distance : 15

89
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } get
Code	{ reportMatcher ( Any.ANY ) ; return null ; } get
Distance : 15

90
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } JSType
Code	{ reportMatcher ( Any.ANY ) ; return null ; } JSType
Distance : 15

91
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } char
Code	{ reportMatcher ( Any.ANY ) ; return null ; } char
Distance : 15

92
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } e
Code	{ reportMatcher ( Any.ANY ) ; return null ; } e
Distance : 15

93
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } n
Code	{ reportMatcher ( Any.ANY ) ; return null ; } n
Distance : 15

94
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } field
Code	{ reportMatcher ( Any.ANY ) ; return null ; } field
Distance : 15

95
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } t
Code	{ reportMatcher ( Any.ANY ) ; return null ; } t
Distance : 15

96
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } name
Code	{ reportMatcher ( Any.ANY ) ; return null ; } name
Distance : 15

97
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } add
Code	{ reportMatcher ( Any.ANY ) ; return null ; } add
Distance : 15

98
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Code	{ reportMatcher ( Any.ANY ) ; return null ; } invocation
Distance : 15

99
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertThat
Distance : 15

100
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Code	{ reportMatcher ( Any.ANY ) ; return null ; } LINE_JOINER
Distance : 15

101
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } str
Code	{ reportMatcher ( Any.ANY ) ; return null ; } str
Distance : 15

102
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ]
Distance : 15

103
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } [
Code	{ reportMatcher ( Any.ANY ) ; return null ; } [
Distance : 15

104
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Preconditions
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Preconditions
Distance : 15

105
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } -
Code	{ reportMatcher ( Any.ANY ) ; return null ; } -
Distance : 15

106
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } =
Code	{ reportMatcher ( Any.ANY ) ; return null ; } =
Distance : 15

107
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } }
Code	{ reportMatcher ( Any.ANY ) ; return null ; } }
Distance : 15

108
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ()
Distance : 15

109
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } {
Code	{ reportMatcher ( Any.ANY ) ; return null ; } {
Distance : 15

110
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ;
Distance : 15

111
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } )
Code	{ reportMatcher ( Any.ANY ) ; return null ; } )
Distance : 15

112
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } .
Code	{ reportMatcher ( Any.ANY ) ; return null ; } .
Distance : 15

113
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Code	{ reportMatcher ( Any.ANY ) ; return null ; } stream
Distance : 15

114
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } m
Code	{ reportMatcher ( Any.ANY ) ; return null ; } m
Distance : 15

115
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Code	{ reportMatcher ( Any.ANY ) ; return null ; } boolean
Distance : 15

116
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } static
Code	{ reportMatcher ( Any.ANY ) ; return null ; } static
Distance : 15

117
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportMatcher
Distance : 15

118
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } abs
Distance : 15

119
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Code	{ reportMatcher ( Any.ANY ) ; return null ; } compiler
Distance : 15

120
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } isBlock
Code	{ reportMatcher ( Any.ANY ) ; return null ; } isBlock
Distance : 15

121
Tree	{ return reportMatcher () ; } -
Code	{ return reportMatcher () ; } -
Distance : 15

122
Tree	{ return reportMatcher () ; } f
Code	{ return reportMatcher () ; } f
Distance : 15

123
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Double
Distance : 15

124
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Code	{ reportMatcher ( Any.ANY ) ; return null ; } IllegalArgumentException
Distance : 15

125
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Code	{ reportMatcher ( Any.ANY ) ; return null ; } FastMath
Distance : 15

126
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Code	{ reportMatcher ( Any.ANY ) ; return null ; } expected
Distance : 15

127
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Code	{ reportMatcher ( Any.ANY ) ; return null ; } reportCodeChange
Distance : 15

128
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throws
Distance : 15

129
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Code	{ reportMatcher ( Any.ANY ) ; return null ; } getFirstChild
Distance : 15

130
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Code	{ reportMatcher ( Any.ANY ) ; return null ; } scope
Distance : 15

131
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sb
Distance : 15

132
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Integer
Distance : 15

133
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } length
Code	{ reportMatcher ( Any.ANY ) ; return null ; } length
Distance : 15

134
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Code	{ reportMatcher ( Any.ANY ) ; return null ; } Math
Distance : 15

135
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Code	{ reportMatcher ( Any.ANY ) ; return null ; } <=
Distance : 15

136
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } long
Code	{ reportMatcher ( Any.ANY ) ; return null ; } long
Distance : 15

137
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } void
Code	{ reportMatcher ( Any.ANY ) ; return null ; } void
Distance : 15

138
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Code	{ reportMatcher ( Any.ANY ) ; return null ; } catch
Distance : 15

139
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Code	{ reportMatcher ( Any.ANY ) ; return null ; } throw
Distance : 15

140
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Code	{ reportMatcher ( Any.ANY ) ; return null ; } nullNotPermitted
Distance : 15

141
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } []
Code	{ reportMatcher ( Any.ANY ) ; return null ; } []
Distance : 15

142
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } !
Code	{ reportMatcher ( Any.ANY ) ; return null ; } !
Distance : 15

143
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertEquals
Distance : 15

144
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Code	{ reportMatcher ( Any.ANY ) ; return null ; } externs
Distance : 15

145
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Code	{ reportMatcher ( Any.ANY ) ; return null ; } assertTrue
Distance : 15

146
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ?
Distance : 15

147
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } /
Code	{ reportMatcher ( Any.ANY ) ; return null ; } /
Distance : 15

148
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } a
Code	{ reportMatcher ( Any.ANY ) ; return null ; } a
Distance : 15

149
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Code	{ reportMatcher ( Any.ANY ) ; return null ; } ==
Distance : 15

150
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Code	{ reportMatcher ( Any.ANY ) ; return null ; } clone
Distance : 15

151
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Code	{ reportMatcher ( Any.ANY ) ; return null ; } sqrt
Distance : 15

152
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } v
Code	{ reportMatcher ( Any.ANY ) ; return null ; } v
Distance : 15

153
Tree	{ return ( T ) reportMatcher ( T ) ; } TestUtilities
Code	{ return ( T ) reportMatcher ( T ) ; } TestUtilities
Distance : 11

154
Tree	{ return ( T ) reportMatcher ( T ) ; } StrBuilder
Code	{ return ( T ) reportMatcher ( T ) ; } StrBuilder
Distance : 11

155
Tree	{ return ( T ) reportMatcher ( T ) ; } setUp
Code	{ return ( T ) reportMatcher ( T ) ; } setUp
Distance : 11

156
Tree	{ return ( T ) reportMatcher () ; } toString
Code	{ return ( T ) reportMatcher () ; } toString
Distance : 12

157
Tree	{ return ( T ) reportMatcher () ; } source
Code	{ return ( T ) reportMatcher () ; } source
Distance : 12

158
Tree	{ return ( T ) reportMatcher () ; } options
Code	{ return ( T ) reportMatcher () ; } options
Distance : 12

159
Tree	{ return ( T ) reportMatcher () ; } p
Code	{ return ( T ) reportMatcher () ; } p
Distance : 12

160
Tree	{ return ( T ) reportMatcher () ; } &&
Code	{ return ( T ) reportMatcher () ; } &&
Distance : 12

161
Tree	{ return ( T ) reportMatcher () ; } T
Code	{ return ( T ) reportMatcher () ; } T
Distance : 12

162
Tree	{ return ( T ) reportMatcher () ; } i
Code	{ return ( T ) reportMatcher () ; } i
Distance : 12

163
Tree	{ return ( T ) reportMatcher () ; } value
Code	{ return ( T ) reportMatcher () ; } value
Distance : 12

164
Tree	{ return ( T ) reportMatcher () ; } class
Code	{ return ( T ) reportMatcher () ; } class
Distance : 12

165
Tree	{ return ( T ) reportMatcher () ; } Object
Code	{ return ( T ) reportMatcher () ; } Object
Distance : 12

166
Tree	{ return ( T ) reportMatcher () ; } mock
Code	{ return ( T ) reportMatcher () ; } mock
Distance : 12

167
Tree	{ return ( T ) reportMatcher () ; } Override
Code	{ return ( T ) reportMatcher () ; } Override
Distance : 12

168
Tree	{ return ( T ) reportMatcher () ; } assertEquals
Code	{ return ( T ) reportMatcher () ; } assertEquals
Distance : 12

169
Tree	{ return ( T ) reportMatcher () ; } !
Code	{ return ( T ) reportMatcher () ; } !
Distance : 12

170
Tree	{ return ( T ) reportMatcher () ; } []
Code	{ return ( T ) reportMatcher () ; } []
Distance : 12

171
Tree	{ return ( T ) reportMatcher () ; } nullNotPermitted
Code	{ return ( T ) reportMatcher () ; } nullNotPermitted
Distance : 12

172
Tree	{ return ( T ) reportMatcher () ; } throw
Code	{ return ( T ) reportMatcher () ; } throw
Distance : 12

173
Tree	{ return ( T ) reportMatcher () ; } catch
Code	{ return ( T ) reportMatcher () ; } catch
Distance : 12

174
Tree	{ return ( T ) reportMatcher () ; } void
Code	{ return ( T ) reportMatcher () ; } void
Distance : 12

175
Tree	{ return ( T ) reportMatcher () ; } ==
Code	{ return ( T ) reportMatcher () ; } ==
Distance : 12

176
Tree	{ return ( T ) reportMatcher () ; } false
Code	{ return ( T ) reportMatcher () ; } false
Distance : 12

177
Tree	{ return ( T ) reportMatcher ( Any.ANY ) ; } <=
Code	{ return ( T ) reportMatcher ( Any.ANY ) ; } <=
Distance : 11

178
Tree	{ return ( T ) reportMatcher ( Any.ANY ) ; } a
Code	{ return ( T ) reportMatcher ( Any.ANY ) ; } a
Distance : 11

179
Tree	{ return ( T ) reportMatcher ( Any.ANY ) ; } throws
Code	{ return ( T ) reportMatcher ( Any.ANY ) ; } throws
Distance : 11

180
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } s
Code	{ reportMatcher ( Any.ANY ) ; return null ; } s
Distance : 15

181
Tree	{ return reportMatcher () ; } ParamChecks
Code	{ return reportMatcher () ; } ParamChecks
Distance : 15

182
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Code	{ reportMatcher ( Any.ANY ) ; return null ; } traverseEs6
Distance : 15

183
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Code	{ reportMatcher ( Any.ANY ) ; return null ; } notifyListeners
Distance : 15

184
Tree	{ return reportMatcher () ; } new
Code	{ return reportMatcher () ; } new
Distance : 15

185
Tree	{ return reportMatcher () ; } STRING_CONSTANT
Code	{ return reportMatcher () ; } STRING_CONSTANT
Distance : 15

186
Tree	{ return reportMatcher () ; } )
Code	{ return reportMatcher () ; } )
Distance : 15

187
Tree	{ return reportMatcher () ; } ;
Code	{ return reportMatcher () ; } ;
Distance : 15

188
Tree	{ return reportMatcher () ; } ()
Code	{ return reportMatcher () ; } ()
Distance : 15

189
Tree	{ return reportMatcher () ; } {
Code	{ return reportMatcher () ; } {
Distance : 15

190
Tree	{ return reportMatcher () ; } n
Code	{ return reportMatcher () ; } n
Distance : 15

191
Tree	{ return reportMatcher () ; } e
Code	{ return reportMatcher () ; } e
Distance : 15

192
Tree	{ return reportMatcher () ; } <
Code	{ return reportMatcher () ; } <
Distance : 15

193
Tree	{ return reportMatcher () ; } if
Code	{ return reportMatcher () ; } if
Distance : 15

194
Tree	{ return reportMatcher () ; } return
Code	{ return reportMatcher () ; } return
Distance : 15

195
Tree	{ return reportMatcher () ; } NUMBER_CONSTANT
Code	{ return reportMatcher () ; } NUMBER_CONSTANT
Distance : 15

196
Tree	{ return reportMatcher () ; } >
Code	{ return reportMatcher () ; } >
Distance : 15

197
Tree	{ return reportMatcher () ; } this
Code	{ return reportMatcher () ; } this
Distance : 15

198
Tree	{ return reportMatcher () ; } field
Code	{ return reportMatcher () ; } field
Distance : 15

199
Tree	{ return reportMatcher () ; } t
Code	{ return reportMatcher () ; } t
Distance : 15

========================================================================


========================================================================
Example Number: 99
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Short . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Short})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Short ; } invocations
Code	{ return this . Short ; } invocations
Distance : 13

2
Tree	{ return this . Short ; } values
Code	{ return this . Short ; } values
Distance : 13

3
Tree	{ return this . Short ; } setAcceptedLanguage
Code	{ return this . Short ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Short ; } clone
Code	{ return this . Short ; } clone
Distance : 13

5
Tree	{ return this . Short ; } Double
Code	{ return this . Short ; } Double
Distance : 13

6
Tree	{ return this . Short ; } PeriodType
Code	{ return this . Short ; } PeriodType
Distance : 13

7
Tree	{ return this . Short ; } <=
Code	{ return this . Short ; } <=
Distance : 13

8
Tree	{ return this . Short ; } contains
Code	{ return this . Short ; } contains
Distance : 13

9
Tree	{ return this . Short ; } a
Code	{ return this . Short ; } a
Distance : 13

10
Tree	{ return this . Short ; } protected
Code	{ return this . Short ; } protected
Distance : 13

11
Tree	{ return this . Short ; } isNormalBlock
Code	{ return this . Short ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Short ; } MutableTimePeriod
Code	{ return this . Short ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Short ; } size
Code	{ return this . Short ; } size
Distance : 13

14
Tree	{ return this . Short ; } StringBuilder
Code	{ return this . Short ; } StringBuilder
Distance : 13

15
Tree	{ return this . Short ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Short ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Short ; } traverseEs6
Code	{ return this . Short ; } traverseEs6
Distance : 13

17
Tree	{ return this . Short ; } stroke
Code	{ return this . Short ; } stroke
Distance : 13

18
Tree	{ return this . Short ; } obj
Code	{ return this . Short ; } obj
Distance : 13

19
Tree	{ return this . Short ; } s
Code	{ return this . Short ; } s
Distance : 13

20
Tree	{ return this . Short ; } returnZero
Code	{ return this . Short ; } returnZero
Distance : 13

21
Tree	{ return this . Short ; } b
Code	{ return this . Short ; } b
Distance : 13

22
Tree	{ return this . Short ; } null
Code	{ return this . Short ; } null
Distance : 13

23
Tree	{ return this . Short ; } setUp
Code	{ return this . Short ; } setUp
Distance : 13

24
Tree	{ return this . Short ; } node
Code	{ return this . Short ; } node
Distance : 13

25
Tree	{ return this . Short ; } reportCodeChange
Code	{ return this . Short ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Short ; } t
Code	{ return this . Short ; } t
Distance : 13

27
Tree	{ return this . Short ; } FastMath
Code	{ return this . Short ; } FastMath
Distance : 13

28
Tree	{ return this . Short ; } invocation
Code	{ return this . Short ; } invocation
Distance : 13

29
Tree	{ return this . Short ; } IllegalArgumentException
Code	{ return this . Short ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Short ; } expected
Code	{ return this . Short ; } expected
Distance : 13

31
Tree	{ return this . Short ; } testSame
Code	{ return this . Short ; } testSame
Distance : 13

32
Tree	{ return this . Short ; } createIllegalArgumentException
Code	{ return this . Short ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Short ; } ArrayList
Code	{ return this . Short ; } ArrayList
Distance : 13

34
Tree	{ return this . Short ; } parent
Code	{ return this . Short ; } parent
Distance : 13

35
Tree	{ return this . Short ; } LINE_JOINER
Code	{ return this . Short ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Short ; } x
Code	{ return this . Short ; } x
Distance : 13

37
Tree	{ return this . Short ; } str
Code	{ return this . Short ; } str
Distance : 13

38
Tree	{ return this . Short ; } assertThat
Code	{ return this . Short ; } assertThat
Distance : 13

39
Tree	{ return this . Short ; } getFirstChild
Code	{ return this . Short ; } getFirstChild
Distance : 13

40
Tree	{ return this . Short ; } sb
Code	{ return this . Short ; } sb
Distance : 13

41
Tree	{ return this . Short ; } externs
Code	{ return this . Short ; } externs
Distance : 13

42
Tree	{ return this . Short ; } append
Code	{ return this . Short ; } append
Distance : 13

43
Tree	{ return this . Short ; } Invocation
Code	{ return this . Short ; } Invocation
Distance : 13

44
Tree	{ return this . Short ; } equals
Code	{ return this . Short ; } equals
Distance : 13

45
Tree	{ return this . Short ; } index
Code	{ return this . Short ; } index
Distance : 13

46
Tree	{ return this . Short ; } NUMBER_CONSTANT
Code	{ return this . Short ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Short ; } Object
Code	{ return this . Short ; } Object
Distance : 13

48
Tree	{ return this . Short ; } value
Code	{ return this . Short ; } value
Distance : 13

49
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Short ; } field
Code	{ return this . Short ; } field
Distance : 13

73
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Short ; } length
Code	{ return this . Short ; } length
Distance : 13

98
Tree	{ return this . Short ; } @
Code	{ return this . Short ; } @
Distance : 13

99
Tree	{ return this . Short ; } instance
Code	{ return this . Short ; } instance
Distance : 13

100
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

101
Tree	{ return ( Short ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Short ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

102
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

103
Tree	{ super ( Short ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Short ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

104
Tree	{ return ( Short ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Short ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

105
Tree	{ returnZero ( Any.ANY ) ; Short = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Short = Any.ANY . returnZero () ; }
Distance : 9

106
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

107
Tree	{ returnZero ( Any.ANY ) ; Short = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Short = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Short ; } mockingProgress
Code	{ return this . Short ; } mockingProgress
Distance : 13

109
Tree	{ return this . Short ; } chrono
Code	{ return this . Short ; } chrono
Distance : 13

110
Tree	{ return this . Short ; } isEmpty
Code	{ return this . Short ; } isEmpty
Distance : 13

111
Tree	{ return this . Short ; } return;
Code	{ return this . Short ; } return;
Distance : 13

112
Tree	{ return this . Short ; } js
Code	{ return this . Short ; } js
Distance : 13

113
Tree	{ return this . Short ; } JSType
Code	{ return this . Short ; } JSType
Distance : 13

114
Tree	{ return this . Short ; } static
Code	{ return this . Short ; } static
Distance : 13

115
Tree	{ return this . Short ; } char
Code	{ return this . Short ; } char
Distance : 13

116
Tree	{ return this . Short ; } {}
Code	{ return this . Short ; } {}
Distance : 13

117
Tree	{ return this . Short ; } reportMatcher
Code	{ return this . Short ; } reportMatcher
Distance : 13

118
Tree	{ return this . Short ; } StrBuilder
Code	{ return this . Short ; } StrBuilder
Distance : 13

119
Tree	{ return this . Short ; } dataset
Code	{ return this . Short ; } dataset
Distance : 13

120
Tree	{ return this . Short ; } get
Code	{ return this . Short ; } get
Distance : 13

121
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Short ; } instant
Code	{ return this . Short ; } instant
Distance : 13

123
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

124
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Short ; } getField
Code	{ return this . Short ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

132
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

133
Tree	{ return this . Short ; }
Code	{ return this . Short ; }
Distance : 12

134
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

135
Tree	{ return ( Short ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Short ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

136
Tree	{ reportMatcher ( Any.ANY ) ; Short = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Short = Any.ANY . returnZero () ; }
Distance : 8

137
Tree	{ return ( Short ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Short ) reportMatcher ( Any.ANY ) ; }
Distance : 10

138
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

139
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

140
Tree	{ super ( Short ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Short ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

141
Tree	{ return ( Short ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Short ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

142
Tree	{ return ( Short ) returnZero ( Any.ANY ) ; }
Code	{ return ( Short ) returnZero ( Any.ANY ) ; }
Distance : 10

143
Tree	{ super ( Short ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Short ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

144
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

145
Tree	{ super ( Short ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Short ) ; returnZero ( Any.ANY ) ; }
Distance : 12

146
Tree	{ reportMatcher ( Any.ANY ) ; Short = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Short = Any.ANY . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . Short ; } else
Code	{ return this . Short ; } else
Distance : 13

148
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

149
Tree	{ return this . Short ; } valueOf
Code	{ return this . Short ; } valueOf
Distance : 13

150
Tree	{ return this . Short ; } this
Code	{ return this . Short ; } this
Distance : 13

151
Tree	{ return this . Short ; } return
Code	{ return this . Short ; } return
Distance : 13

152
Tree	{ return this . Short ; } final
Code	{ return this . Short ; } final
Distance : 13

153
Tree	{ return this . Short ; } <
Code	{ return this . Short ; } <
Distance : 13

154
Tree	{ return this . Short ; } name
Code	{ return this . Short ; } name
Distance : 13

155
Tree	{ return this . Short ; } solver
Code	{ return this . Short ; } solver
Distance : 13

156
Tree	{ return this . Short ; } y
Code	{ return this . Short ; } y
Distance : 13

157
Tree	{ return this . Short ; } PlotChangeEvent
Code	{ return this . Short ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Short ; } d
Code	{ return this . Short ; } d
Distance : 13

159
Tree	{ return this . Short ; } getParent
Code	{ return this . Short ; } getParent
Distance : 13

160
Tree	{ return this . Short ; } for
Code	{ return this . Short ; } for
Distance : 13

161
Tree	{ return this . Short ; } UnivariateFunction
Code	{ return this . Short ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Short ; } sqrt
Code	{ return this . Short ; } sqrt
Distance : 13

163
Tree	{ return this . Short ; } throws
Code	{ return this . Short ; } throws
Distance : 13

164
Tree	{ return this . Short ; } scope
Code	{ return this . Short ; } scope
Distance : 13

165
Tree	{ return this . Short ; } optimizer
Code	{ return this . Short ; } optimizer
Distance : 13

166
Tree	{ return this . Short ; } simpleMethod
Code	{ return this . Short ; } simpleMethod
Distance : 13

167
Tree	{ return this . Short ; } isBlock
Code	{ return this . Short ; } isBlock
Distance : 13

168
Tree	{ return this . Short ; } getArgumentMatcherStorage
Code	{ return this . Short ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Short ; } stream
Code	{ return this . Short ; } stream
Distance : 13

170
Tree	{ return this . Short ; } alpha
Code	{ return this . Short ; } alpha
Distance : 13

171
Tree	{ return this . Short ; } TestUtilities
Code	{ return this . Short ; } TestUtilities
Distance : 13

172
Tree	{ return this . Short ; } if
Code	{ return this . Short ; } if
Distance : 13

173
Tree	{ return this . Short ; } pattern
Code	{ return this . Short ; } pattern
Distance : 13

174
Tree	{ return this . Short ; } String
Code	{ return this . Short ; } String
Distance : 13

175
Tree	{ return this . Short ; } abs
Code	{ return this . Short ; } abs
Distance : 13

176
Tree	{ return this . Short ; } public
Code	{ return this . Short ; } public
Distance : 13

177
Tree	{ return this . Short ; } getMessage
Code	{ return this . Short ; } getMessage
Distance : 13

178
Tree	{ return this . Short ; } >
Code	{ return this . Short ; } >
Distance : 13

179
Tree	{ return this . Short ; } getChronology
Code	{ return this . Short ; } getChronology
Distance : 13

180
Tree	{ return this . Short ; } Collection
Code	{ return this . Short ; } Collection
Distance : 13

181
Tree	{ return this . Short ; } =
Code	{ return this . Short ; } =
Distance : 13

182
Tree	{ return this . Short ; } new
Code	{ return this . Short ; } new
Distance : 13

183
Tree	{ return this . Short ; } ()
Code	{ return this . Short ; } ()
Distance : 13

184
Tree	{ return this . Short ; } ,
Code	{ return this . Short ; } ,
Distance : 13

185
Tree	{ return this . Short ; } {
Code	{ return this . Short ; } {
Distance : 13

186
Tree	{ return this . Short ; } matcher
Code	{ return this . Short ; } matcher
Distance : 13

187
Tree	{ return this . Short ; } )
Code	{ return this . Short ; } )
Distance : 13

188
Tree	{ return this . Short ; } <s>
Code	{ return this . Short ; } <s>
Distance : 13

189
Tree	{ return this . Short ; } {
Code	{ return this . Short ; } {
Distance : 13

190
Tree	{ return this . Short ; } <blank>
Code	{ return this . Short ; } <blank>
Distance : 13

191
Tree	{ return this . Short ; } ;
Code	{ return this . Short ; } ;
Distance : 13

192
Tree	{ return this . Short ; } (
Code	{ return this . Short ; } (
Distance : 13

193
Tree	{ return this . Short ; } .
Code	{ return this . Short ; } .
Distance : 13

194
Tree	{ return this . Short ; } }
Code	{ return this . Short ; } }
Distance : 13

195
Tree	{ return this . Short ; } STRING_CONSTANT
Code	{ return this . Short ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 100
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Double . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Double})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Double ; } invocations
Code	{ return this . Double ; } invocations
Distance : 13

2
Tree	{ return this . Double ; } values
Code	{ return this . Double ; } values
Distance : 13

3
Tree	{ return this . Double ; } setAcceptedLanguage
Code	{ return this . Double ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Double ; } clone
Code	{ return this . Double ; } clone
Distance : 13

5
Tree	{ return this . Double ; } Double
Code	{ return this . Double ; } Double
Distance : 13

6
Tree	{ return this . Double ; } PeriodType
Code	{ return this . Double ; } PeriodType
Distance : 13

7
Tree	{ return this . Double ; } <=
Code	{ return this . Double ; } <=
Distance : 13

8
Tree	{ return this . Double ; } contains
Code	{ return this . Double ; } contains
Distance : 13

9
Tree	{ return this . Double ; } a
Code	{ return this . Double ; } a
Distance : 13

10
Tree	{ return this . Double ; } protected
Code	{ return this . Double ; } protected
Distance : 13

11
Tree	{ return this . Double ; } isNormalBlock
Code	{ return this . Double ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Double ; } MutableTimePeriod
Code	{ return this . Double ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Double ; } size
Code	{ return this . Double ; } size
Distance : 13

14
Tree	{ return this . Double ; } StringBuilder
Code	{ return this . Double ; } StringBuilder
Distance : 13

15
Tree	{ return this . Double ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Double ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Double ; } traverseEs6
Code	{ return this . Double ; } traverseEs6
Distance : 13

17
Tree	{ return this . Double ; } stroke
Code	{ return this . Double ; } stroke
Distance : 13

18
Tree	{ return this . Double ; } obj
Code	{ return this . Double ; } obj
Distance : 13

19
Tree	{ return this . Double ; } s
Code	{ return this . Double ; } s
Distance : 13

20
Tree	{ return this . Double ; } returnZero
Code	{ return this . Double ; } returnZero
Distance : 13

21
Tree	{ return this . Double ; } b
Code	{ return this . Double ; } b
Distance : 13

22
Tree	{ return this . Double ; } null
Code	{ return this . Double ; } null
Distance : 13

23
Tree	{ return this . Double ; } setUp
Code	{ return this . Double ; } setUp
Distance : 13

24
Tree	{ return this . Double ; } node
Code	{ return this . Double ; } node
Distance : 13

25
Tree	{ return this . Double ; } reportCodeChange
Code	{ return this . Double ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Double ; } t
Code	{ return this . Double ; } t
Distance : 13

27
Tree	{ return this . Double ; } FastMath
Code	{ return this . Double ; } FastMath
Distance : 13

28
Tree	{ return this . Double ; } invocation
Code	{ return this . Double ; } invocation
Distance : 13

29
Tree	{ return this . Double ; } IllegalArgumentException
Code	{ return this . Double ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Double ; } expected
Code	{ return this . Double ; } expected
Distance : 13

31
Tree	{ return this . Double ; } testSame
Code	{ return this . Double ; } testSame
Distance : 13

32
Tree	{ return this . Double ; } createIllegalArgumentException
Code	{ return this . Double ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Double ; } ArrayList
Code	{ return this . Double ; } ArrayList
Distance : 13

34
Tree	{ return this . Double ; } parent
Code	{ return this . Double ; } parent
Distance : 13

35
Tree	{ return this . Double ; } LINE_JOINER
Code	{ return this . Double ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Double ; } x
Code	{ return this . Double ; } x
Distance : 13

37
Tree	{ return this . Double ; } str
Code	{ return this . Double ; } str
Distance : 13

38
Tree	{ return this . Double ; } assertThat
Code	{ return this . Double ; } assertThat
Distance : 13

39
Tree	{ return this . Double ; } getFirstChild
Code	{ return this . Double ; } getFirstChild
Distance : 13

40
Tree	{ return this . Double ; } sb
Code	{ return this . Double ; } sb
Distance : 13

41
Tree	{ return this . Double ; } externs
Code	{ return this . Double ; } externs
Distance : 13

42
Tree	{ return this . Double ; } append
Code	{ return this . Double ; } append
Distance : 13

43
Tree	{ return this . Double ; } Invocation
Code	{ return this . Double ; } Invocation
Distance : 13

44
Tree	{ return this . Double ; } equals
Code	{ return this . Double ; } equals
Distance : 13

45
Tree	{ return this . Double ; } index
Code	{ return this . Double ; } index
Distance : 13

46
Tree	{ return this . Double ; } NUMBER_CONSTANT
Code	{ return this . Double ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Double ; } Object
Code	{ return this . Double ; } Object
Distance : 13

48
Tree	{ return this . Double ; } value
Code	{ return this . Double ; } value
Distance : 13

49
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Double ; } field
Code	{ return this . Double ; } field
Distance : 13

73
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Double ; } length
Code	{ return this . Double ; } length
Distance : 13

98
Tree	{ return this . Double ; } @
Code	{ return this . Double ; } @
Distance : 13

99
Tree	{ return this . Double ; } instance
Code	{ return this . Double ; } instance
Distance : 13

100
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

101
Tree	{ reportMatcher ( Any.ANY ) ; Double = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Double = Any.ANY . reportMatcher () ; }
Distance : 9

102
Tree	{ super ( Double ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Double ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

103
Tree	{ return ( Double ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Double ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

104
Tree	{ return ( Double ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Double ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

105
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

106
Tree	{ returnZero ( Any.ANY ) ; Double = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Double = Any.ANY . returnZero () ; }
Distance : 9

107
Tree	{ returnZero ( Any.ANY ) ; Double = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Double = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Double ; } return;
Code	{ return this . Double ; } return;
Distance : 13

109
Tree	{ return this . Double ; } isEmpty
Code	{ return this . Double ; } isEmpty
Distance : 13

110
Tree	{ return this . Double ; } JSType
Code	{ return this . Double ; } JSType
Distance : 13

111
Tree	{ return this . Double ; } static
Code	{ return this . Double ; } static
Distance : 13

112
Tree	{ return this . Double ; } char
Code	{ return this . Double ; } char
Distance : 13

113
Tree	{ return this . Double ; } chrono
Code	{ return this . Double ; } chrono
Distance : 13

114
Tree	{ return this . Double ; } mockingProgress
Code	{ return this . Double ; } mockingProgress
Distance : 13

115
Tree	{ return this . Double ; } get
Code	{ return this . Double ; } get
Distance : 13

116
Tree	{ return this . Double ; } js
Code	{ return this . Double ; } js
Distance : 13

117
Tree	{ return this . Double ; } StrBuilder
Code	{ return this . Double ; } StrBuilder
Distance : 13

118
Tree	{ return this . Double ; } instant
Code	{ return this . Double ; } instant
Distance : 13

119
Tree	{ return this . Double ; } else
Code	{ return this . Double ; } else
Distance : 13

120
Tree	{ return this . Double ; } stream
Code	{ return this . Double ; } stream
Distance : 13

121
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

122
Tree	{ return this . Double ; } {}
Code	{ return this . Double ; } {}
Distance : 13

123
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

124
Tree	{ reportMatcher ( Any.ANY ) ; Double = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Double = Any.ANY . returnZero () ; }
Distance : 8

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Double ; } getField
Code	{ return this . Double ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

132
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

133
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

134
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

135
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

136
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

137
Tree	{ return ( Double ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Double ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

138
Tree	{ return ( Double ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Double ) reportMatcher ( Any.ANY ) ; }
Distance : 10

139
Tree	{ super ( Double ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Double ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

140
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

141
Tree	{ super ( Double ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Double ) ; returnZero ( Any.ANY ) ; }
Distance : 12

142
Tree	{ return ( Double ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Double ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

143
Tree	{ return ( Double ) returnZero ( Any.ANY ) ; }
Code	{ return ( Double ) returnZero ( Any.ANY ) ; }
Distance : 10

144
Tree	{ return this . Double ; }
Code	{ return this . Double ; }
Distance : 12

145
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

146
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

147
Tree	{ return this . Double ; } reportMatcher
Code	{ return this . Double ; } reportMatcher
Distance : 13

148
Tree	{ super ( Double ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Double ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

149
Tree	{ return this . Double ; } valueOf
Code	{ return this . Double ; } valueOf
Distance : 13

150
Tree	{ return this . Double ; } this
Code	{ return this . Double ; } this
Distance : 13

151
Tree	{ return this . Double ; } return
Code	{ return this . Double ; } return
Distance : 13

152
Tree	{ return this . Double ; } final
Code	{ return this . Double ; } final
Distance : 13

153
Tree	{ return this . Double ; } <
Code	{ return this . Double ; } <
Distance : 13

154
Tree	{ return this . Double ; } name
Code	{ return this . Double ; } name
Distance : 13

155
Tree	{ return this . Double ; } solver
Code	{ return this . Double ; } solver
Distance : 13

156
Tree	{ return this . Double ; } y
Code	{ return this . Double ; } y
Distance : 13

157
Tree	{ return this . Double ; } PlotChangeEvent
Code	{ return this . Double ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Double ; } d
Code	{ return this . Double ; } d
Distance : 13

159
Tree	{ return this . Double ; } getParent
Code	{ return this . Double ; } getParent
Distance : 13

160
Tree	{ return this . Double ; } for
Code	{ return this . Double ; } for
Distance : 13

161
Tree	{ return this . Double ; } UnivariateFunction
Code	{ return this . Double ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Double ; } sqrt
Code	{ return this . Double ; } sqrt
Distance : 13

163
Tree	{ return this . Double ; } throws
Code	{ return this . Double ; } throws
Distance : 13

164
Tree	{ return this . Double ; } scope
Code	{ return this . Double ; } scope
Distance : 13

165
Tree	{ return this . Double ; } optimizer
Code	{ return this . Double ; } optimizer
Distance : 13

166
Tree	{ return this . Double ; } simpleMethod
Code	{ return this . Double ; } simpleMethod
Distance : 13

167
Tree	{ return this . Double ; } isBlock
Code	{ return this . Double ; } isBlock
Distance : 13

168
Tree	{ return this . Double ; } getArgumentMatcherStorage
Code	{ return this . Double ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Double ; } matcher
Code	{ return this . Double ; } matcher
Distance : 13

170
Tree	{ return this . Double ; } alpha
Code	{ return this . Double ; } alpha
Distance : 13

171
Tree	{ return this . Double ; } TestUtilities
Code	{ return this . Double ; } TestUtilities
Distance : 13

172
Tree	{ return this . Double ; } if
Code	{ return this . Double ; } if
Distance : 13

173
Tree	{ return this . Double ; } pattern
Code	{ return this . Double ; } pattern
Distance : 13

174
Tree	{ return this . Double ; } String
Code	{ return this . Double ; } String
Distance : 13

175
Tree	{ return this . Double ; } abs
Code	{ return this . Double ; } abs
Distance : 13

176
Tree	{ return this . Double ; } public
Code	{ return this . Double ; } public
Distance : 13

177
Tree	{ return this . Double ; } getMessage
Code	{ return this . Double ; } getMessage
Distance : 13

178
Tree	{ return this . Double ; } >
Code	{ return this . Double ; } >
Distance : 13

179
Tree	{ return this . Double ; } getChronology
Code	{ return this . Double ; } getChronology
Distance : 13

180
Tree	{ return this . Double ; } Collection
Code	{ return this . Double ; } Collection
Distance : 13

181
Tree	{ return this . Double ; } =
Code	{ return this . Double ; } =
Distance : 13

182
Tree	{ return this . Double ; } new
Code	{ return this . Double ; } new
Distance : 13

183
Tree	{ return this . Double ; } ()
Code	{ return this . Double ; } ()
Distance : 13

184
Tree	{ return this . Double ; } ,
Code	{ return this . Double ; } ,
Distance : 13

185
Tree	{ return this . Double ; } {
Code	{ return this . Double ; } {
Distance : 13

186
Tree	{ return this . Double ; } dataset
Code	{ return this . Double ; } dataset
Distance : 13

187
Tree	{ return this . Double ; } )
Code	{ return this . Double ; } )
Distance : 13

188
Tree	{ return this . Double ; } <s>
Code	{ return this . Double ; } <s>
Distance : 13

189
Tree	{ return this . Double ; } {
Code	{ return this . Double ; } {
Distance : 13

190
Tree	{ return this . Double ; } <blank>
Code	{ return this . Double ; } <blank>
Distance : 13

191
Tree	{ return this . Double ; } ;
Code	{ return this . Double ; } ;
Distance : 13

192
Tree	{ return this . Double ; } (
Code	{ return this . Double ; } (
Distance : 13

193
Tree	{ return this . Double ; } .
Code	{ return this . Double ; } .
Distance : 13

194
Tree	{ return this . Double ; } }
Code	{ return this . Double ; } }
Distance : 13

195
Tree	{ return this . Double ; } STRING_CONSTANT
Code	{ return this . Double ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 101
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Float . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Float})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Float ; } invocations
Code	{ return this . Float ; } invocations
Distance : 13

2
Tree	{ return this . Float ; } values
Code	{ return this . Float ; } values
Distance : 13

3
Tree	{ return this . Float ; } setAcceptedLanguage
Code	{ return this . Float ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Float ; } clone
Code	{ return this . Float ; } clone
Distance : 13

5
Tree	{ return this . Float ; } Double
Code	{ return this . Float ; } Double
Distance : 13

6
Tree	{ return this . Float ; } PeriodType
Code	{ return this . Float ; } PeriodType
Distance : 13

7
Tree	{ return this . Float ; } <=
Code	{ return this . Float ; } <=
Distance : 13

8
Tree	{ return this . Float ; } contains
Code	{ return this . Float ; } contains
Distance : 13

9
Tree	{ return this . Float ; } a
Code	{ return this . Float ; } a
Distance : 13

10
Tree	{ return this . Float ; } protected
Code	{ return this . Float ; } protected
Distance : 13

11
Tree	{ return this . Float ; } isNormalBlock
Code	{ return this . Float ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Float ; } MutableTimePeriod
Code	{ return this . Float ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Float ; } size
Code	{ return this . Float ; } size
Distance : 13

14
Tree	{ return this . Float ; } StringBuilder
Code	{ return this . Float ; } StringBuilder
Distance : 13

15
Tree	{ return this . Float ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Float ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Float ; } traverseEs6
Code	{ return this . Float ; } traverseEs6
Distance : 13

17
Tree	{ return this . Float ; } stroke
Code	{ return this . Float ; } stroke
Distance : 13

18
Tree	{ return this . Float ; } obj
Code	{ return this . Float ; } obj
Distance : 13

19
Tree	{ return this . Float ; } s
Code	{ return this . Float ; } s
Distance : 13

20
Tree	{ return this . Float ; } returnZero
Code	{ return this . Float ; } returnZero
Distance : 13

21
Tree	{ return this . Float ; } b
Code	{ return this . Float ; } b
Distance : 13

22
Tree	{ return this . Float ; } null
Code	{ return this . Float ; } null
Distance : 13

23
Tree	{ return this . Float ; } setUp
Code	{ return this . Float ; } setUp
Distance : 13

24
Tree	{ return this . Float ; } node
Code	{ return this . Float ; } node
Distance : 13

25
Tree	{ return this . Float ; } reportCodeChange
Code	{ return this . Float ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Float ; } t
Code	{ return this . Float ; } t
Distance : 13

27
Tree	{ return this . Float ; } FastMath
Code	{ return this . Float ; } FastMath
Distance : 13

28
Tree	{ return this . Float ; } invocation
Code	{ return this . Float ; } invocation
Distance : 13

29
Tree	{ return this . Float ; } IllegalArgumentException
Code	{ return this . Float ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Float ; } expected
Code	{ return this . Float ; } expected
Distance : 13

31
Tree	{ return this . Float ; } testSame
Code	{ return this . Float ; } testSame
Distance : 13

32
Tree	{ return this . Float ; } createIllegalArgumentException
Code	{ return this . Float ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Float ; } ArrayList
Code	{ return this . Float ; } ArrayList
Distance : 13

34
Tree	{ return this . Float ; } parent
Code	{ return this . Float ; } parent
Distance : 13

35
Tree	{ return this . Float ; } LINE_JOINER
Code	{ return this . Float ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Float ; } x
Code	{ return this . Float ; } x
Distance : 13

37
Tree	{ return this . Float ; } str
Code	{ return this . Float ; } str
Distance : 13

38
Tree	{ return this . Float ; } assertThat
Code	{ return this . Float ; } assertThat
Distance : 13

39
Tree	{ return this . Float ; } getFirstChild
Code	{ return this . Float ; } getFirstChild
Distance : 13

40
Tree	{ return this . Float ; } sb
Code	{ return this . Float ; } sb
Distance : 13

41
Tree	{ return this . Float ; } externs
Code	{ return this . Float ; } externs
Distance : 13

42
Tree	{ return this . Float ; } append
Code	{ return this . Float ; } append
Distance : 13

43
Tree	{ return this . Float ; } Invocation
Code	{ return this . Float ; } Invocation
Distance : 13

44
Tree	{ return this . Float ; } equals
Code	{ return this . Float ; } equals
Distance : 13

45
Tree	{ return this . Float ; } index
Code	{ return this . Float ; } index
Distance : 13

46
Tree	{ return this . Float ; } NUMBER_CONSTANT
Code	{ return this . Float ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Float ; } Object
Code	{ return this . Float ; } Object
Distance : 13

48
Tree	{ return this . Float ; } value
Code	{ return this . Float ; } value
Distance : 13

49
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Float ; } field
Code	{ return this . Float ; } field
Distance : 13

73
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Float ; } length
Code	{ return this . Float ; } length
Distance : 13

98
Tree	{ return this . Float ; } @
Code	{ return this . Float ; } @
Distance : 13

99
Tree	{ return this . Float ; } instance
Code	{ return this . Float ; } instance
Distance : 13

100
Tree	{ reportMatcher ( Any.ANY ) ; Float = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Float = Any.ANY . reportMatcher () ; }
Distance : 9

101
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

102
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

104
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

105
Tree	{ returnZero ( Any.ANY ) ; Float = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Float = Any.ANY . returnZero () ; }
Distance : 9

106
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

107
Tree	{ returnZero ( Any.ANY ) ; Float = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Float = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Float ; } char
Code	{ return this . Float ; } char
Distance : 13

109
Tree	{ return this . Float ; } mockingProgress
Code	{ return this . Float ; } mockingProgress
Distance : 13

110
Tree	{ return this . Float ; } chrono
Code	{ return this . Float ; } chrono
Distance : 13

111
Tree	{ return this . Float ; } isEmpty
Code	{ return this . Float ; } isEmpty
Distance : 13

112
Tree	{ return this . Float ; } return;
Code	{ return this . Float ; } return;
Distance : 13

113
Tree	{ return this . Float ; } js
Code	{ return this . Float ; } js
Distance : 13

114
Tree	{ return this . Float ; } StrBuilder
Code	{ return this . Float ; } StrBuilder
Distance : 13

115
Tree	{ return this . Float ; } JSType
Code	{ return this . Float ; } JSType
Distance : 13

116
Tree	{ return this . Float ; } static
Code	{ return this . Float ; } static
Distance : 13

117
Tree	{ return this . Float ; } dataset
Code	{ return this . Float ; } dataset
Distance : 13

118
Tree	{ return this . Float ; } abs
Code	{ return this . Float ; } abs
Distance : 13

119
Tree	{ return this . Float ; } matcher
Code	{ return this . Float ; } matcher
Distance : 13

120
Tree	{ return this . Float ; } reportMatcher
Code	{ return this . Float ; } reportMatcher
Distance : 13

121
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

122
Tree	{ return this . Float ; } {}
Code	{ return this . Float ; } {}
Distance : 13

123
Tree	{ super ( Float ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Float ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

124
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Float ; } getField
Code	{ return this . Float ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

130
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

131
Tree	{ return ( Float ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Float ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

132
Tree	{ return ( Float ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Float ) reportMatcher ( Any.ANY ) ; }
Distance : 10

133
Tree	{ super ( Float ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Float ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

134
Tree	{ return this . Float ; }
Code	{ return this . Float ; }
Distance : 12

135
Tree	{ super ( Float ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Float ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

136
Tree	{ return ( Float ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Float ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

137
Tree	{ return ( Float ) returnZero ( Any.ANY ) ; }
Code	{ return ( Float ) returnZero ( Any.ANY ) ; }
Distance : 10

138
Tree	{ super ( Float ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Float ) ; returnZero ( Any.ANY ) ; }
Distance : 12

139
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

140
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

141
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

142
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

143
Tree	{ reportMatcher ( Any.ANY ) ; Float = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Float = Any.ANY . returnZero () ; }
Distance : 8

144
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

145
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

146
Tree	{ return ( Float ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Float ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . Float ; } get
Code	{ return this . Float ; } get
Distance : 13

148
Tree	{ return ( Float ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Float ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

149
Tree	{ return this . Float ; } valueOf
Code	{ return this . Float ; } valueOf
Distance : 13

150
Tree	{ return this . Float ; } this
Code	{ return this . Float ; } this
Distance : 13

151
Tree	{ return this . Float ; } return
Code	{ return this . Float ; } return
Distance : 13

152
Tree	{ return this . Float ; } final
Code	{ return this . Float ; } final
Distance : 13

153
Tree	{ return this . Float ; } <
Code	{ return this . Float ; } <
Distance : 13

154
Tree	{ return this . Float ; } name
Code	{ return this . Float ; } name
Distance : 13

155
Tree	{ return this . Float ; } solver
Code	{ return this . Float ; } solver
Distance : 13

156
Tree	{ return this . Float ; } y
Code	{ return this . Float ; } y
Distance : 13

157
Tree	{ return this . Float ; } PlotChangeEvent
Code	{ return this . Float ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Float ; } d
Code	{ return this . Float ; } d
Distance : 13

159
Tree	{ return this . Float ; } getParent
Code	{ return this . Float ; } getParent
Distance : 13

160
Tree	{ return this . Float ; } for
Code	{ return this . Float ; } for
Distance : 13

161
Tree	{ return this . Float ; } UnivariateFunction
Code	{ return this . Float ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Float ; } sqrt
Code	{ return this . Float ; } sqrt
Distance : 13

163
Tree	{ return this . Float ; } throws
Code	{ return this . Float ; } throws
Distance : 13

164
Tree	{ return this . Float ; } scope
Code	{ return this . Float ; } scope
Distance : 13

165
Tree	{ return this . Float ; } optimizer
Code	{ return this . Float ; } optimizer
Distance : 13

166
Tree	{ return this . Float ; } simpleMethod
Code	{ return this . Float ; } simpleMethod
Distance : 13

167
Tree	{ return this . Float ; } isBlock
Code	{ return this . Float ; } isBlock
Distance : 13

168
Tree	{ return this . Float ; } getArgumentMatcherStorage
Code	{ return this . Float ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Float ; } instant
Code	{ return this . Float ; } instant
Distance : 13

170
Tree	{ return this . Float ; } alpha
Code	{ return this . Float ; } alpha
Distance : 13

171
Tree	{ return this . Float ; } TestUtilities
Code	{ return this . Float ; } TestUtilities
Distance : 13

172
Tree	{ return this . Float ; } if
Code	{ return this . Float ; } if
Distance : 13

173
Tree	{ return this . Float ; } pattern
Code	{ return this . Float ; } pattern
Distance : 13

174
Tree	{ return this . Float ; } String
Code	{ return this . Float ; } String
Distance : 13

175
Tree	{ return this . Float ; } else
Code	{ return this . Float ; } else
Distance : 13

176
Tree	{ return this . Float ; } public
Code	{ return this . Float ; } public
Distance : 13

177
Tree	{ return this . Float ; } getMessage
Code	{ return this . Float ; } getMessage
Distance : 13

178
Tree	{ return this . Float ; } >
Code	{ return this . Float ; } >
Distance : 13

179
Tree	{ return this . Float ; } getChronology
Code	{ return this . Float ; } getChronology
Distance : 13

180
Tree	{ return this . Float ; } Collection
Code	{ return this . Float ; } Collection
Distance : 13

181
Tree	{ return this . Float ; } =
Code	{ return this . Float ; } =
Distance : 13

182
Tree	{ return this . Float ; } new
Code	{ return this . Float ; } new
Distance : 13

183
Tree	{ return this . Float ; } ()
Code	{ return this . Float ; } ()
Distance : 13

184
Tree	{ return this . Float ; } ,
Code	{ return this . Float ; } ,
Distance : 13

185
Tree	{ return this . Float ; } {
Code	{ return this . Float ; } {
Distance : 13

186
Tree	{ return this . Float ; } stream
Code	{ return this . Float ; } stream
Distance : 13

187
Tree	{ return this . Float ; } )
Code	{ return this . Float ; } )
Distance : 13

188
Tree	{ return this . Float ; } <s>
Code	{ return this . Float ; } <s>
Distance : 13

189
Tree	{ return this . Float ; } {
Code	{ return this . Float ; } {
Distance : 13

190
Tree	{ return this . Float ; } <blank>
Code	{ return this . Float ; } <blank>
Distance : 13

191
Tree	{ return this . Float ; } ;
Code	{ return this . Float ; } ;
Distance : 13

192
Tree	{ return this . Float ; } (
Code	{ return this . Float ; } (
Distance : 13

193
Tree	{ return this . Float ; } .
Code	{ return this . Float ; } .
Distance : 13

194
Tree	{ return this . Float ; } }
Code	{ return this . Float ; } }
Distance : 13

195
Tree	{ return this . Float ; } STRING_CONSTANT
Code	{ return this . Float ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 102
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Long . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Long})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Long ; } invocations
Code	{ return this . Long ; } invocations
Distance : 13

2
Tree	{ return this . Long ; } values
Code	{ return this . Long ; } values
Distance : 13

3
Tree	{ return this . Long ; } setAcceptedLanguage
Code	{ return this . Long ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Long ; } clone
Code	{ return this . Long ; } clone
Distance : 13

5
Tree	{ return this . Long ; } Double
Code	{ return this . Long ; } Double
Distance : 13

6
Tree	{ return this . Long ; } PeriodType
Code	{ return this . Long ; } PeriodType
Distance : 13

7
Tree	{ return this . Long ; } <=
Code	{ return this . Long ; } <=
Distance : 13

8
Tree	{ return this . Long ; } contains
Code	{ return this . Long ; } contains
Distance : 13

9
Tree	{ return this . Long ; } a
Code	{ return this . Long ; } a
Distance : 13

10
Tree	{ return this . Long ; } protected
Code	{ return this . Long ; } protected
Distance : 13

11
Tree	{ return this . Long ; } isNormalBlock
Code	{ return this . Long ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Long ; } MutableTimePeriod
Code	{ return this . Long ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Long ; } size
Code	{ return this . Long ; } size
Distance : 13

14
Tree	{ return this . Long ; } StringBuilder
Code	{ return this . Long ; } StringBuilder
Distance : 13

15
Tree	{ return this . Long ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Long ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Long ; } traverseEs6
Code	{ return this . Long ; } traverseEs6
Distance : 13

17
Tree	{ return this . Long ; } stroke
Code	{ return this . Long ; } stroke
Distance : 13

18
Tree	{ return this . Long ; } obj
Code	{ return this . Long ; } obj
Distance : 13

19
Tree	{ return this . Long ; } s
Code	{ return this . Long ; } s
Distance : 13

20
Tree	{ return this . Long ; } returnZero
Code	{ return this . Long ; } returnZero
Distance : 13

21
Tree	{ return this . Long ; } b
Code	{ return this . Long ; } b
Distance : 13

22
Tree	{ return this . Long ; } null
Code	{ return this . Long ; } null
Distance : 13

23
Tree	{ return this . Long ; } setUp
Code	{ return this . Long ; } setUp
Distance : 13

24
Tree	{ return this . Long ; } node
Code	{ return this . Long ; } node
Distance : 13

25
Tree	{ return this . Long ; } reportCodeChange
Code	{ return this . Long ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Long ; } t
Code	{ return this . Long ; } t
Distance : 13

27
Tree	{ return this . Long ; } FastMath
Code	{ return this . Long ; } FastMath
Distance : 13

28
Tree	{ return this . Long ; } invocation
Code	{ return this . Long ; } invocation
Distance : 13

29
Tree	{ return this . Long ; } IllegalArgumentException
Code	{ return this . Long ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Long ; } expected
Code	{ return this . Long ; } expected
Distance : 13

31
Tree	{ return this . Long ; } testSame
Code	{ return this . Long ; } testSame
Distance : 13

32
Tree	{ return this . Long ; } createIllegalArgumentException
Code	{ return this . Long ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Long ; } ArrayList
Code	{ return this . Long ; } ArrayList
Distance : 13

34
Tree	{ return this . Long ; } parent
Code	{ return this . Long ; } parent
Distance : 13

35
Tree	{ return this . Long ; } LINE_JOINER
Code	{ return this . Long ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Long ; } x
Code	{ return this . Long ; } x
Distance : 13

37
Tree	{ return this . Long ; } str
Code	{ return this . Long ; } str
Distance : 13

38
Tree	{ return this . Long ; } assertThat
Code	{ return this . Long ; } assertThat
Distance : 13

39
Tree	{ return this . Long ; } getFirstChild
Code	{ return this . Long ; } getFirstChild
Distance : 13

40
Tree	{ return this . Long ; } sb
Code	{ return this . Long ; } sb
Distance : 13

41
Tree	{ return this . Long ; } externs
Code	{ return this . Long ; } externs
Distance : 13

42
Tree	{ return this . Long ; } append
Code	{ return this . Long ; } append
Distance : 13

43
Tree	{ return this . Long ; } Invocation
Code	{ return this . Long ; } Invocation
Distance : 13

44
Tree	{ return this . Long ; } equals
Code	{ return this . Long ; } equals
Distance : 13

45
Tree	{ return this . Long ; } index
Code	{ return this . Long ; } index
Distance : 13

46
Tree	{ return this . Long ; } NUMBER_CONSTANT
Code	{ return this . Long ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Long ; } Object
Code	{ return this . Long ; } Object
Distance : 13

48
Tree	{ return this . Long ; } value
Code	{ return this . Long ; } value
Distance : 13

49
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Long ; } field
Code	{ return this . Long ; } field
Distance : 13

73
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Long ; } length
Code	{ return this . Long ; } length
Distance : 13

98
Tree	{ return this . Long ; } @
Code	{ return this . Long ; } @
Distance : 13

99
Tree	{ return this . Long ; } instance
Code	{ return this . Long ; } instance
Distance : 13

100
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

101
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

102
Tree	{ super ( Long ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Long ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

103
Tree	{ reportMatcher ( Any.ANY ) ; Long = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Long = Any.ANY . reportMatcher () ; }
Distance : 9

104
Tree	{ return ( Long ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Long ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

105
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

106
Tree	{ returnZero ( Any.ANY ) ; Long = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Long = Any.ANY . returnZero () ; }
Distance : 9

107
Tree	{ returnZero ( Any.ANY ) ; Long = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Long = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Long ; } chrono
Code	{ return this . Long ; } chrono
Distance : 13

109
Tree	{ return this . Long ; } return;
Code	{ return this . Long ; } return;
Distance : 13

110
Tree	{ return this . Long ; } js
Code	{ return this . Long ; } js
Distance : 13

111
Tree	{ return this . Long ; } JSType
Code	{ return this . Long ; } JSType
Distance : 13

112
Tree	{ return this . Long ; } static
Code	{ return this . Long ; } static
Distance : 13

113
Tree	{ return this . Long ; } char
Code	{ return this . Long ; } char
Distance : 13

114
Tree	{ return this . Long ; } mockingProgress
Code	{ return this . Long ; } mockingProgress
Distance : 13

115
Tree	{ return this . Long ; } isEmpty
Code	{ return this . Long ; } isEmpty
Distance : 13

116
Tree	{ return this . Long ; } reportMatcher
Code	{ return this . Long ; } reportMatcher
Distance : 13

117
Tree	{ return this . Long ; } {}
Code	{ return this . Long ; } {}
Distance : 13

118
Tree	{ return this . Long ; } StrBuilder
Code	{ return this . Long ; } StrBuilder
Distance : 13

119
Tree	{ return this . Long ; } dataset
Code	{ return this . Long ; } dataset
Distance : 13

120
Tree	{ return this . Long ; } get
Code	{ return this . Long ; } get
Distance : 13

121
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

122
Tree	{ return this . Long ; } instant
Code	{ return this . Long ; } instant
Distance : 13

123
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

124
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Long ; } getField
Code	{ return this . Long ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

132
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

133
Tree	{ return this . Long ; }
Code	{ return this . Long ; }
Distance : 12

134
Tree	{ return ( Long ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Long ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

135
Tree	{ return ( Long ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Long ) reportMatcher ( Any.ANY ) ; }
Distance : 10

136
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

137
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

138
Tree	{ return ( Long ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Long ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

139
Tree	{ super ( Long ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Long ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

140
Tree	{ return ( Long ) returnZero ( Any.ANY ) ; }
Code	{ return ( Long ) returnZero ( Any.ANY ) ; }
Distance : 10

141
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

142
Tree	{ super ( Long ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Long ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

143
Tree	{ super ( Long ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Long ) ; returnZero ( Any.ANY ) ; }
Distance : 12

144
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

145
Tree	{ reportMatcher ( Any.ANY ) ; Long = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Long = Any.ANY . returnZero () ; }
Distance : 8

146
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

147
Tree	{ return this . Long ; } else
Code	{ return this . Long ; } else
Distance : 13

148
Tree	{ return ( Long ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Long ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

149
Tree	{ return this . Long ; } valueOf
Code	{ return this . Long ; } valueOf
Distance : 13

150
Tree	{ return this . Long ; } this
Code	{ return this . Long ; } this
Distance : 13

151
Tree	{ return this . Long ; } return
Code	{ return this . Long ; } return
Distance : 13

152
Tree	{ return this . Long ; } final
Code	{ return this . Long ; } final
Distance : 13

153
Tree	{ return this . Long ; } <
Code	{ return this . Long ; } <
Distance : 13

154
Tree	{ return this . Long ; } name
Code	{ return this . Long ; } name
Distance : 13

155
Tree	{ return this . Long ; } solver
Code	{ return this . Long ; } solver
Distance : 13

156
Tree	{ return this . Long ; } y
Code	{ return this . Long ; } y
Distance : 13

157
Tree	{ return this . Long ; } PlotChangeEvent
Code	{ return this . Long ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Long ; } d
Code	{ return this . Long ; } d
Distance : 13

159
Tree	{ return this . Long ; } getParent
Code	{ return this . Long ; } getParent
Distance : 13

160
Tree	{ return this . Long ; } for
Code	{ return this . Long ; } for
Distance : 13

161
Tree	{ return this . Long ; } UnivariateFunction
Code	{ return this . Long ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Long ; } sqrt
Code	{ return this . Long ; } sqrt
Distance : 13

163
Tree	{ return this . Long ; } throws
Code	{ return this . Long ; } throws
Distance : 13

164
Tree	{ return this . Long ; } scope
Code	{ return this . Long ; } scope
Distance : 13

165
Tree	{ return this . Long ; } optimizer
Code	{ return this . Long ; } optimizer
Distance : 13

166
Tree	{ return this . Long ; } simpleMethod
Code	{ return this . Long ; } simpleMethod
Distance : 13

167
Tree	{ return this . Long ; } isBlock
Code	{ return this . Long ; } isBlock
Distance : 13

168
Tree	{ return this . Long ; } getArgumentMatcherStorage
Code	{ return this . Long ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Long ; } stream
Code	{ return this . Long ; } stream
Distance : 13

170
Tree	{ return this . Long ; } alpha
Code	{ return this . Long ; } alpha
Distance : 13

171
Tree	{ return this . Long ; } TestUtilities
Code	{ return this . Long ; } TestUtilities
Distance : 13

172
Tree	{ return this . Long ; } if
Code	{ return this . Long ; } if
Distance : 13

173
Tree	{ return this . Long ; } pattern
Code	{ return this . Long ; } pattern
Distance : 13

174
Tree	{ return this . Long ; } String
Code	{ return this . Long ; } String
Distance : 13

175
Tree	{ return this . Long ; } abs
Code	{ return this . Long ; } abs
Distance : 13

176
Tree	{ return this . Long ; } public
Code	{ return this . Long ; } public
Distance : 13

177
Tree	{ return this . Long ; } getMessage
Code	{ return this . Long ; } getMessage
Distance : 13

178
Tree	{ return this . Long ; } >
Code	{ return this . Long ; } >
Distance : 13

179
Tree	{ return this . Long ; } getChronology
Code	{ return this . Long ; } getChronology
Distance : 13

180
Tree	{ return this . Long ; } Collection
Code	{ return this . Long ; } Collection
Distance : 13

181
Tree	{ return this . Long ; } =
Code	{ return this . Long ; } =
Distance : 13

182
Tree	{ return this . Long ; } new
Code	{ return this . Long ; } new
Distance : 13

183
Tree	{ return this . Long ; } ()
Code	{ return this . Long ; } ()
Distance : 13

184
Tree	{ return this . Long ; } ,
Code	{ return this . Long ; } ,
Distance : 13

185
Tree	{ return this . Long ; } {
Code	{ return this . Long ; } {
Distance : 13

186
Tree	{ return this . Long ; } matcher
Code	{ return this . Long ; } matcher
Distance : 13

187
Tree	{ return this . Long ; } )
Code	{ return this . Long ; } )
Distance : 13

188
Tree	{ return this . Long ; } <s>
Code	{ return this . Long ; } <s>
Distance : 13

189
Tree	{ return this . Long ; } {
Code	{ return this . Long ; } {
Distance : 13

190
Tree	{ return this . Long ; } <blank>
Code	{ return this . Long ; } <blank>
Distance : 13

191
Tree	{ return this . Long ; } ;
Code	{ return this . Long ; } ;
Distance : 13

192
Tree	{ return this . Long ; } (
Code	{ return this . Long ; } (
Distance : 13

193
Tree	{ return this . Long ; } .
Code	{ return this . Long ; } .
Distance : 13

194
Tree	{ return this . Long ; } }
Code	{ return this . Long ; } }
Distance : 13

195
Tree	{ return this . Long ; } STRING_CONSTANT
Code	{ return this . Long ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 103
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Integer . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Integer})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Integer ; } invocations
Code	{ return this . Integer ; } invocations
Distance : 13

2
Tree	{ return this . Integer ; } values
Code	{ return this . Integer ; } values
Distance : 13

3
Tree	{ return this . Integer ; } setAcceptedLanguage
Code	{ return this . Integer ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Integer ; } clone
Code	{ return this . Integer ; } clone
Distance : 13

5
Tree	{ return this . Integer ; } Double
Code	{ return this . Integer ; } Double
Distance : 13

6
Tree	{ return this . Integer ; } PeriodType
Code	{ return this . Integer ; } PeriodType
Distance : 13

7
Tree	{ return this . Integer ; } <=
Code	{ return this . Integer ; } <=
Distance : 13

8
Tree	{ return this . Integer ; } contains
Code	{ return this . Integer ; } contains
Distance : 13

9
Tree	{ return this . Integer ; } a
Code	{ return this . Integer ; } a
Distance : 13

10
Tree	{ return this . Integer ; } protected
Code	{ return this . Integer ; } protected
Distance : 13

11
Tree	{ return this . Integer ; } isNormalBlock
Code	{ return this . Integer ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Integer ; } MutableTimePeriod
Code	{ return this . Integer ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Integer ; } size
Code	{ return this . Integer ; } size
Distance : 13

14
Tree	{ return this . Integer ; } StringBuilder
Code	{ return this . Integer ; } StringBuilder
Distance : 13

15
Tree	{ return this . Integer ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Integer ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Integer ; } traverseEs6
Code	{ return this . Integer ; } traverseEs6
Distance : 13

17
Tree	{ return this . Integer ; } stroke
Code	{ return this . Integer ; } stroke
Distance : 13

18
Tree	{ return this . Integer ; } obj
Code	{ return this . Integer ; } obj
Distance : 13

19
Tree	{ return this . Integer ; } s
Code	{ return this . Integer ; } s
Distance : 13

20
Tree	{ return this . Integer ; } returnZero
Code	{ return this . Integer ; } returnZero
Distance : 13

21
Tree	{ return this . Integer ; } b
Code	{ return this . Integer ; } b
Distance : 13

22
Tree	{ return this . Integer ; } null
Code	{ return this . Integer ; } null
Distance : 13

23
Tree	{ return this . Integer ; } setUp
Code	{ return this . Integer ; } setUp
Distance : 13

24
Tree	{ return this . Integer ; } node
Code	{ return this . Integer ; } node
Distance : 13

25
Tree	{ return this . Integer ; } reportCodeChange
Code	{ return this . Integer ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Integer ; } t
Code	{ return this . Integer ; } t
Distance : 13

27
Tree	{ return this . Integer ; } FastMath
Code	{ return this . Integer ; } FastMath
Distance : 13

28
Tree	{ return this . Integer ; } invocation
Code	{ return this . Integer ; } invocation
Distance : 13

29
Tree	{ return this . Integer ; } IllegalArgumentException
Code	{ return this . Integer ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Integer ; } expected
Code	{ return this . Integer ; } expected
Distance : 13

31
Tree	{ return this . Integer ; } testSame
Code	{ return this . Integer ; } testSame
Distance : 13

32
Tree	{ return this . Integer ; } createIllegalArgumentException
Code	{ return this . Integer ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Integer ; } ArrayList
Code	{ return this . Integer ; } ArrayList
Distance : 13

34
Tree	{ return this . Integer ; } parent
Code	{ return this . Integer ; } parent
Distance : 13

35
Tree	{ return this . Integer ; } LINE_JOINER
Code	{ return this . Integer ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Integer ; } x
Code	{ return this . Integer ; } x
Distance : 13

37
Tree	{ return this . Integer ; } str
Code	{ return this . Integer ; } str
Distance : 13

38
Tree	{ return this . Integer ; } assertThat
Code	{ return this . Integer ; } assertThat
Distance : 13

39
Tree	{ return this . Integer ; } getFirstChild
Code	{ return this . Integer ; } getFirstChild
Distance : 13

40
Tree	{ return this . Integer ; } sb
Code	{ return this . Integer ; } sb
Distance : 13

41
Tree	{ return this . Integer ; } externs
Code	{ return this . Integer ; } externs
Distance : 13

42
Tree	{ return this . Integer ; } append
Code	{ return this . Integer ; } append
Distance : 13

43
Tree	{ return this . Integer ; } Invocation
Code	{ return this . Integer ; } Invocation
Distance : 13

44
Tree	{ return this . Integer ; } equals
Code	{ return this . Integer ; } equals
Distance : 13

45
Tree	{ return this . Integer ; } index
Code	{ return this . Integer ; } index
Distance : 13

46
Tree	{ return this . Integer ; } NUMBER_CONSTANT
Code	{ return this . Integer ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Integer ; } Object
Code	{ return this . Integer ; } Object
Distance : 13

48
Tree	{ return this . Integer ; } value
Code	{ return this . Integer ; } value
Distance : 13

49
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Integer ; } field
Code	{ return this . Integer ; } field
Distance : 13

73
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Integer ; } length
Code	{ return this . Integer ; } length
Distance : 13

98
Tree	{ return this . Integer ; } @
Code	{ return this . Integer ; } @
Distance : 13

99
Tree	{ return this . Integer ; } instance
Code	{ return this . Integer ; } instance
Distance : 13

100
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

101
Tree	{ super ( Integer ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Integer ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

102
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

104
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

105
Tree	{ returnZero ( Any.ANY ) ; Integer = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Integer = Any.ANY . returnZero () ; }
Distance : 9

106
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

107
Tree	{ returnZero ( Any.ANY ) ; Integer = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Integer = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Integer ; } JSType
Code	{ return this . Integer ; } JSType
Distance : 13

109
Tree	{ return this . Integer ; } static
Code	{ return this . Integer ; } static
Distance : 13

110
Tree	{ return this . Integer ; } char
Code	{ return this . Integer ; } char
Distance : 13

111
Tree	{ return this . Integer ; } return;
Code	{ return this . Integer ; } return;
Distance : 13

112
Tree	{ return this . Integer ; } isEmpty
Code	{ return this . Integer ; } isEmpty
Distance : 13

113
Tree	{ return this . Integer ; } chrono
Code	{ return this . Integer ; } chrono
Distance : 13

114
Tree	{ return this . Integer ; } mockingProgress
Code	{ return this . Integer ; } mockingProgress
Distance : 13

115
Tree	{ return this . Integer ; } js
Code	{ return this . Integer ; } js
Distance : 13

116
Tree	{ return this . Integer ; } stream
Code	{ return this . Integer ; } stream
Distance : 13

117
Tree	{ return this . Integer ; } get
Code	{ return this . Integer ; } get
Distance : 13

118
Tree	{ return this . Integer ; } instant
Code	{ return this . Integer ; } instant
Distance : 13

119
Tree	{ return this . Integer ; } else
Code	{ return this . Integer ; } else
Distance : 13

120
Tree	{ return this . Integer ; } {}
Code	{ return this . Integer ; } {}
Distance : 13

121
Tree	{ return ( Integer ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Integer ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Integer ; } reportMatcher
Code	{ return this . Integer ; } reportMatcher
Distance : 13

123
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

124
Tree	{ reportMatcher ( Any.ANY ) ; Integer = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Integer = Any.ANY . reportMatcher () ; }
Distance : 9

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Integer ; } getField
Code	{ return this . Integer ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ return ( Integer ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Integer ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

130
Tree	{ return ( Integer ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Integer ) reportMatcher ( Any.ANY ) ; }
Distance : 10

131
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

132
Tree	{ return ( Integer ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Integer ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

133
Tree	{ return ( Integer ) returnZero ( Any.ANY ) ; }
Code	{ return ( Integer ) returnZero ( Any.ANY ) ; }
Distance : 10

134
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

135
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

136
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

137
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

138
Tree	{ return this . Integer ; }
Code	{ return this . Integer ; }
Distance : 12

139
Tree	{ super ( Integer ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Integer ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

140
Tree	{ super ( Integer ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Integer ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

141
Tree	{ reportMatcher ( Any.ANY ) ; Integer = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Integer = Any.ANY . returnZero () ; }
Distance : 8

142
Tree	{ super ( Integer ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Integer ) ; returnZero ( Any.ANY ) ; }
Distance : 12

143
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

144
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

145
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

146
Tree	{ return ( Integer ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Integer ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . Integer ; } matcher
Code	{ return this . Integer ; } matcher
Distance : 13

148
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

149
Tree	{ return this . Integer ; } valueOf
Code	{ return this . Integer ; } valueOf
Distance : 13

150
Tree	{ return this . Integer ; } this
Code	{ return this . Integer ; } this
Distance : 13

151
Tree	{ return this . Integer ; } return
Code	{ return this . Integer ; } return
Distance : 13

152
Tree	{ return this . Integer ; } final
Code	{ return this . Integer ; } final
Distance : 13

153
Tree	{ return this . Integer ; } <
Code	{ return this . Integer ; } <
Distance : 13

154
Tree	{ return this . Integer ; } name
Code	{ return this . Integer ; } name
Distance : 13

155
Tree	{ return this . Integer ; } solver
Code	{ return this . Integer ; } solver
Distance : 13

156
Tree	{ return this . Integer ; } y
Code	{ return this . Integer ; } y
Distance : 13

157
Tree	{ return this . Integer ; } PlotChangeEvent
Code	{ return this . Integer ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Integer ; } d
Code	{ return this . Integer ; } d
Distance : 13

159
Tree	{ return this . Integer ; } getParent
Code	{ return this . Integer ; } getParent
Distance : 13

160
Tree	{ return this . Integer ; } for
Code	{ return this . Integer ; } for
Distance : 13

161
Tree	{ return this . Integer ; } UnivariateFunction
Code	{ return this . Integer ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Integer ; } sqrt
Code	{ return this . Integer ; } sqrt
Distance : 13

163
Tree	{ return this . Integer ; } throws
Code	{ return this . Integer ; } throws
Distance : 13

164
Tree	{ return this . Integer ; } scope
Code	{ return this . Integer ; } scope
Distance : 13

165
Tree	{ return this . Integer ; } optimizer
Code	{ return this . Integer ; } optimizer
Distance : 13

166
Tree	{ return this . Integer ; } simpleMethod
Code	{ return this . Integer ; } simpleMethod
Distance : 13

167
Tree	{ return this . Integer ; } isBlock
Code	{ return this . Integer ; } isBlock
Distance : 13

168
Tree	{ return this . Integer ; } getArgumentMatcherStorage
Code	{ return this . Integer ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Integer ; } abs
Code	{ return this . Integer ; } abs
Distance : 13

170
Tree	{ return this . Integer ; } alpha
Code	{ return this . Integer ; } alpha
Distance : 13

171
Tree	{ return this . Integer ; } TestUtilities
Code	{ return this . Integer ; } TestUtilities
Distance : 13

172
Tree	{ return this . Integer ; } if
Code	{ return this . Integer ; } if
Distance : 13

173
Tree	{ return this . Integer ; } pattern
Code	{ return this . Integer ; } pattern
Distance : 13

174
Tree	{ return this . Integer ; } String
Code	{ return this . Integer ; } String
Distance : 13

175
Tree	{ return this . Integer ; } dataset
Code	{ return this . Integer ; } dataset
Distance : 13

176
Tree	{ return this . Integer ; } public
Code	{ return this . Integer ; } public
Distance : 13

177
Tree	{ return this . Integer ; } getMessage
Code	{ return this . Integer ; } getMessage
Distance : 13

178
Tree	{ return this . Integer ; } >
Code	{ return this . Integer ; } >
Distance : 13

179
Tree	{ return this . Integer ; } getChronology
Code	{ return this . Integer ; } getChronology
Distance : 13

180
Tree	{ return this . Integer ; } Collection
Code	{ return this . Integer ; } Collection
Distance : 13

181
Tree	{ return this . Integer ; } =
Code	{ return this . Integer ; } =
Distance : 13

182
Tree	{ return this . Integer ; } new
Code	{ return this . Integer ; } new
Distance : 13

183
Tree	{ return this . Integer ; } ()
Code	{ return this . Integer ; } ()
Distance : 13

184
Tree	{ return this . Integer ; } ,
Code	{ return this . Integer ; } ,
Distance : 13

185
Tree	{ return this . Integer ; } {
Code	{ return this . Integer ; } {
Distance : 13

186
Tree	{ return this . Integer ; } StrBuilder
Code	{ return this . Integer ; } StrBuilder
Distance : 13

187
Tree	{ return this . Integer ; } )
Code	{ return this . Integer ; } )
Distance : 13

188
Tree	{ return this . Integer ; } <s>
Code	{ return this . Integer ; } <s>
Distance : 13

189
Tree	{ return this . Integer ; } {
Code	{ return this . Integer ; } {
Distance : 13

190
Tree	{ return this . Integer ; } <blank>
Code	{ return this . Integer ; } <blank>
Distance : 13

191
Tree	{ return this . Integer ; } ;
Code	{ return this . Integer ; } ;
Distance : 13

192
Tree	{ return this . Integer ; } (
Code	{ return this . Integer ; } (
Distance : 13

193
Tree	{ return this . Integer ; } .
Code	{ return this . Integer ; } .
Distance : 13

194
Tree	{ return this . Integer ; } }
Code	{ return this . Integer ; } }
Distance : 13

195
Tree	{ return this . Integer ; } STRING_CONSTANT
Code	{ return this . Integer ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 104
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnChar () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Character . class ) ) . returnChar () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnChar}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Character})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnChar}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Character ; } invocations
Code	{ return this . Character ; } invocations
Distance : 13

2
Tree	{ return this . Character ; } values
Code	{ return this . Character ; } values
Distance : 13

3
Tree	{ return this . Character ; } setAcceptedLanguage
Code	{ return this . Character ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Character ; } clone
Code	{ return this . Character ; } clone
Distance : 13

5
Tree	{ return this . Character ; } Double
Code	{ return this . Character ; } Double
Distance : 13

6
Tree	{ return this . Character ; } PeriodType
Code	{ return this . Character ; } PeriodType
Distance : 13

7
Tree	{ return this . Character ; } <=
Code	{ return this . Character ; } <=
Distance : 13

8
Tree	{ return this . Character ; } contains
Code	{ return this . Character ; } contains
Distance : 13

9
Tree	{ return this . Character ; } a
Code	{ return this . Character ; } a
Distance : 13

10
Tree	{ return this . Character ; } protected
Code	{ return this . Character ; } protected
Distance : 13

11
Tree	{ return this . Character ; } isNormalBlock
Code	{ return this . Character ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Character ; } MutableTimePeriod
Code	{ return this . Character ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Character ; } size
Code	{ return this . Character ; } size
Distance : 13

14
Tree	{ return this . Character ; } StringBuilder
Code	{ return this . Character ; } StringBuilder
Distance : 13

15
Tree	{ return this . Character ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Character ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Character ; } traverseEs6
Code	{ return this . Character ; } traverseEs6
Distance : 13

17
Tree	{ return this . Character ; } stroke
Code	{ return this . Character ; } stroke
Distance : 13

18
Tree	{ return this . Character ; } obj
Code	{ return this . Character ; } obj
Distance : 13

19
Tree	{ return this . Character ; } s
Code	{ return this . Character ; } s
Distance : 13

20
Tree	{ return this . Character ; } returnZero
Code	{ return this . Character ; } returnZero
Distance : 13

21
Tree	{ return this . Character ; } b
Code	{ return this . Character ; } b
Distance : 13

22
Tree	{ return this . Character ; } null
Code	{ return this . Character ; } null
Distance : 13

23
Tree	{ return this . Character ; } setUp
Code	{ return this . Character ; } setUp
Distance : 13

24
Tree	{ return this . Character ; } node
Code	{ return this . Character ; } node
Distance : 13

25
Tree	{ return this . Character ; } reportCodeChange
Code	{ return this . Character ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Character ; } t
Code	{ return this . Character ; } t
Distance : 13

27
Tree	{ return this . Character ; } FastMath
Code	{ return this . Character ; } FastMath
Distance : 13

28
Tree	{ return this . Character ; } invocation
Code	{ return this . Character ; } invocation
Distance : 13

29
Tree	{ return this . Character ; } IllegalArgumentException
Code	{ return this . Character ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Character ; } expected
Code	{ return this . Character ; } expected
Distance : 13

31
Tree	{ return this . Character ; } testSame
Code	{ return this . Character ; } testSame
Distance : 13

32
Tree	{ return this . Character ; } createIllegalArgumentException
Code	{ return this . Character ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Character ; } ArrayList
Code	{ return this . Character ; } ArrayList
Distance : 13

34
Tree	{ return this . Character ; } parent
Code	{ return this . Character ; } parent
Distance : 13

35
Tree	{ return this . Character ; } LINE_JOINER
Code	{ return this . Character ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Character ; } x
Code	{ return this . Character ; } x
Distance : 13

37
Tree	{ return this . Character ; } str
Code	{ return this . Character ; } str
Distance : 13

38
Tree	{ return this . Character ; } assertThat
Code	{ return this . Character ; } assertThat
Distance : 13

39
Tree	{ return this . Character ; } getFirstChild
Code	{ return this . Character ; } getFirstChild
Distance : 13

40
Tree	{ return this . Character ; } sb
Code	{ return this . Character ; } sb
Distance : 13

41
Tree	{ return this . Character ; } externs
Code	{ return this . Character ; } externs
Distance : 13

42
Tree	{ return this . Character ; } append
Code	{ return this . Character ; } append
Distance : 13

43
Tree	{ return this . Character ; } Invocation
Code	{ return this . Character ; } Invocation
Distance : 13

44
Tree	{ return this . Character ; } equals
Code	{ return this . Character ; } equals
Distance : 13

45
Tree	{ return this . Character ; } index
Code	{ return this . Character ; } index
Distance : 13

46
Tree	{ return this . Character ; } NUMBER_CONSTANT
Code	{ return this . Character ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Character ; } Object
Code	{ return this . Character ; } Object
Distance : 13

48
Tree	{ return this . Character ; } value
Code	{ return this . Character ; } value
Distance : 13

49
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } testSame
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } testSame
Distance : 10

50
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } add
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } add
Distance : 10

51
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } parent
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } parent
Distance : 10

52
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } createIllegalArgumentException
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } serialised
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } serialised
Distance : 10

54
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } y
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } y
Distance : 10

55
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } sb
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } sb
Distance : 10

56
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } scope
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } scope
Distance : 10

57
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } getFirstChild
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } throws
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } throws
Distance : 10

59
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Double
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Double
Distance : 10

60
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } <=
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } <=
Distance : 10

61
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } clone
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } clone
Distance : 10

62
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } sqrt
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } sqrt
Distance : 10

63
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } isBlock
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } isBlock
Distance : 10

64
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } returnZero
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } returnZero
Distance : 10

65
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } UnivariateFunction
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } append
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } append
Distance : 10

67
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } getInstance
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } getInstance
Distance : 10

69
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } valueOf
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnChar () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnChar () ; }
Distance : 7

71
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Math
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Math
Distance : 10

72
Tree	{ return this . Character ; } field
Code	{ return this . Character ; } field
Distance : 13

73
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } wanted
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } wanted
Distance : 10

74
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } NodeUtil
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } x
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } x
Distance : 10

76
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } try
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } try
Distance : 10

77
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } fail
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } fail
Distance : 10

78
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Args
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Args
Distance : 10

79
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } List
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } List
Distance : 10

80
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } f
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } f
Distance : 10

81
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } ParamChecks
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } array
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } array
Distance : 10

83
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } <>
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } <>
Distance : 10

84
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } m
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } m
Distance : 10

85
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } boolean
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } boolean
Distance : 10

86
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } :
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } :
Distance : 10

87
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } result
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } result
Distance : 10

88
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } join
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } join
Distance : 10

89
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } paint
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } paint
Distance : 10

90
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } *
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } *
Distance : 10

91
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } type
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } type
Distance : 10

92
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } long
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } long
Distance : 10

93
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } length
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } length
Distance : 10

94
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } v
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } v
Distance : 10

95
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Integer
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } Integer
Distance : 10

96
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } root
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; } root
Distance : 10

97
Tree	{ return this . Character ; } length
Code	{ return this . Character ; } length
Distance : 13

98
Tree	{ return this . Character ; } @
Code	{ return this . Character ; } @
Distance : 13

99
Tree	{ return this . Character ; } instance
Code	{ return this . Character ; } instance
Distance : 13

100
Tree	{ super ( Character ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Character ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

101
Tree	{ reportMatcher ( Any.ANY ) ; Character = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Character = Any.ANY . reportMatcher () ; }
Distance : 9

102
Tree	{ return ( Character ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Character ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ returnChar ( Any.ANY ) ; return break; ; }
Code	{ returnChar ( Any.ANY ) ; return break; ; }
Distance : 12

104
Tree	{ returnChar ( Any.ANY ) ; return continue; ; }
Code	{ returnChar ( Any.ANY ) ; return continue; ; }
Distance : 12

105
Tree	{ returnChar ( Any.ANY ) ; return default: ; }
Code	{ returnChar ( Any.ANY ) ; return default: ; }
Distance : 12

106
Tree	{ returnChar ( Any.ANY ) ; Character = Any.ANY . returnChar () ; }
Code	{ returnChar ( Any.ANY ) ; Character = Any.ANY . returnChar () ; }
Distance : 9

107
Tree	{ returnChar ( Any.ANY ) ; Character = Any.ANY . reportMatcher () ; }
Code	{ returnChar ( Any.ANY ) ; Character = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Character ; } char
Code	{ return this . Character ; } char
Distance : 13

109
Tree	{ return this . Character ; } mockingProgress
Code	{ return this . Character ; } mockingProgress
Distance : 13

110
Tree	{ return this . Character ; } chrono
Code	{ return this . Character ; } chrono
Distance : 13

111
Tree	{ return this . Character ; } isEmpty
Code	{ return this . Character ; } isEmpty
Distance : 13

112
Tree	{ return this . Character ; } return;
Code	{ return this . Character ; } return;
Distance : 13

113
Tree	{ return this . Character ; } js
Code	{ return this . Character ; } js
Distance : 13

114
Tree	{ return this . Character ; } StrBuilder
Code	{ return this . Character ; } StrBuilder
Distance : 13

115
Tree	{ return this . Character ; } JSType
Code	{ return this . Character ; } JSType
Distance : 13

116
Tree	{ return this . Character ; } static
Code	{ return this . Character ; } static
Distance : 13

117
Tree	{ return this . Character ; } dataset
Code	{ return this . Character ; } dataset
Distance : 13

118
Tree	{ return this . Character ; } abs
Code	{ return this . Character ; } abs
Distance : 13

119
Tree	{ return this . Character ; } matcher
Code	{ return this . Character ; } matcher
Distance : 13

120
Tree	{ return this . Character ; } reportMatcher
Code	{ return this . Character ; } reportMatcher
Distance : 13

121
Tree	{ return returnChar ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnChar ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Character ; } {}
Code	{ return this . Character ; } {}
Distance : 13

123
Tree	{ returnChar ( Any.ANY ) ; return return; ; }
Code	{ returnChar ( Any.ANY ) ; return return; ; }
Distance : 12

124
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . reportMatcher () ; }
Distance : 10

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Character ; } getField
Code	{ return this . Character ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

132
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) ; }
Code	{ super ( Character ) ; returnChar ( Any.ANY ) ; }
Distance : 12

133
Tree	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; }
Code	{ super ( Character ) ; returnChar ( Any.ANY ) . returnChar () ; }
Distance : 9

134
Tree	{ return this . Character ; }
Code	{ return this . Character ; }
Distance : 12

135
Tree	{ return ( Character ) returnChar ( Any.ANY ) ; }
Code	{ return ( Character ) returnChar ( Any.ANY ) ; }
Distance : 10

136
Tree	{ return ( Character ) returnChar ( Any.ANY ) . returnChar () ; }
Code	{ return ( Character ) returnChar ( Any.ANY ) . returnChar () ; }
Distance : 8

137
Tree	{ returnChar ( Any.ANY ) ; return null ; }
Code	{ returnChar ( Any.ANY ) ; return null ; }
Distance : 12

138
Tree	{ return ( Character ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Character ) reportMatcher ( Any.ANY ) ; }
Distance : 10

139
Tree	{ super ( Character ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Character ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

140
Tree	{ super ( Character ) ; reportMatcher ( Any.ANY ) . returnChar () ; }
Code	{ super ( Character ) ; reportMatcher ( Any.ANY ) . returnChar () ; }
Distance : 9

141
Tree	{ return returnChar ( Any.ANY ) . returnChar () ; }
Code	{ return returnChar ( Any.ANY ) . returnChar () ; }
Distance : 8

142
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

143
Tree	{ return ( Character ) reportMatcher ( Any.ANY ) . returnChar () ; }
Code	{ return ( Character ) reportMatcher ( Any.ANY ) . returnChar () ; }
Distance : 8

144
Tree	{ reportMatcher ( Any.ANY ) ; Character = Any.ANY . returnChar () ; }
Code	{ reportMatcher ( Any.ANY ) ; Character = Any.ANY . returnChar () ; }
Distance : 8

145
Tree	{ returnChar ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnChar ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

146
Tree	{ return ( Character ) returnChar ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Character ) returnChar ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . Character ; } get
Code	{ return this . Character ; } get
Distance : 13

148
Tree	{ returnChar ( Any.ANY ) ; return super(); ; }
Code	{ returnChar ( Any.ANY ) ; return super(); ; }
Distance : 12

149
Tree	{ return this . Character ; } valueOf
Code	{ return this . Character ; } valueOf
Distance : 13

150
Tree	{ return this . Character ; } this
Code	{ return this . Character ; } this
Distance : 13

151
Tree	{ return this . Character ; } return
Code	{ return this . Character ; } return
Distance : 13

152
Tree	{ return this . Character ; } final
Code	{ return this . Character ; } final
Distance : 13

153
Tree	{ return this . Character ; } <
Code	{ return this . Character ; } <
Distance : 13

154
Tree	{ return this . Character ; } name
Code	{ return this . Character ; } name
Distance : 13

155
Tree	{ return this . Character ; } solver
Code	{ return this . Character ; } solver
Distance : 13

156
Tree	{ return this . Character ; } y
Code	{ return this . Character ; } y
Distance : 13

157
Tree	{ return this . Character ; } PlotChangeEvent
Code	{ return this . Character ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Character ; } d
Code	{ return this . Character ; } d
Distance : 13

159
Tree	{ return this . Character ; } getParent
Code	{ return this . Character ; } getParent
Distance : 13

160
Tree	{ return this . Character ; } for
Code	{ return this . Character ; } for
Distance : 13

161
Tree	{ return this . Character ; } UnivariateFunction
Code	{ return this . Character ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Character ; } sqrt
Code	{ return this . Character ; } sqrt
Distance : 13

163
Tree	{ return this . Character ; } throws
Code	{ return this . Character ; } throws
Distance : 13

164
Tree	{ return this . Character ; } scope
Code	{ return this . Character ; } scope
Distance : 13

165
Tree	{ return this . Character ; } optimizer
Code	{ return this . Character ; } optimizer
Distance : 13

166
Tree	{ return this . Character ; } simpleMethod
Code	{ return this . Character ; } simpleMethod
Distance : 13

167
Tree	{ return this . Character ; } isBlock
Code	{ return this . Character ; } isBlock
Distance : 13

168
Tree	{ return this . Character ; } getArgumentMatcherStorage
Code	{ return this . Character ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Character ; } instant
Code	{ return this . Character ; } instant
Distance : 13

170
Tree	{ return this . Character ; } alpha
Code	{ return this . Character ; } alpha
Distance : 13

171
Tree	{ return this . Character ; } TestUtilities
Code	{ return this . Character ; } TestUtilities
Distance : 13

172
Tree	{ return this . Character ; } if
Code	{ return this . Character ; } if
Distance : 13

173
Tree	{ return this . Character ; } pattern
Code	{ return this . Character ; } pattern
Distance : 13

174
Tree	{ return this . Character ; } String
Code	{ return this . Character ; } String
Distance : 13

175
Tree	{ return this . Character ; } else
Code	{ return this . Character ; } else
Distance : 13

176
Tree	{ return this . Character ; } public
Code	{ return this . Character ; } public
Distance : 13

177
Tree	{ return this . Character ; } getMessage
Code	{ return this . Character ; } getMessage
Distance : 13

178
Tree	{ return this . Character ; } >
Code	{ return this . Character ; } >
Distance : 13

179
Tree	{ return this . Character ; } getChronology
Code	{ return this . Character ; } getChronology
Distance : 13

180
Tree	{ return this . Character ; } Collection
Code	{ return this . Character ; } Collection
Distance : 13

181
Tree	{ return this . Character ; } =
Code	{ return this . Character ; } =
Distance : 13

182
Tree	{ return this . Character ; } new
Code	{ return this . Character ; } new
Distance : 13

183
Tree	{ return this . Character ; } ()
Code	{ return this . Character ; } ()
Distance : 13

184
Tree	{ return this . Character ; } ,
Code	{ return this . Character ; } ,
Distance : 13

185
Tree	{ return this . Character ; } {
Code	{ return this . Character ; } {
Distance : 13

186
Tree	{ return this . Character ; } stream
Code	{ return this . Character ; } stream
Distance : 13

187
Tree	{ return this . Character ; } )
Code	{ return this . Character ; } )
Distance : 13

188
Tree	{ return this . Character ; } <s>
Code	{ return this . Character ; } <s>
Distance : 13

189
Tree	{ return this . Character ; } {
Code	{ return this . Character ; } {
Distance : 13

190
Tree	{ return this . Character ; } <blank>
Code	{ return this . Character ; } <blank>
Distance : 13

191
Tree	{ return this . Character ; } ;
Code	{ return this . Character ; } ;
Distance : 13

192
Tree	{ return this . Character ; } (
Code	{ return this . Character ; } (
Distance : 13

193
Tree	{ return this . Character ; } .
Code	{ return this . Character ; } .
Distance : 13

194
Tree	{ return this . Character ; } }
Code	{ return this . Character ; } }
Distance : 13

195
Tree	{ return this . Character ; } STRING_CONSTANT
Code	{ return this . Character ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 105
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnZero () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Byte . class ) ) . returnZero () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Byte})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnZero}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Byte ; } invocations
Code	{ return this . Byte ; } invocations
Distance : 13

2
Tree	{ return this . Byte ; } values
Code	{ return this . Byte ; } values
Distance : 13

3
Tree	{ return this . Byte ; } setAcceptedLanguage
Code	{ return this . Byte ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Byte ; } clone
Code	{ return this . Byte ; } clone
Distance : 13

5
Tree	{ return this . Byte ; } Double
Code	{ return this . Byte ; } Double
Distance : 13

6
Tree	{ return this . Byte ; } PeriodType
Code	{ return this . Byte ; } PeriodType
Distance : 13

7
Tree	{ return this . Byte ; } <=
Code	{ return this . Byte ; } <=
Distance : 13

8
Tree	{ return this . Byte ; } contains
Code	{ return this . Byte ; } contains
Distance : 13

9
Tree	{ return this . Byte ; } a
Code	{ return this . Byte ; } a
Distance : 13

10
Tree	{ return this . Byte ; } protected
Code	{ return this . Byte ; } protected
Distance : 13

11
Tree	{ return this . Byte ; } isNormalBlock
Code	{ return this . Byte ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Byte ; } MutableTimePeriod
Code	{ return this . Byte ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Byte ; } size
Code	{ return this . Byte ; } size
Distance : 13

14
Tree	{ return this . Byte ; } StringBuilder
Code	{ return this . Byte ; } StringBuilder
Distance : 13

15
Tree	{ return this . Byte ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Byte ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Byte ; } traverseEs6
Code	{ return this . Byte ; } traverseEs6
Distance : 13

17
Tree	{ return this . Byte ; } stroke
Code	{ return this . Byte ; } stroke
Distance : 13

18
Tree	{ return this . Byte ; } obj
Code	{ return this . Byte ; } obj
Distance : 13

19
Tree	{ return this . Byte ; } s
Code	{ return this . Byte ; } s
Distance : 13

20
Tree	{ return this . Byte ; } returnZero
Code	{ return this . Byte ; } returnZero
Distance : 13

21
Tree	{ return this . Byte ; } b
Code	{ return this . Byte ; } b
Distance : 13

22
Tree	{ return this . Byte ; } null
Code	{ return this . Byte ; } null
Distance : 13

23
Tree	{ return this . Byte ; } setUp
Code	{ return this . Byte ; } setUp
Distance : 13

24
Tree	{ return this . Byte ; } node
Code	{ return this . Byte ; } node
Distance : 13

25
Tree	{ return this . Byte ; } reportCodeChange
Code	{ return this . Byte ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Byte ; } t
Code	{ return this . Byte ; } t
Distance : 13

27
Tree	{ return this . Byte ; } FastMath
Code	{ return this . Byte ; } FastMath
Distance : 13

28
Tree	{ return this . Byte ; } invocation
Code	{ return this . Byte ; } invocation
Distance : 13

29
Tree	{ return this . Byte ; } IllegalArgumentException
Code	{ return this . Byte ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Byte ; } expected
Code	{ return this . Byte ; } expected
Distance : 13

31
Tree	{ return this . Byte ; } testSame
Code	{ return this . Byte ; } testSame
Distance : 13

32
Tree	{ return this . Byte ; } createIllegalArgumentException
Code	{ return this . Byte ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Byte ; } ArrayList
Code	{ return this . Byte ; } ArrayList
Distance : 13

34
Tree	{ return this . Byte ; } parent
Code	{ return this . Byte ; } parent
Distance : 13

35
Tree	{ return this . Byte ; } LINE_JOINER
Code	{ return this . Byte ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Byte ; } x
Code	{ return this . Byte ; } x
Distance : 13

37
Tree	{ return this . Byte ; } str
Code	{ return this . Byte ; } str
Distance : 13

38
Tree	{ return this . Byte ; } assertThat
Code	{ return this . Byte ; } assertThat
Distance : 13

39
Tree	{ return this . Byte ; } getFirstChild
Code	{ return this . Byte ; } getFirstChild
Distance : 13

40
Tree	{ return this . Byte ; } sb
Code	{ return this . Byte ; } sb
Distance : 13

41
Tree	{ return this . Byte ; } externs
Code	{ return this . Byte ; } externs
Distance : 13

42
Tree	{ return this . Byte ; } append
Code	{ return this . Byte ; } append
Distance : 13

43
Tree	{ return this . Byte ; } Invocation
Code	{ return this . Byte ; } Invocation
Distance : 13

44
Tree	{ return this . Byte ; } equals
Code	{ return this . Byte ; } equals
Distance : 13

45
Tree	{ return this . Byte ; } index
Code	{ return this . Byte ; } index
Distance : 13

46
Tree	{ return this . Byte ; } NUMBER_CONSTANT
Code	{ return this . Byte ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Byte ; } Object
Code	{ return this . Byte ; } Object
Distance : 13

48
Tree	{ return this . Byte ; } value
Code	{ return this . Byte ; } value
Distance : 13

49
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } testSame
Distance : 10

50
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } add
Distance : 10

51
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } parent
Distance : 10

52
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } serialised
Distance : 10

54
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } y
Distance : 10

55
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sb
Distance : 10

56
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } scope
Distance : 10

57
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } throws
Distance : 10

59
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Double
Distance : 10

60
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <=
Distance : 10

61
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } clone
Distance : 10

62
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } sqrt
Distance : 10

63
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } isBlock
Distance : 10

64
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } returnZero
Distance : 10

65
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } append
Distance : 10

67
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } getInstance
Distance : 10

69
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 7

71
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Math
Distance : 10

72
Tree	{ return this . Byte ; } field
Code	{ return this . Byte ; } field
Distance : 13

73
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } wanted
Distance : 10

74
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } x
Distance : 10

76
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } try
Distance : 10

77
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } fail
Distance : 10

78
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Args
Distance : 10

79
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } List
Distance : 10

80
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } f
Distance : 10

81
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } array
Distance : 10

83
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } <>
Distance : 10

84
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } m
Distance : 10

85
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } boolean
Distance : 10

86
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } :
Distance : 10

87
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } result
Distance : 10

88
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } join
Distance : 10

89
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } paint
Distance : 10

90
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } *
Distance : 10

91
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } type
Distance : 10

92
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } long
Distance : 10

93
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } length
Distance : 10

94
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } v
Distance : 10

95
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } Integer
Distance : 10

96
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; } root
Distance : 10

97
Tree	{ return this . Byte ; } length
Code	{ return this . Byte ; } length
Distance : 13

98
Tree	{ return this . Byte ; } @
Code	{ return this . Byte ; } @
Distance : 13

99
Tree	{ return this . Byte ; } instance
Code	{ return this . Byte ; } instance
Distance : 13

100
Tree	{ returnZero ( Any.ANY ) ; return super(); ; }
Code	{ returnZero ( Any.ANY ) ; return super(); ; }
Distance : 12

101
Tree	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

102
Tree	{ return ( Byte ) returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Byte ) returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 9

103
Tree	{ returnZero ( Any.ANY ) ; return break; ; }
Code	{ returnZero ( Any.ANY ) ; return break; ; }
Distance : 12

104
Tree	{ returnZero ( Any.ANY ) ; return continue; ; }
Code	{ returnZero ( Any.ANY ) ; return continue; ; }
Distance : 12

105
Tree	{ returnZero ( Any.ANY ) ; Byte = Any.ANY . returnZero () ; }
Code	{ returnZero ( Any.ANY ) ; Byte = Any.ANY . returnZero () ; }
Distance : 9

106
Tree	{ returnZero ( Any.ANY ) ; return default: ; }
Code	{ returnZero ( Any.ANY ) ; return default: ; }
Distance : 12

107
Tree	{ returnZero ( Any.ANY ) ; Byte = Any.ANY . reportMatcher () ; }
Code	{ returnZero ( Any.ANY ) ; Byte = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Byte ; } JSType
Code	{ return this . Byte ; } JSType
Distance : 13

109
Tree	{ return this . Byte ; } return;
Code	{ return this . Byte ; } return;
Distance : 13

110
Tree	{ return this . Byte ; } isEmpty
Code	{ return this . Byte ; } isEmpty
Distance : 13

111
Tree	{ return this . Byte ; } static
Code	{ return this . Byte ; } static
Distance : 13

112
Tree	{ return this . Byte ; } chrono
Code	{ return this . Byte ; } chrono
Distance : 13

113
Tree	{ return this . Byte ; } char
Code	{ return this . Byte ; } char
Distance : 13

114
Tree	{ return this . Byte ; } mockingProgress
Code	{ return this . Byte ; } mockingProgress
Distance : 13

115
Tree	{ return this . Byte ; } else
Code	{ return this . Byte ; } else
Distance : 13

116
Tree	{ return this . Byte ; } get
Code	{ return this . Byte ; } get
Distance : 13

117
Tree	{ return this . Byte ; } instant
Code	{ return this . Byte ; } instant
Distance : 13

118
Tree	{ return this . Byte ; } stream
Code	{ return this . Byte ; } stream
Distance : 13

119
Tree	{ return this . Byte ; } {}
Code	{ return this . Byte ; } {}
Distance : 13

120
Tree	{ return this . Byte ; } reportMatcher
Code	{ return this . Byte ; } reportMatcher
Distance : 13

121
Tree	{ return ( Byte ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Byte ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Byte ; } matcher
Code	{ return this . Byte ; } matcher
Distance : 13

123
Tree	{ reportMatcher ( Any.ANY ) ; Byte = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Byte = Any.ANY . reportMatcher () ; }
Distance : 9

124
Tree	{ returnZero ( Any.ANY ) ; return return; ; }
Code	{ returnZero ( Any.ANY ) ; return return; ; }
Distance : 12

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Byte ; } getField
Code	{ return this . Byte ; } getField
Distance : 13

127
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

128
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

131
Tree	{ return ( Byte ) reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ return ( Byte ) reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 8

132
Tree	{ return ( Byte ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Byte ) reportMatcher ( Any.ANY ) ; }
Distance : 10

133
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . returnZero () ; }
Distance : 9

134
Tree	{ returnZero ( Any.ANY ) ; return null ; }
Code	{ returnZero ( Any.ANY ) ; return null ; }
Distance : 12

135
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

136
Tree	{ super ( Byte ) ; returnZero ( Any.ANY ) . returnZero () ; }
Code	{ super ( Byte ) ; returnZero ( Any.ANY ) . returnZero () ; }
Distance : 9

137
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

138
Tree	{ return ( Byte ) returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return ( Byte ) returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

139
Tree	{ return ( Byte ) returnZero ( Any.ANY ) ; }
Code	{ return ( Byte ) returnZero ( Any.ANY ) ; }
Distance : 10

140
Tree	{ return this . Byte ; }
Code	{ return this . Byte ; }
Distance : 12

141
Tree	{ super ( Byte ) ; returnZero ( Any.ANY ) ; }
Code	{ super ( Byte ) ; returnZero ( Any.ANY ) ; }
Distance : 12

142
Tree	{ return returnZero ( Any.ANY ) . returnZero () ; }
Code	{ return returnZero ( Any.ANY ) . returnZero () ; }
Distance : 8

143
Tree	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnZero ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

144
Tree	{ reportMatcher ( Any.ANY ) ; Byte = Any.ANY . returnZero () ; }
Code	{ reportMatcher ( Any.ANY ) ; Byte = Any.ANY . returnZero () ; }
Distance : 8

145
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

146
Tree	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Byte ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

147
Tree	{ return this . Byte ; } abs
Code	{ return this . Byte ; } abs
Distance : 13

148
Tree	{ super ( Byte ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Byte ) ; returnZero ( Any.ANY ) . reportMatcher () ; }
Distance : 10

149
Tree	{ return this . Byte ; } valueOf
Code	{ return this . Byte ; } valueOf
Distance : 13

150
Tree	{ return this . Byte ; } this
Code	{ return this . Byte ; } this
Distance : 13

151
Tree	{ return this . Byte ; } return
Code	{ return this . Byte ; } return
Distance : 13

152
Tree	{ return this . Byte ; } final
Code	{ return this . Byte ; } final
Distance : 13

153
Tree	{ return this . Byte ; } <
Code	{ return this . Byte ; } <
Distance : 13

154
Tree	{ return this . Byte ; } name
Code	{ return this . Byte ; } name
Distance : 13

155
Tree	{ return this . Byte ; } solver
Code	{ return this . Byte ; } solver
Distance : 13

156
Tree	{ return this . Byte ; } y
Code	{ return this . Byte ; } y
Distance : 13

157
Tree	{ return this . Byte ; } PlotChangeEvent
Code	{ return this . Byte ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Byte ; } d
Code	{ return this . Byte ; } d
Distance : 13

159
Tree	{ return this . Byte ; } getParent
Code	{ return this . Byte ; } getParent
Distance : 13

160
Tree	{ return this . Byte ; } for
Code	{ return this . Byte ; } for
Distance : 13

161
Tree	{ return this . Byte ; } UnivariateFunction
Code	{ return this . Byte ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Byte ; } sqrt
Code	{ return this . Byte ; } sqrt
Distance : 13

163
Tree	{ return this . Byte ; } throws
Code	{ return this . Byte ; } throws
Distance : 13

164
Tree	{ return this . Byte ; } scope
Code	{ return this . Byte ; } scope
Distance : 13

165
Tree	{ return this . Byte ; } optimizer
Code	{ return this . Byte ; } optimizer
Distance : 13

166
Tree	{ return this . Byte ; } simpleMethod
Code	{ return this . Byte ; } simpleMethod
Distance : 13

167
Tree	{ return this . Byte ; } isBlock
Code	{ return this . Byte ; } isBlock
Distance : 13

168
Tree	{ return this . Byte ; } getArgumentMatcherStorage
Code	{ return this . Byte ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Byte ; } dataset
Code	{ return this . Byte ; } dataset
Distance : 13

170
Tree	{ return this . Byte ; } alpha
Code	{ return this . Byte ; } alpha
Distance : 13

171
Tree	{ return this . Byte ; } TestUtilities
Code	{ return this . Byte ; } TestUtilities
Distance : 13

172
Tree	{ return this . Byte ; } if
Code	{ return this . Byte ; } if
Distance : 13

173
Tree	{ return this . Byte ; } pattern
Code	{ return this . Byte ; } pattern
Distance : 13

174
Tree	{ return this . Byte ; } String
Code	{ return this . Byte ; } String
Distance : 13

175
Tree	{ return this . Byte ; } StrBuilder
Code	{ return this . Byte ; } StrBuilder
Distance : 13

176
Tree	{ return this . Byte ; } public
Code	{ return this . Byte ; } public
Distance : 13

177
Tree	{ return this . Byte ; } getMessage
Code	{ return this . Byte ; } getMessage
Distance : 13

178
Tree	{ return this . Byte ; } >
Code	{ return this . Byte ; } >
Distance : 13

179
Tree	{ return this . Byte ; } getChronology
Code	{ return this . Byte ; } getChronology
Distance : 13

180
Tree	{ return this . Byte ; } Collection
Code	{ return this . Byte ; } Collection
Distance : 13

181
Tree	{ return this . Byte ; } =
Code	{ return this . Byte ; } =
Distance : 13

182
Tree	{ return this . Byte ; } new
Code	{ return this . Byte ; } new
Distance : 13

183
Tree	{ return this . Byte ; } ()
Code	{ return this . Byte ; } ()
Distance : 13

184
Tree	{ return this . Byte ; } ,
Code	{ return this . Byte ; } ,
Distance : 13

185
Tree	{ return this . Byte ; } {
Code	{ return this . Byte ; } {
Distance : 13

186
Tree	{ return this . Byte ; } js
Code	{ return this . Byte ; } js
Distance : 13

187
Tree	{ return this . Byte ; } )
Code	{ return this . Byte ; } )
Distance : 13

188
Tree	{ return this . Byte ; } <s>
Code	{ return this . Byte ; } <s>
Distance : 13

189
Tree	{ return this . Byte ; } {
Code	{ return this . Byte ; } {
Distance : 13

190
Tree	{ return this . Byte ; } <blank>
Code	{ return this . Byte ; } <blank>
Distance : 13

191
Tree	{ return this . Byte ; } ;
Code	{ return this . Byte ; } ;
Distance : 13

192
Tree	{ return this . Byte ; } (
Code	{ return this . Byte ; } (
Distance : 13

193
Tree	{ return this . Byte ; } .
Code	{ return this . Byte ; } .
Distance : 13

194
Tree	{ return this . Byte ; } }
Code	{ return this . Byte ; } }
Distance : 13

195
Tree	{ return this . Byte ; } STRING_CONSTANT
Code	{ return this . Byte ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 106
Parent Code is: 
{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
-------------------------------------------------------------------------------
Child code is: 
{ return reportMatcher ( new InstanceOf ( Boolean . class ) ) . returnFalse () ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (40{val=Any.ANY}) (215{val=)})) (235{val=.}) (802{val=returnFalse}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (8 (218{val={}) (41 (329{val=return}) (32 (32 (802{val=reportMatcher}) (214{val=(}) (14 (304{val=new}) (43 (801{val=InstanceOf})) (214{val=(}) (57 (43 (800{val=Boolean})) (235{val=.}) (341{val=class})) (215{val=)})) (215{val=)})) (235{val=.}) (802{val=returnFalse}) (216{val=()})) (227{val=;})) (219{val=}})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/6/parent/src_org_mockito_Matchers.java
-------------------------------------------------------------------------------
Edit Distance : 7
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	{ reportMatcher ( Any.ANY ) ; return null ; }
Code	{ reportMatcher ( Any.ANY ) ; return null ; }
Distance : 11

1
Tree	{ return this . Boolean ; } invocations
Code	{ return this . Boolean ; } invocations
Distance : 13

2
Tree	{ return this . Boolean ; } values
Code	{ return this . Boolean ; } values
Distance : 13

3
Tree	{ return this . Boolean ; } setAcceptedLanguage
Code	{ return this . Boolean ; } setAcceptedLanguage
Distance : 13

4
Tree	{ return this . Boolean ; } clone
Code	{ return this . Boolean ; } clone
Distance : 13

5
Tree	{ return this . Boolean ; } Double
Code	{ return this . Boolean ; } Double
Distance : 13

6
Tree	{ return this . Boolean ; } PeriodType
Code	{ return this . Boolean ; } PeriodType
Distance : 13

7
Tree	{ return this . Boolean ; } <=
Code	{ return this . Boolean ; } <=
Distance : 13

8
Tree	{ return this . Boolean ; } contains
Code	{ return this . Boolean ; } contains
Distance : 13

9
Tree	{ return this . Boolean ; } a
Code	{ return this . Boolean ; } a
Distance : 13

10
Tree	{ return this . Boolean ; } protected
Code	{ return this . Boolean ; } protected
Distance : 13

11
Tree	{ return this . Boolean ; } isNormalBlock
Code	{ return this . Boolean ; } isNormalBlock
Distance : 13

12
Tree	{ return this . Boolean ; } MutableTimePeriod
Code	{ return this . Boolean ; } MutableTimePeriod
Distance : 13

13
Tree	{ return this . Boolean ; } size
Code	{ return this . Boolean ; } size
Distance : 13

14
Tree	{ return this . Boolean ; } StringBuilder
Code	{ return this . Boolean ; } StringBuilder
Distance : 13

15
Tree	{ return this . Boolean ; } LanguageMode.ECMASCRIPT_2015
Code	{ return this . Boolean ; } LanguageMode.ECMASCRIPT_2015
Distance : 13

16
Tree	{ return this . Boolean ; } traverseEs6
Code	{ return this . Boolean ; } traverseEs6
Distance : 13

17
Tree	{ return this . Boolean ; } stroke
Code	{ return this . Boolean ; } stroke
Distance : 13

18
Tree	{ return this . Boolean ; } obj
Code	{ return this . Boolean ; } obj
Distance : 13

19
Tree	{ return this . Boolean ; } s
Code	{ return this . Boolean ; } s
Distance : 13

20
Tree	{ return this . Boolean ; } returnZero
Code	{ return this . Boolean ; } returnZero
Distance : 13

21
Tree	{ return this . Boolean ; } b
Code	{ return this . Boolean ; } b
Distance : 13

22
Tree	{ return this . Boolean ; } null
Code	{ return this . Boolean ; } null
Distance : 13

23
Tree	{ return this . Boolean ; } setUp
Code	{ return this . Boolean ; } setUp
Distance : 13

24
Tree	{ return this . Boolean ; } node
Code	{ return this . Boolean ; } node
Distance : 13

25
Tree	{ return this . Boolean ; } reportCodeChange
Code	{ return this . Boolean ; } reportCodeChange
Distance : 13

26
Tree	{ return this . Boolean ; } t
Code	{ return this . Boolean ; } t
Distance : 13

27
Tree	{ return this . Boolean ; } FastMath
Code	{ return this . Boolean ; } FastMath
Distance : 13

28
Tree	{ return this . Boolean ; } invocation
Code	{ return this . Boolean ; } invocation
Distance : 13

29
Tree	{ return this . Boolean ; } IllegalArgumentException
Code	{ return this . Boolean ; } IllegalArgumentException
Distance : 13

30
Tree	{ return this . Boolean ; } expected
Code	{ return this . Boolean ; } expected
Distance : 13

31
Tree	{ return this . Boolean ; } testSame
Code	{ return this . Boolean ; } testSame
Distance : 13

32
Tree	{ return this . Boolean ; } createIllegalArgumentException
Code	{ return this . Boolean ; } createIllegalArgumentException
Distance : 13

33
Tree	{ return this . Boolean ; } ArrayList
Code	{ return this . Boolean ; } ArrayList
Distance : 13

34
Tree	{ return this . Boolean ; } parent
Code	{ return this . Boolean ; } parent
Distance : 13

35
Tree	{ return this . Boolean ; } LINE_JOINER
Code	{ return this . Boolean ; } LINE_JOINER
Distance : 13

36
Tree	{ return this . Boolean ; } x
Code	{ return this . Boolean ; } x
Distance : 13

37
Tree	{ return this . Boolean ; } str
Code	{ return this . Boolean ; } str
Distance : 13

38
Tree	{ return this . Boolean ; } assertThat
Code	{ return this . Boolean ; } assertThat
Distance : 13

39
Tree	{ return this . Boolean ; } getFirstChild
Code	{ return this . Boolean ; } getFirstChild
Distance : 13

40
Tree	{ return this . Boolean ; } sb
Code	{ return this . Boolean ; } sb
Distance : 13

41
Tree	{ return this . Boolean ; } externs
Code	{ return this . Boolean ; } externs
Distance : 13

42
Tree	{ return this . Boolean ; } append
Code	{ return this . Boolean ; } append
Distance : 13

43
Tree	{ return this . Boolean ; } Invocation
Code	{ return this . Boolean ; } Invocation
Distance : 13

44
Tree	{ return this . Boolean ; } equals
Code	{ return this . Boolean ; } equals
Distance : 13

45
Tree	{ return this . Boolean ; } index
Code	{ return this . Boolean ; } index
Distance : 13

46
Tree	{ return this . Boolean ; } NUMBER_CONSTANT
Code	{ return this . Boolean ; } NUMBER_CONSTANT
Distance : 13

47
Tree	{ return this . Boolean ; } Object
Code	{ return this . Boolean ; } Object
Distance : 13

48
Tree	{ return this . Boolean ; } value
Code	{ return this . Boolean ; } value
Distance : 13

49
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } testSame
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } testSame
Distance : 10

50
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } add
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } add
Distance : 10

51
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } parent
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } parent
Distance : 10

52
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } createIllegalArgumentException
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } createIllegalArgumentException
Distance : 10

53
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } serialised
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } serialised
Distance : 10

54
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } y
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } y
Distance : 10

55
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } sb
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } sb
Distance : 10

56
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } scope
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } scope
Distance : 10

57
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } getFirstChild
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } getFirstChild
Distance : 10

58
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } throws
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } throws
Distance : 10

59
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Double
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Double
Distance : 10

60
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } <=
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } <=
Distance : 10

61
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } clone
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } clone
Distance : 10

62
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } sqrt
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } sqrt
Distance : 10

63
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } isBlock
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } isBlock
Distance : 10

64
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } returnZero
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } returnZero
Distance : 10

65
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } UnivariateFunction
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } UnivariateFunction
Distance : 10

66
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } append
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } append
Distance : 10

67
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT6
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } LanguageMode.ECMASCRIPT6
Distance : 10

68
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } getInstance
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } getInstance
Distance : 10

69
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } valueOf
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } valueOf
Distance : 10

70
Tree	{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
Code	{ return reportMatcher ( Any.ANY ) . returnFalse () ; }
Distance : 7

71
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Math
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Math
Distance : 10

72
Tree	{ return this . Boolean ; } field
Code	{ return this . Boolean ; } field
Distance : 13

73
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } wanted
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } wanted
Distance : 10

74
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } NodeUtil
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } NodeUtil
Distance : 10

75
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } x
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } x
Distance : 10

76
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } try
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } try
Distance : 10

77
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } fail
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } fail
Distance : 10

78
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Args
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Args
Distance : 10

79
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } List
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } List
Distance : 10

80
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } f
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } f
Distance : 10

81
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } ParamChecks
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } ParamChecks
Distance : 10

82
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } array
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } array
Distance : 10

83
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } <>
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } <>
Distance : 10

84
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } m
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } m
Distance : 10

85
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } boolean
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } boolean
Distance : 10

86
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } :
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } :
Distance : 10

87
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } result
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } result
Distance : 10

88
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } join
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } join
Distance : 10

89
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } paint
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } paint
Distance : 10

90
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } *
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } *
Distance : 10

91
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } type
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } type
Distance : 10

92
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } long
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } long
Distance : 10

93
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } length
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } length
Distance : 10

94
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } v
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } v
Distance : 10

95
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Integer
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } Integer
Distance : 10

96
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } root
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; } root
Distance : 10

97
Tree	{ return this . Boolean ; } length
Code	{ return this . Boolean ; } length
Distance : 13

98
Tree	{ return this . Boolean ; } @
Code	{ return this . Boolean ; } @
Distance : 13

99
Tree	{ return this . Boolean ; } instance
Code	{ return this . Boolean ; } instance
Distance : 13

100
Tree	{ return ( Boolean ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Boolean ) reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 9

101
Tree	{ return returnFalse ( Any.ANY ) . reportMatcher () ; }
Code	{ return returnFalse ( Any.ANY ) . reportMatcher () ; }
Distance : 9

102
Tree	{ returnFalse ( Any.ANY ) ; return super(); ; }
Code	{ returnFalse ( Any.ANY ) ; return super(); ; }
Distance : 12

103
Tree	{ returnFalse ( Any.ANY ) ; return continue; ; }
Code	{ returnFalse ( Any.ANY ) ; return continue; ; }
Distance : 12

104
Tree	{ returnFalse ( Any.ANY ) ; return break; ; }
Code	{ returnFalse ( Any.ANY ) ; return break; ; }
Distance : 12

105
Tree	{ returnFalse ( Any.ANY ) ; Boolean = Any.ANY . returnFalse () ; }
Code	{ returnFalse ( Any.ANY ) ; Boolean = Any.ANY . returnFalse () ; }
Distance : 9

106
Tree	{ returnFalse ( Any.ANY ) ; return default: ; }
Code	{ returnFalse ( Any.ANY ) ; return default: ; }
Distance : 12

107
Tree	{ returnFalse ( Any.ANY ) ; Boolean = Any.ANY . reportMatcher () ; }
Code	{ returnFalse ( Any.ANY ) ; Boolean = Any.ANY . reportMatcher () ; }
Distance : 10

108
Tree	{ return this . Boolean ; } char
Code	{ return this . Boolean ; } char
Distance : 13

109
Tree	{ return this . Boolean ; } mockingProgress
Code	{ return this . Boolean ; } mockingProgress
Distance : 13

110
Tree	{ return this . Boolean ; } chrono
Code	{ return this . Boolean ; } chrono
Distance : 13

111
Tree	{ return this . Boolean ; } isEmpty
Code	{ return this . Boolean ; } isEmpty
Distance : 13

112
Tree	{ return this . Boolean ; } return;
Code	{ return this . Boolean ; } return;
Distance : 13

113
Tree	{ return this . Boolean ; } js
Code	{ return this . Boolean ; } js
Distance : 13

114
Tree	{ return this . Boolean ; } JSType
Code	{ return this . Boolean ; } JSType
Distance : 13

115
Tree	{ return this . Boolean ; } static
Code	{ return this . Boolean ; } static
Distance : 13

116
Tree	{ return this . Boolean ; } dataset
Code	{ return this . Boolean ; } dataset
Distance : 13

117
Tree	{ return this . Boolean ; } StrBuilder
Code	{ return this . Boolean ; } StrBuilder
Distance : 13

118
Tree	{ return this . Boolean ; } abs
Code	{ return this . Boolean ; } abs
Distance : 13

119
Tree	{ return this . Boolean ; } matcher
Code	{ return this . Boolean ; } matcher
Distance : 13

120
Tree	{ return this . Boolean ; } reportMatcher
Code	{ return this . Boolean ; } reportMatcher
Distance : 13

121
Tree	{ reportMatcher ( Any.ANY ) ; Boolean = Any.ANY . reportMatcher () ; }
Code	{ reportMatcher ( Any.ANY ) ; Boolean = Any.ANY . reportMatcher () ; }
Distance : 9

122
Tree	{ return this . Boolean ; } {}
Code	{ return this . Boolean ; } {}
Distance : 13

123
Tree	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 10

124
Tree	{ returnFalse ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ returnFalse ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 12

125
Tree	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Code	{ reportMatcher ( Any.ANY ) ; return NUMBER_CONSTANT ; }
Distance : 11

126
Tree	{ return this . Boolean ; } getField
Code	{ return this . Boolean ; } getField
Distance : 13

127
Tree	{ reportMatcher ( Any.ANY ) ; return return; ; }
Code	{ reportMatcher ( Any.ANY ) ; return return; ; }
Distance : 11

128
Tree	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Code	{ return reportMatcher ( Any.ANY ) . reportMatcher () ; }
Distance : 8

129
Tree	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Code	{ reportMatcher ( Any.ANY ) ; return super(); ; }
Distance : 11

130
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; }
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . returnFalse () ; }
Distance : 9

131
Tree	{ return ( Boolean ) returnFalse ( Any.ANY ) . returnFalse () ; }
Code	{ return ( Boolean ) returnFalse ( Any.ANY ) . returnFalse () ; }
Distance : 8

132
Tree	{ return ( Boolean ) returnFalse ( Any.ANY ) ; }
Code	{ return ( Boolean ) returnFalse ( Any.ANY ) ; }
Distance : 10

133
Tree	{ return this . Boolean ; }
Code	{ return this . Boolean ; }
Distance : 12

134
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) ; }
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) ; }
Distance : 12

135
Tree	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Code	{ reportMatcher ( Any.ANY ) ; return continue; ; }
Distance : 11

136
Tree	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) . returnFalse () ; }
Code	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) . returnFalse () ; }
Distance : 9

137
Tree	{ return ( Boolean ) reportMatcher ( Any.ANY ) . returnFalse () ; }
Code	{ return ( Boolean ) reportMatcher ( Any.ANY ) . returnFalse () ; }
Distance : 8

138
Tree	{ reportMatcher ( Any.ANY ) ; return break; ; }
Code	{ reportMatcher ( Any.ANY ) ; return break; ; }
Distance : 11

139
Tree	{ return ( Boolean ) reportMatcher ( Any.ANY ) ; }
Code	{ return ( Boolean ) reportMatcher ( Any.ANY ) ; }
Distance : 10

140
Tree	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) ; }
Code	{ super ( Boolean ) ; reportMatcher ( Any.ANY ) ; }
Distance : 12

141
Tree	{ reportMatcher ( Any.ANY ) ; Boolean = Any.ANY . returnFalse () ; }
Code	{ reportMatcher ( Any.ANY ) ; Boolean = Any.ANY . returnFalse () ; }
Distance : 8

142
Tree	{ returnFalse ( Any.ANY ) ; return null ; }
Code	{ returnFalse ( Any.ANY ) ; return null ; }
Distance : 12

143
Tree	{ return returnFalse ( Any.ANY ) . returnFalse () ; }
Code	{ return returnFalse ( Any.ANY ) . returnFalse () ; }
Distance : 8

144
Tree	{ reportMatcher ( Any.ANY ) ; return default: ; }
Code	{ reportMatcher ( Any.ANY ) ; return default: ; }
Distance : 11

145
Tree	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . reportMatcher () ; }
Code	{ super ( Boolean ) ; returnFalse ( Any.ANY ) . reportMatcher () ; }
Distance : 10

146
Tree	{ return ( Boolean ) returnFalse ( Any.ANY ) . reportMatcher () ; }
Code	{ return ( Boolean ) returnFalse ( Any.ANY ) . reportMatcher () ; }
Distance : 9

147
Tree	{ return this . Boolean ; } get
Code	{ return this . Boolean ; } get
Distance : 13

148
Tree	{ returnFalse ( Any.ANY ) ; return return; ; }
Code	{ returnFalse ( Any.ANY ) ; return return; ; }
Distance : 12

149
Tree	{ return this . Boolean ; } valueOf
Code	{ return this . Boolean ; } valueOf
Distance : 13

150
Tree	{ return this . Boolean ; } this
Code	{ return this . Boolean ; } this
Distance : 13

151
Tree	{ return this . Boolean ; } return
Code	{ return this . Boolean ; } return
Distance : 13

152
Tree	{ return this . Boolean ; } final
Code	{ return this . Boolean ; } final
Distance : 13

153
Tree	{ return this . Boolean ; } <
Code	{ return this . Boolean ; } <
Distance : 13

154
Tree	{ return this . Boolean ; } name
Code	{ return this . Boolean ; } name
Distance : 13

155
Tree	{ return this . Boolean ; } solver
Code	{ return this . Boolean ; } solver
Distance : 13

156
Tree	{ return this . Boolean ; } y
Code	{ return this . Boolean ; } y
Distance : 13

157
Tree	{ return this . Boolean ; } PlotChangeEvent
Code	{ return this . Boolean ; } PlotChangeEvent
Distance : 13

158
Tree	{ return this . Boolean ; } d
Code	{ return this . Boolean ; } d
Distance : 13

159
Tree	{ return this . Boolean ; } getParent
Code	{ return this . Boolean ; } getParent
Distance : 13

160
Tree	{ return this . Boolean ; } for
Code	{ return this . Boolean ; } for
Distance : 13

161
Tree	{ return this . Boolean ; } UnivariateFunction
Code	{ return this . Boolean ; } UnivariateFunction
Distance : 13

162
Tree	{ return this . Boolean ; } sqrt
Code	{ return this . Boolean ; } sqrt
Distance : 13

163
Tree	{ return this . Boolean ; } throws
Code	{ return this . Boolean ; } throws
Distance : 13

164
Tree	{ return this . Boolean ; } scope
Code	{ return this . Boolean ; } scope
Distance : 13

165
Tree	{ return this . Boolean ; } optimizer
Code	{ return this . Boolean ; } optimizer
Distance : 13

166
Tree	{ return this . Boolean ; } simpleMethod
Code	{ return this . Boolean ; } simpleMethod
Distance : 13

167
Tree	{ return this . Boolean ; } isBlock
Code	{ return this . Boolean ; } isBlock
Distance : 13

168
Tree	{ return this . Boolean ; } getArgumentMatcherStorage
Code	{ return this . Boolean ; } getArgumentMatcherStorage
Distance : 13

169
Tree	{ return this . Boolean ; } instant
Code	{ return this . Boolean ; } instant
Distance : 13

170
Tree	{ return this . Boolean ; } alpha
Code	{ return this . Boolean ; } alpha
Distance : 13

171
Tree	{ return this . Boolean ; } TestUtilities
Code	{ return this . Boolean ; } TestUtilities
Distance : 13

172
Tree	{ return this . Boolean ; } if
Code	{ return this . Boolean ; } if
Distance : 13

173
Tree	{ return this . Boolean ; } pattern
Code	{ return this . Boolean ; } pattern
Distance : 13

174
Tree	{ return this . Boolean ; } String
Code	{ return this . Boolean ; } String
Distance : 13

175
Tree	{ return this . Boolean ; } else
Code	{ return this . Boolean ; } else
Distance : 13

176
Tree	{ return this . Boolean ; } public
Code	{ return this . Boolean ; } public
Distance : 13

177
Tree	{ return this . Boolean ; } getMessage
Code	{ return this . Boolean ; } getMessage
Distance : 13

178
Tree	{ return this . Boolean ; } >
Code	{ return this . Boolean ; } >
Distance : 13

179
Tree	{ return this . Boolean ; } getChronology
Code	{ return this . Boolean ; } getChronology
Distance : 13

180
Tree	{ return this . Boolean ; } Collection
Code	{ return this . Boolean ; } Collection
Distance : 13

181
Tree	{ return this . Boolean ; } =
Code	{ return this . Boolean ; } =
Distance : 13

182
Tree	{ return this . Boolean ; } new
Code	{ return this . Boolean ; } new
Distance : 13

183
Tree	{ return this . Boolean ; } ()
Code	{ return this . Boolean ; } ()
Distance : 13

184
Tree	{ return this . Boolean ; } ,
Code	{ return this . Boolean ; } ,
Distance : 13

185
Tree	{ return this . Boolean ; } {
Code	{ return this . Boolean ; } {
Distance : 13

186
Tree	{ return this . Boolean ; } stream
Code	{ return this . Boolean ; } stream
Distance : 13

187
Tree	{ return this . Boolean ; } )
Code	{ return this . Boolean ; } )
Distance : 13

188
Tree	{ return this . Boolean ; } <s>
Code	{ return this . Boolean ; } <s>
Distance : 13

189
Tree	{ return this . Boolean ; } {
Code	{ return this . Boolean ; } {
Distance : 13

190
Tree	{ return this . Boolean ; } <blank>
Code	{ return this . Boolean ; } <blank>
Distance : 13

191
Tree	{ return this . Boolean ; } ;
Code	{ return this . Boolean ; } ;
Distance : 13

192
Tree	{ return this . Boolean ; } (
Code	{ return this . Boolean ; } (
Distance : 13

193
Tree	{ return this . Boolean ; } .
Code	{ return this . Boolean ; } .
Distance : 13

194
Tree	{ return this . Boolean ; } }
Code	{ return this . Boolean ; } }
Distance : 13

195
Tree	{ return this . Boolean ; } STRING_CONSTANT
Code	{ return this . Boolean ; } STRING_CONSTANT
Distance : 13

196
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } result
Code	{ reportMatcher ( Any.ANY ) ; return null ; } result
Distance : 12

197
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } :
Code	{ reportMatcher ( Any.ANY ) ; return null ; } :
Distance : 12

198
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Code	{ reportMatcher ( Any.ANY ) ; return null ; } optimizer
Distance : 12

199
Tree	{ reportMatcher ( Any.ANY ) ; return null ; } options
Code	{ reportMatcher ( Any.ANY ) ; return null ; } options
Distance : 12

========================================================================


========================================================================
Example Number: 107
Parent Code is: 
catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
-------------------------------------------------------------------------------
Child code is: 
catch ( AssertionError e ) { error = handleVerifyException ( e ) ; }
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (40{val=org.mockito.exceptions.verification.junit.ArgumentsAreDifferent})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=error}) (204{val==}) (32 (802{val=handleVerifyException}) (214{val=(}) (800{val=e}) (215{val=)}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (12 (331{val=catch}) (214{val=(}) (44 (43 (801{val=AssertionError})) (800{val=e})) (215{val=)}) (8 (218{val={}) (21 (7 (800{val=error}) (204{val==}) (32 (802{val=handleVerifyException}) (214{val=(}) (800{val=e}) (215{val=)}))) (227{val=;})) (219{val=}}))))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/5/parent/src_org_mockito_internal_verification_VerificationOverTimeImpl.java
-------------------------------------------------------------------------------
Edit Distance : 1
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; }
Distance : 5

1
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } LINE_JOINER
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } LINE_JOINER
Distance : 2

2
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } createIllegalArgumentException
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } createIllegalArgumentException
Distance : 2

3
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Test
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Test
Distance : 2

4
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } parent
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } parent
Distance : 2

5
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } testSame
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } testSame
Distance : 2

6
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } x
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } x
Distance : 2

7
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } c
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } c
Distance : 2

8
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } notifyListeners
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } notifyListeners
Distance : 2

9
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Class
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Class
Distance : 2

10
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertThat
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertThat
Distance : 2

11
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Object
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Object
Distance : 2

12
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } try
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } try
Distance : 2

13
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getFirstChild
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getFirstChild
Distance : 2

14
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } field
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } field
Distance : 2

15
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } t
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } t
Distance : 2

16
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } name
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } name
Distance : 2

17
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } add
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } add
Distance : 2

18
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } }
Distance : 4

19
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } scope
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } scope
Distance : 2

20
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } throws
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } throws
Distance : 2

21
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } class
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } class
Distance : 2

22
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } FastMath
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } FastMath
Distance : 2

23
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } invocation
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } invocation
Distance : 2

24
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } b
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } b
Distance : 2

25
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } toString
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } toString
Distance : 2

26
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } type
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } type
Distance : 2

27
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } *
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } *
Distance : 2

28
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } paint
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } paint
Distance : 2

29
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } join
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } join
Distance : 2

30
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } serialised
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } serialised
Distance : 2

31
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getInstance
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getInstance
Distance : 2

32
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fireChangeEvent
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fireChangeEvent
Distance : 2

33
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ArrayList
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ArrayList
Distance : 2

34
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } PeriodType
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } PeriodType
Distance : 2

35
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <>
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <>
Distance : 2

36
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ParamChecks
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ParamChecks
Distance : 2

37
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } f
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } f
Distance : 2

38
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Override
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Override
Distance : 2

39
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mock
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mock
Distance : 2

40
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } source
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } source
Distance : 2

41
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } options
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } options
Distance : 2

42
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } p
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } p
Distance : 2

43
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } str
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } str
Distance : 2

44
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } contains
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } contains
Distance : 2

45
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } array
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } array
Distance : 2

46
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } append
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } append
Distance : 2

47
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } returnZero
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } returnZero
Distance : 2

48
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } isBlock
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } isBlock
Distance : 2

49
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } serialised
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } serialised
Distance : 4

50
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getInstance
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } getInstance
Distance : 4

51
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fireChangeEvent
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fireChangeEvent
Distance : 4

52
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ArrayList
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ArrayList
Distance : 4

53
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <>
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <>
Distance : 4

54
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } array
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } array
Distance : 4

55
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ParamChecks
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ParamChecks
Distance : 4

56
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } f
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } f
Distance : 4

57
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Override
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Override
Distance : 4

58
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } join
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } join
Distance : 4

59
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mock
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mock
Distance : 4

60
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } class
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } class
Distance : 4

61
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } try
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } try
Distance : 4

62
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fail
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fail
Distance : 4

63
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } paint
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } paint
Distance : 4

64
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } *
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } *
Distance : 4

65
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } type
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } type
Distance : 4

66
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } x
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } x
Distance : 4

67
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertThat
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertThat
Distance : 4

68
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
Distance : 1

69
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Object
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Object
Distance : 4

70
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } PeriodType
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } PeriodType
Distance : 4

71
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <s>
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <s>
Distance : 4

72
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } super
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } super
Distance : 4

73
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertEquals
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } assertEquals
Distance : 2

74
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } !
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } !
Distance : 2

75
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } IllegalArgumentException
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } IllegalArgumentException
Distance : 2

76
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } expected
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } expected
Distance : 2

77
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fail
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } fail
Distance : 2

78
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Node
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Node
Distance : 2

79
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Args
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Args
Distance : 2

80
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } List
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } List
Distance : 2

81
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } result
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } result
Distance : 2

82
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } :
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } :
Distance : 2

83
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } boolean
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } boolean
Distance : 2

84
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } m
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } m
Distance : 2

85
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Exception
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Exception
Distance : 2

86
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } reportCodeChange
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } reportCodeChange
Distance : 2

87
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } lines
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } lines
Distance : 2

88
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } verify
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } verify
Distance : 2

89
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Integer
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Integer
Distance : 2

90
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } v
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } v
Distance : 2

91
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } length
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } length
Distance : 2

92
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } long
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } long
Distance : 2

93
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <blank>
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } <blank>
Distance : 4

94
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } []
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } []
Distance : 2

95
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } nullNotPermitted
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } nullNotPermitted
Distance : 2

96
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } UnivariateFunction
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } UnivariateFunction
Distance : 2

97
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } @
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } @
Distance : 2

98
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error , this . error ) ; }
Distance : 7

99
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error ) ; }
Distance : 3

100
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e ) ; }
Distance : 4

101
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error , this . e ) ; }
Distance : 6

102
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error ) ; }
Distance : 4

103
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e ) ; }
Distance : 4

104
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = error . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = error . handleVerifyException () ; }
Distance : 7

105
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( error , handleVerifyException ( error ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( error , handleVerifyException ( error ) ) ; }
Distance : 6

106
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e , this . e ) ; }
Distance : 7

107
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e ) ; }
Distance : 3

108
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error , this . e ) ; }
Distance : 6

109
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( error , handleVerifyException ( e ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( error , handleVerifyException ( e ) ) ; }
Distance : 6

110
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( e , handleVerifyException ( error ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( e , handleVerifyException ( error ) ) ; }
Distance : 8

111
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error , this . error ) ; }
Distance : 8

112
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error ) ; }
Distance : 4

113
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error ) ; }
Distance : 5

114
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e ) ; }
Distance : 4

115
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( error ) ; }
Distance : 5

116
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error , this . e ) ; }
Distance : 7

117
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( error , handleVerifyException ( error ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( error , handleVerifyException ( error ) ) ; }
Distance : 7

118
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = e . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = e . handleVerifyException () ; }
Distance : 7

119
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = e . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = e . handleVerifyException () ; }
Distance : 6

120
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( e , handleVerifyException ( e ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { handleVerifyException ( e , handleVerifyException ( e ) ) ; }
Distance : 7

121
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error ) ; }
Distance : 3

122
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = error . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = error . handleVerifyException () ; }
Distance : 5

123
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } sb
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } sb
Distance : 2

124
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . e ) ; }
Distance : 5

125
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( e , handleVerifyException ( e ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( e , handleVerifyException ( e ) ) ; }
Distance : 6

126
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = e . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = e . handleVerifyException () ; }
Distance : 5

127
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e , this . error ) ; }
Distance : 6

128
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e ) ; }
Distance : 2

129
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error , this . error ) ; }
Distance : 6

130
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error ) ; }
Distance : 2

131
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e , this . error ) ; }
Distance : 6

132
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e ) ; }
Distance : 2

133
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = error . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = error . handleVerifyException () ; }
Distance : 6

134
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( e , this . e ) ; }
Distance : 6

135
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; }
Distance : 3

136
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( error , this . e ) ; }
Distance : 5

137
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = e . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = e . handleVerifyException () ; }
Distance : 6

138
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( error , handleVerifyException ( e ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( error , handleVerifyException ( e ) ) ; }
Distance : 5

139
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( e , handleVerifyException ( error ) ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { handleVerifyException ( e , handleVerifyException ( error ) ) ; }
Distance : 7

140
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = error . handleVerifyException () ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = error . handleVerifyException () ; }
Distance : 6

141
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e , this . e ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { error = handleVerifyException ( e , this . e ) ; }
Distance : 6

142
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { e = handleVerifyException ( error , this . error ) ; }
Distance : 7

143
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( error ) ; }
Distance : 5

144
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } false
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } false
Distance : 2

145
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e , this . error ) ; }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent error ) { e = handleVerifyException ( e , this . error ) ; }
Distance : 7

146
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } d
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } d
Distance : 2

147
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } new
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } new
Distance : 4

148
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } STRING_CONSTANT
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } STRING_CONSTANT
Distance : 4

149
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent ) org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NUMBER_CONSTANT
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent ) org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NUMBER_CONSTANT
Distance : 4

150
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } return
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } return
Distance : 4

151
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ]
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ]
Distance : 4

152
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } [
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } [
Distance : 4

153
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Preconditions
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Preconditions
Distance : 4

154
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } -
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } -
Distance : 4

155
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } true
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } true
Distance : 4

156
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } {
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } {
Distance : 4

157
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } {}
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } {}
Distance : 4

158
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } compiler
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } compiler
Distance : 4

159
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } String
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } String
Distance : 4

160
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } e
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } e
Distance : 4

161
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } test
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } test
Distance : 2

162
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } throw
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } throw
Distance : 4

163
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } catch
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } catch
Distance : 4

164
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } void
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } void
Distance : 4

165
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ==
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ==
Distance : 4

166
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ex
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ex
Distance : 4

167
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } MathRuntimeException
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } MathRuntimeException
Distance : 4

168
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ()
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ()
Distance : 4

169
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mode
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } mode
Distance : 4

170
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } equals
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } equals
Distance : 2

171
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Math
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Math
Distance : 4

172
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } }
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } }
Distance : 4

173
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } wanted
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } wanted
Distance : 4

174
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } root
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } root
Distance : 4

175
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NodeUtil
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NodeUtil
Distance : 4

176
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } data
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } data
Distance : 4

177
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } for
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } for
Distance : 2

178
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } setUp
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } setUp
Distance : 2

179
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } int
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } int
Distance : 2

180
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } TestUtilities
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } TestUtilities
Distance : 2

181
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } StrBuilder
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } StrBuilder
Distance : 2

182
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Invocation
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } Invocation
Distance : 2

183
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } n
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } n
Distance : 4

184
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } checkArgument
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } checkArgument
Distance : 4

185
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NodeTraversal
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } NodeTraversal
Distance : 4

186
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ;
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ;
Distance : 4

187
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } )
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } )
Distance : 4

188
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } .
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } .
Distance : 4

189
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ,
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } ,
Distance : 4

190
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } =
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } =
Distance : 4

191
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } js
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } js
Distance : 2

192
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } static
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } static
Distance : 2

193
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } T
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } T
Distance : 2

194
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } &&
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } &&
Distance : 2

195
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } )
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } )
Distance : 2

196
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; } !
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; } !
Distance : 6

197
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } reportMatcher
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } reportMatcher
Distance : 2

198
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } abs
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e ) ; } abs
Distance : 2

199
Tree	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; } s
Code	catch ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e ) { error = handleVerifyException ( e , this . error ) ; } s
Distance : 6

========================================================================


========================================================================
Example Number: 108
Parent Code is: 
new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () ) )
-------------------------------------------------------------------------------
Child code is: 
new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () ) )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=VerificationInOrderFailure})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (215{val=)})) (215{val=)})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (14 (304{val=new}) (43 (801{val=VerificationInOrderFailure})) (214{val=(}) (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=safelyGetMockName}) (214{val=(}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (215{val=)})) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/4/parent/src_org_mockito_exceptions_Reporter.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 9

1
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 18

2
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Distance : 17

3
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

4
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

5
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 12

6
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 13

7
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 12

8
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Distance : 16

9
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

10
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Distance : 16

11
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

12
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 15

13
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 12

14
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 18

15
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Distance : 17

16
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

17
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Distance : 16

18
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Distance : 17

19
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

20
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

21
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 11

22
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

23
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 11

24
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Distance : 17

25
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

26
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Distance : 16

27
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

28
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

29
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Distance : 17

30
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Distance : 17

31
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

32
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

33
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Distance : 17

34
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

35
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 12

36
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Distance : 16

37
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

38
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

39
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

40
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

41
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

42
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

43
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , ! , undesired ) )
Distance : 16

44
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

45
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

46
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 12

47
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

48
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Distance : 16

49
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 13

50
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 15

51
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

52
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

53
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 11

54
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Distance : 17

55
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , return; , undesired ) )
Distance : 16

56
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

57
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 12

58
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Distance : 17

59
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

60
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

61
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Distance : 17

62
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Distance : 17

63
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 16

64
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Distance : 16

65
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Distance : 17

66
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Distance : 17

67
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Distance : 17

68
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Distance : 16

69
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Distance : 16

70
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 12

71
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Distance : 17

72
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 18

73
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 17

74
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Distance : 16

75
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 11

76
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , break; , undesired ) )
Distance : 17

77
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Distance : 16

78
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , catch , undesired ) )
Distance : 17

79
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

80
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 17

81
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Distance : 16

82
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , int , undesired ) )
Distance : 17

83
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 16

84
Tree	new LocationImpl ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

85
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Distance : 17

86
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

87
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , lines , undesired ) )
Distance : 17

88
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Distance : 16

89
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

90
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Distance : 17

91
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , final , undesired ) )
Distance : 16

92
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

93
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 18

94
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , throw , undesired ) )
Distance : 16

95
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

96
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

97
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

98
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

99
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

100
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Distance : 17

101
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

102
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Distance : 16

103
Tree	new LocationImpl ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

104
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

105
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 17

106
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

107
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , {} , undesired ) )
Distance : 17

108
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

109
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 15

110
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Distance : 17

111
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , t , undesired ) )
Distance : 16

112
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Distance : 17

113
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , continue; , undesired ) )
Distance : 16

114
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Distance : 17

115
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , @ , undesired ) )
Distance : 16

116
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , long , undesired ) )
Distance : 17

117
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

118
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 11

119
Tree	new VerificationInOrderFailure ( getMock ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getMock ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

120
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 18

121
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

122
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

123
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

124
Tree	new VerificationInOrderFailure ( getMock ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getMock ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

125
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

126
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

127
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

128
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 16

129
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

130
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

131
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . safelyGetMockName () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

132
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

133
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

134
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

135
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 17

136
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

137
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Distance : 17

138
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Distance : 16

139
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , else , undesired ) )
Distance : 17

140
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

141
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

142
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 9

143
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

144
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

145
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 8

146
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

147
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 9

148
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 16

149
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

150
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

151
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

152
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

153
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

154
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

155
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Distance : 16

156
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , true , undesired ) )
Distance : 17

157
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

158
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

159
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getLocation () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

160
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

161
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

162
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

163
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 17

164
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

165
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

166
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 11

167
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

168
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

169
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 16

170
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , false , undesired ) )
Distance : 17

171
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired ) ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 11

172
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

173
Tree	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( safelyGetMockName ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

174
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

175
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

176
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , super , undesired ) )
Distance : 16

177
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

178
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

179
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

180
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getLocation () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

181
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 10

182
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

183
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

184
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

185
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 12

186
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

187
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , class , undesired ) )
Distance : 17

188
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . join () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 11

189
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . getMock () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 16

190
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock ( undesired . join () , undesired . getLocation () ) ) , STRING_CONSTANT , CHAR_CONS , undesired ) )
Distance : 17

191
Tree	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( getLocation ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

192
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getMock () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 10

193
Tree	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

194
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new VerificationInOrderFailure ( undesired . getMock () ) , STRING_CONSTANT , undesired . join () , undesired ) )
Distance : 10

195
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 11

196
Tree	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Code	new LocationImpl ( join ( STRING_CONSTANT , new LocationImpl ( undesired . join () ) , STRING_CONSTANT , undesired . safelyGetMockName () , undesired ) )
Distance : 11

197
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . safelyGetMockName () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

198
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getLocation () , undesired ) )
Distance : 9

199
Tree	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Code	new VerificationInOrderFailure ( join ( STRING_CONSTANT , new LocationImpl ( undesired . getLocation () ) , STRING_CONSTANT , undesired . getMock () , undesired ) )
Distance : 10

========================================================================


========================================================================
Example Number: 109
Parent Code is: 
join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + undesired . getMock () + STRING_CONSTANT , undesired . getLocation () , scenario )
-------------------------------------------------------------------------------
Child code is: 
join ( STRING_CONSTANT , new LocationImpl () , STRING_CONSTANT + safelyGetMockName ( undesired . getMock () ) + STRING_CONSTANT , undesired . getLocation () , scenario )
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (800{val=scenario}) (215{val=)})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (32 (802{val=join}) (214{val=(}) (45{val=STRING_CONSTANT}) (234{val=,}) (14 (304{val=new}) (43 (801{val=LocationImpl})) (216{val=()})) (234{val=,}) (27 (45{val=STRING_CONSTANT}) (200{val=+}) (32 (802{val=safelyGetMockName}) (214{val=(}) (32 (800{val=undesired}) (235{val=.}) (802{val=getMock}) (216{val=()})) (215{val=)})) (200{val=+}) (45{val=STRING_CONSTANT})) (234{val=,}) (32 (800{val=undesired}) (235{val=.}) (802{val=getLocation}) (216{val=()})) (234{val=,}) (800{val=scenario}) (215{val=)})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Mockito/4/parent/src_org_mockito_exceptions_Reporter.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

1
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

2
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

3
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

4
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

5
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

6
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Distance : 15

7
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Distance : 17

8
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Distance : 15

9
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Distance : 17

10
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

11
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

12
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

13
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

14
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

15
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

16
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

17
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

18
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

19
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

20
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

21
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

22
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

23
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

24
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

25
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

26
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

27
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

28
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

29
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

30
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

31
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

32
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

33
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

34
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 17

35
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 17

36
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

37
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

38
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

39
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

40
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

41
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

42
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

43
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

44
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

45
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

46
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

47
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

48
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

49
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 17

50
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 17

51
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

52
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

53
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

54
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

55
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

56
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

57
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

58
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

59
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

60
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

61
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

62
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

63
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

64
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

65
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

66
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

67
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

68
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

69
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 18

70
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Distance : 17

71
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

72
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

73
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

74
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

75
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

76
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . join () , STRING_CONSTANT )
Distance : 16

77
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 16

78
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

79
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . join () , STRING_CONSTANT )
Distance : 16

80
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

81
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

82
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

83
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

84
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

85
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

86
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . join () , STRING_CONSTANT )
Distance : 17

87
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

88
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

89
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

90
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

91
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

92
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

93
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

94
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

95
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

96
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . safelyGetMockName () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

97
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

98
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Distance : 17

99
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

100
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

101
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

102
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . safelyGetMockName () , STRING_CONSTANT )
Distance : 17

103
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

104
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 20

105
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 20

106
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

107
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 19

108
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

109
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 19

110
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

111
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

112
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

113
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Distance : 17

114
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getMock () , STRING_CONSTANT )
Distance : 17

115
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getMock () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

116
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

117
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

118
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

119
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

120
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

121
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

122
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

123
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

124
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

125
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

126
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

127
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

128
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

129
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

130
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

131
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

132
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

133
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

134
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

135
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

136
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

137
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

138
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

139
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

140
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

141
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

142
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

143
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

144
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

145
Tree	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getLocation ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

146
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

147
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

148
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

149
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

150
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

151
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

152
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

153
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

154
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

155
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

156
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

157
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 18

158
Tree	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	getMock ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

159
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

160
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

161
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

162
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

163
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

164
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

165
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

166
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

167
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

168
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

169
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

170
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

171
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

172
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

173
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

174
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

175
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

176
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

177
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

178
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 19

179
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 16

180
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

181
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

182
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

183
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

184
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

185
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 17

186
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join ( scenario ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

187
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

188
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

189
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

190
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

191
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

192
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . join () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 15

193
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

194
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , undesired . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 18

195
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getLocation ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

196
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

197
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . getMock () , new LocationImpl () , STRING_CONSTANT , scenario . getLocation () , undesired . getLocation () , STRING_CONSTANT )
Distance : 16

198
Tree	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Code	safelyGetMockName ( STRING_CONSTANT , STRING_CONSTANT , scenario . getMock () , new LocationImpl () , STRING_CONSTANT , undesired . getLocation () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

199
Tree	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Code	join ( STRING_CONSTANT , STRING_CONSTANT , undesired . safelyGetMockName ( undesired ) , new LocationImpl () , STRING_CONSTANT , undesired . join () , scenario . getLocation () , STRING_CONSTANT )
Distance : 17

========================================================================


========================================================================
Example Number: 110
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 111
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 112
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 113
Parent Code is: 
long result = iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
long result = iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=result}) (204{val==}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (39{val=long}) (59 (800{val=result}) (204{val==}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	long result = iZone . convertLocalToUTC ( localInstant , false ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , false ) ;
Distance : 2

1
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Feature.STRING_CONTINUATION ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Feature.STRING_CONTINUATION ) ;
Distance : 10

2
Tree	long result = iZone . convertLocalToUTC ( localInstant , BasicStroke.JOIN_BEVEL ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , BasicStroke.JOIN_BEVEL ) ;
Distance : 3

3
Tree	boolean result = iZone . convertLocalToUTC ( localInstant , false ) ;
Code	boolean result = iZone . convertLocalToUTC ( localInstant , false ) ;
Distance : 3

4
Tree	long result = iZone . convertLocalToUTC ( localInstant , DiagnosticGroups.LINT_CHECKS ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , DiagnosticGroups.LINT_CHECKS ) ;
Distance : 3

5
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TimeUnit.MILLISECONDS ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TimeUnit.MILLISECONDS ) ;
Distance : 10

6
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , StopWatch ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , StopWatch ) ;
Distance : 10

7
Tree	long result = iZone . convertLocalToUTC ( localInstant , Cartesian3D.ZERO ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Cartesian3D.ZERO ) ;
Distance : 3

8
Tree	long result = iZone . convertLocalToUTC ( localInstant , recvLvalue.env ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , recvLvalue.env ) ;
Distance : 3

9
Tree	long result = iZone . convertLocalToUTC ( localInstant , Verification.AT_LEAST ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Verification.AT_LEAST ) ;
Distance : 3

10
Tree	long result = iZone . convertLocalToUTC ( localInstant , LazyHolder.INSTANCE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LazyHolder.INSTANCE ) ;
Distance : 3

11
Tree	long result = iZone . convertLocalToUTC ( localInstant , toInclusive ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , toInclusive ) ;
Distance : 3

12
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , oos ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , oos ) ;
Distance : 10

13
Tree	long result = iZone . convertLocalToUTC ( localInstant , Mode.ES_NEXT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Mode.ES_NEXT ) ;
Distance : 3

14
Tree	long result = iZone . convertLocalToUTC ( localInstant , ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , ExponentialDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ;
Distance : 3

15
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , cleaner ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , cleaner ) ;
Distance : 10

16
Tree	long result = iZone . convertLocalToUTC ( localInstant , RandomSource.MT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , RandomSource.MT ) ;
Distance : 3

17
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , export.scope ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , export.scope ) ;
Distance : 10

18
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , alternatesList ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , alternatesList ) ;
Distance : 10

19
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FastDateParser.JAPANESE_IMPERIAL ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FastDateParser.JAPANESE_IMPERIAL ) ;
Distance : 10

20
Tree	long result = iZone . convertLocalToUTC ( localInstant , getUnitMillis ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , getUnitMillis ) ;
Distance : 3

21
Tree	long result = iZone . convertLocalToUTC ( localInstant , State.DURING_RESOLUTION ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , State.DURING_RESOLUTION ) ;
Distance : 3

22
Tree	long result = iZone . convertLocalToUTC ( localInstant , TiesStrategy.MINIMUM ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TiesStrategy.MINIMUM ) ;
Distance : 3

23
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.USER_EXCEPTION ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.USER_EXCEPTION ) ;
Distance : 10

24
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , getOwnerFunction ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , getOwnerFunction ) ;
Distance : 10

25
Tree	long result = iZone . convertLocalToUTC ( localInstant , Boolean.TRUE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Boolean.TRUE ) ;
Distance : 3

26
Tree	long result = iZone . convertLocalToUTC ( localInstant , Mode.ES8_OR_GREATER ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Mode.ES8_OR_GREATER ) ;
Distance : 3

27
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DiagnosticGroups.UNUSED_LOCAL_VARIABLE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DiagnosticGroups.UNUSED_LOCAL_VARIABLE ) ;
Distance : 10

28
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_REAL_VECTOR ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_REAL_VECTOR ) ;
Distance : 3

29
Tree	long result = iZone . convertLocalToUTC ( localInstant , TypeInferenceMode.NEITHER ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TypeInferenceMode.NEITHER ) ;
Distance : 3

30
Tree	long result = iZone . convertLocalToUTC ( localInstant , PreprocessorSymbolTable.CachedInstanceFactory ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , PreprocessorSymbolTable.CachedInstanceFactory ) ;
Distance : 3

31
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.SIMPLE_MESSAGE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.SIMPLE_MESSAGE ) ;
Distance : 3

32
Tree	long result = iZone . convertLocalToUTC ( localInstant , ConstructorStrategy.Default.IMITATE_SUPER_TYPE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , ConstructorStrategy.Default.IMITATE_SUPER_TYPE ) ;
Distance : 3

33
Tree	long result = iZone . convertLocalToUTC ( localInstant , v.data ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , v.data ) ;
Distance : 3

34
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Queue ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Queue ) ;
Distance : 10

35
Tree	long result = iZone . convertLocalToUTC ( localInstant , LangVersion.TYPESCRIPT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LangVersion.TYPESCRIPT ) ;
Distance : 3

36
Tree	long result = iZone . convertLocalToUTC ( localInstant , Token.TRUE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Token.TRUE ) ;
Distance : 3

37
Tree	long result = iZone . convertLocalToUTC ( localInstant , EvalMode.EVAL ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , EvalMode.EVAL ) ;
Distance : 3

38
Tree	long result = iZone . convertLocalToUTC ( localInstant , RefType.REGULAR ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , RefType.REGULAR ) ;
Distance : 3

39
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , caches ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , caches ) ;
Distance : 10

40
Tree	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Util.CANNOT_CONVERT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Util.CANNOT_CONVERT ) ;
Distance : 3

41
Tree	long result = iZone . convertLocalToUTC ( localInstant , analyzerStub.wanted ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , analyzerStub.wanted ) ;
Distance : 3

42
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.NO_DATA ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.NO_DATA ) ;
Distance : 3

43
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , endIndex ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , endIndex ) ;
Distance : 10

44
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , XYDotRenderer ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , XYDotRenderer ) ;
Distance : 10

45
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , OpenIntToDoubleHashMap ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , OpenIntToDoubleHashMap ) ;
Distance : 10

46
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.OVERFLOW_IN_ADDITION ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.OVERFLOW_IN_ADDITION ) ;
Distance : 10

47
Tree	long result = iZone . convertLocalToUTC ( localInstant , coefficients.length ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , coefficients.length ) ;
Distance : 3

48
Tree	long result = iZone . convertLocalToUTC ( localInstant , finderStub.invocations ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , finderStub.invocations ) ;
Distance : 3

49
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , createCompilerOptions ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , createCompilerOptions ) ;
Distance : 10

50
Tree	long result = iZone . convertLocalToUTC ( localInstant , CheckMissingAndExtraRequires.Mode.FULL_COMPILE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , CheckMissingAndExtraRequires.Mode.FULL_COMPILE ) ;
Distance : 3

51
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , RealMethod.IsIllegal.INSTANCE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , RealMethod.IsIllegal.INSTANCE ) ;
Distance : 10

52
Tree	long result = iZone . convertLocalToUTC ( localInstant , getKthSelector ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , getKthSelector ) ;
Distance : 3

53
Tree	long result = iZone . convertLocalToUTC ( localInstant , config.parseTypeSyntax ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , config.parseTypeSyntax ) ;
Distance : 3

54
Tree	long result = iZone . convertLocalToUTC ( localInstant , Feature.STRING_CONTINUATION ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Feature.STRING_CONTINUATION ) ;
Distance : 3

55
Tree	long result = iZone . convertLocalToUTC ( localInstant , t1.time ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , t1.time ) ;
Distance : 3

56
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MONTH_OF_YEAR_TYPE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MONTH_OF_YEAR_TYPE ) ;
Distance : 10

57
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , round ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , round ) ;
Distance : 10

58
Tree	long result = iZone . convertLocalToUTC ( localInstant , yStart ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , yStart ) ;
Distance : 3

59
Tree	long result = iZone . convertLocalToUTC ( localInstant , Byte.MIN_VALUE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Byte.MIN_VALUE ) ;
Distance : 3

60
Tree	long result = iZone . convertLocalToUTC ( localInstant , a.d ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , a.d ) ;
Distance : 3

61
Tree	boolean result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , localInstant ) ;
Code	boolean result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , localInstant ) ;
Distance : 5

62
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , appendMillis ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , appendMillis ) ;
Distance : 10

63
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , NonSymmetricMatrixException ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , NonSymmetricMatrixException ) ;
Distance : 10

64
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , call.returnType ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , call.returnType ) ;
Distance : 10

65
Tree	long result = iZone . convertLocalToUTC ( localInstant , state.workingLine ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , state.workingLine ) ;
Distance : 3

66
Tree	long result = instant . convertLocalToUTC ( localInstant , false ) ;
Code	long result = instant . convertLocalToUTC ( localInstant , false ) ;
Distance : 3

67
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , lastHold ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , lastHold ) ;
Distance : 10

68
Tree	long result = iZone . convertLocalToUTC ( localInstant , yArray.length ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , yArray.length ) ;
Distance : 3

69
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DiagnosticGroups.MISSING_OVERRIDE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DiagnosticGroups.MISSING_OVERRIDE ) ;
Distance : 10

70
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TracerMode.ALL ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TracerMode.ALL ) ;
Distance : 10

71
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , options.inlineLocalFunctions ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , options.inlineLocalFunctions ) ;
Distance : 10

72
Tree	long result = iZone . convertLocalToUTC ( localInstant , JSTypeNative.NULL_VOID ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , JSTypeNative.NULL_VOID ) ;
Distance : 3

73
Tree	long result = iZone . convertLocalToUTC ( localInstant , DateTimeZone.UTC ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , DateTimeZone.UTC ) ;
Distance : 3

74
Tree	long result = iZone . convertLocalToUTC ( localInstant , ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , ChiSquaredDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY ) ;
Distance : 3

75
Tree	long result = iZone . convertLocalToUTC ( localInstant , IncrementalCheckMode.GENERATE_IJS ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , IncrementalCheckMode.GENERATE_IJS ) ;
Distance : 3

76
Tree	long result = iZone . convertLocalToUTC ( localInstant , Long.MAX_VALUE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Long.MAX_VALUE ) ;
Distance : 3

77
Tree	long result = iZone . convertLocalToUTC ( localInstant , FunctionFlavor.NORMAL ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , FunctionFlavor.NORMAL ) ;
Distance : 3

78
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , testArrowFunction2 ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , testArrowFunction2 ) ;
Distance : 10

79
Tree	long result = iZone . convertLocalToUTC ( localInstant , Feature.SETTER ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Feature.SETTER ) ;
Distance : 3

80
Tree	long result = iZone . convertLocalToUTC ( localInstant , yval ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , yval ) ;
Distance : 3

81
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MillisDurationField.INSTANCE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MillisDurationField.INSTANCE ) ;
Distance : 10

82
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , EvalMode.NORMAL ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , EvalMode.NORMAL ) ;
Distance : 10

83
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , timeParser ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , timeParser ) ;
Distance : 10

84
Tree	long result = iZone . convertLocalToUTC ( localInstant , JSTypeNative.ITERABLE_TYPE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , JSTypeNative.ITERABLE_TYPE ) ;
Distance : 3

85
Tree	long result = iZone . convertLocalToUTC ( localInstant , Any.ANY ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Any.ANY ) ;
Distance : 3

86
Tree	long result = iZone . convertLocalToUTC ( localInstant , CacheBuilder ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , CacheBuilder ) ;
Distance : 3

87
Tree	long result = iZone . convertLocalToUTC ( localInstant , TransformType.INVERSE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TransformType.INVERSE ) ;
Distance : 3

88
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , hyperplaneThickness ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , hyperplaneThickness ) ;
Distance : 10

89
Tree	long result = iZone . convertLocalToUTC ( localInstant , AbstractCompiler.READ_ERROR ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , AbstractCompiler.READ_ERROR ) ;
Distance : 3

90
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , source.contractionCriterion ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , source.contractionCriterion ) ;
Distance : 10

91
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET ) ;
Distance : 10

92
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_COMPLEX_NUMBER ) ;
Distance : 3

93
Tree	long result = iZone . convertLocalToUTC ( localInstant , Verification.EXPLICIT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Verification.EXPLICIT ) ;
Distance : 3

94
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FACT.length ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FACT.length ) ;
Distance : 10

95
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Verification.AT_LEAST ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Verification.AT_LEAST ) ;
Distance : 10

96
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , callable ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , callable ) ;
Distance : 10

97
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , CharUtils.CR ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , CharUtils.CR ) ;
Distance : 10

98
Tree	long result = iZone . convertLocalToUTC ( localInstant , com.google.protobuf.GeneratedMessageV3 ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , com.google.protobuf.GeneratedMessageV3 ) ;
Distance : 3

99
Tree	long result = iZone . convertLocalToUTC ( localInstant , TokenType.TYPE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TokenType.TYPE ) ;
Distance : 3

100
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , vd ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , vd ) ;
Distance : 10

101
Tree	long result = iZone . convertLocalToUTC ( localInstant , CheckLevel.WARNING ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , CheckLevel.WARNING ) ;
Distance : 3

102
Tree	long result = iZone . convertLocalToUTC ( localInstant , Calendar.SECOND ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Calendar.SECOND ) ;
Distance : 3

103
Tree	long result = iZone . convertLocalToUTC ( localInstant , AllowedSolutions.ANY_SIDE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , AllowedSolutions.ANY_SIDE ) ;
Distance : 3

104
Tree	long result = iZone . convertLocalToUTC ( localInstant , Locale.US ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Locale.US ) ;
Distance : 3

105
Tree	long result = iZone . convertLocalToUTC ( localInstant , FeatureSet.TYPESCRIPT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , FeatureSet.TYPESCRIPT ) ;
Distance : 3

106
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iOffsetParsed ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iOffsetParsed ) ;
Distance : 10

107
Tree	long result = iZone . convertLocalToUTC ( localInstant , TimeZones.GMT_ID ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TimeZones.GMT_ID ) ;
Distance : 3

108
Tree	long result = iZone . convertLocalToUTC ( localInstant , otherC.pole ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , otherC.pole ) ;
Distance : 3

109
Tree	long result = iZone . convertLocalToUTC ( localInstant , JUnitRule.Strictness.WARN ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , JUnitRule.Strictness.WARN ) ;
Distance : 3

110
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iChrono ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iChrono ) ;
Distance : 10

111
Tree	long result = iZone . convertLocalToUTC ( localInstant , TextFragment.DEFAULT_FONT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TextFragment.DEFAULT_FONT ) ;
Distance : 3

112
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.UNPARSEABLE_FRACTION_NUMBER ) ;
Distance : 3

113
Tree	long result = iZone . convertLocalToUTC ( localInstant , Mockito.RETURNS_SMART_NULLS ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Mockito.RETURNS_SMART_NULLS ) ;
Distance : 3

114
Tree	long result = iZone . convertLocalToUTC ( localInstant , Calendar.YEAR ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Calendar.YEAR ) ;
Distance : 3

115
Tree	long result = iZone . convertLocalToUTC ( localInstant , TimeUnit.SECONDS ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TimeUnit.SECONDS ) ;
Distance : 3

116
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , CheckLevel.ERROR ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , CheckLevel.ERROR ) ;
Distance : 10

117
Tree	long result = iZone . convertLocalToUTC ( localInstant , parsed.ast ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , parsed.ast ) ;
Distance : 3

118
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , binaryComparator ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , binaryComparator ) ;
Distance : 10

119
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , options.prettyPrint ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , options.prettyPrint ) ;
Distance : 10

120
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Locale.US ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Locale.US ) ;
Distance : 10

121
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , SelfInstanceTwoVarsReflectionTestFixture ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , SelfInstanceTwoVarsReflectionTestFixture ) ;
Distance : 10

122
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Calendar.SECOND ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Calendar.SECOND ) ;
Distance : 10

123
Tree	long result = iZone . convertLocalToUTC ( localInstant , typeArguments.length ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , typeArguments.length ) ;
Distance : 3

124
Tree	long result = iZone . convertLocalToUTC ( localInstant , CheckLevel.ERROR ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , CheckLevel.ERROR ) ;
Distance : 3

125
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , coefficients.length ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , coefficients.length ) ;
Distance : 10

126
Tree	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Util.CANNOT_CONVERT_YET ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Util.CANNOT_CONVERT_YET ) ;
Distance : 3

127
Tree	long result = iZone . convertLocalToUTC ( localInstant ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant ) ;
Distance : 4

128
Tree	long result = iZone . convertLocalToUTC ( this , localInstant , NUMBER_CONSTANT ) ;
Code	long result = iZone . convertLocalToUTC ( this , localInstant , NUMBER_CONSTANT ) ;
Distance : 3

129
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TimeUnit.SECONDS ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , TimeUnit.SECONDS ) ;
Distance : 10

130
Tree	final long result = iZone . convertLocalToUTC ( localInstant , false ) ;
Code	final long result = iZone . convertLocalToUTC ( localInstant , false ) ;
Distance : 3

131
Tree	long result = iZone . convertLocalToUTC ( localInstant , PolymerClassDefinition.DefinitionType.ObjectLiteral ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , PolymerClassDefinition.DefinitionType.ObjectLiteral ) ;
Distance : 3

132
Tree	long result = iZone . convertLocalToUTC ( localInstant , p2.vector ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , p2.vector ) ;
Distance : 3

133
Tree	long result = iZone . convertLocalToUTC ( localInstant , StringUtils.EMPTY ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , StringUtils.EMPTY ) ;
Distance : 3

134
Tree	long result = iZone . convertLocalToUTC ( localInstant , configureWith ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , configureWith ) ;
Distance : 3

135
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , dateParser ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , dateParser ) ;
Distance : 10

136
Tree	long result = iZone . convertLocalToUTC ( localInstant , LanguageMode.ECMASCRIPT6_TYPED ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LanguageMode.ECMASCRIPT6_TYPED ) ;
Distance : 3

137
Tree	long result = iZone . convertLocalToUTC ( localInstant , iValues.length ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , iValues.length ) ;
Distance : 3

138
Tree	long result = iZone . convertLocalToUTC ( localInstant , flags.outputWrapper ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , flags.outputWrapper ) ;
Distance : 3

139
Tree	long result = iZone . convertLocalToUTC ( localInstant , Calendar.MINUTE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Calendar.MINUTE ) ;
Distance : 3

140
Tree	long result = iZone . convertLocalToUTC ( localInstant , DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT ) ;
Distance : 3

141
Tree	long result = iZone . convertLocalToUTC ( localInstant , options.renamePrefixNamespace ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , options.renamePrefixNamespace ) ;
Distance : 3

142
Tree	long result = iZone . convertLocalToUTC ( localInstant , Strictness.SILENT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Strictness.SILENT ) ;
Distance : 3

143
Tree	long result = iZone . convertLocalToUTC ( localInstant , plane.w ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , plane.w ) ;
Distance : 3

144
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iZone ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iZone ) ;
Distance : 10

145
Tree	long result = iZone . convertLocalToUTC ( localInstant , Strictness.LENIENT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Strictness.LENIENT ) ;
Distance : 3

146
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , com.google.protobuf.GeneratedMessageV3 ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , com.google.protobuf.GeneratedMessageV3 ) ;
Distance : 10

147
Tree	long result = iZone . convertLocalToUTC ( localInstant , System.out ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , System.out ) ;
Distance : 3

148
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , values.length ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , values.length ) ;
Distance : 10

149
Tree	long result = iZone . convertLocalToUTC ( iZone , false ) ;
Code	long result = iZone . convertLocalToUTC ( iZone , false ) ;
Distance : 3

150
Tree	long result = iZone . convertLocalToUTC ( localInstant , Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Config.JsDocParsing.INCLUDE_DESCRIPTIONS_NO_WHITESPACE ) ;
Distance : 3

151
Tree	long result = iZone . convertLocalToUTC ( localInstant , DevNull.out ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , DevNull.out ) ;
Distance : 3

152
Tree	long result = iZone . convertLocalToUTC ( localInstant , CheckRequiresForConstructors.Mode.FULL_COMPILE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , CheckRequiresForConstructors.Mode.FULL_COMPILE ) ;
Distance : 3

153
Tree	long result = iZone . convertLocalToUTC ( localInstant , line.cos ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , line.cos ) ;
Distance : 3

154
Tree	long result = iZone . convertLocalToUTC ( localInstant , flags.j2clPassMode ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , flags.j2clPassMode ) ;
Distance : 3

155
Tree	long result = iZone . convertLocalToUTC ( localInstant , options.instrumentationTemplate ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , options.instrumentationTemplate ) ;
Distance : 3

156
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , ContinuousOutputFieldModel ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , ContinuousOutputFieldModel ) ;
Distance : 10

157
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , SerializableMode.ACROSS_CLASSLOADERS ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , SerializableMode.ACROSS_CLASSLOADERS ) ;
Distance : 10

158
Tree	long result = iZone . convertLocalToUTC ( localInstant , java.util.Locale.US ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , java.util.Locale.US ) ;
Distance : 3

159
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES ) ;
Distance : 10

160
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , IncrementalCheckMode.OFF ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , IncrementalCheckMode.OFF ) ;
Distance : 10

161
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , BitSet ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , BitSet ) ;
Distance : 10

162
Tree	long result = iZone . convertLocalToUTC ( localInstant , PropertyCollapseLevel.NONE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , PropertyCollapseLevel.NONE ) ;
Distance : 3

163
Tree	long result = iZone . convertLocalToUTC ( localInstant , that.date ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , that.date ) ;
Distance : 3

164
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , PropAccess.STRUCT ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , PropAccess.STRUCT ) ;
Distance : 10

165
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FeatureSet.ES3 ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , FeatureSet.ES3 ) ;
Distance : 10

166
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Long.MAX_VALUE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Long.MAX_VALUE ) ;
Distance : 10

167
Tree	long result = iZone . convertLocalToUTC ( localInstant , that.artifactPaint ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , that.artifactPaint ) ;
Distance : 3

168
Tree	long result = iZone . convertLocalToUTC ( localInstant , RotationConvention.FRAME_TRANSFORM ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , RotationConvention.FRAME_TRANSFORM ) ;
Distance : 3

169
Tree	long result = iZone . convertLocalToUTC ( localInstant , PropertyCollapseLevel.ALL ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , PropertyCollapseLevel.ALL ) ;
Distance : 3

170
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , YieldFinder ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , YieldFinder ) ;
Distance : 10

171
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LenientChronology ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , LenientChronology ) ;
Distance : 10

172
Tree	long result = iZone . convertLocalToUTC ( localInstant , Level.FINE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Level.FINE ) ;
Distance : 3

173
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MultiBackgroundInitializer.MultiBackgroundInitializerResults ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , MultiBackgroundInitializer.MultiBackgroundInitializerResults ) ;
Distance : 10

174
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , ListIterator ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , ListIterator ) ;
Distance : 10

175
Tree	long result = iZone . convertLocalToUTC ( localInstant , b1.value ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , b1.value ) ;
Distance : 3

176
Tree	long result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , localInstant ) ;
Code	long result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , localInstant ) ;
Distance : 4

177
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Void.TYPE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , Void.TYPE ) ;
Distance : 10

178
Tree	long result = iZone . convertLocalToUTC ( localInstant , BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , BaseAbstractUnivariateIntegrator.DEFAULT_RELATIVE_ACCURACY ) ;
Distance : 3

179
Tree	long result = iZone . convertLocalToUTC ( localInstant , Exec.INSTANCE ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Exec.INSTANCE ) ;
Distance : 3

180
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , destinationIndex ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , destinationIndex ) ;
Distance : 10

181
Tree	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Converter.CANNOT_CONVERT ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Es6ToEs3Converter.CANNOT_CONVERT ) ;
Distance : 3

182
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , printTimeZone ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , printTimeZone ) ;
Distance : 10

183
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , EvalMode.EVAL ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , EvalMode.EVAL ) ;
Distance : 10

184
Tree	long result = iZone . convertLocalToUTC ( localInstant , TimeUnit.MINUTES ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , TimeUnit.MINUTES ) ;
Distance : 3

185
Tree	long result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , iZone ) ;
Code	long result = iZone . convertLocalToUTC ( NUMBER_CONSTANT , iZone ) ;
Distance : 4

186
Tree	long result = iZone . convertLocalToUTC ( localInstant , originalRoot ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , originalRoot ) ;
Distance : 3

187
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , eras ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , eras ) ;
Distance : 10

188
Tree	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.DIMENSIONS_MISMATCH ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LocalizedFormats.DIMENSIONS_MISMATCH ) ;
Distance : 3

189
Tree	long result = iZone . convertLocalToUTC ( localInstant , options.appNameStr ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , options.appNameStr ) ;
Distance : 3

190
Tree	long result = iZone . convertLocalToUTC ( localInstant , a.value ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , a.value ) ;
Distance : 3

191
Tree	long result = iZone . convertLocalToUTC ( localInstant , c.seriesList ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , c.seriesList ) ;
Distance : 3

192
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DEFAULT_ROW_PREFIX ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , DEFAULT_ROW_PREFIX ) ;
Distance : 10

193
Tree	long result = iZone . convertLocalToUTC ( localInstant , DiagnosticGroups.STRICT_CHECK_TYPES ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , DiagnosticGroups.STRICT_CHECK_TYPES ) ;
Distance : 3

194
Tree	long result = iZone . convertLocalToUTC ( localInstant , Calendar.DAY_OF_WEEK ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , Calendar.DAY_OF_WEEK ) ;
Distance : 3

195
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , AllowedSolutions.ANY_SIDE ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , AllowedSolutions.ANY_SIDE ) ;
Distance : 10

196
Tree	long result = iZone . convertLocalToUTC ( localInstant , LanguageMode.ECMASCRIPT8 ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , LanguageMode.ECMASCRIPT8 ) ;
Distance : 3

197
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , RotationConvention.FRAME_TRANSFORM ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , RotationConvention.FRAME_TRANSFORM ) ;
Distance : 10

198
Tree	long result = iZone . convertLocalToUTC ( localInstant , values.length ) ;
Code	long result = iZone . convertLocalToUTC ( localInstant , values.length ) ;
Distance : 3

199
Tree	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iso ) ;
Code	long result = convertLocalToUTC ( localInstant , NUMBER_CONSTANT , iZone , result , iZone , iso ) ;
Distance : 10

========================================================================


========================================================================
Example Number: 114
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 115
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 116
Parent Code is: 
return iZone . convertLocalToUTC ( localInstant , false ) ;
-------------------------------------------------------------------------------
Child code is: 
return iZone . convertLocalToUTC ( localInstant , false , instant ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (41 (329{val=return}) (32 (800{val=iZone}) (235{val=.}) (802{val=convertLocalToUTC}) (214{val=(}) (800{val=localInstant}) (234{val=,}) (9{val=false}) (234{val=,}) (800{val=instant}) (215{val=)})) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/26/parent/src_main_java_org_joda_time_chrono_ZonedChronology.java
-------------------------------------------------------------------------------
Edit Distance : 2
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; setUp
Distance : 5

1
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; StrBuilder
Distance : 3

2
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getParent
Distance : 3

3
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; new
Distance : 3

4
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; STRING_CONSTANT
Distance : 3

5
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ,
Distance : 3

6
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; testSame
Distance : 3

7
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; field
Distance : 3

8
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; t
Distance : 3

9
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocation
Distance : 3

10
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertThat
Distance : 3

11
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setUp
Distance : 3

12
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; expected
Distance : 3

13
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; createIllegalArgumentException
Distance : 3

14
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; parent
Distance : 3

15
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fireChangeEvent
Distance : 3

16
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ArrayList
Distance : 3

17
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; x
Distance : 3

18
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; FastMath
Distance : 3

19
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; .
Distance : 3

20
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; IllegalArgumentException
Distance : 3

21
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; {
Distance : 3

22
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ()
Distance : 3

23
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; reportCodeChange
Distance : 3

24
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

25
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; invocations
Distance : 3

26
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; protected
Distance : 3

27
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; p
Distance : 3

28
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; externs
Distance : 5

29
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; join
Distance : 3

30
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; LINE_JOINER
Distance : 3

31
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; str
Distance : 3

32
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeUtil
Distance : 3

33
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; root
Distance : 3

34
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; value
Distance : 3

35
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; i
Distance : 3

36
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; false
Distance : 3

37
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; index
Distance : 3

38
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; int
Distance : 3

39
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !=
Distance : 3

40
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; nullNotPermitted
Distance : 3

41
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; []
Distance : 3

42
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; void
Distance : 3

43
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ==
Distance : 3

44
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; assertEquals
Distance : 3

45
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; !
Distance : 3

46
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; double
Distance : 3

47
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkState
Distance : 3

48
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; values
Distance : 3

49
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; super
Distance : 3

50
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NodeTraversal
Distance : 3

51
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; )
Distance : 3

52
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <blank>
Distance : 3

53
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getInstance
Distance : 3

54
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; *
Distance : 3

55
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; type
Distance : 3

56
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; m
Distance : 3

57
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; boolean
Distance : 3

58
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; paint
Distance : 3

59
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; JSType
Distance : 3

60
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; static
Distance : 3

61
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; array
Distance : 3

62
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; clone
Distance : 3

63
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; serialised
Distance : 3

64
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <>
Distance : 3

65
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; fail
Distance : 3

66
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; :
Distance : 3

67
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; result
Distance : 3

68
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; mode
Distance : 3

69
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; true
Distance : 3

70
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throws
Distance : 3

71
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getFirstChild
Distance : 3

72
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sb
Distance : 3

73
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; scope
Distance : 3

74
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; sqrt
Distance : 3

75
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; try
Distance : 3

76
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ;
Distance : 3

77
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; final
Distance : 3

78
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; NUMBER_CONSTANT
Distance : 3

79
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <s>
Distance : 3

80
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; (
Distance : 3

81
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; =
Distance : 3

82
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; }
Distance : 3

83
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; node
Distance : 3

84
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; List
Distance : 3

85
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Args
Distance : 3

86
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; <
Distance : 3

87
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; char
Distance : 3

88
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; else
Distance : 3

89
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; this
Distance : 3

90
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; getMessage
Distance : 3

91
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; stream
Distance : 3

92
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; matcher
Distance : 3

93
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; instant
Distance : 3

94
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; @
Distance : 3

95
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; test
Distance : 3

96
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; public
Distance : 3

97
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; >
Distance : 3

98
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; if
Distance : 3

99
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; setAcceptedLanguage
Distance : 3

100
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; return
Distance : 3

101
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; out
Distance : 3

102
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; catch
Distance : 5

103
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; compiler
Distance : 5

104
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; throw
Distance : 5

105
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant ) ; Assert
Distance : 6

106
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ?
Distance : 6

107
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Code	return convertLocalToUTC ( localInstant , localInstant ) ; TestUtils
Distance : 6

108
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; long
Code	return convertLocalToUTC ( localInstant , localInstant ) ; long
Distance : 6

109
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkNotNull
Distance : 6

110
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT6
Distance : 6

111
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; index
Code	return convertLocalToUTC ( localInstant , localInstant ) ; index
Distance : 6

112
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; node
Code	return convertLocalToUTC ( localInstant , localInstant ) ; node
Distance : 6

113
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setUp
Distance : 6

114
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; protected
Distance : 6

115
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant ) ; /
Distance : 6

116
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; [
Code	return convertLocalToUTC ( localInstant , localInstant ) ; [
Distance : 6

117
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; values
Code	return convertLocalToUTC ( localInstant , localInstant ) ; values
Distance : 6

118
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; out
Code	return convertLocalToUTC ( localInstant , localInstant ) ; out
Distance : 6

119
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; s
Code	return convertLocalToUTC ( localInstant , localInstant ) ; s
Distance : 6

120
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Code	return convertLocalToUTC ( localInstant , localInstant ) ; obj
Distance : 6

121
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stroke
Distance : 6

122
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Code	return convertLocalToUTC ( localInstant , localInstant ) ; traverseEs6
Distance : 6

123
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Code	return convertLocalToUTC ( localInstant , localInstant ) ; LanguageMode.ECMASCRIPT_2015
Distance : 6

124
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Code	return convertLocalToUTC ( localInstant , localInstant ) ; StringBuilder
Distance : 6

125
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; size
Code	return convertLocalToUTC ( localInstant , localInstant ) ; size
Distance : 6

126
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Code	return convertLocalToUTC ( localInstant , localInstant ) ; assertTrue
Distance : 6

127
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Code	return convertLocalToUTC ( localInstant , localInstant ) ; invocations
Distance : 6

128
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getArgumentMatcherStorage
Distance : 6

129
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getParent
Distance : 6

130
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; if
Code	return convertLocalToUTC ( localInstant , localInstant ) ; if
Distance : 6

131
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Assert
Distance : 5

132
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; Fraction
Distance : 5

133
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; ?
Distance : 5

134
Tree	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Code	return convertLocalToUTC ( localInstant , localInstant , false ) ; /
Distance : 5

135
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Code	return convertLocalToUTC ( localInstant , localInstant ) ; wanted
Distance : 6

136
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ex
Distance : 6

137
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeUtil
Distance : 6

138
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkArgument
Distance : 6

139
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; add
Code	return convertLocalToUTC ( localInstant , localInstant ) ; add
Distance : 6

140
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; root
Code	return convertLocalToUTC ( localInstant , localInstant ) ; root
Distance : 6

141
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; null
Code	return convertLocalToUTC ( localInstant , localInstant ) ; null
Distance : 6

142
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Code	return convertLocalToUTC ( localInstant , localInstant ) ; ]
Distance : 6

143
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Code	return convertLocalToUTC ( localInstant , localInstant ) ; throw
Distance : 6

144
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Code	return convertLocalToUTC ( localInstant , localInstant ) ; compiler
Distance : 6

145
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Code	return convertLocalToUTC ( localInstant , localInstant ) ; catch
Distance : 6

146
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; e
Code	return convertLocalToUTC ( localInstant , localInstant ) ; e
Distance : 6

147
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; +
Code	return convertLocalToUTC ( localInstant , localInstant ) ; +
Distance : 6

148
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; n
Code	return convertLocalToUTC ( localInstant , localInstant ) ; n
Distance : 6

149
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Code	return convertLocalToUTC ( localInstant , localInstant ) ; NodeTraversal
Distance : 6

150
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Code	return convertLocalToUTC ( localInstant , localInstant ) ; expected
Distance : 6

151
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Code	return convertLocalToUTC ( localInstant , localInstant ) ; {}
Distance : 6

152
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; public
Code	return convertLocalToUTC ( localInstant , localInstant ) ; public
Distance : 6

153
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; void
Code	return convertLocalToUTC ( localInstant , localInstant ) ; void
Distance : 6

154
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instance
Distance : 6

155
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Code	return convertLocalToUTC ( localInstant , localInstant ) ; alpha
Distance : 6

156
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; super
Code	return convertLocalToUTC ( localInstant , localInstant ) ; super
Distance : 6

157
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; /
Distance : 3

158
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; compiler
Distance : 3

159
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; String
Distance : 3

160
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; catch
Distance : 3

161
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; throw
Distance : 3

162
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; checkNotNull
Distance : 3

163
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; TestUtils
Distance : 3

164
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; length
Distance : 3

165
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; long
Distance : 3

166
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Assert
Distance : 3

167
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; contains
Distance : 3

168
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; Fraction
Distance : 3

169
Tree	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Code	return iZone . convertLocalToUTC ( STRING_CONSTANT , localInstant ) ; StrBuilder
Distance : 5

170
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; e
Distance : 5

171
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; wanted
Distance : 5

172
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; ex
Distance : 5

173
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; NodeUtil
Distance : 5

174
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; checkArgument
Distance : 5

175
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; add
Distance : 5

176
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; data
Distance : 5

177
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; root
Distance : 5

178
Tree	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Code	return iZone . convertLocalToUTC ( this , localInstant ) ; void
Distance : 5

179
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; ?
Distance : 3

180
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; isNormalBlock
Distance : 3

181
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; f
Distance : 3

182
Tree	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Code	return iZone . convertLocalToUTC ( localInstant , false ) ; options
Distance : 3

183
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Code	return convertLocalToUTC ( localInstant , localInstant ) ; checkState
Distance : 6

184
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; false
Code	return convertLocalToUTC ( localInstant , localInstant ) ; false
Distance : 6

185
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; double
Code	return convertLocalToUTC ( localInstant , localInstant ) ; double
Distance : 6

186
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; i
Code	return convertLocalToUTC ( localInstant , localInstant ) ; i
Distance : 6

187
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Code	return convertLocalToUTC ( localInstant , localInstant ) ; !=
Distance : 6

188
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; value
Code	return convertLocalToUTC ( localInstant , localInstant ) ; value
Distance : 6

189
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; T
Code	return convertLocalToUTC ( localInstant , localInstant ) ; T
Distance : 6

190
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; setAcceptedLanguage
Distance : 6

191
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Code	return convertLocalToUTC ( localInstant , localInstant ) ; abs
Distance : 6

192
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; matcher
Distance : 6

193
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Code	return convertLocalToUTC ( localInstant , localInstant ) ; reportMatcher
Distance : 6

194
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Code	return convertLocalToUTC ( localInstant , localInstant ) ; getMessage
Distance : 6

195
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Code	return convertLocalToUTC ( localInstant , localInstant ) ; stream
Distance : 6

196
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; else
Code	return convertLocalToUTC ( localInstant , localInstant ) ; else
Distance : 6

197
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Code	return convertLocalToUTC ( localInstant , localInstant ) ; instant
Distance : 6

198
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; *
Code	return convertLocalToUTC ( localInstant , localInstant ) ; *
Distance : 6

199
Tree	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Code	return convertLocalToUTC ( localInstant , localInstant ) ; optimizer
Distance : 6

========================================================================


========================================================================
Example Number: 117
Parent Code is: 
Partial newPartial = new Partial ( iChronology , newTypes , newValues ) ;
-------------------------------------------------------------------------------
Child code is: 
Partial newPartial = new Partial ( newTypes , newValues , iChronology ) ;
-------------------------------------------------------------------------------
Parent Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Partial})) (59 (800{val=newPartial}) (204{val==}) (14 (304{val=new}) (43 (801{val=Partial})) (214{val=(}) (800{val=iChronology}) (234{val=,}) (800{val=newTypes}) (234{val=,}) (800{val=newValues}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
Child Tree is : 
(AST_ROOT_SC2NF (60 (43 (801{val=Partial})) (59 (800{val=newPartial}) (204{val==}) (14 (304{val=new}) (43 (801{val=Partial})) (214{val=(}) (800{val=newTypes}) (234{val=,}) (800{val=newValues}) (234{val=,}) (800{val=iChronology}) (215{val=)}))) (227{val=;})))
-------------------------------------------------------------------------------
/zf8/sc2nf/CCRecom_exp/Defects4j/Time/4/parent/src_main_java_org_joda_time_Partial.java
-------------------------------------------------------------------------------
Edit Distance : 3
-------------------------------------------------------------------------------
Cadidate List Length : 200
Wrong
========================================================================
False

0
Tree	Partial newValues = Partial . is ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

1
Tree	Partial newValues = Partial . CheckProvidesCallback ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CheckProvidesCallback ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

2
Tree	Partial newPartial = Partial . hasDuplicateDeclarationSuppression ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . hasDuplicateDeclarationSuppression ( getChronology , NUMBER_CONSTANT ) ;
Distance : 6

3
Tree	Partial newValues = Partial . toChar ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . toChar ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

4
Tree	Partial newValues = Partial . filterReturningEmptyArray ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . filterReturningEmptyArray ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

5
Tree	Partial newValues = Partial . is ( PropertyCollapseLevel.ALL , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( PropertyCollapseLevel.ALL , NUMBER_CONSTANT ) ;
Distance : 7

6
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( CompositeFormat , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( CompositeFormat , NUMBER_CONSTANT ) ;
Distance : 7

7
Tree	Partial newValues = Partial . loadClass ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . loadClass ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

8
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues ) ;
Distance : 4

9
Tree	Partial newValues = Partial . createTranslatedShape ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createTranslatedShape ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

10
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( seconds , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( seconds , NUMBER_CONSTANT ) ;
Distance : 7

11
Tree	Partial newValues = Partial . is ( Nullability.IMPLICIT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Nullability.IMPLICIT , NUMBER_CONSTANT ) ;
Distance : 7

12
Tree	Partial newValues = Partial . makePersistentInput ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . makePersistentInput ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

13
Tree	Partial newValues = Partial . readFully ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . readFully ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

14
Tree	Partial newValues = Partial . is ( LocalizedFormats.INPUT_ARRAY , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( LocalizedFormats.INPUT_ARRAY , NUMBER_CONSTANT ) ;
Distance : 7

15
Tree	Partial newPartial = Partial . forName ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . forName ( getChronology , NUMBER_CONSTANT ) ;
Distance : 6

16
Tree	Partial newValues = Partial . DefaultNameGenerator ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . DefaultNameGenerator ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

17
Tree	Partial newValues = Partial . RenameMessagesVisitor ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . RenameMessagesVisitor ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

18
Tree	Partial newValues = Partial . forName ( CompositeFormat , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( CompositeFormat , NUMBER_CONSTANT ) ;
Distance : 7

19
Tree	Partial newValues = Partial . enumLiteralHasKey ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . enumLiteralHasKey ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

20
Tree	Partial newValues = Partial . createLineRegion ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLineRegion ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

21
Tree	Partial newValues = Partial . createLineRegion ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLineRegion ( hours , NUMBER_CONSTANT ) ;
Distance : 7

22
Tree	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Distance : 7

23
Tree	Partial newValues = Partial . MarsagliaLogNormalSampler ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . MarsagliaLogNormalSampler ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

24
Tree	Partial newValues = Partial . isA ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . isA ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

25
Tree	Partial newValues = Partial . createDouble ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createDouble ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

26
Tree	Partial newValues = Partial . enumLiteralHasKey ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . enumLiteralHasKey ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

27
Tree	Partial newValues = Partial . getTransform ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getTransform ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

28
Tree	Partial newValues = Partial . CleanTraceRealMethod ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CleanTraceRealMethod ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

29
Tree	Partial newPartial = Partial . createLong ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . createLong ( getChronology , NUMBER_CONSTANT ) ;
Distance : 6

30
Tree	Partial newValues = Partial . extractCauseUnchecked ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extractCauseUnchecked ( hours , NUMBER_CONSTANT ) ;
Distance : 7

31
Tree	Partial newValues = Partial . thenTry ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . thenTry ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

32
Tree	Partial newValues = Partial . is ( FastDateParser.JAPANESE_IMPERIAL , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( FastDateParser.JAPANESE_IMPERIAL , NUMBER_CONSTANT ) ;
Distance : 7

33
Tree	Partial newValues = Partial . createLong ( CompositeFormat , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( CompositeFormat , NUMBER_CONSTANT ) ;
Distance : 7

34
Tree	Partial newValues = Partial . getOrMakeMock ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getOrMakeMock ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

35
Tree	Partial newValues = Partial . createLong ( seconds , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( seconds , NUMBER_CONSTANT ) ;
Distance : 7

36
Tree	Partial newValues = Partial . is ( LocalizedFormats.SIMPLE_MESSAGE , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( LocalizedFormats.SIMPLE_MESSAGE , NUMBER_CONSTANT ) ;
Distance : 7

37
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Distance : 7

38
Tree	Partial newValues = Partial . rotateShape ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . rotateShape ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

39
Tree	Partial newValues = Partial . getFragmentInMinutes ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getFragmentInMinutes ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

40
Tree	Partial newValues = Partial . is ( years , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( years , NUMBER_CONSTANT ) ;
Distance : 7

41
Tree	Partial newValues = Partial . createDouble ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createDouble ( hours , NUMBER_CONSTANT ) ;
Distance : 7

42
Tree	Partial newValues = Partial . is ( FeatureSet.TYPESCRIPT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( FeatureSet.TYPESCRIPT , NUMBER_CONSTANT ) ;
Distance : 7

43
Tree	Partial newValues = Partial . getBestLValueName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getBestLValueName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

44
Tree	Partial newValues = Partial . forName ( seconds , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( seconds , NUMBER_CONSTANT ) ;
Distance : 7

45
Tree	Partial newValues = Partial . is ( Feature.STRING_CONTINUATION , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Feature.STRING_CONTINUATION , NUMBER_CONSTANT ) ;
Distance : 7

46
Tree	Partial newPartial = Partial . createLong ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . createLong ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 6

47
Tree	Partial newValues = Partial . getAuthor ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getAuthor ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

48
Tree	Partial newValues = Partial . RectangularCholeskyDecomposition ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . RectangularCholeskyDecomposition ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

49
Tree	Partial newValues = Partial . centers ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . centers ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

50
Tree	Partial newValues = newValues . is ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = newValues . is ( hours , NUMBER_CONSTANT ) ;
Distance : 8

51
Tree	Partial newValues = Partial . SlidingCategoryDataset ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . SlidingCategoryDataset ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

52
Tree	Partial newValues = Partial . makePersistentInput ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . makePersistentInput ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

53
Tree	Partial newValues = Partial . createLong ( getReadableInstant , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( getReadableInstant , NUMBER_CONSTANT ) ;
Distance : 7

54
Tree	Partial newValues = Partial . useEval ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . useEval ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

55
Tree	Partial newValues = Partial . toStringExclude ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . toStringExclude ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

56
Tree	Partial newValues = Partial . DefaultNameGenerator ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . DefaultNameGenerator ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

57
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( obj1.props , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( obj1.props , NUMBER_CONSTANT ) ;
Distance : 7

58
Tree	Partial newValues = Partial . is ( cast , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( cast , NUMBER_CONSTANT ) ;
Distance : 7

59
Tree	Partial newPartial = Partial . forName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . forName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 6

60
Tree	Partial newValues = Partial . compareFiles ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . compareFiles ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

61
Tree	Partial newValues = Partial . calculateStackTotal ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . calculateStackTotal ( hours , NUMBER_CONSTANT ) ;
Distance : 7

62
Tree	Partial newValues = Partial . RenameMessagesVisitor ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . RenameMessagesVisitor ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

63
Tree	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Distance : 6

64
Tree	Partial newValues = Partial . getSmallestCoveringDependency ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getSmallestCoveringDependency ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

65
Tree	Partial newValues = Partial . extendLine ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extendLine ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

66
Tree	Partial newValues = Partial . accept ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . accept ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

67
Tree	Partial newValues = Partial . toChar ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . toChar ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

68
Tree	Partial newValues = Partial . filterReturningEmptyArray ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . filterReturningEmptyArray ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

69
Tree	Partial newPartial = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 6

70
Tree	Partial newValues = Partial . setAccessible ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . setAccessible ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

71
Tree	Partial newValues = Partial . CheckProvidesCallback ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CheckProvidesCallback ( hours , NUMBER_CONSTANT ) ;
Distance : 7

72
Tree	Partial newValues = Partial . is ( getDefaultNumberFormat , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( getDefaultNumberFormat , NUMBER_CONSTANT ) ;
Distance : 7

73
Tree	Partial newValues = Partial . ModuleLoader ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . ModuleLoader ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

74
Tree	Partial newValues = Partial . flatten ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . flatten ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

75
Tree	Partial newValues = Partial . createTranslatedShape ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createTranslatedShape ( hours , NUMBER_CONSTANT ) ;
Distance : 7

76
Tree	Partial newValues = Partial . nextFloat ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . nextFloat ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

77
Tree	Partial newValues = Partial . is ( months , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( months , NUMBER_CONSTANT ) ;
Distance : 7

78
Tree	Partial newValues = Partial . rotateShape ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . rotateShape ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

79
Tree	Partial newValues = Partial . paletteName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . paletteName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

80
Tree	Partial newValues = newValues . is ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = newValues . is ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 8

81
Tree	Partial newValues = Partial . is ( KeyedObjects , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( KeyedObjects , NUMBER_CONSTANT ) ;
Distance : 7

82
Tree	Partial newValues = Partial . addLast ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . addLast ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

83
Tree	Partial newValues = Partial . trySubstituteEmptyFunction ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . trySubstituteEmptyFunction ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

84
Tree	Partial newValues = Partial . is ( MeterInterval , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( MeterInterval , NUMBER_CONSTANT ) ;
Distance : 7

85
Tree	Partial newValues = Partial . createConfig ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createConfig ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

86
Tree	Partial newValues = Partial . is ( now , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( now , NUMBER_CONSTANT ) ;
Distance : 7

87
Tree	Partial newValues = Partial . calculateStackTotal ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . calculateStackTotal ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

88
Tree	Partial newValues = Partial . copySelf ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . copySelf ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

89
Tree	Partial newValues = Partial . createFloat ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createFloat ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

90
Tree	Partial newValues = Partial . createLong ( obj1.props , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( obj1.props , NUMBER_CONSTANT ) ;
Distance : 7

91
Tree	Partial newValues = Partial . inferFrom ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . inferFrom ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

92
Tree	Partial newValues = Partial . readFully ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . readFully ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

93
Tree	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Distance : 7

94
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; <
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; <
Distance : 4

95
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; final
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; final
Distance : 4

96
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; return
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; return
Distance : 4

97
Tree	Partial newValues = Partial . is ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( hours , NUMBER_CONSTANT ) ;
Distance : 7

98
Tree	Partial newValues = Partial . createLong ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

99
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

100
Tree	Partial newValues = Partial . forName ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

101
Tree	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

102
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

103
Tree	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

104
Tree	Partial newValues = Partial . is ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( LanguageMode.ECMASCRIPT8 , NUMBER_CONSTANT ) ;
Distance : 7

105
Tree	Partial newPartial = Partial . is ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . is ( getChronology , NUMBER_CONSTANT ) ;
Distance : 6

106
Tree	Partial newValues = Partial . is ( CompositeFormat , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( CompositeFormat , NUMBER_CONSTANT ) ;
Distance : 7

107
Tree	Partial newValues = Partial . is ( seconds , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( seconds , NUMBER_CONSTANT ) ;
Distance : 7

108
Tree	Partial newValues = Partial . extractCauseUnchecked ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extractCauseUnchecked ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

109
Tree	Partial newValues = Partial . createDouble ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createDouble ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

110
Tree	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 6

111
Tree	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

112
Tree	Partial newValues = Partial . is ( obj1.props , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( obj1.props , NUMBER_CONSTANT ) ;
Distance : 7

113
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; *
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; *
Distance : 4

114
Tree	Partial newValues = Partial . extractCauseUnchecked ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extractCauseUnchecked ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

115
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; join
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; join
Distance : 4

116
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; paint
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; paint
Distance : 4

117
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Exception
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Exception
Distance : 4

118
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; c
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; c
Distance : 4

119
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; verify
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; verify
Distance : 4

120
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; v
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; v
Distance : 4

121
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Node
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Node
Distance : 4

122
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Integer
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Integer
Distance : 4

123
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; lines
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; lines
Distance : 4

124
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; fail
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; fail
Distance : 4

125
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; List
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; List
Distance : 4

126
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; <>
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; <>
Distance : 4

127
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Args
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; Args
Distance : 4

128
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; :
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; :
Distance : 4

129
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; try
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; try
Distance : 4

130
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; result
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; result
Distance : 4

131
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; length
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; length
Distance : 4

132
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; fireChangeEvent
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; fireChangeEvent
Distance : 4

133
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; serialised
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; serialised
Distance : 4

134
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; type
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; type
Distance : 4

135
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; getInstance
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; getInstance
Distance : 4

136
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; m
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; m
Distance : 4

137
Tree	Partial newValues = Partial . createLineRegion ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLineRegion ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

138
Tree	Partial newValues = Partial . CheckProvidesCallback ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CheckProvidesCallback ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

139
Tree	Partial newValues = Partial . createTranslatedShape ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createTranslatedShape ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

140
Tree	Partial newValues = Partial . getOrMakeMock ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getOrMakeMock ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

141
Tree	Partial newValues = Partial . is ( Fraction.ZERO , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Fraction.ZERO , NUMBER_CONSTANT ) ;
Distance : 7

142
Tree	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . is ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 6

143
Tree	Partial newValues = Partial . calculateStackTotal ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . calculateStackTotal ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

144
Tree	Partial newValues = Partial . is ( TestGJChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( TestGJChronology , NUMBER_CONSTANT ) ;
Distance : 7

145
Tree	Partial newValues = Partial . is ( Locale.US , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Locale.US , NUMBER_CONSTANT ) ;
Distance : 7

146
Tree	Partial newValues = Partial . getFragmentInMinutes ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getFragmentInMinutes ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

147
Tree	Partial newValues = Partial . getAuthor ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getAuthor ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

148
Tree	Partial newValues = Partial . is ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( LocalizedFormats.OUT_OF_RANGE_SIMPLE , NUMBER_CONSTANT ) ;
Distance : 7

149
Tree	Partial newValues = Partial . RectangularCholeskyDecomposition ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . RectangularCholeskyDecomposition ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

150
Tree	Partial newValues = Partial . is ( Decomposition.QR , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Decomposition.QR , NUMBER_CONSTANT ) ;
Distance : 7

151
Tree	Partial newValues = Partial . MarsagliaLogNormalSampler ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . MarsagliaLogNormalSampler ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

152
Tree	Partial newValues = Partial . getBestLValueName ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getBestLValueName ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

153
Tree	Partial newValues = Partial . extractCauseUnchecked ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extractCauseUnchecked ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

154
Tree	Partial newValues = Partial . is ( Any.ANY , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Any.ANY , NUMBER_CONSTANT ) ;
Distance : 7

155
Tree	Partial newValues = Partial . is ( ComposableFunction.RINT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( ComposableFunction.RINT , NUMBER_CONSTANT ) ;
Distance : 7

156
Tree	Partial newPartial = Partial . is ( hours , NUMBER_CONSTANT ) ;
Code	Partial newPartial = Partial . is ( hours , NUMBER_CONSTANT ) ;
Distance : 6

157
Tree	Partial newValues = Partial . loadClass ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . loadClass ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

158
Tree	Partial newValues = Partial . is ( selectChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( selectChronology , NUMBER_CONSTANT ) ;
Distance : 7

159
Tree	Partial newValues = Partial . thenTry ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . thenTry ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

160
Tree	Partial newValues = newValues . is ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = newValues . is ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 8

161
Tree	Partial newValues = Partial . CleanTraceRealMethod ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CleanTraceRealMethod ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

162
Tree	Partial newValues = Partial . getTransform ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getTransform ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

163
Tree	Partial newValues = Partial . createLong ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLong ( hours , NUMBER_CONSTANT ) ;
Distance : 7

164
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

165
Tree	Partial newValues = Partial . createDouble ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createDouble ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

166
Tree	Partial newValues = Partial . is ( getReadableInstant , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( getReadableInstant , NUMBER_CONSTANT ) ;
Distance : 7

167
Tree	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( LanguageMode.ECMASCRIPT_2016 , NUMBER_CONSTANT ) ;
Distance : 7

168
Tree	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . hasDuplicateDeclarationSuppression ( hours , NUMBER_CONSTANT ) ;
Distance : 7

169
Tree	Partial newValues = newValues . is ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = newValues . is ( getChronology , NUMBER_CONSTANT ) ;
Distance : 8

170
Tree	Partial newValues = Partial . is ( minutes , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( minutes , NUMBER_CONSTANT ) ;
Distance : 7

171
Tree	Partial newValues = Partial . is ( Feature.DESTRUCTURING , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( Feature.DESTRUCTURING , NUMBER_CONSTANT ) ;
Distance : 7

172
Tree	Partial newValues = Partial . extendLine ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extendLine ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

173
Tree	Partial newValues = Partial . calculateStackTotal ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . calculateStackTotal ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

174
Tree	Partial newValues = Partial . createLineRegion ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createLineRegion ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

175
Tree	Partial newValues = Partial . CheckProvidesCallback ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . CheckProvidesCallback ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

176
Tree	Partial newValues = Partial . createTranslatedShape ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . createTranslatedShape ( LanguageMode.ECMASCRIPT_NEXT , NUMBER_CONSTANT ) ;
Distance : 7

177
Tree	Partial newValues = Partial . getAuthor ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . getAuthor ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

178
Tree	Partial newValues = Partial . RectangularCholeskyDecomposition ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . RectangularCholeskyDecomposition ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

179
Tree	Partial newValues = Partial . is ( getMaximumValue , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . is ( getMaximumValue , NUMBER_CONSTANT ) ;
Distance : 7

180
Tree	Partial newValues = Partial . extendLine ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . extendLine ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

181
Tree	Partial newValues = Partial . paletteName ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . paletteName ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

182
Tree	Partial newValues = Partial . isA ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . isA ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

183
Tree	Partial newValues = Partial . forName ( hours , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . forName ( hours , NUMBER_CONSTANT ) ;
Distance : 7

184
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; {}
Code	Partial newValues = new Partial ( iChronology , newValues , newValues ) ; {}
Distance : 4

185
Tree	Partial newValues = Partial . cluster ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = Partial . cluster ( getChronology , NUMBER_CONSTANT ) ;
Distance : 7

186
Tree	Partial newValues = newValues . createLong ( getChronology , NUMBER_CONSTANT ) ;
Code	Partial newValues = newValues . createLong ( getChronology , NUMBER_CONSTANT ) ;
Distance : 8

187
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . newBuilder () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . newBuilder () ) ;
Distance : 8

188
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , DEFAULT_ROW_PREFIX () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , DEFAULT_ROW_PREFIX () ) ;
Distance : 6

189
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues , getRight () ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues , getRight () ) ;
Distance : 5

190
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , getConfiguration () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , getConfiguration () ) ;
Distance : 6

191
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . copySelf () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . copySelf () ) ;
Distance : 8

192
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , TextAnchor.CENTER () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , TextAnchor.CENTER () ) ;
Distance : 6

193
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues () ) ;
Distance : 6

194
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , FieldUtils () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , FieldUtils () ) ;
Distance : 6

195
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues , newValues . timeParser () ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues , newValues . timeParser () ) ;
Distance : 7

196
Tree	Partial newValues = new Partial ( iChronology . copySelf () , iChronology , newValues ) ;
Code	Partial newValues = new Partial ( iChronology . copySelf () , iChronology , newValues ) ;
Distance : 7

197
Tree	Partial newValues = new Partial ( iChronology , newTypes , newValues , getLeft () ) ;
Code	Partial newValues = new Partial ( iChronology , newTypes , newValues , getLeft () ) ;
Distance : 5

198
Tree	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . getMatchers () ) ;
Code	Partial newValues = new Partial ( iChronology , newValues , newValues , newValues . getMatchers () ) ;
Distance : 8

199
Tree	Partial newPartial = new Partial ( iChronology , newValues , newValues , values.length () ) ;
Code	Partial newPartial = new Partial ( iChronology , newValues , newValues , values.length () ) ;
Distance : 5

========================================================================


